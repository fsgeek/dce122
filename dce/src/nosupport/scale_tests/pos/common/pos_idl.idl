/** POS_IDL.IDL ******************************************************/
/*** IBM Corporation                                               ***/
/*** OS/2-AIX PSP Systems Performance                              ***/
/*** Department 57LS                                               ***/
/*** 11400 Burnet Road                                             ***/
/*** Austin Texas 78759                                            ***/
/*** Bob Russell, ZIP 9151                                         ***/
/*** (512) 838-0844 TL 678-0844                                    ***/
/*** robert_russell@vnet.ibm.com                                   ***/
/*********************************************************************/
/*****************************************************************************
 * COPYRIGHT:                                                                *
 * ----------                                                                *
 * Copyright (C) International Business Machines Corp., 1993,1994,1995,1996. *
 *                                                                           *
 * DISCLAIMER OF WARRANTIES:                                                 *
 * -------------------------                                                 *
 * The following [enclosed] code is sample code created by IBM               *
 * Corporation.  This sample code is not part of any standard IBM product    *
 * and is provided to you solely for the purpose of assisting you in the     *
 * development of your applications.  The code is provided "AS IS",          *
 * without warranty of any kind.  IBM shall not be liable for any damages    *
 * arising out of your use of the sample code, even if they have been        *
 * advised of the possibility of such damages.                               *
 *****************************************************************************/
/*
 * 09/02/92       Russell  Initial Creation
 * 11/28/92       Russell  Completed Test and Debug of PTQ
 * 12/11/92       Russell  Completed Initial code for Catalog Retrival
#define IN [in]
#define OUT [out]
 ****************************************************************************/


[
    uuid(334A2E24-0000-0000-0D00-379834040000),
    version(0)  /*,*/
/*    endpoint("ncadg_ip_udp:[1000]", "ncacn_ip_tcp:[2000]")*/
]

interface PointOfSale
{
    import "pos_def.idl";


    [idempotent]                     /* Price Table Lookup */
    void rpc_PTQ
    (
        [in]  handle_t                       hBinding,
        [in]  long                           in_key,
        [in]  unsigned short                 ptq_len,
        [out] long                           *appl_time,
        [out] ITEM_ROW_IDL          *ptq_buf
    );

    [idempotent]                     /* Catalog Page Retrieval */
    void rpc_CAT
    (
        [in]  handle_t                       hBinding,
        [in]  unsigned short                 catalog_code,
        [in]  unsigned short                 sizname,
        [in]  unsigned short                 maxname,
        [in,  last_is(sizname), max_is(maxname)] byte filename[],
        [in, out]  unsigned short            *cat_len,
        [out] long                           *appl_time,
        [out, size_is(*cat_len)] byte        *cat_buf
    );

    [idempotent]                     /* Customer Record Lookup */
    void rpc_CMR
    (
        [in]  handle_t                       hBinding,
        [in]  long                           in_area_code,
        [in]  long                           in_phone_no,
        [in]  unsigned short                 cmr_len,
        [out] long                           *appl_time,
        [out] CUST_DATA_IDL                     *cmr_buf,
        [out] long                              *new_think_time,
        [out] unsigned long                     *new_auth_lvl,
        [out] unsigned short                    *flag_1,
        [out] unsigned short                    *flag_2,
        [out] unsigned short                    *flag_3,
        [out] unsigned short                    *flag_4,
        [out] unsigned short                    *flag_5,
        [out] unsigned short                    *flag_6,
        [out] unsigned short                    *flag_7,
        [out] unsigned short                    *flag_8
    );


    [idempotent]                     /* Transfer performance data to server */
    void rpc_SAV
    (
        [in] handle_t hBinding,
        [in] unsigned short in_len,
        [in] unsigned short sendmax,
        [out] long                           *appl_time,
        [in] SAVE_DATA_IDL *sendbuf,
        [out] unsigned long *ret_code
    );

    [idempotent]                     /* Transfer performance data to server */
    void file_tran
    (
        [in] handle_t hBinding,
        [in] unsigned short sizname,
        [in] unsigned short maxname,
        [in, last_is(sizname), max_is(maxname)] byte filename[],
        [in] unsigned short in_len,
        [in] unsigned short sendmax,
        [in, last_is(in_len), max_is(sendmax)]  byte sendbuf[]
    );

    [idempotent]
    void char_op
    (
        [in] handle_t hBinding,
        [in] unsigned short in_len,
        [in, string, max_is(in_len)]  unsigned char * sendbuf,
        [in] unsigned short out_len,
        [out, string, max_is(out_len)] unsigned char * recvbuf
    );

    [idempotent]                     /* Server Stop Listening */
    void suicide
    (
        [in] handle_t       hBinding
    );

    void pos_CNTRL
    (
        [in] handle_t       hBinding,
        [in] unsigned short                     flag_1,
        [in] unsigned short                     flag_2,
        [in] unsigned short                     flag_3,
        [in] unsigned short                     flag_4,
        [in] unsigned short                     flag_5,
        [in] unsigned short                     flag_6,
        [in] unsigned short                     flag_7,
        [in] unsigned short                     flag_8,
        [in] long                               think_time,
        [in] unsigned long                      auth_lvl,
        [out] double                            *CSPM
    );
}
