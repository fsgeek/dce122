
             Certification API Functional Verification Test Plan
             ---------------------------------------------------

                             Draft A, 5/8/96


1. Purpose

    Verify that applications can use the DCE Certification API
    to retrieve and verify certificates using the supplied
    policies, crypto algorithms and certificate database
    implementations.

    As time permits, verify that additional policies, crypto
    algorithms and certificate database implementations may be
    installed.


2. References

    OSF RFC 80.last:   DCE Certification API
    X.509


3. Features to be tested

    Success cases:

    Retrieval of user public keys from the registry (DCE certification
    policy).  Retrieval of public-keys from certificates stored in the
    directory, where signatory is trusted.  Retrieval of public-keys
    from certificates stored in the directory, where signatory trust must
    be established by retrieval of other certificates.

    Failure cases:

    Retrieval of public key using DCE certification policy for valid user
    who does not have a PK entry in the registry.  Retrieval of public-key
    using certificate-based policy where principal certificate does not exist.
    Retrieval of public-key using certificate-based policy where principal
    certificate signature is invalid.  Retrieval of public-key using
    certificate-based policy where principal certificate has expired.
    Retrieval of public-key using certificate-based policy where required
    previous certificate does not exist.  Retrieval of public-key using
    certificate-based policy where required previous certificate signature
    is invalid.  Retrieval of public-key using certificate-based policy where
    required previous certificate has expired.  Retrieval of public-key using
    certificate-based policy where required CRL does not exist.  Retrieval of
    public-key using certificate-based policy where CRL has revoked a required
    certificate.


4. Approach

    The functional testing will be implemented in a single program, based
    on the GSSAPI test suite, which will be built so that it can either
    be run manually to perform a subset of tests, or automatically under
    TET to run all functional tests.  The TET set-up code will use
    certificates generated by a "toy" CA, and will install them in the
    directory.


5. Test Coverage Requirements

    All high-level API functions will be tested.  In addition to test
    cases that verify normal functionality, key failure cases will be
    exercised.  As time permits, additional negative tests will be
    added to improve segment coverage.


6. Hardware and Software Requirements

    A single AIX reference platform with an installed DCE system will be
    required in order to run the test suite.  The X.500 GDS may also be
    a requirement, although this has not yet been determined.


7. Staffing and Schedule

    John Wray (wray@tuxedo.enet.dec.com)

    The test suite will be delivered at the same time as the certification
    API itself.


