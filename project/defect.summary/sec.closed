CR Number                     : 13632
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : registry desigante can hang the replica becoming the master
Reported Date                 : 9/26/96
Found in Baseline             : 1.1
Found Date                    : 9/26/96
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : rs_master_change.c, rs_rep_util.c
Diff supplied by              : provider
Diff release                  : 1.2.2
Sensitivity                   : public

[9/26/96 public]

The problem that we were seeing was that the replica becoming master during
a change master was deadlocking. This was caused by taking (and promoting)
the global write lock and then having an RPC to the old master call back
into ourselves for a new ticket. This deadlocked these two threads and kept
the DB locked. It doesn't take long for us to run out of call executor
threads from there.

The fix was to reorganize the code so that the call to the master to get
the current replist was done before promoting the lock (in
read_master_replist). The lock was then promoted and the list of replicas
was written to the local db (in write_master_replist).

Two routines were created to assist in building the replica list,
rs_rep_util_rep_item_copy() and rs_rep_util_copy_twrs().

Diffs follow. Note that the diff numbers may not correspond to DCE 1.2.2 line 
numbers. Because DCE 1.2.2 is nearly frozen, new changes aren't allowed. These 
are diffs from a different source base.

Affected files:

src/security/h/rs_rep_util.h
src/security/h/rs_rep_pvt.h
src/security/server/rs/rs_master_change.c
src/security/server/rs/rs_rep_util.c

*** rs_rep_util.h@@/main/HPDCE02/LATEST	Mon May 15 17:02:01 1995
--- rs_rep_util.h	Wed Jun 12 12:42:18 1996
***************
*** 8,13 ****
--- 8,19 ----
  /*
   * HISTORY
   * $Log:	c013632,v $
# Revision 1.3  96/11/13  13:13:12  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [jrr 11/13/96 public]
# 
# Revision 1.2  96/09/26  15:49:25  root
# changed fields: Status  Fix By Baseline  Fixed In Baseline  
# 
# Revision 1.1  96/09/26  11:45:40  root
# new CR
# 
+  * Revision /main/HPDCE02/jrr_davis_4/2  1996/06/11  21:19 UTC  jrr
+  * 	Add code review changes.
+  * 
+  * Revision /main/HPDCE02/jrr_davis_4/1  1996/06/11  17:19 UTC  jrr
+  * 	Add prototype for rs_rep_util_copy_twrs() and rs_rep_util_rep_item_copy().
+  * 
   * Revision /main/HPDCE02/1  1995/05/15  21:02 UTC  greg
   * 	Create SEC_migrate_merge mainline from SEC_migrate and HPDCE02.
   * 	[1995/04/22  13:34 UTC  greg  /main/SEC_migrate_merge/1]
***************
*** 69,74 ****
--- 75,91 ----
  #include <rs_rep_pvt.h>
  
  
+ /* 
+  * Local macros
+  */
+ #define TOWER_VEC_FREE(routine, towerv) \
+ 	do {	unsigned32 i; \
+ 		for (i=0; i<towerv->num_towers; i++) \
+ 			routine(towerv->towers[i]); \
+ 		routine(towerv); \
+ 	} while (0)
+ 
+ 
  /* rs_rep_util_check_caller
   *
   * Check that the caller of a client operation
***************
*** 126,131 ****
--- 143,165 ----
  );
  
  /*
+  * rs_rep_util_rep_item_copy
+  *
+  * Copy a src rep_item_t into a dest rep_item_t
+  */
+ void rs_rep_util_rep_item_copy (
+     uuid_p_t                    rep_id,
+     rs_replica_name_p_t         rep_name,
+     rs_replica_twr_vec_p_t      rep_twrs,
+     rs_replica_prop_t           prop_type,
+     rs_replica_prop_t           prev_prop_type,
+     uuid_p_t                    init_id,
+     rs_rep_prop_mgt_handle_t    prop_mgt_h,
+     rs_replica_mgt_item_t       **rp,
+     error_status_t              *st
+ );
+ 
+ /*
   *  rs_rep_util_rep_buff_pack 
   *
   *  Pack a replica's name and tower set (ie. its
***************
*** 181,186 ****
--- 215,229 ----
  void rs_rep_util_rep_buff_free (
      void                        **buff,         /* [in, out] */
      error_status_t              *st             /* [out] */
+ );
+ 
+ /*
+  * Copy towers from a src twr_vec_t to a dest twr_vec_t
+  */
+ void rs_rep_util_copy_twrs (
+     rs_replica_twr_vec_p_t      src,    /* [in] */
+     rs_replica_twr_vec_p_t      *dest,  /* [out] */
+     error_status_t              *st     /* [out] */
  );
  
  /*





*** rs_rep_pvt.h@@/main/HPDCE02/LATEST	Mon May 15 17:01:52 1995
--- rs_rep_pvt.h	Tue Jun 11 13:19:00 1996
***************
*** 8,13 ****
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c013632,v $
# Revision 1.3  96/11/13  13:13:12  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [jrr 11/13/96 public]
# 
# Revision 1.2  96/09/26  15:49:25  root
# changed fields: Status  Fix By Baseline  Fixed In Baseline  
# 
# Revision 1.1  96/09/26  11:45:40  root
# new CR
# 
+  * Revision /main/HPDCE02/jrr_davis_4/1  1996/06/11  17:19 UTC  jrr
+  * 	Create rs_replica_mgt_item_list_t.
+  * 
   * Revision /main/HPDCE02/1  1995/05/15  21:01 UTC  greg
   * 	Create SEC_migrate_merge mainline from SEC_migrate and HPDCE02.
   * 	[1995/04/22  13:34 UTC  greg  /main/SEC_migrate_merge/1]
***************
*** 128,133 ****
--- 131,143 ----
      rs_rep_mgt_item_alloc_t     alloc_type; 
      rs_rep_prop_mgt_handle_t    prop_mgt;   /* replica's prop mgt info (volatile) */
  } rs_replica_mgt_item_t, *rs_replica_mgt_item_p_t;
+ 
+ /* Structure for moving lists of rs_replica_mgt_item_t's around */
+ typedef struct rs_replica_mgt_item_list_s_t {
+     rs_replica_mgt_item_p_t             item;
+     struct rs_replica_mgt_item_list_s_t *next;
+ } rs_replica_mgt_item_list_t;
+ 
  
  /*
   *  opaque packed replica information which





*** rs_master_change.c@@/main/HPDCE02/LATEST	Mon May 15 17:12:33 1995
--- rs_master_change.c	Wed Jun 12 12:41:38 1996
***************
*** 8,13 ****
--- 8,22 ----
  /*
   * HISTORY
   * $Log:	c013632,v $
# Revision 1.3  96/11/13  13:13:12  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [jrr 11/13/96 public]
# 
# Revision 1.2  96/09/26  15:49:25  root
# changed fields: Status  Fix By Baseline  Fixed In Baseline  
# 
# Revision 1.1  96/09/26  11:45:40  root
# new CR
# 
+  * Revision /main/HPDCE02/jrr_davis_4/3  1996/06/11  21:18 UTC  jrr
+  * 	Add code review changes. Mostly malloc failure detection.
+  * 
+  * Revision /main/HPDCE02/jrr_davis_4/2  1996/06/11  18:12 UTC  jrr
+  * 	More changes to prevent deadlock during master change.
+  * 
+  * Revision /main/HPDCE02/jrr_davis_4/1  1996/06/11  17:16 UTC  jrr
+  * 	Reorganize the code to allow RPC's to old master to happen before promoting global lock.
+  * 
   * Revision /main/HPDCE02/2  1995/05/15  21:12 UTC  greg
   * 	Fix botched clearmerge.
   * 	[1995/04/22  21:13 UTC  greg  /main/HPDCE02/SEC_migrate_merge/2]
***************
*** 106,111 ****
--- 115,121 ----
  
  #include <sec_svc.h>
  
+ 
  /*
   * Local Routines
   */
***************
*** 372,379 ****
  
          if (GOOD_STATUS(st)) {
  
-             GLOBAL_RIW_PROMOTE;
- 
              rs_mc_setup_new_master(rep_binding.rep_handle, st);
  
              if (GOOD_STATUS(st)) {
--- 382,387 ----
***************
*** 431,475 ****
  
  
  /*
!  * read the old master's replica list.
!  * replace all entries on the new master's
!  * replist with the old master's entries,
!  * thus getting each replica's current
!  * prop_type.
!  */
  PRIVATE void read_master_replist
    (
      rpc_binding_handle_t        rpc_binding,
      uuid_p_t                    old_master_id,
      error_status_t              *st          
    )
  {
  #define MAX_ENTS 25
!     uuid_t                  marker;
!     unsigned32              n_ents;
!     rs_replica_item_full_t  replist[MAX_ENTS],
!                             *rfp;
!     rs_replica_mgt_item_t   rep_item;
!     uuid_t                  init_id;
!     int                     i;
  
      CLEAR_STATUS(st);
  
      uuid_create(&init_id, st);
      if (BAD_STATUS(st)) return;
  
!     /* Start replist_read at beginning of replist
!      */
      uuid_create_nil(&marker, st);
      if (BAD_STATUS(st)) return;
  
!     while (true) {
! 
          n_ents = 0;
  
!         /* get replica list from old master */
          rrs_replist_read_full(rpc_binding, &marker, MAX_ENTS,
!     			  &n_ents, replist, st);
          if (BAD_STATUS(st)) {
              if (STATUS_EQUAL(st, sec_rgy_object_not_found))
                  CLEAR_STATUS(st);
--- 439,490 ----
  
  
  /*
!  * Invoked with the global RIW lock.
!  *
!  * Read the old master's replica list into a list.
!  * Pass the list back so that write_master_replist can
!  * update the local DB. This is done in two steps so that
!  * going remote in rrs_replist_read_full() can be done
!  * before promoting the global lock.
!  *
!  */ 
  PRIVATE void read_master_replist
    (
      rpc_binding_handle_t        rpc_binding,
      uuid_p_t                    old_master_id,
+     rs_replica_mgt_item_list_t  **full_replist,
      error_status_t              *st          
    )
  {
  #define MAX_ENTS 25
!     uuid_t                              marker;
!     unsigned32                          n_ents;
!     rs_replica_item_full_t              replist[MAX_ENTS], 
!                                         *rfp;
!     rs_replica_mgt_item_t               rep_item; 
!     rs_replica_mgt_item_list_t          *nlp, 
!                                         *list_head = NULL, 
!                                         *list_tail = NULL;
!     uuid_t                              init_id;
!     int                                 i;
  
      CLEAR_STATUS(st);
+     
+     *full_replist = NULL;
  
      uuid_create(&init_id, st);
      if (BAD_STATUS(st)) return;
  
!     /* Start replist_read at beginning of replist */
      uuid_create_nil(&marker, st);
      if (BAD_STATUS(st)) return;
  
!     for (;;) {
          n_ents = 0;
  
!         /* Get replica list from old master */
          rrs_replist_read_full(rpc_binding, &marker, MAX_ENTS,
!                               &n_ents, replist, st);
          if (BAD_STATUS(st)) {
              if (STATUS_EQUAL(st, sec_rgy_object_not_found))
                  CLEAR_STATUS(st);
***************
*** 476,503 ****
              break;
          }
  
!         /* replace each replica's info in rsdb.
           */
!         for ( i = 0, rfp = replist; i < n_ents; i++ ) {
!             if ( uuid_equal(&rfp->rep_id, old_master_id, st ) ) {
!                 rs_rep_util_rep_item_pack(&rfp->rep_id, rfp->rep_name, 
!                     rfp->rep_twrs, rs_c_replica_prop_update,
! 		    rs_c_replica_prop_unknown, 	  
!                     NULL, NULL, &rep_item);
              }
              else {
!                 rs_rep_util_rep_item_pack(&rfp->rep_id, rfp->rep_name, 
!     				  rfp->rep_twrs, 
! 				  rfp->prop_info.prop_type,
! 				  rs_c_replica_prop_unknown,
!     				  &init_id, NULL, &rep_item);
              }
      
-             rsdb_replica_replace(&rep_item, st);
-             if (BAD_STATUS(st)) {
-                 break;
-             }
- 
              /*
               * free space allocated by client stubs
               * for embedded ptr fields.
--- 491,538 ----
              break;
          }
  
!         /*
!          * Pack the replist info into rs_replica_mgt_item_list_t's
!          * for writing later.
           */
!         for (i = 0, rfp = replist; i < n_ents; i++) {
!             nlp = (rs_replica_mgt_item_list_t *)
!                    malloc(sizeof(rs_replica_mgt_item_list_t));
!             if (nlp == NULL) {
!                 SET_STATUS(st, sec_rgy_cant_allocate_memory);
!                 return;
              }
+ 
+             /* Create the new list */
+             if (list_tail == NULL) {
+                 list_head = nlp;
+                 list_tail = nlp;
+             }
+             list_tail->next = nlp;
+             list_tail = list_tail->next;
+             list_tail->next = NULL;
+ 
+             /* Store each replica's info */
+             if (uuid_equal(&rfp->rep_id, old_master_id, st)) {
+                 rs_rep_util_rep_item_copy(&rfp->rep_id, rfp->rep_name, 
+                                           rfp->rep_twrs, rs_c_replica_prop_update,
+                                           rs_c_replica_prop_unknown, 	  
+                                           NULL, NULL, &nlp->item, st);
+                 if (BAD_STATUS(st)) {
+                     return;
+                 }
+             }
              else {
!                 rs_rep_util_rep_item_copy(&rfp->rep_id, rfp->rep_name, 
!                                           rfp->rep_twrs, 
!                                           rfp->prop_info.prop_type,
!                                           rs_c_replica_prop_unknown,
!                                           &init_id, NULL, &nlp->item, st);
!                 if (BAD_STATUS(st)) {
!                     return;
!                 }
              }
      
              /*
               * free space allocated by client stubs
               * for embedded ptr fields.
***************
*** 512,522 ****
              break;
      }
  
  }
  
  /* 
   *  Setup new master environment
!  *  Invoked with global_write_lock.
   *
   *  Assume that the top level call can simply
   *  return to caller when this routine returns
--- 547,608 ----
              break;
      }
  
+     if (GOOD_STATUS(st)) {
+         *full_replist = list_head;
+     } 
  }
  
+ 
+ /*
+  * Invoked with the global write lock.
+  *
+  * Replace all entries on the new master's
+  * replist with the old master's entries,
+  * thus getting each replica's current
+  * prop_type.
+  */
+ PRIVATE void write_master_replist 
+ (
+    rs_replica_mgt_item_list_t   **replist,
+    error_status_t               *st
+ )
+ {
+     rs_replica_mgt_item_list_t  *nlp, *temp;
+     rs_replica_mgt_item_t       *item;
+     boolean32                   do_replace = TRUE;
+ 
+     CLEAR_STATUS(st);
+ 
+     nlp = *replist;
+ 
+     while (nlp != NULL) {
+         item = nlp->item;
+ 
+         /*
+          * If the rsdb_replica_replace fails, keep looping
+          * until we free all the memory.
+          */
+         if (do_replace) {
+             rsdb_replica_replace(item, st);
+             if (BAD_STATUS(st)) {
+                 do_replace = FALSE;
+             }
+         }
+ 
+         free(item->rep_name);
+         TOWER_VEC_FREE(free, item->rep_twrs);
+         temp = nlp;
+         nlp = nlp->next;
+         free(temp->item);
+         free(temp);
+     }
+ }    
+ 
+ 
+ 
  /* 
   *  Setup new master environment
!  *  Invoked with global RIW lock.
   *
   *  Assume that the top level call can simply
   *  return to caller when this routine returns
***************
*** 533,538 ****
--- 619,625 ----
      rs_replica_master_info_t    old_master_info;
      rs_update_seqno_t           last_upd_seqno;
      sec_timeval_t               last_upd_ts;
+     rs_replica_mgt_item_list_t  *full_replist;
      error_status_t              lst;
  
      CLEAR_STATUS(st);
***************
*** 545,554 ****
          return;
      }
  
!     /*
!      * read full replist from old_master
!      */
!     read_master_replist(rpc_binding, &old_master_info.master_id, st);
      if (BAD_STATUS(st)) return;
  
      /*
--- 632,648 ----
          return;
      }
  
!     /* Read full replist from old_master */
!     read_master_replist(rpc_binding, 
!                         &old_master_info.master_id, 
!                         &full_replist, 
!                         st);
!     if (BAD_STATUS(st)) return;
! 
!     /* Promote the lock before writing */
!     GLOBAL_RIW_PROMOTE;
! 
!     write_master_replist(&full_replist, st);
      if (BAD_STATUS(st)) return;
  
      /*





*** rs_rep_util.c@@/main/HPDCE02/LATEST	Mon May 15 17:08:44 1995
--- rs_rep_util.c	Wed Jun 12 12:25:03 1996
***************
*** 8,13 ****
--- 8,19 ----
  /*
   * HISTORY
   * $Log:	c013632,v $
# Revision 1.3  96/11/13  13:13:12  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [jrr 11/13/96 public]
# 
# Revision 1.2  96/09/26  15:49:25  root
# changed fields: Status  Fix By Baseline  Fixed In Baseline  
# 
# Revision 1.1  96/09/26  11:45:40  root
# new CR
# 
+  * Revision /main/HPDCE02/jrr_davis_4/2  1996/06/11  21:18 UTC  jrr
+  * 	Add code review changes.
+  * 
+  * Revision /main/HPDCE02/jrr_davis_4/1  1996/06/11  17:17 UTC  jrr
+  * 	Create rs_rep_util_rep_item_copy() and rs_rep_util_copy_twrs(). 
+  * 
   * Revision /main/HPDCE02/1  1995/05/15  21:08 UTC  greg
   * 	Create SEC_migrate_merge mainline from SEC_migrate and HPDCE02.
   * 	[1995/04/21  18:59 UTC  greg  /main/SEC_migrate_merge/1]
***************
*** 83,89 ****
      
  #ifdef MODULE_VERSION_ID
  static char *VersionID = 
!     "$Id: c013632,v 1.3 96/11/13 13:13:12 root Exp $";
  #endif
  
  #include <dce/dce.h>
--- 89,95 ----
      
  #ifdef MODULE_VERSION_ID
  static char *VersionID = 
!     "$Id: c013632,v 1.3 96/11/13 13:13:12 root Exp $";
  #endif
  
  #include <dce/dce.h>
***************
*** 350,355 ****
--- 356,425 ----
  }
  
  /*
+  * rs_rep_util_rep_item_copy
+  *
+  * Allocate a new rs_replica_mgt_item_t and fill in
+  * the fields.
+  */
+ PUBLIC void rs_rep_util_rep_item_copy
+   (
+     uuid_p_t                    rep_id,
+     rs_replica_name_p_t         rep_name,
+     rs_replica_twr_vec_p_t      rep_twrs,
+     rs_replica_prop_t           prop_type,
+     rs_replica_prop_t           prev_prop_type,
+     uuid_p_t                    init_id,
+     rs_rep_prop_mgt_handle_t    prop_mgt_h,
+     rs_replica_mgt_item_t       **rep_item,
+     error_status_t              *st
+   )
+ {
+     rs_replica_mgt_item_t       *rp;
+ 
+     CLEAR_STATUS(st);
+ 
+     rp = (rs_replica_mgt_item_t *)malloc(sizeof(rs_replica_mgt_item_t));
+     if (rp == NULL) {
+         SET_STATUS(st, sec_rgy_cant_allocate_memory);
+         return;
+     }
+ 
+     rp->rep_id = *rep_id;
+     rp->rep_name = (unsigned char *)dce_strdup(rep_name);
+     if (rp->rep_name == NULL) {
+         free(rp);
+         SET_STATUS(st, sec_rgy_cant_allocate_memory);
+         return;
+     }
+ 
+     rs_rep_util_copy_twrs(rep_twrs, &rp->rep_twrs, st);
+     if (BAD_STATUS(st)) {
+         free(rp->rep_name);
+         free(rp);
+         return;
+     }
+     
+     rp->prop_type = prop_type;
+     rp->prev_prop_type = prev_prop_type;
+     if (init_id == NULL) {
+         uuid_create_nil(&rp->init_id, st);
+         if (BAD_STATUS(st)) {
+             free(rp->rep_name);
+             TOWER_VEC_FREE(free, rp->rep_twrs);
+             free(rp);
+             return;
+         }
+     }
+     else {
+         rp->init_id = *init_id;
+     }
+     rp->alloc_type = rs_e_rep_mgt_item_alloc_other;
+     rp->prop_mgt = prop_mgt_h;
+     
+     *rep_item = rp;
+ }
+ 
+ /*
   *  rs_rep_util_rep_buff_pack 
   *
   *  pack a replica's name and tower set (ie. its
***************
*** 662,667 ****
--- 732,780 ----
  
      *buff = NULL;
      CLEAR_STATUS(st);
+ }
+ 
+ /* rs_rep_util_copy_twrs
+  *
+  * Copy towers from a src twr_vec_t to a dest twr_vec_t
+  */
+ PUBLIC void rs_rep_util_copy_twrs
+   (
+     rs_replica_twr_vec_p_t      src,    /* [in] */
+     rs_replica_twr_vec_p_t      *dest,  /* [out] */
+     error_status_t              *st     /* [out] */
+   )
+ {
+     unsigned32 i;
+     rs_replica_twr_vec_p_t	new_towerv;
+ 
+     CLEAR_STATUS(st);
+     *dest = NULL;
+ 
+     new_towerv = malloc(sizeof(*src) +
+ 			sizeof(*src->towers) * (src->num_towers-1) );
+     if (new_towerv == NULL) {
+ 	SET_STATUS(st, sec_rgy_cant_allocate_memory);
+ 	return;
+     }
+     new_towerv->num_towers = src->num_towers;
+ 
+     for (i = 0; i < src->num_towers; i++) {
+ 	twr_p_t ts = src->towers[i];
+ 	twr_p_t td = malloc(sizeof(*ts) + ts->tower_length-1);
+ 	if (td == NULL) {
+ 	    new_towerv->num_towers = i;
+ 	    TOWER_VEC_FREE(free, new_towerv);
+ 	    SET_STATUS(st, sec_rgy_cant_allocate_memory);
+ 	    return;
+ 	}
+ 	new_towerv->towers[i] = td;
+ 	td->tower_length = ts->tower_length;
+ 	memcpy(td->tower_octet_string,
+ 			ts->tower_octet_string, ts->tower_length);
+     }
+ 
+     *dest = new_towerv;
  }
  
  /* rs_rep_util_copy_compat_twrs

[11/13/96 public]
Submitted, tested and closed.



CR Number                     : 13371
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : test/security/api/gssapi
Short Description             : gss_unseal() calls have last 2 parameters reversed
Reported Date                 : 2/24/96
Found in Baseline             : 1.1
Found Date                    : 2/24/96
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : test/security/api/gssapi/test-gssapi.c
Sensitivity                   : public

[2/24/96 public]

A support customer report the following problem:
------------------------------------------------

< This has been fixed in the 1.2.1 code base >

Component (Module):     test/security/api/gssapi/test-gssapi.c

One Line Description:
test-gssapi: gss_unseal() calls -- the last two params are transposed.

Full Description:
The test-gssapi program has twelve calls to gss_unseal().
The function prototype for gss_unseal() is:

OM_uint32 gss_unseal
                 (OM_uint32*,       /* minor_status */
                  gss_ctx_id_t,     /* context_handle */
                  gss_buffer_t,     /* input_message_buffer */
                  gss_buffer_t,     /* output_message_buffer */
                  int*,             /* conf_state */
                  int*              /* qop_state */
                 );

The calls within test-gssapi.c all look like:

major_status = gss_unseal(&minor_status,
                          server_context,
                          &client_message_1,
                          &buffer2,
                          &message_qop,
                          &conf_state);

"conf_state" should proceed "message_qop" in the parameter list.


Proposed Solution:
changed all the calls to gss_unseal to look like:

major_status = gss_unseal(&minor_status,
                          server_context,
                          &client_message_1,
                          &buffer2,
                          &conf_state,
                          &message_qop);



CR Number                     : 13355
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : ENDGAME: Remove platform specific stuff from Makefiles
Reported Date                 : 2/23/96
Found in Baseline             : 1.2.1
Found Date                    : 2/23/96
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : ./test/functional/security/ts/client/{Makefile,pwd_mgmt/Makefile}
Sensitivity                   : public

[2/23/96 public]

ENDGAME: Remove platform specific stuff from Makefiles

[2/23/96 public]
DIFF: old,new

*** /u2/sandboxes/nb/link/src/test/functional/security/ts/client/Makefile      M
on Dec 11 13:52:20 1995
--- Makefile    Fri Feb 23 10:20:01 1996
***************
*** 25,30 ****
  # 
  # $EndLog$
  # 
! SUBDIRS       = rca login pwd_mgmt migration bin_compat
  
  .include <${RULES_MK}>
--- 29,38 ----
  # 
  # $EndLog$
  # 
! .if ${TARGET_MACHINE} == "HP800"
! VENDOR_SUBDIR = bin_compat
! .endif
! 
! SUBDIRS       = rca login pwd_mgmt migration ${VENDOR_SUBDIR}
  
  .include <${RULES_MK}>
*** /u2/sandboxes/nb/link/src/test/functional/security/ts/client/pwd_mgmt/Makefi
le      Mon Dec 11 13:52:50 1995
  
  .include <${RULES_MK}>
*** /u2/sandboxes/nb/link/src/test/functional/security/ts/client/pwd_mgmt/Makefi
le      Mon Dec 11 13:52:50 1995
--- pwd_mgmt/Makefile   Fri Feb 23 10:20:13 1996
***************
*** 32,37 ****
  # 
  # $EndLog$
  # 
! SUBDIRS = pwd_strength pwd_expiration pwd_gen HP
  
  .include <${RULES_MK}>
--- 36,45 ----
  # 
  # $EndLog$
  # 
! .if ${TARGET_MACHINE} == "HP800"
! VENDOR_SUBDIR = HP
! .endif
! 
! SUBDIRS = pwd_strength pwd_expiration pwd_gen ${VENDOR_SUBDIR}
  
  .include <${RULES_MK}>



CR Number                     : 13345
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : ENDGAME: remove *.txt reference
Reported Date                 : 2/21/96
Found in Baseline             : 1.2.1
Found Date                    : 2/21/96
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : src/security/h/Makefile
Sensitivity                   : public

[2/21/96 public]
ENDGAME: remove *.txt reference

[2/22/96 public]
Fixed & Tested.

Diffs are:

DIFF: OLD,NEW : ./security/h/Makefile===========================
*** ./security/h/Makefile.orig	Thu Feb 22 09:25:17 1996
--- /project/dce/build/dce1.2/src/./security/h/Makefile	Thu Feb 22 10:38:30 1996
***************
*** 7,43 ****
  #
  # HISTORY
  # $Log:	c013345,v $
# Revision 1.2  96/02/22  11:57:41  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [domian 2/21/96 public] [psn 2/22/96 public] [domian 2/21/96 public]
# 
  # Revision 1.1.8.1  1995/12/13  16:24:22  root
  # 	Submit
! #
  # 	HP revision /main/HPDCE02/5  1995/10/04  18:37 UTC  bartf
  # 	merge back in sys.group
! #
  # 	HP revision /main/HPDCE02/bartf_sec_wc.10/1  1995/09/29  14:23 UTC  bartf
  # 	add sys.group.txt back in, it will exit with group_override
! #
  # 	HP revision /main/HPDCE02/4  1995/07/14  11:13 UTC  root
  # 	finish removing sys.group
! #
  # 	HP revision /main/HPDCE02/3  1995/07/12  20:15 UTC  bartf
  # 	merge group_override file addition
! #
  # 	HP revision /main/HPDCE02/bartf_sec_10/1  1995/07/11  18:10 UTC  bartf
  # 	add group_override
! #
  # 	HP revision /main/HPDCE02/bartf_sec_10/2  1995/07/11  19:35 UTC  bartf
  # 	remove sys.group
! #
  # 	HP revision /main/HPDCE02/bartf_sec_10/1  1995/07/11  18:10 UTC  bartf
  # 	add group_override
! #
  # 	HP revision /main/HPDCE02/1  1995/02/10  14:20 UTC  mullan_s
  # 	Merge from KK
! #
  # 	HP revision /main/mullan_merge_pwdoverride/1  1995/02/10  14:19 UTC  mullan_s
  # 	Merge passwd_override and sys.group rules.
  # 	[1995/12/11  15:14:08  root]
! #
  # Revision 1.1.6.8  1994/08/29  15:51:28  hondo
  # 	OT 11919 --login activity idl change to support different address types
  # 	[1994/08/28  21:47:26  hondo]
--- 7,47 ----
  #
  # HISTORY
  # $Log:	c013345,v $
# Revision 1.2  96/02/22  11:57:41  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [domian 2/21/96 public] [psn 2/22/96 public] [domian 2/21/96 public]
# 
+ # Revision 1.1.8.2  1996/02/22  16:38:29  root
+ # 	ENDGAME Submission
+ # 	[1996/02/22  16:10:54  root]
+ #
  # Revision 1.1.8.1  1995/12/13  16:24:22  root
  # 	Submit
! # 
  # 	HP revision /main/HPDCE02/5  1995/10/04  18:37 UTC  bartf
  # 	merge back in sys.group
! # 
  # 	HP revision /main/HPDCE02/bartf_sec_wc.10/1  1995/09/29  14:23 UTC  bartf
  # 	add sys.group.txt back in, it will exit with group_override
! # 
  # 	HP revision /main/HPDCE02/4  1995/07/14  11:13 UTC  root
  # 	finish removing sys.group
! # 
  # 	HP revision /main/HPDCE02/3  1995/07/12  20:15 UTC  bartf
  # 	merge group_override file addition
! # 
  # 	HP revision /main/HPDCE02/bartf_sec_10/1  1995/07/11  18:10 UTC  bartf
  # 	add group_override
! # 
  # 	HP revision /main/HPDCE02/bartf_sec_10/2  1995/07/11  19:35 UTC  bartf
  # 	remove sys.group
! # 
  # 	HP revision /main/HPDCE02/bartf_sec_10/1  1995/07/11  18:10 UTC  bartf
  # 	add group_override
! # 
  # 	HP revision /main/HPDCE02/1  1995/02/10  14:20 UTC  mullan_s
  # 	Merge from KK
! # 
  # 	HP revision /main/mullan_merge_pwdoverride/1  1995/02/10  14:19 UTC  mullan_s
  # 	Merge passwd_override and sys.group rules.
  # 	[1995/12/11  15:14:08  root]
! # 
  # Revision 1.1.6.8  1994/08/29  15:51:28  hondo
  # 	OT 11919 --login activity idl change to support different address types
  # 	[1994/08/28  21:47:26  hondo]
***************
*** 107,127 ****
  	    lm_login.h		\
              sec_pkl.h
  EXPDIR = /usr/include/dce/
- passwd_override_EXPDIR = /etc/
- group_override_EXPDIR = /etc/
- sys.group_EXPDIR = /etc/
  
  # Files to install and their locations
! OTHERS  = dcesad.cat passwd_override group_override sys.group sec_attr_tools.h
  ILIST   = ${OTHERS}
  IDIR    = /share/include/dce/
  dcesad.cat_IDIR = /nls/msg/en_US.ASCII/
- passwd_override_IDIR = /etc/
- group_override_IDIR = /etc/
- sys.group_IDIR = /etc/
  
  
- 
  SAMSFILES        = sad.sams
  SAMIDL_INCLUDES  = dcesadmsg.h
  SAMS_TARGETS     = dcesadmsg.h dcesadmsg.c dcesadsvc.c \
--- 111,124 ----
  	    lm_login.h		\
              sec_pkl.h
  EXPDIR = /usr/include/dce/
  
  # Files to install and their locations
! OTHERS  = dcesad.cat sec_attr_tools.h
  ILIST   = ${OTHERS}
  IDIR    = /share/include/dce/
  dcesad.cat_IDIR = /nls/msg/en_US.ASCII/
  
  
  SAMSFILES        = sad.sams
  SAMIDL_INCLUDES  = dcesadmsg.h
  SAMS_TARGETS     = dcesadmsg.h dcesadmsg.c dcesadsvc.c \
***************
*** 129,144 ****
  
  .include <${RULES_MK}>
  
- # Rules for building group and passwd_override files
- 
- passwd_override: passwd_override.txt
- 	${RM} ${_RMFLAGS_} $@
- 	$(CP) ${passwd_override.txt:P} $@
- 
- group_override: group_override.txt
- 	${RM} ${_RMFLAGS_} $@
- 	$(CP) ${group_override.txt:P} $@
- 
- sys.group: sys.group.txt
- 	${RM} ${_RMFLAGS_} $@
- 	$(CP) ${sys.group.txt:P} $@
--- 126,128 ----



CR Number                     : 13344
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : ENDGAME: remove crypyo/tests
Reported Date                 : 2/21/96
Found in Baseline             : 1.2.1
Found Date                    : 2/21/96
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : src/security/krb5/lib/Makefile
Sensitivity                   : public

[2/21/96 public]

ENDGAME: remove crypyo/tests

[2/22/96 public]
Fixed & Tested.

Diffs are:

DIFF: OLD,NEW : ./security/krb5/lib/Makefile===========================
*** ./security/krb5/lib/Makefile.orig	Thu Feb 22 09:25:16 1996
--- /project/dce/build/dce1.2/src/./security/krb5/lib/Makefile	Thu Feb 22 10:36:06 1996
***************
*** 7,19 ****
  #
  # HISTORY
  # $Log:	c013344,v $
# Revision 1.2  96/02/22  11:55:35  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [domian 2/21/96 public] [psn 2/22/96 public] [domian 2/21/96 public]
# 
  # Revision 1.1.7.1  1995/12/08  17:45:47  root
  # 	Submit OSF/DCE 1.2.1
! #
  # 	HP revision /main/HPDCE02/1  1995/08/21  17:35 UTC  sommerfeld
  # 	CHFts16048: Add crypto regression tests..
  # 	[1995/08/17  22:02 UTC  sommerfeld  /main/sommerfeld_mothpatch/1]
! #
  # Revision 1.1.5.2  1992/12/29  14:19:09  zeliff
  # 	Embedding copyright notice
  # 	[1992/12/28  20:55:24  zeliff]
--- 7,23 ----
  #
  # HISTORY
  # $Log:	c013344,v $
# Revision 1.2  96/02/22  11:55:35  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [domian 2/21/96 public] [psn 2/22/96 public] [domian 2/21/96 public]
# 
+ # Revision 1.1.7.2  1996/02/22  16:36:05  root
+ # 	ENDGAME Submission
+ # 	[1996/02/22  16:10:55  root]
+ #
  # Revision 1.1.7.1  1995/12/08  17:45:47  root
  # 	Submit OSF/DCE 1.2.1
! # 
  # 	HP revision /main/HPDCE02/1  1995/08/21  17:35 UTC  sommerfeld
  # 	CHFts16048: Add crypto regression tests..
  # 	[1995/08/17  22:02 UTC  sommerfeld  /main/sommerfeld_mothpatch/1]
! # 
  # Revision 1.1.5.2  1992/12/29  14:19:09  zeliff
  # 	Embedding copyright notice
  # 	[1992/12/28  20:55:24  zeliff]
***************
*** 53,59 ****
  # Sudirectories that export libraries
  EXPLIB_SUBDIRS = krb5 kdb
  
  # Sudirectories that build installables
! SUBDIRS = error_tables crypto/test
  
  .include <${RULES_MK}>
--- 57,68 ----
  # Sudirectories that export libraries
  EXPLIB_SUBDIRS = krb5 kdb
  
+ # HP specific tests
+ .if ${TARGET_MACHINE} == "HP800"
+ CRYPTO_TEST = crypto/test
+ .endif
+ 
  # Sudirectories that build installables
! SUBDIRS = error_tables ${CRYPTO_TEST}
  
  .include <${RULES_MK}>



CR Number                     : 13315
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : login
Short Description             : Memory corruption during intercell operations (DIFF included)
Reported Date                 : 2/8/96
Found in Baseline             : 1.1
Found Date                    : 2/8/96
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : src/security/client/login/sec_login_util.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[2/8/96 public]

There is a memory corruption bug (due to multiple free's) in
sec_login_util.c:sec_login_util_fetch_epac_and_stktcreds(). After the call
to priv_krb_util_epac_search(), sec_login_db_free_entry_contents() is
always being called regardless of the value of epac_found. Fix is to move
the call after the check of the status and epac_found. Diffs follow:

*** sec_login_util.c@@/main/HPDCE02/LATEST      Tue Aug 22 17:07:12 1995
--- sec_login_util.c    Thu Feb  8 13:59:02 1996
***************
*** 902,911 ****
      /* call priv_krb routine to get correct epac */
      epac_found = priv_krb_util_epac_search(db_entry, malloc_shim, free, target_cell, 
                      epac_chain, &authbytes, stp);
-     sec_login_db_free_entry_contents(rpc_ss_client_free, &db_entry, -1);
      if (!STATUS_OK(stp) || !epac_found) {
        goto out;
      }
  
      /* epac located, so turn off flag */
      state &= ~epac_not_found;
--- 902,911 ----
      /* call priv_krb routine to get correct epac */
      epac_found = priv_krb_util_epac_search(db_entry, malloc_shim, free, target_cell, 
                      epac_chain, &authbytes, stp);
      if (!STATUS_OK(stp) || !epac_found) {
        goto out;
      }
+     sec_login_db_free_entry_contents(rpc_ss_client_free, &db_entry, -1);
  
      /* epac located, so turn off flag */
      state &= ~epac_not_found;

[7/24/96 public]
This was fixed in 1.2.1.

[mak 9/13/96 public] 
Bug does not exist in 1.1 code.



CR Number                     : 13302
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : need sec_salvage_db.8sec again
Reported Date                 : 2/6/96
Found in Baseline             : 1.2.1
Found Date                    : 2/6/96
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : ./man8sec/sec_salvage_db.8sec
Sensitivity                   : public

[2/6/96 public]

We need to restore the sec_salvage_db.8sec manpage to the Command
Reference. The un-updated 1.0.3 text of the manpage, as it was
reprinted as Appendix A of the 1.1 Release Notes, exists; the
problem is un-defuncting the manpage in the Command Reference,
which I'm unable to do. I think this requires the intervention
of a Rat. In the meantime, I've emailed the text to HP, where it's
being reviewed.

[2/21/96 public]

The manpage has been successfully undefuncted (thanks to Marty
Lynch). I'm reassigning this bug to Pam Millette now, because
I think she wants to make some changes in it for DCE 1.2.1.

[3/20/96 public]

Fixed. There are no updates to the original manpage, so the
undefuncted version remains as it was (in command_ref/man8sec).

[3/29/96 public]

Closed.



CR Number                     : 13270
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : tet
Short Description             : cell_alias & pwd_mgmt tests fail
Reported Date                 : 12/29/95
Found in Baseline             : 1.2.1
Found Date                    : 12/29/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : pwd_mgmt
Sensitivity                   : public

[12/29/95 public]

Functional test errors occur when testing DCE 1.2.1 on AIX 3.2.
The cell_alias_tp1 and rsec_pwd_mgmt_str_chk tests consistantly fail.

The tp1_errors file contains:
Sorry.
User Identification Failure. - Registry object not found (dce / sec)
(Repeated many times...)

FAILED tp3: rsec_pwd_mgmt_str_chk - bad authorization service
result: 	password management server generic error (dce / sec)
expected: 	unauthorized to call password management server (dce / sec)

[01/22/96 public]

Fix is included in DCE 1.2.1
Closed



CR Number                     : 13224
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb
Short Description             : Wrong level of indirection on authdata in process_tgs_req
Reported Date                 : 12/14/95
Found in Baseline             : 1.1
Found Date                    : 12/14/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : do_tgs_req.c
Sensitivity                   : public
Transarc Deltas               : cox-16964-secd-wrong-authdata-pointer
Transarc Status               : open

[12/14/95 public]
secd was dumping core because process_tgs_req was calling
decode_krb5_authdata with a second argument that was "krb5_authdata ***"
instead of "krb5_authdata ****" as it should have been, and the
result that the unencrypted authdata was getting trashed.  This delta
fixes that bug by introducing a temp variable to correct the number of
levels of indirection:
*** do_tgs_req.c~	Tue Oct 31 16:06:27 1995
--- do_tgs_req.c	Wed Dec 13 16:42:39 1995
***************
*** 725,733 ****
  	}
  	/* scratch now has the authorization data, so we decode it */
  #ifdef KRB5_USE_ISODE
  	retval = decode_krb5_authdata(&scratch, request->unenc_authdata);
  #else
! 	retval = decode_krb5_authdata(&scratch, &(request->unenc_authdata));
  #endif
  	free(scratch.data);
  	if (retval) {
--- 734,748 ----
  	}
  	/* scratch now has the authorization data, so we decode it */
  #ifdef KRB5_USE_ISODE
+ 	/* this is completely psychotic; never define this symbol. */
  	retval = decode_krb5_authdata(&scratch, request->unenc_authdata);
  #else
! 	{
! 	    krb5_authdata ***temp; /* arrgh */
! 	    retval = decode_krb5_authdata(&scratch, &temp);
! 	    request->unenc_authdata = *temp;
! 	    free(temp);
! 	}
  #endif
  	free(scratch.data);
  	if (retval) {
Added field Transarc Deltas with value `cox-16964-secd-wrong-authdata-pointer' 
Added field Transarc Status with value `open'

[01/22/96 public]

This has been fixed in DCE 1.2.1
Closed



CR Number                     : 13220
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 13290
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : gssapi.c is enabled with encryption as the default - causes export issues.
Reported Date                 : 12/07/95
Found in Baseline             : 1.1
Found Date                    : 
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1,1.1maint
Affected File(s)              : security/utils/Makefile, security/gssapi/gssapi.c
Sensitivity                   : public

[12/8/95 public]

[12/14/95 public]

The default behavior of the DCE build as a whole is to build a non-exportable
version, since the symbol NOENCRYPTION must be defined in order to disable
confidentiality (in both GSSAPI and RPC).  It might be safer to
reverse this logic (i.e. require that a symbol be explicitly defined in order
to enable confidentiality).

The GSSAPI functional test program checks whether confidentiality is
supported, and if so sends a warning message to the logfile, so inspecting
the test log is the simplest way to verify an exportable build (hunt for
the string "WARNING!").  The attached program is a quick standalone test that
can be run on any DCE system to verify whether the GSSAPI implementation
in that system supports confidentiality.

Building the exportable version of GSSAPI requires that the preprocessor symbol
NOENCRYPTION be defined.  This symbol should be defined globally for the build,
(e.g. in src/Makeconf, or via the command-line), rather than special-cased for
particular files or directories, as in future it's likely that other modules
will need to know whether confidentiality is to be supported.


/*                                                                          */
/* XTEST.C                                                                  */
/*                                                                          */
/* Test exportability of GSSAPI implementation.                             */
/* To run this test, log-in to a DCE account, and pass the account name as  */
/* the first parameter:                                                     */
/*                                                                          */
/*     % xtest <account>                                                    */
/*                                                                          */
/* The program will report to stdout whether or not GSSAPI is exportable.   */
/*                                                                          */

#include <dce/gssapi.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>

int check_status(char * rout, OM_uint32 maj, OM_uint32 min) {
    gss_buffer_desc err_msg;
    OM_uint32 m1;
    OM_uint32 m2;
    int ctx;

    if (GSS_ERROR(maj)) {
        fprintf(stderr, "Error: %s returned major status %ul\n", rout, maj);
        fprintf(stderr, "       minor status %ul\n", min);
    } else if (min == GSSDCE_S_SUCCESS) {
        return 0;
    } else fprintf(stderr, "Error: %s returned minor status %ul\n", rout, min);

    ctx = 0;
    fprintf(stderr, "Major status: \n");
    while (1) {
        m1 = gss_display_status(&m2,
                                maj,
                                GSS_C_GSS_CODE,
                                GSS_C_NULL_OID,
                                &ctx,
                                &err_msg);
        fprintf(stderr, " %.*s\n", err_msg.length, err_msg.value);
        if (ctx == 0) break;
    };

    ctx = 0;
    fprintf(stderr, "Minor status: \n");
    while (1) {
        m1 = gss_display_status(&m2,
                                min,
                                GSS_C_MECH_CODE,
                                GSS_C_NULL_OID,
                                &ctx,
                                &err_msg);
        fprintf(stderr, " %.*s\n", err_msg.length, err_msg.value);
        if (ctx == 0) break;
    };

    return 1;
}

int main(int argc, char * argv[]) {

/* argument is user principal name */

    OM_uint32 maj_stat;
    OM_uint32 min_stat;
    gss_ctx_id_t context_handle;
    int ret_flags;
    gss_buffer_desc name_buffer;
    gss_name_t name;
    gss_buffer_desc output_token;

    name_buffer.length = strlen(argv[1]);
    name_buffer.value = argv[1];

    maj_stat = gss_import_name(&min_stat,
                               &name_buffer,
                               GSSDCE_C_OID_DCENAME,
                               &name);

    if (check_status("import_name", maj_stat, min_stat)) return EXIT_FAILURE;

    context_handle = GSS_C_NO_CONTEXT;
    maj_stat = gss_init_sec_context(&min_stat,
                                    GSS_C_NO_CREDENTIAL,
                                    &context_handle,
                                    name,
                                    GSS_C_NULL_OID,
                                    GSS_C_CONF_FLAG,
                                    GSS_C_INDEFINITE,
                                    GSS_C_NO_CHANNEL_BINDINGS,
                                    NULL,
                                    NULL,
                                    &output_token,
                                    &ret_flags,
                                    NULL);


    if (check_status("init_sec_context", maj_stat, min_stat)) return EXIT_FAILU

    if (ret_flags & GSS_C_CONF_FLAG) {
        fprintf(stdout, "!!! NON-EXPORTABLE GSSAPI !!!\n");
    } else {
        fprintf(stdout, "Exportable GSSAPI\n");
    };
    fflush(stdout);
    return EXIT_SUCCESS;
}

[02/01/96 public]
Shirley has coordinated agreement that this defect has been addressed; the
porting instructions & new cautions handle the rest (vendors need to do
additional platform-specific work to hide exported library symbols allowing
entry into DES encryption routines.)

A test enhancement will be filed to fail rather than print warnings about
non-exportable gssapi present in an exportable build.


security/utils/Makefile:  couple build-env DES_HIDDEN with source NOENCRYPTION
(matching the action taken in the rpc/runtime/Makefile)

***************
*** 434,441 ****
--- 437,448 ----
  acl_encode.idl_IDLFLAGS = -keep c_source
  
  # Compiler flags for this directory
  CFLAGS  = -DOSF_DCE ${DCEPATHS} -D_BSD -DBSD ${${TARGET_MACHINE}_CFLAGS}
+ 
+ .ifdef DES_HIDDEN
+ gssapi.o_CFLAGS = ${CFLAGS} -DNOENCRYPTION
+ .endif
  
  .if ${TARGET_OS} == "HPUX"
  
  .if defined(NO_DFS) && !defined(LATENT_DFS_SUPPORT)


security/gssapi/gssapi.c:  compile-time removal of calls to encryption routines

***************
*** 5157,5164 ****
--- 5160,5168 ----
      case TOK_ID_SIGN:
      case TOK_ID_DELETE:
        break;
      case TOK_ID_SEAL:
+ #ifndef NOENCRYPTION
        if (seal_alg_type == SEAL_ALG_DES) {
  /* Encrypt data field in-place.                                                   */
  
            DCE_SVC_DEBUG((gss__svc_handle, gss_s_protect, svc_c_debug9, 
***************
*** 5172,5179 ****
--- 5176,5184 ----
                PRIVACY_KEY,
                (unsigned char *)internal_buffer.value + data_start);
                                                        /* Output in place  */
        };
+ #endif
        break;
      };
  
  
***************
*** 6238,6245 ****
--- 6243,6251 ----
            goto gss_unseal_return;
        };
      };
  
+ #ifndef NOENCRYPTION
      if (seal_alg_type == SEAL_ALG_DES) {
  
  
          if (conf_state) *conf_state = 1;
***************
*** 6302,6310 ****
            };
  #     endif
  */
  
!     } else if (seal_alg_type == SEAL_ALG_NONE) {
        memcpy(confounder,
               (unsigned char *)token_buffer->value + data_offset,
               8);
  
--- 6308,6318 ----
            };
  #     endif
  */
  
!     } else
! #endif
!     if (seal_alg_type == SEAL_ALG_NONE) {
        memcpy(confounder,
               (unsigned char *)token_buffer->value + data_offset,
               8);



CR Number                     : 13218
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security replication
Short Description             : security replication: sec_admin change master command fails
Reported Date                 : 12/5/95
Found in Baseline             : 1.2
Found Date                    : 12/4/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : ?
Sensitivity                   : public

[12/5/95 public]

The security replication test tc_cm_basic (test case change master 
basic) fails because the sec_admin command fails.  The following 
shows the command and the error from it as it appears in the tet journal: 

520|3 1 13897 1 104|....  sec_admin -s /.:/subsys/dce/sec/blu2 -nq
520|3 1 13897 1 105|....  change_master -to subsys/dce/sec/ibm_l3
520|3 1 13897 1 106|
520|3 1 13897 1 107|....  Unable to bind to registry at /.:/subsys/dce/sec/blu2
520|3 1 13897 1 108|....  ERROR - Registry server unavailable (dce / sec)

[3/12/96 public]
According to the 1.2.1 team here, this problem went away in the final
1.2.1 builds and does not occur with the final build, so I'm closing this.
The actual fix for it would be in one of the other bugs that's been fixed,
(don't know which one and it's not worth engineering time to figure it out)
so there's no files and/or diffs to list here.



CR Number                     : 13200
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : sec_acl_bind
Short Description             : memory unreleased
Reported Date                 : 11/14/95
Found in Baseline             : 1.1
Found Date                    : 10/27/95
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public
Transarc Deltas               : 
Transarc Status               : 

[11/14/95 public]
>>>From yamaur_t@soft.hitachi.co.jp Tue Oct 31 02:01:38 1995
>>From: yamaur_t@soft.hitachi.co.jp
>>Subject: Re: Re: A bug in sec_acl_bind
>>To: conley_s@ch.hp.com
>>Date: Tue, 31 Oct 95 15:54:17 JST
>>Cc: mpt@osf.org
>>Mailer: Elm [revision: 70.85]
>>
>>Dear Shirley:
>>
>>
>>>>>>>>>>>>>>>>>>>>>>>  your e-mail dated Oct. 27  <<<<<<<<<<<<<<<<<<<<<<<<<
>>>
>>> Can you let us know what version of DCE you are running?
>>> Do you have the 1.2.1 baselevel 0 which is 1.1+ uninteg+
>>> warranty patch.
>>
>>       We are using DCE 1.1 plus warranty patch.  We plan to shift
>>       to DCE 1.2.1 sometime from the 2nd week of Nov.
>>
>>>
>>>
>>>>>>>>>>>>>>>>>>>>>>>  your e-mail dated Oct. 30  <<<<<<<<<<<<<<<<<<<<<<<<<
>>>
>>> Their message doesn't say:  are they calling sec_acl_release_handle()
>>> when done with the handle returned from sec_acl_bind() ?
>>>
>>
>>              Yes, DFAM calls sec_acl_release_handle() after
>>       sec_acl_bind() is called.
>>
>>              For your information, our further investigation revealed
>>       that there are other APIs that do not properly release the
>>       assigned memory.  They are:
>>
>>              sec_acl_get_access
>>              sec_acl_lookup
>>              sec_acl_replace
>>
>>              Please note that the API investigation we have taken was
>>       limited to the scope of the APIs used by DFAM.
>>
>>
>>> At 03:40 PM 10/27/95 JST, yamaur_t@soft.hitachi.co.jp wrote:
>>> >       Dear DCE 1.2 Project Managers:
>>> >
>>> >              I have just received the following bug report from one of our
>>> >       DFAM engineers.  Could someone tell me if this bug was already fixed
>>> >       (or, being fixed) or still open ?  If fixed, just forget about this
>>> >       e-mail.  If not I will report it to OT.  Anyway, this is a serious
>>> >       bug for DFAM, especially this bug prevents DFAM from going through
>>> >       48 CHO.
>>> >
>>> >                                                     Thank you very much.
>>> >                                                     Tsuneo Yamaura
>>> >
>>> > ...............................  cut here
>>>................................
>>> >
>>> >                A bug of sec_acl_bind API: memory unreleased
>>> >
>>> >       1. Introduction
>>> >              DFAM has experienced a memory shortage, whose reason was,
>>> >       according to our analysis, that "sec_acl_bind" API does not
>>> >       properly release the assigned memory (DFAM uses "sec_acl_bind"
>>> >       API to access the ACL of a file).  This report addresses the
>>> >       contents and reasons of the unreleased memory.
>>> >
>>> >       2. DFAM and sec_acl_bind
>>> >              The sec_acl_bind system call makes an error return if the
>>> >       target is a UFS file, and a successful return for an LFS file.
>>> >       DFAM uses this feature: DFAM issues the sec_acl_bind system call
>>> >       to see if the target file is UFS or LFS when DFAM accesses the
>>> >       ACL of a file.
>>> >
>>> >       3. Details of the memory leakage
>>> >              Our research revealed that 0.5 KB of memory is lost per
>>> >       sec_acl_bind call made against an LFS file, 2.0 KB made for a UFS
>>> >       file. (the difference of the size of the unfreed memory seems to
>>> >       depend on the difference of the processing for LFS and UFS).
>>> >
>>> >       4. Details of the source inspection
>>> >              We inspected the source code of sec_acl_bind to detect that
>>> >       there were several places that do not release the assigned memory
>>> >       as follows:
>>> >
>>> >          (1) sec_acl_bind invokes dfs_dce_acl_lookup, which does not free
>>> >              the area of bufferp.
>>> >
>>> >          (2) sec_acl_bind invokes rpc_ns_entry_inq_resolution, which does
>>> >              not release the areas for resolved_name and unresolved_name.
>>> >
>>> >              There will be other memory leakage besides the above.
>>>This is
>>> >       an extremely serious problem not only for DFAM (DFAM can run at most
>>> >       6 CHO due to the memory shortage) but for other application programs
>>> >       that reiterate the system call.  We would like to request the
>>> >       following thing:
>>> >
>>> >           (1) Please check through the entire source code of sec_acl_bind,
>>> >               and fix the bug.
>>> >
>>> >           (2) Please check other APIs if there are any memory leakage.
>>> >
>>
>

[01/15/96 ]
2nd phase of memory leak fixes for sec_acl_* calls.
Diffs:
/security/client/acl/dacl_if.r :
364c370
<     sec_acl_t           sec_acl;
---
>     sec_acl_p_t         sec_aclp = NULL;
365a372,374
>     void (*free_func) PROTOTYPE((void *ptr));
>     void *(*alloc_func) PROTOTYPE((unsigned long size));
> 
384a394,407
>         rpc_sm_swap_client_alloc_free((idl_void_p_t (*)(idl_size_t)) malloc,
>                                       free, &alloc_func, &free_func, st_p);
>         if (GOOD_STATUS(st_p)) {
>            rpc_sm_set_client_alloc_free(alloc_func, free_func, st_p);
>         }
>         if (!GOOD_STATUS(st_p)) {
>             SET_STATUS(st_p, sec_acl_cant_allocate_memory);
>           return;
>       }
386c409
ree_func);
>       sec_aclp = (*alloc_func)(sizeof(sec_acl_t));
>         if (sec_aclp == NULL) {
>             SET_STATUS(st_p, sec_acl_cant_allocate_memory);
>           return false;
>       }
458c493
<                                     sec_acl_type_object, &sec_acl);
---
>                                     sec_acl_type_object, sec_aclp);
462c497
<                                                 &sec_acl, &permset, &granted,
---
>                                                 sec_aclp, &permset, &granted,
464a500
>         sec_acl_release( sech, sec_aclp, st_p );
/security/client/acl/dfs_dce_acl.c :
730c730
<   pac_list_t          *pacListP;
---
>   pac_list_t          *pacListP = NULL;
899c899,901
<   
---
>   if ( pacListP != NULL )
>     dfs_dce_acl_FreePacList( &pacListP );
>
/file/security/dacl/dacl_sec_acl.c :
189a196,201
> #ifdef IDL_PROTOTYPES
> #define PROTOTYPE(x) x
> #else
> #define PROTOTYPE(x) ()
> #endif
> 
211a224,227
>   void (*free_func) PROTOTYPE((void *ptr));
>   void *(*alloc_func) PROTOTYPE((unsigned long size));
>   unsigned32 st;
> 
220a237,244
>   rpc_sm_swap_client_alloc_free((idl_void_p_t (*)(idl_size_t)) malloc,
>                               free, &alloc_func, &free_func, &st);
>   if (st == error_status_ok) {
>      rpc_sm_set_client_alloc_free(alloc_func, free_func, &st);
>   }
>   if (st != error_status_ok) {
>      return DACL_ERROR_BUFFER_ALLOCATION;
>   }
222c246
<     (char *)dacl_Alloc(daclEntryP->entry_info.extended_info.numberBytes);---
>     (char *)(*alloc_func)(daclEntryP->entry_info.extended_info.numberBytes);
241a266,268
> /* The above no longer applies. It is used by dfs_dce_acl_CheckAccessAllowedPac>  as well as sec_acl_FlattenAcl, DoSecAclXlate
> */
249c276
<   int *                       extendedEntryIndicesP;
---
>   int *                       extendedEntryIndicesP = NULL;
539a567,568
>         if ( extendedEntryIndicesP != NULL )
>           dacl_Free(extendedEntryIndicesP, totalNumEntries * sizeof(int));
575a605,608
>   void (*free_func) PROTOTYPE((void *ptr));
>   void *(*alloc_func) PROTOTYPE((unsigned long size));
>   unsigned32 st;
> 
579a613,620
>   rpc_sm_swap_client_alloc_free((idl_void_p_t (*)(idl_size_t)) malloc,
>                               free, &alloc_func, &free_func, &st);
>   if (st == error_status_ok) {
>      rpc_sm_set_client_alloc_free(alloc_func, free_func, &st);
>   }
>   if (st != error_status_ok) {
>      return DACL_ERROR_BUFFER_ALLOCATION;
>   }
581,582c622,623
<     (sec_acl_extend_info_t *)dacl_Alloc(sizeof(sec_acl_extend_info_t) +
<                                       daclEntryP->entry_info.extended_info.numberBytes);
---
>     (sec_acl_extend_info_t *)(*alloc_func)(sizeof(sec_acl_extend_info_t) +
>                       daclEntryP->entry_info.extended_info.numberBytes);
769a811,814
> 
>     void (*free_func) PROTOTYPE((void *ptr));
>     void *(*alloc_func) PROTOTYPE((unsigned long size));
>     unsigned32 st;
774a820,827
>         rpc_sm_swap_client_alloc_free((idl_void_p_t (*)(idl_size_t)) malloc,
>                                       free, &alloc_func, &free_func, &st);
>         if (st == error_status_ok) {
>            rpc_sm_set_client_alloc_free(alloc_func, free_func, &st);
>         }
>         if (st != error_status_ok) {
>            return DACL_ERROR_BUFFER_ALLOCATION;
>         }
776c829
<           (sec_acl_entry_t *)dacl_Alloc(totalNumEntries *
---
>           (sec_acl_entry_t *)(*alloc_func)(totalNumEntries *

[01/15/96]

[01/22/96 public]
The fixes have been included in DCE 1.2.1.
This OT is closed.

[1/29/96 public]
Is there any chance we can get a context diff (-c) for this?  The diff
above doesn't help very much if our line numbers don't match exactly
because there is no context.  Should we just wait until the 1.2.1 base
to integrate this fix?
Added field Transarc Deltas with value `' 
Added field Transarc Status with value `'



CR Number                     : 13197
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : KRB5_TC_MATCH_SRV_NAMEONLY flag broken
Reported Date                 : 11/10/95
Found in Baseline             : 1.1
Found Date                    : 11/10/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/krb5/lib/ccache/file/fcc_retrv.c
Sensitivity                   : public

[11/10/95 public]

The KRB5_TC_MATCH_SRV_NAMEONLY matches all fields of a krb5_principal,
instead of just the server realm that the ticket was issued for. Thus,
a PTGT which was issued by an intermediate realm will not be retrieved
correctly by krb5_get_cred_from_kdc(), causing the error "Matching
credential not found" to be returned.

This is a krb5 bug which was introduced by the partial merge of krb5
beta 4 for DCE 1.1.

Diffs:

*** fcc_retrv.c@@/main/HPDCE02/mullan_chfts16698/0      Tue Nov  7 14:23:45 1995
--- fcc_retrv.c Tue Nov  7 14:33:34 1995
***************
*** 353,359 ****
      retval = krb5_principal_compare(mcreds->client,creds->client);
      if (retval != TRUE)
        return retval;
!     return krb5_principal_compare(mcreds->server, creds->server);
  }

  krb5_boolean
--- 353,359 ----
      retval = krb5_principal_compare(mcreds->client,creds->client);
      if (retval != TRUE)
        return retval;
!     return krb5_principal_compare(&(mcreds->server[1]),&(creds->server[1]));
  }

  krb5_boolean

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13160
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : server/rs
Short Description             : function call / prototype mismatch
					     causes secd crash
Reported Date                 : 10/25/95
Found in Baseline             : 1.1
Found Date                    : 10/25/95
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : rs_log_attr_schema.c
Sensitivity                   : public
Transarc Deltas               : osf-OT13160-match-param-to-prototype
Transarc Status               : 

[10/25/95 public]
rs_log_attr_schema.c:alloc_attr_sch_create() is passing a (* long) where
rsdb_attr_schema.c:rsdb_attr_sch_calc_size() expects a (* signed32).
The target of the pointer is a long local to alloc_attr_sch_create();
since it is on the stack, it is not always initialized to zero, which
results in a corrupt attribute schema entry size, and a SEGV when
memset() is called to initialize the schema entry.
	Also, the error code from rsdb_attr_sch_calc_size() is ignored
where it shouldn't be ignored.
	The fix is to change the local variable in alloc_attr_sch_create()
to a signed32, and to check the error code from rsdb_attr_sch_calc_size.
Context diffs:
****************
*** 159,167 ****
      long                      *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     long                sch_entry_len, total_size;
      unsigned32          length;
      Pointer             new_buf;
      CLEAR_STATUS(st_p);
--- 167,176 ----
      long                      *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     signed32          sch_entry_len;
!     long              total_size;
      unsigned32          length;
      Pointer             new_buf;
      CLEAR_STATUS(st_p);
***************
*** 168,175 ****
--- 177,185 ----
      *info_p = (rs_log_attr_sch_create_t *)NULL;
      total_size = sizeof(rs_log_attr_sch_create_t);
      rsdb_attr_sch_calc_size(sec_sch_entry_p, &sch_entry_len, st_p);
+     if (BAD_STATUS(st_p)) return;
      total_size += (sch_entry_len - sizeof(rsdb_attr_schema_entry_t) + name_len);
      if(!(new_buf = rpc_ss_allocate(total_size))) {
          SET_STATUS(st_p, sec_attr_no_memory);
***************
*** 190,198 ****
      long                      *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     long                sch_entry_len, total_size;
      unsigned32          length;
      Pointer             new_buf;
      CLEAR_STATUS(st_p);
--- 200,209 ----
      long                      *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     signed32          sch_entry_len;
!     long              total_size;
      unsigned32          length;
      Pointer             new_buf;
      CLEAR_STATUS(st_p);
***************
*** 199,206 ****
--- 210,218 ----
      *info_p = (rs_log_attr_sch_update_t *)NULL;
      total_size = sizeof(rs_log_attr_sch_update_t);
      rsdb_attr_sch_calc_size(sec_sch_entry_p, &sch_entry_len, st_p);
+     if (BAD_STATUS(st_p)) return;
      total_size += (sch_entry_len - sizeof(rsdb_attr_schema_entry_t) + name_len);
      if(!(new_buf = rpc_ss_allocate(total_size))) {
          SET_STATUS(st_p, sec_attr_no_memory);

[10/26/95 public]
After looking up several places, it looks more appropriate to change the 
data type for sch_entry_len from long to unsigned32 rather than signed32 as 
proposed by this defect.

[10/27/95 public]
Diffs:
*** h/rsdb_attr_schema.h@@/main/LATEST  Mon Aug  8 12:17:45 1994
--- h/rsdb_attr_schema.h        Thu Oct 26 17:22:32 1995
***************
*** 54,60 ****
  void rsdb_attr_sch_calc_size (
      sec_attr_schema_entry_t     *sec_sch_entry_p,       /* [in] */
!     signed32                    *size,                  /* [out] */
      error_status_t              *st_p
  );
--- 54,60 ----
  void rsdb_attr_sch_calc_size (
      sec_attr_schema_entry_t     *sec_sch_entry_p,       /* [in] */
!     unsigned32                  *size,                  /* [out] */
      error_status_t              *st_p
  );
*** server/rs/rs_log_attr_schema.c@@/main/LATEST        Tue Oct 25 19:24:20 1994
--- server/rs/rs_log_attr_schema.c      Thu Oct 26 17:29:52 1995
***************
*** 146,158 ****
      unsigned32                        name_len,               /* in */
      sec_attr_schema_entry_t   *sec_sch_entry_p,       /* in */
      rs_log_attr_sch_create_t  **info_p,               /* out */
!     long                      *size,                  /* out */
!     long                      *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     long                sch_entry_len, total_size;
!     unsigned32          length;
      Pointer             new_buf;
      CLEAR_STATUS(st_p);
--- 146,157 ----
      unsigned32                        name_len,               /* in */
      sec_attr_schema_entry_t   *sec_sch_entry_p,       /* in */
      rs_log_attr_sch_create_t  **info_p,               /* out */
!     unsigned32                        *size,                  /* out */
!     unsigned32                        *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     unsigned32          sch_entry_len, total_size;
      Pointer             new_buf;
      CLEAR_STATUS(st_p);
***************
*** 160,165 ****
--- 159,165 ----
      total_size = sizeof(rs_log_attr_sch_create_t);
      rsdb_attr_sch_calc_size(sec_sch_entry_p, &sch_entry_len, st_p);
+     if (BAD_STATUS(st_p)) return;
      total_size += (sch_entry_len - sizeof(rsdb_attr_schema_entry_t) + name_len);
      if(!(new_buf = rpc_ss_allocate(total_size))) {
***************
*** 191,196 ****
--- 191,197 ----
      total_size = sizeof(rs_log_attr_sch_update_t);
      rsdb_attr_sch_calc_size(sec_sch_entry_p, &sch_entry_len, st_p);
+     if (BAD_STATUS(st_p)) return;
      total_size += (sch_entry_len - sizeof(rsdb_attr_schema_entry_t) + name_len);
      if(!(new_buf = rpc_ss_allocate(total_size))) {
***************
*** 220,226 ****
      rs_replica_master_info_t    *master_info  /* [in] */
  )
  {
!     long                      size, schema_entry_size;
      rs_log_attr_sch_create_t  *info;
      unsigned32                        schema_name_len;
      error_status_t            st, *st_p = &st;
--- 221,227 ----
      rs_replica_master_info_t    *master_info  /* [in] */
  )
  {
!     unsigned32                        size, schema_entry_size;
      rs_log_attr_sch_create_t  *info;
      unsigned32                        schema_name_len;
      error_status_t            st, *st_p = &st;
*** server/rsdb/rsdb_attr_schema.c@@/main/HPDCE02/LATEST        Thu Mar  9 06:46:0
1 1995
--- server/rsdb/rsdb_attr_schema.c      Thu Oct 26 17:25:28 1995
***************
*** 287,294 ****
      )
  {
      int                 i, j;
!     long              sch_entry_len;
!     unsigned32                length;
      Pointer           new_buf;
      CLEAR_STATUS(st_p);
--- 287,293 ----
      )
  {
      int                 i, j;
!     unsigned32                sch_entry_len;
      Pointer           new_buf;
      CLEAR_STATUS(st_p);
***************
*** 295,301 ****
      *db_sch_entry_p = (rsdb_attr_schema_entry_t *)NULL;
      rsdb_attr_sch_calc_size(sec_sch_entry_p, &sch_entry_len, st_p);
!
      if(!(new_buf = malloc(sch_entry_len))) {
          SET_STATUS(st_p, sec_attr_no_memory);
          return;
--- 294,301 ----
      *db_sch_entry_p = (rsdb_attr_schema_entry_t *)NULL;
      rsdb_attr_sch_calc_size(sec_sch_entry_p, &sch_entry_len, st_p);
!     if (BAD_STATUS(st_p)) return;
!
      if(!(new_buf = malloc(sch_entry_len))) {
          SET_STATUS(st_p, sec_attr_no_memory);
          return;
***************
*** 386,398 ****
  PUBLIC void rsdb_attr_sch_calc_size
      (
      sec_attr_schema_entry_t   *sec_sch_entry_p,       /* [in] */
!     signed32                  *size,                  /* [out] */
      error_status_t            *st_p
      )
  {
      int                 i, j;
!     long              sch_entry_len;
!     unsigned32                length;
      CLEAR_STATUS(st_p);
      *size = 0;
--- 386,397 ----
  PUBLIC void rsdb_attr_sch_calc_size
      (
      sec_attr_schema_entry_t   *sec_sch_entry_p,       /* [in] */
!     unsigned32                        *size,                  /* [out] */
      error_status_t            *st_p
      )
  {
      int                 i, j;
!     unsigned32                sch_entry_len;
      CLEAR_STATUS(st_p);
      *size = 0;
***************
*** 422,428 ****
            sch_entry_len += sizeof(SA_TRG_BND_TYPE(sec_sch_entry_p, i));
            switch(SA_TRG_BND_TYPE(sec_sch_entry_p, i)) {
            case sec_attr_bind_type_string:
!               sch_entry_len += sizeof(length); /* store string length */
                sch_entry_len +=
                    u_strlen(SA_TRG_BND_STRING_P(sec_sch_entry_p, i));
                break;
--- 421,427 ----
            sch_entry_len += sizeof(SA_TRG_BND_TYPE(sec_sch_entry_p, i));
            switch(SA_TRG_BND_TYPE(sec_sch_entry_p, i)) {
            case sec_attr_bind_type_string:
!               sch_entry_len += sizeof(unsigned32); /* store string length */
                sch_entry_len +=
                    u_strlen(SA_TRG_BND_STRING_P(sec_sch_entry_p, i));
                break;
***************
*** 433,439 ****
                    for(j = 0;
                        j < SA_TRG_BND_TWRSET_COUNT(sec_sch_entry_p, i); j++) {
                        /* store tower_length */
!                       sch_entry_len += sizeof(length);
                        sch_entry_len +=
                            SA_TRG_BND_TWR_LEN(sec_sch_entry_p, i, j);
                    }
--- 432,438 ----
                    for(j = 0;
                        j < SA_TRG_BND_TWRSET_COUNT(sec_sch_entry_p, i); j++) {
                        /* store tower_length */
!                       sch_entry_len += sizeof(unsigned32);
                        sch_entry_len +=
                            SA_TRG_BND_TWR_LEN(sec_sch_entry_p, i, j);
                    }
***************
*** 443,449 ****
                if(SA_TRG_BND_SVRNAME_P(sec_sch_entry_p, i)) {
                    sch_entry_len +=
                        sizeof(SA_TRG_BND_SVRNAME_SYNTAX(sec_sch_entry_p, i));
!                   sch_entry_len += sizeof(length); /* store string length */
                    sch_entry_len +=
                        u_strlen(SA_TRG_BND_SVRNAME_NAME_P(sec_sch_entry_p, i));
                }
--- 442,448 ----
                if(SA_TRG_BND_SVRNAME_P(sec_sch_entry_p, i)) {
                    sch_entry_len +=
                        sizeof(SA_TRG_BND_SVRNAME_SYNTAX(sec_sch_entry_p, i));
!                   sch_entry_len += sizeof(unsigned32); /* store string length */
                    sch_entry_len +=
                        u_strlen(SA_TRG_BND_SVRNAME_NAME_P(sec_sch_entry_p, i));
                }

[12/20/95 public]
Fixed in DCE 1.2.1
Closed

[1/29/96 public]
Two necessary changes seem to be missing from the patch (line numbers
may be way off; the first chunk is from the header of alloc_attr_sch_update,
the second is from the local vars in rs_log_attr_schema_update).
Without these additional changes, compilation produces plentiful warnings.
***************
*** 192,204 ****
      unsigned32                        name_len,               /* in */
      sec_attr_schema_entry_t   *sec_sch_entry_p,       /* in */
      rs_log_attr_sch_update_t  **info_p,               /* out */
!     long                      *size,                  /* out */
!     long                      *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     long                sch_entry_len, total_size;
!     unsigned32          length;
      Pointer             new_buf;
 
      CLEAR_STATUS(st_p);
--- 209,220 ----
      unsigned32                        name_len,               /* in */
      sec_attr_schema_entry_t   *sec_sch_entry_p,       /* in */
      rs_log_attr_sch_update_t  **info_p,               /* out */
!     unsigned32                        *size,                  /* out */
!     unsigned32                        *size_schema_entry,     /* out */
      error_status_t            *st_p)                  /* out */
  {
      int                 i, j;
!     unsigned32          sch_entry_len, total_size;
      Pointer             new_buf;
 
      CLEAR_STATUS(st_p);
***************
*** 489,495 ****
      rs_replica_master_info_t        *master_info    /* [in] */
  )
  {
!     long                      size, schema_entry_size;
      rs_log_attr_sch_update_t  *info;
      unsigned32                        schema_name_len;
      error_status_t            st, *st_p = &st;
--- 506,512 ----
      rs_replica_master_info_t        *master_info    /* [in] */
  )
  {
!     unsigned32                        size, schema_entry_size;
      rs_log_attr_sch_update_t  *info;
      unsigned32                        schema_name_len;
      error_status_t            st, *st_p = &st;
Added field Transarc Deltas with value `osf-OT13160-match-param-to-prototype' 
Added field Transarc Status with value `'



CR Number                     : 13156
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : locksmith mode of secd can corrupt the update log
Reported Date                 : 10/18/95
Found in Baseline             : 1.1
Found Date                    : 10/18/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/rs/rs_auth.c
Sensitivity                   : public

[10/18/95 public]

Using the locksmith mode of secd with a locksmith principal that
exists (ex: secd -locksmith cell_admin -lockpw) corrupts the update
log, causing all subsequent restarts of secd to hang indefinitely.

Very serious, because the only workaround is to remove or try to
manually edit the update log potentially resulting in the loss of 
all registry updates since the last checkpoint.

Here are the diffs for the fix (warning - some line numbers may be  wrong):

*** rs_auth.c@@/main/13 Tue Sep 27 12:16:39 1994
--- rs_auth.c@@/main/HPDCE02/6  Wed Oct 18 14:42:23 1995
***************
*** 1382,1387 ****
--- 1422,1428 ----
      sec_passwd_rec_t          *creator_key,
      rs_acct_parts_t           modify_parts,
      sec_timeval_sec_t         creation_date,
+     sec_rgy_foreign_id_t      creator_ids,
      error_status_t            *stp
  )
  {
***************
*** 1394,1403 ****
      char                    name_buf[3 * sizeof(sec_rgy_name_t) + 1];
      rs_acct_key_transmit_t  *pickled_key = NULL;
      rs_acct_key_transmit_t  *pickled_unix_key = NULL;
-     sec_rgy_foreign_id_t    creator_ids;

-
-
      CLEAR_STATUS(stp);

      if (!(IS_SET(acct_user->flags, sec_rgy_acct_user_passwd_valid))) {
--- 1435,1441 ----
***************
*** 1783,1790 ****
      check_acct_policy_values(&login_name, &cursor, key_parts,
        &acct_user, &acct_admin, &passwd,
        &passwd_version_number,
!       &creator_key,
!       modify_parts, creation_date, stp);

      passwd.pepper = NULL;
      modify_parts = NULL;
--- 1817,1826 ----
      check_acct_policy_values(&login_name, &cursor, key_parts,
        &acct_user, &acct_admin, &passwd,
        &passwd_version_number,
!       creator_key, modify_parts,
!       creation_date, creator_ids, stp);
!     if (BAD_STATUS(stp))
!       goto out;

      passwd.pepper = NULL;
      modify_parts = NULL;
***************
*** 1794,1805 ****

      rsdb_acct_lookup( &login_name, &cursor, &sid, &unix_sid,
                        &key_parts, &acct_user, &acct_admin, stp );

      check_acct_policy_values(&login_name, &cursor, key_parts,
        &acct_user, &acct_admin, &passwd,
        &passwd_version_number,
!       &creator_key,
!       modify_parts, creation_date, stp);
 
      passwd.pepper = NULL;
      modify_parts = NULL;
--- 1830,1845 ----
 
      rsdb_acct_lookup( &login_name, &cursor, &sid, &unix_sid,
                        &key_parts, &acct_user, &acct_admin, stp );
+     if (BAD_STATUS(stp))
+       goto out;
 
      check_acct_policy_values(&login_name, &cursor, key_parts,
        &acct_user, &acct_admin, &passwd,
        &passwd_version_number,
!       creator_key, modify_parts,
!       creation_date, creator_ids, stp);
!     if (BAD_STATUS(stp))
!       goto out;
 
      passwd.pepper = NULL;
      modify_parts = NULL;
***************
*** 1822,1833 ****
 
      rsdb_acct_lookup( &login_name, &cursor, &sid, &unix_sid,
                        &key_parts, &acct_user, &acct_admin, stp );
 
      check_acct_policy_values(&login_name, &cursor, key_parts,
        &acct_user, &acct_admin, &passwd,
        &passwd_version_number,
!       &creator_key,
!       modify_parts, creation_date, stp);
 
  out:
      if (pickled_key)
--- 1862,1875 ----
 
      rsdb_acct_lookup( &login_name, &cursor, &sid, &unix_sid,
                        &key_parts, &acct_user, &acct_admin, stp );
+     if (BAD_STATUS(stp))
+       goto out;
 
      check_acct_policy_values(&login_name, &cursor, key_parts,
        &acct_user, &acct_admin, &passwd,
        &passwd_version_number,
!       creator_key, modify_parts,
!       creation_date, creator_ids, stp);
 
  out:
      if (pickled_key)

[12/20/95 public]
This fix was picked up with 1.2.1 also.  Marked 'closed'.



CR Number                     : 13155
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : group_override(5sec) manpage needed
Reported Date                 : 10/18/95
Found in Baseline             : 1.1
Found Date                    : 10/18/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : group_override.5sec, passwd_override.5sec, sec_intro.5sec, passwd_export.8sec
Sensitivity                   : public

[10/18/95 public]

Bob Binstock's Prentice Hall command reference edit for Prentice Hall
uncovered several references to a group_override(5sec) manpage.  However,
no such page exists.  The group override function is supported in R1.1 and
there should be a corresponding manpage to describe the file structure. All
of the necessary information for such a manpage is included in the Admin
Guide Core in section 36.2.3.

[Hasbrouck 10/18/95 public]

Sorry about this.  Digital was to have submitted this man page when
the group override code went in.  Fell through the cracks.  Judy Egan,
our doc supervisor, is in class this week.  Should be able to drop in
the doc source some time next week.

[Hasbrouck 10/26/95 public]

.\" This manpage source uses rsml coding.
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
...\"
...\" new manpage created by Mary Peraro on 7/15/94
.TH group_override "5sec" "" "" ""
.iX "group_override command"
.iX "commands " "group_override"
.SH "NAME"
\*Lgroup_override\*O - The registry group override file.
.SH "SYNOPSIS"
.sS
\*Vdcelocal\*L/etc/group_override\*O
.sE
.SH "DESCRIPTION"
.sp
The \*Vdcelocal\*L/etc/group_override\*O administrative file lets you
override the
group UNIX ID and member list for a group similar to the manner in which
the passwd_override
file
permits overriding information in the network registry database. The
override takes effect when you run passwd_export. It may also impact
local
security mechanisms of vendor specific implementations.
.sp
The \*Lgroup_override\*O file is stored on each machine. Any changes you
make
to it
are in effect for the local machine only, and have no effect on the
centralized
registry. You may find \*Lgroup_override\*O especially useful
for overriding the
default
group definitions supplied with the registry if they do not match your
local
UNIX system.
.SS "The group_override File Format"
The format of the \*Lgroup_override\*O entries is similar to entries in the
UNIX
group file. The format is as follows:
.sS
\*Vgroup_name\*L:\*Vpasswd\*L:\*Vgroup_uid\*L:\*Vmembers\*O
.sE
.sp
In the override entry, \*Vgroup_name\*O and \*Vgroup_uid\*O are
keyfields.
You must enter one to
identify the group to which the override applies. The keyfield is used
to
perform a lookup in the override file. The lookup is performed in order
as the
fields are specified in an override entry: first by group name,
then by group
UNIX ID. If you specify both keyfields in an override entry, the
\*Vgroup_name\*O is
used as the lookup key; subsequent fields are
used as overrides.
.SS "Field Descriptions"
.sp
Each of the entries in the \*Vgroup_override\*O file is described below.
.sp
.VL
.LI "\*Vgroup_name\*O"
A keyfield that contains the name that identifies the group to which the
override applies.
.LI "\*Vpasswd\*O"
This field specifies the encrypted password. If you specify an override
in this field, the password you enter is in effect for this local
machine only.
.sp
You can also specify \*LOMIT\*O in the \*Vpasswd\*O field to disallow
\*Lnewgrp's\*O to this group on the local machine. The use of \*LOMIT\*O
in conjunction with an option to the \*Lpasswd_export\*O command also
prevents the inclusion of this group in the group file created by
\*Lpasswd_export\*O. (See the section entitled "Using OMIT," later in
this command reference, for details.)
.LI "\*Vgroup_uid\*O"
A group UNIX ID. This field can function as a keyfield, when no other
keyfields are entered, or as a field containing an override, when
entered in conjunction with \*Vgroup_name\*O. This field specifies the
local
override of the group ID supplied by the network registry server.
.LI "\*Vmembers\*O"
This field specifies a comma-separated list of members of the group. The
contents of this field will override information in the registry when
\*Lpasswd_export\*O creates an \*L/etc/group\*O file. Note that to specify
a
null membership, as opposed to indicating no override is required, use
an asterisk (*) for this field.
.LE
.SS "Leaving Fields Blank"
.sp
If you do not want to override an item, leave its field blank,
separating each blank field with a colon (:). Note that to override a
group with a null membership list, enter an asterisk (*) for
the \*Vmembers\*O field.
.SS "Using OMIT"
.sp
If you enter either the word \*LOMIT\*O or another invalid password string
(such
as an asterisk or \*LNO GOOD\*O) in the \*Vpasswd\*O field, users will not
be
able to issue a \*Lnewgrp\*O to this group on the local machine. If you
specify \*LOMIT\*O and run \*Lpasswd_export\*O with the \*L-x\*O option,
the named group will not appear in the \*L/etc/group\*O file produced by
\*Lpasswd_export\*O.
.sp
You should also be aware that, if you have omitted groups from the
\*L/etc/group\*O file, information about those groups will not be available
to
any programs that use the group file. For example, the \*Lls -lg\*O command
accesses the group file to obtain further information about a group. If
the group is omitted, no group entry will exist and no information will
be available. For this reason you should use \*LOMIT\*O to omit groups from
the \*L/etc/group\*O file only if your user community is very large and
either
of the following conditions occur:
.ML
.LI
The \*Lgroup\*O file is taking up too much space.
.LI
Group-ID-to-name mapping is too slow (during \*Lls -lg\*O, for example).
.LE
.SH "EXAMPLES"
.AL
.LI
To override the group ID of group kmem to be 3, the entry in the
\*Lgroup_override\*O file is as follows:
.sp
.oS
kmem::3:
.oE
.sp
.LI
To override the membership for group system to
be the single account root, the entry is as follows:
.sp
.oS
system:::root
.oE
.sp
.LE
.SH "RELATED INFORMATION"
.sp
Command:
\*Lpasswd_export(8sec)\*O

[11/15/95 public]

A modified version of the above page has been added to the OSF DCE
Command Reference.  The passwd_override(5sec), sec_intro(5sec), and 
passwd_export(8sec) ref pages have also been modified to reflect its inclusion.



CR Number                     : 13152
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Attribute deletes not getting propagated to replicas
Reported Date                 : 10/12/95
Found in Baseline             : 1.1
Found Date                    : 10/12/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : security/server/rs/rs_attr.c
Sensitivity                   : public

[10/12/95 public]

rs_attr_delete() is calling rs_attr_log_update() rather than 
rs_attr_log_delete() (looks like a copy/paste error).  Thus, if
you delete attributes, the replicas never find out about the
deletion...

[10/13/95 public]

And here are the diffs:

*** rs_attr.c@@/main/mullan_chfts16628/0        Fri Oct 13 10:21:52 1995
--- rs_attr.c   Fri Oct 13 10:24:39 1995
***************
*** 749,755 ****
                  sprintf(buf, "Deleted attributes on object %s",
                    (char *)component_name);
                  rs_audit_trail_log(h, buf, (char *)component_name);
!                 rs_log_attr_update(component_name, num_to_delete, attrs,
                    NULL_PTR);
            }
        }
--- 749,755 ----
                  sprintf(buf, "Deleted attributes on object %s",
                    (char *)component_name);
                  rs_audit_trail_log(h, buf, (char *)component_name);
!                 rs_log_attr_delete(component_name, num_to_delete, attrs,
                    NULL_PTR);
            }
        }

[12/20/95 public]
This also appears to have been picked up by 1.2.1.  Marked 'closed'.

[1/11/96 public]
Fixed as shown above in 1.1-maint.



CR Number                     : 13148
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dce_acl_
Short Description             : dce_acl_ access checking bugs
Reported Date                 : 10/9/95
Found in Baseline             : 1.1
Found Date                    : 10/9/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : dce/utils/acldb/acleval.c
Sensitivity                   : public

[10/9/95 public]

Anybody got a time machine so I can go back a year and make more time for
reviewing things?

Seiichi noticed while doing his dced acl work that the unauth_mask in
dce_acl_inq_permset_for_creds() was initialized to 0 and expected to be
returned from it's call to dce__acl_permset_alg(), but the latter rtn
never set it to anything, so the former would be hosed if it used it.

While reviewing this for Seiichi, I noticed that the delegation checks
were not added correctly to dce_acl_inq_permset_for_creds().  The right
code was dropped in place, but it was dropped incorrectly.  The mask
checking only shows up once (since the dlg loop was dropped between the
initiator check and the mask application) AND, the initiator check incorrectly
returns before the dlg checks have a chance to be performed if it doesn't
need to be masked again (ie, if it matched a user_obj or other_obj entry).
The fact that most of the applications of the unauth_mask occur in
dce_acl_inq_permset_for_creds() and the rest in dce__acl_permset_alg() 
is too confusing and probably lead to these bugs in the first place...

Seiichi's dced proposal includes the fix for the first problem listed above,
I'll post the diffs for the rest of the fix here when I finish them.

[10/9/95 public]
Upon reviewing more of the code, I found that dce_acl__inq_unauthen_perms()
(used when there's no credentials at all from the runtime, so you need to
check for any_other as an anonymous caller) was broken too.  The diffs for
that fix will be coming soon too...

[12/20/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13146
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : audit points in parse_name/gen_name lead to distributed deadlock
Reported Date                 : 10/5/95
Found in Baseline             : 1.1
Found Date                    : 10/5/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security
Sensitivity                   : public

[10/5/95 public]

The audit library uses sec_id_parse_name() and sec_id_gen_name().

These calls may make remote calls to the security server.

The remote calls they make (rsec_id_{parse,gen}_name{,_cache}) have audit
points embedded in them.

Depending on the audit configuration, one can induce a distributed deadlock
between the security servers of two or more cells.

The audit points in rs_secidmap.c absolutely positively must go.

[There are other recursive dependancies between audit and security which
make the security audit points dangerous, but this is the only one where we
found we needed to rip out the audit points themselves].

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13141
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : passwd_export
Short Description             : passwd_export group override loop check wrong
Reported Date                 : 10/4/95
Found in Baseline             : 1.1
Found Date                    : 10/4/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/admin/passwd_export/passwd_export.c
Sensitivity                   : public

[10/4/95 public]

In make_files() the loop check for group_override lookups is wrong.  It's
checking to see if members_saved <= num_members and it should be checking
if members_saved < num_members.

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13130
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : process_tgs_req() frees ticket twice when principal not found
Reported Date                 : 9/19/95
Found in Baseline             : 1.1wp
Found Date                    : 9/19/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : security/krb5/kdc/do_tgs_req.c
Sensitivity                   : public

[9/22/95 public]

(from Greg Bostrom at Tandem)

process_tgs_req() duplicates a pointer to a ticket:
- - - - - - - -
 errcode = kdc_process_tgs_req(request, from, pkt, &req_authdat);
    if (req_authdat)
        header_ticket = req_authdat->ticket;
- - - - - - - -

During "cleanup:" if status has been set because of an error,
the ticket is freed twice, once by prepare_error_tgs() and again by
krb5_free_tkt_authent().  The code looks like:
- - - - - - - -
        retval = prepare_error_tgs(request, header_ticket, errcode,
                                   fromstring, response);
    }

#ifndef KRB5_BETA1
    if (request)
        krb5_free_kdc_req(request);
#endif
    if (req_authdat)
        krb5_free_tkt_authent(req_authdat);
- - - - - - - -


Proposed Solution:

My kludge fix:
- - - - - - - -
        retval = prepare_error_tgs(request, header_ticket, errcode,
                                   fromstring, response);
        if (header_ticket == req_authdat->ticket) {
            /* prepare_error_tgs freed the ticket, so don't do it again */
            req_authdat->ticket = NULL;
        }
- - - - - - - -

[12/20/95 public]
This fix also appears to have been picked up by 1.2.1 (although it was fixed
before this OT was opened, so it's slightly different than the above
proposal).  Marked 'closed'.

[1/12/96 public]
Fixed as in 1.2.1.  Here is the diff:

./security/krb5/kdc/do_tgs_req.c
Comparing the file in your sandbox with revision 1.1.15.1.
9a10,11
>  *    OT 13130 - process_tgs_req() frees ticket twice.  Don't free
>  *    ticket in prepare_error_tgs().
11,13d12
<  * Revision 1.1.15.1  1996/01/09  18:42:56  dlynch
<  * *** Initial Branch Revision ***
<  *
94c93
<  * $Author: root $
---
>  * $Author: root $
121c120
< "$Id: c013130,v 1.4 96/01/12 12:12:48 root Exp $";
---
> "$Id: c013130,v 1.4 96/01/12 12:12:48 root Exp $";
1011,1013c1010
<     if (retval = krb5_us_timeofday(&errpkt.stime, &errpkt.susec)) {
<       if (ticket)
<           krb5_free_ticket(ticket);
---
>     if (retval = krb5_us_timeofday(&errpkt.stime, &errpkt.susec)) 
1015d1011
<     }
1023,1025c1019
<     if (!(errpkt.text.data = malloc(errpkt.text.length))) {
<       if (ticket)
<           krb5_free_ticket(ticket);
---
>     if (!(errpkt.text.data = malloc(errpkt.text.length))) 
1027d1020
<     }
1032,1033d1024
<       if (ticket)
<           krb5_free_ticket(ticket);
1042,1043d1032
<     if (ticket)
<       krb5_free_ticket(ticket);



CR Number                     : 13126
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : group overrides
Short Description             : Group overrides broken wrt mbrship
Reported Date                 : 9/15/95
Found in Baseline             : 1.1
Found Date                    : 9/15/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/admin/passwd_export/passwd_export.c
Sensitivity                   : public

[9/15/95 public]

If you override a GID, things seem to work as they should.
If you try to override group membership by specifying members at the
end of a group override entry, you get a broken looking membership
line in the /etc/group file created (mbrs listed twice with no separator
between the two copies of the names...).

[12/20/95 public]
Fixed in 1.2.1 version of passwd_export.c
Marked 'closed'.



CR Number                     : 13123
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd coredumps creating bad principal name
Reported Date                 : 9/15/95
Found in Baseline             : 1.1
Found Date                    : 9/15/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : sec
Sensitivity                   : public
Transarc Deltas               : 
Transarc Status               : open

[9/15/95 public]
This can be reproduced via: "dcecp -c principal create foo//bar/foo".
Interestingly enough, "dcecp -c principal create foo//bar" doesn't
cause a dump, and creates the principal foo/bar (one slash).  "dcecp
-c principal delete foo//bar" gets "Error: Registry object not found".
You can delete the foo/bar principal by supplying a single slash, as
one might expect.  The double slash (ie: a null path component) is
probably illegal, and should be flagged as an error by the rs_pgo_add
logic.
The coredump comes from rsdb_util_build_dirs trying to create a
directory with a trailing slash in its name.  rsdb_dir_create calls
rsdb_util_store_new_named_item, which calls rsdb_store.  That calls
insert_data which fails, triggering a error message and an abort via
dce_svc_printf_withfile.
I suppose another fix would be to emulate unix seperator semantics and
have rsdb_util_build_dirs compress multiple slashes into single
slashes.  This would require similar changes elsewhere (ie: in the
lookup routines) to present a consistant interface.
Added field Transarc Deltas with value `' 
Added field Transarc Status with value `open'

[10/5/95 public]
Following fix applied at HP:
RECOMMENDED CHANGE (briefly):
Canonicalize all names when they reach the Registry Server so that
each instance of "//" is converted to "/".
LIST THE SOURCE FILES AFFECTED BY THE CHANGE:
/dce/src/security/h/rsdb_name_util.h
/dce/src/security/server/rsdb/rsdb_name_util.c
/dce/src/security/server/rs/rs_pgo.c
ADDITIONAL COMMENTS (optional, brief):
Most entry points for names already call either rsdb_name_canonicalize()
or rsdb_name_canonicalize_and_convert().  I created a new function
rsdb_name_canonicalize_components(), and added calls to it inside
rsdb_name_canonicalize(), rsdb_name_canonicalize_and_convert(), and
to the branches of rs_pgo.c functions that avoid a call to the existing
functions for non-principal domain names.

An alternative change would be to disallow names containing "//" in
the Registry Server entry points (easy to do in the LEGAL_PGO_NAME macro),
and require client code to do any canonicalization.  Doing it on the
Registry Server side means the canonicalization code is not replicated,
and client code is more likely to be consistent.
DIFFS:
***********************************************************
Directory: /dce/src/security
*** h/rsdb_name_util.h@@/main/2	Tue Dec 29 13:26:20 1992
--- h/rsdb_name_util.h@@/main/aha_mothra10/2	Wed Oct  4 08:13:36 1995
***************
*** 8,13 ****
--- 8,20 ----
  /*
   * HISTORY
   * $Log:	c013123,v $
# Revision 1.4  96/01/05  09:20:25  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [wwang 1/5/96 public]
# 
# Revision 1.3  95/12/20  09:44:47  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [white_r 12/20/95 public]
# 
# Revision 1.2  95/10/05  15:42:54  root
# changed fields:  new/changed/deleted note(s) [aha@ch.hp.com 10/5/95 public]
# 
+  * Revision /main/aha_mothra10/2  1995/10/04  12:13 UTC  aha
+  * 	CHFts16436: collapse // to / in pgo names;
+  * 	 eliminate non-ANSI code
+  * 
+  * Revision /main/aha_mothra10/1  1995/10/02  20:23 UTC  aha
+  * 	CHFts16436: add rsdb_name_canonicalize_components()
+  * 
   * Revision 1.1.2.2  1992/12/29  13:26:20  zeliff
   * 	Embedding copyright notice
   * 	[1992/12/28  20:15:27  zeliff]
***************
*** 44,49 ****
--- 51,60 ----
  enum prefix_type_t { rsdb_prefix, rsdb_identity,
                          rsdb_over_qualified } prefix_type_t;
  
+ 
+ PUBLIC void rsdb_name_canonicalize_components (
+     sec_rgy_name_t  namep
+ );
  
  PUBLIC void rsdb_name_canonicalize (
  #ifdef __STDC__
***********************************************************
Directory: /dce/src/security
*** server/rsdb/rsdb_name_util.c@@/main/3	Fri Jul 15 12:40:49 1994
--- server/rsdb/rsdb_name_util.c@@/main/aha_mothra10/4	Tue Oct  3 17:39:40 1995
***************
*** 8,13 ****
--- 8,25 ----
  /*
   * HISTORY
   * $Log:	c013123,v $
# Revision 1.4  96/01/05  09:20:25  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [wwang 1/5/96 public]
# 
# Revision 1.3  95/12/20  09:44:47  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [white_r 12/20/95 public]
# 
# Revision 1.2  95/10/05  15:42:54  root
# changed fields:  new/changed/deleted note(s) [aha@ch.hp.com 10/5/95 public]
# 
+  * Revision /main/aha_mothra10/4  1995/10/03  21:39 UTC  aha
+  * 	CHFts16436: coding style improvements based on review
+  * 
+  * Revision /main/aha_mothra10/3  1995/10/02  20:24 UTC  aha
+  * 	CHFts16436: add rsdb_canonicalize_components()
+  * 
+  * Revision /main/aha_mothra10/2  1995/10/02  18:25 UTC  aha
+  * 	CHFts16436: add //->/ code to rsdb_canonicalize_and_convert
+  * 
+  * Revision /main/aha_mothra10/1  1995/10/02  17:39 UTC  aha
+  * 	CHFts16436: pgo name with // crashes secd
+  * 
   * Revision 1.1.6.1  1994/07/15  15:02:54  mdf
   * 	Hewlett Packard Security Code Drop
   * 	[1994/07/14  17:23:32  mdf]
***************
*** 48,58 ****
--- 60,102 ----
  #include <un_strng.h>
  #include <u_str.h>
  
+ /* r s d b _ n a m e _ c a n o n i c a l i z e _ c o m p o n e n t s 
+  *
+  * CHFts16436: canonicalize components of a name by collapsing
+  * any adjacent "//" to a single "/".  Modification takes place
+  * in place (result will always be the same length or shorter).
+  */
+ 
+ PUBLIC void rsdb_name_canonicalize_components
+   (
+     sec_rgy_name_t  namep
+   )
+ {
+     unsigned_char_t *charnext;
+     unsigned_char_t *charlast;
+ 
+     /* collapse any // to / */
+     charnext=charlast=namep;
+     while (*charlast) {
+ 	*charlast = *charnext++;
+         /* charnext now points to the character 
+          * that will be copied on the next loop.
+          * If both it and the character we just 
+          * copied are "/", then we collapse them
+          * by not advancing the "last copied" pointer.
+          */
+ 	if (*charnext != '/' || *charlast != '/') {
+ 	    charlast++;
+ 	}
+     }
+ }
+ 
  /* r s d b _ n a m e _ c a n o n i c a l i z e
   *
   * canonicalize a global name.  If the name begins with a /... or
   * krbtgt/ then the residual is canonicalized using the NSI entry_expand_name
   * function.  Expansion takes place in place.
+  * CHFts16436: also collapse adjacent // to a single /
   */
  
  PUBLIC void rsdb_name_canonicalize
***************
*** 72,77 ****
--- 116,124 ----
      error_status_t  lst;
      unsigned_char_t *exp_name;
  
+     /* CHFts16436: collapse any // to / */
+     rsdb_name_canonicalize_components(cell_namep);
+ 
      /*
       * Handle krbtgt/ relative names.
       */
***************
*** 114,119 ****
--- 161,167 ----
   * krbtgt/ then the residual is canonicalized using the NSI entry_expand_name
   * function.  /... relative names are converted into krbtgt relative names.
   * Expansion takes place in place.
+  * CHFts16436: also collapse adjacent // to a single /
   */
  
  PUBLIC void rsdb_name_canonicalize_and_convert
***************
*** 132,137 ****
--- 180,188 ----
      boolean32       is_local;
      error_status_t  lst;
      unsigned_char_t *exp_name;
+ 
+     /* CHFts16436: collapse any // to / */
+     rsdb_name_canonicalize_components(cell_namep);
  
      /*
       * Handle krbtgt/ relative names.
***********************************************************
Directory: /dce/src/security
*** server/rs/rs_pgo.c@@/main/HPDCE02/4	Thu Jul 20 14:39:44 1995
--- server/rs/rs_pgo.c@@/main/HPDCE02/aha_mothra10/1	Mon Oct  2 16:24:32 1995
***************
*** 8,13 ****
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c013123,v $
# Revision 1.4  96/01/05  09:20:25  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [wwang 1/5/96 public]
# 
# Revision 1.3  95/12/20  09:44:47  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [white_r 12/20/95 public]
# 
# Revision 1.2  95/10/05  15:42:54  root
# changed fields:  new/changed/deleted note(s) [aha@ch.hp.com 10/5/95 public]
# 
+  * Revision /main/HPDCE02/aha_mothra10/1  1995/10/02  20:24 UTC  aha
+  * 	CHFts16436: call rsdb_name_canonicalize_components() for non-principal names
+  * 
   * Revision /main/HPDCE02/4  1995/07/20  18:39 UTC  aha
   * 	CHFts15254: prevent addition of ambiguous child cell or principal
   * 	  directory names (OT12680)
***************
*** 126,132 ****
  
  #ifdef MODULE_VERSION_ID
  static char *VersionID =
!     "$Id: c013123,v 1.4 96/01/05 09:20:25 root Exp $";
  #endif
  
  #include <dce/rpc.h>
--- 129,135 ----
  
  #ifdef MODULE_VERSION_ID
  static char *VersionID =
!     "$Id: c013123,v 1.4 96/01/05 09:20:25 root Exp $";
  #endif
  
  #include <dce/rpc.h>
***************
*** 349,356 ****
      if ( !LEGAL_PGO_NAME(pgo_name) || !query_is_dcepcs(pgo_name))
          SET_STATUS(status, sec_rgy_bad_name);
                    
!     if (STATUS_OK(status) &&  (name_domain == sec_rgy_domain_person)) {
  
          rsdb_name_canonicalize_and_convert(pgo_name, status);
          if (is_cell = rsdb_name_util_is_cell(pgo_name, status)) {
              /*
--- 352,361 ----
      if ( !LEGAL_PGO_NAME(pgo_name) || !query_is_dcepcs(pgo_name))
          SET_STATUS(status, sec_rgy_bad_name);
                    
!     if (STATUS_OK(status)) {
  
+       if (name_domain == sec_rgy_domain_person) {
+ 
          rsdb_name_canonicalize_and_convert(pgo_name, status);
          if (is_cell = rsdb_name_util_is_cell(pgo_name, status)) {
              /*
***************
*** 373,378 ****
--- 378,389 ----
                  );
              }
          }
+       } else {
+ 
+         /* CHFts16436: collapse any "//" to "/" */
+         rsdb_name_canonicalize_components(pgo_name);
+ 
+       }
      }
  
      if (STATUS_OK(status)) { 
***************
*** 562,568 ****
          rs_util_bad_client(h, "rs_pgo_delete", status);
      }
  
!     if (GOOD_STATUS(status) && name_domain == sec_rgy_domain_person) {
          rsdb_name_canonicalize_and_convert(pgo_name, status);
          if (GOOD_STATUS(status)) {
              /* get /.../cell_name */
--- 573,582 ----
          rs_util_bad_client(h, "rs_pgo_delete", status);
      }
  
!     if (GOOD_STATUS(status)) {
! 
!       if (name_domain == sec_rgy_domain_person) {
! 
          rsdb_name_canonicalize_and_convert(pgo_name, status);
          if (GOOD_STATUS(status)) {
              /* get /.../cell_name */
***************
*** 587,592 ****
--- 601,612 ----
                  free(cell_name);
              }
          }
+       } else {
+ 
+         /* CHFts16436: collapse any "//" to "/" */
+         rsdb_name_canonicalize_components(pgo_name);
+ 
+       }
      }
  
  #if defined(DCE_AUD_POINTS)
***************
*** 689,696 ****
  
      is_cell = rsdb_name_util_is_cell(pgo_name, &tmp_status);
  
!     if (GOOD_STATUS(status) && name_domain == sec_rgy_domain_person) {
          rsdb_name_canonicalize_and_convert(pgo_name, status);
      }
  
  #if defined(DCE_AUD_POINTS)
--- 709,721 ----
  
      is_cell = rsdb_name_util_is_cell(pgo_name, &tmp_status);
  
!     if (GOOD_STATUS(status)) {
!       if (name_domain == sec_rgy_domain_person) {
          rsdb_name_canonicalize_and_convert(pgo_name, status);
+       } else {
+         /* CHFts16436: collapse any "//" to "/" */
+         rsdb_name_canonicalize_components(pgo_name);
+       }
      }
  
  #if defined(DCE_AUD_POINTS)
***************
*** 839,844 ****
--- 864,873 ----
          if (STATUS_OK(status)) {
              rsdb_name_canonicalize_and_convert(old_name, status);
          }
+     } else {
+         /* CHFts16436: collapse any "//" to "/" */
+         rsdb_name_canonicalize_components(new_name);
+         rsdb_name_canonicalize_components(old_name);
      }
  
      if (STATUS_OK(status)) {
***************
*** 1046,1052 ****
--- 1075,1084 ----
                             
                      if (name_domain == sec_rgy_domain_person) {
                          rsdb_name_canonicalize_and_convert(QUERY_NAME(*key), &status);
+                     } else {
+                         rsdb_name_canonicalize_components(QUERY_NAME(*key));
                      }
+ 
                      if (STATUS_OK(&status)) {
                          rsdb_pgo_get_by_name(name_domain, QUERY_NAME(*key),
                                               item_cursor, &(RESULT_ITEM(*result)),
***************
*** 1251,1256 ****
--- 1283,1290 ----
                        
                          if (name_domain == sec_rgy_domain_person) {
                              rsdb_name_canonicalize_and_convert(QUERY_NAME(*key), status);
+                         } else {
+                             rsdb_name_canonicalize_components(QUERY_NAME(*key));
                          }
                                
                          if (STATUS_OK(status)) {
***************
*** 1712,1719 ****
          rs_util_bad_client(h, "rs_pgo_get_members", status);
      }
  
!     if (STATUS_OK(status) && name_domain == sec_rgy_domain_person) {
!         rsdb_name_canonicalize_and_convert(go_name, status);
      }
  
      if (STATUS_OK(status)) {
--- 1746,1757 ----
          rs_util_bad_client(h, "rs_pgo_get_members", status);
      }
  
!     if (STATUS_OK(status)) {
!         if (name_domain == sec_rgy_domain_person) {
!             rsdb_name_canonicalize_and_convert(go_name, status);
!         } else {
!             rsdb_name_canonicalize_components(go_name);
!         }
      }
  
      if (STATUS_OK(status)) {

[12/20/95 public]
Fixed in DCE 1.2.1
Closed

[1/5/96 public]
Fixes submitted to 1.1 maintenance tree.



CR Number                     : 13122
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_attr_lookup_by_id
incorrectly processes triggers when num_attr_keys set to 0
Reported Date                 : 9/14/95
Found in Baseline             : 1.1
Found Date                    : 9/14/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : client/rca/sec_rgy_attr.c
Sensitivity                   : public

[9/14/95 public]

The man page for sec_rgy_attr_lookup_by_id() says that:

"Note that if you set num_attr_keys to zero to return all of the object's
attributes and that attribute is associated with a query attribute trigger,
the attribute trigger will be called with no input attribute information
(that would normally have been passed in via the attr_value field)."

Yet in the implementation of sec_rgy_attr_lookup_by_id(), num_attr_keys
gets passed to sec_rgy_triggers() where it is used to bound a loop
through the attribute list where triggers are invoked.  My understanding
of this logic is that if the user passes in 0 for num_attr_keys
for sec_rgy_attr_lookup_by_id(), then no attribute trigger is ever
called.

The other problem is that sec_rgy_triggers() malloc's a processing
array and uses num_attr_keys to compute the size of this array.
A malloc(0), in this case, is not useful, no matter what your plans
are.

Either the documentation is wrong and triggers are never invoked
when num_attr_keys is 0, or the code is wrong.  I don't understand
ERA's enough to know what is right.  Could HP comment on this?
In any case, the "malloc(0)" should probably be avoided.

Incidentally, this came up because we decided to check the status
of the malloc(num_attr_keys) in sec_rgy_trigger (per suggestion of
OT 13033), and this caused a test case to fail in
ts/client/rca/sec_rgy_attr.

[12/20/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13110
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : login
Short Description             : core dump in sec_login_valid_and_cert_ident() for a refreshed ticket.
Reported Date                 : 9/8/95
Found in Baseline             : 1.1
Found Date                    : 9/8/95
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : ecurity
Sensitivity                   : public

[9/8/95 public]

When sec_login_valid_and_cert_ident() is used to validate and certify
login context refreshed by sec_login_refresh_identity(), 
sec_login_valid_and_cert_ident() core dumps while trying to store the TGT data
in the local registry (in sec_login_pvt_lrgy_store()) , because the lcp->krbinfo.tgt_data is NULL. 
Login is context (lcp) is being synchronised with refreshed login context (rcp)
in sec_login_valid_and_cert_ident() but lcp->krbinfo.tgt_data is invalid
but rcp->krbinfo.tgt_data is valid.

Should sec_login_pvt_lrgy_store() be given the refreshed context when dealing
with refreshed login context in sec_login_valid_and_cert_ident()?


Suggested fix:
==============================================================================
File: security/client/login/sec_login.c
===================================================================
RCS file: security/client/login/RCS/sec_login.c,v
retrieving revision 12.5
retrieving revision 12.8
diff -c -r12.5 -r12.8
*** 12.5        1995/04/03 15:03:30
--- 12.8        1995/09/19 18:56:18
***************
*** 827,833 ****
          (lcp->state == certified) && (GOOD_STATUS(st)) &&
          (UNIX_CREDS(lcp).pwent != NULL)) {
              /* Store the login context in the local registry */
!         sec_login_pvt_lrgy_store(lcp, &lst);
      }
  
      if (rcp != NULL)
--- 834,843 ----
          (lcp->state == certified) && (GOOD_STATUS(st)) &&
          (UNIX_CREDS(lcp).pwent != NULL)) {
              /* Store the login context in the local registry */
!         if (refresh)
!             sec_login_pvt_lrgy_store(rcp, &lst);
!         else
!             sec_login_pvt_lrgy_store(lcp, &lst);
      }
  
      if (rcp != NULL)

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13090
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : gss_unseal does not use conf_state & qop_state parameters
Reported Date                 : 8/31/95
Found in Baseline             : 1.1
Found Date                    : 8/31/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : gssapi.c
Sensitivity                   : public

[8/31/95 public]

The gss_unseal routine does not use the conf_state & qop_state parameters.
It is therefore not possible for the caller to find out whether or not the
message was encrypted and the strength of protection that was used to
provide the confidentiality & integrity services.

[9/1/95 public]

gss_verify doesn't set qop_state either.  Here's the output from differences
for file gssapi.c that shows a fix for the problem in both gss_unseal and
gss_verify.  Note that the line numbers below refer to the file in the 1.1
tree - If you've incorporated any other patches to gssapi.c, they'll likely be
wrong.

************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;2
 8043       if (qop_state) *qop_state = 0;
 8044
 8045       if ((message_buffer== NULL) || (token_buffer ==NULL)) {
 8046           *minor_status = gssdce_s_no_buffer;
 8047           O_status = GSS_S_FAILURE;
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;1
 8043       if ((message_buffer== NULL) || (token_buffer ==NULL)) {
 8044           *minor_status = gssdce_s_no_buffer;
 8045           O_status = GSS_S_FAILURE;
************
************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;2
 8223       if (qop_state) {
 8224           if (sign_alg_type == SIGN_ALG_MD5) {
 8225               *qop_state = GSSDCE_C_QOP_MD5;
 8226           } else if (sign_alg_type == SIGN_ALG_DES_MAC) {
 8227               *qop_state = GSSDCE_C_QOP_DES_MAC;
 8228           } else if (sign_alg_type == SIGN_ALG_DES_MD5) {
 8229               *qop_state = GSSDCE_C_QOP_DES_MD5;
 8230           };
 8231       };
 8232
 8233
 8234
 8235       if (memcmp(loc_checksum_buffer,
 8236                  packet_checksum,
 8237                  sizeof(packet_checksum)) != 0) {
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;1
 8221       if (memcmp(loc_checksum_buffer,
 8222                  packet_checksum,
 8223                  sizeof(packet_checksum)) != 0) {
************
************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;2
 8400       if (conf_state) *conf_state = 0;
 8401       if (qop_state) *qop_state = 0;
 8402
 8403       if ((message_buffer== NULL) || (token_buffer ==NULL)) {
 8404           *minor_status = gssdce_s_no_buffer;
 8405           O_status = GSS_S_FAILURE;
 8406           goto gss_unseal_return;
 8407       };
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;1
 8386       if ((message_buffer== NULL) || (token_buffer ==NULL)) {
 8387           *minor_status = gssdce_s_no_buffer;
 8388           O_status = GSS_S_FAILURE;
 8389           goto gss_unseal_return;
 8390       };
************
************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;2
 8479           if (conf_state) *conf_state = 1;
 8480
 8481   /* Decrypt confounder, followed by data.                               
 8482           gss_decrypt_DES_CBC(
 8483               zero_block,             /* IV                              
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;1
 8462
 8463   /* Decrypt confounder, followed by data.                               
 8464           gss_decrypt_DES_CBC(
 8465               zero_block,             /* IV                              
************
************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;2
 8668       if (qop_state) {
 8669           if (sign_alg_type == SIGN_ALG_MD5) {
 8670               *qop_state = GSSDCE_C_QOP_MD5;
 8671           } else if (sign_alg_type == SIGN_ALG_DES_MAC) {
 8672               *qop_state = GSSDCE_C_QOP_DES_MAC;
 8673           } else if (sign_alg_type == SIGN_ALG_DES_MD5) {
 8674               *qop_state = GSSDCE_C_QOP_DES_MD5;
 8675           };
 8676       };
 8677
 8678
 8679
 8680       if (memcmp(loc_checksum_buffer,
 8681                  packet_checksum,
 8682                  sizeof(packet_checksum)) != 0) {
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;1
 8650       if (memcmp(loc_checksum_buffer,
 8651                  packet_checksum,
 8652                  sizeof(packet_checksum)) != 0) {
************

Number of difference sections found: 5

[11/21/95]

Fixed as proposed above.

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13089
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd not treating unwanted name based auth as anonymous (as did 1.0.3)
Reported Date                 : 8/31/95
Found in Baseline             : 1.1
Found Date                    : 8/31/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/rs/rs_auth.c
Sensitivity                   : public

[8/31/95 public]

********************************
<<< file 1: /vob/dce/src/security/server/rs/rs_auth.c@@/main/DCE1_1_WP/2
>>> file 2: rs_auth.c
********************************
------------[changed 138]--------------|------------[changed to 138]-----------
** Copyright (c) Hewlett-Packard Compa+| ** Copyright (c) Hewlett-Packard Compa+
                                      -|-
-------------[after 513]---------------|-----------[inserted 514-516]----------
                                      -|         } else {
                                       |             /* Set privs to an anonymo+
                                       |             *privs = dummy_cred_h;
                                       |-

[8/31/95 public]
Sorry about that, I pasted the wrong diff in.  Here's a context diff.
diff -c /vob/dce/src/security/server/rs/rs_auth.c@@/main/DCE1_1_WP/2  /vob/dce/src/security/server/rs/rs_auth.c@@/main/DCE1_1_WP/3
*** /vob/dce/src/security/server/rs/rs_auth.c@@/main/DCE1_1_WP/2        Tue Apr 25 16:29:11 1995
--- /vob/dce/src/security/server/rs/rs_auth.c@@/main/DCE1_1_WP/3        Thu Aug 31 16:43:27 1995
***************
*** 8,13 ****
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c013089,v $
# Revision 1.3  95/12/20  09:33:44  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/20/95 public]
# 
# Revision 1.2  95/08/31  16:52:56  root
# changed fields:  new/changed/deleted note(s) [burati 8/31/95 public]
# 
+  * Revision /main/DCE1_1_WP/3  1995/08/31  20:43 UTC  burati
+  *    Merge name based anonymous fix from mb_mothra6
+  * 
   * Revision /main/DCE1_1_WP/2  1995/04/25  20:29 UTC  jrr
   *    SEC migration Warranty Patch merge.
   * 
***************
*** 135,141 ****
   */
  
  /*
! ** Copyright (c) Hewlett-Packard Company 1991, 1992, 1993, 1994
  ** Unpublished work. All Rights Reserved.
  */
  /*
--- 138,144 ----
   */
  
  /*
! ** Copyright (c) Hewlett-Packard Company 1991, 1992, 1993, 1994, 1995
  ** Unpublished work. All Rights Reserved.
  */
  /*
***************
*** 511,516 ****
--- 514,522 ----
                  /* Set privs to an anonymous/dummy cred handle */
                  *privs = dummy_cred_h;
              }
+         } else {
+             /* Set privs to an anonymous/dummy cred handle */
+             *privs = dummy_cred_h;
          }
      }

[12/20/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13088
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Disabling logins via max_invalid_attempts ERA can crash secd
Reported Date                 : 8/31/95
Found in Baseline             : 1.1wp
Found Date                    : 8/31/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/lm/lm_jrnl.c security/server/rsdb/rsdb_journal.c
Sensitivity                   : public

[8/31/95 public]

If a principal has the max_invalid_attempts ERA attached, secd may crash
if successive invalid logins are attempted which disables the account.

The fix is to prevent secd from writing past the end of an array and to
initialize some structures appropriately. Diffs below (line numbers
may be slightly off)

diff lm_jrnl.c@@/main/DCE1_1_WP/LATEST lm_jrnl.c
*** lm_jrnl.c@@/main/DCE1_1_WP/LATEST   Wed Apr 26 15:45:50 1995
--- lm_jrnl.c   Thu Aug 31 10:24:59 1995
***************
*** 84,93 ****
--- 92,103 ----
  {       
        switch (from->addrtype){
          case sec_ip_addr:
+               to->addrtype=from->addrtype;
                to->contents.orig_ip_addr=from->contents.orig_ip_addr;
                to->length=from->length;
                  break;
          case sec_dce_string:
+               to->addrtype=from->addrtype;
                  memcpy( (char *)to->contents.string_binding,
                        (char *) from->contents.string_binding,
                          from->length);
***************
*** 189,195 ****
                    }
                }
        }
!         if ((rec->num_items++) <= MAX_NUM_JRNL_ENTRIES) {
                REC[rec->num_items].type=bad_login;
                REC[rec->num_items].count=1;
                REC[rec->num_items].seqno=rec->num_items;
--- 199,206 ----
                    }
                }
        }
!         if (rec->num_items < MAX_NUM_JRNL_ENTRIES-1) {
!               rec->num_items++;
                REC[rec->num_items].type=bad_login;
                REC[rec->num_items].count=1;
                REC[rec->num_items].seqno=rec->num_items;
***************
*** 233,239 ****
        }
        if ((updated_existing_entry) || (action->type ==lm_reset))
                return;
!         if ((rec->num_items++) <= MAX_NUM_JRNL_ENTRIES) {
                REC[rec->num_items].type=good_login;
                REC[rec->num_items].seqno=rec->num_items;
                REC[rec->num_items].flags=0;
--- 243,250 ----
        }
        if ((updated_existing_entry) || (action->type ==lm_reset))
                return;
!         if (rec->num_items < MAX_NUM_JRNL_ENTRIES-1) {
!               rec->num_items++;
                REC[rec->num_items].type=good_login;
                REC[rec->num_items].seqno=rec->num_items;
                REC[rec->num_items].flags=0;

diff rsdb_journal.c@@/main/DCE1_1_WP/LATEST rsdb_journal.c
*** rsdb_journal.c@@/main/DCE1_1_WP/LATEST      Tue May  9 15:03:16 1995
--- rsdb_journal.c      Thu Aug 31 09:19:44 1995
***************
*** 246,252 ****
--- 260,268 ----
       *  additional space allocated since they are stored in the
       *  fixed portion of the record. So "data" is longer than it need be.
       */
+     data->num_items=activity->num_items;
      addrs=(((char *)data)+ (sizeof(signed32)));
+     len+=(sizeof(signed32));
      for (i = 0; i <= data->num_items; i++){
          addrs+= (sizeof(db_jrnl_rec_t));
          len+=(sizeof(db_jrnl_rec_t));
***************
*** 258,264 ****
       *  entry in the journal record so loop through the entries moving
       *  data to new format
       */
-     data->num_items=activity->num_items;
      if (data->num_items >= 0 ){
          for (num=0; num <= data->num_items; num++){
  
--- 274,279 ----
***************
*** 355,361 ****
      rsdb_jrnl_rec_t       *jrnl_rec;
      error_status_t               *st;
  {
!     rsdb_jrnl_rec_t           *addrs=NULL;
      int num,i,len=0;
  
      CLEAR_STATUS(st);
--- 370,376 ----
      rsdb_jrnl_rec_t       *jrnl_rec;
      error_status_t               *st;
  {
!     char           *addrs=NULL;
      int num,i,len=0;
  
      CLEAR_STATUS(st);
***************
*** 379,388 ****
      /*
       * calculate where the characters addresses will start
       */
!     addrs=jrnl_rec;
!     addrs +=(sizeof(signed32));
      for (i = 0; i<=jrnl_rec->num_items; i++){
!         addrs+= (sizeof(rsdb_jrnl_rec_t));
      }
  
      /* 
--- 394,402 ----
      /*
       * calculate where the characters addresses will start
       */
!     addrs=(char *)jrnl_rec+ (sizeof(signed32));
      for (i = 0; i<=jrnl_rec->num_items; i++){
!         addrs+= (sizeof(db_jrnl_rec_t));
      }
  
      /*

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13051
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kinit
Short Description             : kinit fails from a 1.0.3 client to a 1.1 secd
Reported Date                 : 8/24/95
Found in Baseline             : 1.0.3
Found Date                    : 8/24/95
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[8/24/95 public]

I'm creating this defect for Gerry Thome. Here is edited information:

We have recently found and fixed a problem where kinit fails from
a 1.0.3 client to a 1.1 SECD. The context diffs from our product
code are below.  I have not tested this on the reference platform.
If this has not been reported, it is highly suggested that this
go to 1.0.3 service. Please ignore #ifdef AIX_PROD in the code.

ABSTRACT   kinit on AIX 1.3 client (~OSF DCE 1.0.3) fails with AIX 2.1 
           (~OSF DCE 1.1) server

This appears to be a compatibility problem, that prevents the principal
from refreshing an existing ticket granting ticket.

Test configuration :
 system       AIX              DCE             Role
  rpc        3.2.5            1.0.3          Full client
 scarecrow   4.1.2gold  aixdce21_41/950413   Security and CDS server

Both client and server were fresh config. The following is from the client
side. This test is repeatable. The same test both client and server at 21_41
passes ok. All processes on client and server in tests looked ok, before 
and after test.

Use dce_config equivalent commands to config above cell...

[root@rpc] / > dce_login
Enter Principal Name: cell_admin
Enter Password: 
Password must be changed!
[root@rpc] / > klist
DCE Identity Information:
        Warning: Identity information is not certified
        Global Principal: /.../crow_cell/cell_admin
        Cell:      5a2b915c-79a2-11ce-bdb2-000000039410 /.../crow_cell
        Principal: 00000064-79a2-21ce-bd00-000000039410 cell_admin
        Group:     0000000c-79a2-21ce-bd01-000000039410 none
        Local Groups:
                0000000c-79a2-21ce-bd01-000000039410 none
                00000064-79a2-21ce-8801-000000039410 acct-admin
                00000065-79a2-21ce-8801-000000039410 subsys/dce/sec-admin
                00000066-79a2-21ce-8801-000000039410 subsys/dce/cds-admin
                00000068-79a2-21ce-8801-000000039410 subsys/dce/dts-admin
                00000069-79a2-21ce-8801-000000039410 subsys/dce/audit-admin
                00000067-79a2-21ce-8801-000000039410 subsys/dce/dfs-admin

Identity Info Expires: 95/04/19:01:02:06
Account Expires:       never
Passwd Expires:        never

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_3b46b700
Default principal: cell_admin@crow_cell
Server: krbtgt/crow_cell@crow_cell
        valid 95/04/18:15:02:06 to 95/04/19:01:02:06
Server: dce-rgy@crow_cell
        valid 95/04/18:15:02:15 to 95/04/19:01:02:06
Server: dce-ptgt@crow_cell
        valid 95/04/18:15:03:19 to 95/04/18:17:03:19
Client: dce-ptgt@crow_cell      Server: krbtgt/crow_cell@crow_cell
        valid 95/04/18:15:03:19 to 95/04/18:17:03:19
Client: dce-ptgt@crow_cell      Server: dce-rgy@crow_cell
        valid 95/04/18:15:03:20 to 95/04/18:17:03:19

[root@rpc] / > kinit
kinit: Cannot find KDC for requested realm (dce / krb) while getting initial credentials

NOTE : The file /krb5/krb.conf on client contained :

crow_cell
crow_cell scarecrow

NOTE : The 3.2.5 AIX DCE infoexplorer has about 4 hits on the KDC symbol.
KDC = Kerberos Key Distribution Center ( a part of secd ). The info includes
some description of the exact error message, says it is a significant 
problem with rpc / krb configuration file.

PROPOSED SOLUTION:
=================
< OLD
---
> NEW

2c2
< static char sccsid[]="@(#)24	1.14.1.4  src/security/krb5/clients/kinit/kinit.c, security.src, aixdce13  1/24/94  12:49:16";
---
> static char sccsid[]="@(#)24    1.14.1.5  src/security/krb5/clients/kinit/kinit.c, security.src, aixdce13  5/24/95  09:47:38";
223a224,229
> #ifdef AIX_PROD /* CMVC 13300 */
>     unsigned char   *cell;
>     sec_rgy_name_t  cn;
>     sec_rgy_name_t  pn;
>     sec_rgy_name_t  gn;
> #endif /* CMVC 13300 */
278,283c284,311
<     pos = u_strlen(p->principal.name);
<     len = pos + 2 + u_strlen(p->realm.name);
<     *princ = malloc(len);
<     u_strcpy(*princ, p->principal.name);
<     (*princ)[pos] = '@';
<     u_strcpy((*princ)+pos+1, (p->realm.name) + GLOBAL_DIR_ROOT_LEN);
---
> #ifdef AIX_PROD /* CMVC 13300 */
>     cell = p->realm.name;
>     *princ = (char *)p->principal.name;
> 
>     if (cell && *cell && princ && *princ) {
> #endif /* CMVC 13300 */
>     	pos = u_strlen(p->principal.name);
>     	len = pos + 2 + u_strlen(p->realm.name);
>     	*princ = malloc(len);
>     	u_strcpy(*princ, p->principal.name);
>     	(*princ)[pos] = '@';
>     	u_strcpy((*princ)+pos+1, (p->realm.name) + GLOBAL_DIR_ROOT_LEN);
> #ifdef AIX_PROD /* CMVC 13300 */
>     } else {
>         sec_id_gen_name(sec_rgy_default_handle, &p->realm.uuid, &p->principal.uuid,
>                             gn, cn, pn, &st);
>         if (st) {
>             *princ = NULL;
> 	} else {
> 	    pos = u_strlen(pn);
>             len = u_strlen(cn) + pos + 2;
>     	    *princ = malloc(len);
>     	    u_strcpy(*princ, pn);
>     	    (*princ)[pos] = '@';
>     	    u_strcpy((*princ)+pos+1, (cn) + GLOBAL_DIR_ROOT_LEN);
>         }
>     }
> #endif /* CMVC 13300 */

[12/22/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13050
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_rgy_attr_schema test
Short Description             : uninitialized param in func tp7()
Reported Date                 : 8/17/95
Found in Baseline             : 1.1wp
Found Date                    : 8/17/95
Severity                      : A
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec_rgy_attr_sch.c
Sensitivity                   : public

[8/23/95 public]

(from Dave Hinman @ Gradient)

In the file:

 test/functional/security/ts/client/rca/sec_rgy_attr_sch/sec_rgy_attr_sch.c

the modify_parts parameter passed to sec_rgy_attr_sch_update_entry() is
unitialized.  If the random value it contains holds the flag for one of 
the schema entry parts that aren't legal for the *_update_entry() operation,
the test will fail.

Proposed Solution:

	Initialize the modify_parts variable. 


+ 	modify_parts = sec_attr_schema_part_acl_mgrs | 
+			sec_attr_schema_part_scope;

	sec_rgy_attr_sch_update_entry(write_context, sec_master_site_name,
		modify_parts, sch_entry_p, st_p);
	CHECK_RESULT(TRUE, "sec_rgy_attr_sch_update_entry()", st_p,
error_status_ok);

[12/20/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13038
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Third party pre-authentication doesn't work
Reported Date                 : 8/15/95
Found in Baseline             : 1.1
Found Date                    : 8/15/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/krb5/lib/krb/get_creds.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Status               : open

[8/15/95 public]
Third party pre-authentication doesn't work.  Since it automatically
falls back to timestamp pre-auth, this isn't an obvious bug.
Delta: nydick-15820-no-return-in-krb5_get_credentials
Change: security/krb5/lib/krb/get_creds.c from 12.3 to 12.4
*** security/krb5/lib/krb/get_creds.c
***************
*** 115,121 ****
      krb5_creds *creds
  )
  {
!     krb5_get_credentials_dce((KRB5_TC_MATCH_TIMES | KRB5_TC_MATCH_AUTHDATA),
        /*XXX |KRB5_TC_MATCH_SKEY_TYPE */ options, ccache, creds);
  }
  
--- 119,126 ----
      krb5_creds *creds
  )
  {
!     return
!       krb5_get_credentials_dce((KRB5_TC_MATCH_TIMES | KRB5_TC_MATCH_AUTHDATA),
        /*XXX |KRB5_TC_MATCH_SKEY_TYPE */ options, ccache, creds);
  }
  
Added field Transarc Deltas with value `' 
Added field Transarc Status with value `open'

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13036
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : libdce/grp ovrd
Short Description             : New group override calls missing from ACF file
Reported Date                 : 8/15/95
Found in Baseline             : 1.1
Found Date                    : 8/15/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/rca/roverride.acf
Sensitivity                   : public

[8/15/95 public]
The group override routines added for DCE1.1 (to roverride.idl) were never
added to the corresponding roverride.acf file.

-----[after 48 inserted 55-58]-----
>     roverride_get_by_unix_num       ( [comm_status,fault_status] status );
>     roverride_get_group_info        ( [comm_status,fault_status] status );
>     roverride_check_group_passwd    ( [comm_status,fault_status] status );
>     roverride_is_grp_pwd_overridden ( [comm_status,fault_status] status );

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13034
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec client core dumps in malloc.splint()
Reported Date                 : 8/11/95
Found in Baseline             : 1.1unintegrated
Found Date                    : 5/11/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : 
src/security/krb5/lib/krb/copy_athctr.c                
src/security/krb5/lib/krb/copy_tick.c                  
src/security/krb5/lib/krb/in_tkt_sky.c                 
src/security/client/login/sec_login_pvt.c
Sensitivity                   : public

[8/11/95 public]

(Core dump from MULE stress tests running on AIX/DCE 2.1)

malloc_y.splint(??) at 0xd0942f24
malloc_y.malloc_y(??) at 0xd0944e78
malloc.malloc(??) at 0xd09427ec
idl_es_encode_new_dyn_buff(??, ??) at 0xd0a39968
idl_es_encode_init_buffer(??, ??) at 0xd0a39b8c
rpc_ss_ndr_marsh_init_buffer(??) at 0xd0a55de4
idl_es_put_encoding_header(0x206130dc, 0x0, 0x2061515c, 0xd) at 0xd0a38588
idl_es_before_interp_call(??, ??, ??, ??, ??, ??, ??) at 0xd0a3959c
unnamed block $b1366, line 1526 in "id_encode_cstub.c"
id_epac_data_encode(0x206130c8, 0x202c5ac4), line 1526 in "id_encode_cstub.c"
unnamed block $b1663, line 615 in "sec_encode.c"
unnamed block $b1662, line 615 in "sec_encode.c"
unnamed block $b1661, line 615 in "sec_encode.c"
sec_id_epac_data_encode(0xf03157c8, 0xf03157d4, 0x202c5ac4, 0x202c5ab4, 0x202c5a
b8, 0x202c5de4), line 615 in "sec_encode.c"
sec_login_pvt_get_login_info(0x0, 0x206a0998, 0x202c5d38, 0x202c5de4), line 4293
in "sec_login_pvt.c"
sec_login_validate_identity(0x206a0998, 0x202c5dec, 0x202c5e80, 0x202c5e84, 0x20
2c5de4), line 630 in "sec_login.c"
dce_principal_login_sequence(princ = "stress880_5", pswd = "stress880_5", contex
t = 0x20233f78), line 142 in "sec_stress.h"
princ_login(thd = 0x20233b64), line 244 in "sec_stress.h"
_pthread_body(??) at 0xd0152544

======================================================================
src/security/krb5/lib/krb/copy_athctr.c	Revision 1.1.2.2  1992/12/29
======================================================================
***************
*** 89,95 ****
      if (authfrom->subkey) {
            if (retval = krb5_copy_keyblock(authfrom->subkey,
                                            &tempto->subkey)) {
-                   xfree(tempto->subkey);
                    krb5_free_checksum(tempto->checksum);
                    krb5_free_principal(tempto->client);
                    xfree(tempto);
--- 89,94 ----


======================================================================
src/security/krb5/lib/krb/copy_tick.c	Revision 1.1.2.3  1993/01/26
======================================================================
***************
*** 79,85 ****
      *tempto = *partfrom;
      if (retval = krb5_copy_keyblock(partfrom->session,
                                    &tempto->session)) {
-       xfree(tempto->session);
        xfree(tempto);
        return retval;
      }
--- 79,84 ----

======================================================================
src/security/krb5/lib/krb/in_tkt_sky.c	Revision 1.1.4.1  1994/05/11
======================================================================
***************
*** 113,119 ****
      else
        retval = krb5_copy_keyblock(&kt_ent.key, &realkey);
      if (retval) {
-       xfree(realkey);
        cleanup();
        return retval;
      }
--- 113,118 ----

======================================================================
src/security/client/login/sec_login_pvt.c Revision /main/DCE1_1_WP/3
======================================================================
***************
*** 3282,3290 ****
          return KRB5_PROG_ETYPE_NOSUPP;

      retval = krb5_copy_keyblock(keyseed, key);
-     if (retval) {
-         free((krb5_keyblock *) *key);
-     }

      return retval;
  }
--- 3282,3287 ----
***************
*** 5639,5644 ****
--- 5636,5643 ----
      /* Copy fixed length portion of epac data to new epac data structure */
      nepac_data = epac_data;

+     sec_encode_epac_set_free(free, &epac_set);
+
      /* Set the new parameters */
      nepac_data.deleg_type  = dlg_type;
      nepac_data.compat_mode = compat_mode;
***************
*** 5662,5668 ****
      sec_id_epac_set_encode((void *(*)(unsigned32))malloc, free, &epac_set,
          &epac_chain->num_bytes,       &epac_chain->bytes, stp);

-     sec_encode_epac_set_free(free, &epac_set);
      sec_encode_epac_data_free(free, &epac_data);
      sec_encode_buffer_free(free, &epac.pickled_epac_data.bytes);
  }
--- 5661,5666 ----

[10/2/95 public]
Fix submitted to 1.1-maint code

[12/20/95 public]
Fix included in DCE 1.2.1
Closed



CR Number                     : 13029
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : dce_svc_printf cause perf. problem in gssapi
Reported Date                 : 8/7/95
Found in Baseline             : 1.1
Found Date                    : 8/7/95
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : gssapi.c gssapi-supp.c
Sensitivity                   : public

[8/7/95 public]

The gssapi implementation uses dce_svc_printf for debug messages instead of
the DCE_SVC_* macros at a substantial performance cost. This also makes it
awkward to get a non-debug version of the implementation. The fix is simply
to replace the instances of dce_svc_printf for debug messages with
DCE_SVC_LOG. I tried this by changing *all* (which is probably too many)
dce_svc_printf statements to DCE_SVC_LOG in gssapi.c and gssapi-supp.c and
got noticeable performance improvements (no numbers, but a gssapi program
ran faster after the fix with my machine doing a DCE build than it did on
an idle machine before the fix!). I'll spare you the huge diffs (again a
simple regexp replacement of dce_svc_printf(\(.*\)) to DCE_SVC_LOG((\1)) in
gssapi.c and gssapi-supp.c).

Every performance enhancement should be this easy ;)

[8/8/95 public]

Here are the diffs (against 1.1) that fix the problem (both for gssapi.c
and gssapi-supp.c). I more selectively replaced the dce_svc_printf debug
statements (using the attributes in gss.sams to determine which one those
were) with DCE_SVC_LOG ones. Could someone at DEC please look this over and
(dis)approve? Unless I am very mistaken 1.1 based products should not go
out without this fix or one like it.

* gssapi.c *

948,949c948,949
<     dce_svc_printf(GSS_S_INIT_MSG);
<     dce_svc_printf(GSS_S_INIT1_MSG, __DATE__ " " __TIME__);
---
>     DCE_SVC_LOG((GSS_S_INIT_MSG));
>     DCE_SVC_LOG((GSS_S_INIT1_MSG, __DATE__ " " __TIME__));
1312,1316c1312,1316
< 	dce_svc_printf(GSS_S_TIME_TO_DELTA_MSG,
< 	    rel_tmtime.tm_yday,
< 	    rel_tmtime.tm_hour,
< 	    rel_tmtime.tm_min,
< 	    rel_tmtime.tm_sec);
---
> 	DCE_SVC_LOG((GSS_S_TIME_TO_DELTA_MSG,
> 		     rel_tmtime.tm_yday,
> 		     rel_tmtime.tm_hour,
> 		     rel_tmtime.tm_min,
> 		     rel_tmtime.tm_sec));
1334c1334
< 	dce_svc_printf(GSS_S_TIME_TO_DELTA1_MSG, (long)time);
---
> 	DCE_SVC_LOG((GSS_S_TIME_TO_DELTA1_MSG, (long)time));
1501c1501
< 		dce_svc_printf(GSS_S_RES_CRED_DEL_PENDING_MSG);
---
> 		DCE_SVC_LOG((GSS_S_RES_CRED_DEL_PENDING_MSG));
1785c1785
<     dce_svc_printf(GSS_S_DESTROYING_CTX_MSG);
---
>     DCE_SVC_LOG((GSS_S_DESTROYING_CTX_MSG));
1819c1819
<     dce_svc_printf(GSS_S_DESTROY_CTX_REMOVING_MSG);
---
>     DCE_SVC_LOG((GSS_S_DESTROY_CTX_REMOVING_MSG));
1865c1865
<     dce_svc_printf(GSS_S_TIDY_CRED_MSG);
---
>     DCE_SVC_LOG((GSS_S_TIDY_CRED_MSG));
1869,1870c1869,1870
< 	dce_svc_printf(GSS_S_TIDY_CRED_FREE_CTX_MSG, 
< 		       (long)(cred_ptr->login_context));
---
> 	DCE_SVC_LOG((GSS_S_TIDY_CRED_FREE_CTX_MSG, 
> 		     (long)(cred_ptr->login_context)));
1874c1874
< 	if (st) dce_svc_printf(GSS_S_TIDY_CRED_FREE_FAIL_MSG, st);
---
> 	if (st) DCE_SVC_LOG((GSS_S_TIDY_CRED_FREE_FAIL_MSG, st));
1897c1897
<     dce_svc_printf(GSS_S_TIDY_CTX_TIDYING_MSG);
---
>     DCE_SVC_LOG((GSS_S_TIDY_CTX_TIDYING_MSG));
1906c1906
< 	dce_svc_printf(GSS_S_SK_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_SK_DELETE_MSG));
1915c1915
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
1924c1924
< 	dce_svc_printf(GSS_S_PK_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_PK_DELETE_MSG));
1933c1933
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
1942c1942
< 	dce_svc_printf(GSS_S_IK_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IK_DELETE_MSG));
1951c1951
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
1960c1960
< 	dce_svc_printf(GSS_S_PKS_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_PKS_DELETE_MSG));
1969c1969
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
1978c1978
< 	dce_svc_printf(GSS_S_IKS_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IKS_DELETE_MSG));
1987c1987
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
1996c1996
< 	dce_svc_printf(GSS_S_MD2_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_MD2_DELETE_MSG));
2005c2005
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
2014c2014
< 	dce_svc_printf(GSS_S_MECH_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_MECH_DELETE_MSG));
2023c2023
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
2032c2032
< 	dce_svc_printf(GSS_S_CLIENT_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_CLIENT_DELETE_MSG));
2041c2041
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
2050c2050
< 	dce_svc_printf(GSS_S_CLI_CRED_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_CLI_CRED_DELETE_MSG));
2058c2058
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
2067c2067
< 	dce_svc_printf(GSS_S_PAC_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_PAC_DELETE_MSG));
2075c2075
<     dce_svc_printf(GSS_S_DONE_MSG);
---
>     DCE_SVC_LOG((GSS_S_DONE_MSG));
2084c2084
< 	dce_svc_printf(GSS_S_TKT_NAME_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_TKT_NAME_DELETE_MSG));
2093c2093
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
2102c2102
< 	dce_svc_printf(GSS_S_SVR_NAME_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_SVR_NAME_DELETE_MSG));
2111c2111
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
2124c2124
< 	dce_svc_printf(GSS_S_MGD_CRED_DELETE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_MGD_CRED_DELETE_MSG));
2136c2136
< 	dce_svc_printf(GSS_S_DONE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_DONE_MSG));
2144c2144
< 	dce_svc_printf(GSS_S_TIDY_CTX_TIDIED_MSG);
---
> 	DCE_SVC_LOG((GSS_S_TIDY_CTX_TIDIED_MSG));
2181c2181
<     dce_svc_printf(GSS_S_GAC_ENTERING_MSG);
---
>     DCE_SVC_LOG((GSS_S_GAC_ENTERING_MSG));
2193c2193
< 	dce_svc_printf(GSS_S_GAC_SIMPLE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GAC_SIMPLE_MSG));
2204c2204
< 	    dce_svc_printf(GSS_S_GAC_NOTCERT_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_GAC_NOTCERT_MSG));
2224c2224
< 	    dce_svc_printf(GSS_S_GAC_CTX_EXP_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_GAC_CTX_EXP_MSG));
2233c2233
< 	dce_svc_printf(GSS_S_GAC_NO_BASE_CTX_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GAC_NO_BASE_CTX_MSG));
2253c2253
< 	    dce_svc_printf(GSS_S_GAC_FOUND_CTX_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_GAC_FOUND_CTX_MSG));
2265c2265
< 		dce_svc_printf(GSS_S_GAC_NOTCERT_MSG);
---
> 		DCE_SVC_LOG((GSS_S_GAC_NOTCERT_MSG));
2285c2285
< 		dce_svc_printf(GSS_S_GAC_CTX_EXP1_MSG);
---
> 		DCE_SVC_LOG((GSS_S_GAC_CTX_EXP1_MSG));
2292c2292
< 		dce_svc_printf(GSS_S_GAC_CTX_OK_MSG);
---
> 		DCE_SVC_LOG((GSS_S_GAC_CTX_OK_MSG));
2310c2310
< 	    dce_svc_printf(GSS_S_GAC_SYNTHESIZING_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_GAC_SYNTHESIZING_MSG));
2319,2320c2319,2320
< 		dce_svc_printf(GSS_S_GAC_SYNTH_NAME_MSG,
< 			       cred_ptr->principal_name);
---
> 		DCE_SVC_LOG((GSS_S_GAC_SYNTH_NAME_MSG,
> 			     cred_ptr->principal_name));
2334,2337c2334,2337
< 		    dce_svc_printf(GSS_S_GAC_LRS_FAILED_MSG,
< 				   error_status);
< 		    dce_svc_printf(GSS_S_GAC_PNAME_MSG,
< 				   cred_ptr->principal_name);
---
> 		    DCE_SVC_LOG((GSS_S_GAC_LRS_FAILED_MSG,
> 				 error_status));
> 		    DCE_SVC_LOG((GSS_S_GAC_PNAME_MSG,
> 				 cred_ptr->principal_name));
2344c2344
< 		    dce_svc_printf(GSS_S_GAC_LRS_OK_MSG);
---
> 		    DCE_SVC_LOG((GSS_S_GAC_LRS_OK_MSG));
2355c2355
< 		dce_svc_printf(GSS_S_GAC_SLS_MSG, cred_ptr->principal_name);
---
> 		DCE_SVC_LOG((GSS_S_GAC_SLS_MSG, cred_ptr->principal_name));
2378c2378
< 		dce_svc_printf(GSS_S_GAC_SLS_OK_MSG);
---
> 		DCE_SVC_LOG((GSS_S_GAC_SLS_OK_MSG));
2403c2403
< 	    dce_svc_printf(GSS_S_GAC_REFRESHING_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_GAC_REFRESHING_MSG));
2414c2414
< 	dce_svc_printf(GSS_S_GAC_SLV_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GAC_SLV_MSG));
2430c2430
< 	dce_svc_printf(GSS_S_GAC_SLV_RET_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GAC_SLV_RET_MSG));
2468c2468
<     dce_svc_printf(GSS_S_FRC_MSG);
---
>     DCE_SVC_LOG((GSS_S_FRC_MSG));
2483c2483
< 	    dce_svc_printf(GSS_S_FRC_NO_AUX_CTX_MSG, o_status);
---
> 	    DCE_SVC_LOG((GSS_S_FRC_NO_AUX_CTX_MSG, o_status));
2501c2501
< 	dce_svc_printf(GSS_S_FRC_RGY_BIND_MSG);
---
> 	DCE_SVC_LOG((GSS_S_FRC_RGY_BIND_MSG));
2513c2513
< 	    dce_svc_printf(GSS_S_FRC_BIND_OK_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_FRC_BIND_OK_MSG));
2522c2522
< 	    dce_svc_printf(GSS_S_FRC_BIND_FAILED_MSG, error_status);
---
> 	    DCE_SVC_LOG((GSS_S_FRC_BIND_FAILED_MSG, error_status));
2596c2596
< 	    dce_svc_printf(GSS_S_CEI_SIP_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_CEI_SIP_MSG));
2654c2654
< 	dce_svc_printf(GSS_S_CEI_SIG_MSG);
---
> 	DCE_SVC_LOG((GSS_S_CEI_SIG_MSG));
2729c2729
<     dce_svc_printf(GSS_S_PTN_MSG);
---
>     DCE_SVC_LOG((GSS_S_PTN_MSG));
2753c2753
<     dce_svc_printf(GSS_S_PTN_BINDING_MSG);
---
>     DCE_SVC_LOG((GSS_S_PTN_BINDING_MSG));
2772c2772
<     dce_svc_printf(GSS_S_PTN_BOUND_MSG);
---
>     DCE_SVC_LOG((GSS_S_PTN_BOUND_MSG));
2814c2814
<     dce_svc_printf(GSS_S_PTN_SIG_MSG);
---
>     DCE_SVC_LOG((GSS_S_PTN_SIG_MSG));
2878c2878
<     dce_svc_printf(GSS_S_PTN_GOT_NAME_MSG);
---
>     DCE_SVC_LOG((GSS_S_PTN_GOT_NAME_MSG));
2933c2933
<     dce_svc_printf(GSS_S_CTN_MSG);
---
>     DCE_SVC_LOG((GSS_S_CTN_MSG));
2958c2958
< 	dce_svc_printf(GSS_S_CTN_PTN_MSG);
---
> 	DCE_SVC_LOG((GSS_S_CTN_PTN_MSG));
2970c2970
<     dce_svc_printf(GSS_S_CTN_NAME_MSG);
---
>     DCE_SVC_LOG((GSS_S_CTN_NAME_MSG));
3059c3059
< 	dce_svc_printf(GSS_S_OID_FREE_MSG, (long)oid);
---
> 	DCE_SVC_LOG((GSS_S_OID_FREE_MSG, (long)oid));
3063c3063
< 	dce_svc_printf(GSS_S_OID_FREE_NULL_OID_MSG);
---
> 	DCE_SVC_LOG((GSS_S_OID_FREE_NULL_OID_MSG));
3072c3072
< 	dce_svc_printf(GSS_S_OID_FREE_CONST_OID_MSG);
---
> 	DCE_SVC_LOG((GSS_S_OID_FREE_CONST_OID_MSG));
3083,3084c3083,3084
< 		dce_svc_printf(GSS_S_OID_FREE_FREEING_MSG, 
< 			       (long)(oid->elements));
---
> 		DCE_SVC_LOG((GSS_S_OID_FREE_FREEING_MSG, 
> 			     (long)(oid->elements)));
3089c3089
< 		dce_svc_printf(GSS_S_OID_FREE_ELEM_NULL_MSG);
---
> 		DCE_SVC_LOG((GSS_S_OID_FREE_ELEM_NULL_MSG));
3096c3096
< 	    dce_svc_printf(GSS_S_OID_FREE_ELEM_CONST_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_OID_FREE_ELEM_CONST_MSG));
3103c3103
<     dce_svc_printf(GSS_S_OID_FREE_ZEROING_MSG);
---
>     DCE_SVC_LOG((GSS_S_OID_FREE_ZEROING_MSG));
3111c3111
< 	dce_svc_printf(GSS_S_OID_FREE_FREEING_DESC_MSG);
---
> 	DCE_SVC_LOG((GSS_S_OID_FREE_FREEING_DESC_MSG));
3124c3124
< 	dce_svc_printf(GSS_S_OID_SET_FREE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_OID_SET_FREE_MSG));
3129c3129
< 	dce_svc_printf(GSS_S_OID_SET_FREE_NULL_PTR_MSG);
---
> 	DCE_SVC_LOG((GSS_S_OID_SET_FREE_NULL_PTR_MSG));
3135c3135
< 	dce_svc_printf(GSS_S_OID_SET_FREE_NULL_SET_MSG);
---
> 	DCE_SVC_LOG((GSS_S_OID_SET_FREE_NULL_SET_MSG));
3143c3143
< 	dce_svc_printf(GSS_S_OID_SET_FREEING_MSG, elem_count);
---
> 	DCE_SVC_LOG((GSS_S_OID_SET_FREEING_MSG, elem_count));
3147,3151c3147,3151
< 	    dce_svc_printf(GSS_S_OID_SET_MEMBER_IS_MSG, 
< 			   j, 
< 			   (long)elemental_oid,
< 			   elemental_oid->length,
< 			   (long)(elemental_oid->elements));
---
> 	    DCE_SVC_LOG((GSS_S_OID_SET_MEMBER_IS_MSG, 
> 			 j, 
> 			 (long)elemental_oid,
> 			 elemental_oid->length,
> 			 (long)(elemental_oid->elements)));
3159c3159
< 	dce_svc_printf(GSS_S_OID_SET_FREE_OID_MSG, i);
---
> 	DCE_SVC_LOG((GSS_S_OID_SET_FREE_OID_MSG, i));
3163,3167c3163,3167
< 	    dce_svc_printf(GSS_S_OID_SET_MEMBER_IS_MSG, 
< 			   j, 
< 			   (long)(elemental_oid),
< 			   elemental_oid->length,
< 			   (long)(elemental_oid->elements));
---
> 	    DCE_SVC_LOG((GSS_S_OID_SET_MEMBER_IS_MSG, 
> 			 j, 
> 			 (long)(elemental_oid),
> 			 elemental_oid->length,
> 			 (long)(elemental_oid->elements)));
3176c3176
<     dce_svc_printf(GSS_S_OID_SET_FREE_LIST_MSG);
---
>     DCE_SVC_LOG((GSS_S_OID_SET_FREE_LIST_MSG));
3180c3180
<     dce_svc_printf(GSS_S_OID_SET_FREE_DESC_MSG);
---
>     DCE_SVC_LOG((GSS_S_OID_SET_FREE_DESC_MSG));
3328,3330c3328,3330
<     dce_svc_printf(GSS_S_WND1_MSG,
< 		   (long)received_seq_no,
< 		   (long)(ctx_ptr->rcv_seq));
---
>     DCE_SVC_LOG((GSS_S_WND1_MSG,
> 		 (long)received_seq_no,
> 		 (long)(ctx_ptr->rcv_seq)));
3347c3347
< 	    dce_svc_printf(GSS_S_WND_INVALIDATING_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_WND_INVALIDATING_MSG));
3373c3373
< 	    dce_svc_printf(GSS_S_WND_ADVANCE_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_WND_ADVANCE_MSG));
3418c3418
<     dce_svc_printf(GSS_S_WND_FIXED_MSG);
---
>     DCE_SVC_LOG((GSS_S_WND_FIXED_MSG));
3508c3508
<     dce_svc_printf(GSS_S_EPC_MSG);
---
>     DCE_SVC_LOG((GSS_S_EPC_MSG));
3522c3522
< 	dce_svc_printf(GSS_S_EPC_DEFAULT_MSG);
---
> 	DCE_SVC_LOG((GSS_S_EPC_DEFAULT_MSG));
3635c3635
<     dce_svc_printf(GSS_S_LCC_MSG);
---
>     DCE_SVC_LOG((GSS_S_LCC_MSG));
3660c3660
< 	    dce_svc_printf(GSS_S_LCC_DCE_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_LCC_DCE_MSG));
3671c3671
< 	    dce_svc_printf(GSS_S_LCC_KRB_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_LCC_KRB_MSG));
3682c3682
< 	dce_svc_printf(GSS_S_LCC_DEF_MECH_MSG);
---
> 	DCE_SVC_LOG((GSS_S_LCC_DEF_MECH_MSG));
3701c3701
< 	dce_svc_printf(GSS_S_LCC_DEFAULT_MSG);
---
> 	DCE_SVC_LOG((GSS_S_LCC_DEFAULT_MSG));
3710c3710
< 	dce_svc_printf(GSS_S_LCC_GCC_RET_MSG);
---
> 	DCE_SVC_LOG((GSS_S_LCC_GCC_RET_MSG));
3719c3719
< 	    dce_svc_printf(GSS_S_LCC_GCC_FAILED_MSG, error_status);
---
> 	    DCE_SVC_LOG((GSS_S_LCC_GCC_FAILED_MSG, error_status));
3739c3739
<     dce_svc_printf(GSS_S_LCC_INI_MSG);
---
>     DCE_SVC_LOG((GSS_S_LCC_INI_MSG));
3749c3749
<     dce_svc_printf(GSS_S_LCC_INI_RET_MSG);
---
>     DCE_SVC_LOG((GSS_S_LCC_INI_RET_MSG));
3805c3805
<     dce_svc_printf(GSS_S_LCC_COPYING_MSG);
---
>     DCE_SVC_LOG((GSS_S_LCC_COPYING_MSG));
4077c4077
< 	    dce_svc_printf(GSS_S_AC_LCC_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_LCC_MSG));
4290c4290
< 	dce_svc_printf(GSS_S_AC_REG_PRINC_MSG, cred_ptr->principal_name);
---
> 	DCE_SVC_LOG((GSS_S_AC_REG_PRINC_MSG, cred_ptr->principal_name));
4412c4412
<     dce_svc_printf(GSS_S_WRAPPING_MSG, message.length);
---
>     DCE_SVC_LOG((GSS_S_WRAPPING_MSG, message.length));
4497c4497
<     dce_svc_printf(GSS_S_WRAPPED_MSG, output_token->length);
---
>     DCE_SVC_LOG((GSS_S_WRAPPED_MSG, output_token->length));
4544c4544
<     dce_svc_printf(GSS_S_UNWRAPPING_MSG, input_token_buffer->length);
---
>     DCE_SVC_LOG((GSS_S_UNWRAPPING_MSG, input_token_buffer->length));
4638c4638
<     dce_svc_printf(GSS_S_UNWRAPPED_MSG, message->length);
---
>     DCE_SVC_LOG((GSS_S_UNWRAPPED_MSG, message->length));
4686c4686
< 	dce_svc_printf(GSS_S_GDT_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GDT_MSG));
4712c4712
< 	dce_svc_printf(GSS_S_GDT_CURSOR_INIT_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GDT_CURSOR_INIT_MSG));
4732c4732
< 	dce_svc_printf(GSS_S_GDT_SCANNING_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GDT_SCANNING_MSG));
4747c4747
< 		dce_svc_printf(GSS_S_GDT_SCGD_FAILED_MSG);
---
> 		DCE_SVC_LOG((GSS_S_GDT_SCGD_FAILED_MSG));
4755c4755
< 		dce_svc_printf(GSS_S_GDT_SCGD_SUCCEEDED_MSG);
---
> 		DCE_SVC_LOG((GSS_S_GDT_SCGD_SUCCEEDED_MSG));
4771c4771
< 	dce_svc_printf(GSS_S_GDT_INIT_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GDT_INIT_MSG));
4780c4780
< 	dce_svc_printf(GSS_S_GDT_DELEG_MSG);
---
> 	DCE_SVC_LOG((GSS_S_GDT_DELEG_MSG));
4924c4924
<     dce_svc_printf(GSS_S_IC_MSG);
---
>     DCE_SVC_LOG((GSS_S_IC_MSG));
4946c4946
< 	dce_svc_printf(GSS_S_IC_NONDEF_CONTEXT_MSG, *context_handle);
---
> 	DCE_SVC_LOG((GSS_S_IC_NONDEF_CONTEXT_MSG, *context_handle));
4973c4973
< 	    dce_svc_printf(GSS_S_IC_CONTEXT_REUSE_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_IC_CONTEXT_REUSE_MSG));
5003c5003
< 	    dce_svc_printf(GSS_S_IC_DEF_CRED_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_IC_DEF_CRED_MSG));
5201c5201
< 	    dce_svc_printf(GSS_S_IC_NO_DELEG_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_IC_NO_DELEG_MSG));
5227c5227
< 		dce_svc_printf(GSS_S_IC_DISABLING_DELEG_MSG);
---
> 		DCE_SVC_LOG((GSS_S_IC_DISABLING_DELEG_MSG));
5253c5253
< 	    dce_svc_printf(GSS_S_IC_DELEG_REQ_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_IC_DELEG_REQ_MSG));
5276c5276
< 		dce_svc_printf(GSS_S_IC_ENABLING_IMPERSONATION_MSG);
---
> 		DCE_SVC_LOG((GSS_S_IC_ENABLING_IMPERSONATION_MSG));
5330c5330
< 	dce_svc_printf(GSS_S_IC_GOT_KRB_CRED_CACHE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_GOT_KRB_CRED_CACHE_MSG));
5399c5399
<     dce_svc_printf(GSS_S_IC_GOT_TICKET_MSG);
---
>     DCE_SVC_LOG((GSS_S_IC_GOT_TICKET_MSG));
5436c5436
< 	dce_svc_printf(GSS_S_IC_SKBM_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_SKBM_MSG));
5478c5478
< 	dce_svc_printf(GSS_S_IC_WRAPPING_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_WRAPPING_MSG));
5492c5492
< 	dce_svc_printf(GSS_S_IC_WRAPPED_MSG, output_token->length);
---
> 	DCE_SVC_LOG((GSS_S_IC_WRAPPED_MSG, output_token->length));
5517c5517
< 	dce_svc_printf(GSS_S_IC_MUTUAL_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_MUTUAL_MSG));
5559c5559
< 	    dce_svc_printf(GSS_S_IC_OK_MUTUAL_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_IC_OK_MUTUAL_MSG));
5604c5604
< 	dce_svc_printf(GSS_S_IC_MUTUAL_ERROR_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_MUTUAL_ERROR_MSG));
5620c5620
< 	dce_svc_printf(GSS_S_IC_MUTUAL_RESPONSE_OK_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_MUTUAL_RESPONSE_OK_MSG));
5630c5630
< 	dce_svc_printf(GSS_S_IC_SKDR_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_SKDR_MSG));
5651c5651
< 	    dce_svc_printf(GSS_S_IC_ACC_SEQ_MSG, (long)(ctx_ptr->rcv_seq));
---
> 	    DCE_SVC_LOG((GSS_S_IC_ACC_SEQ_MSG, (long)(ctx_ptr->rcv_seq)));
5700c5700
<     dce_svc_printf(GSS_S_IC_COMMON_RET_MSG);
---
>     DCE_SVC_LOG((GSS_S_IC_COMMON_RET_MSG));
5709c5709
< 	dce_svc_printf(GSS_S_IC_FREEING_MSG_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_FREEING_MSG_MSG));
5717c5717
< 	dce_svc_printf(GSS_S_IC_FREED_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_FREED_MSG));
5726c5726
< 	dce_svc_printf(GSS_S_IC_FREEING_NAME_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_FREEING_NAME_MSG));
5734c5734
< 	dce_svc_printf(GSS_S_IC_FREED_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_FREED_MSG));
5743c5743
< 	dce_svc_printf(GSS_S_IC_FREEING_CACHE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_FREEING_CACHE_MSG));
5751c5751
< 	dce_svc_printf(GSS_S_IC_FREED_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_FREED_MSG));
5762c5762
< 	dce_svc_printf(GSS_S_IC_FREEING_LC_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_FREEING_LC_MSG));
5782c5782
< 	    dce_svc_printf(GSS_S_IC_FREED_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_IC_FREED_MSG));
5794c5794
< 	dce_svc_printf(GSS_S_IC_UNLOCKING_CRED_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_UNLOCKING_CRED_MSG));
5802c5802
< 	dce_svc_printf(GSS_S_IC_UNLOCKED_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_UNLOCKED_MSG));
5811c5811
< 	dce_svc_printf(GSS_S_IC_UNLOCKING_CTX_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_UNLOCKING_CTX_MSG));
5819c5819
< 	dce_svc_printf(GSS_S_IC_UNLOCKED_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_UNLOCKED_MSG));
5828c5828
< 	dce_svc_printf(GSS_S_IC_RET_MSG);
---
> 	DCE_SVC_LOG((GSS_S_IC_RET_MSG));
5903c5903
<     dce_svc_printf(GSS_S_AC_MSG);
---
>     DCE_SVC_LOG((GSS_S_AC_MSG));
5976c5976
< 	    dce_svc_printf(GSS_S_AC_DEF_CRED_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_DEF_CRED_MSG));
6069c6069
< 	    dce_svc_printf(GSS_S_AC_DCE_MECH_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_DCE_MECH_MSG));
6082c6082
< 	    dce_svc_printf(GSS_S_AC_KRB_RFC_MECH_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_KRB_RFC_MECH_MSG));
6094c6094
< 	    dce_svc_printf(GSS_S_AC_KRB_ID_MECH_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_KRB_ID_MECH_MSG));
6136c6136
< 	dce_svc_printf(GSS_S_AC_OK_WRAPPER_MSG);
---
> 	DCE_SVC_LOG((GSS_S_AC_OK_WRAPPER_MSG));
6142c6142
< 	dce_svc_printf(GSS_S_AC_SKDM_MSG);
---
> 	DCE_SVC_LOG((GSS_S_AC_SKDM_MSG));
6176c6176
< 	dce_svc_printf(GSS_S_AC_SKDM_RET_MSG);
---
> 	DCE_SVC_LOG((GSS_S_AC_SKDM_RET_MSG));
6184c6184
< 	dce_svc_printf(GSS_S_AC_INIT_SEQ_MSG, (long)(ctx_ptr->rcv_seq));
---
> 	DCE_SVC_LOG((GSS_S_AC_INIT_SEQ_MSG, (long)(ctx_ptr->rcv_seq)));
6194c6194
< 	    dce_svc_printf(GSS_S_AC_ACCEPTOR_CHECK_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_ACCEPTOR_CHECK_MSG));
6201c6201
< 		dce_svc_printf(GSS_S_AC_EXPAND_CRED_MSG);
---
> 		DCE_SVC_LOG((GSS_S_AC_EXPAND_CRED_MSG));
6238c6238
< 	    dce_svc_printf(GSS_S_AC_NAMES_MATCH_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_NAMES_MATCH_MSG));
6267c6267
< 	    dce_svc_printf(GSS_S_AC_HASHING_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_HASHING_MSG));
6276c6276
< 	    dce_svc_printf(GSS_S_AC_HASHED_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_HASHED_MSG));
6312c6312
< 		dce_svc_printf(GSS_S_AC_EXTR_CLI_NAME_MSG);
---
> 		DCE_SVC_LOG((GSS_S_AC_EXTR_CLI_NAME_MSG));
6331c6331
< 		dce_svc_printf(GSS_S_AC_GOT_CLI_NAME_MSG);
---
> 		DCE_SVC_LOG((GSS_S_AC_GOT_CLI_NAME_MSG));
6356c6356
< 	dce_svc_printf(GSS_S_AC_AUTH_CLI_MSG);
---
> 	DCE_SVC_LOG((GSS_S_AC_AUTH_CLI_MSG));
6373,6374c6373,6374
< 	    dce_svc_printf(GSS_S_AC_MUT_GEN_MSG);
< 	    dce_svc_printf(GSS_S_AC_SKBR_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_MUT_GEN_MSG));
> 	    DCE_SVC_LOG((GSS_S_AC_SKBR_MSG));
6389c6389
< 	    dce_svc_printf(GSS_S_AC_SKBR_RET_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_SKBR_RET_MSG));
6411c6411
< 	    dce_svc_printf(GSS_S_AC_WRAPPING_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_WRAPPING_MSG));
6425c6425
< 	    dce_svc_printf(GSS_S_AC_NOT_MUT_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_NOT_MUT_MSG));
6435c6435
< 	    dce_svc_printf(GSS_S_AC_COPY_CLI_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_COPY_CLI_MSG));
6462c6462
< 	    dce_svc_printf(GSS_S_AC_COPY_MECH_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_COPY_MECH_MSG));
6473c6473
< 	    dce_svc_printf(GSS_S_AC_COPY_FLAGS_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_COPY_FLAGS_MSG));
6483c6483
< 	    dce_svc_printf(GSS_S_AC_COPY_TIME_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_COPY_TIME_MSG));
6493c6493
< 	    dce_svc_printf(GSS_S_AC_DELEG_NS1_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_AC_DELEG_NS1_MSG));
6666c6666
<     dce_svc_printf(GSS_S_AC_COMMON_RET_MSG);
---
>     DCE_SVC_LOG((GSS_S_AC_COMMON_RET_MSG));
6721c6721
<     dce_svc_printf(GSS_S_BP_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_MSG));
6854c6854
< 	dce_svc_printf(GSS_S_BP_SD_TOK_MSG);
---
> 	DCE_SVC_LOG((GSS_S_BP_SD_TOK_MSG));
6862c6862
< 	dce_svc_printf(GSS_S_BP_S_TOK_MSG);
---
> 	DCE_SVC_LOG((GSS_S_BP_S_TOK_MSG));
6904c6904
<     dce_svc_printf(GSS_S_BP_SET_TYPE_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_SET_TYPE_MSG));
6926c6926
<     dce_svc_printf(GSS_S_BP_SET_SIGN_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_SET_SIGN_MSG));
6939c6939
<     dce_svc_printf(GSS_S_BP_SET_SEAL_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_SET_SEAL_MSG));
6956c6956
<     dce_svc_printf(GSS_S_BP_SIGNING_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_SIGNING_MSG));
6971c6971
< 	    dce_svc_printf(GSS_S_BP_SIGN_DESMAC_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_BP_SIGN_DESMAC_MSG));
6999c6999
< 	    dce_svc_printf(GSS_S_BP_SIGN_MD5_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_BP_SIGN_MD5_MSG));
7029c7029
< 	    dce_svc_printf(GSS_S_BP_SIGN_DESMD5_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_BP_SIGN_DESMD5_MSG));
7058c7058
< 	dce_svc_printf(GSS_S_BP_CONFOUNDING_MSG);
---
> 	DCE_SVC_LOG((GSS_S_BP_CONFOUNDING_MSG));
7072c7072
< 	dce_svc_printf(GSS_S_BP_COPYING_DATA_MSG, message_buffer->length);
---
> 	DCE_SVC_LOG((GSS_S_BP_COPYING_DATA_MSG, message_buffer->length));
7083c7083
< 	dce_svc_printf(GSS_S_BP_PADDING_MSG, 8 - (message_buffer->length %8));
---
> 	DCE_SVC_LOG((GSS_S_BP_PADDING_MSG, 8 - (message_buffer->length %8)));
7095c7095
< 	dce_svc_printf(GSS_S_BP_TOT_LENGTH_MSG, internal_buffer.length);
---
> 	DCE_SVC_LOG((GSS_S_BP_TOT_LENGTH_MSG, internal_buffer.length));
7160c7160
<     dce_svc_printf(GSS_S_BP_SETTING_SEQ_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_SETTING_SEQ_MSG));
7178c7178
<     dce_svc_printf(GSS_S_BP_ENC_SEQ_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_ENC_SEQ_MSG));
7204c7204
< 	    dce_svc_printf(GSS_S_BP_ENC_DATA_MSG);
---
> 	    DCE_SVC_LOG((GSS_S_BP_ENC_DATA_MSG));
7234c7234
<     dce_svc_printf(GSS_S_BP_WRAPPING_MSG);
---
>     DCE_SVC_LOG((GSS_S_BP_WRAPPING_MSG));
7273,7275c7273,7275
<     dce_svc_printf(GSS_S_VRS_MSG,
< 		   (long)received_seq_no,
< 		   (long)(ctx_ptr->rcv_seq));
---
>     DCE_SVC_LOG((GSS_S_VRS_MSG,
> 		 (long)received_seq_no,
> 		 (long)(ctx_ptr->rcv_seq)));
7290c7290
< 	dce_svc_printf(GSS_S_VRS_SEQ_VALID_MSG);
---
> 	DCE_SVC_LOG((GSS_S_VRS_SEQ_VALID_MSG));
7305c7305
< 	dce_svc_printf(GSS_S_VRS_SEQ_EARLY_MSG);
---
> 	DCE_SVC_LOG((GSS_S_VRS_SEQ_EARLY_MSG));
7322c7322
< 	dce_svc_printf(GSS_S_VRS_SEQ_LATE_MSG);
---
> 	DCE_SVC_LOG((GSS_S_VRS_SEQ_LATE_MSG));
8124c8124
< 	dce_svc_printf(GSS_S_VFY_SIGN_DESMAC_MSG);
---
> 	DCE_SVC_LOG((GSS_S_VFY_SIGN_DESMAC_MSG));
8148c8148
< 	dce_svc_printf(GSS_S_VFY_SIGN_MD5_MSG);
---
> 	DCE_SVC_LOG((GSS_S_VFY_SIGN_MD5_MSG));
8183c8183
< 	dce_svc_printf(GSS_S_VFY_SIGN_DESMD5_MSG);
---
> 	DCE_SVC_LOG((GSS_S_VFY_SIGN_DESMD5_MSG));
8479c8479
< 	dce_svc_printf(GSS_S_UNS_MSG_LEN_MSG, message_buffer->length);
---
> 	DCE_SVC_LOG((GSS_S_UNS_MSG_LEN_MSG, message_buffer->length));
8780c8780
<     dce_svc_printf(GSS_S_DS_ENTRY_MSG);
---
>     DCE_SVC_LOG((GSS_S_DS_ENTRY_MSG));
8788c8788
<     dce_svc_printf(GSS_S_DS_MSG, status_value, status_type);
---
>     DCE_SVC_LOG((GSS_S_DS_MSG, status_value, status_type));
8800c8800
< 	dce_svc_printf(GSS_S_DS_GSS_MSG, status_value);
---
> 	DCE_SVC_LOG((GSS_S_DS_GSS_MSG, status_value));
8843c8843
< 		dce_svc_printf(GSS_S_DS_UNK_CALL_MSG, status_value);
---
> 		DCE_SVC_LOG((GSS_S_DS_UNK_CALL_MSG, status_value));
8977c8977
< 		dce_svc_printf(GSS_S_DS_UNK_ROUT_MSG, status_value);
---
> 		DCE_SVC_LOG((GSS_S_DS_UNK_ROUT_MSG, status_value));
9033c9033
< 	    dce_svc_printf(GSS_S_DS_UNK_SUPP_MSG, status_value);
---
> 	    DCE_SVC_LOG((GSS_S_DS_UNK_SUPP_MSG, status_value));
9045c9045
< 		dce_svc_printf(GSS_S_DS_BAD_STAT_MSG);
---
> 		DCE_SVC_LOG((GSS_S_DS_BAD_STAT_MSG));
9060c9060
< 	    dce_svc_printf(GSS_S_DS_MECH_MSG, status_value);
---
> 	    DCE_SVC_LOG((GSS_S_DS_MECH_MSG, status_value));
9085c9085
< 		dce_svc_printf(GSS_S_DS_MGM_FAILED_MSG, status_value);
---
> 		DCE_SVC_LOG((GSS_S_DS_MGM_FAILED_MSG, status_value));
9096c9096
< 		    dce_svc_printf(GSS_S_DS_MGDM_FAILED_MSG, status_value);
---
> 		    DCE_SVC_LOG((GSS_S_DS_MGDM_FAILED_MSG, status_value));


* gssapi-supp.c *

570c570
<     dce_svc_printf(GSS_S_FMI_MSG);
---
>     DCE_SVC_LOG((GSS_S_FMI_MSG));
579c579
<     dce_svc_printf(GSS_S_FMI_COPY_SK_MSG);
---
>     DCE_SVC_LOG((GSS_S_FMI_COPY_SK_MSG));
590c590
<     dce_svc_printf(GSS_S_FMI_DES_KSHED_MSG);
---
>     DCE_SVC_LOG((GSS_S_FMI_DES_KSHED_MSG));
613c613
<     dce_svc_printf(GSS_S_FMI_ENC_INIT_MSG);
---
>     DCE_SVC_LOG((GSS_S_FMI_ENC_INIT_MSG));

[9/27/95 public]

The above looks fine.  That's all the messages at debug-level, isn't it?
Everything at warning or higher continues to use dce_svc_printf, doesn't it?

[10/11/95 public]

Yes, those are indeed the messages at debug level. Unfortunately because
of a serious doc bug (yep, I'm passing the bug err... buck --see 13047)
the DCE_SVC_LOG calls should in fact be changed to DCE_SVC_DEBUG calls
(because DCE_SVC_LOG only generates bin log output). So here is the 
final fix ;) (context diffs against 1.1):

*** /project/dce/build/dce1.1/src/security/gssapi/gssapi-supp.c	Fri Oct  7 14:04:24 1994
--- gssapi-supp.c.new	Sat Aug 26 10:36:32 1995
***************
*** 567,573 ****
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Entering gss_fixup_md_init"));
  #else
!     dce_svc_printf(GSS_S_FMI_MSG);
  #endif
  
      if (ctx_ptr->md_init != NULL) return; /* Nothing to do		    */
--- 567,573 ----
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Entering gss_fixup_md_init"));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_auth, svc_c_debug9, "Entering gss_fixup_md_init"));
  #endif
  
      if (ctx_ptr->md_init != NULL) return; /* Nothing to do		    */
***************
*** 576,582 ****
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Copying session key..."));
  #else
!     dce_svc_printf(GSS_S_FMI_COPY_SK_MSG);
  #endif
  
      for (i=0; i<sizeof(md_key); i++) {
--- 576,582 ----
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Copying session key..."));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_auth, svc_c_debug9, "Copying session key"));
  #endif
  
      for (i=0; i<sizeof(md_key); i++) {
***************
*** 587,593 ****
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Calculating DES key-schedule..."));
  #else
!     dce_svc_printf(GSS_S_FMI_DES_KSHED_MSG);
  #endif
  
      if ((st = sec_des_key_sched(&md_key,
--- 587,593 ----
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Calculating DES key-schedule..."));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_auth, svc_c_debug9, "Calculating DES key schedule"));
  #endif
  
      if ((st = sec_des_key_sched(&md_key,
***************
*** 610,616 ****
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Encrypting init-block..."));
  #else
!     dce_svc_printf(GSS_S_FMI_ENC_INIT_MSG);
  #endif
  
      sec_des_cbc_encrypt((sec_des_block *)double_zero_block,
--- 610,616 ----
      gss_svc_printf(svc_c_sev_debug9,
  		   GSS_MSG("Encrypting init-block..."));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_auth, svc_c_debug9, "Encrypting init-block"));
  #endif
  
      sec_des_cbc_encrypt((sec_des_block *)double_zero_block,

*** /project/dce/build/dce1.1/src/security/gssapi/gssapi.c	Wed Oct  5 17:47:42 1994
--- gssapi.c.new	Sat Aug 26 10:36:00 1995
***************
*** 945,952 ****
  	svc_c_debug9,
  	GSS_MSG("GSSAPI build of " __DATE__ " " __TIME__));
  #else
!     dce_svc_printf(GSS_S_INIT_MSG);
!     dce_svc_printf(GSS_S_INIT1_MSG, __DATE__ " " __TIME__);
  #endif
  
      if (st) {
--- 945,952 ----
  	svc_c_debug9,
  	GSS_MSG("GSSAPI build of " __DATE__ " " __TIME__));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug8, "GSSAPI initialization"));
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "GSSAPI build of %s", __DATE__ " " __TIME__));
  #endif
  
      if (st) {
***************
*** 1309,1319 ****
  	    rel_tmtime.tm_min,
  	    rel_tmtime.tm_sec);
  #else
! 	dce_svc_printf(GSS_S_TIME_TO_DELTA_MSG,
! 	    rel_tmtime.tm_yday,
! 	    rel_tmtime.tm_hour,
! 	    rel_tmtime.tm_min,
! 	    rel_tmtime.tm_sec);
  #endif
  
      if (rel_tmtime.tm_yday < 0 ||
--- 1309,1319 ----
  	    rel_tmtime.tm_min,
  	    rel_tmtime.tm_sec);
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "utc_time_to_delta: Yday: %d, Hour: %d, Min: %d, Sec: %d",
! 		     rel_tmtime.tm_yday,
! 		     rel_tmtime.tm_hour,
! 		     rel_tmtime.tm_min,
! 		     rel_tmtime.tm_sec));
  #endif
  
      if (rel_tmtime.tm_yday < 0 ||
***************
*** 1331,1337 ****
  	GSS_MSG("Delta-secs: %lu"),
  	(long)time);
  #else
! 	dce_svc_printf(GSS_S_TIME_TO_DELTA1_MSG, (long)time);
  #endif
  		 
      return time;
--- 1331,1337 ----
  	GSS_MSG("Delta-secs: %lu"),
  	(long)time);
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Delta secs: %ld", (long)time));
  #endif
  		 
      return time;
***************
*** 1498,1504 ****
  		    svc_c_debug1,
  		    GSS_MSG("Resolve_cred - delete pending."));
  #else
! 		dce_svc_printf(GSS_S_RES_CRED_DEL_PENDING_MSG);
  #endif
  
  	
--- 1498,1504 ----
  		    svc_c_debug1,
  		    GSS_MSG("Resolve_cred - delete pending."));
  #else
! 		DCE_SVC_DEBUG((gss__svc_handle, gss_s_locks, svc_c_debug1, "Resolve_cred - delete pending."));
  #endif
  
  	
***************
*** 1782,1788 ****
  	svc_c_debug9,
  	GSS_MSG("Destroying a security context"));
  #else
!     dce_svc_printf(GSS_S_DESTROYING_CTX_MSG);
  #endif
  
      ctx->delete_pending = 1;
--- 1782,1788 ----
  	svc_c_debug9,
  	GSS_MSG("Destroying a security context"));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Destroying a security context"));
  #endif
  
      ctx->delete_pending = 1;
***************
*** 1816,1822 ****
  	svc_c_debug9,
  	GSS_MSG("Context found and locked. Removing from queue..."));
  #else
!     dce_svc_printf(GSS_S_DESTROY_CTX_REMOVING_MSG);
  #endif
  
      if (c_p->prev) {
--- 1816,1822 ----
  	svc_c_debug9,
  	GSS_MSG("Context found and locked. Removing from queue..."));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Destroy_ctx - Removing from queue..."));
  #endif
  
      if (c_p->prev) {
***************
*** 1862,1877 ****
  static void tidy_cred(cred_info * cred_ptr) {
      error_status_t st;
  #ifndef GSS_SVC_CODE
!     dce_svc_printf(GSS_S_TIDY_CRED_MSG);
  #endif
      if (cred_ptr->context_owner && cred_ptr->login_context != NULL) {
  #ifndef GSS_SVC_CODE
! 	dce_svc_printf(GSS_S_TIDY_CRED_FREE_CTX_MSG, 
! 		       (long)(cred_ptr->login_context));
  #endif
  	sec_login_purge_context(&cred_ptr->login_context, &st);
  #ifndef GSS_SVC_CODE
! 	if (st) dce_svc_printf(GSS_S_TIDY_CRED_FREE_FAIL_MSG, st);
  #endif
  	cred_ptr->context_owner = 0;
      };
--- 1862,1877 ----
  static void tidy_cred(cred_info * cred_ptr) {
      error_status_t st;
  #ifndef GSS_SVC_CODE
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Tidying a credential"));
  #endif
      if (cred_ptr->context_owner && cred_ptr->login_context != NULL) {
  #ifndef GSS_SVC_CODE
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Purging owned context (%lx)", 
! 		     (long)(cred_ptr->login_context)));
  #endif
  	sec_login_purge_context(&cred_ptr->login_context, &st);
  #ifndef GSS_SVC_CODE
! 	if (st) DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Purge failed (%x)", st));
  #endif
  	cred_ptr->context_owner = 0;
      };
***************
*** 1894,1900 ****
  	svc_c_debug8,
  	GSS_MSG("Tidying a security context"));
  #else
!     dce_svc_printf(GSS_S_TIDY_CTX_TIDYING_MSG);
  #endif
  
      if (ctx_ptr->auth_session_key != NULL) {
--- 1894,1900 ----
  	svc_c_debug8,
  	GSS_MSG("Tidying a security context"));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug8, "Tidying a security context"));
  #endif
  
      if (ctx_ptr->auth_session_key != NULL) {
***************
*** 1903,1909 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting session key..."));
  #else
! 	dce_svc_printf(GSS_S_SK_DELETE_MSG);
  #endif
  	krb5_free_keyblock(ctx_ptr->auth_session_key);
  	ctx_ptr->auth_session_key = NULL;
--- 1903,1909 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting session key..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting session key..."));
  #endif
  	krb5_free_keyblock(ctx_ptr->auth_session_key);
  	ctx_ptr->auth_session_key = NULL;
***************
*** 1912,1918 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->priv_session_key != NULL) {
--- 1912,1918 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->priv_session_key != NULL) {
***************
*** 1921,1927 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting privacy key..."));
  #else
! 	dce_svc_printf(GSS_S_PK_DELETE_MSG);
  #endif
  	krb5_free_keyblock(ctx_ptr->priv_session_key);
  	ctx_ptr->priv_session_key = NULL;
--- 1921,1927 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting privacy key..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting privacy key..."));
  #endif
  	krb5_free_keyblock(ctx_ptr->priv_session_key);
  	ctx_ptr->priv_session_key = NULL;
***************
*** 1930,1936 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->safe_session_key != NULL) {
--- 1930,1936 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->safe_session_key != NULL) {
***************
*** 1939,1945 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting intgrity key..."));
  #else
! 	dce_svc_printf(GSS_S_IK_DELETE_MSG);
  #endif
  	krb5_free_keyblock(ctx_ptr->safe_session_key);
  	ctx_ptr->safe_session_key = NULL;
--- 1939,1945 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting intgrity key..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting integrity key..."));
  #endif
  	krb5_free_keyblock(ctx_ptr->safe_session_key);
  	ctx_ptr->safe_session_key = NULL;
***************
*** 1948,1954 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->priv_key_schedule != NULL) {
--- 1948,1954 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->priv_key_schedule != NULL) {
***************
*** 1957,1963 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting privacy key schedule..."));
  #else
! 	dce_svc_printf(GSS_S_PKS_DELETE_MSG);
  #endif
  	free(ctx_ptr->priv_key_schedule);
  	ctx_ptr->priv_key_schedule = NULL;
--- 1957,1963 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting privacy key schedule..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting privacy key-schedule..."));
  #endif
  	free(ctx_ptr->priv_key_schedule);
  	ctx_ptr->priv_key_schedule = NULL;
***************
*** 1966,1972 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->safe_key_schedule != NULL) {
--- 1966,1972 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->safe_key_schedule != NULL) {
***************
*** 1975,1981 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting integrity key schedule..."));
  #else
! 	dce_svc_printf(GSS_S_IKS_DELETE_MSG);
  #endif
  	free(ctx_ptr->safe_key_schedule);
  	ctx_ptr->safe_key_schedule = NULL;
--- 1975,1981 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting integrity key schedule..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting integrity key-schedule..."));
  #endif
  	free(ctx_ptr->safe_key_schedule);
  	ctx_ptr->safe_key_schedule = NULL;
***************
*** 1984,1990 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->md_init) {
--- 1984,1990 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->md_init) {
***************
*** 1993,1999 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting MD2.5 initializer..."));
  #else
! 	dce_svc_printf(GSS_S_MD2_DELETE_MSG);
  #endif
  	free(ctx_ptr->md_init);
  	ctx_ptr->md_init = NULL;
--- 1993,1999 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting MD2.5 initializer..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting MD2.5 initializer..."));
  #endif
  	free(ctx_ptr->md_init);
  	ctx_ptr->md_init = NULL;
***************
*** 2002,2008 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->actual_mech_type != NULL) {
--- 2002,2008 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->actual_mech_type != NULL) {
***************
*** 2011,2017 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting mechanism OID..."));
  #else
! 	dce_svc_printf(GSS_S_MECH_DELETE_MSG);
  #endif
  	nm_oid_free(ctx_ptr->actual_mech_type, 1);
  	ctx_ptr->actual_mech_type = NULL;
--- 2011,2017 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting mechanism OID..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting mech-type OID..."));
  #endif
  	nm_oid_free(ctx_ptr->actual_mech_type, 1);
  	ctx_ptr->actual_mech_type = NULL;
***************
*** 2020,2026 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->client_name != NULL) {
--- 2020,2026 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->client_name != NULL) {
***************
*** 2029,2035 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting client name..."));
  #else
! 	dce_svc_printf(GSS_S_CLIENT_DELETE_MSG);
  #endif
  	free(ctx_ptr->client_name);
  	ctx_ptr->client_name = NULL;
--- 2029,2035 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting client name..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting client name..."));
  #endif
  	free(ctx_ptr->client_name);
  	ctx_ptr->client_name = NULL;
***************
*** 2038,2044 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->client_creds.magic != 0) {
--- 2038,2044 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->client_creds.magic != 0) {
***************
*** 2047,2053 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting client creds..."));
  #else
! 	dce_svc_printf(GSS_S_CLI_CRED_DELETE_MSG);
  #endif
  	free_creds(&ctx_ptr->client_creds);
  #ifdef GSS_SVC_CODE
--- 2047,2053 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting client creds..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting client creds..."));
  #endif
  	free_creds(&ctx_ptr->client_creds);
  #ifdef GSS_SVC_CODE
***************
*** 2055,2061 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
  
--- 2055,2061 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
  
***************
*** 2064,2070 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting V1 PAC..."));
  #else
! 	dce_svc_printf(GSS_S_PAC_DELETE_MSG);
  #endif
      free_pac(&ctx_ptr->client_pac);
  #ifdef GSS_SVC_CODE
--- 2064,2070 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting V1 PAC..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting V1 PAC..."));
  #endif
      free_pac(&ctx_ptr->client_pac);
  #ifdef GSS_SVC_CODE
***************
*** 2072,2078 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
!     dce_svc_printf(GSS_S_DONE_MSG);
  #endif
  
      if (ctx_ptr->ticketted_name != NULL) {
--- 2072,2078 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
  
      if (ctx_ptr->ticketted_name != NULL) {
***************
*** 2081,2087 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting ticketted name..."));
  #else
! 	dce_svc_printf(GSS_S_TKT_NAME_DELETE_MSG);
  #endif
  	free(ctx_ptr->ticketted_name);
  	ctx_ptr->ticketted_name = NULL;
--- 2081,2087 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting ticketted name..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting ticketted name..."));
  #endif
  	free(ctx_ptr->ticketted_name);
  	ctx_ptr->ticketted_name = NULL;
***************
*** 2090,2096 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->server_name != NULL) {
--- 2090,2096 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->server_name != NULL) {
***************
*** 2099,2105 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting server name..."));
  #else
! 	dce_svc_printf(GSS_S_SVR_NAME_DELETE_MSG);
  #endif
  	nm_oid_free(ctx_ptr->actual_mech_type, 1);
  	ctx_ptr->server_name = NULL;
--- 2099,2105 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting server name..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting server name..."));
  #endif
  	nm_oid_free(ctx_ptr->actual_mech_type, 1);
  	ctx_ptr->server_name = NULL;
***************
*** 2108,2114 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
      if (ctx_ptr->one_time_cred) {
--- 2108,2114 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
      if (ctx_ptr->one_time_cred) {
***************
*** 2121,2127 ****
  	    svc_c_debug9,
  	    GSS_MSG("Deleting managed credential..."));
  #else
! 	dce_svc_printf(GSS_S_MGD_CRED_DELETE_MSG);
  #endif
  	if ((cred_ptr = resolve_cred(ctx_ptr->local_cred)) != NULL) {
  	    tidy_cred(cred_ptr);
--- 2121,2127 ----
  	    svc_c_debug9,
  	    GSS_MSG("Deleting managed credential..."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Deleting managed credential..."));
  #endif
  	if ((cred_ptr = resolve_cred(ctx_ptr->local_cred)) != NULL) {
  	    tidy_cred(cred_ptr);
***************
*** 2133,2139 ****
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	dce_svc_printf(GSS_S_DONE_MSG);
  #endif
      };
  #ifdef GSS_SVC_CODE
--- 2133,2139 ----
  	    svc_c_debug9,
  	    GSS_MSG("Done"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Done"));
  #endif
      };
  #ifdef GSS_SVC_CODE
***************
*** 2141,2147 ****
  	svc_c_debug8,
  	GSS_MSG("Context tidied"));
  #else
! 	dce_svc_printf(GSS_S_TIDY_CTX_TIDIED_MSG);
  #endif
  }
  
--- 2141,2147 ----
  	svc_c_debug8,
  	GSS_MSG("Context tidied"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug8, "Security context tidied."));
  #endif
  }
  
***************
*** 2178,2184 ****
      gss_svc_printf(svc_c_debug9,
  		   GSS_MSG("Entering get_auxiliary_context..."));
  #else
!     dce_svc_printf(GSS_S_GAC_ENTERING_MSG);
  #endif
      synthesize = 0;
  
--- 2178,2184 ----
      gss_svc_printf(svc_c_debug9,
  		   GSS_MSG("Entering get_auxiliary_context..."));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Entering get_auxiliary_context..."));
  #endif
      synthesize = 0;
  
***************
*** 2190,2196 ****
  	gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Cred contains base login context (simple case)"));
  #else
! 	dce_svc_printf(GSS_S_GAC_SIMPLE_MSG);
  #endif
  	login_context = cred_ptr->login_context;
  	sec_login_get_expiration(login_context,
--- 2190,2196 ----
  	gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Cred contains base login context (simple case)"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Cred contains login-context (simple case)"));
  #endif
  	login_context = cred_ptr->login_context;
  	sec_login_get_expiration(login_context,
***************
*** 2201,2207 ****
  	    gss_svc_printf(svc_c_debug8,
  	   GSS_MSG("Login context in get_auxiliary_context is not certified"));
  #else
! 	    dce_svc_printf(GSS_S_GAC_NOTCERT_MSG);
  #endif
  	    error_status = 0;
  	};
--- 2201,2207 ----
  	    gss_svc_printf(svc_c_debug8,
  	   GSS_MSG("Login context in get_auxiliary_context is not certified"));
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug8, "Login-context not certified in get_auxiliary_context"));
  #endif
  	    error_status = 0;
  	};
***************
*** 2221,2227 ****
  	    gss_svc_printf(svc_c_debug9,
  	       GSS_MSG("Credential login-context has expired. Continuing..."));
  #else
! 	    dce_svc_printf(GSS_S_GAC_CTX_EXP_MSG);
  #endif
  	    synthesize = 1;
  	};
--- 2221,2227 ----
  	    gss_svc_printf(svc_c_debug9,
  	       GSS_MSG("Credential login-context has expired. Continuing..."));
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Login-context has expired.  Continuing..."));
  #endif
  	    synthesize = 1;
  	};
***************
*** 2230,2236 ****
  	gss_svc_printf(svc_c_debug9,
  	       GSS_MSG("Credential has no base login-context."));
  #else
! 	dce_svc_printf(GSS_S_GAC_NO_BASE_CTX_MSG);
  #endif
  	synthesize = 1;
      };
--- 2230,2236 ----
  	gss_svc_printf(svc_c_debug9,
  	       GSS_MSG("Credential has no base login-context."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Credential has no base login-context."));
  #endif
  	synthesize = 1;
      };
***************
*** 2250,2256 ****
  	    gss_svc_printf(svc_c_debug9,
  			   GSS_MSG("Found auxiliary login context"));
  #else
! 	    dce_svc_printf(GSS_S_GAC_FOUND_CTX_MSG);
  #endif
  
  	    login_context = cred_ptr->lookup_login_context;
--- 2250,2256 ----
  	    gss_svc_printf(svc_c_debug9,
  			   GSS_MSG("Found auxiliary login context"));
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Found auxiliary login-context"));
  #endif
  
  	    login_context = cred_ptr->lookup_login_context;
***************
*** 2262,2268 ****
  		gss_svc_printf(svc_c_debug8,
  	   GSS_MSG("Login context in get_auxiliary_context is not certified"));
  #else
! 		dce_svc_printf(GSS_S_GAC_NOTCERT_MSG);
  #endif
  		error_status = 0;
  	};
--- 2262,2268 ----
  		gss_svc_printf(svc_c_debug8,
  	   GSS_MSG("Login context in get_auxiliary_context is not certified"));
  #else
! 		DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug8, "Login-context not certified in get_auxiliary_context"));
  #endif
  		error_status = 0;
  	};
***************
*** 2282,2295 ****
  		gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Auxiliary context has expired.  Continuing..."));
  #else
! 		dce_svc_printf(GSS_S_GAC_CTX_EXP1_MSG);
  #endif
  	    } else {
  #ifdef GSS_SVC_CODE
  		gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Existing auxiliary context is OK."));
  #else
! 		dce_svc_printf(GSS_S_GAC_CTX_OK_MSG);
  #endif
  		synthesize = 0;
  	    };
--- 2282,2295 ----
  		gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Auxiliary context has expired.  Continuing..."));
  #else
! 		DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Auxiliary login-context has expired.  Continuing..."));
  #endif
  	    } else {
  #ifdef GSS_SVC_CODE
  		gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Existing auxiliary context is OK."));
  #else
! 		DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Existing auxiliary context is OK."));
  #endif
  		synthesize = 0;
  	    };
***************
*** 2307,2313 ****
  	    gss_svc_printf(svc_c_debug8,
  	     GSS_MSG("Suitable login context not found. Synthesising one..."));
  #else
! 	    dce_svc_printf(GSS_S_GAC_SYNTHESIZING_MSG);
  #endif
  	    if (cred_ptr->principal_name_valid) {	    
  
--- 2307,2313 ----
  	    gss_svc_printf(svc_c_debug8,
  	     GSS_MSG("Suitable login context not found. Synthesising one..."));
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug8, "Suitable login-context not found - synthesizing one..."));
  #endif
  	    if (cred_ptr->principal_name_valid) {	    
  
***************
*** 2316,2323 ****
  		   GSS_MSG("Creating login-context from principal name \'%s\'"),
  		   cred_ptr->principal_name);
  #else
! 		dce_svc_printf(GSS_S_GAC_SYNTH_NAME_MSG,
! 			       cred_ptr->principal_name);
  #endif
  		lookup_reg_server_arg(cred_ptr->principal_name,
  				      &arg,
--- 2316,2323 ----
  		   GSS_MSG("Creating login-context from principal name \'%s\'"),
  		   cred_ptr->principal_name);
  #else
! 		DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Creating login-context from princ name '%s'",
! 			     cred_ptr->principal_name));
  #endif
  		lookup_reg_server_arg(cred_ptr->principal_name,
  				      &arg,
***************
*** 2331,2347 ****
  				   GSS_MSG("Principal name: %s"),
  				   cred_ptr->principal_name);
  #else
! 		    dce_svc_printf(GSS_S_GAC_LRS_FAILED_MSG,
! 				   error_status);
! 		    dce_svc_printf(GSS_S_GAC_PNAME_MSG,
! 				   cred_ptr->principal_name);
  #endif
  		} else {
  #ifdef GSS_SVC_CODE
  		    gss_svc_printf(svc_c_debug9,
  			   GSS_MSG("Returned from lookup_reg_server_arg"));
  #else
! 		    dce_svc_printf(GSS_S_GAC_LRS_OK_MSG);
  #endif
  		};
  
--- 2331,2347 ----
  				   GSS_MSG("Principal name: %s"),
  				   cred_ptr->principal_name);
  #else
! 		    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Lookup_reg_server_arg failed (%x)",
! 				 error_status));
! 		    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Principal name: %s",
! 				 cred_ptr->principal_name));
  #endif
  		} else {
  #ifdef GSS_SVC_CODE
  		    gss_svc_printf(svc_c_debug9,
  			   GSS_MSG("Returned from lookup_reg_server_arg"));
  #else
! 		    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Returned from lookup_registered_server_arg"));
  #endif
  		};
  
***************
*** 2352,2358 ****
  		       GSS_MSG("pname: %s"), 
  			       cred_ptr->principal_name);
  #else
! 		dce_svc_printf(GSS_S_GAC_SLS_MSG, cred_ptr->principal_name);
  #endif
  
  		if (!sec_login_setup_identity(
--- 2352,2358 ----
  		       GSS_MSG("pname: %s"), 
  			       cred_ptr->principal_name);
  #else
! 		DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Calling sec_login_setup_identity(%s)", cred_ptr->principal_name));
  #endif
  
  		if (!sec_login_setup_identity(
***************
*** 2375,2381 ****
  		gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Returned from sec_login_setup_identity"));
  #else
! 		dce_svc_printf(GSS_S_GAC_SLS_OK_MSG);
  #endif
  		login_context = cred_ptr->lookup_login_context;
  
--- 2375,2381 ----
  		gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Returned from sec_login_setup_identity"));
  #else
! 		DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Returned from sec_login_setup_identity"));
  #endif
  		login_context = cred_ptr->lookup_login_context;
  
***************
*** 2400,2406 ****
  	    gss_svc_printf(svc_c_debug9,
  		   GSS_MSG("Existing auxiliary context will be refreshed"));
  #else
! 	    dce_svc_printf(GSS_S_GAC_REFRESHING_MSG);
  #endif
  	};
  
--- 2400,2406 ----
  	    gss_svc_printf(svc_c_debug9,
  		   GSS_MSG("Existing auxiliary context will be refreshed"));
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Refreshing existing auxiliary login-context"));
  #endif
  	};
  
***************
*** 2411,2417 ****
  	gss_svc_printf(svc_c_debug9,
  	       GSS_MSG("Calling sec_login_valid_from_keytable"));
  #else
! 	dce_svc_printf(GSS_S_GAC_SLV_MSG);
  #endif
  	sec_login_valid_from_keytable(
  			  cred_ptr->lookup_login_context,
--- 2411,2417 ----
  	gss_svc_printf(svc_c_debug9,
  	       GSS_MSG("Calling sec_login_valid_from_keytable"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Calling sec_login_valid_from_keytable..."));
  #endif
  	sec_login_valid_from_keytable(
  			  cred_ptr->lookup_login_context,
***************
*** 2427,2433 ****
  	gss_svc_printf(svc_c_debug9,
  	   GSS_MSG("Returned from sec_login_valid_from_keytable"));
  #else
! 	dce_svc_printf(GSS_S_GAC_SLV_RET_MSG);
  #endif
  	if (error_status != error_status_ok) {
  #ifdef GSS_SVC_CODE
--- 2427,2433 ----
  	gss_svc_printf(svc_c_debug9,
  	   GSS_MSG("Returned from sec_login_valid_from_keytable"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Returned from sec_login_valid_from_keytable"));
  #endif
  	if (error_status != error_status_ok) {
  #ifdef GSS_SVC_CODE
***************
*** 2465,2471 ****
      gss_svc_printf(svc_c_debug9,
  		   GSS_MSG("Entering fixup_registry_context..."));
  #else
!     dce_svc_printf(GSS_S_FRC_MSG);
  #endif
  		   
  retry:
--- 2465,2471 ----
      gss_svc_printf(svc_c_debug9,
  		   GSS_MSG("Entering fixup_registry_context..."));
  #else
!     DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Entering fixup_registry_context..."));
  #endif
  		   
  retry:
***************
*** 2480,2486 ****
  	    GSS_MSG("Couldn't get auxiliary login context for rgy lookup (%X)"),
  	    o_status);
  #else
! 	    dce_svc_printf(GSS_S_FRC_NO_AUX_CTX_MSG, o_status);
  #endif
  	    goto fixup_registry_context_return;
  	};
--- 2480,2486 ----
  	    GSS_MSG("Couldn't get auxiliary login context for rgy lookup (%X)"),
  	    o_status);
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Couldn't get auxiliary context for rgy lookup (%x)", o_status));
  #endif
  	    goto fixup_registry_context_return;
  	};
***************
*** 2498,2504 ****
  	gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Binding to registry...."));
  #else
! 	dce_svc_printf(GSS_S_FRC_RGY_BIND_MSG);
  #endif
  	sec_rgy_site_bind(site_name,
  			  &binding_info,
--- 2498,2504 ----
  	gss_svc_printf(svc_c_debug9,
  		       GSS_MSG("Binding to registry...."));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Binding to registry..."));
  #endif
  	sec_rgy_site_bind(site_name,
  			  &binding_info,
***************
*** 2510,2516 ****
  	    gss_svc_printf(svc_c_debug9,
  			   GSS_MSG("Bind succeeded"));
  #else
! 	    dce_svc_printf(GSS_S_FRC_BIND_OK_MSG);
  #endif
  	    cred_ptr->lookup_registry_context_valid = 1;
  	} else {
--- 2510,2516 ----
  	    gss_svc_printf(svc_c_debug9,
  			   GSS_MSG("Bind succeeded"));
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Bind succeeded"));
  #endif
  	    cred_ptr->lookup_registry_context_valid = 1;
  	} else {
***************
*** 2519,2525 ****
  			   GSS_MSG("Bind failed (%X)"),
  			   error_status);
  #else
! 	    dce_svc_printf(GSS_S_FRC_BIND_FAILED_MSG, error_status);
  #endif
  	    if (retry_count < MAX_RGY_RETRIES) {
  		retry_count++;
--- 2519,2525 ----
  			   GSS_MSG("Bind failed (%X)"),
  			   error_status);
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug1, "Registry bind attempt failed (%x)", error_status));
  #endif
  	    if (retry_count < MAX_RGY_RETRIES) {
  		retry_count++;
***************
*** 2593,2599 ****
  		svc_c_debug9,
  		GSS_MSG("cred_expand_id - Calling sec_id_parse_name"));
  #else
! 	    dce_svc_printf(GSS_S_CEI_SIP_MSG);
  #endif
  	    sec_id_parse_name(cred_ptr->lookup_registry_context,
  			      cred_ptr->principal_name,
--- 2593,2599 ----
  		svc_c_debug9,
  		GSS_MSG("cred_expand_id - Calling sec_id_parse_name"));
  #else
! 	    DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Cred_expand_id - Calling sec_id_parse_name"));
  #endif
  	    sec_id_parse_name(cred_ptr->lookup_registry_context,
  			      cred_ptr->principal_name,
***************
*** 2651,2657 ****
  	    svc_c_debug9,
  	    GSS_MSG("cred_expand_id - Calling sec_id_gen_name"));
  #else
! 	dce_svc_printf(GSS_S_CEI_SIG_MSG);
  #endif
  	sec_id_gen_name(cred_ptr->lookup_registry_context,
  			&cred_ptr->principal_realm_uuid,
--- 2651,2657 ----
  	    svc_c_debug9,
  	    GSS_MSG("cred_expand_id - Calling sec_id_gen_name"));
  #else
! 	DCE_SVC_DEBUG((gss__svc_handle, gss_s_general, svc_c_debug9, "Cred_expand_id - Calling sec_id_gen_name..."));
  #endif
  	sec_id_gen_name(cred_ptr->lookup_registry_context,
  			&cred_ptr->principal_realm_uuid,
***************
*** 2726,2732 ****
  	svc_c_debug9,
  	GSS_MSG("Entering pac_to_name to determine client's na[white_r 12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13021
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_rgy_attr tests
Short Description             : sec_rgy_attr functional
tests, tp20 and tp21, fail
Reported Date                 : 7/31/95
Found in Baseline             : 1.1
Found Date                    : 7/31/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec_rgy_attr.c
Sensitivity                   : public

[8/4/95 public]

The two tests tp20 and tp21 within
src/test/functional/security/ts/client/rca/sec_rgy_attr/sec_rgy_attr.c
both fail.  Here is the source:
- - - -
static void
tp20()  /* successful test for sec_rgy_attr_lookup_by_id */
{
    tet_infoline("test case (tp20)");
    Create_Schema_Entry();
    attr_lookup(test_integer, "for 1 attr id", 1);
    Delete_Schema_Entry();
    tet_result(TET_PASS);
}

static void
tp21()  /* successful test for sec_rgy_attr_lookup_by_id */
{
    tet_infoline("test case (tp21)");
    Create_Schema_Entry();
    attr_lookup(test_integer, "for 0 attr ids", 0);
    Delete_Schema_Entry();
    tet_result(TET_PASS);
}
- - - -

Both tests create a schema entry, do a lookup, and delete a schema entry.
The problem is that the schema entry is created with the
reserved schema_entry_flags set.  Here is the source:
- - - -
rgy_res_attr_sch_entry_t   rgy_res_attr_sch_entry[] = {
{ ATTR_NAME, ATTR_ID,
  sec_attr_enc_integer,
  "06ab9320-0191-11ca-a9e8-08001e039d7d",       /* person from rsdb_acl.c */
  sec_acl_perm_mgmt_info,              sec_acl_perm_mgmt_info,
  sec_acl_perm_mgmt_info,              sec_acl_perm_mgmt_info,
  (sec_attr_sch_entry_reserved | sec_attr_sch_entry_use_defaults),
  sec_attr_intercell_act_reject,       sec_attr_trig_type_none,
  NULL,                                "",
  "values: {0=ENFORCE-BY-THIRD-PARTY, 1=ENFORCE-BY-REGISTRY}" }
};
- - - -

Setting the sec_attr_sch_entry_reserved flag prevents the schema
entry from being deleted. (reference: Application Dev Ref, page 6-22).

The two calls to Delete_Schema_Entry() both fail.


Repeat By:  sec_rgy_attr test

Proposed Solution:  I deleted the sec_attr_sch_entry_reserved flag.

[12/20/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13020
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : Missing free in krb5_do_as_request()
Reported Date                 : 8/4/95
Found in Baseline             : 1.1
Found Date                    : 3/24/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : sec
security/krb5/lib/krb/get_in_tkt.c
Sensitivity                   : public

[8/4/95 public]

There are some missing free() in security/krb5/lib/krb/get_in_tkt.c
In krb5_do_as_request(), krb5_obtain_preauth() returns 3 allocated 
pointers in the structure.  They should be freed befor returning from 
krb5_do_as_request().  Currently it frees only the top pointer.

=============================================================
src/security/krb5/lib/krb/get_in_tkt.c
=============================================================
***************
*** 214,221 ****
      if (retval = krb5_timeofday(&time_now)) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata)
!             free(request.padata);
          return(retval);
      }

--- 214,225 ----
      if (retval = krb5_timeofday(&time_now)) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata) {
!             if (pre_auth_data == NULL)
!                 krb5_free_pa_data( request.padata );
!             else
!                 free(request.padata);
!         }
          return(retval);
      }

***************
*** 238,245 ****
      if (retval = encode_krb5_as_req(&request, &packet)) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata)
!             free(request.padata);
          return(retval);
      }
      retval = krb5_sendto_kdc(packet, krb5_princ_realm(creds->client), reply);
--- 242,253 ----
      if (retval = encode_krb5_as_req(&request, &packet)) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata) {
!             if (pre_auth_data == NULL)
!                 krb5_free_pa_data( request.padata );
!             else
!                 free(request.padata);
!         }
          return(retval);
      }
      retval = krb5_sendto_kdc(packet, krb5_princ_realm(creds->client), reply);
***************
*** 247,254 ****
      if (retval) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata)
!             free(request.padata);
          return(retval);
      }

--- 255,266 ----
      if (retval) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata) {
!             if (pre_auth_data == NULL)
!                 krb5_free_pa_data( request.padata );
!             else
!                 free(request.padata);
!         }
          return(retval);
      }

***************
*** 258,265 ****
          if (retval = decode_krb5_error(reply, &err_reply)) {
              if (decrypt_key)
                  krb5_free_keyblock(decrypt_key);
!             if (request.padata)
!                 free(request.padata);
              xfree(reply->data);
              reply->data = NULL;
              reply->length = 0;
--- 270,281 ----
          if (retval = decode_krb5_error(reply, &err_reply)) {
              if (decrypt_key)
                  krb5_free_keyblock(decrypt_key);
!             if (request.padata) {
!                 if (pre_auth_data == NULL)
!                     krb5_free_pa_data( request.padata );
!                 else
!                     free(request.padata);
!             }
              xfree(reply->data);
              reply->data = NULL;
              reply->length = 0;
***************
*** 281,288 ****
          krb5_free_error(err_reply);
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata)
!             free(request.padata);
          xfree(reply->data);
          reply->data = NULL;
          reply->length = 0;
--- 297,308 ----
          krb5_free_error(err_reply);
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata) {
!             if (pre_auth_data == NULL)
!                 krb5_free_pa_data( request.padata );
!             else
!                 free(request.padata);
!         }
          xfree(reply->data);
          reply->data = NULL;
          reply->length = 0;
***************
*** 292,299 ****
      if (!krb5_is_as_rep(reply)) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata)
!             free(request.padata);
          xfree(reply->data);
          return KRB5KRB_AP_ERR_MSG_TYPE;
      }
--- 312,323 ----
      if (!krb5_is_as_rep(reply)) {
          if (decrypt_key)
              krb5_free_keyblock(decrypt_key);
!         if (request.padata) {
!             if (pre_auth_data == NULL)
!                 krb5_free_pa_data( request.padata );
!             else
!                 free(request.padata);
!         }
          xfree(reply->data);
          return KRB5KRB_AP_ERR_MSG_TYPE;
      }
***************
*** 300,307 ****

      if (decrypt_key)
          krb5_free_keyblock(decrypt_key);
!     if (request.padata)
!         free(request.padata);

      return 0;
  }
--- 324,335 ----

      if (decrypt_key)
          krb5_free_keyblock(decrypt_key);
!     if (request.padata) {
!         if (pre_auth_data == NULL)
!             krb5_free_pa_data( request.padata );
!         else
!             free(request.padata);
!     }

      return 0;
  }

[10/2/95 public]
Fix submitted to 1.1-maint code

[12/20/95 public]
Fix included in DCE 1.2.1
Closed



CR Number                     : 13016
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : server
Short Description             : secd core dumps
Reported Date                 : 8/3/95
Found in Baseline             : 1.1
Found Date                    : 7/19/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : security/server/rs/rs_secidmap.c
Sensitivity                   : public

[8/3/95 public]

The security server started crashing about once a week with:

   REGISTRY: FATAL ERROR _rsdb_pgo_uid_of_named_item: unable to obtain
   credentials for pgo at line 1470 of file
   ../../../../../src/security/server/rsdb/rsdb_pgo.c


abort process in raise at 0xd00c1bc0 ($t12)
0xd00c1bc0 (raise+0x24) 80410014          l   r2,0x14(r1)
(dbx) where
raise(0x0) at 0xd00c1bc0
abort.abort(0x0) at 0xd030d45c
rs_task_fatal(0x0) at 0x1002f8cc
rs_util_fatal(0x0) at 0x100033ac
rsdb_pgo_uid_of_named_item(0x0, 0xffffffff, 0xffffffff) at 0x1000cddc
rs_sec_id_parse_name(0x0, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff
ffff, 0xffffffff, 0xffffffff) at 0x10029784
rsec_id_parse_name(0x0, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffff
ff, 0xffffffff, 0xffffffff) at 0x10029c88
rsec_id_parse_name_cache(0x0, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x
ffffffff, 0xffffffff, 0xffffffff) at 0x100299fc
ssrs_common_sstub(0x0, 0xffffffff, 0xffffffff, 0xffffffff) at 0x1006f9f8
rpc_ssr_sstub(0x2040d828, 0x2014da30, 0x202c6ac4, 0x2040acfc, 0x2014dc2c, 0x200a
ace4, 0x202c6aa8, 0x30003) at 0xd03660a4
rpc__cn_call_executor(0x0, 0xffffffff) at 0xd043cea8
cthread_call_executor(0x0) at 0xd0437b68
cma__thread_base(0x0) at 0xd05617e0

The problem is rs_sec_id_parse_name isn't checking
any return codes from the calls it makes.  So it doesn't realize that
its call to rsdb_util_path_resolve failed with 0x1712207a: 
Registry object not found (dce / sec)
and it tries to pass a bogus structure to rsdb_pgo_uid_of_named_item,
whole gets pretty huffy about the whole thing and aborts the whole
process.

=============================================================
src/security/server/rs/rs_secidmap.c
=============================================================
***************
*** 202,207 ****
--- 202,212 ----
      sec_id_convert_from_global_name(global_namep, unresolved_name, &islocal,
                                      status);

+     if (!STATUS_OK(status)) {
+         SET_STATUS(status, sec_rgy_bad_name);
+         return;
+     }
+
      if (islocal) {
          /*
           * we are dealing with a cell relative name - so simply fill

[10/2/95 public]
Fixed in 1.1-maint code

[12/20/95 public]
Fix included in DCE 1.2.1
Closed



CR Number                     : 13012
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : login
Short Description             : sec_encode_epac_set_free() called with stack variable
Reported Date                 : 8/3/95
Found in Baseline             : 1.1wp
Found Date                    : 6/28/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[8/3/95 public]

There are several places in the security code where sec_encode_epac_set_free()
is called with a local variable on the stack.  This variable is then put
on the free list causing stack corruption.

=============================================================
src/security/client/login/sec_login_pvt.c
=============================================================
***************
*** 5582,5588 ****
      sec_id_epac_set_encode((void *(*)(unsigned32))malloc, free, &epac_set,
          &epac_chain->num_bytes,       &epac_chain->bytes, stp);

-     sec_encode_epac_set_free(free, &epac_set);
      sec_encode_epac_data_free(free, &epac_data);
      sec_encode_buffer_free(free, &epac.pickled_epac_data.bytes);
  }
--- 5582,5587 ----
***************
*** 5662,5668 ****
      sec_id_epac_set_encode((void *(*)(unsigned32))malloc, free, &epac_set,
          &epac_chain->num_bytes,       &epac_chain->bytes, stp);

-     sec_encode_epac_set_free(free, &epac_set);
      sec_encode_epac_data_free(free, &epac_data);
      sec_encode_buffer_free(free, &epac.pickled_epac_data.bytes);
  }
--- 5661,5666 ----
***************
*** 6006,6012 ****
      sec_id_epac_set_encode((void *(*)(unsigned32))malloc, free, &epac_set,
          &epac_chain->num_bytes,       &epac_chain->bytes, stp);

-     sec_encode_epac_set_free(free, &epac_set);
      sec_encode_epac_data_free(free, &epac_data);
      sec_encode_buffer_free(free, &epac.pickled_epac_data.bytes);
  }
--- 6004,6009 ----

[10/2/95 public]
Fix submitted to 1.1-maint code

[12/20/95 public]
Fix included in DCE 1.2.1
Closed



CR Number                     : 13009
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : Mem leak sec_encode_epac_set_free()
Reported Date                 : 8/2/95
Found in Baseline             : 1.1unintegrated
Found Date                    : 3/7/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : security/utils/sec_encode.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[8/2/95 public]

There are missing free()'s in sec_encode_epac_set_free().
Since epac_set->epacs are the array of the epacs,
the base pointer should be freed, too.

=============================================================
src/security/utils/sec_encode.c
=============================================================
***************
*** 1129,1134 ****
--- 1129,1135 ----
            }
        }
        res_set->num_restrictions = 0;
+       DEALLOCATE(dealloc,res_set->restrictions);
        res_set->restrictions = NULL;
      }
  }
***************
*** 1202,1207 ****
--- 1203,1209 ----
            sec_attr_util_free((dealloc ? dealloc : rpc_ss_client_free),
                               &epac_data->attrs[attr_index]);
        }
+       DEALLOCATE(dealloc,epac_data->attrs );
  #endif /*KERNEL*/
      }
  }
***************
*** 1225,1230 ****
--- 1227,1233 ----
                ts->tokens[i].token_bytes.num_bytes = 0;
            }
        }
+       DEALLOCATE(dealloc,ts->tokens);
      }
  }

***************
*** 1238,1247 ****
--- 1241,1252 ----

      if (azd->seals) {
        sec_encode_seal_set_free(dealloc, azd->seals);
+       DEALLOCATE(dealloc, azd->seals);
        azd->seals = NULL;
     }
      if (azd->deleg_tokens) {
        sec_encode_dlg_token_set_free(dealloc, azd->deleg_tokens);
+       DEALLOCATE(dealloc,azd->deleg_tokens);
        azd->deleg_tokens = NULL;
      }
      if (azd->extended_info
***************
*** 1250,1255 ****
--- 1255,1261 ----
        DEALLOCATE(dealloc, azd->extended_info->bytes);
        azd->extended_info->bytes = NULL;
        azd->extended_info->num_bytes = 0;
+       DEALLOCATE(dealloc,azd->extended_info);
          azd->extended_info = NULL;
      }
  }
***************
*** 1342,1347 ****
--- 1348,1354 ----
                  for (j = 0; j < epac_data.num_attrs; j++) {
                    sec_attr_util_free(FREE_PTR, &epac_data.attrs[j]);
                }
+               DEALLOCATE(FREE_PTR, epac_data.attrs );
                epac_data.num_attrs = 0;
            }

[10/21/95 public]

Tom Jordahl at Gradient discovered an error in the above fix.

Ticket 22079 follows:

--------------------------------------------------------------
From tomj@gradient.com Tue Oct 10 11:27:38 1995
Received: from indy.gradient.com (indy.gradient.com [192.92.110.1]) by postman.osf.org (8.6.9/8.6.x) with ESMTP
	id LAA19114 for <dce-defect@osf.org>; Tue, 10 Oct 1995 11:27:33 -0400
Received: by indy.gradient.com (8.6.9/Gradient-3)
	id LAA23107; Tue, 10 Oct 1995 11:27:32 -0400
From: tomj@gradient.com (Tom Jordahl)
Message-Id: <199510101527.LAA23107@indy.gradient.com>
Subject: OT 13009 fix incorrect
To: dce-defect@osf.org (OSF DCE defect reporting)
Date: Tue, 10 Oct 1995 11:27:32 -0400 (EDT)
Cc: =dce-defect@gradient.com
X-Mailer: ELM [version 2.4 PL23]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 1069      

Hello,

While looking over (and applying) some OT fixes I discovered an
error in OT 13009.  The fix contains the following diff:

src/security/utils/sec_encode.c

***************
*** 1342,1347 ****
--- 1348,1354 ----
                  for (j = 0; j < epac_data.num_attrs; j++) {
                    sec_attr_util_free(FREE_PTR, &epac_data.attrs[j]);
                }
+               DEALLOCATE(FREE_PTR, epac_data.attrs );
                epac_data.num_attrs = 0;
            }


The DEALLOCATE macro looks like this:
#define DEALLOCATE(deallocator,ptr) \
{ if (deallocator) (*(deallocator))((ptr)); else rpc_ss_client_free((ptr)); }

And FREE_PTR:
#define		FREE_PTR free

Which means the macro will do *free(ptr), which chokes one of my compilers.

Someone may have caught this, but I don't have access to a recent 
copy of the OT.  I just changed the staement to:

	free(epac_data.attrs );


-- 
Tom Jordahl                                       Internet: tom_j@gradient.com
Gradient Technologies Inc.                        DCE development
http://www.gradient.com/

[12/20/95 public]
Fixed in DCE 1.2.1
Closed

[10/7/96 public]
Fixed in 1.1maint.



CR Number                     : 13006
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd core dumps krb5_free_authdata()
Reported Date                 : 8/2/95
Found in Baseline             : 1.1unintegrated
Found Date                    : 6/2/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/krb5/kdc/do_tgs_req.c
Sensitivity                   : public

[8/2/95 public]

secd core dumps in krb5_free_authdata() and krb5_free_principal()

Segmentation fault in . at 0x1000a788 ($t8)
0x1000a788 (???) 80630004          l   r3,0x4(r3)
(dbx) where
krb5_free_principal(??) at 0x1000a788
krb5_free_ticket(??) at 0x10035988
krb5_free_tkt_authent(??) at 0x100d38ac
process_tgs_req(??, ??, ??, ??) at 0x100db7f0
dispatch(??, ??, ??) at 0x100d9b18
rsec_krb5rpc_sendto_kdc(??, ??, ??, ??, ??, ??, ??) at 0x100d9800
op0_ssr(0x2027b300, 0x20273c30, 0x20372b08, 0x202773dc, 0x5003, 0x20017608, 0x20372adc) at
 0x100d954c
rpc__cn_call_executor(??, ??) at 0xd0c7c208
cthread_call_executor(??) at 0xd0b8bdf4
_pthread_body(??) at 0xd09dc544

-------------------------------------------------------------

Segmentation fault in . at 0x1000a61c ($t11)
0x1000a61c (???) 80640008          l   r3,0x8(r4)
(dbx) where
krb5_free_authdata(??) at 0x1000a61c
krb5_free_enc_tkt_part(??) at 0x10035a78
krb5_free_ticket(??) at 0x100359b0
krb5_free_tkt_authent(??) at 0x100d38ac
process_tgs_req(??, ??, ??, ??) at 0x100db7f0
dispatch(??, ??, ??) at 0x100d9b18
rsec_krb5rpc_sendto_kdc(??, ??, ??, ??, ??, ??, ??) at 0x100d9800
op0_ssr(0x209cacc0, 0x209cadf0, 0x203efa8c, 0x203efa88, 0x16ca0000, 0x20017608, 0x203efa78
) at 0x100d954c
rpc__dg_execute_call(??, ??) at 0xd0c95514
cthread_call_executor(??) at 0xd0b7adf4
_pthread_body(??) at 0xd0a27544


=============================================================
src/security/krb5/kdc/do_tgs_req.c
=============================================================
***************
*** 947,954 ****
      errpkt.cusec = 0;

      if (retval = krb5_us_timeofday(&errpkt.stime, &errpkt.susec)) {
-       if (authdata)
-           krb5_free_tkt_authent(authdata);
        return(retval);
      }

--- 947,952 ----
***************
*** 962,969 ****
                                                               the name */
      errpkt.text.length = strlen(error_message(error+KRB5KDC_ERR_NONE))+1;
      if (!(errpkt.text.data = malloc(errpkt.text.length))) {
-       if (authdata)
-           krb5_free_tkt_authent(authdata);
        return ENOMEM;
      }
      (void) strcpy(errpkt.text.data, error_message(error+KRB5KDC_ERR_NONE));
--- 960,965 ----
***************
*** 970,977 ****

      if (!(scratch = (krb5_data *)malloc(sizeof(*scratch)))) {
        free(errpkt.text.data);
-       if (authdata)
-           krb5_free_tkt_authent(authdata);
        return ENOMEM;
      }
      errpkt.e_data.length = 0;
--- 966,971 ----
***************
*** 980,987 ****
      retval = krb5_mk_error(&errpkt, scratch);
      free(errpkt.text.data);
      *response = scratch;
-     if (authdata)
-         krb5_free_tkt_authent(authdata);
      return retval;
  }

--- 974,979 ----

[12/20/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13003
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : Mem leak in
sec_login_pvt_gen_export_token()
Reported Date                 : 8/2/95
Found in Baseline             : 1.1unintegrated
Found Date                    : 5/12/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : src/security/client/login/sec_login_pvt.c
Sensitivity                   : public

[8/2/95 public]

The rpc_string_free() is in the wrong place in sec_login_pvt_gen_export_token().
=============================================================
src/security/client/login/sec_login_pvt.c
=============================================================
***************
*** 7046,7058 ****
            memcpy(p, GENID_PREFIX, GENID_PREFIX_LEN);
            p += GENID_PREFIX_LEN;
            memcpy(p, uuid_str, genid_str_len - GENID_PREFIX_LEN);

!           if (uuid_str != NULL) {
!               error_status_t  ignore_st;

!               rpc_string_free(&uuid_str, &ignore_st);
!           }
!       }
      }
  }

--- 7046,7058 ----
            memcpy(p, GENID_PREFIX, GENID_PREFIX_LEN);
            p += GENID_PREFIX_LEN;
            memcpy(p, uuid_str, genid_str_len - GENID_PREFIX_LEN);
+       }
+     }

!     if (uuid_str != NULL) {
!       error_status_t  ignore_st;

!       rpc_string_free(&uuid_str, &ignore_st);
      }
  }

[11/03/95 public]
Fix submitted to 1.1maint.

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13002
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12791, 13001
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : Problems with freeing the login context
Reported Date                 : 8/2/95
Found in Baseline             : 1.1unintegrated
Found Date                    : 6/2/95
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[8/2/95 public]

Core dump in update_identity_exp().
This problem was discovered while running the OSF dlgcfg002 delegation testcase
(part 1).  30 minutes after the test passed, the intermediary server core
dumped branching to 0.

=============================================================
src/security/client/login/sec_login_pvt.c
=============================================================
***************
*** 4650,4655 ****
--- 4650,4661 ----
      char *cachename;
      int ret;

+     if(lcp->krb_info.cache == NULL)
+     {
+         *stp = sec_login_s_handle_invalid;
+         return;
+     }
+
      cachename = krb5_cc_get_name (lcp->krb_info.cache);
      ret = stat (cachename, &stbuf);

[10/31/95 public]
After applying the above patch and rerun the test dlgcfg002 (this is with
DCE 1.1 maint tree), I still got core dump after about 30 minutes. This time
it is in sec_login_pvt_check_exp(), since the lcp->identity is NULL (the
identity part of lcp was freed in sec_login_pvt_free_login_context(), #4
already):

#0  0xa42e2cfd in sec_login_pvt_check_exp (lcp=0x55b4a0, stp=0x42a990)
    at ../../../../src/security/client/login/sec_login_pvt.c:4953
#1  0xa42d9ef6 in sec_login_export_context (login_context=0x0, buf_len=1024, 
    buf=0x42a994 "q\032B", len_used=0x42a98c, len_needed=0x42a988, 
    st=0x42a990)
    at /project/dce/build/dce1.1-maint/src/security/client/login/sec_login.c:1698
#2  0xa42e3521 in sec_login_pvt_get_namecache (lcp=0x55b4a0, cache=0x42adb0, 
    filename=0x42adac)
    at ../../../../src/security/client/login/sec_login_pvt.c:5248
#3  0xa42f2916 in sec__id_free_cache (lhp=0x55b4a0)
    at /project/dce/build/dce1.1-maint/src/security/client/rca/secidmap.c:872
#4  0xa42dccb4 in sec_login_pvt_free_login_context (lcp=0x55b4a0)
    at ../../../../src/security/client/login/sec_login_pvt.c:1231
#5  0xa42db1f3 in sec_login_pvt_release_context (lcp=0x55b4a0)
    at /project/dce/build/dce1.1-maint/src/security/client/login/sec_login_cache.c:327
#6  0xa42db5b0 in sec_login_util_release (security_context=0x30964b72)
    at /project/dce/build/dce1.1-maint/src/security/client/login/sec_login_cache.c:451
#7  0xa42d1442 in sec_krb_ccache_free (ccache=0x30964b72)
    at /project/dce/build/dce1.1-maint/src/security/utils/sec_authn.c:348
#8  0xa4208482 in rpc__krb_free_info ()
#9  0xa41b64ec in rpc__auth_info_release (6104344)
#10 0xa42084d9 in rpc__krb_free_key ()
#11 0xa41b6750 in rpc__key_info_release (4705048)
#12 0xa41ee506 in cct_timer_fn (0)
#13 0xa41b2268 in rpc__timer_callout ()
#14 0xa41b1b66 in timer_loop (0)
#15 0xa419b494 in cma__thread_base ()
#16 0xa419f01d in cma__create_thread ()
#17 0x473540 in perms ()
#18 0x56570cec in perms ()
Cannot access memory at address 0x83e58955.
(gdb) 

So here is an additional piece of patch for fixing this test problem:

*** 4945,4950 ****
--- 4951,4960 ----
      time (&now);
      CLEAR_STATUS(stp);
  
+     /* OT 13002 fix. */
+     if (lcp->identity == NULL)
+       return;
+ 
      if (lcp->identity->policy.identity_exp < now)
      {
        update_identity_exp(lcp, stp);

[10/31/95 public]
I was in a hurry :-). The above was not good enough, It needs to set the status
field to reflect it:

*** 4945,4950 ****
--- 4951,4960 ----
      time (&now);
      CLEAR_STATUS(stp);
 
+     /* OT 13002 fix. */
+     if (lcp->identity == NULL) {
+       *stp = sec_login_s_handle_invalid;
+       return;
+     }
+
      if (lcp->identity->policy.identity_exp < now)
      {
        update_identity_exp(lcp, stp);


Also, while I think the above two fixes are necessary (they do make the test
to stay much longer than 30 minutes), I think the root of the
problem is in function sec_login_pvt_free_login_context() in sec_login_pvt.c
where the code reads as follows:

    if (lcp != NULL) {
        free_identity(&lcp->identity);
        free_krb_info(&lcp->krb_info);
        if (lcp->context_name)
            free(lcp->context_name);
        if (lcp->namecache_name)
            free(lcp->namecache_name);
        if (lcp->namecache)
            sec__id_free_cache(lcp);

sec__id_free_cache() is called after the calls of free_identity() and
free_krb_info(). Those two calls make identity field and krb_info->cache
field NULL, which were the causes of the core dump that we saw. So really,
we want to call sec__id_free_cache() first, then free_identity(), then
free_krb_info, then freeing lcp->context_name and lcp->namecache_name.

Alternatively, we can bypass the side-effect of calling sec__id_free_cache()
by freeing the namecache directly:

	if (lcp->namecache) {
	  cacheentry_p_t cp, next;

	  for (cp = lcp->namecache; cp != NULL; cp = next) {
	    next = cp->next;
	    free(cp);
	  }
	}

[10/31/95 public]
I changed the short description field to better describe this OT.

[11/13/95 public]
The following patches are submitted to 11maint for 13001, 13002 (12791)"


*** /project/dce/build/dce1.1-maint/src/security/client/login/sec_login_pvt.c	Fri Nov  3 10:45:18 1995
--- sec_login_pvt.c	Fri Nov  3 14:07:33 1995
***************
*** 1225,1238 ****
  {
      assert (lcp->refcount == 0);
      if (lcp != NULL) {
          free_identity(&lcp->identity);
          free_krb_info(&lcp->krb_info);
          if (lcp->context_name)
              free(lcp->context_name);
          if (lcp->namecache_name)
              free(lcp->namecache_name);
-         if (lcp->namecache)
-             sec__id_free_cache(lcp);
  	
  	/* v1.1 info */
  	sec_encode_v1_1_lc_info_free(free, &lcp->v1_1_info);
--- 1225,1239 ----
  {
      assert (lcp->refcount == 0);
      if (lcp != NULL) {
+         /* fix OT 13002 */
+         if (lcp->namecache)
+             sec__id_free_cache(lcp);
          free_identity(&lcp->identity);
          free_krb_info(&lcp->krb_info);
          if (lcp->context_name)
              free(lcp->context_name);
          if (lcp->namecache_name)
              free(lcp->namecache_name);
  	
  	/* v1.1 info */
  	sec_encode_v1_1_lc_info_free(free, &lcp->v1_1_info);
***************
*** 1818,1823 ****
--- 1819,1830 ----
      if (varying) *varying = NULL;
      if (varying2) *varying2 = NULL;
  
+     /* fix for 13001, 13002 */
+     if (KRB_INFO(lcp).cache == NULL) {
+       *stp = sec_login_s_no_current_context;
+       return;
+     }
+ 
      dfd = open(DATAFILE_NAME(datafile, KRB_INFO(lcp).cache), O_RDONLY, 0);
      free(datafile);
      if (dfd < 0) {
***************
*** 4883,4888 ****
--- 4890,4901 ----
      char *cachename;
      int ret;
  
+     /* fix OT 13002 */
+     if (lcp->krb_info.cache == NULL) {
+       *stp = sec_login_s_handle_invalid;
+       return;
+     }
+ 
      cachename = krb5_cc_get_name (lcp->krb_info.cache);
      ret = stat (cachename, &stbuf);
      if (ret < 0)
***************
*** 4949,4954 ****
--- 4962,4973 ----
      time (&now);
      CLEAR_STATUS(stp);
  
+     /* OT 13002 fix. */
+     if (lcp->identity == NULL) {
+       *stp = sec_login_s_handle_invalid;
+       return;
+     }
+ 
      if (lcp->identity->policy.identity_exp < now)
      {
  	update_identity_exp(lcp, stp);

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12980
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Argument type mismatch
Reported Date                 : 7/28/95
Found in Baseline             : 1.1
Found Date                    : 7/28/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : security/server/rs/rs_ns.c
Sensitivity                   : public

[7/28/95 public]

Customer reported:

Call to GOOD_STATUS in rs_ns_chk_master_change() was being
passed &status, which should be just status.

./security/server/rs/rs_ns.c
Comparing revision 2.1.3.1 with the file in your sandbox.
*** 2.1.3.1     1995/07/21 19:56:32
--- /dce/rcs/#odexm002510/rs_ns.c       1995/07/21 20:16:46
***************
*** 1008,1014 ****
        rs_ns_group_add_member(rs_ns_sec_group_name_v1,
                               &rs_state.cell_sec_id, rs_ns_server_name, 
                               status);
!       if (GOOD_STATUS(&status)) {
            server_registered = true;
        } else {
            *sleep_time = rs_ns_c_short_sleep_time;
--- 1008,1014 ----
        rs_ns_group_add_member(rs_ns_sec_group_name_v1,
                               &rs_state.cell_sec_id, rs_ns_server_name, 
                               status);
!       if (GOOD_STATUS(status)) {
            server_registered = true;
        } else {
            *sleep_time = rs_ns_c_short_sleep_time;
***************
*** 1017,1023 ****
        rs_ns_group_delete_member(rs_ns_sec_group_name_v1,
                                  rs_ns_server_name, 
                                  status);
!       if (GOOD_STATUS(&status)) {
            server_registered = false;
        }
        else {
--- 1017,1023 ----
        rs_ns_group_delete_member(rs_ns_sec_group_name_v1,
                                  rs_ns_server_name, 
                                  status);
!       if (GOOD_STATUS(status)) {
            server_registered = false;
        }
        else {

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12977
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : Missing free in sec_login_pvt_get_login_info()
Reported Date                 : 7/26/95
Found in Baseline             : 1.1wp
Found Date                    : 7/26/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[7/26/95 public]
In sec_login_pvt_get_login_info(), three temporary pointers related to epac 
are not being freed.
1) u_dynstrcpy(&epac_data.pa.principal.name, lcp->principal);
2) u_dynstrcpy(&epac_data.pa.realm.name, lcp->cell);
3) sec_id_epac_data_encode((void *(*)(unsigned32))malloc, free, &epac_data,
	&epac.pickled_epac_data.num_bytes, &epac.pickled_epac_data.bytes)

# ---------------------------------------------------------------
# * Revision /main/DCE1_1_WP/3  1995/05/05  18:24 UTC  jrr
# ---------------------------------------------------------------
*** 3732,3741 ****
--- 3732,3745 ----
              default:
                  lcp->identity->state = info_unauth;
                  break;
          }
      }
+ 
+     free( epac.pickled_epac_data.bytes );
+     free( epac_data.pa.principal.name );
+     free( epac_data.pa.realm.name );
  }
  
  
  /*
   *

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12974
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : memory leak in sec_krb_get_cred()
Reported Date                 : 7/25/95
Found in Baseline             : 1.1wp
Found Date                    : 7/25/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/utils/sec_authn.c
Sensitivity                   : public

[7/25/95 public]

Memory allocated via sec_dce_pair_from_krb_princ() was not being free'd.
**************************************************************
*** security/utils/sec_authn.c				   ***
*** Revision /main/DCE1_1_WP/1  1995/04/21  22:22 UTC  rps ***
**************************************************************
*** 524,530 ****
      krb5_ccache         krb_ccache;
      sec_login_handle_t  identity = (sec_login_handle_t) ccache;
      error_status_t st;
!     char  *server_cell;
      
      client_name = NULL;
      *cred = NULL;
--- 524,530 ----
      krb5_ccache         krb_ccache;
      sec_login_handle_t  identity = (sec_login_handle_t) ccache;
      error_status_t st;
!     char  *server_cell = NULL;
      
      client_name = NULL;
      *cred = NULL;
***************
*** 614,619 ****
--- 614,621 ----
          if (st == KRB5KRB_AP_ERR_TKT_EXPIRED) {
              st = rpc_s_auth_tkt_expired;
          }           
+         if (server_cell != NULL)
+           free(server_cell);
          return st;
      }
        
***************
*** 642,647 ****
--- 644,651 ----
          UNLOCK_IDENTITY();
      }
  
+     if (server_cell != NULL)
+       free(server_cell);
      return rpc_s_ok;
  }

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12954
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd/rs
Short Description             : uninitialized
rs_ns_calc_sleep_time will not let secd sleep
Reported Date                 : 7/17/95
Found in Baseline             : 1.1wp
Found Date                    : 7/17/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : security/server/rs/rs_ns.c
Sensitivity                   : public

[7/17/95 public]

rs_ns_calc_sleep_time uninitialized var makes secd run
continuously

Here is the ticket.  Includes fix.

> 
>  DESCRIPTION: The new code in the Warranty Patch includes a nasty
>  surprise.  In the rs_ns_calc_sleep_time() procedure, the variable
>  namespace_sleep_time is not initialized, and it is not set if the
>  ns_op_status variable is 0 (the normal case).  This results in
>  returning a random value for the sleep_time.  In our case, this value
>  was usually zero, which meant that the rs_ns_server_register thread
>  never slept; instead, it continuously communicated with cdsd.
>  
>  REPRODUCIBLE: Yes
>  
>  
>  TEST SOFTWARE DESCRIPTION: Just had to start up DCE.
>  
> Related-file::Added 950525 by wright::
> /build/hiosfm/RCS/dce1.1/src/security/server/rs/./rs_ns.c,v 8.4
>  /build/hiosfm/RCS/dce1.1/src/security/server/rs/./rs_ns.c,v 8.4
>  wright 1995/05/25 18:28:53 +11 -4
>  Reason:  OSDqa11656 rs_ns_calc_sleep_time uninitialized var makes secd run
> continuously
>  Initialize the offending variable.
>  
>      *** /tmp/ci.6218..rs_ns.c.6252.1	Thu May 25 14:28:56 1995
>      --- /tmp/rs_ns.c.6252.2	Thu May 25 14:28:56 1995
>      ***************
>      *** 18,27 ****
>      --- 18,31 ----
>         * src directory for the full copyright text.
>         */
>        /*
>         * HISTORY 
>         * $Log:	c012954,v $
# Revision 1.4  96/01/24  16:27:27  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.3  95/12/13  13:48:08  root
# changed fields: Status  Fixed In Baseline  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.2  95/07/21  11:15:04  root
# changed fields: Fixed In Baseline  Affected File(s)   new/changed/deleted note(s) [parul 7/21/95 public]
# 
# Revision 1.1  95/07/17  00:29:19  root
# new CR
# 
>      +  * Revision 8.4  1995/05/25  18:28:53  wright
>      +  * Reason:  OSDqa11656 rs_ns_calc_sleep_time uninitialized var makes
> secd run continuously
>      +  * Initialize the offending variable.
>      +  *
>         * Revision 8.3  1995/05/18  18:03:23  wright
>         * Warranty patch merge.
>         *
>         * Revision /main/DCE1_1_WP/1  1995/04/26  19:47 UTC  jrr
>         * 	SEC migration Warranty Patch merge.
>      ***************
>      *** 966,976 ****
>      --- 970,984 ----
>             error_status_t  ns_op_status, /* [in] */
>             signed32        *sleep_time   /* [in, out] */
>          )
>        {
>            static   namespace_retries = 0;
>      + #ifdef hitm
>      +     signed32 namespace_sleep_time = rs_ns_c_long_sleep_time;
>      + #else
>            signed32 namespace_sleep_time;
>      + #endif
>        
>            if (BAD_STATUS(&ns_op_status)) {
>        	if (namespace_retries < 3) {
>        	    namespace_sleep_time = rs_ns_c_short_sleep_time;
>        	} else {
>      ***************
>      *** 981,991 ****
>        	namespace_retries = 0;
>            }
>            /*
>             * Caller can override default namespace sleep
>             * calculation by passing in a smaller interval
>      !      * than what gets caclulated.
>             */
>            *sleep_time = MIN(*sleep_time, namespace_sleep_time);
>        }
>        
>        /*
>      --- 989,999 ----
>        	namespace_retries = 0;
>            }
>            /*
>             * Caller can override default namespace sleep
>             * calculation by passing in a smaller interval
>      !      * than what gets calculated.
>             */
>            *sleep_time = MIN(*sleep_time, namespace_sleep_time);
>        }
>        
>        /*
>  
> Related-file:::: Resolution 
>  DESCRIPTION OF BUG FIX: Set the initial value of namespace_sleep_time
>  to be rs_ns_c_long_sleep_time.
>

[7/21/95 public]
Submitted the following to 1.1-maint:

*** /project/dce/build/dce1.1-maint/src/security/server/rs/rs_ns.c      Mon Jun  5 17:45:26 1995
--- rs_ns.c     Tue Jul 18 10:57:38 1995
***************
*** 954,966 ****
    )
  {
      static   namespace_retries = 0;
!     signed32 namespace_sleep_time;
  
      if (BAD_STATUS(&ns_op_status)) {
        if (namespace_retries < 3) {
            namespace_sleep_time = rs_ns_c_short_sleep_time;
-       } else {
-           namespace_sleep_time = rs_ns_c_long_sleep_time;
        }
        namespace_retries++;
      } else {
--- 954,964 ----
    )
  {
      static   namespace_retries = 0;
!     signed32 namespace_sleep_time = rs_ns_c_long_sleep_time;
  
      if (BAD_STATUS(&ns_op_status)) {
        if (namespace_retries < 3) {
            namespace_sleep_time = rs_ns_c_short_sleep_time;
        }
        namespace_retries++;
      } else {
***************
*** 969,975 ****
      /*
       * Caller can override default namespace sleep
       * calculation by passing in a smaller interval
!      * than what gets caclulated.
       */
      *sleep_time = MIN(*sleep_time, namespace_sleep_time);
  }
--- 967,973 ----
      /*
       * Caller can override default namespace sleep
       * calculation by passing in a smaller interval
!      * than what gets calculated.
       */
      *sleep_time = MIN(*sleep_time, namespace_sleep_time);
  }

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12951
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dfsbind/authhelper.c
Short Description             : OT9616 fix lost in merge error
Reported Date                 : 7/13/95
Found in Baseline             : 1.1
Found Date                    : 7/13/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/helper/auth_helper.c
Sensitivity                   : public

[7/13/95 public]

The fix for OT9616 was accidentally deleted by a bad merge early in
the 1.1 timeframe. The comments for the fix were:

 *      Fix for ot 9616 - memory leak.  libauth helper caches inefficiently
 *      in the case where a user is communicating with more than one server.
 *      In this case libauthelper will invalidate valid cache entries causing
 *      sec_login_import context to be called more often than it needs to.
 *
 *      This is because   find_context_cache looks in the cache for
 *      a pag which matches the user's pag.  It checks  only for matching pag,
 *      valid=true, and discard=0.
 *
 *      However, cred_from_cred_rep requires that the
 *      server and the authz, authn fields match as
 *      well.  But find_context_cache may have returned
 *      an entry with a matching pag, but for a different
 *      server.  So in this case cred_from_cred_rep
 *      will discard the (valid) entry (thus flushing it from
 *      the cache because it considers it invalid)
 *      because the server does not match and try again.
 *      [1993/12/22  18:48:09  delgado]

This fix was in the 9th revision of the DCE 1.1 mainline but 
not the 10th. Here are the diffs of what was removed (line numbers
will not be accurate):

***************
*** 311,318 ****
   * Search for an entry in the context cache.  If an entry is found, 
   * it is returned with it's refcount incremented.
   */
! static int find_context_cache(pag)
      unsigned32 pag;
  {
      int i;
  
--- 314,322 ----
   * Search for an entry in the context cache.  If an entry is found, 
   * it is returned with it's refcount incremented.
   */
! static int find_context_cache(pag, server)
      unsigned32 pag;
+     char *server;
  {
      int i;
  
***************
*** 320,325 ****
--- 324,330 ----
      tstamp++;
      for (i=0; i<CCSIZE; i++) {
          if ((context_cache[i].pag == pag) && 
+           (strcmp(context_cache[i].credrep.server_name, server) == 0) &&
            (context_cache[i].valid) &&
            (context_cache[i].discard == 0)) {
            if (context_cache[i].refcount < 0) {
***************
*** 473,481 ****
  }
  
  
! static int  get_context_from_pag (pag, euid, login_context, st)
      unsigned32 pag;
      unsigned32 euid;
      sec_login_handle_t *login_context;
      error_status_t *st;
  {
--- 480,489 ----
  }
  
  
! static int  get_context_from_pag (pag, euid, server, login_context, st)
      unsigned32 pag;
      unsigned32 euid;
+     char *server;
      sec_login_handle_t *login_context;
      error_status_t *st;
  {
***************
*** 482,488 ****
      int slot;
  
      *st = error_status_ok;
!     slot = find_context_cache(pag);
  
      if (slot >= 0) {
        *login_context = context_cache[slot].context;
--- 490,496 ----
      int slot;
  
      *st = error_status_ok;
!     slot = find_context_cache(pag, server);
  
      if (slot >= 0) {
        *login_context = context_cache[slot].context;
***************
*** 508,514 ****
                                login_context, st);
  
        if (*st == error_status_ok) {
!           slot = add_context_cache(pag, euid, login_context, &exists, st);
            if (*st == error_status_ok) {
                if (exists) {
                    /* 
--- 516,522 ----
                                login_context, st);
  
        if (*st == error_status_ok) {
!           slot = add_context_cache(pag, euid, server, login_context, &exists, st);
            if (*st == error_status_ok) {
                if (exists) {
                    /* 
***************
*** 643,649 ****
--- 651,664 ----
      sec_krb_cred_rep *ccredrep;
      
  retry:
+     /* this may get us a "valid" entry which matches the PAG
+      * were're looking for, however cred_from_cred_rep might
+      * consider the pag invalid because some of the other
+      * attributes don't match (such as server name) and thus
+      * recycle a valid cred.
+      */
      slot = get_context_from_pag (credrep->pag, credrep->euid,
+                                credrep->server_name,
                                 &context, &status);
      if (status)
          return status;

[7/13/95 public]
The 9th vs 10th version won't make any sense to anybody outside of HP.
Diane made the fix in version 1.1.15.2 of auth_helper.c and they were lost
by a merge HP did that wrote over the fixes with version 1.1.15.3.

[12/13/95 public]
Fixed in DCE1.2.1
Closed



CR Number                     : 12946
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dce_login
Short Description             : "dce_login -r" problems
Reported Date                 : 7/7/95
Found in Baseline             : 1.1wp
Found Date                    : 7/7/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : security/client/dce_login/dce_login.c
Sensitivity                   : public

[7/7/95 public]
There's a couple of problems with the new dce_login -r functionality that
showed up in DCE1.1WP (The DCE1.1 Wellness Program, according to GregC :-)

On or about line 404, depending on your source, of dce_login.c there's a
sec_login_set_context() which should only happen "if (!rflag)" (otherwise
you wind up with extra creds files that you didn't need to create).

On or about line 419, depending on your source, of dce_login.c there's a
sec_login_purge_context() which should only happen "if (!rflag)" (otherwise
your existing creds are completely blown away on a failed refresh call
to sec_login_validate_identity()).

The fixes for this will show up in 1.2, but they're simple enough that
others should add them to their 1.1 source base now.

[8/14/95 public]
One more bug for which HP provided the fix was 'dce_login -r' was creating
yet another shell. Here is the fix submitted to 1.1 maint:

*** /project/dce/build/dce1.1-maint/src/security/client/dce_login/dce_login.c	Mon Jun  5 17:39:51 1995
--- dce_login.c	Mon Aug 14 10:45:04 1995
***************
*** 405,415 ****
              if (auth_src == sec_login_auth_src_overridden) {
                  fprintf(stderr, "Validated from local override entry, no network credentials obtained.\n");
              } else {
!                 sec_login_set_context(lcontext, &st);
!                 if (st) {
!                     dce_error_inq_text(st, err_string, &lst);
!                     printf("Unable to set context: %s\n", err_string);
!                     exit(6);
                  }
              }
          } else {
--- 405,417 ----
              if (auth_src == sec_login_auth_src_overridden) {
                  fprintf(stderr, "Validated from local override entry, no network credentials obtained.\n");
              } else {
!                 if (!rflag) {
!                    sec_login_set_context(lcontext, &st);
!                    if (st) {
!                        dce_error_inq_text(st, err_string, &lst);
!                        printf("Unable to set context: %s\n", err_string);
!                        exit(6);
!                    }
                  }
              }
          } else {
***************
*** 420,426 ****
              } else {
                 printf("\n");
              }
! 	    sec_login_purge_context(&lcontext, &st);
              exit(7);
          }
      } else {
--- 422,429 ----
              } else {
                 printf("\n");
              }
!             if (!rflag)
! 	       sec_login_purge_context(&lcontext, &st);
              exit(7);
          }
      } else {
***************
*** 443,448 ****
--- 446,454 ----
           */
          printf("%s\n", getenv("KRB5CCNAME"));
          exit(0);
+     } else if (rflag) {
+ 	/* If we are doing a refresh, we're done. */
+ 	exit (0);
      } else {
          /*
           * The following warning message should be printed only when dce_login

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12930
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : "expired ticket" regression
Reported Date                 : 6/22/95
Found in Baseline             : 1.1wp
Found Date                    : 6/22/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : security/krb5/lib/krb/gc_frm_kdc.c
Sensitivity                   : public

[6/22/95 public]
When users' local creds expire the message is the obscure "Matching
credential not found" rather than "Authentication ticket expired"
as in the past.

***************
*** 307,320 ****
                                       matchflags,
                                         &tgtq,
                                         &tgt)) {
  #else
      if (retval = krb5_cc_retrieve_cred(ccache,
                                         KRB5_TC_MATCH_SRV_NAMEONLY,
                                         &tgtq,
                                         &tgt)) {
- #endif
        goto cleanup;
      }
    
      /* get a list of realms to consult */
    
--- 307,333 ----
                                       matchflags,
                                         &tgtq,
                                         &tgt)) {
+ 
+       if (retval == KRB5_CC_NOTFOUND) {
+           /* there's no current local TGT.  see if there's an expired one */
+           retval = krb5_cc_retrieve_cred(ccache,
+                                          expmatchflags,
+                                          &tgtq,
+                                          &tgt);
+           if (!retval) {
+               retval = KRB5KRB_AP_ERR_TKT_EXPIRED;
+           }
+       }
+       goto cleanup;
+     }
  #else
      if (retval = krb5_cc_retrieve_cred(ccache,
                                         KRB5_TC_MATCH_SRV_NAMEONLY,
                                         &tgtq,
                                         &tgt)) {
        goto cleanup;
      }
+ #endif 
    
      /* get a list of realms to consult */

[8/3/95 public]

I was trying to get this fix into maintenance code but realized that I
can't find proper place. The first line references to 'matchflags' that
does not exist in OSF's version of code. Its rather:

@line 258:
                                       KRB5_TC_MATCH_SRV_NAMEONLY
                                       | KRB5_TC_MATCH_TIMES,
                                       &tgtq,
                                       &tgt)) {
        goto cleanup;
    }

So the question is what are other changes that went into HP's code base.
Is 'matchflags' same as 'KRB5_TC_MATCH_SRV_NAMEONLY | KRB5_TC_MATCH_TIMES'?

[9/7/95 public]

Sorry, use this instead.  Hope the sources sync up someday...

*** 257,258 ****
--- 257,266 ----
                                         &tgt)) {
+       if (retval = krb5_cc_retrieve_cred(ccache,
+                                          KRB5_TC_MATCH_SRV_NAMEONLY,
+                                          &tgtq,
+                                          &tgt)) {
+           if (!retval) {
+               retval = KRB5KRB_AP_ERR_TXT_EXPIRED;
+           }
+       }
        goto cleanup;

[10/2/95 public]
Fix submitted to 1.1-maint code

[11/2/95]

Viewed in the context of the surrounding implementation, and assuming
krb5_cc_retrieve_cred returns KRB5_OK=0 on success, the proposed
fix seems suspect for the following reason

   if (retval = krb5_cc_retrieve_cred(ccache,
   	                              KRB5_TC_MATCH_SRV_NAMEONLY,
                                      &tgtq,
                                      &tgt)) {
	if (!retval) {
            retval = KRB5KRB_AP_ERR_TKT_EXPIRED;
        }
   }

   how can (!retval) ever evaluate to true given that
   this block would only be entered if (retval) evaluated to true.

We are having the following problem with our maintenance build, and
are guessing that the fix reported in this OT is the cause. The problem
takes about 2 hours to show up (in an idle single machine cell). WE are
running tests to confirm our suspicion. The issue listed above 
should be addressed whether or not it turns out to be the cause of the
observed problem.

1995-10-19-13:42:37.876-04:00I----- cdsclerk(19748) ERROR cds general
clerk_bind.c 627 0x2039
1ed8 Routine sec_rgy_pgo_is_member(3sec) failed : status = 382312471.
1995-10-19-13:58:45.839-04:00I----- cdsd(26403) ERROR cds general
unix_cds_net.c 1099 0x200aa
4f0 Routine rpc_ep_unregister(3rpc) failed: status = 382312470.
1995-10-19-16:41:00.282-04:00I----- cdsclerk(22407) ERROR cds general
clerk_bind.c 627 0x204c
79c8 Routine sec_rgy_pgo_is_member(3sec) failed : status = 382312514.
1995-10-19-16:42:35.207-04:00I----- dtsd ERROR dts dtserror transport_rpc.c
1953 0x200aa4f0 F
ailed to determine if server is in security group: Connection request
rejected (dce / rpc)
1995-10-19-16:42:56.783-04:00I----- cdsclerk(22407) ERROR cds general
clerk_bind.c 627 0x204c
79c8 Routine sec_rgy_pgo_is_member(3sec) failed : status = 382312470.
1995-10-19-16:44:27.329-04:00I----- cdsclerk(22407) ERROR cds general
clerk_bind.c 627 0x204c
79c8 Routine sec_rgy_pgo_is_member(3sec) failed : status = 382312514.
1995-10-19-16:46:40.983-04:00I----- cdsclerk(22407) ERROR cds general
clerk_bind.c 627 0x204c
79c8 Routine sec_rgy_pgo_is_member(3sec) failed : status = 382312470.
1995-10-19-19:26:14.292-04:00I----- dtsd ERROR dts dtserror transport_rpc.c
1953 0x200aa4f0 F
ailed to determine if server is in security group: Who are you failed (dce
/ rpc)
1995-10-19-19:28:36.234-04:00I----- dtsd ERROR dts dtserror
dtss_service_global_set.c 692 0x2
00aa4f0 Failed to retrieve server binding from the namespace: RPC daemon
communications failure (dce / rpc)

etc.

based on the objection listed above, we propose the following 
replacement fix (note that this is basically what was initially proposed
when this OT was created).

#ifdef OSF_DCE
    if (retval = krb5_cc_retrieve_cred(ccache,
				       KRB5_TC_MATCH_SRV_NAMEONLY
				       | KRB5_TC_MATCH_TIMES,
                                       &tgtq,
                                       &tgt)) {

        retval = krb5_cc_retrieve_cred(ccache,
				       KRB5_TC_MATCH_SRV_NAMEONLY,
				       &tgtq,
				       &tgt);

	if (!retval) retval = KRB5KRB_AP_ERR_TKT_EXPIRED;

	goto cleanup;
    }
#else

[11/2/92]

changed KRB5KRB_AP_ERR_TXT_EXPIRED to KRB5KRB_AP_ERR_TKT_EXPIRED in
proposed solution

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12925
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12924
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd core dumps on aix secd/cdsd server
Reported Date                 : 06/20/1995
Found in Baseline             : 1.1
Found Date                    : 06/15/1995
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[6/21/95 public]
During system test continuous hours of operation (CHO) the 
secd on the aix secd/cdsd servers dumps core.  This core dump 
occurs about an hour before a core dump of dced on the 
same system, OT 12924.  

dbx on the core file finds "abort process in raise". 

At the time of the core dump tests are only running on the 
AIX node, because the other nodes are waiting for tests on 
the server to complete before beginning another iteration 
of tests.  

This problem is not seen on an HP-UX secd server but has 
been reliably repeated on the AIX secd server.


[1:11pm, 7/11/95]

Are you all running in a pure OSF DCE 1.1 Gold + unintegrated + Warranty Patch 
environment?  If so, we can try to repro the problems here.  If you are
running with some sort of augmented code, do you think we need that to
reproduce the problems?  Also, what thread draft level are you running
on HPUX?  

We are running some tests on pure osf code and are seeing some
core dumps but not exactly what you seem to be seeing.  We are 
investigating (but not in haste) the problems we are seeing.

Gerry

[12/22/95 public]
Fixed in DCE 1.2.1
Closed

[12/22/95 public]

It may be necessary to keep the environment variable MALLOCTYPE=3.1 set 
in the root environment before the DCE daemons are started on the AIX systems.
 This is because the default malloc on the AIX does not include checking and 
will allow freeing of unmalloced memory.



CR Number                     : 12918
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : client rca
Short Description             : multiple frees on malloc'ed block
Reported Date                 : 6/15/95
Found in Baseline             : 1.1
Found Date                    : 6/15/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[6/15/95 public]

As from the ticket:
> 
> Full Description:
> 
>         sec_rgy_triggers() free()s the same memory multiple times.
> 
>         The code reads:
> - - - - - - - - - - - -
> 
>     processed = malloc(num_attr_keys * sizeof(unsigned32));
>     memset(processed, FALSE, num_attr_keys * sizeof(unsigned32));
> 
>     /*
>      * Walk down the list of attributes
>      */
>     for (i=0; i < *num_attrs; i++) {
>         sec_attr_p = &attrs[i];
>         if (SA_ATTR_ENCODING(sec_attr_p) == sec_attr_enc_trig_binding) {
>         .
>         .
>         .
>         }
>         free (processed);
>     }
> - - - - - - - - - - - -
> 
> The "free (processed)" needs to be outside the for loop.
> 
> 
> Repeat By:
> 
> dcecp> xattrschema create /.:/sec/xattrschema/bckp_dest \
> >  -encoding printstring \
> >  -aclmgr {principal r r r r} 
> dcecp> principal modify dce-rgy -add {bckp_dest /tmp/tmptar}
>   ... repeat the above command a couple three times ...
> 
> 
> Proposed Solution:
> 
> The "free (processed)" needs to be outside the for loop.


Tried on OSF1 386.  After a few times secd dumps core.

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12915
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : security hole w/ aliasing cell_admin
Reported Date                 : 6/15/95
Found in Baseline             : 1.0.3
Found Date                    : 6/15/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : security/ (listed below)
Sensitivity                   : public

[6/15/95 public]


Message-Id: <ojq_vVWSMUcu4Alv9m@transarc.com>
Date: Fri,  9 Jun 1995 16:28:17 -0400 (EDT)
 From: Phil_Hirsch@transarc.com
 To: dce-tech@osf.org
Subject: aliasing cell_admin


One of our customers has apparently found a security flaw related to
aliases in the security registry. The claim is that if I have enough
privilege to create an account, then I can obtain all privileges associated
with user:cell_admin (or any other user: entry) on any ACL.

The trick is simply to create an alias for cell_admin, which can be done
fairly easily. In our support cell at Transarc, for example, there are
directories like /.:/sec/principal/usr/foo, where foo is the username of
someone in our group. Now, if I have permission to create principals in
that directory, I can create usr/foo/bar to be an alias of cell_admin. If
I can create an account for that principal and I authenticate as
usr/foo/bar, my UUID is that of cell_admin, so I match user:cell_admin on
any ACL where there is such an entry. And there are a lot of user:cell_admin
ACL entries, since CDS and Security apparently give user:<creator> all
permissions on each object that they create, and the DCE configuration
script typically runs as cell_admin.

usr/foo/bar is not exactly cell_admin -- the group list is different from
that of cell_admin, so usr/foo/bar doesn't get power over objects where
cell_admin's authority comes from an ACL entry like
group:subsys/dce/cds-admin, only those where the authority comes from a
user:cell_admin entry. Still, if I have enough permission to create a single
principal and account, I can hijack lots of DCE objects.

Now, as far as I know, most customers today only allow cell_admin to create
accounts so there may not be much real exposure, but still...

Comments?

[7/14/95 public]
 ./h/rs_util.h                          (signature change for rs_util_pgo_add())
 ./h/rsdb_pgo.h                         (signature change for rsdb_pgo_add())
 ./server/rs/rs_auth.c                  (signature change for rs_util_pgo_add())
 ./server/rs/rs_dacl.c                  (add rs_rdacl_prop_acl())
 ./server/rs/rs_log_pgo.c               (signature change for rs_util_pgo_add())
 ./server/rs/rs_pgo.c       (prop acl & signature change for rs_util_pgo_add())
 ./server/rs/rs_prop_pgo.c              (signature change for rs_util_pgo_add())
 ./server/rs/rs_reserved.c              (signature change for rsdb_pgo_add())
 ./server/rs/rs_util.c                  (signature change for rs_util_pgo_add())
                        (& removed bogus errcodes from rs_util_status_is_denial)
 ./server/rsdb/rsdb_pgo.c          (fix bug in rsdb_pgo_add, & change signature)
 ./server/sec_salvage_db/sec_svg_rec.c  (signature change for rsdb_pgo_add())

Since this is such a hot issue, it's being fixed now instead of waiting for
1.2.

The OSF has the fixed files from the above list and will be sending out info
on how OSFDCE1.1 source licensees may obtain the fixes.  We recommend that
no vendor ship a DCE1.1 based product without integrating and testing these
fixes, but they do include support for talking to 1.1 replicas that may not
have the fix yet.  There will be no separate set of fixes for 1.0.3, it's up
to each vendor to decide whether to back merge these changes into their 1.0.3
products.

[7/27/95 public]
Here is more info from HP:

The tar of the fix is located in:
	/afs/dce.osf.org/project/dce/hp/alias_acl_fix.tar.Z

These source files were based on 1.1unintegrated + any WP changes, so you
will only be able to build them against 1.1unint+WP.

BUG:
Alias creation incorrectly adds creator entry to ACL, leading to weaker
security than desired by admins that try to split up their cell into
sub-areas that junior admins are allowed to create accounts in (eg, a
junior admin could alias the cell_admin principal and then create an
account for it).

FIX:
(1) On PGO add, if PGO entry already exists, just use the ACL that's there,
do not add a creator entry to it.

(2) Because we can't guarantee that every replica or master will have this
fix, propagate the PGO's ACL if it aliases the ACL and would have had the
problem were the bug not fixed.

[8/17/95 public]

The alias bug fix provided by HP does not seem to be fixing the problem
correct way. Following is the log of my interaction. In summary, as cell_admin
I created a user admin with administrative rights (member of acct-admin and
subsys/dce/sec-admin). Then I dce_login'ed as admin and created a principal
called user and account for it. Then I tried to create an alias to admin
called fake and tried to create an account for it. The account creation failed.
Why does it fail?

Begin log:-------------------------------------------------

[tinker]:/tmp_mnt/homes/parul/parul> dce_login cell_admin -dce-
Password must be changed!
Sourcing regular environment
[tinker]:/tmp_mnt/homes/parul/parul> dcecp
dcecp> pri create admin
dcecp> gro add acct-admin -member admin
dcecp> gro add subsys/dce/sec-admin -member admin
dcecp> gro add none -member admin
dcecp> org add none -member admin
dcecp> acc cre admin -myp -dce- -pass -admin- -gro acct-admin -gro subsys/dce/sec-admin -gro none -org none
dcecp> acc show admin -all
{acctvalid yes}
{client yes}
{created /.../tinker_cell.osf.org/cell_admin 1995-08-17-15:09:14.000-04:00I-----}
{description {}}
{dupkey no}
{expdate none}
{forwardabletkt yes}
{goodsince 1995-08-17-15:09:14.000-04:00I-----}
{group none}
{home /}
{lastchange /.../tinker_cell.osf.org/cell_admin 1995-08-17-15:09:14.000-04:00I-----}
{organization none}
{postdatedtkt no}
{proxiabletkt no}
{pwdvalid yes}
{renewabletkt yes}
{server yes}
{shell {}}
{stdtgtauth yes}
nopolicy
dcecp> quit
[tinker]:/tmp_mnt/homes/parul/parul> exit
[tinker]:/tmp_mnt/homes/parul/parul> [tinker]:/tmp_mnt/homes/parul/parul> 
[tinker]:/tmp_mnt/homes/parul/parul> dce_login admin -admin-
Sourcing regular environment
[tinker]:/tmp_mnt/homes/parul/parul> dcecp
dcecp> principal create user
dcecp> group add none -member user
dcecp> org add none -member user
dcecp> account cre user -mypwd -admin- -pass -user- -group none -org none
dcecp> principal show admin -all
{fullname {}}
{uid 12523}
{uuid 000030eb-d8c8-21ce-8f00-02608c2f8add}
{alias no}
{quota unlimited}
{groups acct-admin subsys/dce/sec-admin none}
dcecp> principal create fake -uid 12523 -quota 0 -alias yes
dcecp> group add none -member fake
dcecp> org add none -member fake
dcecp> account cre fake -mypwd -admin- -pass -fake- -group none -org none
Error: User is not authorized to update record
dcecp> acl show /.:/sec/principal/admin
{unauthenticated r-------g}
{user_obj r---f--ug}
{user cell_admin rcDnfmaug}
{group acct-admin rcDnfmaug}
{other_obj r-------g}
{any_other r--------}
dcecp> acl show /.:/sec/principal/cell_admin
{unauthenticated r--------}
{user_obj rcDnfmaug}
{user cell_admin rcDnfmaug}
{other_obj r-------g}
{any_other r--------}
dcecp> acl show /.:/sec/principal/fake
{unauthenticated r-------g}
{user_obj r---f--ug}
{user cell_admin rcDnfmaug}
{group acct-admin rcDnfmaug}
{other_obj r-------g}
{any_other r--------}
dcecp> acl show /.:/sec/group/acct-admin
{unauthenticated r-t-----}
{user cell_admin rctDnfmM}
{group_obj rctDnfmM}
{other_obj r-t-----}
{any_other r-t-----}
dcecp> quit
[tinker]:/tmp_mnt/homes/parul/parul> exit
--------------------END LOG---------------------------------------------------

[9/7/95 public]
I still haven't had time to get through the above example Parul gave, but
intend to as soon as I can get to it.  I'd like to clarify the description
though:  Assuming it's broken as Parul claims, a new problem has been created
by the fix, the original security hole however, is fixed.  The new problem 
seems to be that a new administrator cannot create an alias account for an
account that they have previously created themselves.

[9/7/95 public]
I think I figured it out (still haven't had time to try it, but finally had
time to read through the entire above transcript).  You tried to create an
alias to 'admin' as 'admin', not an alias to 'user' as 'admin'.  The admin
principal and account were created as 'cell_admin', so only cell_admin has
rights to create an alias for 'admin'.  The fix is working correctly.  You
should be able to create 'fake' as an alias account for 'user'.  The fix was
to prevent 'admin' from creating an alias account for any principal that
'cell_admin' had created.

[9/14/95 public]

Due to lack of time, I'm submitting early. This OT can be updated for any
changes at a later point. The fix works as tested in script listed below.

Files modified:	security/h/rs_util.h
		security/h/rsdb_pgo.h
		security/server/rsdb/rsdb_pgo.c
		security/server/sec_salvage_db/sec_svg_rec.c
		security/server/rs/rs_auth.c
		security/server/rs/rs_dacl.c
		security/server/rs/rs_log_pgo.c
		security/server/rs/rs_pgo.c
		security/server/rs/rs_prop_pgo.c
		security/server/rs/rs_reserved.c
		security/server/rs/rs_util.c

How tested:	dce_login cell_admin -dce-
		dcecp
		dcecp> pri create admin
		dcecp> gro add acct-admin -member admin
		dcecp> gro add subsys/dce/sec-admin -member admin
		dcecp> gro add none -member admin
		dcecp> org add none -member admin
		dcecp> acc cre admin -myp -dce- -pass -admin- -gro acct-admin -gro subsys/dce/sec-admin -gro none -org none
		dcecp> quit
		exit
		dce_login admin -admin-
		dcecp
		dcecp> principal create user
		dcecp> group add none -member user
		dcecp> org add none -member user
		dcecp> account cre user -mypwd -admin- -pass -user- -group none -org none
		dcecp> principal show user -all
		{fullname {}}
		{uid 12527}
		{uuid 000030ef-eea6-21ce-b600-02608c2f8b6f}
		{alias no}
		{quota unlimited}
		{groups none}
		dcecp>  principal create fake -uid 12527 -quota 0 -alias yes
		dcecp> group add none -member fake
		dcecp> org add none -member fake
		dcecp> account cre fake -mypwd -admin- -pass -fake- -group none -org none
		dcecp> quit
		dce_login fake -fake-
		klist

Platforms:	AIX 3.2.5

Tested against:	DCE 1.1 maintenance build

How to verify:	Follow steps above

Diff:		

*** /project/dce/build/dce1.1-maint/src/security/h/rs_util.h	Fri Jul 15 15:35:45 1994
--- security/h/rs_util.h	Fri Jul 28 14:51:45 1995
***************
*** 8,13 ****
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
+  * Revision /main/alias_acl_fix/1  1995/07/14  17:38 UTC  burati
+  * 	ALIAS ACL FIX
+  * 
   * Revision 1.1.6.4  1994/07/15  19:35:42  mdf
   * 	Hewlett Packard Security Code Drop
   * 	[1994/07/15  19:11:59  mdf]
***************
*** 63,74 ****
   * $EndLog$
   */
  /* 
!  * Copyright (c) Hewlett-Packard Company 1992
   * Unpublished work. All Rights Reserved.
   */
  /*
!  *      Registry Server - Utility functions
!  *
   */
  
  #ifndef rs_util__included
--- 66,76 ----
   * $EndLog$
   */
  /* 
!  * Copyright (c) Hewlett-Packard Company 1992, 1995
   * Unpublished work. All Rights Reserved.
   */
  /*
!  *      Registry Server - Utility function prototypes
   */
  
  #ifndef rs_util__included
***************
*** 360,372 ****
  );
  
  void rs_util_pgo_add (
- #ifdef __STDC__
      sec_rgy_domain_t        domain,     /* [in] */
      sec_rgy_name_t          pgo_name,   /* [in] */
      sec_rgy_pgo_item_t      *(item),    /* [in] */
      sec_rgy_foreign_id_t    *client_ids,/* [in] */
      error_status_t          *(status)
- #endif
  );
  
  void rs_util_pgo_delete (
--- 362,374 ----
  );
  
  void rs_util_pgo_add (
      sec_rgy_domain_t        domain,     /* [in] */
      sec_rgy_name_t          pgo_name,   /* [in] */
      sec_rgy_pgo_item_t      *(item),    /* [in] */
      sec_rgy_foreign_id_t    *client_ids,/* [in] */
+     boolean32               alias_fix,  /* [in] */
+     boolean32               *prop_acl_p,/* [out] */
      error_status_t          *(status)
  );
  
  void rs_util_pgo_delete (
 
*** /project/dce/build/dce1.1-maint/src/security/h/rsdb_pgo.h	Wed Dec 15 13:34:59 1993
--- security/h/rsdb_pgo.h	Fri Jul 28 14:54:08 1995
***************
*** 8,13 ****
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
+  * Revision /main/alias_acl_fix/1  1995/07/14  17:49 UTC  burati
+  * 	ALIAS ACL FIX
+  * 
   * Revision 1.1.39.1  1993/10/05  22:30:23  mccann
   * 	CR8651 64 bit porting changes
   * 	[1993/10/04  19:10:07  mccann]
***************
*** 29,40 ****
   * 
   * $EndLog$
   */
- /*
- */
  
! /*  rsdb_pgo.h V=12 10/18/91 //littl/prgy/src/server/rsdb
  **
! ** Copyright (c) Hewlett-Packard Company 1991
  ** Unpublished work. All Rights Reserved.
  **
  */
--- 32,41 ----
   * 
   * $EndLog$
   */
  
! /*  rsdb_pgo.h
  **
! ** Copyright (c) Hewlett-Packard Company 1991, 1995
  ** Unpublished work. All Rights Reserved.
  **
  */
***************
*** 55,62 ****
  #include <rsdb_pvt.h>
  
  /*
! * Prototypes - public routines
! */
  
  void rsdb_pgo_create(
  #ifdef __STDC__
--- 56,63 ----
  #include <rsdb_pvt.h>
  
  /*
!  * Prototypes - public routines
!  */
  
  void rsdb_pgo_create(
  #ifdef __STDC__
***************
*** 88,100 ****
  );
  
  void rsdb_pgo_add (
- #ifdef __STDC__
      sec_rgy_domain_t        domain,     /* [in] */
      sec_rgy_name_t          name,       /* [in] */
      sec_rgy_pgo_item_t      *(item),    /* [in] */
      sec_rgy_foreign_id_t    *client_ids,/* [in] */
      error_status_t          *(status)
- #endif
  );
  
  void rsdb_pgo_delete (
--- 89,101 ----
  );
  
  void rsdb_pgo_add (
      sec_rgy_domain_t        domain,     /* [in] */
      sec_rgy_name_t          name,       /* [in] */
      sec_rgy_pgo_item_t      *(item),    /* [in] */
      sec_rgy_foreign_id_t    *client_ids,/* [in] */
+     boolean32               alias_fix,  /* [in] */
+     boolean32               *prop_acl,  /* [out] */
      error_status_t          *(status)
  );
  
  void rsdb_pgo_delete (
 
*** /project/dce/build/dce1.1-maint/src/security/server/rsdb/rsdb_pgo.c	Mon Jun  5 17:46:43 1995
--- security/server/rsdb/rsdb_pgo.c	Fri Jul 28 14:55:57 1995
***************
*** 8,17 ****
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision 1.1.87.1  1995/06/05  22:00:19  csn
!  * 	Submit Warranty Patch
!  * 	[1995/06/05  20:33:27  csn]
!  *
   * Revision /main/DCE1_1_WP/2  1995/05/08  17:21 UTC  rps
   * 	migration: conditionally repress pgodir creation
   * 	[1995/05/08  16:46 UTC  rps  /main/DCE1_1_WP/rps_wp/1]
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision /main/DCE1_1_WP/alias_acl_fix/1  1995/07/14  17:57 UTC  burati
!  * 	ALIAS ACL FIX
!  * 
   * Revision /main/DCE1_1_WP/2  1995/05/08  17:21 UTC  rps
   * 	migration: conditionally repress pgodir creation
   * 	[1995/05/08  16:46 UTC  rps  /main/DCE1_1_WP/rps_wp/1]
***************
*** 25,35 ****
   * Revision /main/greg_sec_migrate_acls/1  1995/04/13  20:05 UTC  greg
   * 	Convert references tio the former #define rsdb_acl_permset_*
   * 	to calls to the new rsdb_acl_permset_*() function.
   * 
   * Revision 1.1.83.6  1994/08/08  14:23:47  mdf
   * 	Hewlett Packard Security Code Drop
   * 	[1994/08/04  19:24:14  mdf]
!  * 
   * Revision 1.1.85.7  94/05/26  15:43:08  mdf
   * 	hp_sec_to_osf_3 drop, fixed botched merge (again).
   * 
--- 24,35 ----
   * Revision /main/greg_sec_migrate_acls/1  1995/04/13  20:05 UTC  greg
   * 	Convert references tio the former #define rsdb_acl_permset_*
   * 	to calls to the new rsdb_acl_permset_*() function.
+  * 	
   * 
   * Revision 1.1.83.6  1994/08/08  14:23:47  mdf
   * 	Hewlett Packard Security Code Drop
   * 	[1994/08/04  19:24:14  mdf]
!  *
   * Revision 1.1.85.7  94/05/26  15:43:08  mdf
   * 	hp_sec_to_osf_3 drop, fixed botched merge (again).
   * 
***************
*** 99,107 ****
   * $EndLog$
   */
  
! /*  rsdb_pgo.c V=31 10/23/91 //littl/prgy/src/server/rsdb
  **
! ** Copyright (c) Hewlett-Packard Company 1991
  ** Unpublished work. All Rights Reserved.
  **
  */
--- 99,107 ----
   * $EndLog$
   */
  
! /*  rsdb_pgo.c
  **
! ** Copyright (c) Hewlett-Packard Company 1991, 1995
  ** Unpublished work. All Rights Reserved.
  **
  */
***************
*** 134,140 ****
  
  #include <rsdb_pgo.h>
  #include <rsdb_acl.h>
- /*UNIX #include <rsdb_unix.h> */
  #include <rsdb_policy.h>
  #include <rsdb_misc.h>
  #include <rsdb_attr.h>
--- 134,139 ----
***************
*** 223,238 ****
              }
          }
      }
- /*UNIX */
- #ifdef UNDEF
-     /*
-      *Delete the "nil" info that is associated with this pgo.
-      */
-     rsdb_unix_delete_info(domain, unix_id, pgo->body.threads.id, &st);
- #endif
- 
  }
  
  /*
   *  g e t _ p o l i c y _ d a t a
   */
--- 222,230 ----
              }
          }
      }
  }
  
+ 
  /*
   *  g e t _ p o l i c y _ d a t a
   */
***************
*** 610,615 ****
--- 602,612 ----
  
  /*
   *  r s d b _ p g o _ a d d
+  *  
+  *  alias_acl - whether caller wants ALIAS ACL fix behavior
+  *  *prop_acl - tell caller whether it should propagate the ACL for this
+  *              entry in case a replica doesn't have the ALIAS ACL fix
+  *              (this argument only used by rs_pgo_add()).
   */
  PUBLIC void rsdb_pgo_add
    (
***************
*** 617,623 ****
      sec_rgy_name_t          name,       /* [in] */
      sec_rgy_pgo_item_t      *(item),    /* [in] */
      sec_rgy_foreign_id_t    *client_ids,/* [in] */
!     error_status_t          *(status)
    )
  {
      rsdb_credentials_t  credentials;
--- 614,622 ----
      sec_rgy_name_t          name,       /* [in] */
      sec_rgy_pgo_item_t      *(item),    /* [in] */
      sec_rgy_foreign_id_t    *client_ids,/* [in] */
!     boolean32               alias_fix,  /* [in] */
!     boolean32               *prop_acl,  /* [out] */
!     error_status_t          *(status)   /* [out] */
    )
  {
      rsdb_credentials_t  credentials;
***************
*** 638,643 ****
--- 637,643 ----
  
      CLEAR_STATUS(status);
      name_len = strlen( (char *) name);
+     *prop_acl = true;                           /* Avoid old alias ACL bug */
  
      /*
       *   Return if a PGO item with the same name exists.
***************
*** 647,653 ****
          return;
      }
  
!     /*     
       * If it's already a dir node, convert it to aggregate form
       */
      if (rsdb_dir_util_get_by_name(domain, name, name_len, &dir)) {
--- 647,653 ----
          return;
      }
  
!     /*
       * If it's already a dir node, convert it to aggregate form
       */
      if (rsdb_dir_util_get_by_name(domain, name, name_len, &dir)) {
***************
*** 686,692 ****
              }
          }
      } else if (rsdb_get_credentials_by_unix_id(domain_info[domain].db,
!                                                 item->unix_num, &credentials)) {
          SET_STATUS(status, sec_rgy_object_exists);
          return;
      }
--- 686,692 ----
              }
          }
      } else if (rsdb_get_credentials_by_unix_id(domain_info[domain].db,
!                                             item->unix_num, &credentials)) {
          SET_STATUS(status, sec_rgy_object_exists);
          return;
      }
***************
*** 742,779 ****
          }
          rsdb_change_credentials(domain_info[domain].db, NULL_PTR, &item->id,
                               item->unix_num, pgo.body.threads.id, acl_id);
!     } else if (alias_id != END_OF_LIST) {
!         /*
!          * Adding a new primary name (current names are marked as aliases)
!          * so change the head of the credentials list.
!          */
!         rsdb_change_credentials(domain_info[domain].db, &credentials,
! 			&item->id, item->unix_num,
!                         pgo.body.threads.id, credentials.acl_id);
      } else {
-         /* Thread on end of alias chain */
-         rsdb_named_item_t alias_pgo;
  
!         rsdb_pgo_util_get_by_id(domain, credentials.id, &alias_pgo);
!         while (rsdb_pgo_util_get_next_alias(domain, &alias_pgo, &alias_pgo));
  
!         alias_pgo.body.threads.alias = pgo.body.threads.id;
!         rsdb_util_store_item_by_id(domain, alias_pgo.body.threads.id,
!                                    &alias_pgo);
!     }
!     /* Add an acl_entry to this PGO's acl giving the creator extra privileges */
!     /* Since PGO is already added, don't return bad status if this call fails */
!     add_creator_acl_entry(domain, name, client_ids, &tmp_status);
  
! /*UNIX */
! #ifdef UNDEF
!     /*
!      *Create a "nil" entry in the unix file.
!      */
!     rsdb_unix_gen_nil_info(domain, item, pgo.body.threads.id);
! #endif
  }
  
  /*
   *  r s d b _ p g o _ d e l e t e
   */
--- 742,790 ----
          }
          rsdb_change_credentials(domain_info[domain].db, NULL_PTR, &item->id,
                               item->unix_num, pgo.body.threads.id, acl_id);
! 
!         /* Add an acl_entry to this PGO's acl giving the creator extra
! 	 * privileges.  Since PGO is already added, don't return bad status
! 	 * if this call fails
! 	 */
!         add_creator_acl_entry(domain, name, client_ids, &tmp_status);
!         *prop_acl = false;
! 
      } else {
  
!         /* Only if we're supporting backwards compatibility with the alias
!          * ACL bug do we want to do the following:
!          * 
!          * Add an acl_entry to this PGO's acl giving the creator extra
!          * privileges.  Since PGO is already added, don't return bad status
!          * if this call fails
!          */
!         if (! alias_fix) {
!             add_creator_acl_entry(domain, name, client_ids, &tmp_status);
!         }
  
!         if (alias_id != END_OF_LIST) {
!             /* Adding a new primary name (current names are marked as aliases)
!              * so change the head of the credentials list.
!              */
!             rsdb_change_credentials(domain_info[domain].db, &credentials,
!                 &item->id, item->unix_num, pgo.body.threads.id,
!                 credentials.acl_id);
!         } else {
!             /* Thread on end of alias chain */
!             rsdb_named_item_t alias_pgo;
  
!             rsdb_pgo_util_get_by_id(domain, credentials.id, &alias_pgo);
!             while (rsdb_pgo_util_get_next_alias(domain,&alias_pgo,&alias_pgo));
! 
!             alias_pgo.body.threads.alias = pgo.body.threads.id;
!             rsdb_util_store_item_by_id(domain, alias_pgo.body.threads.id,
!                 &alias_pgo);
!         }
!     }
  }
  
+ 
  /*
   *  r s d b _ p g o _ d e l e t e
   */
***************
*** 986,1036 ****
      /* The original pgo.acl_id is preserved in import_pgo. */
      import_pgo(&RSDB_PGO(&pgo), item, false);
      rsdb_util_store_item_by_id(domain, pgo.body.threads.id, &pgo);
- 
-     /*
-      * Update unix info
-      */
- 
-     /*
-      * NOT YET DONE:
-      *     If a person name is changed, then the groups and orgs that
-      *     contain this individual must be updated.
-      *     If a group or org name changed, then the accounts that may
-      *     contain this group/org must be updated.
-      *     If a group credential changes, then accounts that are in this
-      *     group must be updated.
-      */
- /*UNIX */
- #ifdef UNDEF
-     if (change_fullname || change_credentials) {
- 
-         if (change_credentials) {
-             /*
-              *If the credentials changed (unix id changed) then we need
-              *to update all aliases.
-              */
-             /*
-              *Make sure we are at the primary entry.
-              */
-             rsdb_pgo_util_get_by_id(domain, credentials.id, &pgo);
- 
-             do {
-                 export_pgo(domain, name, &to_change, &RSDB_PGO(&pgo));
- 
-                 rsdb_unix_gen_entry_info(domain, &to_change,
-                                          pgo.body.threads.id);
-             } while (rsdb_pgo_util_get_next_alias(domain, &pgo, &pgo));
- 
-         } else {
-             /*
-              *If just the fullname changed, then update this individual
-              */
-             rsdb_unix_gen_entry_info(domain, item, pgo.body.threads.id);
-         }
-     }
- 
- #endif
- 
  }
  
  
--- 997,1002 ----
***************
*** 1574,1587 ****
              if (domain == sec_rgy_domain_group) {
                  rsdb_pgo_util_member_list_add(sec_rgy_domain_person, &person, &go);
              }
- /*UNIX */
- #ifdef UNDEF
-             /*
-              *Generate dynamic UNIX info
-              */
-             export_pgo(domain, xgo_name, &xgo, &RSDB_PGO(&go);
-             rsdb_unix_gen_entry_info(domain, &xgo, go.body.threads.id);
- #endif
          }
      }
  }
--- 1540,1545 ----
***************
*** 1631,1647 ****
          }
  
          rsdb_pgo_util_delete_member_accounts(domain, &aggregate, &member);
- 
- 
- /*UNIX */
- #ifdef UNDEF
-         /*
-          *Generate dynamic UNIX info
-          */
-         export_pgo(domain, xgo_name, &xgo, &RSDB_PGO(&aggregate));
-         rsdb_unix_gen_entry_info(domain, &xgo, aggregate.body.threads.id);
- #endif
- 
      }
  }
  
--- 1589,1594 ----
 
*** /project/dce/build/dce1.1-maint/src/security/server/sec_salvage_db/sec_svg_rec.c	Mon Jun  5 17:47:00 1995
--- security/server/sec_salvage_db/sec_svg_rec.c	Fri Jul 28 15:00:44 1995
***************
*** 8,17 ****
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision 1.1.95.2  1995/06/05  22:00:34  csn
!  * 	Submit Warranty Patch
!  * 	[1995/06/05  20:34:02  csn]
!  *
   * Revision /main/DCE1_1_WP/3  1995/05/09  17:53 UTC  rps
   * 	use RSDB_DIR and RSDB_PGO macros for hierarchical items.
   * 
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision /main/DCE1_1_WP/alias_acl_fix/1  1995/07/14  18:17 UTC  burati
!  * 	ALIAS ACL FIX
!  * 
   * Revision /main/DCE1_1_WP/3  1995/05/09  17:53 UTC  rps
   * 	use RSDB_DIR and RSDB_PGO macros for hierarchical items.
   * 
***************
*** 55,61 ****
   * Revision 1.1.93.1  1994/10/26  15:17:39  hanfei
   * 	ERA enhancement work.
   * 	[1994/10/26  15:01:01  hanfei]
!  * 
   * Revision /main/HPDCE02/1  1994/10/27  15:29 UTC  hanfei
   * 	merge
   * 
--- 54,60 ----
   * Revision 1.1.93.1  1994/10/26  15:17:39  hanfei
   * 	ERA enhancement work.
   * 	[1994/10/26  15:01:01  hanfei]
!  *
   * Revision /main/HPDCE02/1  1994/10/27  15:29 UTC  hanfei
   * 	merge
   * 
***************
*** 68,73 ****
--- 67,73 ----
   * Revision /main/hanfei_svg_bl1/1  1994/09/14  19:23 UTC  hanfei
   * 	codes for backward conversion from DCE 1.1 to DCE 1.0.3.
   * 
+  * 
   * Revision 1.1.91.4  1994/06/17  18:43:00  devsrc
   * 	cr10872 - fix copyright
   * 	[1994/06/17  18:20:11  devsrc]
***************
*** 115,121 ****
   */
  
  /*  
! ** Copyright (c) Hewlett-Packard Company 1992
  ** Unpublished work. All Rights Reserved.
  */
  /* 
--- 115,121 ----
   */
  
  /*  
! ** Copyright (c) Hewlett-Packard Company 1992, 1995
  ** Unpublished work. All Rights Reserved.
  */
  /* 
***************
*** 135,140 ****
--- 135,141 ----
  #include <rsdb_file.h>  
  #include <rsdb_auth.h>  
  #include <rsdb_policy.h>  
+ #include <rsdb_pgo.h>
  #include <dce/sec_daclmgr.h>
  #include <un_io.h>
  #include <rs_pvt.h>
***************
*** 1883,1889 ****
      char 	       *value;
      uuid_t 	       uuid;
      rsdb_acl_t         acl;
!     sec_id_t           rgy_local_cell;
      sec_rgy_name_t     base_name;
      rsdb_pvt_id_t      parent_id;
      sec_attr_t         *attrs;
--- 1884,1890 ----
      char 	       *value;
      uuid_t 	       uuid;
      rsdb_acl_t         acl;
!     sec_rgy_foreign_id_t creator_ids;
      sec_rgy_name_t     base_name;
      rsdb_pvt_id_t      parent_id;
      sec_attr_t         *attrs;
***************
*** 1892,1897 ****
--- 1893,1899 ----
      int i;
      int rc=TRUE;
      rsdb_credentials_t credentials;
+     boolean32          dummy;
  
  
      item->flags = sec_rgy_pgo_flags_none;
***************
*** 1979,1986 ****
  	}
      }
  
!     uuid_create_nil(&rgy_local_cell.uuid, status);
!     rsdb_pgo_add ( domain, *name, item, &rgy_local_cell.uuid, status );
  
      if (BAD_STATUS(status))
      {
--- 1981,1988 ----
  	}
      }
  
!     uuid_create_nil(&creator_ids.principal, status);
!     rsdb_pgo_add ( domain, *name, item, &creator_ids, true, &dummy, status );
  
      if (BAD_STATUS(status))
      {
 
*** /project/dce/build/dce1.1-maint/src/security/server/rs/rs_auth.c	Mon Jun  5 17:44:55 1995
--- security/server/rs/rs_auth.c	Fri Jul 28 15:11:16 1995
***************
*** 8,34 ****
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision 1.1.13.1  1995/06/05  21:58:30  csn
!  * 	Submit Warranty Patch
!  * 	[1995/06/05  20:27:22  csn]
!  *
!  * Revision /main/DCE1_1_WP/2  1995/04/25  20:29 UTC  jrr
!  * 	SEC migration Warranty Patch merge.
!  * 
!  * Revision /main/SEC_migrate/1  1995/04/18  18:19 UTC  greg
!  * 	Merge work from greg_sec_migrate_acls branch.
!  * 
!  * Revision /main/greg_sec_migrate_acls/1  1995/04/13  17:09 UTC  greg
!  * 	Include <dce/sec_daclmgr.h>.
!  * 
!  * Revision /main/DCE1_1_WP/1  1995/04/13  20:40 UTC  jrr
!  * 	[OT12669] cell renaming
!  * 	[1994/12/15  00:01 UTC  rps  /main/rps_mothra/1]
   * 
   * Revision 1.1.10.8  1994/09/27  15:06:58  burati
   * 	CR12346 Remove bad calls to sec_encode_epac_set_free()
   * 	[1994/09/26  21:45:15  burati]
!  * 
   * Revision 1.1.10.7  1994/08/29  16:49:17  mdf
   * 	Allow dce-rgy, and the cell principal account and policy
   * 	information to be modified durring locksmith mode
--- 8,20 ----
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision /main/DCE1_1_WP/alias_acl_fix/1  1995/07/14  18:30 UTC  burati
!  * 	ALIAS ACL FIX
   * 
   * Revision 1.1.10.8  1994/09/27  15:06:58  burati
   * 	CR12346 Remove bad calls to sec_encode_epac_set_free()
   * 	[1994/09/26  21:45:15  burati]
!  *
   * Revision 1.1.10.7  1994/08/29  16:49:17  mdf
   * 	Allow dce-rgy, and the cell principal account and policy
   * 	information to be modified durring locksmith mode
***************
*** 139,145 ****
   */
  
  /*
! ** Copyright (c) Hewlett-Packard Company 1991, 1992, 1993, 1994
  ** Unpublished work. All Rights Reserved.
  */
  /*
--- 125,131 ----
   */
  
  /*
! ** Copyright (c) Hewlett-Packard Company 1991, 1992, 1993, 1994, 1995
  ** Unpublished work. All Rights Reserved.
  */
  /*
***************
*** 1561,1571 ****
      sec_timeval_sec_t       creation_date;
      struct timezone         tz;
      sec_timeval_t           curr_time;
-     boolean32               yes;
-     boolean32               passwd_input = false;
      error_status_t          tmp_status;
!     char                    buf[64];
!     char                    name_buf[3 * sizeof(sec_rgy_name_t) + 1];
      unsigned_char_t         *hostname_p = 0;
  
  
--- 1547,1555 ----
      sec_timeval_sec_t       creation_date;
      struct timezone         tz;
      sec_timeval_t           curr_time;
      error_status_t          tmp_status;
!     boolean32               yes = true, dummy, passwd_input = false;
!     char                    buf[64], name_buf[3 * sizeof(sec_rgy_name_t) + 1];
      unsigned_char_t         *hostname_p = 0;
  
  
***************
*** 1595,1601 ****
      if (BAD_STATUS(stp)) {
          dce_printf(sec_lksm_create_acct, locksmith_name_p);
          dce_printf(sec_lksm_def_yes_prompt);
-         yes = true;
          get_yes_or_no(5, &yes, &tmp_status);
          if (BAD_STATUS(&tmp_status) || !yes)
              goto out;      /* with status from acct_lookup */
--- 1579,1584 ----
***************
*** 1623,1629 ****
              pgo.quota = sec_rgy_quota_unlimited;
              pgo.flags = sec_rgy_pgo_projlist_ok;
              rs_util_pgo_add(sec_rgy_domain_person, login_name.pname,
!                             &pgo, &creator_ids, stp);
              if (STATUS_OK(stp)) {
                  rs_audit_trail_log((handle_t)NULL, "Add locksmith principal",
                                     (char *)login_name.pname);
--- 1606,1612 ----
              pgo.quota = sec_rgy_quota_unlimited;
              pgo.flags = sec_rgy_pgo_projlist_ok;
              rs_util_pgo_add(sec_rgy_domain_person, login_name.pname,
!                             &pgo, &creator_ids, true, &dummy, stp);
              if (STATUS_OK(stp)) {
                  rs_audit_trail_log((handle_t)NULL, "Add locksmith principal",
                                     (char *)login_name.pname);
***************
*** 1651,1657 ****
              pgo.quota = 0;
              pgo.flags = sec_rgy_pgo_projlist_ok;
              rs_util_pgo_add(sec_rgy_domain_group, login_name.gname,
!                             &pgo, &creator_ids, stp);
              if (STATUS_OK(stp)) {
                  rs_audit_trail_log((handle_t)NULL, "Add locksmith group",
                                     (char *)login_name.gname);
--- 1634,1640 ----
              pgo.quota = 0;
              pgo.flags = sec_rgy_pgo_projlist_ok;
              rs_util_pgo_add(sec_rgy_domain_group, login_name.gname,
!                             &pgo, &creator_ids, true, &dummy, stp);
              if (STATUS_OK(stp)) {
                  rs_audit_trail_log((handle_t)NULL, "Add locksmith group",
                                     (char *)login_name.gname);
***************
*** 1678,1684 ****
              pgo.quota = 0;
              pgo.flags = sec_rgy_pgo_projlist_ok;
              rs_util_pgo_add(sec_rgy_domain_org, login_name.oname,
!                             &pgo, &creator_ids, stp);
              if (STATUS_OK(stp)) {
                  rs_audit_trail_log((handle_t)NULL, "Add locksmith org",
                                     (char *)login_name.oname);
--- 1661,1667 ----
              pgo.quota = 0;
              pgo.flags = sec_rgy_pgo_projlist_ok;
              rs_util_pgo_add(sec_rgy_domain_org, login_name.oname,
!                             &pgo, &creator_ids, true, &dummy, stp);
              if (STATUS_OK(stp)) {
                  rs_audit_trail_log((handle_t)NULL, "Add locksmith org",
                                     (char *)login_name.oname);
 
*** /project/dce/build/dce1.1-maint/src/security/server/rs/rs_dacl.c	Mon Jun  5 17:44:59 1995
--- security/server/rs/rs_dacl.c	Fri Jul 28 15:14:12 1995
***************
*** 8,31 ****
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision 1.1.10.1  1995/06/05  21:58:35  csn
!  * 	Submit Warranty Patch
!  * 	[1995/06/05  20:27:36  csn]
!  *
!  * Revision /main/DCE1_1_WP/1  1995/04/26  19:46 UTC  jrr
!  * 	SEC migration Warranty Patch merge.
!  * 
!  * Revision /main/SEC_migrate/1  1995/04/18  18:19 UTC  greg
!  * 	Merge work from greg_sec_migrate_acls branch.
!  * 
!  * Revision /main/greg_sec_migrate_acls/1  1995/04/13  17:09 UTC  greg
!  * 	Add software version to sec_acl_mgr_configure()
!  * 	call in rs_dacl_init().
   * 
   * Revision 1.1.7.4  1994/07/15  15:01:19  mdf
   * 	Hewlett Packard Security Code Drop
   * 	[1994/07/14  17:19:20  mdf]
!  * 
   * Revision 1.1.7.3  1994/06/02  21:25:03  mdf
   * 	hp_sec_to_osf_3 drop, merge up with latest.
   * 	[1994/05/24  15:18:19  mdf]
--- 8,20 ----
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.8  95/12/13  13:30:00  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/13/95 public]
# 
# Revision 1.7  95/09/14  12:19:29  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [parul 9/14/95 public]
# 
!  * Revision /main/DCE1_1_WP/alias_acl_fix/1  1995/07/14  18:35 UTC  burati
!  * 	ALIAS ACL FIX
   * 
   * Revision 1.1.7.4  1994/07/15  15:01:19  mdf
   * 	Hewlett Packard Security Code Drop
   * 	[1994/07/14  17:19:20  mdf]
!  *
   * Revision 1.1.7.3  1994/06/02  21:25:03  mdf
   * 	hp_sec_to_osf_3 drop, merge up with latest.
   * 	[1994/05/24  15:18:19  mdf]
***************
*** 83,89 ****
   */
  
  /*
!  * Copyright (c) Hewlett-Packard Company 1991, 1992, 1994
   * Unpublished work. All Rights Reserved.
   */
  /*
--- 72,78 ----
   */
  
  /*
!  * Copyright (c) Hewlett-Packard Company 1991, 1992, 1994, 1995
   * Unpublished work. All Rights Reserved.
   */
  /*
***************
*** 92,98 ****
  
  #ifdef MODULE_VERSION_ID
  static char *VersionID =
!     "$Id: c012915,v 1.9 96/01/24 16:18:00 root Exp $";
  #endif
  
  #include <dce/uuid.h>
--- 81,87 ----
  
  #ifdef MODULE_VERSION_ID
  static char *VersionID =
!     "$Id: c012915,v 1.9 96/01/24 16:18:00 root Exp $";
  #endif
  
  #include <dce/uuid.h>
***************
*** 982,985 ****
--- 971,1013 ----
      }
  #endif	/* defined(DCE_AUD_POINTS) */
  
+ }
+ 
+ 
+ /*
+  * rs_rdacl_prop_acl - Bug avoidance for secd's without the ALIAS ACL Fix.
+  * 
+  * Lookup the acl just saved by rs_pgo_add() and propagate it around.
+  */
+ PUBLIC void rs_rdacl_prop_acl (
+     sec_rgy_domain_t domain,
+     sec_rgy_name_t   pgo_name,
+     error_status_t   *stp
+ )
+ {
+     sec_rgy_name_t      cname;
+     sec_id_t            user_obj, group_obj, *user_p, *group_p;
+     rsdb_acl_ids_t      ids; 
+     sec_acl_list_t      *sec_acl_list_p;
+     rsdb_acl_mgr_type_t mtype;
+     uuid_t              mgr_type;
+ 
+     if (! rsdb_name_util_complete_name(domain, pgo_name, cname, stp))
+         return;
+ 
+     user_p = &user_obj; group_p = &group_obj;
+ 
+     mtype = GET_MGR_BY_DOMAIN(domain);
+     rsdb_acl_get_mgr_uuid_from_type(mtype, &mgr_type, stp);
+     rsdb_acl_get_ids_from_name(cname, sec_acl_type_object, &mgr_type,
+         &user_p, &group_p, &ids, stp);
+     if (GOOD_STATUS(stp)) {
+         sec_acl_mgr_lookup(sec_acl_mgr, (sec_acl_key_t) &ids, &mgr_type,
+             sec_acl_type_object, &sec_acl_list_p, stp);
+         if (GOOD_STATUS(stp)) {
+             rs_log_acl_replace(sec_acl_mgr, cname, &mgr_type,
+                 sec_acl_type_object, sec_acl_list_p,
+                 (rs_replica_master_info_t *)NULL);
+         }
+     }
  }
 
*** /project/dce/build/dce1.1-maint/src/security/server/rs/rs_log_pgo.c	Wed Dec 15 13:35:51 1993
--- security/server/rs/rs_log_pgo.c	Fri Jul 28 15:15:59 1995
***************
*** 8,13 ****
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c012915,v $
# Revision 1.9  96/01/24  16:18:00  root
# changed fields: Fixed In Baseline  
# 
#[white_r 12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12909
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd crash in 1.1 warranty patch code
Reported Date                 : 6/7/95
Found in Baseline             : 1.1
Found Date                    : 6/7/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/krb5/kdc/kdc_util.c
Sensitivity                   : public

[6/7/95 public]

Too many arguments were being passed to a function, corrupting one
of the arguments and causing secd to crash. The crash can be reproduced
by executing "kinit -f" followed by "klist". The following diffs
to kdc_util.c fix the defect:

********************************
<<< file 1: kdc_util.c (old)
>>> file 2: kdc_util.c (new)
********************************
-----[after 184 inserted 185]-----
> #include "policy.h"
-----[1748 changed to 1749]-----
<     errcode = against_flag_policy_tgs(request, server, ticket, status);
---
>     errcode = against_flag_policy_tgs(request, ticket);

[12/21/95 public]
Fixed in 1.1 WP and included in DCE 1.2.1
Closed



CR Number                     : 12894
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : client/acl
Short Description             : DIFF: calling dacl_epi_CheckAccessAllowedPac with incorrect args
Reported Date                 : 5/30/95
Found in Baseline             : 1.1wp
Found Date                    : 5/30/95
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : security/client/acl/dfs_dce_acl.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public
Transarc Deltas               : claire-xxxx-fix-security-client-acl-dfs_dce_acl.c
Transarc Status               : 

[5/30/95 public]
Following invocation of dacl_epi_CheckAccessAllowedPac is using incorrect
signature as the function was changed to use 8 arguments in warranty patch:
: : :
           * be less confusing for the user.
           */
          errcode = dacl_ExtractPermBits(&dacl, &modeBits);
          if (!errcode) {
            /* the permsets are isomorphic, so, we can just do the cast */
            errcode = dacl_epi_CheckAccessAllowedPac(&dacl,
                                               &modeBits,
                                               ((dacl_permset_t *)
                                                (desiredPermsetP ?
                                                 desiredPermsetP :
                                                 &localDesiredPermset)),
                                               pacListP,
                                               &userObj,
                                               &groupObj,
                                               (dacl_permset_t *)accessAllowedP);
            if (!errcode) {
: : : :
The definition of dacl_epi_CheckAccessAllowedPac from DFS WP code:
dacl_pac.c:
#if defined(DACL_EPISODE)
EXPORT long dacl_epi_CheckAccessAllowedPac(
     dacl_t *                   aclP,
     u_int32 *                  permBitsP,
     dacl_permset_t *           accessRequestedP,
     pac_list_t *               pacListP,
     epi_principal_id_t *       userObjP,
     epi_principal_id_t *       groupObjP,
     int                        networkRootCheck,
     dacl_permset_t *           accessAllowedP)
#else /* defined(DACL_EPISODE) */
EXPORT long dacl_CheckAccessAllowedPac(
     dacl_t *                   aclP,
     u_int32 *                  permBitsP,
     dacl_permset_t *           accessRequestedP,
     sec_id_pac_t *             pacP,
     epi_principal_id_t *       userObjP,
     epi_principal_id_t *       groupObjP,
     dacl_permset_t *           accessAllowedP)
#endif /* defined(DACL_EPISODE */
{
: : : : 
Any idea networkRootCheck argument should be set to? 0?

[10/7/95 public]
Knock! knock! Any news from Transarc. This causes my 1.1maint build to
fail on HP-UX 9.0.7

[12/15/95 public]
Yes, networkRootCheck should be set to 0.  Just add a 0 as the 7th argument.
Added field Transarc Deltas with value 
 `claire-xxxx-fix-security-client-acl-dfs_dce_acl.c' 
Added field Transarc Status with value `'

[2/2/96 public]
It turns out that at HP the symbol is DACL_EPISODE not defined and that's
how its built and tested on RIOS. Following is the compilation line:
 
xlc -c     -O  -DEPI_USE_FULL_ID -D_BSD -DAFS_DEBUG -DDCESHARED_PATH=\"/opt/dce\
" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_ALL_SOURCE -DAFS_AIX32_ENV -D_ALL_SOURCE
-DAIX32   -I. -I/build/sandbox/psn_12base/src/file/security/dacl -I/viewsrc/psn_
dce_1.2/dce/src/file/security/dacl  -I.. -I/build/sandbox/psn_12base/src/file/se
curity -I/viewsrc/psn_dce_1.2/dce/src/file/security -I/build/sandbox/psn_12base/
export/rios/usr/include -I/viewsrc/psn_dce_1.2/dce/export/rios/usr/include -I/vi
ewsrc/psn_dce_1.2/dce/external/rios/usr/include  /viewsrc/psn_dce_1.2/dce/src/fi
le/security/dacl/dacl_pac.c
 
Therefore, there was no change needed for use dacl_epi_CheckAccessAllowedPac.
Closing this OT.

[2/2/96 public]
By the way, the diff is here,
*** /vob/dce/src/security/client/acl/dfs_dce_acl.c@@/main/DCE_1.2/2     Fri Jan 19 15:53:48 1996
--- /vob/dce/src/security/client/acl/dfs_dce_acl.c@@/main/DCE_1.2/3     Fri Feb  2 13:13:36 1996
***************
*** 8,13 ****
--- 8,16 ----
  /*
   * HISTORY
   * $Log:	c012894,v $
# Revision 1.7  96/10/08  15:02:04  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [mariko 10/8/96 public]
# 
# Revision 1.6  96/03/28  17:10:38  root
# changed fields:  new/changed/deleted note(s) [psn 2/2/96 public] [psn 2/2/96 public] [cfe@transarc.com 3/28/96 public] [psn 2/2/96 public] [psn 2/2/96 public]
# 
# Revision 1.5  96/02/02  13:18:44  root
# changed fields: Short Description   new/changed/deleted note(s) [psn 2/2/96 public]
# 
+  * Revision /main/DCE_1.2/3  1996/02/02  18:16 UTC  psn
+  *    Fix OT12894.
+  * 
   * Revision /main/DCE_1.2/2  1996/01/19  20:55 UTC  psn
   *    Revert dacl_epi_CheckAccessAllowedPac() call back to old DFS call
   *    signature.
***************
*** 917,922 ****
--- 920,926 ----
    
          if (!errcode) {
            /* the permsets are isomorphic, so, we can just do the cast */
+ #if defined(DACL_EPISODE)
            errcode = dacl_epi_CheckAccessAllowedPac(&dacl,
                                               &modeBits,
                                               ((dacl_permset_t *)
***************
*** 926,932 ****
--- 930,949 ----
                                               pacListP,
                                               &userObj,
                                               &groupObj,
+                                              0,
                                               (dacl_permset_t *)accessAllowedP);
+ #else /* defined(DACL_EPISODE) */
+           errcode = dacl_epi_CheckAccessAllowedPac(&dacl,
+                                              &modeBits,
+                                              ((dacl_permset_t *)
+                                               (desiredPermsetP ?
+                                                desiredPermsetP :
+                                                &localDesiredPermset)),
+                                              pacListP,
+                                              &userObj,
+                                              &groupObj,
+                                              (dacl_permset_t *)accessAllowedP);
+ #endif /* defined(DACL_EPISODE) */
            if (!errcode) {
              rtnVal = true;
            }

[3/28/96 public]
I believe that the above fix is somewhat misguided. DACL_EPISODE is set
in the different Makefiles that compile the src/file/security/dacl/dacl_pac.c
file.  As far as I can tell, the OSF build always builds libdce out of
the version that is controlled by src/file/security/dacl2acl/Makefile,
which sets DACL_EPISODE in CFLAGS before writing dacl_pac.o (which is
pulled into libdce.a).  The compilation line quoted above is for the
compilation of dacl_pac.c controlled by src/file/security/dacl/Makefile.
 
At the same time, the 7-argument version is not named
dacl_epi_CheckAccessAllowedPac; it is named dacl_CheckAccessAllowedPac
instead.  It may be that the version of dacl_pac.c that HP has internally
has only the old 7-argument flavor for both halves.  But I believe that
the OSF version should now simply use the 8-argument call to
dacl_epi_CheckAccessAllowedPac.  At HP, if they don't test
Episode even on the AIX box, they would never execute the above code,
so a parameter mismatch would never be detected.
 
Ultimately, DACL_EPISODE is not defined build-wide; it is a simple flag
used by some of the five compilations that process dacl_pac.c, as below:
 
file/security/dacl: user-space, no DACL_EPISODE, builds libdacl.a
 
file/security/dacl.klib: kernel, no DACL_EPISODE, builds libkdacl.a
 
file/security/dacl2acl: user-space, DACL_EPISODE, builds libdacl2acl.a,
			is the version picked up in src/libdce
file/security/dacl_lfs: user-space, DACL_EPISODE, builds libdacllfs.a
 
file/security/dacl_lfs.klib: kernel, DACL_EPISODE, builds libkdacllfs.a
 
Not that I can cogently explain the difference between dacl2acl and dacl_lfs,
but I'm sure that there is one.  I apologize for the confusion of these
versions.

[10/8/96 public]

  Fixed in 1.1 maintenance tree.

./security/client/acl/dfs_dce_acl.c
Comparing revision 1.1.11.4 with revision 1.1.16.1.
*** 1.1.11.4    1994/09/22 20:49:45
--- 1.1.16.1    1996/10/08 18:26:38
*** 785,790 ****
--- 789,795 ----
                                               pacListP,
                                               &userObj,
                                               &groupObj,
+                                              0,               /* OT 12894 */
                                               (dacl_permset_t *)accessAllowedP);
            if (!errcode) {
              rtnVal = true;



CR Number                     : 12890
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Bad ERA prop logic can prevent
propagation
Reported Date                 : 5/26/95
Found in Baseline             : 1.1
Found Date                    : 5/26/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[5/26/95 public]

Due to cut-and-paste detritus in the ERA propagation
logic, there is a race condition involving PGO deletes
and ERA updates.  If the master processes an add of
an ERA instance to a PGO followed immediately by a delete
of that PGO, and the PGO delete is applied locally to 
the master's database before the propagation threads
attempt to propagate the preceeding ERA update, the
prop threads get stuck forever attempting to propagate 
the ERA update.  

The symptom is a commstatus attribute of
"registry object not found" for a replica.

The workaround is to initialize the replica.

The solution is to remove the following block of code
from both the rs_log_attr_prop_update() and 
rs_log_attr_prop_delete() routines.

    rsdb_util_get_obj_info_by_name(prop_attrs[0].component_name,
        rsdb_pgo_type, sec_acl_type_object, &rgy_obj_info, &obj_uuid,
st_p);

    if(BAD_STATUS(st_p)) {
        return;
    }

    rsdb_attr_sch_get_entries(prop_attrs[0].component_name,
        prop_attrs[0].attr_list->num_attrs, prop_attrs[0].attr_list->attrs,
        &rgy_obj_info, &sch_list, &xref, &failure_index, st_p);

    if(BAD_STATUS(st_p)) {
        return;
    }

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12880
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb
Short Description             : Encoding for kerberos bit fields
is not compliant with the RFC1510 Kerberos V5 specification.
Reported Date                 : 5/19/95
Found in Baseline             : 1.0.3
Found Date                    : 5/10/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/krb5/lib/mvr/krb5-manual-glue.c
Sensitivity                   : public

[5/19/95 public]

(from John Marco @ Santa Cruz Operation, (408) 423-8222, johnma@sco.com

Severity: high (protocol incompatibility)

I have found that the encoding for Kerberos bit fields is not
compliant with the RFC1510 Kerberos V5 spec.  Specifically,
the ordering of the bits in the 32-bit word is reversed in
the DCE implementation of Kerberos.  For example, RFC1510
specifies that the "Forwardable" flag in the "TicketFlags"
field in a Kerberos V5 ticket is bit #1 (starting from 0).
This means 01000000 00000000 00000000 00000000.  MIT Kerberos
V5 Beta3 and Beta4 both encode this as 03 05 00 40 00 00 00 hex.
DCE, however, will encode it as 03 05 00 00 00 00 02, which 
is not correct, according to recent mail I received from Ted
Tso at MIT.  

The result of this is that native MIT-based Kerberos clients
will not work properly when they use a DCE Security Server
as their KDC, since the TicketFlags field in the tickets
returned by the server will be bit-reversed.  Any other
flags fields in Kerberos will also have this problem.

I believe that the source of this bug is an ISODE-specific
hack used by MIT in earlier beta releases to work around
an incorrect bit reversal in the ISODE encoder.  This
bit reversal code (See "swbits" in cvt_flags.c) was carried
over into the DCE MAVROS "glue" layer, and it is not apparent
to me that the MAVROS ASN.1 library has the bit reversal bug.

The following is my mail to Ted Tso (tytso@mit.EDU) about my
findings.  If you have any questions about this report, please 
send me email to johnma@sco.COM and CC to mbrowder@sco.COM.

------------------------------
John Marco
The Santa Cruz Operation, Inc.
johnma@sco.COM  (408) 423-8222
------------------------------

MESSAGE TO MIT FOLLOWS
--------------------------------------------------------------
>From johnma@sco.COM Wed May 10 22:45:20 1995
From: "John J. Marco" <johnma@sco.COM>
To: tytso@MIT.EDU
Subject: FALSE ALARM: SEVERE interoperability bug in Kerberos V5 beta 4
Cc: dceivers@sco.COM, mbrowder@sco.COM, johnma@sco.COM
X-Mailer: ScoMail 3.0.Bd
MIME-Version: 1.0
Date: Wed, 10 May 1995 15:46:22 -0700 (PDT)
Message-ID:  <9505101546.aa13794@lubyanka.pdev.sco.COM>

Ted,

Sorry about the delay in my response.  I just returned from 
vacation on Monday.

I read your last message about bit reversal not being a problem
in MIT releases, so I got out my backup CD with an ISODE
based beta3 port I did last year.  Sure enough, the beta3
version of kinit encodes the KDC-Options field the same way
that beta4 does, without reversing the bits.  I then tested
the following four versions of kinit and looked at ethernet
sniffer traces for the KDC-Options fields in the KDC-Req messages.
The test was to do a "kinit -f" in order to set the "forwardable"
bit in KDC-Options in the KDC-REQ message.  The "forwardable" bit
is defined to be bit 1 (starting at 0) in my copy of the Kerberos
V5 spec.  This translates to (in 32 bits) 
		01000000 00000000 00000000 00000000
which is 0x40000000.  Add 0x03 (BER BitField primitive encoding)
0x05 (5 more octets follow), and 0x00 (no padding bits), and you
get (in hex) 03 05 00 04 00 00 00 as the most common correct
encoding.  The encoding 03 05 00 00 00 00 02 would be the most
common incorrect bit reversed encoding.  See below:

    Implementation         KDC-Options Encoding of "forwardable" bit
--------------------------------------------------------------------
    DCE/MAVROS based kinit          03 05 00 00 00 00 02 (wrong)
    MIT Beta 4 hand encoder kinit   03 05 00 40 00 00 00 (right)
    MIT Beta 3 ISODE based kinit    03 05 00 40 00 00 00 (right)
    CyberSafe Windows Client kinit  03 05 00 40 00 00 00 (right)

It seems that the bug is really with the DCE MAVROS-based encoder.
My guess is that whoever ported the OSF handoff of Kerberos V5
to use MAVROS just copied the "swbits" bit reversal code into
the MAVROS port assuming that it was needed.  I looked, and
the bit reversal is in the OSF code, copied verbatim from the
MIT code.  There does not appear to be any comment in the MIT 
cvt_flags.c that says that the bit reversal was done to work
around a bug in ISODE.

[5/23/95 public]

Duplicate; this was fixed about nine months ago in the 1.1 source base.

`found in baseline' changed from 1.1 to 1.0.3 since this was fixed in 1.1,
under OT 11851.

This problem was fixed by me in rev 1.1.8.1 of
security/krb5/lib/mvr/krb5-manual-glue.c, on August 26, 1994.

I do not believe that any other files were involved in this change.

"fixed in baseline" above is copied from the original OT; it may be wrong.

[12/19/95 public]
Fixed in DCE 1.1.  Included in DCE 1.2.1
Closed



CR Number                     : 12872
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : 
Short Description             : 1.0.3 to 1.1 replica migration
hits file lock problems
Reported Date                 : 5/17/95
Found in Baseline             : 1.1wp
Found Date                    : 5/17/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : rsdb/rsdb.c, rsdb/rsdb_compat.c
Sensitivity                   : public

[5/17/95 public]

There are a couple problems with the locking code for the rsdb_rgy_state_fd
that appear when a 1.1 secd is initially booted with a 1.0.3 registry.

First, there's a portability bug in rsdb/rsdb.c.  In several routines,
the rsdb_rgy_state_fd descriptor is closed when the intent is to release
the lock on it as well.  On Digitial Unix, the lock state on a file
persists after a close.  This causes problems in the following code 
path:  In rsdb_initialize(), the first rs_state_init() detects the
version mismatch, closes the descriptor and returns error.  A subsequent 
rsdb_state_open() fails because it detects a lock.

I would precede each case of rsdb_close_file(rsdb_rgy_state_fd) with
flock(rsdb_rgy_state_fd, LOCK_UN) followed by an fsync(rsdb_rgy_state_fd).

The second bug is actually in rsdb_initialize itself (rsdb/rs_rsdb.c).
A successful return from rsdb_compat_reformat_database_for_dce11()
is immediately followed by an rs_state_init(), which fails because
rsdb_compat_reformat_database_for_dce11() did an rsdb_state_open(),
which took the file lock and never released it.  I believe this
second rs_state_init() in rsdb_initialize() is superfluous.

By the way, and this is obvious, but this problem is in the 
"Warranty Patch" code

[6/7/95 public]
The fix for above problem is in the following diff.  And a fix
for a bogus file descriptor used in 
rsdb_compat_reformat_databse_for_dce11() is also included.
Please apply them to your source.

The diff is compared against Waranty Patch source release.

.../security/server/rsdb.c    ( diff  new  old  )
971c971,972
<       rsdb_state_close();
---
>         rsdb_file_close(rsdb_rgy_state_fd);
>         rsdb_rgy_state_fd = -1;
982,984d982
< #ifdef DCE_SEC_POSIX_F_LOCK
<     struct flock    lock_arg;
< #endif
987,997d984
< #ifdef DCE_SEC_POSIX_F_LOCK
<     lock_arg.l_type = F_UNLCK;
<     lock_arg.l_whence = 0;
<     lock_arg.l_start = 0;
<     lock_arg.l_len = 0;
<
<     fcntl(rsdb_rgy_state_fd, F_SETLK, &lock_arg);
< #else
<     if (flock(rsdb_rgy_state_fd, LOCK_UN) == -1) {
< #endif /* DCE_SEC_POSIX_F_LOCK */
<1542c1529,1530
<         rsdb_state_close();
---
>         rsdb_file_close(rsdb_rgy_state_fd);
>         rsdb_rgy_state_fd = -1;

--------------------------------------------
.../security/server/rsdb_compat.c    ( diff  new  old  )
2167a2168
>     int                     state_fd;
2221,2222d2221
<       rsdb_state_close();
<
2245a2245
>
2254c2254,2255
<     rsdb_state_close();
---
>     rsdb_file_fsync(state_fd);
>     rsdb_file_close(state_fd);

[6/7/95 public]
Use 1.1wp for 'Found in Baseline' field.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12868
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : need to update salvager_sample.prt for WP sec_salvage_db testing.
Reported Date                 : 5/15/95
Found in Baseline             : 1.1wp
Found Date                    : 5/15/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : src/test/security/api/moretests/salvager_sample.prt
Sensitivity                   : public

[5/15/95 public]

This file is not updated in your waranty patch release, please update
it for sec_salvage_db test.

Here is the diff of .../src/test/security/api/moretests/salvager_sample.prt
comparing with DCE 1.1 version. ( diff old new )

9,35d8
< # Revision /main/HPDCE02/SEC_migrate_merge/2  1995/05/15  16:21 UTC  hanfei
< #     change Master_Global_Software_Rev and Prev_Propagation_Type.
< #
< # Revision /main/HPDCE02/SEC_migrate/hanfei_migrate_bl2/2  1995/04/21  20:03 UTC  hanfei
< #     modify Attr_Acl_Mgr_Type = group_obj -> principal
< #
< # Revision /main/HPDCE02/SEC_migrate/hanfei_migrate_bl2/1  1995/04/12  19:01 UTC  hanfei
< #     add xattrschema acls entries.
< #
< # Revision /main/HPDCE02/hanfei_migrate_bl1/1  1995/03/01  16:02 UTC  hanfei
< #     add migration data types and merge in replist acls.
< #
< # Revision /main/HPDCE02/hanfei_bugfix_bl2/2  1995/04/10  14:05 UTC  hanfei
< #     take out test schema
< #
< # Revision /main/HPDCE02/hanfei_bugfix_bl2/1  1995/03/13  16:06 UTC  hanfei
< #     change Is_Required_Flag = false for host/.../self
< #
< # Revision /main/HPDCE02/4  1995/01/18  19:38 UTC  hanfei
< #     modify replist acl entries because sec_create_db did it differently.
< #
< # Revision /main/HPDCE02/2  1994/12/13  16:23 UTC  hanfei
< #     Modify attr_bind and scope output for changes in OSF unintegrated tree.
< #
< # Revision /main/hanfei_svg_bl2/1  1994/11/02  18:28 UTC  hanfei
< #     Added ERA entries for sec_salvage_db ERA enhancement.
< #
55,202d27
< ****************************** attr_schema.prt  *********************
<
< Record_Number = 1
< Name = pre_auth_req
< UUID = XXX
< Attr_Encoding = attr_enc_integer
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = -----m---
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = -----m---
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Schema_Entry_Flag = attr_sch_entry_use_defaults
< Attr_Intercell_Action = reject
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = values: {0=NONE, 1=PADATA_ENC_TIMESTAMPS, 2=PADATA_ENC_THIRD_PARTY}
< ================================================================================
< Record_Number = 2
< Name = pwd_val_type
< UUID = XXX
< Attr_Encoding = attr_enc_integer
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = -----m---
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = -----m---
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Schema_Entry_Flag = attr_sch_entry_use_defaults
< Attr_Intercell_Action = reject
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = values: {0=NONE, 1=USER_SELECT, 2=USER_CAN_SELECT, 3=GENERATION_REQUIRED}
< ================================================================================
< Record_Number = 3
< Name = pwd_mgmt_binding
< UUID = XXX
< Attr_Encoding = attr_enc_binding
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = -----m---
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = -----m---
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Schema_Entry_Flag = attr_sch_entry_use_defaults
< Attr_Intercell_Action = reject
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = binding to server exporting the password strength and generation interfaces
< ================================================================================
< Record_Number = 4
< Name = X500_DN
< UUID = XXX
< Attr_Encoding = attr_enc_printstring
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = r--------
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = r--------
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_unique
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Intercell_Action = accept
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = The principal's X500 Distinguished Name
< ================================================================================
< Record_Number = 5
< Name = X500_DSA_Admin
< UUID = XXX
< Attr_Encoding = attr_enc_printstring_array
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = r--------
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = r--------
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Schema_Entry_Flag = attr_sch_entry_use_defaults
< Attr_Intercell_Action = reject
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = list of DSAs that the principal is allowed to administer
< ================================================================================
< Record_Number = 6
< Name = disable_time_interval
< UUID = XXX
< Attr_Encoding = attr_enc_integer
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = -----m---
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = -----m---
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_unique
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Intercell_Action = reject
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = values: {number of seconds to disable account-86400(60*60*24) is one day}
< ================================================================================
< Record_Number = 7
< Name = max_invalid_attempts
< UUID = XXX
< Attr_Encoding = attr_enc_integer
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = -----m---
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = -----m---
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_unique
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Intercell_Action = reject
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = values: {number of invalid attempts allowed before account is disabled}
< ================================================================================
< Record_Number = 8
< Name = passwd_override
< UUID = XXX
< Attr_Encoding = attr_enc_integer
< Num_Attr_Acl_Mgr_Entries = 1
< Attr_Acl_Mgr_Type = principal
< Attr_Acl_Mgr_Query_Entry = -----m---
< Attr_Acl_Mgr_Update_Entry = -----m---
< Attr_Acl_Mgr_Test_Entry = -----m---
< Attr_Acl_Mgr_Delete_Entry = -----m---
< Attr_Schema_Entry_Flag = attr_sch_entry_unique
< Attr_Schema_Entry_Flag = attr_sch_entry_reserved
< Attr_Intercell_Action = reject
< Attr_Trig_Type = none
< Attr_Schema_Scope =
< Attr_Schema_Comment = values: {the ability to not be restricted by passwd expiration}
< ================================================================================
< Record_Number = 9
< Xattrschema_Name = xattrschema
< Obj_Acl_Def_Cell_Name = /.../XXX
< Num_Acl_Entries = 4
< Obj_Acl_Entry = any_other:r----
< Obj_Acl_Entry = other_obj:r----
< Obj_Acl_Entry = unauthenticated:r----
< Obj_Acl_Entry = user:root:rcidm
< ================================================================================
<
305d129
< Num_Attr_List_Entries = 0
325d148
< Num_Attr_List_Entries = 0
344d166
< Num_Attr_List_Entries = 0
364d185
< Num_Attr_List_Entries = 0
383d203
< Num_Attr_List_Entries = 0
402d221
< Num_Attr_List_Entries = 0
424d242
< Num_Attr_List_Entries = 0
443d260
< Num_Attr_List_Entries = 0
462d278
< Num_Attr_List_Entries = 0
483d298
< Num_Attr_List_Entries = 0
505d319
< Num_Attr_List_Entries = 0
529d342
< Num_Attr_List_Entries = 0
548d360
< Num_Attr_List_Entries = 0
566d377
< Num_Attr_List_Entries = 0
585d395
< Num_Attr_List_Entries = 0
694d503
< Num_Attr_List_Entries = 0
719d527
< Num_Attr_List_Entries = 0
738d545
< Num_Attr_List_Entries = 0
758d564
< Num_Attr_List_Entries = 0
780d585
< Num_Attr_List_Entries = 0
836,839c641,644
< Obj_Acl_Entry = any_other:r----
< Obj_Acl_Entry = other_obj:r----
< Obj_Acl_Entry = unauthenticated:r----
< Obj_Acl_Entry = user:root:rcmas
---
> Obj_Acl_Entry = any_other:r---
> Obj_Acl_Entry = other_obj:r---
> Obj_Acl_Entry = unauthenticated:r---
> Obj_Acl_Entry = user:root:rcma
1016d820
< Num_Attr_List_Entries = 0
1068d871
< Num_Attr_List_Entries = 0
1120d922
< Num_Attr_List_Entries = 0
1172d973
< Num_Attr_List_Entries = 0
1222c1023
< Is_Required_Flag = false
---
> Is_Required_Flag = true
1224d1024
< Num_Attr_List_Entries = 0
1276d1075
< Num_Attr_List_Entries = 0
1328d1126
< Num_Attr_List_Entries = 0
1346d1143
< Num_Attr_List_Entries = 0
1365d1161
< Num_Attr_List_Entries = 0
1417d1212
< Num_Attr_List_Entries = 0
1471d1265
< Num_Attr_List_Entries = 0
1490d1283
< Num_Attr_List_Entries = 0
1509d1301
< Num_Attr_List_Entries = 0
1562d1353
< Num_Attr_List_Entries = 0
1614d1404
< Num_Attr_List_Entries = 0
1672d1461
< Num_Attr_List_Entries = 0
1727d1515
< Num_Attr_List_Entries = 0
1745d1532
< Num_Attr_List_Entries = 0
1797d1583
< Num_Attr_List_Entries = 0
1815d1600
< Prev_Propagation_Type = unknown
1817,1823c1602
< ================================================================================
< Record_Number = 2
< Replist_Name = replist
< Obj_Acl_Def_Cell_Name = /.../XXX
< Num_Acl_Entries = 1
< Obj_Acl_Entry = user:root:cidmA-
<
---
>
1826c1605
< Rgy_State_File_Version = 8
---
> Rgy_State_File_Version = 6
1831c1610,1611
< Master_File_Version = 2
---
> Software_Version = 0
> Master_File_Version = 1
1835d1614
< Master_Global_Software_Rev = 2

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12867
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Intercell delegation doesn't work.
Reported Date                 : 5/13/95
Found in Baseline             : 1.1unintegrated
Found Date                    : 5/13/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/rca/priv.c
Sensitivity                   : public

[5/13/95 public]

Intercell delegation does not work.  The intermediate server (see the
test scenario below) gets stuck in an infinite loop as the
sec_priv_become_delegate() routine is called recursively.

To reproduce this problem:
0) Configure 2 cells, cellA and cellB and establish a trust peer
   relationship between them.
1) In cellB, add an account and keytab entry for the acl_server example
   program.  Run acl_server ( $ acl_server -d -e).  Modify the ACL on
   /.:/myfilesystem/mike to include the following entries:

        foreign_user:/.../cellA/dlg_test:rwx
        foreign_user_delegate:/.../cellA/dlg_svr:rwx

2) In cellA, add accounts and keytab entries for the delegation client
   and intermediary server (dlg_test and dlg_svr).  There is a rgy_setup
   script that will do this.

3) In cellA, run the intermediary server, specifying an object managed
   by the remote acl_server:

        $ dlg_intermediary -dbg -e /.../cellB/myfilesystem/mike

4) In cellA, run the delegation client with no arguments (except debug):

        $ dlg_client -dbg

5) The dlg_intermediary server will eventually dump core (running out of
   stack space, I presume).  Here is a snippet of the stack generated when
   I sent a SIGQUIT to dlg_intermediary:

[memory image in core]

Quit in dce_ptdexc_setasynccancel at 0xd0166600 ($t8)
0xd0166600 (dce_ptdexc_setasynccancel)    93e1fffc         st   r31,-4(r1)
(dbx) where
dce_ptdexc_setasynccancel(0x0) at 0xd0166600
id_epac_set_encode(0x20404c18, 0x202f0d74), line 1637 in "id_encode_cstub.c"
unnamed block $b397, line 803 in "sec_encode.c"
unnamed block $b396, line 803 in "sec_encode.c"
unnamed block $b395, line 803 in "sec_encode.c"
sec_id_epac_set_decode(0xf041a644, 0xf01837d4, 0x120, 0x2037d168, 0x202f0d74, 0x202f0df8), line 803 in "sec_encode.c"
check_delegation_chain(0x2037d0fc, 0x10001), line 357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x2040ec70, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1269 in
"priv.c"
sec_priv_become_delegate(0x2037c888, 0x2040f090, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in
"priv.c"
sec_priv_become_delegate(0x2037c888, 0x2040f4b0, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in
"priv.c"
sec_priv_become_delegate(0x2037c888, 0x2040f8d0, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in
"priv.c"
        .
        .
        .   Lots and lots more sec_priv_become_delegate calls
        .
        .
sec_priv_become_delegate(0x2037c888, 0x20235b10, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x20235f30, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x20236350, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x20236770, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x20236b90, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x20236fb0, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x202373d0, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x202377f0, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_priv_become_delegate(0x2037c888, 0x2039e518, 0x1, 0x2, 0x10001, 0x2037d110, 0x2037d118, 0x2037d120), line 1357 in "priv.c"
sec_login_util_get_krb_ptgt(0x2037c888, 0x2039e518, 0x1, 0x2, 0x2031c0b4), line 324 in "sec_login_util.c"
sec_krb_get_cred(0x2037c888, 0x2037efa8, 0x5, 0x2, 0x20237ccc, 0x2031c12c), line 640 in "sec_authn.c"
rpc__krb_get_tkt(0x20237c50) at 0xd0e4cacc
rpc__krb_bnd_set_auth(0x2037eea8, 0x5, 0x2037c888, 0x2, 0x20240f10, 0x2031c418, 0x2031ed90) at 0xd0e4d128
rpc_binding_set_auth_info(0x20240f10, 0x2037eea8, 0x5, 0x1, 0x2037c888, 0x2, 0x2031ed90), line 1011 in "comauth.c"
rca_setup_handle(0x2039e118, 0x2031ed90), line 1368 in "internal_binding.c"
rca_site_bind_nsi_cell_if(0x2039e118, 0x202476a0, 0xf03f7d98, 0x2031ed90), line 1940 in "internal_binding.c"
rca_site_bind_nsi_cell(0x2039e118, 0x202476a0, 0x2031ed90), line 2004 in "internal_binding.c"
unnamed block $b135, line 1208 in "internal_binding.c"
rca_nsi_binding_import(0x2039e118, 0x2031ed90), line 1208 in "internal_binding.c"
unnamed block $b150, line 2614 in "internal_binding.c"
rca_site_bind(0x2031cb58, 0x2037ee18, 0x2, 0xf03f6630, 0xd0db5244, 0x2031e18c, 0x2031ddf8, 0x2031ed90), line 2614 in "internal_bindi
ng.c"
sec__id_parse_name(0x2037edc8, 0x0, 0x20250230, 0x2031e18c, 0x2031dde4, 0x2031e58d, 0x2031dde4, 0x2031ed90), line 1369 in "secidmap.
c"
sec_id_parse_name(0x2037edc8, 0x20250230, 0x2031e18c, 0x0, 0x2031e58d, 0x0, 0x2031ed90), line 1426 in "secidmap.c"
sec_krb_sec_parse_name(0x2037c888, 0x5, 0x20250230, 0x2023fcd8), line 456 in "sec_authn.c"
rpc__krb_bnd_set_auth(0x20250230, 0x5, 0x2037c888, 0x2, 0x20247d90, 0x2031ee98, 0x2031ef04) at 0xd0e4d078
rpc_binding_set_auth_info(0x20247d90, 0x20250230, 0x5, 0x1, 0x2037c888, 0x2, 0x2031ef04), line 1011 in "comauth.c"
setup_auth(0x20247d90, 0x2031f0d4), line 332 in "daclbind.c"
sec_acl_bind_auth(0x2000070c, 0x0, 0x2031f0d4, 0x2031f0cc, 0x2031f448), line 627 in "daclbind.c"
dlg_test_access(h = 0x2024e330, deleg_type = 1, component_name = "", permset = 0x2031f444, stp = 0x2031f448), line 592 in "dlg_inter
mediary.c"
dlg_test_access(h = 0x2024e330, deleg_type = 1, component_name = "", permset = 0x2031f444, stp = 0x2031f448), line 592 in "dlg_inter mediary.c"
unnamed block $b9, line 264 in "dlg_test_sstub.c"
dlg_test_sstub.op0_ssr(0x2024e330, 0x20252fb0, 0x2031f708, 0x20252d9c, 0x202531d4, 0x202587f0, 0x2031f6dc), line 264 in "dlg_test_ss
tub.c"
rpc__cn_call_executor(??, ??) at 0xd0cd1ba8
cthread_call_executor(??) at 0xd0bd85ec
_pthread_body(??) at 0xd0152544
(dbx) quit

There seems to be no way the recursion is broken.

The same *intracellular* scenario works fine.  I saw the problem on
IBM product code derived from dce1.124 + unintegrated (no warranty
patch code applied).

[10/5/95 public]
Part of Warranty Patch

[12/20/95 public]
This was fixed in the WP as John said above.   Marked 'closed' (OT won't
let me put 1.1wp as FixedIn, so I had to make it 1.2.1 but it's fixed there
too, so that'll do...).



CR Number                     : 12865
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : delegation
Short Description             : dlgcfg001 system test failures
on WP
Reported Date                 : 5/12/95
Found in Baseline             : 1.1wp
Found Date                    : 5/12/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[05/12/95 public]

The dlgcfg001 system test fails on the warranty patch
bits.

20|/dcetest/dcelocal/test/tet/system/security/tetexec.cfg 1|Config Start
30||TET_VERSION=1.10
30||TET_OUTPUT_CAPTURE=False
30||TET_RESCODES_FILE=tet_code
30||TET_EXEC_IN_PLACE=False
30||TET_NSIG=31
30||TET_SIG_IGN=26
40||Config End
70||"Starting DLGCFG001 Test Suite"
10|0 /ts/dlgcfg001/dlgcfg001 08:37:48|TC Start, scenario ref 77-1
15|0 1.9 1|TCM Start
400|0 1 1 08:37:51|IC Start
200|0 1 08:37:51|TP Start
520|0 1 24866 1 1|Doing dce_login_noexec cell_admin -dce-
520|0 1 24866 1 2|The cell is now authenticated by do_login
520|0 1 24866 1 3|Starting dlgcfg001 audit test
80|0 0 08:40:42|TC End
70||"Completed DLGCFG001 Test Suite"
900|08:40:42|TCC End

standard test:
FAILED: Delegation test; Error from dlg_test_access: Decrypt integrity
check failed (dce / krb)
FAILED: Delegation test; Error from dlg_test_access: Decrypt integrity
check failed (dce / krb)
positive impersonation test:
FAILED: Impersonation test; Error from dlg_test_access: Decrypt integrity
check failed (dce / krb)
FAILED: Delegation test; Error from dlg_test_access: Decrypt integrity
check failed (dce / krb)

[12/20/95 public]
This test no longer fails on WP and
is included in DCE 1.2.1
Closed



CR Number                     : 12852
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 12581
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi test
Short Description             : free's dce_msg_get_cat_msg return data
Reported Date                 : 4/28/95
Found in Baseline             : 1.1
Found Date                    : 4/28/95
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : dce_msg_get_cat_msg
Sensitivity                   : public

[4/28/95 public]

src/test/security/api/gssapi/test-gssapi.c

At lines  997 and 1014 the data returned by dce_msg_get_cat_msg
is free'd.  That's a no-no; remove those lines.  See the related
OT CR for details.

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12846
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Add new switch (-refresh) to dce_login; restore krb5 kinit functionality
Reported Date                 : 4/24/95
Found in Baseline             : 1.1
Found Date                    : 4/24/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/krb5/clients/kinit/kinit.c security/client/dce_login/dce_login.c
Sensitivity                   : public

[4/24/95 public]

During DCE 1.1 development, kinit was changed to call DCE APIs
instead of the krb5 APIs in order to refresh your identity. This
change was necessary in order to take advantage of the DCE
third party preauthentication code.

However, this change affects kerberos interoperability because
kinit can no longer be used to obtain tickets from a generic
krb5 KDC.

The fix is to restore kinit so that it calls the krb5
APIs to retrieve tickets and add the DCE refresh functionality
into dce_login via a new switch (-refresh). DCE clients which
must use third party preauthentication in order to log in
should use dce_login -refresh, not kinit, when refreshing their
identity. kinit can still be used, but will use the timestamps
preauthentication method (which may not be secure enough).

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12845
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd deadlock in auditing with multiple logins
Reported Date                 : 4/19/95
Found in Baseline             : 1.1b23
Found Date                    : 4/19/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/rs/rs_misc.c
Sensitivity                   : public

[4/19/95 public]
For name based authentication, the auditing code makes a call out to
sec_id_parse_name() to determine the uuid corresponding to the name.
During a login, a name based call is made to secd: rs_login_get_info().
If auditing isn't shut off, and 5 (the number of listener threads)
clients call this routine at the same time, secd will deadlock because
the parse_name calls will wind up being queued forever waiting for a
listener thread (this assumes the callouts go to the same secd, which is
extremely likely, given cached handles...).

The fix is to special case name based auditing within secd, since it's
the piece that will end up doing the work to translate the name anyway
(btw, the fix improved the performance a little too).

I've tested the fix with hundreds of clients and the deadlock has not
reappeared (and tests run faster :-).  I've already informed the Warranty
Patch people here that I'll be adding this to their list.

[12/13/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12841
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : password override
Short Description             : Passwd_override file multiple
entries incorrectly interpreted
Reported Date                 : 4/14/95
Found in Baseline             : 1.0.3,1.1
Found Date                    : 4/14/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : admin/dced/server/sv_rover.c
Sensitivity                   : public

[4/14/95 public]

Recent documentation on the passwd_override file (Admin Gd Core, 36.2.12)
explains how multiple entries are handled where the key semantics overlap.
The entry with the principal name takes precedence followed by entries
with the principal UID, then group UID.  In the documented example:

mozart::::::/bin/ksh
:::25:::/bin/csh

This means that for principal mozart, the /bin/ksh override is ineffect,
because mozart is more specific than group 25, even if mozart is in group 25.

I tried this, with the passwd_export utility.  And it doesn't work.  I
still get mozart with /bin/csh.

[4/18/95 public]
I can't test it at the moment, but this must have been tested at some point
in the past...   passwd_override affects what gets put into the passwd file
created by passwd_export and what gets returned by sec_login_get_pwent().
You mention that you 'still get' /bin/csh, but didn't say what you were using
to determine that.  Could you add that info to the CR?
Thanks...

[4/18/95 public]

I took the example out of the book, then ran passwd_export.  Here's the
log:

# rgy_edit
rgy_edit=> do acc
Domain changed to: account
rgy_edit=> v mozart -f
mozart [dwem none]:*:1000:25::/tmp:/bin/sh:
  created by: /.../majik_cell/cell_admin  1995/04/18.14:51
  changed by: /.../majik_cell/cell_admin  1995/04/18.14:51
  password is: valid, was last changed: 1995/04/18.14:51
  Account expiration date: none
  Account MAY be a server principal
  Account MAY be a client principal
  Account is: valid
  Account CAN NOT get post-dated certificates
  Account CAN get forwardable certificates
  Certificates to this service account MAY be issued via TGT authentication
  Account CAN get renewable certificates
  Account CAN NOT get proxiable certificates
  Account CAN NOT have duplicate session keys
  Good since date: 1995/04/18.14:51
  Max certificate lifetime: default-policy
  Max renewable lifetime: default-policy
rgy_edit=> do group
Domain changed to: group
rgy_edit=> view dwem -m
dwem                                          25
  1 members
    mozart
rgy_edit=> exit
# cat /opt/dcelocal/etc/passwd_override
root:daBnIxdAlpQqk:0:1:system PRIVILEGED account:/:/bin/csh
nobody:*Nologin:65534:65534:anonymous NFS user:/:
bin:*:3:4:system librarian account:/bin:
uucp:Nologin:4:2:UNIX-to-UNIX
Copy:/usr/spool/uucppublic:/usr/lib/uucp/uucico
mozart::::::/bin/ksh
:::25:::/bin/csh
# passwd_export -d /tmp
# cat /tmp/passwd
nobody:*Nologin:65534:65534:anonymous NFS user:/:
root:daBnIxdAlpQqk:0:1:system PRIVILEGED account:/:/bin/csh
daemon:*:1:1::/:
uucp:Nologin:4:2:UNIX-to-UNIX
Copy:/usr/spool/uucppublic:/usr/lib/uucp/uucico
bin:*:3:4:system librarian account:/bin:
dce-ptgt:*:20:12::/:
dce-rgy:*:21:12::/:
krbtgt/majik_cell:*:31:12::/:
cell_admin:*:30:12::/:
hosts/majik/self:*:32:12::/:
hosts/majik/cds-server:*:33:107::/:
hosts/majik/gda:*:34:107::/:
hosts/majik/pc-user:*:35:111::/:
mozart:*:1000:25::/tmp:/bin/csh

[4/18/95 public]
Thanks, that's the info I was asking for.  It looks like the weights assigned
to the different override types at the top of the file
src/admin/dced/server/sv_rover.c are completely backwards from what they
should be.  Rich, John, any comment on why it was done this way or is it
just a bug?

[4/19/95 public]
I didn't think was mucked with what was given to us by hp.
Rob Baum did most of the testing for this piece.  I'm not sure how extensive
it was.  (I do know that we did not do all that much testing in this area
because the code from the provider was delivered later than planned.)

[04/19/95 public]
Er, it was done that way because it was a bug? :-)

[4/19/95 public]
In response to Rich's comment, that's what I was hoping to hear (I was afraid
something else depended on those weights).
In response to John's comment, we didn't provide the override code in dced,
the OSF did.  We provided the override code in sec_clientd in DCE1.0.3, and
someone rewrote it when putting it into dced.  I haven't tested this same
scenario with 1.0.3, but I don't see the same bug in that code while inspecting
the source...  We'll try to squeeze a fix for this into the warranty patch
if possible.

[4/19/95 public]
Ah, that makes sense.  When Rob was integrating sec_clientd (and other) code
into DCED, he said he was tempted to "fix" a bunch of stuff.  Probably one
of his fixes...

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12838
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : gss_inquire_cred fails for default cred
Reported Date                 : 4/7/95
Found in Baseline             : 1.1
Found Date                    : 4/7/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : gssapi.c
Sensitivity                   : public

[4/7/95 public]
gss_inquire_cred doesn't return correct results if you pass it the
default credential handle.  Instead it returns an invalid credential
error.

[4/7/95 public]
The following code-changes provide support for interrogation of the default
credential by gss_inquire_cred.  This change is additional code at the
start of the gss_inquire_cred routine in gssapi.c.

************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;5
 9372
 9373    unsigned32 contextual_lifetime;
 9374
 9375    *minor_status = gssdce_s_operation_incomplete;
 9376    GSS_INIT;
 9377    if ( (cred = resolve_cred(cred_handle) ) == NULL) {
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;7
 9372    unsigned32 contextual_lifetime;
 9373    sec_login_handle_t login_context;
 9374    error_status_t error_status;
 9375    sec_cred_pa_handle_t cred_pa_handle;
 9376    sec_id_pa_t * sec_id_pas;
 9377    sec_rgy_bind_auth_info_t binding_info;
 9378    sec_rgy_name_t site_name;
 9379    sec_rgy_handle_t rgy_context;
 9380    int retry_count = 0;
 9381    sec_rgy_name_t principal_name;
 9382    sec_rgy_name_t principal_realm_name;
 9383    sec_rgy_name_t principal_local_name;
 9384
 9385    *minor_status = gssdce_s_operation_incomplete;
 9386    GSS_INIT;
 9387
 9388    site_name[0] = 0;
 9389
 9390    if (cred_handle == GSS_C_NO_CREDENTIAL) {
 9391   /* This is a request to use the default credential. The default credential */
 9392   /* is a "virtual" credential, using the default login-context, and */
 9393   /* supporting the DCE mech-type for initiate-only use. */
 9394   /* Return the user the information he's asked for Possibilities are: */
 9395   /* name */
 9396   /* lifetime */
 9397   /* cred_usage */
 9398   /* mechanisms */
 9399
 9400    if (name != NULL) {
 9401   /* To extract the client-name from the login context, we have to work hard */
 9402   /* First get an explicit handle to the default login-context... */
 9403    sec_login_get_current_context(&login_context,
 9404    &error_status);
 9405    if (error_status != error_status_ok) {
 9406    *minor_status = error_status;
 9407    return GSS_S_NO_CRED;
 9408    };
 9409
 9410   /* We'll be pulling the client's UUID from the default-context's PAC. To */
 9411   /* convert that to a name, we'll have to talk to the registry. We'll use */
 9412   /* the default-context to do that. Set up a binding_info structure for  */
 9413   /* registry lookup... */
 9414
 9415    binding_info.info_type = sec_rgy_bind_auth_dce;
 9416    binding_info.tagged_union.dce_info.authn_level =
 9417    rpc_c_authn_level_default;
 9418    binding_info.tagged_union.dce_info.authn_svc =
 9419    rpc_c_authn_dce_secret;
 9420    binding_info.tagged_union.dce_info.authz_svc = rpc_c_authz_dce;
 9421    binding_info.tagged_union.dce_info.identity = login_context;
 9422
 9423   /* Now bind to the registry... */
 9424   retry:
 9425    sec_rgy_site_bind(site_name,
 9426    &binding_info,
 9427    &rgy_context,
 9428    &error_status);
 9429
 9430    if (error_status != error_status_ok) {
 9431    if (retry_count < MAX_RGY_RETRIES) {
 9432    retry_count++;
 9433    site_name[0] = 0;
 9434    goto retry;
 9435    };
 9436   #ifdef GSS_SVC_CODE
 9437    gss_svc_printf(
 9438    svc_c_sev_error,
 9439    GSS_MSG("Error - retry count exceeded (%X)"),
 9440    error_status);
 9441   #else
 9442    dce_svc_printf(GSS_S_FRC_RETRY_EXCEEDED_MSG, error_status);
 9443   #endif
 9444    *minor_status = gssdce_s_no_rgy_available;
 9445    sec_login_release_context(&login_context, &error_status);
 9446    return GSS_S_FAILURE;
 9447    };
 9448
 9449   /* Now that we know we can speak to the registry, extract the initiator's */
 9450   /* pa-handle from the context... */
 9451    cred_pa_handle = sec_login_cred_get_initiator(login_context,
 9452    &error_status);
 9453
 9454    if (error_status != error_status_ok &&
 9455    error_status != sec_login_s_not_certified) {
 9456    *minor_status = error_status;
 9457    sec_rgy_site_close(rgy_context, &error_status);
 9458    sec_login_release_context(&login_context, &error_status);
 9459    return GSS_S_FAILURE;
 9460    };
 9461
 9462   /* Then get down to the pa-data */
 9463    sec_id_pas = sec_cred_get_pa_data(cred_pa_handle, &error_status);
 9464
 9465    if (error_status != error_status_ok &&
 9466    error_status != sec_login_s_not_certified) {
 9467    *minor_status = error_status;
 9468    sec_rgy_site_close(rgy_context, &error_status);
 9469    sec_cred_free_pa_handle(&cred_pa_handle, &error_status);
 9470    sec_login_release_context(&login_context, &error_status);
 9471    return GSS_S_FAILURE;
 9472    };
 9473   /* Now we have the client UUID in sec_id_pas->principal.uuid. We have to */
 9474   /* convert this to a name for the caller. Ask the registry to translate it */
 9475   /* for us... */
 9476
 9477    sec_id_gen_name(rgy_context,
 9478    &sec_id_pas->realm.uuid,
 9479    &sec_id_pas->principal.uuid,
 9480    principal_name,
 9481    principal_realm_name,
 9482    principal_local_name,
 9483    &error_status);
 9484
 9485    if (error_status != error_status_ok) {
 9486    *minor_status = error_status;
 9487    sec_rgy_site_close(rgy_context, &error_status);
 9488    sec_cred_free_pa_handle(&cred_pa_handle, &error_status);
 9489    sec_login_release_context(&login_context, &error_status);
 9490    return GSS_S_FAILURE;
 9491    };
 9492
 9493   /* Now we have the name in principal_name. Copy it to the caller's */
 9494   /* argument. First, though clean up the stuff we don't need anymore. */
 9495
 9496    sec_rgy_site_close(rgy_context, &error_status);
 9497    sec_cred_free_pa_handle(&cred_pa_handle, &error_status);
 9498    sec_login_release_context(&login_context, &error_status);
 9499
 9500    string_to_irep(principal_name,
 9501    name,
 9502    &error_status);
 9503    if (error_status != error_status_ok) {
 9504    *minor_status = error_status;
 9505    return GSS_S_FAILURE;
 9506    };
 9507
 9508    };
 9509
 9510    if (mechanisms != NULL) {
 9511   /* The default cred is good for DCE only... */
 9512    nm_oid_set_create_empty(mechanisms);
 9513    nm_oid_set_add_elem(mechanisms, GSSDCE_C_OID_DCE_KRBV5_DES);
 9514    };
 9515
 9516    if (cred_usage != NULL) {
 9517   /* It can only be used to initiate contexts... */
 9518    *cred_usage = GSS_C_INITIATE;
 9519    };
 9520
 9521    if (lifetime != NULL) {
 9522    sec_login_get_expiration(sec_login_default_handle,
 9523    (signed32 *)&contextual_lifetime,
 9524    &xerr);
 9525   /* Why is lifetime in the above signed??? */
 9526    if (xerr == sec_login_s_not_certified) {
 9527    xerr = 0;
 9528    };
 9529
 9530    if (xerr) {
 9531    *lifetime = 0;
 9532   /* There's a problem with the user's login-context */
 9533    } else {
 9534    *lifetime = contextual_lifetime;
 9535    };
 9536    };
 9537
 9538    } else {
 9539    if ( (cred = resolve_cred(cred_handle) ) == NULL) {
************
************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;5
 9419
 9420    };
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;7
 9581    };
************
************
File USER$776:[WRAY.GSSAPI]GSSAPI.C;5
 9441    *minor_status = gssdce_s_success;
******
File USER$776:[WRAY.GSSAPI]GSSAPI.C;7
 9602    };
 9603   done:
 9604    *minor_status = gssdce_s_success;
************

Number of difference sections found: 3
Number of difference records found: 170

x
u

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12836
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : client/rca
Short Description             : TOWER_VEC_FREE() macro in rca_pvt.h doesn't use provided free routine to free pointer
Reported Date                 : 4/5/95
Found in Baseline             : 1.1
Found Date                    : 4/5/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[4/5/95 public]

Customer reported the following problem:

Hardware/Software Configuration
- --------------------------------

Offering and Version:   DCE 1.1
Component (Module):     sec
Client Hardware:        x86
Client Software:        Unixware 2.0
Server Hardware:        SAME
Server Software:        SAME
Compiler:               Unixware cc

Problem Description
- --------------------

Severity Level: Critical

Date of First Occurrence: March 27 , 1995

One Line Description:

	TOWER_VEC_FREE() macro in rca_pvt.h doesn't use provided free
routine to free pointer

Full Description:

	TOWER_VEC_FREE takes two arguments: a tower vector and a routine
to free it with.  It free's the individual tower in the vector using
this rouinte, but call's "free" to free the vector pointer itself.

Repeat By:

	Run a debugging malloc/free package on dced when running the
dcecp 'keytab/ktb' tests, and observe the error generated by the
call to TOWER_VEC_FREE in rca_site_resolve_update()
[ from src/client/rca/internal_binding.c].

Proposed Solution:

In rca_pvt.h, change TOWER_VEC_FREE to use the provided free routine:


*** /animal/build/dce1.1/src/security/client/rca//rca_pvt.h	Mon Dec 12 21:43:19 1994
--- rca_pvt.h	Mon Mar 27 13:16:24 1995
***************
*** 7,12 ****
--- 7,13 ----
   */
  /*
   * HISTORY
+  * Use routine parameter to free towerv point also TOWER_VEC_FREE.
   * $Log:	c012836,v $
# Revision 1.2  95/12/19  15:03:44  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [parul 4/5/95 public] [parul 4/5/95 public]
# 
# Revision 1.1  95/04/05  16:47:06  root
# new CR
# 
   * Revision 2.1  1994/12/13  02:41:11  devrcs
   * OSF DCE 1.1 Source
***************
*** 235,241 ****
  	do {	unsigned32 i; \
  		for (i=0; i<towerv->num_towers; i++) \
  			routine(towerv->towers[i]); \
! 		free (towerv); \
  	} while (0)
  
  
--- 236,242 ----
  	do {	unsigned32 i; \
  		for (i=0; i<towerv->num_towers; i++) \
  			routine(towerv->towers[i]); \
! 		routine(towerv); \
  	} while (0)

[1`2/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12811
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : The DESCRIPTION for acl_edit is missing part of a sentence
Reported Date                 : 3/1/95
Found in Baseline             : 1.1
Found Date                    : 3/1/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1PH
Affected File(s)              : man8sec/acl_edit.8sec
Sensitivity                   : public

[3/1/95 public]

 The acl_edit(1sec) man page is missing part of a sentence in the DESCRIPTION
 section. The man page currently reads:
 DESCRIPTION
 [...]

                                                   If, on the the
      ACL on the object to which the directory entry refers - then
      you simply omit the -e option. [...]

 It should read (according to the Prentice Hall version):

                                                   If, on the other
      hand, you want to access the ACL on the object to which the
      directory entry refers - then you simply omit the -e option. [...]

[9/14/95 public]

I'm assigning this to myself, but Bob Binstock (here at OSF)
and I had a conversation yesterday in which he agreed to make
the change.

[9/19/95]

And he is good to his word.  Correction made as above.



CR Number                     : 12808
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : utils
Short Description             : Trivial but serious typo
Reported Date                 : 2/28/95
Found in Baseline             : 1.1
Found Date                    : 2/28/95
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : security/utils/sec_authn.c
Sensitivity                   : public

[2/28/95 public]

I have noticed the following typo in sec_krb_decode_msg_common_frags()
routine that leaves *authentP dangling when it was meant to be set to NULL:

  1810              *authz_proto = rpc_c_authz_name;
  1811              *authentP == NULL;
  1812
  1813              authP->authz_svc = *authz_proto;

  1841              /* !!! what if it blew out? */
  1842              *authz_proto = rpc_c_authz_dce;
  1843              authP->authz_svc = *authz_proto;
  1844
  1845              *authentP == NULL;
  1846
  1847              if (GOOD_STATUS(&st)) {

On line 1811 & 1845 change '==' to '='.

[7/21/95 public]
Submitted to 1.1 maintenance code.

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12799
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd can be crashed
Reported Date                 : 2/21/95
Found in Baseline             : 1.1
Found Date                    : 2/21/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/utils/sec_cred_internals.c
Sensitivity                   : public

[2/21/95 public]

 In security/utils/sec_cred_internal.c, the sec__cred_create_authz_handle()
 initializes the magic cookie of the input authz_cred_handle well before
 establishing a pointer to data.
 
 In the case that it is the dummy_cred_h during rs_auth_init() time,
 this code can cross with an attempt to dce_login and the following
 calling sequence on it's behalf:
  
 
 0x24306500: rs_auth_get_creds_from_hdl_name_ok+0x98(0x241c4408, 0x0, 0x243066a0, 0x24306610, 0x24306be8)
 0x24306598: rs_auth_get_creds_from_handle+0x58(0x241c4408, 0x243066a0, 0x24306be8)
 0x24306618: rs_is_authorized+0x44(0x241c4408, 0x0, 0x0, 0x24306728, 0x1443ed8, 0x0, 0x24306bc8, 0x24306be8)
 0x243066a8: rs_auth_is_authorized+0x96(0x241c4408, 0x0, 0x0, 0x0,0x243078b0, 0x1443ed8, 0x0, 0x24306bc8, 0x24306be8)
 
 0x24306b30: rsec_id_parse_name+0x3ea(0x241c4408, 0x0, 0x24307094, 0x16, 0x2430749c, 0x243078a0, 0x243078b0, 0x24307cb4, 0x24307ce0)
 0x24306cd0: rsec_id_parse_name_cache+0x74(0x241c4408, 0x0, 0x24307094,
0x16, 0x2430749c, 0x243078a0, 0x243078b0, 0x24307cb4, 0x24307cc4, 0x24307ce0)
 0x24306d58: op3_ssr+0x2e6(0x241c4408, 0x241df008, 0x24307e14, 0x24307df8, 0x147b110, 0x1428900, 0x24307e00)
 0x24307d70: rpc__dg_execute_call+0x203e(0x241df008, 0x0)
 0x24307e90: cthread_call_executor+0x3e8(0x241dfaa4)
 0x24307f28: _pthread_body+0x74(0x2403c108)
 
 and copy the dummy_cred_h.
 
 
 
 The client then receives a handle with a valid magic cookie, but a NULL
 ptr. for data.  When this is subsequently passed back to the secd, it will
 cause secd to dump core.
 
 
 To see this happen, merely add a delay after the magic cookie initialization
 of long enough duration to allow dce_login.
 
 Solution: don't initialize magic cookie before data ptr.

*** sec_cred_internal.c Tue Feb 21 14:04:56 1995
--- sec_cred_internal.c.new     Tue Feb 21 14:06:02 1995
***************
*** 411,417 ****
      int                     i;
      error_status_t          rst;
  
-     authz_cred_handle->magic = AUTHZ_CRED_HANDLE_MAGIC;
      cred_handle = (sec__cred_handle_t *)
MALLOC(sizeof(sec__cred_handle_t));
      if (cred_handle == NULL) {
        return sec_s_no_memory;
--- 411,416 ----

[2/21/95 public]

While this is a good suggestion for improved
robustness in the sec_cred module, it does 
not solve the real problem, which is that 
the secd code is using a global variable in
a non-threadsafe way.  The dummy_cred_h 
handle should either be constructed before
any RPC listener threads are started (i.e.
while secd is still single-threaded), or
be intialized on demand from within a
pthread_once block.

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12797
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd can deadlock during shutdown
Reported Date                 : 2/16/95
Found in Baseline             : 1.1
Found Date                    : 2/16/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : secd
Sensitivity                   : public

[2/16/95 public]

                          DCE Problem Report
                  =================================


Submitter Information 
----------------------

Submitter Name:           rusman
Organization:             Hitachi Computer Products (America), Inc. 
Email Address:            osd.dce@hi.com rusman@hi.com 
Phone:                    617-890-0444 
DCE License Number:       1616-MDCE-92
Licensee's Defect Number: OSDqa10588


Hardware/Software Configuration
--------------------------------

Offering and Version:   DCE1.1 
Component (Module):     server/rs/rs_rep_mgmt.c 
Client Hardware:        see below 
Client Software:        see below 
Server Hardware:        see below 
Server Software:        see below 
Compiler:               n/a

Problem Description
--------------------

Severity Level: Fatal

Date of First Occurrence: 02/09/95

One Line Description:
   OSDqa10588 secd can deadlock during shutdown

Full Description:

Related-file:::: Problem
 DESCRIPTION:
 
 When issuing a stop command from within sec_admin, we happened to
 catch a window causing secd to deadlock.  The problem is that the
 thread doing the shutdown holds a global database lock in write-mode,
 attempts to do an RPC to unregister itself, and thereby tries to acquire
 the rpc_g_global_mutex .  A second thread, however, happens to be holding the
 rpc_g_global_mutex and it trying to get a read lock on the database.
 See the stack traces provided below.
 
 Our suggested solution is to demote the database lock in 
 rs_rep_mgmt_shutdown() before calling rs_server_unregister().
 We believe this modification applies equally well to
 rs_rep_mgmt_delete() as well.
 
 
 
 0x242b32b0: swtch_pri+0x30(0x0)
 0x242b3310: _vp_yield+0x32()
 0x242b3378: pthread_yield+0x2c()
 0x242b33d8: pthread_mutex_wait_lock+0x8c(0x153a228)
 0x242b3448: pthread_mutex_lock+0xe2(0x153a228)
 0x242b34b8: ptdexc_mutex_lock+0x34(0x153a228)
 0x242b3528: rpc__dg_binding_copy+0xcc(0x2403d908, 0x2403d608, 0x242b3874)
 0x242b35b0: rpc_binding_copy+0x390(0x2403d908, 0x242b37b8, 0x242b3874)
 0x242b3650: get_ep_binding+0x1d4(0x2403d908, 0x242b37b8, 0x242b3874)
 0x242b3728: rpc_ep_unregister+0x14c(0x1420e1c, 0x2403ba88, 0x242b3868, 0x242b387
 4)
 0x242b37e0: rs_server_unregister+0x78()
 0x242b3878: rs_rep_mgmt_shutdown+0x296(0x242b3d38)
 0x242b3900: rs_rep_admin_stop+0x220(0x241c7a08, 0x242b3d38)
 0x242b3a38: op0_ssr+0x258(0x241c7a08, 0x241c9808, 0x242b3e54, 0x24349e80, 0x241c
 9a34, 0x14266e8, 0x242b3e88)
 0x242b3dc8: rpc__cn_call_executor+0xef8(0x241c9808, 0x0)
 0x242b3e90: cthread_call_executor+0x3e8(0x241df870)
 0x242b3f28: _pthread_body+0x74(0x2403c508)
 
 has database locked for writes and waits for rpc global
 
 
 
 0x2437e950: msg_receive_trap+0x40(0x2437eaa4, 0x0, 0x18, 0x3b, 0x0)
 0x2437e9b0: msg_receive+0x56(0x2437eaa4, 0x0, 0x0)
 0x2437ea30: _vp_event_wait+0xfa(0x241c6c08, 0x2437ebbc, 0x0)
 0x2437ead0: _pthread_event_wait+0xda(0x24032508, 0x2437ebbc, 0x0, 0x0)
 0x2437eb48: pthread_cond_wait+0x1ca(0x24033da4, 0x24033d98)
 0x2437ebc8: rwl_read_lock+0x246(0x87654321, 0x1, 0x24033d88)
 0x2437ed68: lock+0x64(0x0, 0x0)
 0x2437ede0: rs_rep_util_enable_event+0x8c(0x1, 0x0, 0x0, 0x0, 0x2437eef0, 0x2437
 f400)
 0x2437ee50: rs_get_auth_key+0x1a4(0x0, 0x24337928, 0x1, 0x1, 0x2437f4ac, 0x2437f
 400)
 0x2437f380: sec_krb_keyproc+0x11a(0x0, 0x243373a8, 0x1, 0x1, 0x2437f4ac)
 0x2437f430: krb5_rd_req_decoded+0xd4(0x24337868, 0x0, 0x0, 0x0, 0x11c8190, 0x0,
 0x0, 0x2437f7f8)
 0x2437f4d8: krb5_rd_req+0xea(0x2437f5f0, 0x0, 0x0, 0x0, 0x11c8190, 0x0, 0x0, 0x2
 437f7f8)
 0x2437f568: sec_krb_decode_msg_common_frags+0x1ae(0x2437f8b4, 0x2, 0x2433e194, 0
 x2433e1a0, 0x2433e1a4, 0x0, 0x2433e1f4, 0x2437f8bc, 0x2437f814, 0x2437f7f8, 0x24
 33e120)
 0x2437f770: sec_krb_cn_decode_message+0x9a(0x2437f8b4, 0x2, 0x2433e1a0, 0x2433e1
 a4, 0x2433e1f4, 0x2433e194, 0x2433e120, 0x2437f8c8, 0x2437f8bc, 0x2433e30c, 0x24
 33e310)
 0x2437f820: rpc__krb_cn_vfy_client_req+0x26c(0x241de0f4, 0x24038948, 0x2434c078,
  0x1b8, 0x0, 0x2437f970)
  0x2437f8d8: rpc__cn_assoc_process_auth_tlr+0x3ca(0x241de008, 0x2434c028, 0x208,
  0x2414a028, 0x2437fad0, 0x2437fad4, 0x241de104, 0x0, 0x241de038)
  0x2437fa30: do_alter_cont_req_action_rtn+0x29c(0x241de008, 0x2434c008, 0x241de01
  0)
  0x2437faf0: incr_do_alter_action_rtn+0xf0(0x241de008, 0x2434c008, 0x241de010)
  0x2437fb70: rpc__cn_sm_eval_event+0xa6(0x67, 0x2434c008, 0x241de008, 0x241de010)
 
  0x2437fbf0: receive_dispatch+0x2970(0x241de008)
  0x2437fd90: rpc__cn_network_receiver+0xb8c(0x241de008)
  0x2437ff28: _pthread_body+0x74(0x241c6c08)
 
 has rpc global and waits for database read lock.
Related-file::Added 950209 by rusman:: /build/hiosfm/RCS/dce1.1/src/security/server/rs/./rs_rep_mgmt.c,v 7.2
 /build/hiosfm/RCS/dce1.1/src/security/server/rs/./rs_rep_mgmt.c,v 7.2
 rusman 1995/02/09 19:17:25 +52 -4
 Reason:  OSDqa10588 secd can deadlock during shutdown
 demote the global lock if promoted to avoid deadlock with RPCs
 
     *** /tmp/ci.24030..rs_rep_mgmt.c.24064.1	Thu Feb  9 14:17:27 1995
     --- /tmp/rs_rep_mgmt.c.24064.2	Thu Feb  9 14:17:27 1995
     ***************
     *** 1270,1280 ****
         (
           error_status_t  *st
         )
       {
           error_status_t  lst;
     ! 
           CLEAR_STATUS(st);
       
           switch(rs_state.rep_state) {
           case rs_c_state_closed:
           case rs_c_state_deleted:
     --- 1270,1282 ----
         (
           error_status_t  *st
         )
       {
           error_status_t  lst;
     ! #ifdef hitm
     !     int need_demote = 0;
     ! #endif
           CLEAR_STATUS(st);
       
           switch(rs_state.rep_state) {
           case rs_c_state_closed:
           case rs_c_state_deleted:
     ***************
     *** 1284,1307 ****
     --- 1286,1318 ----
           }
       
           switch(rs_state.rep_state) {
           case rs_c_state_unknown_to_master:
               GLOBAL_RIW_PROMOTE;
     + #ifdef hitm
     + 	need_demote++;
     + #endif
               rsdb_close_files();
               rsdb_state_close();
               rsdb_delete_rgy_files();
               break;
       
           case rs_c_state_uninitialized:
               GLOBAL_RIW_PROMOTE;
     + #ifdef hitm
     + 	need_demote++;
     + #endif
               rsdb_close_files();
               rs_mkey_purge();
               rsdb_state_close();
               break;
       
           case rs_c_state_initializing:
               GLOBAL_RIW_PROMOTE;
     + #ifdef hitm
     + 	need_demote++;
     + #endif
               rsdb_close_files();
               rs_mkey_purge();
               rsdb_state_close();
               break;
       
     ***************
     *** 1310,1319 ****
     --- 1321,1333 ----
                * promote global RIW lock 
                */
               rsdb_shutdown(lock_mode_riw);
               rs_mkey_purge();
               rsdb_state_close();
     + #ifdef hitm
     + 	need_demote++;
     + #endif
               break;
       
           case rs_c_state_renaming:
               /* shouldn't have been able to get the
                * global RIW lock when in this state.
     ***************
     *** 1335,1351 ****
     --- 1349,1371 ----
           case rs_c_state_copying_dbase:
               /* Promote global RIW lock when
                * copy finishes.
                */
               GLOBAL_RIW_PROMOTE;
     + #ifdef hitm
     + 	need_demote++;
     + #endif
               rsdb_shutdown(lock_mode_write);
               rs_mkey_purge();
               rsdb_state_close();
               break;
       
           case rs_c_state_in_maintenance:
               GLOBAL_RIW_PROMOTE;
     + #ifdef hitm
     + 	need_demote++;
     + #endif
               rs_mkey_purge();
               break;
       
           case rs_c_state_mkey_changing:
               /* shouldn't have been able to get the
     ***************
     *** 1377,1386 ****
     --- 1397,1409 ----
            * the master yet.
            */
           case rs_c_state_becoming_master:
           case rs_c_state_becoming_slave:
               GLOBAL_RIW_PROMOTE;
     + #ifdef hitm
     + 	need_demote++;
     + #endif
               rsdb_close_files();
               rs_mkey_purge();
               rsdb_state_close();
               break;
       
     ***************
     *** 1402,1412 ****
     --- 1425,1444 ----
       
           if (GOOD_STATUS(st)) {
               /* should have global write lock now
                */
               rs_state_set_state_volatile(rs_c_state_closed, &lst);
     + #ifdef hitm
     + 	if (need_demote)
     + 		GLOBAL_RIW_DEMOTE;
     + #endif
               rs_server_unregister();
     +     } else {
     + #ifdef hitm
     + 	if (need_demote)
     + 		GLOBAL_RIW_DEMOTE;
     + #endif
           }
       }
       
       PUBLIC void rs_rep_mgmt_delete
         (
     ***************
     *** 1427,1439 ****
     --- 1459,1485 ----
           rs_state_set_state(rs_c_state_deleted, st);
           if (BAD_STATUS(st)) return;
       
           rsdb_get_my_server_name(my_name);
           dce_cf_get_cell_name((char **) &cell_name, st);
     + #ifdef hitm
           if (BAD_STATUS(st)) return;
     + #else
     +     if (BAD_STATUS(st)) {
     +         GLOBAL_RIW_DEMOTE;
     + 	return;
     +     }
     + #endif
           rs_ns_name_compose(cell_name, my_name, &full_name, st);
     + #ifdef hitm
           if (BAD_STATUS(st)) return;
     + #else
     +     if (BAD_STATUS(st)) {
     +         GLOBAL_RIW_DEMOTE;
     + 	return;
     +     }
     + #endif
           rs_ns_server_delete_name(full_name, st);
           if (BAD_STATUS(st)) {
               dce_svc_printf(DCE_SVC(sec_svc_handle, ""),
                              sec_s_rs_rep , svc_c_sev_error , *st);
               dce_svc_printf(SEC_REP_NM_NOT_DELETED_MSG, full_name);
     ***************
     *** 1441,1451 ****
       
           rsdb_close_files();
           rs_mkey_purge();
           rsdb_state_close();
           rsdb_delete_rgy_files();
     ! 
           rs_server_unregister();
       
           CLEAR_STATUS(st);
       }
       
     --- 1487,1499 ----
       
           rsdb_close_files();
           rs_mkey_purge();
           rsdb_state_close();
           rsdb_delete_rgy_files();
     ! #ifdef hitm
     !     GLOBAL_RIW_DEMOTE;
     ! #endif
           rs_server_unregister();
       
           CLEAR_STATUS(st);
       }

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12787
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : code within switch statement which belongs to no case
Reported Date                 : 1/27/95
Found in Baseline             : 1.1
Found Date                    : 1/27/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : security/client/login/sec_authn.c
Sensitivity                   : public

[1/27/95 public]

in function  sec_krb_decode_msg_common_frags of file
security/client/login/sec_authn.c there is a switch statement which
looks lik the following

   if (st == KRB5KRB_AP_ERR_MSG_TYPE)
    {
        /* !!! fill in server name? */
        /* this looks like it could be a level_none request instead.. */
        switch (message->data[0]) {

        authP->authenticated = false;
        authP->server_princ_name = NULL;

	case rpc_c_authz_name:

The first two statements within the switch block are never executes since
they belong to no case. Either remove these statements or position them
in fromn of the switch statement.

[6/8/95 public]
To fix this, simply move two authP statements before switch statement.

Fixed locally.

[7/21/95 public]
Submitted to 1.1 maintenance code.

*** /project/dce/build/dce1.1-maint/src/security/utils/sec_authn.c      Mon Jun  5 17:47:10 1995
--- sec_authn.c Mon Jul 17 15:12:09 1995
***************
*** 1804,1813 ****
      {
          /* !!! fill in server name? */
          /* this looks like it could be a level_none request instead.. */
-         switch (message->data[0]) {
  
          authP->authenticated = false;
          authP->server_princ_name = NULL;
  
          case rpc_c_authz_name:
              message->data[message->length-1] = '\0';
--- 1804,1814 ----
      {
          /* !!! fill in server name? */
          /* this looks like it could be a level_none request instead.. */
  
          authP->authenticated = false;
          authP->server_princ_name = NULL;
+ 
+         switch (message->data[0]) {
  
          case rpc_c_authz_name:
              message->data[message->length-1] = '\0';

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12779
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : sedd 1.0.3 to 1.1 auto conversion fails
Reported Date                 : 1/20/95
Found in Baseline             : 1.1
Found Date                    : 1/20/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/rsdb/rsdb_compat.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Status               : 

[1/20/95 public]
In a cell with no replicas, the secd is supposed to be able
to autom,aically convert a 1.0.3 security database to 1.1
format. In trying to do so, I found that secd core dumps
after having produce the following message in secd.log
#  more /opt/dcelocal/var/security/secd.log
1995-01-20-11:24:11.019-05:00I----- secd FATAL sec rs_mkey rs_mkey.c 1257
0x2
00b91e8
Unrecognized master key version decrypting account key
#

[3/31/95 public]
The fix of this bug will be included in the waranty patch. A diff
file for .../security/server/rsdb/rsdb_compat.c is as follows.
11,13d10
<  * Revision /main/.../bugfix/3  1995/02/09  15:21 UTC  hanfei
<  *    bug fix : don't do rs_log_replay and rs_log_truncate in the db conversion.
<  *
1938,2002d1934
< /* r s d b _ c o m p a t _ d c e 1 1 _ c h e c k p t
<  *
<  * Save the in-memory copy of the database to disk.
<  * Set state to next_rep_state after database has
<  * been saved.
<  *
<  * Invoking routine must lock_global_riw or lock_global_write
<  * if it needs a lock (ie. is multi-threaded or rpc_listening)
<  *
<  * Compare with rsdb_checkpt ( rs_rsdb.c ), this routine
<  * does not issue rs_log_truncate.
<  */
< PRIVATE void rsdb_compat_dce11_checkpt
<   (
<     unsigned32      next_rep_state,
<     lock_mode_t     lock_mode,
<     error_status_t  *st
<   )
< {
<
<     CLEAR_STATUS(st);
<
<     switch(rs_state.rep_state) {
<         case rs_c_state_initializing:
<             break;
<         case rs_c_state_in_service:
<             break;
<         case rs_c_state_mkey_changing:
<             break;
<
<         default:
<             dce_svc_printf(DCE_SVC(sec_svc_handle, ""),
<                            sec_s_rs_rsdb,
<                            svc_c_sev_error,
<                            sec_rgy_rep_bad_state);
<             SET_STATUS(st, sec_rgy_rep_bad_state);
<             return;
<     }
<
<     rsdb_delete_files(".new", st);
<     if (BAD_STATUS(st)) return;
<
<     rsdb_save(".new", st);
<     if (BAD_STATUS(st))
<         SEC_SVC_PRINT_MSG_ST(SEC_RGY_RSDB_CHECKPT_MSG, *st);
<
<     if (lock_mode == lock_mode_riw)
<         lock_promote_global();
<
<     rs_state_set_state_renaming(next_rep_state, st);
<     if (BAD_STATUS(st)) return;
<
<     rsdb_close_files();
<
<     rsdb_rename_files(".new", "", st);
<     if (BAD_STATUS(st))
<         SEC_SVC_PRINT_MSG_ST(SEC_RGY_CHECKPT_RENAME_FILES_MSG, *st);
<
<     rsdb_open_files();
<
<     rs_state_set_state(next_rep_state, st);
<     if (BAD_STATUS(st))
<         SEC_SVC_PRINT_MSG_ST(SEC_RGY_CHECKPT_SAVE_REP_STATE_MSG, *st);
< }
<
2078c2010,2015
<     rsdb_compat_dce11_checkpt(rs_state.rep_state, lock_mode_write, st_p);
---
>     /* before check point is done, do a log replay before */
>     /* log could be truncated                             */
>     rs_log_replay(st_p);
>     if(BAD_STATUS(st_p)) {
>         return;
>     }
2079a2017,2021
>     /* Save the dce11-formatted database to disk. */
>     rsdb_checkpt(rs_state.rep_state, lock_mode_write, st_p);
>     if(BAD_STATUS(st_p)) {
>         return;
>     }

[12/19/95 public]
Fixed in DCE 1.2.1
Closed

[1/29/96 public]
Request for clarification: it appears that the diff above is reversed, i.e.:
< NEW
> OLD
Is that the case?
Added field Transarc Deltas with value `' 
Added field Transarc Status with value `'

[1/30/96 public]
Confirmed.  You are right.
< is NEW and
> is OLD.



CR Number                     : 12777
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec: acl_edit
Short Description             : unauth gets wrong acl manager
Reported Date                 : 1/18/95
Found in Baseline             : 1.1
Found Date                    : 1/18/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security
Sensitivity                   : public

[1/18/95 public]
  
There's a test group here that claims that they are getting the wrong
ACL when using acl_edit to inspect the ACLs for an Encina server they
are running. Well, not the wrong ACL -- but the wrong OBJECT, indeed an
object from the wrong MANAGER. Beth Bottos found this one.
 
I went down to have a look. They run an Encina server app on a
machine. They then (in another process, possibly on another machine)
become authenticated and use acl_edit to inspect an ACL on an object
managed by the Encina app. It does the right thing. They then lose their
authentication, in this demo they did this by removing KRB5CCNAME from
their process environment. They reissue the acl_edit command, and
voila', the returned ACL is verifiably the ACL for the <self> prinicpal
on whatever machine the Encina server app was running on.
 
I say 'verifiably' as changing the ACL on that <self> identity results
in the same change being shown to the unauthenticated acl_edit user.
 
They can do this from any machine in the cell. The <self> that gets its
ACL displayed is always on the machine where the Encina app established
itself.
 
For clarity, the "<self> ACL" is the ACL on the <self> identity's
principal as maintained by the security server's ACL manager.

[1/18/95 public]
Beth Bottos provides the following wak-through session log:
 
------------ cut here for script file -------------
Script started on Wed Jan 18 15:35:26 1995
[test] setenv ACL_FILE
/afs/transarc.com/usr/bab/kansas/test/bab-1/trdce/trdceAclFile
[test] dce_login bab-dir/bab-1-trdce_owner bab-dir/bab-1-trdce_owner
[test] /afs/tr/usr/bab/kansas/test/internal/bin/trdce/aclServer -N 2  -p
bab-dir/bab-1-trdce_server  -n /.:/encina_testing/bab-1/trdce_acl_server
 -o bab-dir/bab-1-trdce_owner  -k
/afs/transarc.com/usr/bab/kansas/test/bab-1/encina.ktf &
[1] 21592
[test] acl_edit /.:/encina_testing/bab-1/trdce_acl_server -l
 
# SEC_ACL for /.:/encina_testing/bab-1/trdce_acl_server:
# Default cell = /.../decoy.dce.transarc.com
user:bab-dir/bab-1-trdce_owner:ACQ
[test] echo $KRB5CCNAME
FILE:/opt/dcelocal/var/security/creds/dcecred_544cf800
[test] unsetenv KRB5CCNAME 
[test] acl_edit /.:/encina_testing/bab-1/trdce_acl_server -l
Warning - binding to ACL's server is unauthenticated
Warning - binding to registry is unauthenticated
 
# SEC_ACL for /.:/encina_testing/bab-1/trdce_acl_server:
# Default cell = /.../decoy.dce.transarc.com
unauthenticated:crws
user:bab-dummy-testing-principal:-r--
other_obj:crws
any_other:crws
[test] dcecp
dcecp> show acl /.:/encina_testing/bab-1/trdce_acl_server
{unauthenticated crws}
{user bab-dummy-testing-principal -r--}
{other_obj crws}
{any_other crws}
dcecp> exit
[test] setenv KRB5CCNAME FILE:/opt/dcelocal/var/security/creds/dcecred_544cf800
[test] acl_edit /.:/encina_testing/bab-1/trdce_acl_server -l
 
# SEC_ACL for /.:/encina_testing/bab-1/trdce_acl_server:
# Default cell = /.../decoy.dce.transarc.com
user:bab-dir/bab-1-trdce_owner:ACQ
[test] acl_edit /.:/hosts/decoy/self -l
 
# SEC_ACL for /.:/hosts/decoy/self:
# Default cell = /.../decoy.dce.transarc.com
unauthenticated:crws
user:bab-dummy-testing-principal:-r--
other_obj:crws
any_other:crws
[test] telnet luna
Trying 158.98.9.28 ...
Connected to luna.
Escape character is '^]'.
UNIX(r) System V Release 4.0 (luna)
 
login: bab
Password:
AFS (R) 3.3 Login
Last login: Wed Jan 18 11:43:30 from golem.transarc.c
        LUNA is a tp workstation on Pinaki's desk.
 
        Luna has been configured as a client of decoy cell,
        running DCE 1.1.
 
Performing AMS initialization...
        Using /usr/ams for ANDREWDIR.
        CLASSPATH is /usr/ams/dlib/atk
        TEMPLATEPATH is /afs/transarc.com/usr/erz/tpls:/usr/ams/lib/tpls
 
Kill ctm jobs? (yn)[n] 
 
Please confirm (or change) your terminal type.
TERM = (xterms) 
tty is /dev/pts/9, TERM is xterms
[bab] dce_login  bab-dir/bab-1-trdce_owner  bab-dir/bab-1-trdce_owner
[bab] echo $KRB5CCNAME
FILE:/opt/dcelocal/var/security/creds/dcecred_570bf700
[bab] acl_edit /.:/encina_testing/bab-1/trdce_acl_server -l
 
# SEC_ACL for /.:/encina_testing/bab-1/trdce_acl_server:
# Default cell = /.../decoy.dce.transarc.com
user:bab-dir/bab-1-trdce_owner:ACQ
[bab] dcecp
dcecp> acl show /.:/encina_testing/bab-1/trdce_acl_server
{user bab-dir/bab-1-trdce_owner ACQ}
dcecp> exit
[bab] unsetenv KRB5CCNAME
[bab] acl_edit /.:/encina_testing/bab-1/trdce_acl_server -l
Warning - binding to ACL's server is unauthenticated
Warning - binding to registry is unauthenticated
ERROR: Not registered in endpoint map (dce / rpc)
Unable to bind to object /.:/encina_testing/bab-1/trdce_acl_server
[bab] acl_edit /.:/hosts/luna/self -l
Warning - binding to ACL's server is unauthenticated
Warning - binding to registry is unauthenticated
 
# SEC_ACL for /.:/hosts/luna/self:
# Default cell = /.../decoy.dce.transarc.com
unauthenticated:crws
other_obj:crws
any_other:crws
[bab] acl_edit /.:/encina_testing/bab-1/trdce_acl_server -l
Warning - binding to ACL's server is unauthenticated
Warning - binding to registry is unauthenticated
 
# SEC_ACL for /.:/encina_testing/bab-1/trdce_acl_server:
# Default cell = /.../decoy.dce.transarc.com
unauthenticated:crws
user:bab-dummy-testing-principal:-r--
other_obj:crws
any_other:crws
[bab] dcecp
dcecp> acl show /.:/encina_testing/bab-1/trdce_acl_server
{unauthenticated crws}
{user bab-dummy-testing-principal -r--}
{other_obj crws}
{any_other crws}
dcecp> acl show /.:/hosts/decoy/self
{unauthenticated crws}
{user bab-dummy-testing-principal -r--}
{other_obj crws}
{any_other crws}
dcecp> exit 
[bab] setenv KRB5CCNAME FILE:/opt/dcelocal/var/security/creds/dcecred_570bf700
[bab] acl_edit /.:/encina_testing/bab-1/trdce_acl_server -l
 
# SEC_ACL for /.:/encina_testing/bab-1/trdce_acl_server:
# Default cell = /.../decoy.dce.transarc.com
user:bab-dir/bab-1-trdce_owner:ACQ
[bab] dcecp
dcecp> acl show /.:/encina_testing/bab-1/trdce_acl_server
{user bab-dir/bab-1-trdce_owner ACQ}
dcecp> exit
[bab] exit
[bab] exit
[bab] exit
[bab] exit
Connection closed by foreign host.
[test] exit
[test] exit
[test] exit
[test] exit
 
script done on Wed Jan 18 16:01:32 1995

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12776
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5 error table
Short Description             : new error codes should be moved to end of file
Reported Date                 : 1/16/95
Found in Baseline             : 1.1
Found Date                    : 1/16/95
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/krb5/lib/error_tables/krb5_err.et
Sensitivity                   : public

[1/16/95 public]

Some new krb5 error codes were inserted in the middle of the kerberos
error table, accidentally overwriting previously used error codes. In
order to preserve the uniqueness of error codes, the following lines
should be moved to the end of the file (just before the 'end' keyword), 
in the order shown below:

# errors for preauthentication

error_code KRB5_PREAUTH_BAD_TYPE,       "Unsupported preauthentication type"
error_code KRB5_PREAUTH_NO_KEY,         "Required preauthentication key not supplied"
error_code KRB5_PREAUTH_FAILED,         "Generic preauthentication failure"

error_code KRB5_SNAME_UNSUPP_NAMETYPE,  "Conversion to service principal undefined for name type"

end

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12774
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd/priv_krb
Short Description             : 100s leaked each identity grant
Reported Date                 : 1/10/95
Found in Baseline             : 1.1
Found Date                    : 1/10/95
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : sec
Sensitivity                   : public

[1/10/95 public]
Plumbing a V1.1 (12.003) security server that has been made to satisfy
an overnight slew of endless logins reveals the following pattern of
unfreed malloc's. For Transarc, the malloc at line 199 of
priv_krb_util.c is the allocation of the auth-data contents field within
dce_authz_data_convert() . I'm still just now reading these routines
and have no idea where the missing free() belongs. The other two
'leaks' I haven't looked at (I'll have to find the rs leak, the rpcmem one
will belong to another developer here after I figure out if secd is not
closing something down properly. The rs leak is small and LOW priority here).
.
.
.
src/security/server/rs/rpriv_attr.c(370) 0x007242B0 4 0x000097B4
src/security/utils/priv_krb_util.c(199) 0x006C5430 392 0xF740642C
src/rpc/runtime/rpcmem.c(100) 0x007771B0 71 0xF72418C4
src/security/server/rs/rpriv_attr.c(370) 0x0078AB30 4 0x000097B4
src/security/utils/priv_krb_util.c(199) 0x00757430 392 0xF740642C
src/rpc/runtime/rpcmem.c(100) 0x007576B0 71 0xF72418C4
src/security/server/rs/rpriv_attr.c(370) 0x00710630 4 0x000097B4
src/security/utils/priv_krb_util.c(199) 0x0078AE30 392 0xF740642C
src/rpc/runtime/rpcmem.c(100) 0x006131B0 71 0xF72418C4
src/security/server/rs/rpriv_attr.c(370) 0x0070E7B0 4 0x000097B4
src/security/utils/priv_krb_util.c(199) 0x0077DC30 392 0xF740642C
src/rpc/runtime/rpcmem.c(100) 0x0072AD30 71 0xF72418C4
src/security/server/rs/rpriv_attr.c(370) 0x0060E4F0 4 0x000097B4
src/security/utils/priv_krb_util.c(199) 0x00769630 392 0xF740642C
src/rpc/runtime/rpcmem.c(100) 0x006F1DB0 71 0xF72418C4
.
.

[1/10/95 public]

Changing the "malloc" at line 199 of priv_krb_util.c
to "(*alloc)"  should get rid of that memory leak.  I can
imagine how this bug might cause some obscure memory 
corruption as well, though I didn't bother looking for
any such cases.

[greg 1/10/95 public]  

Here's my guess about the rpriv_attr.c leak.

In rpriv_triggers():

-----------
    processed = malloc(num_attr_keys * sizeof(unsigned32));
       :
       :
    first_trigger = 0;
    done = FALSE;
    if (num_upstream_delegates > 0) {
	done = TRUE;
	for(i=first_trigger; i < *num_attrs; i++) {
	    sec_attr_p = &(*attrs)[i];
	    if (SA_ATTR_ENCODING(sec_attr_p) == sec_attr_enc_trig_binding)
{
		priv_attr_trig_alloc_delegate_ids(num_upstream_delegates,
						  upstream_delegates,
						  &upstream_delegate_ids,
						  st_p);
		first_trigger = i;
		done = FALSE;
		break;
	    }
	}
    }

    if (BAD_STATUS(st_p) || done) {
	return;
    }
--------

If there are no attributes with an encoding type of
sec_attr_enc_trig_binding, the routine returns without freeing
"processed".

[08/07/95 public]

Allocating "processed" with rpc_ss_allocate() instead of
malloc() obviates the call to free().

***************
*** 352,358 ****
      sec_id_foreign_t          *upstream_delegate_ids = NULL;
  
  
!     processed = malloc(num_attr_keys * sizeof(unsigned32));
      memset(processed, FALSE, num_attr_keys * sizeof(unsigned32));
      CLEAR_STATUS(st_p);
  
--- 355,365 ----
      sec_id_foreign_t          *upstream_delegate_ids = NULL;
  
  
!     processed = rpc_ss_allocate(num_attr_keys * sizeof(unsigned32));
!     if (processed == NULL) {
!       SET_STATUS(st_p, sec_priv_s_no_mem);
!       return;
!     }
      memset(processed, FALSE, num_attr_keys * sizeof(unsigned32));
      CLEAR_STATUS(st_p);
  
***************
*** 422,428 ****
                } 
            }
          }
-     free (processed);
      }
  }
  
--- 429,434 ----

[10/2/95 public]
Fix submitted to 1.1-maint code

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12772
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl
Short Description             : Delegation ACL check is wrong.
Reported Date                 : 1/3/95
Found in Baseline             : 1.1
Found Date                    : 1/3/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/rsdb/rsdb_daclmgr.c
Sensitivity                   : public

[1/3/95 public]
It has been noticed that the Delegation ACL check algorithm as implemented
does not conform to the original "design intent".  The following email
exchange says it all.

*******************************************************************************

From Rajesh_Agarwalla@transarc.com Thu Dec 29 15:03:58 1994
Date: Thu, 29 Dec 1994 14:12:40 -0500 (EST)
From: Rajesh_Agarwalla@transarc.com
To: pato@APOLLO.HP.COM
Cc: sig-dce@osf.org, Richard_Sanzi@transarc.com, Craig_Everhart@transarc.com
Subject: Delegation access check

Joe,

To support delegation, the authorization model needed to be extended
to allow principals access as intermediaries but not as initiators.
Additional delegate ACL entries were defined to do so.  Also any
rights granted to a principal as an initiator was also granted to the
principal as an intermediary.

This suggests that "user_delegate:foo" ACL entry rights are in
addition to the rights granted by "user:foo" ACL entry when foo acts
as a delegate i.e. when a principal acts as a delegate it accrues
rights from the regular non-delegate ACL entries and the delegate ACL
entries.

The modifications made to the DFS ACL access check algorithm and the
access check algorithm in the new ACL library code however ignore the
user_delegate:foo entry in the presence of a user:foo entry when foo
is acting as a delegate i.e. its not possible to grant a principal
rights of its own accord (initiator) and additional rights as a
delegate.

The model of considering the rights granted by user_delegate:foo entry
in addition to those granted by user:foo, when foo acts as a delegate,
is more intuitive and simpler than ignoring user_delegate:foo in
presence of a user:foo. The latter implementation leads a possibility
of confusion when the ACL for a object is modifed to have a user:bar
entry when previously it only had a user_delegate:bar entry. Clients
may find that access previously granted (via delegation) is no longer
available. 

Ron Arbo mentioned that this issue was discussed when the code was
implemented and that I speak with you about this. I wanted to get your
thoughts on this issue as to why the latter approach was adapted. I
would be grateful for your comments and criticism on this note.

Thanks very much
Rajesh

*******************************************************************************

From walt Fri Dec 30 07:11:03 1994
From: Walt Tuvell <walt>
Date: Thu, 29 Dec 94 15:11:04 -0500
To: Rajesh_Agarwalla@transarc.com
Cc: pato@APOLLO.HP.COM, Richard_Sanzi@transarc.com,
        Craig_Everhart@transarc.com, walt
In-Reply-To: Rajesh_Agarwalla@transarc.com's message of Thu, 29 Dec 1994 14:12:40 -0500 (EST) <kj0kccKSMV1a8FV0t0@transarc.com>
Subject: Delegation access check

Rajesh, my understanding of the delegation design intent is the same as
yours, namely:

	if ((initiator EPAC is granted access
	     via regular Common Access Algorithm)
	&&  (every delegate EPAC is granted access
	     via Augmented Common Access Algorithm
	       /*i.e., "union" regular ACLE's with
	         delegate ACLE's of same specificity*/)) {
	        GRANT access;
	} else {
	        DENY access;
	}

The key here is in the parenthetical comment, i.e., the "union" model.
I agree with your analysis of the problems that would ensue otherwise.
So if this isn't what got implemented, I'd be interested in Joe's
response, too.

- Walt

*******************************************************************************

From pato@apollo.hp.com Tue Jan  3 12:38:25 1995
X-Sender: pato@pop-e5.ch.apollo.hp.com
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Tue, 3 Jan 1995 11:57:23 -0500
To: Walt Tuvell <walt@osf.org>, burati@apollo.hp.com
From: pato@apollo.hp.com (Joseph N. Pato)
Subject: Re: Delegation access check
Cc: Rajesh_Agarwalla@transarc.com, Richard_Sanzi@transarc.com,
        Craig_Everhart@transarc.com, walt@osf.org

Before forwarding this to sig-dce, I'd like to hash it out in private just
a bit.

My intention in the design was exactly as Walt inferred. Unfortunately the
initial RFC and the subsequent functional and design specs were
underspecified in this area. The wording admitted either approach to the
problem.

As I understand the situation, the current DCE 1.1 implementation does not
perform the union of the delegate entries with the direct acl entries at
the same level of specificity.

The only rationale that I can construct for this is that a direct entry in
a pre-DCE1.1 environment can be used to disable access to a principal.
e.g., the acl entry "USER:foo:---" effectively states that foo has been
disallowed any access to the object. If we were to take the union of the
USER entry and the USER_DELEGATE entry, then to accomplish the same thing,
you would have to set both of these entries in the ACL to disallow access.
Any existing administrative scripts that thought they were disabling access
would stop having the property (since they were unaware of delegation)

I don't find this rationale compelling - but I also would have a hard time
justifying a change to the current behavior. (While I think that it would
be better to implement the check as Walt inferred, I am concerned that we
won't be able to do it in time - since we have to update the acl library
implementation as well as DFS, Secd and CDSD. I would be more unhappy with
having some DCE 1.1 environments doing it one way and others another. Given
this situation, I am inclined to stick with the current behavior as
implemented - but want to discuss this to make sure it is the best path...)

- joe

*******************************************************************************

From walt Tue Jan  3 13:32:24 1995
Received: from lobster.osf.org (lobster.osf.org [130.105.1.113]) by postman.osf.org (8.6.9/8.6.x) with SMTP
	id NAA05931; Tue, 3 Jan 1995 13:29:09 -0500
>From: Walt Tuvell <walt>
Received: by lobster.osf.org (5.65/4.7) id AA09149; Tue, 3 Jan 95 13:30:21 -0500
Date: Tue, 3 Jan 95 13:30:21 -0500
Message-Id: <9501031830.AA09149@lobster.osf.org>
To: pato@apollo.hp.com
Cc: burati@apollo.hp.com, Rajesh_Agarwalla@transarc.com,
        Richard_Sanzi@transarc.com, Craig_Everhart@transarc.com, rsalz, bowe
In-Reply-To: Joseph N. Pato's message of Tue, 3 Jan 1995 11:57:23 -0500 <ab2f2cbc0102100319fe@[15.22.48.23]>
Subject: Delegation access check
Status: RO

Joe, I agree we shouldn't expand to sig-dce yet, however I want to
include Rich Salz and John Bowe, for reasons I now state.

I recall that a few months ago John (who was working with Rich on the
ACL library) brought to my attention the fact that secd was doing the
evaluation algorithm differently than the ACL library, and he asked me
which was right.  I said the ACL library was right, because it was doing
the "design intent" (mentioned below).  He said he would pass than info
onto HP (Mike Burati, presumably).

Therefore, unless something changed I don't know about, your assertion
below that the ACL library is making the same mistake as DFS and secd is
incorrect.  So I'm including Rich and John to get a reading on this.  If
my assertion is correct, then we ALREADY have the problem that DCE is
doing the ACL check differently in different places, so a patch is
already forced onto us, and we therefore might as well go ahead and "do
the right thing".

Separately, I would argue that we want to do the patch IN ANY CASE
(regardless of whether the above situation obtains or not), for the
following reason.  With the current bug, it seems that if both a
direct-ACLE and a delegate-ACLE is present for a given USER principal,
the delegate-ACLE IS NEVER CONSULTED.  Thus, the administrator of a
protected object could never give different (non-trivial) rights to a
principal based on whether it is a direct accessor or a delegate.  That
appears in large measure to defeat the purpose of delegation.

- Walt

    /* forwarded notes deleted here because they're included above */

*******************************************************************************

From burati@apollo.hp.com Tue Jan  3 15:02:21 1995
From: burati@apollo.hp.com
Date: Tue, 3 Jan 95 14:20:51 EST
Subject: Re: Delegation access check
To: Walt Tuvell <walt@osf.org>, pato@apollo.hp.com
Cc: Rajesh_Agarwalla@transarc.com, Richard_Sanzi@transarc.com,
        Craig_Everhart@transarc.com, rsalz@osf.org, bowe@osf.org
In-Reply-To: Walt Tuvell <walt@osf.org>, Tue, 3 Jan 95 13:30:21 -0500

Walt, Joe,
In response to Rajesh's email asking why the ACL mgr was implemented as it is,
and Joe and Walt's responses that it's not implemented as intented...

>    I recall that a few months ago John (who was working with Rich on the
>    ACL library) brought to my attention the fact that secd was doing the
>    evaluation algorithm differently than the ACL library, and he asked me
>    which was right.  I said the ACL library was right, because it was doing
>    the "design intent" (mentioned below).  He said he would pass than info
>    onto HP (Mike Burati, presumably).

There were at least two times that I was contacted about the ACL library and
secd ACL mgrs behaving differently (one by John Bowe and one by Ron Arbo, and
probably at least one of them doing so more than once).  One time was a mis-
understanding of what it was actually doing (by Ron?).  Someone (Ron, John or
just some other related email that went by) brought up the issue of it not
checking more entries after it found one, a month or two (or several?) ago
and Joe and I talked about it in his office between other hot problems we were
dealing with.  That was the first time that I knew of his opinion that it should
be checking both...  I firmly believe that I convinced him that the way it was
implemented was ok and provided as many advantages as doing it his way at that
time (this was *after* 1.1 froze for the final time).  Unfortunately, neither
of us can remember the contents of the conversation itself, so all I know is
that I didn't need to change anything after that...

For over a year now, the sample code has been available, which clearly shows
that in the original algorithm and in the new one with delegates, you *always*
stop checking for matching entries as soon as you find ONE that matches,
whether or not permission is granted (with the exception of following the
POSIX draft of performing the union of group entries).  Joe and I checked the
ACL library this morning and it behaves in this way.  None of: Joe, RichS,
JohnB, RonA asked me to change it to behave the way you're asking within the
last year.  In fact, I just found the original email that I wrote when I
finished the sample algorithm:

  1993/09/22.14:21:34,1089;01
  Date: Fri, 22 Oct 93 14:21:34
  From: burati
  Subject: ACL manager changes
  To: pato

  Joe,
      I know you have no time for any more things on your schedule, but
  nobody else here (or most other provider sites) seems to understand ACLs
  well enough to do this...  What I need is somebody that understands the
  access algorithm as well (hopefully better :-) as I do, to double check
  the changes I made for delegation, to make sure I didn't miss anything
  or do anything wrong...  If you get a chance between now and December,
  could you look at sec__acl_mgr_access_check() (the existing method)
  and sec__acl_mgr_deleg_access_check() (the new code for providing access
  to delegates, which should be the former routine with extensions for
  the new types, which I'm hoping I put in the correct order...)

  (eg: For a delegate check, if a user_obj entry exists and matches the
  delegate, then use that, else if a user_obj_delegate entry exists and
  matches, then use that, else if a user entry exists and matches, then
  use that, else if a user_delegate entry exists and matches, use that...)

  ..Mike
  -------

Yes, I know I should've added this to the spec after getting Joe's ok, so that
it would be there for anybody to comment on, but by that time we were so far
behind (still shooting for getting 1.1 done by April?) that we were told that
specs were low priority compared to code deliverables...   No, Joe never had
time to review that code mentioned in the above email, so that's probably why
our opinions on what it was doing differed, BUT I knew at the time that he
probably wouldn't and upon finding this email, I specifically remember walking
down to his office with a printout of the sample algorithm for him to take on
some trip or home over Christmas and saying that I knew he wouldn't find time
to read it, but that I wanted an immediate response on the above (eg:...).
That one sentence that we did agree on, seems to me to match the algorithm
that I implemented.  The fact that the two of you believe it should work
differently now leads me to believe that we need to decide which is better, but
I'll stand by the current implementation as what we intended to code.

Why I disagree with the proposed change:
(a) Can't limit permissions with a single entry anymore.
(b) Doesn't match current architecture of always stopping as soon as you find
    a matching entry.

>...
>    already forced onto us, and we therefore might as well go ahead and "do
>    the right thing".
>
>    Separately, I would argue that we want to do the patch IN ANY CASE
>    (regardless of whether the above situation obtains or not), for the
>    following reason.  With the current bug, it seems that if both a
>    direct-ACLE and a delegate-ACLE is present for a given USER principal,
>    the delegate-ACLE IS NEVER CONSULTED.  Thus, the administrator of a
>    protected object could never give different (non-trivial) rights to a
>    principal based on whether it is a direct accessor or a delegate.  That
>    appears in large measure to defeat the purpose of delegation.
    
If either of you decide that this new idea of the "right thing" is what we
need to go with then please file a p0 bug immediately because you can bet that
at least a couple vendors are probably pretty close to shipping 1.1...

..Mike
-------

*******************************************************************************

From walt Tue Jan  3 15:37:50 1995
From: Walt Tuvell <walt>
Date: Tue, 3 Jan 95 15:31:49 -0500
To: burati@apollo.hp.com
Cc: pato@apollo.hp.com, Rajesh_Agarwalla@transarc.com,
        Richard_Sanzi@transarc.com, Craig_Everhart@transarc.com, rsalz@osf.org,
        bowe@osf.org, walt
In-Reply-To: burati@apollo.hp.com's message of Tue, 3 Jan 95 14:20:51 EST <199501031921.OAA08702@postman.osf.org>
Subject: Delegation access check

Joe wrote:
> My intention in the design was exactly as Walt inferred. Unfortunately the
> initial RFC and the subsequent functional and design specs were
> underspecified in this area. The wording admitted either approach to the
> problem.

I just looked up what Joe's specs said, and they say this (not the whole
thing, just the crucial line):

	Apply standard algorithm (allow delegate entries)

Contrary to Joe's assertion, I don't find this underspecified: it says
"union model" to me.

Mike wrote:
> I firmly believe that I convinced him that the way it was
> implemented was ok and provided as many advantages as doing it his way at that
> time (this was *after* 1.1 froze for the final time).  Unfortunately, neither
> of us can remember the contents of the conversation itself, so all I know is
> that I didn't need to change anything after that...

It's too bad Joe doesn't have his office bugged, a la Watergate, because
it would be great if we could resurrect that discussion! :-)

> If either of you decide that this new idea of the "right thing" is what we
> need to go with then please file a p0 bug immediately because you can bet that
> at least a couple vendors are probably pretty close to shipping 1.1...

I still find the argument I gave compelling (about delegate-ACLE's NEVER
getting visited if the corresponding direct-ACLE is present), therefore
I will file the bug.

- Walt

*******************************************************************************

[01/23/95 public]
HP has agreed to fix the code in secd and the ACL lib as part of the
DCE 1.1 warranty patch.  Therefore assigned to HP.
What about DFS?

[12/20/95 public]
This was actually fixed in the 1.1WP code. Marked closed.



CR Number                     : 12771
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : passwd_import
Short Description             : passwd_import gets stuck in loop
Reported Date                 : 12/23/94
Found in Baseline             : 1.0.3
Found Date                    : 12/23/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/admin/passwd_import.c
Sensitivity                   : public

[12/23/94 public]

Description:

passwd_import is not able to create a group
for a principal when the group to which the principal
belongs is specified in the /etc/passwd file by UID,
no group identified by the same UID already exists
in the registry, and the UID is greater than the
registry's "Maximum possible UID" property.
 
In this case passwd_import will be stuck asking for a
name to assign to a group whose UID is incongruous
with the registry properties.

>> Import Principal: 
Ignoring name conflict, as instructed
Attempted to add membership to unknown group.
Please enter a name for imported group ( 60001 ): uuid_too_big
>> Adding Group entry for: uuid_too_big 60001
Error when adding "uuid_too_big" - Invalid data record
Please enter a name for imported group ( 60001 ): no_way_to_fix_it
>> Adding Group entry for: no_way_to_fix_it 60001
Error when adding "no_way_to_fix_it" - Invalid data record
Please enter a name for imported group ( 60001 ): cntrl_c $

Customer also discovered that there is a segment of code
in cobble_up_group_ent will never be executed ("dead code").

Proposed Solution:

This is a 1.1 diff. A similar change should be made
in the routine cobble_up_group_ent in the 1.0.3 code.

*** passwd_import.c.old Wed Dec 21 17:45:00 1994
--- passwd_import.c.new Fri Dec 23 10:19:46 1994
***************
*** 1373,1378 ****
--- 1373,1383 ----
          return true;
      }
  
+     if (!chk_num(gid)) {
+         dce_fprintf(stderr,pwd_imp_err_invalid_uid);
+       return false;
+     }
+ 
      dce_fprintf(stderr, pwd_imp_err_unknown_group);
      if (got_gid) {
        dce_fprintf(stderr, pwd_imp_err_group_conflict, g_name);


The following diff identifies the dead code which should either
be removed ar repaired to do whatever it was supposed to do. Note
that if got_gid was true, function would have retured before it
got here.

*** passwd_import.c.old Wed Dec 21 17:45:00 1994
--- passwd_import.c.new Fri Dec 23 10:31:13 1994
***************
*** 1374,1391 ****
      }
  
      dce_fprintf(stderr, pwd_imp_err_unknown_group);
-     if (got_gid) {
-       dce_fprintf(stderr, pwd_imp_err_group_conflict, g_name);
-         if (ask_y_n(pwd_imp_qus_group_conflict)) {
-                 /* Cache the association so we don't ask again */
-             strcpy((char *)entry.orig_name, (char *)g_name);
-             strcpy((char *)entry.new_name, (char *)g_name);
-             entry.orig_num = pgo_entry.unix_num;
-             entry.new_num = pgo_entry.unix_num;
-             imp_add(sec_rgy_domain_group, &entry, &is_alias, &lst);
-             return true;
-         }
-     }
  
          /* If we got this far, there's no choice but make them
           * add a group for this id.
--- 1374,1379 ----

[12/19/95 public ]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12770
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 13017
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : assigment of adress of auto variable to output parameter
Reported Date                 : 12/21/94
Found in Baseline             : 1.1
Found Date                    : 12/21/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint
Affected File(s)              : security/server/rs/{rpriv_util.c, rpriv_util.h, rpriv_v1_1_mgrs.c}
Sensitivity                   : public

[12/21/94 public]

Customer reported that problem resulted in SEGV of secd on their port
of DCE1.1. I looked at the code from OSF, and the reported problem is
certainly avialable for our enjoyment as well. At this time, there
are two open bugs against secd which describe secd crashes (12757 and
12754). 12757 seems not to be related to th problem described here,
although a secd expert might be able to draw some relationship between
the problem reportd here and OT 12754.

Customer reported that the function rpriv_util_get_ps_eblock in file
security/server/rs/rpriv_util.c makes a call to krb5_process_key passing
as an argument the address of an automatic variable (ps_key).
krb5_process_key takes this address and assigns it to a member of
a structure (ps_eblock->key) which is an out parameter of
rpriv_util_get_ps_eblock. When rpriv_util_get_ps_eblock returns to it's
caller, the memory used to represent  ps_key is reclaimed form the stack, 
and information at the address recorded in ps_eblock->key is not safe
from contamination by calls to other procedures.

To see where the assignment to ps_eblock->key occurs, look (for example) at
function mit_des_process_key in file
security/krb5/lib/crypto/common/process_ky.c.

Proposed solution:

Move the variable declaration and assignment to ps_eblock->key to the same
level as that of ps_eblock (within rpriv_util_gen_V1_1_privs()).

*** rpriv_util.c.old	Wed Dec 21 12:20:55 1994
--- rpriv_util.c.new	Wed Dec 21 12:29:38 1994
***************
*** 489,498 ****
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         ps_key;
  
-     memset(&ps_key, 0, sizeof(ps_key));
- 
      /* get the principal data for the local realm */
      rsdb_properties_get_info(&props, stp);
      
--- 489,496 ----
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         *ps_key = ps_eblock->key;
  
      /* get the principal data for the local realm */
      rsdb_properties_get_info(&props, stp);
      
***************
*** 515,530 ****
      }
  
      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, &ps_key);
  
      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);  
  
      krb5_use_cstype(ps_eblock, etype);
!     *stp = krb5_process_key(ps_eblock, &ps_key);
      if (!STATUS_OK(stp)) {
! 	memset(ps_key.contents, 0, ps_key.length);
! 	free(ps_key.contents);
      }
  }
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
--- 513,528 ----
      }
  
      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, ps_key);
  
      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);  
  
      krb5_use_cstype(ps_eblock, etype);
!     *stp = krb5_process_key(ps_eblock, ps_key);
      if (!STATUS_OK(stp)) {
! 	memset(ps_key->contents, 0, ps_key->length);
! 	free(ps_key->contents);
      }
  }
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
***************
*** 1412,1417 ****
--- 1410,1416 ----
       */
      switch (privs->deleg_type) {
  	krb5_encrypt_block   ps_eblock;
+ 	krb5_keyblock        ps_eblock_keyblock;
          krb5_kvno            ps_kvno;
  	
      default:
***************
*** 1427,1432 ****
--- 1426,1433 ----
           */
  	memset(token_bytes, 0, sizeof(token_bytes));
  	memset(scratch, 0, sizeof(scratch));
+ 	memset(&ps_eblock_keyblock, 0, sizeof(ps_eblock_keyblock));
+ 	ps_eblock.key = &ps_eblock_keyblock;
  
  	/*
           * construct plaintext buffer containing a 4-byte

[12/22/94 public]

There's also a krb5_keyblock-sized memory leak on each
(en/de)cryption of a delegation token.  The following fixes
should take care of the crash and the leak.

*** src/security/server/rs/rpriv_util.h_old
--- src/security/server/rs/rpriv_util.h_new
***************
*** 193,198 ****
--- 197,206 ----
      krb5_encrypt_block  *ps_eblock,    /* [out] */
      krb5_kvno           *ps_kvno,      /* [out] */
      error_status_t      *stp           /* [out] */
+ );
+ 
+ void  rpriv_util_finish_ps_eblock (
+     krb5_encrypt_block  *ps_eblock    /* [in/out] */
  );
  
  void  rpriv_util_gen_seal (

--- src/security/server/rs/rpriv_util.c_new
***************
*** 484,493 ****
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         ps_key;
  
!     memset(&ps_key, 0, sizeof(ps_key));
! 
      /* get the principal data for the local realm */
      rsdb_properties_get_info(&props, stp);
      
--- 488,504 ----
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         *ps_key;
  
!     ps_key = (krb5_keyblock *) malloc(sizeof(*ps_key));
!     if (!ps_key) {
!       SET_STATUS(stp, sec_priv_s_no_mem);
!       return;
!     }
!     ps_key->contents = NULL;  
!     ps_key->length = 0;
!     ps_eblock->priv = ps_eblock->key = NULL;
!     
      /* get the principal data for the local realm */
      rsdb_properties_get_info(&props, stp);
      
***************
*** 510,527 ****
      }
  
      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, &ps_key);
  
      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);  
  
      krb5_use_cstype(ps_eblock, etype);
!     *stp = krb5_process_key(ps_eblock, &ps_key);
!     if (!STATUS_OK(stp)) {
!       memset(ps_key.contents, 0, ps_key.length);
!       free(ps_key.contents);
      }
  }
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
   *
   * retrieve and verify authentication info when the underlying
--- 521,555 ----
      }
  
      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, ps_key);
  
      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);  
  
      krb5_use_cstype(ps_eblock, etype);
!     if (STATUS_OK(stp)) {
!       *stp = krb5_process_key(ps_eblock, ps_key);
!       if (!STATUS_OK(stp)) {
!           krb5_free_keyblock(ps_key);
!       }
      }
  }
+     
+ 
+ extern  void  rpriv_util_finish_ps_eblock (
+     krb5_encrypt_block   *ps_eblock /* [in] */
+ )
+ {
+     if (ps_eblock) {
+       if (ps_eblock->priv) {
+           krb5_finish_key(ps_eblock);
+       }
+       if (ps_eblock->key) {
+           krb5_free_key_block(ps_eblock->key);
+       }
+     }
+ }
+ 
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
   *
   * retrieve and verify authentication info when the underlying

***************
*** 1429,1435 ****
                                V0_TOKEN_REQ_CLEAR_LEN,
                                &ps_eblock,
                                0);
!           krb5_finish_key(&ps_eblock);
        }
        if (STATUS_OK(stp)) {
            TOKEN_VNO(token_bytes) = 0;
--- 1457,1463 ----
                                V0_TOKEN_REQ_CLEAR_LEN,
                                &ps_eblock,
                                0);
!           rpriv_util_finish_ps_eblock(&ps_eblock);
        }
        if (STATUS_OK(stp)) {
            TOKEN_VNO(token_bytes) = 0;

*** Src/security/server/rs/rpriv_v1_1_mgrs.c_old
--- src/security/server/rs/rpriv_v1_1_mgrs.c_new
***************
*** 290,296 ****
       * then we don't want to "finish" the key, but, for now, we
       * must.
       */
!     krb5_finish_key(&ps_eblock);
      if (!STATUS_OK(stp)) {
        return;
      }
--- 294,300 ----
       * then we don't want to "finish" the key, but, for now, we
       * must.
       */
!     rpriv_util_finish_ps_eblock(&ps_eblock);
      if (!STATUS_OK(stp)) {
        return;
      }

[2/9/95 public]

This bug looks interesting. I'm sure SVR4 memory management wouldn't like a
bit if not fixed. Tom check this out. Let me know if it helps.

[2/22/95 public]
Greg wrote:
> + 
> + extern  void  rpriv_util_finish_ps_eblock (
> +     krb5_encrypt_block   *ps_eblock /* [in] */
> + )
> + {
> +     if (ps_eblock) {
> +       if (ps_eblock->priv) {
> +           krb5_finish_key(ps_eblock);
> +       }
> +       if (ps_eblock->key) {
> +           krb5_free_key_block(ps_eblock->key);
---------- TYPO------------^
> +       }
> +     }
> + }
> + 
Replace krb5_free_key_block by krb5_free_keyblock to successfully compile your
code.

[10/3/95 public]

This fix is missing one additional fix (line 1460 & 1476 of rpriv_util.c)
that is covered by OT 13017. The full combined submission of these two OT's as
was done to 1.1maint tree is as shown below. NOTE: HP did not object to this 
addition and so it is assumed that the change is OK with them:

*** /project/dce/build/dce1.1-maint/src/security/server/rs/rpriv_util.c	Mon Jun  5 17:44:49 1995
--- security/server/rs/rpriv_util.c	Tue Oct  3 18:55:12 1995
***************
*** 530,538 ****
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         ps_key;
  
!     memset(&ps_key, 0, sizeof(ps_key));
  
      /* get the principal data for the local realm */
      dce_cf_get_cell_name((char **) &cell_name, stp);
--- 530,545 ----
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         *ps_key;
  
!     ps_key = (krb5_keyblock *) malloc(sizeof(*ps_key));
!     if (!ps_key) {
!         SET_STATUS(stp, sec_priv_s_no_mem);
!         return;
!     }
! 
!     memset(ps_key, 0, sizeof(*ps_key));
!     ps_eblock->priv = ps_eblock->key = NULL;
  
      /* get the principal data for the local realm */
      dce_cf_get_cell_name((char **) &cell_name, stp);
***************
*** 557,574 ****
      }
  
      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, &ps_key);
  
      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);  
  
      krb5_use_cstype(ps_eblock, etype);
!     *stp = krb5_process_key(ps_eblock, &ps_key);
!     if (!STATUS_OK(stp)) {
! 	memset(ps_key.contents, 0, ps_key.length);
! 	free(ps_key.contents);
      }
  }
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
   *
   * retrieve and verify authentication info when the underlying
--- 564,599 ----
      }
  
      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, ps_key);
  
      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);  
  
      krb5_use_cstype(ps_eblock, etype);
!     if (STATUS_OK(stp)) {
!         *stp = krb5_process_key(ps_eblock, ps_key);
!         if (!STATUS_OK(stp)) {
!             krb5_free_keyblock(ps_key);
!         }
!     }
! }
! 
! 
! extern  void  rpriv_util_finish_ps_eblock (
!     krb5_encrypt_block   *ps_eblock /* [in] */
! )
! {
!     if (ps_eblock) {
!       if (ps_eblock->priv) {
!           krb5_finish_key(ps_eblock);
!       }
!       if (ps_eblock->key) {
!           krb5_free_keyblock(ps_eblock->key);
!       }
      }
  }
+ 
+ 
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
   *
   * retrieve and verify authentication info when the underlying
***************
*** 1435,1440 ****
--- 1460,1466 ----
       */
      switch (privs->deleg_type) {
  	krb5_encrypt_block   ps_eblock;
+         krb5_keyblock        ps_eblock_keyblock;
          krb5_kvno            ps_kvno;
  	
      default:
***************
*** 1450,1455 ****
--- 1476,1483 ----
           */
  	memset(token_bytes, 0, sizeof(token_bytes));
  	memset(scratch, 0, sizeof(scratch));
+ 	memset(&ps_eblock_keyblock, 0, sizeof(ps_eblock_keyblock));
+ 	ps_eblock.key = &ps_eblock_keyblock;
  
  	/*
           * construct plaintext buffer containing a 4-byte
***************
*** 1474,1480 ****
  				V0_TOKEN_REQ_CLEAR_LEN,
  				&ps_eblock,
  				0);
! 	    krb5_finish_key(&ps_eblock);
  	}
  	if (STATUS_OK(stp)) {
  	    TOKEN_VNO(token_bytes) = 0;
--- 1502,1508 ----
  				V0_TOKEN_REQ_CLEAR_LEN,
  				&ps_eblock,
  				0);
! 	    rpriv_util_finish_ps_eblock(&ps_eblock);
  	}
  	if (STATUS_OK(stp)) {
  	    TOKEN_VNO(token_bytes) = 0;
 
*** /project/dce/build/dce1.1-maint/src/security/server/rs/rpriv_util.h	Thu Feb 16 16:58:47 1995
--- security/server/rs/rpriv_util.h	Mon Aug 28 18:06:01 1995
***************
*** 199,204 ****
--- 199,208 ----
      error_status_t      *stp           /* [out] */
  );
  
+ void  rpriv_util_finish_ps_eblock (
+     krb5_encrypt_block  *ps_eblock    /* [in/out] */
+ );
+ 
  void  rpriv_util_gen_seal (
      sec_bytes_t   *delegation_chain,  /* [in] */
      sec_id_seal_t *seal               /* [out] */
 
*** /project/dce/build/dce1.1-maint/src/security/server/rs/rpriv_v1_1_mgrs.c	Thu Feb 16 16:58:51 1995
--- security/server/rs/rpriv_v1_1_mgrs.c	Mon Aug 28 18:08:19 1995
***************
*** 294,300 ****
       * then we don't want to "finish" the key, but, for now, we
       * must.
       */
!     krb5_finish_key(&ps_eblock);
      if (!STATUS_OK(stp)) {
  	return;
      }
--- 294,300 ----
       * then we don't want to "finish" the key, but, for now, we
       * must.
       */
!     rpriv_util_finish_ps_eblock(&ps_eblock);
      if (!STATUS_OK(stp)) {
  	return;
      }

[10/11/95 public]
Following redundant changes should not be done:

***************
*** 1435,1440 ****
--- 1460,1466 ----
       */
      switch (privs->deleg_type) {
        krb5_encrypt_block   ps_eblock;
+         krb5_keyblock        ps_eblock_keyblock;
          krb5_kvno            ps_kvno;

      default:
***************
*** 1450,1455 ****
--- 1476,1483 ----
           */
        memset(token_bytes, 0, sizeof(token_bytes));
        memset(scratch, 0, sizeof(scratch));
+       memset(&ps_eblock_keyblock, 0, sizeof(ps_eblock_keyblock));
+       ps_eblock.key = &ps_eblock_keyblock;

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12769
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : invalid password instead of clock skew too great returned by dce_login
Reported Date                 : 12/19/94
Found in Baseline             : 1.1b24
Found Date                    : 12/19/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security
Sensitivity                   : public

[12/19/94 public]

When running dce_login and your times/dates/timezones are off by
more than 5 minutes, dce_login returns "invalid password" as the
error message instead of "clock skew too great".  

This message is misleading.  Here is the text from IBM CMVC defect 10742.

This does not occur on the 1.0.3 release.  In 1.0.3 we get the
correct "clock skew too great" message.  In the 21 releases
(both aix and os2) there is new code that handles the error
and re-maps it - this is in "prepare_error_as".  This routine
doesn't exist in 1.0.3.

The problem occurs on the reference platform as well.  This is
code that has been re-designed for the osf 1.1 deliverable.
I'll create an ot for it (but am unsure if these are being
worked).  If the design is faulty it should be changed in
the reference platform, and if we're to fix it it would help
to have some design information or specs about the original
design.


I have to assume that this was seen during 1.1 testing, correct?

[12/12/94 public]

This can be fixed fairly easily. Here is the problem : timestamps
are now used in the preauthentication data of a TGT request by
DCE 1.1 clients. Within the preauthentication data, a timestamp
is encrypted in the user's password. 

The following examples expose the problem: 

1)  a user types in an incorrect password
    the client encrypts the time of day with the bad key and 
      puts this in the preauthentication data of the TGT request.
    the KDC decrypts the preauthentication data using the user's 
      correct key stored in it's database. Since the preauth data
      was encrypted using a different key, the result of the 
      decryption is a timestamp which is probably not even close
      to the current time. the KDC interprets this as an invalid
      password and that is what the client returns to dce_login.

2) a user types in a correct password but the client's time is skewed.
   the client encrypts the skewed time with the correct key and
     puts this in the preauthentication data of the TGT request.
   the KDC decrypts the preauthentication data using the user's
     correct key stored in it's database. However, the result of
     the decryption is a timestamp which is not within 5 minutes
     of the server's time. So, the KDC interprets this as an invalid
     password and that is what the client returns to dce_login.

We need to fix example number 2 so that clock skew is returned 
instead of invalid password.  

The fix is for the client to inspect the server timestamp contained in
the error packet before inspecting the actual error. If the server's
time is off by more than 5 minutes, it should return clock skew
instead of what is contained in the error packet.

I'll work on a fix over the next few days and send out the diffs.

[12/20/94 public]

I believe the following change to security/krb5/lib/krb/get_in_tkt.c,
krb5_do_as_request() should fix this:

(line numbers may be off):

*** get_in_tkt.c@@/main/mullan_ot12769/0        Tue Dec 20 17:08:46 1994
--- get_in_tkt.c        Tue Dec 20 17:40:02 1994
***************
*** 264,269 ****
--- 264,271 ----
              !krb5_principal_compare(err_reply->server, request.server) ||
              !krb5_principal_compare(err_reply->client, request.client))
              retval = KRB5_KDCREP_MODIFIED;
+         else if (!in_clock_skew(err_reply->stime))
+             retval = KRB5KRB_AP_ERR_SKEW;
          else
              retval = err_reply->error + ERROR_TABLE_BASE_krb5;

Can you try it and let me know?

Thanks.

[12/27/94 public]
I incorporated the fix and got the following results: 

(On the client machine):

# dce_login cell_admin -dce-
Sorry.
Password Validation Failure. - status 0x14129025 (dce / krb)

0x14129025 is the hex value for 336760869, which is "clock skew too
great".  I don't know why the value can't be translated -- can't find
the message catalog, maybe?  I set and exported NLSPATH to include
the explicit path to the directory in which dcekrb.cat resided, but
still no translation. I was running the scenario on an AIX 4.1.1 
machine installed, via dce_config, with some recent level of AIX DCE 
product code.  The catalog in question, dcekrb.cat, is built via the 
compile_et utility, whereas the "Invalid password" error message (one 
that gets returned correctly) comes from dcesec.cat, which is built by 
sams.

Ideas?

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12768
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec/utils,sec/server
Short Description             : Two small leaks
Reported Date                 : 12/17/94
Found in Baseline             : 1.0.3
Found Date                    : 12/17/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec_authn.c,rs_login.c
Sensitivity                   : public

[12/17/94 public]
  Two 1.0.3 (and prior) leaks, both tiny, found while searching for
the solution to the mother-lode leak that leaves login contexts in
memory forever... these leaks are present in 1.1 as well.
  The context diff attached has blank lines replaced by '.' because
our damaged OT client removes blank lines... sorry.
-------------------------------------------------------------------------------
Changes to security/server/rs/rs_login.c in open delta travis-LeakPatrol-sec-fix-leaks-as-they-are-found:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/server/rs/RCS/rs_login.c,v
retrieving revision 10.2
diff -cbt -r10.2 security/server/rs/rs_login.c
*** 10.2	1994/04/14 00:00:00
--- security/server/rs/rs_login.c	1994/12/17 03:42:27
***************
*** 295,303 ****
--- 295,305 ----
              /* done with the krb5 key, regardless */
              krb5_free_keyblock(key);
              if (GOOD_STATUS(&st)) {                        
+                 error_status_t ignore;
                  sec_login_validate_identity(context_info_p->context, passwd,
                                              &reset_passwd,
                                              &auth_src, &st);
+                 sec_crypt_free_key(&passwd, &ignore);
              }
          }
.  
-------------------------------------------------------------------------------
Changes to security/utils/sec_authn.c in open delta travis-LeakPatrol-sec-fix-leaks-as-they-are-found:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/utils/RCS/sec_authn.c,v
retrieving revision 10.3
diff -cbt -r10.3 security/utils/sec_authn.c
*** 10.3	1994/10/28 20:56:54
--- security/utils/sec_authn.c	1994/12/17 03:47:54
***************
*** 606,616 ****
           * the target server's realm
           */
.  
-         /* LEAK: Looks like nobody here ever cleans up the server_cell
-          * returned by the next call, allocated way down in sec_krb_util.c
-          * around line 369.
-          */
- 
          sec_dce_pair_from_krb_princ( (krb5_principal) server_name,
              &server_cell, NULL, &st);
          if (GOOD_STATUS(&st))
--- 606,611 ----
***************
*** 663,668 ****
--- 658,666 ----
              }
          }
      }
+ 
+     if (server_cell)
+       free(server_cell);
.  
      if (st != 0) {
          if (kcred)
-------------------------------------------------------------------------------

[12/18/94 public]
  The above diff does not handle the rpc_c_auth_name case at all, and
also exposed another part to be fixed. Ignore the above, please try
this one instead...
-------------------------------------------------------------------------------
Changes to security/server/rs/rs_login.c in open delta travis-LeakPatrol-sec-fix-leaks-as-they-are-found:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/server/rs/RCS/rs_login.c,v
retrieving revision 10.2
diff -cbt -r10.2 security/server/rs/rs_login.c
*** 10.2	1994/04/14 00:00:00
--- security/server/rs/rs_login.c	1994/12/17 03:42:27
***************
*** 295,303 ****
--- 295,305 ----
              /* done with the krb5 key, regardless */
              krb5_free_keyblock(key);
              if (GOOD_STATUS(&st)) {                        
+                 error_status_t ignore;
                  sec_login_validate_identity(context_info_p->context, passwd,
                                              &reset_passwd,
                                              &auth_src, &st);
+                 sec_crypt_free_key(&passwd, &ignore);
              }
          }
  
-------------------------------------------------------------------------------
Changes to security/utils/sec_authn.c in open delta travis-LeakPatrol-sec-fix-leaks-as-they-are-found:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/utils/RCS/sec_authn.c,v
retrieving revision 10.3
diff -cbt -r10.3 security/utils/sec_authn.c
*** 10.3	1994/10/28 20:56:54
--- security/utils/sec_authn.c	1994/12/18 20:21:18
***************
*** 580,586 ****
      krb5_ccache         krb_ccache;
      sec_login_handle_t  identity = (sec_login_handle_t) ccache;
      error_status_t st;
!     char  *server_cell;
      
      client_name = NULL;
      *cred = NULL;
--- 580,586 ----
      krb5_ccache         krb_ccache;
      sec_login_handle_t  identity = (sec_login_handle_t) ccache;
      error_status_t st;
!     char  *server_cell = 0;  /* Aha, auth_name case doesn't set this! */
      
      client_name = NULL;
      *cred = NULL;
***************
*** 606,616 ****
           * the target server's realm
           */
  
-         /* LEAK: Looks like nobody here ever cleans up the server_cell
-          * returned by the next call, allocated way down in sec_krb_util.c
-          * around line 369.
-          */
- 
          sec_dce_pair_from_krb_princ( (krb5_principal) server_name,
              &server_cell, NULL, &st);
          if (GOOD_STATUS(&st))
--- 606,611 ----
***************
*** 624,634 ****
--- 619,637 ----
              if (st == KRB5KRB_AP_ERR_TKT_EXPIRED) {
                  st = rpc_s_auth_tkt_expired;
              }           
+             if (server_cell)
+                 free(server_cell);
              return st;
          }
      }
      
      kcred = (krb5_creds *)malloc (sizeof(krb5_creds));
+     if (!kcred) {
+         sec_krb_parsed_name_free(&client_name);
+         if (server_cell)
+             free(server_cell);
+         return sec_s_no_memory;
+     }
  
      memset (kcred, 0, sizeof(krb5_creds));
  
***************
*** 663,668 ****
--- 666,674 ----
              }
          }
      }
+ 
+     if (server_cell)
+       free(server_cell);
  
      if (st != 0) {
          if (kcred)
-------------------------------------------------------------------------------

[12/19/94 public]

One minor change: sec_crypt_free_key() only has 1 argument, so the
first leak fix should be :

              /* done with the krb5 key, regardless */
              krb5_free_keyblock(key);
              if (GOOD_STATUS(&st)) {
                  sec_login_validate_identity(context_info_p->context, passwd,
                                              &reset_passwd,
                                              &auth_src, &st);
+                 sec_crypt_free_key(&passwd);
              }
          }

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12759
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : sec_salvage_db crashed
when reference a NULL pointer.
Reported Date                 : 12/6/94
Found in Baseline             : 1.1unintegrated
Found Date                    : 12/6/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec_salvage_db
Sensitivity                   : public

[12/6/94 public]

The sec_salvage_db build under 1.1unintegrated tree would crash.
The reason is sec_salvage_db ERA work was developed under 1.1 source
with the assumption that some pointers are defined as pointer to NULL.
With 1.1 unintegrated tree, these pointers are changed to be NULL pointers.
To fix the problem, please update your file:

.../src/security/server/sec_salvage_db/sec_svg_prt.c

1689c1701,1703
<     print_attr_schema_aclmgr(fp, schema_name, sch_entry_p->acl_mgr_set);
---
>     if ( sch_entry_p->acl_mgr_set != NULL ) {
>       print_attr_schema_aclmgr(fp, schema_name, sch_entry_p->acl_mgr_set);
>     }
1695c1709,1711
<     print_attr_binding(fp, sch_entry_p->trig_binding);
---
>     if ( sch_entry_p->trig_binding != NULL ) {
>       print_attr_binding(fp, sch_entry_p->trig_binding);
>     }
1698,1699c1714,1722
<     fprintf(fp, "%s = %s\n", prt_Attr_Schema_Scope, sch_entry_p->scope);
<     fprintf(fp, "%s = %s\n", prt_Attr_Schema_Comment, sch_entry_p->comment);
---
>     if ( sch_entry_p->scope == NULL )
>       fprintf(fp, "%s =\n", prt_Attr_Schema_Scope);
>     else
>       fprintf(fp, "%s = %s\n", prt_Attr_Schema_Scope, sch_entry_p->scope);
>
>     if ( sch_entry_p->comment == NULL )
>         fprintf(fp, "%s =\n", prt_Attr_Schema_Comment);
>     else
>         fprintf(fp, "%s = %s\n", prt_Attr_Schema_Comment, sch_entry_p->comment);

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12757
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd aborts if more than 10 ERAs are attached to a principal
Reported Date                 : 12/2/94
Found in Baseline             : 1.1unintegrated
Found Date                    : 12/2/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : security/server/rsdb/rsdb_attr.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[12/2/94 public]

IF YOU ARE MERGING THE UNINTEGRATED TREE, PLEASE MAKE THE FOLLOWING FIX!!:

We have uncovered a serious defect. secd will crash if more than 10
ERAs are attached to a principal. The following code changes to
security/server/rsdb/rsdb_attr.c, rsdb_attr_list_is_member()
fix the defect :

<<< file 1: rsdb_attr.c@@/main/mullan_mothra_attrlist_fix/0 (old)
>>> file 2: rsdb_attr.c (new)
********************************
-----[after 10 inserted 11-15]-----
>  * Revision /main/mullan_mothra_attrlist_fix/1  1994/12/02  16:38 UTC  mullan_s
>  *    rsdb_attr_list_is_member: set free_list_id to last good entry of attr_list_id if
>  *    end of attr list is reached. Prevents secd from crashing if list.count
>  *    > RSDB_MAX_ATTR_LIST_SIZE.
>  * 
-----[after 1157 inserted 1163]-----
>     rsdb_pvt_id_t             last_attr_list_id;
-----[after 1177 inserted 1184-1188]-----
>         /* 
>          * save the value of the last good attr_list_id in case we
>          * need it for the free_list_id
>          */
>         last_attr_list_id = attr_list_id;
-----[1181 changed to 1192]-----
<         *free_list_id = (space_id != END_OF_LIST) ? space_id : attr_list_id;
---
>         *free_list_id = (space_id != END_OF_LIST) ? space_id : last_attr_list_id;

[2/13/94 public]

I believe this would also be an essential fix for DCE 1.1/SVR4 code.

[12/21/95 public]
This fix is included in the 1.2.1 tree (and hopefully in everybody's  1.1
product, given that the diff has been listed here for a year now).
Marked 'closed'.

[9/13/96 public]
  Sorry I forgot to include the comments when I changed "fixedin" field.
This defects was already included into 1.1 maintenance tree.



CR Number                     : 12756
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec login cache
Short Description             : temporary refreshed contexts fill cache
Reported Date                 : 11/30/94
Found in Baseline             : 1.0.2
Found Date                    : 11/30/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[11/30/94 public]
 The default context, when refreshed, leaves the login cache with
unremovable entries. The allocation of the context inits the refcount
to one, as its caller will use the handle. The cache increments the
refcount by one at entry, as the cache entry itself constitutes a reference
to the handle. But when this all happens under the refreshing of the
default context, the caller's reference appears to never be dropped,
and the cache can never drop its reference due to that. The result is
a cache full of essentially equal contexts, all with two references
outstanding, but never to be used.
  The test program, obtained directly from a customer site and
modified as described in the following text, may be called into
question as it constantly performs "get current context" calls and
never explicitly releases the obtained contexts. Well, OK, but try to
release it.. and anyway, the customer might never have noticed this
had the result been a single cache entry which remains, with a rfcount
equal to two plus the number of times they'd called
sec_login_get_current_context()...
  Isn't this what every context-refresh thread in the world will
cause to happen?
  The program below was modified only to call a new routine in libsec.a
that simply dumps the very basics of the login cache.
  While I'm filing this as having been found in 1.0.2, it still exists
in 1.0.3, and I haven't had the time to check 1.1 but it's likely
not to have changed, no?
  An egrep of the existing OT CR comp-sec list didn't turn up any
immediate answers for this one. OT CR 9353 sort of hinted at this.
  I attach the program and the output. Our OT client will probably
remove blank lines, sorry..
-------------------------------------------------------program
#include <stdio.h>
#include <dce/sec_login.h>
#include <dce/dce_error.h>
#include <string.h> 
#include <sys/types.h>
extern int errno;
extern char *sys_errlist[];
extern int sys_nerr;
#define WARN(fctn, got, ok) {if (got != ok) { \
   fprintf (stderr, "Warning: %s returned %ld\n", fctn, (long)got); \
   if (got > 100) {\
      unsigned char err_text[dce_c_error_string_len+1]; \
      int dce_err_status; \
      dce_error_inq_text (got, err_text, &dce_err_status); \
      if (dce_err_status == 0) printf ("   %s\n", err_text); \
      } \
   }}
#define ERR_CHECK(fctn, got, ok) {if ((unsigned long)got != \
      (unsigned long)ok) { \
   fprintf (stderr, "Error: %s returned %ld\n", \
     fctn, (long)got); \
   if ((unsigned long)got > (unsigned long)sys_nerr) {\
      unsigned char err_text[dce_c_error_string_len+1]; \
      int dce_err_status; \
      dce_error_inq_text (got, err_text, &dce_err_status); \
      if (dce_err_status == 0) printf ("   %s\n", err_text); \
   } \
   else { \
      fprintf (stderr, "  errno is %d (%s)\n", \
         (int)errno, sys_errlist[errno]); \
   } \
   exit (1);}}
#define LOOP_NUM 10
main()
{
    char *password = "-dce-";
    char *testp;
    sec_login_handle_t   login_context;
    error_status_t       estatus;
    sec_passwd_str_t     pbuf;
    boolean32            reset_flag;
    int                  ret;
    sec_login_auth_src_t auth_src;
    sec_passwd_rec_t     passwd;
    int                  i;
	extern void sec_login_dump_cache();
    for( i=0; i < LOOP_NUM; i++) {
	printf("This is iteration # %d\n", i);
	printf(" The break addr is %x before sec_login_get_current_context\n", sbrk(0));    
	sec_login_get_current_context(&login_context, &estatus);
	ERR_CHECK("get_context", estatus, error_status_ok);
	printf(" The break addr is %x after sec_login_get_current_context\n", sbrk(0));    
	sec_login_dump_cache();
	printf("  The break addr is %x before sec_login_refresh_identity\n", sbrk(0));    
	ret = sec_login_refresh_identity(login_context, &estatus);
	WARN("refresh identity", estatus, error_status_ok);
	ERR_CHECK("refresh identity", ret, 1);
	printf("  The break addr is %x after sec_login_refresh_identity\n", sbrk(0));
	sec_login_dump_cache();
	passwd.version_number = sec_passwd_c_version_none;
	passwd.pepper = NULL;
	passwd.key.key_type = sec_passwd_plain;
	strcpy(pbuf, password);
	passwd.key.tagged_union.plain = (unsigned char *) pbuf;
	printf("    The break addr is %x before sec_login_validate_identity\n", sbrk(0));    
	ret = sec_login_validate_identity(login_context, &passwd,
				      &reset_flag, &auth_src, &estatus);
	WARN("validate_identity", estatus, error_status_ok);
	ERR_CHECK("validate_identity", ret, 1);    
	printf("    The break addr is %x after sec_login_validate_identity\n", sbrk(0));    
	sec_login_dump_cache();
    }
}
-------------------------------------------------------program end
-------------------------------------------------------output
This is iteration # 0
 The break addr is 68000 before sec_login_get_current_context
cache lookup for FILE:/opt/dcelocal/var/security/creds/dcecred_349d9e00
login handle cache miss
adding 6c030 to cache
6c030 added to cache
 The break addr is 90000 after sec_login_get_current_context
----
| Cache stats:  enters=1 removals=0 lookups=1 hits=0
| 6c030    refs=2
----
  The break addr is 90000 before sec_login_refresh_identity
  The break addr is 1a0000 after sec_login_refresh_identity
----
| Cache stats:  enters=1 removals=0 lookups=1 hits=0
| 6c030    refs=2
----
    The break addr is 1a0000 before sec_login_validate_identity
adding 130030 to cache
130030 added to cache
130030: login handle refcount bumped from 2 to 3
130030: login handle refcount bumped from 3 to 4
130030: login handle refcount bumped from 4 to 5
130030: dropping login handle refcount from 5 to 4
130030: Reading cache
130030: Cache read in and set
130030: dropping login handle refcount from 4 to 3
130030: dropping login handle refcount from 3 to 2
    The break addr is 1e0000 after sec_login_validate_identity
----
| Cache stats:  enters=2 removals=0 lookups=1 hits=0
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 1
 The break addr is 1e0000 before sec_login_get_current_context
 The break addr is 1e0000 after sec_login_get_current_context
----
| Cache stats:  enters=2 removals=0 lookups=1 hits=0
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 1e0000 before sec_login_refresh_identity
  The break addr is 1e0000 after sec_login_refresh_identity
----
| Cache stats:  enters=2 removals=0 lookups=1 hits=0
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 1e0000 before sec_login_validate_identity
adding 134030 to cache
134030 added to cache
134030: login handle refcount bumped from 2 to 3
134030: login handle refcount bumped from 3 to 4
134030: login handle refcount bumped from 4 to 5
134030: dropping login handle refcount from 5 to 4
134030: Reading cache
134030: Cache read in and set
134030: dropping login handle refcount from 4 to 3
134030: dropping login handle refcount from 3 to 2
    The break addr is 1f2000 after sec_login_validate_identity
----
| Cache stats:  enters=3 removals=0 lookups=1 hits=0
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 2
 The break addr is 1f2000 before sec_login_get_current_context
 The break addr is 1f2000 after sec_login_get_current_context
----
| Cache stats:  enters=3 removals=0 lookups=1 hits=0
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 1f2000 before sec_login_refresh_identity
  The break addr is 1f2000 after sec_login_refresh_identity
----
| Cache stats:  enters=3 removals=0 lookups=1 hits=0
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 1f2000 before sec_login_validate_identity
adding 1a6030 to cache
1a6030 added to cache
1a6030: login handle refcount bumped from 2 to 3
1a6030: login handle refcount bumped from 3 to 4
1a6030: login handle refcount bumped from 4 to 5
1a6030: dropping login handle refcount from 5 to 4
1a6030: Reading cache
1a6030: Cache read in and set
1a6030: dropping login handle refcount from 4 to 3
1a6030: dropping login handle refcount from 3 to 2
    The break addr is 1f2000 after sec_login_validate_identity
----
| Cache stats:  enters=4 removals=0 lookups=1 hits=0
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 3
 The break addr is 1f2000 before sec_login_get_current_context
 The break addr is 1f2000 after sec_login_get_current_context
----
| Cache stats:  enters=4 removals=0 lookups=1 hits=0
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 1f2000 before sec_login_refresh_identity
  The break addr is 1f2000 after sec_login_refresh_identity
----
| Cache stats:  enters=4 removals=0 lookups=1 hits=0
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 1f2000 before sec_login_validate_identity
adding 1af030 to cache
1af030 added to cache
1af030: login handle refcount bumped from 2 to 3
1af030: login handle refcount bumped from 3 to 4
1af030: login handle refcount bumped from 4 to 5
1af030: dropping login handle refcount from 5 to 4
1af030: Reading cache
1af030: Cache read in and set
1af030: dropping login handle refcount from 4 to 3
1af030: dropping login handle refcount from 3 to 2
    The break addr is 200000 after sec_login_validate_identity
----
| Cache stats:  enters=5 removals=0 lookups=1 hits=0
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 4
 The break addr is 200000 before sec_login_get_current_context
 The break addr is 200000 after sec_login_get_current_context
----
| Cache stats:  enters=5 removals=0 lookups=1 hits=0
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 200000 before sec_login_refresh_identity
  The break addr is 200000 after sec_login_refresh_identity
----
| Cache stats:  enters=5 removals=0 lookups=1 hits=0
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 200000 before sec_login_validate_identity
adding 1ab030 to cache
1ab030 added to cache
1ab030: login handle refcount bumped from 2 to 3
1ab030: login handle refcount bumped from 3 to 4
1ab030: login handle refcount bumped from 4 to 5
1ab030: dropping login handle refcount from 5 to 4
1ab030: Reading cache
1ab030: Cache read in and set
1ab030: dropping login handle refcount from 4 to 3
1ab030: dropping login handle refcount from 3 to 2
    The break addr is 200000 after sec_login_validate_identity
----
| Cache stats:  enters=6 removals=0 lookups=1 hits=0
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 5
 The break addr is 200000 before sec_login_get_current_context
 The break addr is 200000 after sec_login_get_current_context
----
| Cache stats:  enters=6 removals=0 lookups=1 hits=0
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 200000 before sec_login_refresh_identity
  The break addr is 200000 after sec_login_refresh_identity
----
| Cache stats:  enters=6 removals=0 lookups=1 hits=0
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 200000 before sec_login_validate_identity
adding 1f4030 to cache
1f4030 added to cache
1f4030: login handle refcount bumped from 2 to 3
1f4030: login handle refcount bumped from 3 to 4
1f4030: login handle refcount bumped from 4 to 5
1f4030: dropping login handle refcount from 5 to 4
1f4030: Reading cache
1f4030: Cache read in and set
1f4030: dropping login handle refcount from 4 to 3
1f4030: dropping login handle refcount from 3 to 2
    The break addr is 200000 after sec_login_validate_identity
----
| Cache stats:  enters=7 removals=0 lookups=1 hits=0
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 6
 The break addr is 200000 before sec_login_get_current_context
 The break addr is 200000 after sec_login_get_current_context
----
| Cache stats:  enters=7 removals=0 lookups=1 hits=0
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 200000 before sec_login_refresh_identity
  The break addr is 200000 after sec_login_refresh_identity
----
| Cache stats:  enters=7 removals=0 lookups=1 hits=0
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 200000 before sec_login_validate_identity
adding 1f7030 to cache
1f7030 added to cache
1f7030: login handle refcount bumped from 2 to 3
1f7030: login handle refcount bumped from 3 to 4
1f7030: login handle refcount bumped from 4 to 5
1f7030: dropping login handle refcount from 5 to 4
1f7030: Reading cache
1f7030: Cache read in and set
1f7030: dropping login handle refcount from 4 to 3
1f7030: dropping login handle refcount from 3 to 2
    The break addr is 208000 after sec_login_validate_identity
----
| Cache stats:  enters=8 removals=0 lookups=1 hits=0
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 7
 The break addr is 208000 before sec_login_get_current_context
 The break addr is 208000 after sec_login_get_current_context
----
| Cache stats:  enters=8 removals=0 lookups=1 hits=0
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 208000 before sec_login_refresh_identity
  The break addr is 208000 after sec_login_refresh_identity
----
| Cache stats:  enters=8 removals=0 lookups=1 hits=0
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 208000 before sec_login_validate_identity
adding 1f9030 to cache
1f9030 added to cache
1f9030: login handle refcount bumped from 2 to 3
1f9030: login handle refcount bumped from 3 to 4
1f9030: login handle refcount bumped from 4 to 5
1f9030: dropping login handle refcount from 5 to 4
1f9030: Reading cache
1f9030: Cache read in and set
1f9030: dropping login handle refcount from 4 to 3
1f9030: dropping login handle refcount from 3 to 2
    The break addr is 210000 after sec_login_validate_identity
----
| Cache stats:  enters=9 removals=0 lookups=1 hits=0
| 1f9030   refs=2
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 8
 The break addr is 210000 before sec_login_get_current_context
 The break addr is 210000 after sec_login_get_current_context
----
| Cache stats:  enters=9 removals=0 lookups=1 hits=0
| 1f9030   refs=2
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 210000 before sec_login_refresh_identity
  The break addr is 210000 after sec_login_refresh_identity
----
| Cache stats:  enters=9 removals=0 lookups=1 hits=0
| 1f9030   refs=2
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 210000 before sec_login_validate_identity
adding 1e8030 to cache
1e8030 added to cache
1e8030: login handle refcount bumped from 2 to 3
1e8030: login handle refcount bumped from 3 to 4
1e8030: login handle refcount bumped from 4 to 5
1e8030: dropping login handle refcount from 5 to 4
1e8030: Reading cache
1e8030: Cache read in and set
1e8030: dropping login handle refcount from 4 to 3
1e8030: dropping login handle refcount from 3 to 2
    The break addr is 210000 after sec_login_validate_identity
----
| Cache stats:  enters=10 removals=0 lookups=1 hits=0
| 1e8030   refs=2
| 1f9030   refs=2
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
This is iteration # 9
 The break addr is 210000 before sec_login_get_current_context
 The break addr is 210000 after sec_login_get_current_context
----
| Cache stats:  enters=10 removals=0 lookups=1 hits=0
| 1e8030   refs=2
| 1f9030   refs=2
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
  The break addr is 210000 before sec_login_refresh_identity
  The break addr is 210000 after sec_login_refresh_identity
----
| Cache stats:  enters=10 removals=0 lookups=1 hits=0
| 1e8030   refs=2
| 1f9030   refs=2
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
    The break addr is 210000 before sec_login_validate_identity
adding 209030 to cache
209030 added to cache
209030: login handle refcount bumped from 2 to 3
209030: login handle refcount bumped from 3 to 4
209030: login handle refcount bumped from 4 to 5
209030: dropping login handle refcount from 5 to 4
209030: Reading cache
209030: Cache read in and set
209030: dropping login handle refcount from 4 to 3
209030: dropping login handle refcount from 3 to 2
    The break addr is 21a000 after sec_login_validate_identity
----
| Cache stats:  enters=11 removals=0 lookups=1 hits=0
| 209030   refs=2
| 1e8030   refs=2
| 1f9030   refs=2
| 1f7030   refs=2
| 1f4030   refs=2
| 1ab030   refs=2
| 1af030   refs=2
| 1a6030   refs=2
| 134030   refs=2
| 130030   refs=2
| 6c030    refs=2
----
-------------------------------------------------------output end

[12/2/94 public]
   Additional probing seems to have narrowed the field a bit on this
bug. The new context generated within sec_login_validate_identity()
passes down through sec_login_pvt_get_login_info() and into
bind_to_rgy(). Within the deeper call rca_site_bind(), this 'new'
context triggers a callto rca_handle_init() which calls
sec_login_util_reference() to indicate its interest in the login
context that is part of the new handle's identity. I suspect this is
the reference to the login context that is never dropped. I am
exploring the binding cache (as opposed to the login cache) to see how
the operations on the /binding/ context elements affect the refcounts
within the /login/ cache; sec_rgy_site_close() doesn't drop the
binding context's ref to the identity unconditionally, and I suspect
there's a skew somewhere where a sec_login_util_reference() is not
paired with a ..._release() -- somewhere in the binding code.
(Assigning to Mary B because the OSF hasn't moved it in a day, and Mary
seems nice enough to not mind me doing this to get it seen by the HP
team.)
Filled in Affected File with `internal_binding.c (I think)' 
Filled in Responsible Engr. with `mob' 
Filled in Resp. Engr's Company with `hp'

[12/5/94 public]
   Changed title -- there is no indication (anymore) that this is
limited to default contexts.
   Changed affected files -- reflects rps's recent mail saying that he
feels the problem lies outside of the binding cache code.
   No longer assigned to Mary (I didn't realize that HP could see the
bug as soon as I set it to compnent 'sec').
Changed Short Description from `refreshed default contexts pile up' to `temporary refreshed contexts 
 fill cache' 
Changed Affected File from `internal_binding.c (I think)' to `' 
Changed Responsible Engr. from `mob' to `' 
Changed Resp. Engr's Company from `hp' to `'

[12/5/94 public]
  Can someone with more PRC experience than I review the following
theory and see if it holds water?
  In rpc_binding_set_auth_info(), there's a comment above a call that
reads as follows:
-------------------------------------------------------
802         /*
803          * Resolve the auth_identity into a real reference to the identity
804          * prior to the cache lookup.
805          */
806         
807         *st = (*auth_epv->resolve_id)
808             (auth_identity, &ref_auth_identity);
809
810         if (*st != rpc_s_ok)
811             return;
-------------------------------------------------------
  I'm not sure what cache lookup they intend to be doing this
'before', but later on they do go into rpc__krb_bnd_set_auth(), which
does a sec_krb_get_cc() which bumps the refcount on the login context.
Unfortunately (???), this same increment of the same refcount was
trigged by the call quoted above, which winds into sec_krb_get_cc() as
well (the call's code looks like:)
-------------------------------------------------------
863             (*auth_epv->binding_set_auth_info)
864                 (server_princ_name, authn_level, auth_identity, 
865                  authz_protocol, binding_h, &auth_info, st);
-------------------------------------------------------
  I haven't found the releases for both instances of this. I find
it interesting that one call frame (rpc_binding_set_auth_info) results
in a net gain of two refcounts. Sure, maybe it should, but I'll keep
reading until I'm convinced. The comment I quoted makes me think that
(perhaps) the author was looking to avoid a cache search buts gets one
anyway.. what do *I* know about RPC ...
  Sorry to be so verbose here. I'm hoping I say something that clues a
developer (more familiar with the paths than I) into an epiphany, as I
really need to do something else today. :-|

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12754
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd crashed after 8 hours running DCDREL001
Reported Date                 : 11/23/94
Found in Baseline             : 1.1
Found Date                    : 11/23/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[11/23/94 public]

While running DCDREL001 in a 3 node cell consisting of an HP
core server and 2 OSF/1 client systems, secd crashed on the core
server. This was run against the mainline 1.1 release, (not the
unintegrated tree).

The backtrace from xdb showed:

   0 sec_krb_decode_msg_common_frag + 0x00000944 (0x40213914, 0x2,
	  0x4076c6d8, 0x4076c6e4)
   1 sec_krb_dg_decode_msg_frags@li + 0x00000080 (0x40213914, 0x402138c4,
	  0x2, 0x4076c6e4)
   2 sec_krb_dg_decode_message@libd + 0x00000094 (0x40213914, 0x402138c4,
	  0x2, 0x4076c6e4)
   3 rpc__krb_dg_who_are_you@libdce + 0x00000c60 (0x40785728, 0x40769c00,
	  0x4071d19c, 0x2eb5403a)
   4 rpc__dg_sct_way_validate@libdc + 0x00000304 (0x4071d198, 0,
	  0x40213524, 0x40213558)
   5 rpc__dg_execute_call@libdce + 0x00001350 (0x40787b00, 0, 0, 0)
   6 cthread_call_executor@libdce + 0x000002d4 (0x40191d90, 0x7af4a600,
	  0x40047550, 0xc)
   7 cma__thread_base@libdce + 0x0000021c (0x40047550, 0, 0, 0)
   8 cma__thread_start1@libdce + 0x0000004c (0x40047550, 0, 0, 0)
   9 cma__thread_start0@libdce + 0x00000008 (0x40047550, 0, 0, 0)
  10 sec_krb_decode_msg_common_frag + 0x00000944 (0, 0, 0, 0)

There were quite a few certified login failures scattered thruout
the test passes. I haven't seen certified logins fail before except 
when dced has crashed. However, this time dced stayed up on all nodes.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12730
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_authn
Short Description             : dce_config fails many places with EPAC problem
Reported Date                 : 10/26/94
Found in Baseline             : 1.1unintegrated
Found Date                    : 10/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : security/utils/authz_util.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[10/26/94 public]

The dce_config (SNI version as well as OSF version) shows the EPAC problem
many places. Examples include:

   a)
        1994-10-25-18:40:10.860-04:00I----- secd ERROR rpc auth cnsassm.c 4029 0
x08343078
        RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: can't find appropriate seal
 for EPAC (dce / sec)

   b)
        + acl_edit /.: -s unauthenticated:rt group:subsys/dce/cds-admin:rwcidta
group:subsys/dce/cds-server:rwcidta any_other:rt
        1994-10-25-17:03:28.420-04:00I----- cdsd(8306) ERROR rpc auth cnsassm.c
4029 0x0839b0c8
        RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: can't find appropriate seal
 for EPAC (dce / sec)

[10/26/94 public]
Note the platform is Sinix only.

I talked with Parul about this and we belive the problem is in security.
No major rpc changes have been made (and very few minor ones)
since the last time SNI had everything working (bl-14 or so).
A likely candidate would have been the big-PAC work done to CN rpc,
however this was tested on SVR4 and was proven to work.

Security on the other hand, has had many recent changes.

The key point to note is that the SVR4 memory allocator is very picky
and small memory mistakes will show up on that platform and not on the
other reference platforms.

[2/9/95 public]
Tom at Gradient reports that he is having the same problems that DCE 1.1
exhibited on SINIX platform. I presume that Tom is using UNIXware from 
Novell and that he is not using re-entrant libraries that SNI used to
use. Also, I assume that the dce_config used by Tom is the one from OSF.

He provided additional information that I have also seen on SINIX platform
while working for SNI:

============Begin Message===========
The symptoms are numerous messages such as this:
1995-02-08-15:30:40.226-05:00I----- secd ERROR rpc auth cnsassm.c 4032 0x08237988
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: can't find appropriate seal for EPAC (dce / sec)

(when using CN rpc of course).
Using DG rpc, you get 'who are you' failures.


Here is what's happening:

secd as a server is getting an authenticated rpc.
the rpc runtime calls rpc__krb_vrfy_client_req (in runtime/krbcn.c)
This makes the following stack calls:

[idl_es_get_encoding_header 	[pickling.c]
[14] idl_es_inq_encoding_id 		[pickling.c]
[sec_encode_get_encoding_type 	[sec_encode.c]
[12] priv_krb_util_parse_v0_authdata 	[priv_krb_util.c]
[sec_krb_decode_msg_common_frags 	[sec_authn.c]
[10] sec_krb_decode_message_common 	[sec_authnc.c]
[sec_krb_cn_decode_message 		[krbcn.c]
[8] rpc__krb_cn_vfy_client_req

In idl_es_get_encoding_header(), the first thing pulled out of the
buffer is the idl encoding service version, which should be 1.
It isn't (sometimes), it is 0, and it returns rpc_idl_es_wrong_version.

sec_encode_get_encoding_type() then returns sec_encode_type_unknown.
priv_krb_util_parse_v0_authdata doesn't set up v1_1_ad correctly and just
returns.
sec_krb_decode_msg_common_frags() then generates a sec_authn_s_no_seal status 
because v1_1_ad is junk.

The error you see from secd (and other servers) is:

1995-02-07-17:45:22.887-05:00I----- secd ERROR rpc auth cnsassm.c 4032 0x0823513
8 RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: can't find appropriate seal for E
PAC (dce / sec)

Even though dce_login generates this error from secd, it still seems
to complete successfully, while other things (rgy_edit -update for instance) 
get upset.

Has anyone else seen this behavior?  I can get it pretty consistantly
and I'm still tracking it, but I was hoping you folks might have some
ideas, or better yet, a fix!

============End Message===========

To add to this, back in November, we (SNI) had seen identical behavior and so
far no solutions have been submitted for this. Following are additional notes
from SNI time:

=========Begin additional info============
We are trying to solve this problem we have on the SVR4 platform using the
unintergrated dce1.1 tree.  We know it is going to be some uninitalized 
data or a runaway pointer which hardly ever effects the other platforms, but
it is still be a bug. 

---- the failure ----
MALLOC Warning from malloc():
Allocation of zero length segment
MALLOC Warning from malloc():
Allocation of zero length segment
1994-11-04-15:56:57.600-05:00I----- secd ERROR rpc auth cnsassm.c 4029 0x0833b5a8RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: can't find appropriate seal for EPAC (dce / sec)


We see this problem a lot, but it doesn't happen consistently.  It can be
generated by acl_edit, rgy_edit, klist  ...

We have traced it to a point in secd.

in the routine: sec_krb_decode_msg_common_frags  (sec_authn.c)

after this point in the code:

1935      ad_parts = priv_krb_util_parse_v0_authdata(malloc_shim, free,
1936                             authent->ticket->enc_part2->authorization_data,1937                             (authz_fmt == SEC_AUTHZ_FMT_V1_0)
1938                             ? NULL : &v1_1_ad,
1939                             &pickled_pac, &st);
1940

if authz_fmt is 1 it always works !!

if authz_fmt is 2 and ad_parts is 12 it works!!

if authz_fmt is 2 and ad_parts is 4 it fails since it won't enter the 
loop on line 2062.  Is it valid for ad_parts to be 4 and SEC_AUTHZ_FMT_V1_1?

The if statement on line 560 on priv_krb_util.c fail (encoding_type 0)

=========End additional info============

[2/9/95 public]

To reflect the urgency shown by our customer Gradient Technologies, I'm bumping
the priority to A0.

[3/6/95 public]

OK. Now I have found the exact cause of this problem and a possible solution 
that seems to be holding so far. So here is the brief description of the 
problem:

The routines sec__authz_util_marsh_v0_authzd() and 
sec__authz_util_unmarsh_v0_authzd() was unknowingly depending upon the locally 
malloced address alignment when creating or parsing authz_data. This was 
causing problems when the buffer's starting address was 4-byte aligned instead 
of 8-byte aligned. Since marshalling uses rpc_ss_alloc for mallocing the 
memory, it appeared to be getting 8-byte aligned buffer always (? I could be 
wrong!). But in case of unmarshalling, it was using straight malloc to get the
initial buffer that was passed as authz_data to be unmarshalled. Too often, this
address was 4-byte aligned and was causing problems due to the following 
calculations that depended upon the buffer address rather than absolute packet 
format.

For convenience, I have used #define SNI_SVR4 to indicate all the changes in 
the file security/utils/authz_util.c

311  void sec__authz_util_marsh_v0_authzd (
312      idl_void_p_t   (*alloc)(idl_size_t size),      /* [in] */
...
...
417              if (authz_header_len) {
418                  AUTHZ_UTIL_MARSH_BYTES(mp, authz_header, authz_header_len);
419              }
420
421              /* advance past padding, if any */
422  #ifdef SNI_SVR4
423              AUTHZ_UTIL_ADVANCE_MP(mp, pad);
424  #else
425              AUTHZ_UTIL_ALIGN_MP(mp, v0_authz_alignment);
426  #endif
427
428              if (encoded_v1_1_ad->num_bytes) {
429                  AUTHZ_UTIL_MARSH_BE_UNSIGNED32(mp, encoded_v1_1_ad->num_bytes);
430  #ifdef SNI_SVR4
431                  AUTHZ_UTIL_ADVANCE_MP(mp, 8);
432  #else
433                  AUTHZ_UTIL_ADVANCE_MP(mp, 4);
434                  AUTHZ_UTIL_ALIGN_MP(mp, v0_authz_alignment);
435  #endif
...
...
501  void sec__authz_util_unmarsh_v0_authzd (
502      sec_bytes_t            *authz_data,                   /* [in] */
...
...
562          *encoded_pac_len = idl_pkl_data_offset + data_len;
563          *encoded_pac_len = (*encoded_pac_len + (7)) & ~(7);
564
565          if (*encoded_pac_len < authz_data->num_bytes) {
566              mp =  (sec_authz_mp_t) (authz_data->bytes + *encoded_pac_len);
567              AUTHZ_UTIL_UNMARSH_BE_UNSIGNED32(mp, encoded_v1_1_ad->num_bytes);
568  #ifdef SNI_SVR4
569              AUTHZ_UTIL_ADVANCE_MP(mp, 8);
570  #else
571              AUTHZ_UTIL_ADVANCE_MP(mp, 4);
572              AUTHZ_UTIL_ALIGN_MP(mp, v0_authz_alignment);
573  #endif
574              encoded_v1_1_ad->bytes = (idl_byte *) mp;
575          }
576
577      } else if (uuid_equal(&authzd_type, &sec__g_v0_authzd_no_compat, &ignore_st)) {
578          /*
579           * There is no version 0 idl pickle containing a version
580           * 1 compatibility PAC, so a v1_1 pickle begins right after
581           * the authorization data header.
582           */
583
584          mp = (sec_authz_mp_t) &(authz_data->bytes[v0_authz_header_size]);
585  #ifdef SNI_SVR4
586          AUTHZ_UTIL_ADVANCE_MP(mp, authz_padding(sizeof(sec__g_v0_authzd_no_compat),
587                                                  v0_authz_alignment));
588  #else
589          AUTHZ_UTIL_ALIGN_MP(mp, v0_authz_alignment);
590  #endif
591          AUTHZ_UTIL_UNMARSH_BE_UNSIGNED32(mp, encoded_v1_1_ad->num_bytes);
592  #ifdef SNI_SVR4
593          AUTHZ_UTIL_ADVANCE_MP(mp, 8);
594  #else
595          AUTHZ_UTIL_ADVANCE_MP(mp, 4);
596          AUTHZ_UTIL_ALIGN_MP(mp, v0_authz_alignment);
597  #endif
598          encoded_v1_1_ad->bytes = (idl_byte *) mp;
599      } /* default: return nothing cause we don't undertand the type */
600  }


As you would notice above, I have replaced all AUTHZ_UTIL_ALIGN_MP's by 
appropriate AUTHZ_UTIL_ADVANCE_MP's. This makes the packet format independent
of address of mp.

This solution will maintain interoperability with existing reference platforms 
by creating gaps as was expected as if the mp was initiated with 8-byte aligned 
address boundary. 

I need a quick review (from HP) of the proposed solution so that we concur on 
our approach when given out to our customers.

[3/10/95 public]
I have received comments from HP (greg) and here is a summary of his 
suggestions:

1. Replace number 8's by v0_authz_alignment on lines 431, 569, and 593

2. Repleace lines 586-587 with the following:
   586          AUTHZ_UTIL_ADVANCE_MP(mp, authz_padding(v0_authz_header_size,
   587                                                  v0_authz_alignment));

3. Apply SNI_SVR4 changes to the code and remove the ifdefs

[12/11/95 public]

Closed.

[9/13/96 public]

Updated FixedinBaseline to indicate this was fixed in 1.1maint stream in
Dec. 95.



CR Number                     : 12680
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : check for cell/principal name clash
Reported Date                 : 10/20/94
Found in Baseline             : 1.1b23
Found Date                    : 10/20/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1, 1.1maint
Affected File(s)              : security/server/rs/rs_pgo.c
Sensitivity                   : public

[10/20/94 public]
The following is the description of the problem from the 1.1 docs:

  Select a CDS name that will represent the child cell.
  Note that because both cell names and principal names
  can be hierarchical, problems can occur when a child
  cell name matches a principal name in the parent cell.
  Consider the following example. A principal named \*Lme\*O
  exists in a child cell named
  
  /.../coolco.com/northeast/marketing/inbound.
  
  The principal object name is:
  
  /.../coolco.com/northeast/marketing/inbound/sec/principal/me
  
  A principal named \*Linbound/me\*O exists in the parent
  cell \*L/.../coolco.com/northeast/marketing\*O.
  The principal object name is:
  
  /.../coolco.com/northeast/marketing/sec/principal/inbound/me
  
  The fully-qualified name of either of these principals is:
  
  /.../coolco.com/northeast/marketing/inbound/me
  
  In this case, it is impossible to determine
  in which cell, child or parent, the principal exists.
  Is it the principal named ``inbound/me'' in the cell named
  ``/.../coolco.com/northeast/marketing'', or is it
  the principal named ``me'' in the child cell named
  ``/.../coolco.com/northeast/marketing/inbound''?
  
  Consequently, you must ensure that the name you select does
  not conflict with any principal names on the parent cell. To test
  whether or not the CDS name you select is the same
  as a principal name on the parent, use the
  \*Ldcecp principal show\*O command and specify
  the CDS name you want to use for the child cell.
  If an error message is returned from \*Ldcecp\*O indicating
  that there is no principal named \*Lnortheast/marketing/inbound\*O
  (i.e., Error: Registry object not found) it is safe to use it as a
  child cell name.  

Checks need to be added to the secd to ensure that users can't create
either a cell that conflicts with an existing principal or a principal that
conflicts with an existing cell.

This was planned for 1.1 but didn't make it in.

[aha public]

Fixed at HP.
The DCE 1.1 Administration Guide does not describe the problem
correctly.  Step 3 of Section 21.6.2 "Adding a Cell to a Cell
Hierarchy" needs to be corrected according to following: 

>  Previously, an authorized user could add a new principal "xxx/yyy" that
>  could conflict with an existing child cell principal "krbtgt/xxx".  An
>  authorized user could also add a new child cell "krbtgt/xxx" that could
>  conflict with an existing principal "xxx/yyy".  These names conflict
>  because, with hierarchical cells, "/.../top_cell/xxx/yyy" could mean either
>  principal "xxx/yyy" in "/.../top_cell" or principal "yyy" in child
>  cell "/.../top_cell/xxx".

Also add note that the DCE Registry will not
allow adding a child cell or new principal that would create
an ambiguity.  DCE Registry returns an error indicating the name
is not valid in this case.


Diffs follow:
*** rs_pgo.c@@/main/LATEST	Fri Sep 30 21:47:51 1994
--- /net/kate/disk2/users/aha/rs_pgo.c	Fri Jul 21 17:12:13 1995
***************
*** 8,13 ****
--- 8,17 ----
  /*
   * HISTORY
   * $Log:	c012680,v $
# Revision 1.8  96/01/24  15:52:03  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.7  95/12/19  13:39:27  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/19/95 public]
# 
# Revision 1.6  95/12/18  11:20:45  root
# changed fields: Affected File(s)   new/changed/deleted note(s) [wwang 12/18/95 public]
# 
# Revision 1.5  95/07/21  18:03:22  root
# changed fields:  new/changed/deleted note(s) [melman 7/21/95 public]
# 
# Revision 1.4  95/07/21  17:20:08  root
# changed fields:  new/changed/deleted note(s) [melman 10/20/94 public] [melman 10/20/94 public]
# 
+  * Revision /main/HPDCE02/aha_mothra7/6  1995/07/17  20:32 UTC  aha
+  * 	CHFts15254/OT12680: prevent addition of ambiguous principals;
+  * 	 merge out from mainline
+  *
   * Revision 1.1.89.5  1994/09/30  20:52:57  kline_s
   * 	CR 12426 - Fix bogus audit event specific info for PGO_Get and
   * 	PGO_KeyTransfer events.
***************
*** 286,292 ****
      boolean32           check_quota = true;
      sec_rgy_foreign_id_t    client_ids;                   
      error_status_t      tmp_status;
!     boolean32           is_cell;
  
  #if defined(DCE_AUD_POINTS)
      dce_aud_rec_t             ard;
--- 290,298 ----
      boolean32           check_quota = true;
      sec_rgy_foreign_id_t    client_ids;                   
      error_status_t      tmp_status;
!     boolean32           is_cell = FALSE;
!     rs_pgo_query_key_t  key = {rs_pgo_query_next, { 0 }};
!     sec_rgy_name_t      cell_dir  = { 0 };
  
  #if defined(DCE_AUD_POINTS)
      dce_aud_rec_t             ard;
***************
*** 300,308 ****
      if ( !LEGAL_PGO_NAME(pgo_name) || !query_is_dcepcs(pgo_name))
          SET_STATUS(status, sec_rgy_bad_name);
                    
!     if (STATUS_OK(status)) { 
!         if (name_domain == sec_rgy_domain_person) {
!             rsdb_name_canonicalize_and_convert(pgo_name, status);
          }
      }
      if (STATUS_OK(status)) { 
--- 306,334 ----
      if ( !LEGAL_PGO_NAME(pgo_name) || !query_is_dcepcs(pgo_name))
          SET_STATUS(status, sec_rgy_bad_name);
                    
!     if (STATUS_OK(status) &&  (name_domain == sec_rgy_domain_person)) {
! 
!         rsdb_name_canonicalize_and_convert(pgo_name, status);
!         if (is_cell = rsdb_name_util_is_cell(pgo_name, status)) {
!             /*
!              * OT12680: get pointer to "X" in "krbtgt/X" for
!              * use in checking for naming ambiguity under lock
!              */
!             strcpy((char *) QUERY_NEXT_SCOPE(key), (char *)pgo_name + KRB_DIR_ROOT_LEN);
!         } else {
!             /*
!              * OT12680: extract any initial directory from the principal
!              * name for use in checking for naming ambiguity under lock
!              */
!             char                *name_ptr;
! 
!             if ((name_ptr=u_strchr(pgo_name, '/')) != NULL) {
!                 ustrncat(
!                   ustrcpy(cell_dir, KRB_DIR_ROOT),
!                   pgo_name,
!                   name_ptr - (char *)pgo_name
!                 );
!             }
          }
      }
      if (STATUS_OK(status)) { 
***************
*** 310,317 ****
          /* parent directory of new pgo must provide insert rights */
          parent_perms = sec_acl_perm_insert;
  
-         is_cell = rsdb_name_util_is_cell(pgo_name, status);
- 
          /* pgo_name checked again in case canonicalization increased its length */
          if ( !check_domain(name_domain) || !CHECK_PGO_NAME(pgo_name) || 
               !CHECK_PGO_FULLNAME(pgo_item->fullname) ) {
--- 336,341 ----
***************
*** 344,349 ****
--- 368,412 ----
              sprintf(buf, "Attempt PGO add (%s)", domain_names[name_domain]);
              rs_audit_trail_log(h, buf, (char *) pgo_name);
  
_name_util_item_exists(sec_rgy_domain_person, cell_dir, &tmp_status)) {
+                     SET_STATUS(status, sec_rgy_bad_name);
+                 }
+             }
+             if (STATUS_OK(status)) {
              /* check for insert permissions on parent */
              rsdb_name_util_get_parent(pgo_name, parent_name); 
              /* Until rgyd exports a directory interface, pgo_add
***************
*** 373,378 ****
--- 436,442 ----
                                         &client_ids, NULL_PTR);
                      }
                  }
+             }
              }
          } END_MASTER_RIW
      }

[7/21/95 public]
Diffs above were truncated, complete diffs:

*** rs_pgo.c@@/main/LATEST	Fri Sep 30 21:47:51 1994
--- /net/kate/disk2/users/aha/rs_pgo.c	Fri Jul 21 17:12:13 1995
***************
*** 8,13 ****
--- 8,17 ----
  /*
   * HISTORY
   * $Log:	c012680,v $
# Revision 1.8  96/01/24  15:52:03  root
# changed fields: Fixed In Baseline  
# 
# Revision 1.7  95/12/19  13:39:27  root
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [white_r 12/19/95 public]
# 
# Revision 1.6  95/12/18  11:20:45  root
# changed fields: Affected File(s)   new/changed/deleted note(s) [wwang 12/18/95 public]
# 
# Revision 1.5  95/07/21  18:03:22  root
# changed fields:  new/changed/deleted note(s) [melman 7/21/95 public]
# 
+  * Revision /main/HPDCE02/aha_mothra7/6  1995/07/17  20:32 UTC  aha
+  * 	CHFts15254/OT12680: prevent addition of ambiguous principals;
+  * 	 merge out from mainline
+  *
   * Revision 1.1.89.5  1994/09/30  20:52:57  kline_s
   * 	CR 12426 - Fix bogus audit event specific info for PGO_Get and
   * 	PGO_KeyTransfer events.
***************
*** 286,292 ****
      boolean32           check_quota = true;
      sec_rgy_foreign_id_t    client_ids;                   
      error_status_t      tmp_status;
!     boolean32           is_cell;
  
  #if defined(DCE_AUD_POINTS)
      dce_aud_rec_t             ard;
--- 290,298 ----
      boolean32           check_quota = true;
      sec_rgy_foreign_id_t    client_ids;                   
      error_status_t      tmp_status;
!     boolean32           is_cell = FALSE;
!     rs_pgo_query_key_t  key = {rs_pgo_query_next, { 0 }};
!     sec_rgy_name_t      cell_dir  = { 0 };
  
  #if defined(DCE_AUD_POINTS)
      dce_aud_rec_t             ard;
***************
*** 300,308 ****
      if ( !LEGAL_PGO_NAME(pgo_name) || !query_is_dcepcs(pgo_name))
          SET_STATUS(status, sec_rgy_bad_name);
                    
!     if (STATUS_OK(status)) { 
!         if (name_domain == sec_rgy_domain_person) {
!             rsdb_name_canonicalize_and_convert(pgo_name, status);
          }
      }
      if (STATUS_OK(status)) { 
--- 306,334 ----
      if ( !LEGAL_PGO_NAME(pgo_name) || !query_is_dcepcs(pgo_name))
          SET_STATUS(status, sec_rgy_bad_name);
                    
!     if (STATUS_OK(status) &&  (name_domain == sec_rgy_domain_person)) {
! 
!         rsdb_name_canonicalize_and_convert(pgo_name, status);
!         if (is_cell = rsdb_name_util_is_cell(pgo_name, status)) {
!             /*
!              * OT12680: get pointer to "X" in "krbtgt/X" for
!              * use in checking for naming ambiguity under lock
!              */
!             strcpy((char *) QUERY_NEXT_SCOPE(key), (char *)pgo_name + KRB_DIR_ROOT_LEN);
!         } else {
!             /*
!              * OT12680: extract any initial directory from the principal
!              * name for use in checking for naming ambiguity under lock
!              */
!             char                *name_ptr;
! 
!             if ((name_ptr=u_strchr(pgo_name, '/')) != NULL) {
!                 ustrncat(
!                   ustrcpy(cell_dir, KRB_DIR_ROOT),
!                   pgo_name,
!                   name_ptr - (char *)pgo_name
!                 );
!             }
          }
      }
      if (STATUS_OK(status)) { 
***************
*** 310,317 ****
          /* parent directory of new pgo must provide insert rights */
          parent_perms = sec_acl_perm_insert;
  
-         is_cell = rsdb_name_util_is_cell(pgo_name, status);
- 
          /* pgo_name checked again in case canonicalization increased its length */
          if ( !check_domain(name_domain) || !CHECK_PGO_NAME(pgo_name) || 
               !CHECK_PGO_FULLNAME(pgo_item->fullname) ) {
--- 336,341 ----
***************
*** 344,349 ****
--- 368,412 ----
              sprintf(buf, "Attempt PGO add (%s)", domain_names[name_domain]);
              rs_audit_trail_log(h, buf, (char *) pgo_name);
  
+             if (*QUERY_NEXT_SCOPE(key) != '\0' ) {
+                 error_status_t      query_status;
+                 sec_rgy_cursor_t    item_cursor;
+                 rs_pgo_query_result_t result;
+ 
+                 /* OT12680: if new pgo is a cell name "krbtgt/X", then need
+                  * to disallow if there is an existing "principal/X/"
+                  * directory to avoid naming ambiguity.
+                  */
+ 
+                 rs_util_clear_cursor(&item_cursor);
+                 CLEAR_STATUS(&tmp_status);
+                 while (STATUS_OK(&tmp_status)) {
+                     rsdb_pgo_get_next(sec_rgy_domain_person,
+                                       &item_cursor, 
+                                       (RESULT_NAME(result)),
+                                       &(RESULT_ITEM(result)),
+                                       &tmp_status);
+                     if (STATUS_OK(&tmp_status)
+                     && (query_in_scope(
+                       &key,
+                       &result,
+                       &query_status))) {
+                         SET_STATUS(status, sec_rgy_bad_name);
+                         break;
+                     }
+                 }
+             } else if (*cell_dir != '\0') {
+ 
+                 /* OT12680: if new pgo includes a new "principal/X/" directory,
+                  * then disallow if there is an existing cell name
+                  * "principal/krbtgt/X" that would create naming ambiguity.
+                  */
+ 
+                 if (rsdb_name_util_item_exists(sec_rgy_domain_person, cell_dir, &tmp_status)) {
+                     SET_STATUS(status, sec_rgy_bad_name);
+                 }
+             }
+             if (STATUS_OK(status)) {
              /* check for insert permissions on parent */
              rsdb_name_util_get_parent(pgo_name, parent_name); 
              /* Until rgyd exports a directory interface, pgo_add
***************
*** 373,378 ****
--- 436,442 ----
                                         &client_ids, NULL_PTR);
                      }
                  }
+             }
              }
          } END_MASTER_RIW
      }

[12/18/95 public]
Submitted the above fix to dce 1.1maint.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12669
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : rpc auth errors during cell renaming
Reported Date                 : 10/19/94
Found in Baseline             : 1.1
Found Date                    : 10/19/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[10/19/94 public]
We do the following during a cell rename from /.../oldname to /.../newname/foo

dcecp cellalias create /.../newname/foo
bring the cell down
bring the cell up
dcecp cellalias set /.../newname/foo

At this point everything appears to be ok except the dce_cf.db file.
dcecp cdsalias cat,
dcecp princ show krbtgt/newname/foo
dcecp princ show krbtgt/oldname 
cat /opt/dcelocal/etc/security/pe_site 

all show what is expected. However the cellname and cellalias in dce_cf.db
have not been upgraded. We upgrade them by hand using the dcecp hostdata
command 

dcecp hostdata modify /.../newname/foo/hosts/machine_name/config/hostdata/cell_aliases -data {/.../oldname /.../newname/foo}

and

dcecp hostdata modify /.../newname/foo/hosts/machine_name/config/hostdata/cell_nname -data {/.../newname_foo}

Note if you attemp to use /.../oldname/hosts/machine_name........ in the
above it fails. We know this is wrong but using the new name does fix
up the dce_cf.db file and we view this as a work around. The problem is 
when you when you attempt to take the cell down you hit

1994-10-19-09:22:09.100-04:00I----- cdsadv(28526) ERROR rpc auth cnsassm.c 4034
0x005791a8
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: Wrong principal in request (dce / k
rb)
1994-10-19-09:22:10.610-04:00I----- cdsd(28545) ERROR rpc auth cnsassm.c 4034 0x
007bdef8
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: Wrong principal in request (dce / k
rb)

and when you attemp to bring it back up cdsd hangs in the fork. I would guess
its attempting to initialize its rpc interfaces.

Both Rich Saltz and Tom Jordahl believe this is a security problem.

Maryann said assign it to Rob and put it on the UHYPE list.

[10/25/94 public]

Can HP please annotate the CR with the status of this bug?  Thanks!

[10/24/94 public]
We've been having some difficulties in getting cells config'ed
with bl-23.1 - the problems are intermittent, but the cell is now
config'ed.

Rob is working on reproducing the problem and will update the
OT when he has some new information about it.

[10/26/94 public]
This should be deferred.  I fixed one problem in the priv server,
but alias/primary mismatching in the credential cache area needs
to be addressed more generally than the remaining hours allow...

[10/26/94 public]
Per phone call with Susan Thompson, deferred to 1.2.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12641
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : lockpw option fails
Reported Date                 : 10/17/94
Found in Baseline             : 1.1b21
Found Date                    : 10/17/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[10/17/94 public]

When running the locksmith test using the "-lockpw" option, other
principals were allowed to login.

[white_r 12/19/95 public
Fixed in DCE 1.2.1
Closed



CR Number                     : 12627
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secval
Short Description             : dced failed to refresh self
Reported Date                 : 10/14/94
Found in Baseline             : 1.1b21
Found Date                    : 10/14/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced et al
Sensitivity                   : public

[10/14/94 public]

In a 5 machine DFS split sec and cds server cell, 1 of the dced
daemons failed to refresh the self principal credentials. This
was at the ~40 hour mark of the dfs.read_write_all.main test.
There are no error or warning messages from dced itself but 
dtsd reports both errors and warnings:

1994-10-14-02:24:26.892-04:00I----- dtsd ERROR dts dtserror dtss_service_global_
set.c 692 0x7aff9298 Failed to retrieve server binding from the namespace: Authe
ntication ticket expired (dce / rpc)
1994-10-14-02:24:40.411-04:00I----- dtsd ERROR dts dtsdate time_request.c 689 0x
401bb478 RPC call ClerkRequstTime() to remote server failed: Authentication tick
et expired (dce / rpc)

1994-10-14-02:24:53.639-04:00I----- dtsd WARNING dts config logevent_v_ultrix.c
269 0x7aff9298 Too few servers (1), need 3 servers

The dfs user running on that machine suddenly reports Permission denied for
files it has just accessed, presumably because dfsbind has lost it's 
credentials (just as dtsd has) once dced fails to refresh ...

The machine is still in this state - although I attached to dced
for awhile with xdb which may not have helped :-(. Any ideas on how to
further investigate this? Max and I looked at the refresh code in sv_clientd.c
briefly and were unsure on the error handling of a failed refresh - is
it possible that the secd was busy refreshing OTHER self principals
(since all are started at about the same time :-) and that the error
handling is not sufficient?

NOTE: the registry was set up for the dfs.read_write_all test such that
default tickets are not 10h but 3d! the self principals of all machines
in the cell were explicitly set to have max cert lifetimes of 10h.

[10/14/94 public]
What did klist show for that machine's credentials when you noticed the
problem?

[10/14/94 public]
Klist showed the typical "expired" output of unknown group identities.
Unfortunately, I don't have the output saved but Max is my witness
that the creds were expired. Now when I login as root and klist, I
get:
No DCE identity available: No currently established network identity for which context exists (dce / sec)

Kerberos Ticket Information:
klist: No credentials cache file found (dce / krb) while setting cache flags (ticket cache /tmp/krb5cc_0)

A dcecp secval status reports "1" but I believe we did attempt a secval
deactivate which would explain the disappearance of the well-known "fffff"
cred file.

[10/14/94 public]
There is a bug in the error recovery logic in sv_clientd.c.  If the
refresh_identity or validate_first() FAIL, they attempt to recreate the
self identity, this works almost correctly but not quite.

These calls could have failed due to a failed RPC to the security server
which have been seen in other cases (spurious comm. failures).  The only
problem with this explanation is that SVC did not report any errors...

[10/14/94 public]
Re-running tests, setup routintg file such that secval debug is on, this
should help.  Also, setting self expiration lower (2 hours) in an attempt 
to speed up the error process.

[10/17/94 public]
Reproduced! With the 2h self max lifetimes, the same machine principal self
ticket expired during the dfs.read_write_all.main test.
The secval serviceability shows a gap at the time of the failure:

Time of failure:
1994-10-15-10:03:26.795-04:00I----- dtsd ERROR dts dtserror dtss_service_global_
set.c 692 0x7aff9298 Failed to retrieve server binding from the namespace: Authe
ntication ticket expired (dce / rpc)

Secval svc:
1994-10-15-08:01:41.232-04:00I----- dced DEBUG1 dhd secval ? 0 0x4002d278 mainta
in_machine_cntxt: sec_login_refresh_ident
1994-10-15-08:01:49.362-04:00I----- dced DEBUG1 dhd secval ? 0 0x4002d278 mainta
in_machine_cntxt: sec_login_validate_first
1994-10-15-08:01:49.364-04:00I----- dced DEBUG1 dhd secval ? 0 0x4002d278 Sleepi
ng for 6594 seconds
1994-10-15-09:51:43.857-04:00I----- dced DEBUG1 dhd secval ? 0 0x4002d278 mainta
in_machine_cntxt: sec_login_refresh_ident
1994-10-16-04:00:22.635-04:00I----- dced DEBUG1 dhd secval ? 0 0x4002d278 mainta
in_machine_cntxt: sec_login_validate_first
1994-10-16-04:00:23.381-04:00I----- dced DEBUG1 dhd secval ? 0 0x4002d278 Sleepi
ng for 6590 seconds
1994-10-16-04:02:13.303-04:00I----- dced DEBUG1 dhd secval ? 0 0x40161cc8 ENTER
rsec_login_get_trusted_preauth
1994-10-16-04:02:29.294-04:00I----- dced DEBUG1 dhd secval ? 0 0x40161cc8 ENTER
rsec_login_get_trusted_preauth
1994-10-16-04:02:30.706-04:00I----- dced DEBUG1 dhd secval ? 0 0x40161cc8 ENTER
rsec_login_get_trusted_preauth
1994-10-16-04:03:14.277-04:00I----- dced DEBUG1 dhd secval ? 0 0x40161cc8 ENTER
rsec_login_get_trusted_preauth
1994-10-16-04:05:26.640-04:00I----- dced DEBUG1 dhd secval ? 0 0x40160e48 ENTER
rsec_login_get_trusted_preauth
1994-10-16-04:05:57.411-04:00I----- dced DEBUG1 dhd secval ? 0 0x40160e48 ENTER
rsec_login_get_trusted_preauth
1994-10-16-05:50:13.594-04:00I----- dced DEBUG1 dhd secval ? 0 0x4002d278 mainta
in_machine_cntxt: sec_login_refresh_ident

SO ... the machine recovered around the time of the automatic bosserver restart
(4 am Sundays) but I can't think of what that would have to do with it ...

Here's the relevant code from sv_clientd.c - it LOOKS as if the call to
sec_login_validate_first just didn't return for ~6 hours!

        sec_login_refresh_identity(context, &st);
        if (st != error_status_ok)
          dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
        DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_secval, svc_c_debug1,
                "maintain_machine_cntxt: sec_login_refresh_ident"));
        if (st != error_status_ok) {
          sec_clientd_setup_first_context ( &st );
          dced_sleep ( 1 );
          continue;
        }

        sec_login_validate_first(context, &reset_passwd, &auth_src,&st);
        if (st != error_status_ok)
          dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
        DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_secval, svc_c_debug1,
                "maintain_machine_cntxt: sec_login_validate_first"));
        if (st != error_status_ok) {
          sec_clientd_setup_first_context ( &st );
          dced_sleep ( 1 );
          continue;

I failed to mention that this 5 machine cell contains both a sec and cds
replica. I am looking through svc logs on all machines for more clues.

[10/17/94 public]
Nothing useful in the other svc logs - the only related logging is
the master secd.log entries:

1994-10-16-04:00:09.247-04:00I----- secd ERROR rpc auth cnsassm.c 4028 0x4020579
8
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: Ticket expired (dce / krb)
1994-10-16-04:00:11.622-04:00I----- secd ERROR rpc auth cnsassm.c 4028 0x4021cb0
8
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: Ticket expired (dce / krb)

Moving to security (sorry Mike) - please advise on security serviceability
settings that might help show what was going on during the gap. Note that
with the 2 hour mcl setting, this problem DID occur sooner (~20 hour mark
rather than ~40 hour mark).

[10/18/94 public]
Removed the sec/cds replica machine from the cell so it is now a simpler,
4 machine split sec and cds server dfs cell. Added the line:

sec:login.9:FILE:/opt/dcelocal/var/svc/login.log

to the routing file but nothing has been logged during the 14 hours of this
run so this doesn't seem to have been a good guess ...

[10/20/94 public]
Test passed without the sec/cds replica machine in the cell! This is not
conclusive evidence but at least an indicator that the sec replica may
be involved ...

[10/24/94 public]

New news from HP on this, so being downgraded. Not trying for unintegrated
tree.

[10/24/94 public]
So, what is the new news?

Also, while looking through the secval code, found an mistake in the error
recovery logic in the main loop (though I'm pretty sure not the cause
of the failure reported in this OT) .  Not hyper-critical as it will only occur
if the sec*_first() API's fail.  The problem is on recovery from an API 
failure the code recreates the self loginc context but never does a 
'get_current_context' to get the new one.  Heres a diff which should fix this:

 bdiff sv_clientd.c
===================================================================
RCS file: ./admin/dced/server/sv_clientd.c,v
retrieving revision 1.1.3.1
diff -r1.1.3.1 /u0/rcs_trees/dce/rcs/#odexm025187/sv_clientd.c
348c345
<   error_status_t      st = error_status_ok;
---
>   error_status_t      st = error_status_ok, st2;
372c369
<     sec_clientd_setup_first_context ( &st );
---
>     sec_clientd_setup_first_context ( &st2 );
392a390,393
>       /*
>        * If either of these following 2 calls fail, loop until we can
>          * recreate creds. and get the new context.
>        */
394,395d394
<       if (st != error_status_ok)
<         dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
399,400c398,410
<         sec_clientd_setup_first_context ( &st );
<         dced_sleep ( 1 );
---
>         dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
>         sec_login_release_context ( &context, &st2 );
>         do {
>           sec_clientd_setup_first_context ( &st );
>           if (st != error_status_ok)
>             dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
>           else {
>             sec_login_get_current_context(&context, &st);
>             if (st != error_status_ok)
>               dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
>           }
>           dced_sleep ( 1 );
>         } while ( st != error_status_ok );
405,406d414
<       if (st != error_status_ok)
<         dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
410,411c418,430
<         sec_clientd_setup_first_context ( &st );
<         dced_sleep ( 1 );
---
>         dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
>         sec_login_release_context ( &context, &st2 );
>         do {
>           sec_clientd_setup_first_context ( &st );
>           if (st != error_status_ok)
>             dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
>           else {
>             sec_login_get_current_context(&context, &st);
>             if (st != error_status_ok)
>               dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, st);
>           }
>           dced_sleep ( 1 );
>         } while ( st != error_status_ok );

[10/24/94 public]
I think that the "new" in Susan's comment should be a "No" - ie. no new news.
The agreement was that if we didn't have an understanding of the defect by
last Friday it would not be allowed into the unintegrated tree.

[10/24/94 public]
On 10/21/94 in a single machine cell, my machine, dced was alive and
kicking yet the machine credentials were stale.  A following "dced secval
disable" got stuck.  Killed dced, the core showed it in the select (as
expected I guess).  Credentials had been refreshed successfully once or
twice since cell start-up.

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12565
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : HYP: DES key manipulation is only
done for 7 bytes instead of 8.
Reported Date                 : 10/7/94
Found in Baseline             : 1.1
Found Date                    : 10/7/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b22
Affected File(s)              : ./security/gssapi/gssapi-supp.c
Sensitivity                   : public

[10/7/94 public]
During code inspection, John found that only 7 bytes are xor'd for DES key
manipulation instead of 8 for privacy mode. The change is to add '=' in the
following for loop code.

old code:    for (i=0; i<7; i++) {

new code:    for (i=0; i<=7; i++) {

This has been approved by Maryanne.

[10/7/94 public]
Fix submitted.



CR Number                     : 12563
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : authelper
Short Description             : dfsbind core dumps when accessing object in foreign cell
Reported Date                 : 10/7/94
Found in Baseline             : 1.1b21
Found Date                    : 10/7/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : dfsbind
Sensitivity                   : public

[10/7/94 public]

When using the dlg_client/intermediary drivers and trying to verify
access to a file in a foreign cell dfsbind dumps core with the
following trace.


0 krb5_free_principal@libdce + 0x00000064 (0x40270d40, 0x40270d28, 0x1, 0x2)
 1 krb5_free_cred_contents@libdce + 0x00000040 (0x40270f00, 0x402eaea8, 0x401c46e8, 0x401c46a0)
 2 krb5_free_creds@libdce + 0x00000030 (0x40270f00, 0x40270d28, 0x1, 0x2)
 3 sec_krb_get_cred@libdce + 0x0000032c (0x402eaea8, 0x40146490, 0x4, 0x2)
 4 cred_from_cred_rep + 0x000005d8 (0x401c454c, 0x401c4548, 0x401c4564, 0x401c4568)
 5 handle_sec_krb_get_cred + 0x000001c0 (0x4013a0a4, 0x3c, 0x4013b068, 0x400168ac)
 6 do_auth_request + 0x00000134 (0x4013a06c, 0x3c, 0x4013b068, 0x4013a058)
 7 ProcessRequest + 0x000000f4 (0x4013a050, 0x29c6b013, 0x1000000, 0x4b)
 8 service_thread + 0x00000128 (0x4001afe0, 0x7af462b0, 0x400deb38, 0x9)
 9 cma__thread_base@libdce + 0x0000021c (0x400deb38, 0, 0, 0)
10 cma__thread_start1@libdce + 0x0000004c (0x400deb38, 0, 0, 0)
11 cma__thread_start0@libdce + 0x00000008 (0x400deb38, 0, 0, 0)
12 krb5_free_principal@libdce + 0x00000064 (0, 0, 0, 0)
13 end + 0x000c2d78 (Address not found (UE302)

[10/7/94 public]
Put Burati on interest list.

[10/24/94 public]
The client or server principal pointer in a krb5_creds structure 
appears to be corrupted. sec_krb_get_cred detects an error, then
core dumps when trying to free through one of these pointers.  I
had trouble understanding exactly where these pointers got initialized.
I don't hold much hope this'll get fixed in 1.1, but I think it
belongs in the security arena, at least for advice on how to
debug this further.

[12/13/95 public]

Fixed in DCE 1.2.1
Closed



CR Number                     : 12529
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : H-Cells
Short Description             : Transitive Trust needs to be in the unintegrated tree.
Reported Date                 : 10/5/94
Found in Baseline             : 1.1b20
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[10/5/94 public]

This OT is a placeholder for the Transitive Trust work.

[10/25/94 public]

Transitive trust will not make it into the unintegrated tree.  Discussions
are underway to determine how to get this code to licensees.

[02/07/96 public]
Closed, but see OT12908.



CR Number                     : 12524
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sentinal warnings on null keys
Reported Date                 : 10/5/94
Found in Baseline             : 1.1
Found Date                    : 10/5/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[10/5/94 public]


bug fix in krb library code and sec_login code to fix Sentinel
errors on processing null keys.

[10/12/94 public]

Please document the fix for this problem in this CR in lieu of
dropping changes into unintegrated tree.

[10/14/94 public]
Returning severity to it's natural state - had opened it with a higher
severity/priority so it could get into the unintegrated tree.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12518
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : libdce
Short Description             : HYP: free()ing same memory twice in sec_krb_build_message_common()
Reported Date                 : 10/5/94
Found in Baseline             : 1.1b20
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : security/utils/sec_authn.c
Sensitivity                   : public

[10/5/94 public]
sec_krb_build_message_common() has the following problem:
{
krb5_data ap_req;		      NOTE This is local to this routine
...
krb5_mk_req_extended(..., &ap_req);   Where ap_req.data is filled in
...
if (proto == dce && fmt >= 1.1) {
    message->data = malloc(fulllen);
    if (message->data != NULL) {
       memcpy(message->data, (void *)ap_req.data, ap_req.length);
       ...
       free(ap_req.data);
    } else {
       SET_STATUS(&st, sec_s_no_memory);
    }
    free(ap_req.data);
    ...
}
...

NOTE! The second free(ap_req.data); is the correct one because you're always
done with the allocated memory for this local variable at this point.  The
first is incorrect because it causes the same address to be passed to free()
twice.

This is HYP: A0 because it could potentially cause memory corruption and
impossible to trace coredumps, IF the thread happened to get blocked between
the two free()s and some other thread performed a malloc that gave it the
same address that the first free(ap_req.data) had just deallocated.  The
second free(ap_req.data) would then free storage being used by another thread
and bad things would happen in some place totally unrelated to where the
problem really is.  We need to fix this *now* before someone hits the problem
and spends months trying to figure out what went wrong...

Fix is just to remove the first free(ap_req.data) in the if{} block.
Testing now.

[10/5/94 public]
Submitted fix with approval from Susan and Rajendra.  Marked 'fix'.



CR Number                     : 12513
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : GSSAPI
Short Description             : HYP: GSSAPI functional test fails.
Reported Date                 : 10/5/94
Found in Baseline             : 1.1
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : gssapi.c, gss.sams
Sensitivity                   : public

[10/5/94 public]
The GSSAPI functional test (testcase 13) fails with the latest code bits. 
The fix for CR 12168 (compat mode security hole in priv server) which was
submitted last Friday broke parts of GSSAPI. GSSAPI code was using a field from
the DCE 1.0 PAC, which was OK until the fix for this CR removed the PAC.
The submission request from John Wray will come today.

[10/5/94 public]
Submitted new gssapi.c that replaces teh dependencies on DCE 1.0 PACs
with calls to sec_cred routines.



CR Number                     : 12511
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : era
Short Description             : update attr attempt gives Error in getting initial login context
Reported Date                 : 10/5/94
Found in Baseline             : 1.1b20
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[10/5/94 public]
Run of erarel001 systest with bl-20 + dcecp from 10/3 gave the following
error on 3 of 41 runs in 42 hours.  Other security tests were running
in the 3 node cell which was under stress.

Cell config:
m1        (OSF1)         sec server, dts server
m2        (HPUX)         cds server, dts server
m3        (OSF1)         dts server, ntp_provider

failure 1 on m1
failure 2 on m3
failure 1 on m2
  all hours apart


==== failure 1 ====
520|0 1 13362 15 95|ERROR: dcecp principal modify sestrleyosemiteedgar6p -remove sestryosemiteaedgar failed in
 delete_attr
520|0 1 13362 15 96|Output of previous command:
520|0 1 13362 15 97|Error in getting initial login context.
520|0 1 13362 15 98|Error: unauthorized to perform this operation

==== failure 2 ====
520|0 1 26739 11 108|LOG: Attempting to change attr sestryosemiteafiji on principal object sestrleyosemitefiji
8p to sestrleyosemiteyosemitenewval
520|0 1 26739 11 109|LOG: ERROR: dcecp principal modify sestrleyosemitefiji8p -change {sestryosemiteafiji sest
rleyosemiteyosemitenewval} failed in change_attr
520|0 1 26739 11 110|LOG: Output of previous command:
520|0 1 26739 11 111|LOG: Error in getting initial login context.Error: User is not authorized to update recor

==== failure 3 ====
520|0 1 3251 12 146|LOG: Attempting to change attr sestryosemiteayosemite on principal object sestrleyosemitey
osemite1p to sestrleyosemiteyosemiteorigval
520|0 1 3251 12 147|LOG: ERROR: dcecp principal modify sestrleyosemiteyosemite1p -change {sestryosemiteayosemi
te sestrleyosemiteyosemiteorigval} failed in change_attr
520|0 1 3251 12 148|LOG: Output of previous command:
520|0 1 3251 12 149|LOG: Error in getting initial login context.
520|0 1 3251 12 150|LOG: Error: User is not authorized to update record

[10/5/94 public]
A little more info for the record.  The first failure occurred
approximately 30 hours into the run.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12510
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : change name of gssdce_extract_cred_from_sec_context.3sec
Reported Date                 : 10/5/94
Found in Baseline             : 1.1doc
Found Date                    : 10/5/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : .../dce_books/app_ref/man3sec/gssdce_extract_cred_from_sec_context.3sec
Sensitivity                   : public

[10/5/94 public]
The file 
gssdce_extract_cred_from_sec_context.3sec

should really be 

gssdce_extract_creds_from_sec_context.3sec

as that is the name of the interface it documents.

[10/05/94 public]
Fixed and verified by me.

[10/27/94 public]
Closed bug.



CR Number                     : 12509
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12167
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : ec_files
Short Description             : HYP: dce_sec_modify and dce_sec_query use the same ECN
Reported Date                 : 10/5/94
Found in Baseline             : 1.1b20
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : dce_sec_modify
Sensitivity                   : public

[10/5/94 public]
The files, dce_sec_modify and dce_sec_query use the same event class
number, ECN=13.  One of these needs to use another number 11.

[10/6/94]
dce_sec_modify now uses ECN 11.



CR Number                     : 12495
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : login
Short Description             : UHYP: Pre-authentication change to allow interoperability with other environments
Reported Date                 : 10/4/94
Found in Baseline             : 1.1b20
Found Date                    : 10/4/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1unintegrated
Affected File(s)              : ./security/h/sec_login_pvt.h ./security/krb5/lib/krb/get_in_tkt.c ./security/krb5/lib/krb/preauth.c ./security/krb5/lib/error_tables/krb5_err.et ./security/krb5/lib/mvr/krb5.mvr ./security/krb5/lib/mvr/krb5-glue.c ./security/krb5/include/krb5/mvr/encode.h ./security/krb5/include/krb5/mvr/krb5-glue.h ./security/krb5/include/krb5/krb5.h ./security/krb5/include/krb5/func-proto.h ./security/client/login/sec_login_pvt.c
Sensitivity                   : public

[10/4/94 public]

In order to preserve migration and interoperability with DCE 1.2,
the DCE 1.1 pre-authentication protocol needs to change. This change
will allow users from other environments (other than DCE) to log
into a DCE 1.1 server.

The change involves securely preserving the plaintext portion of
the user's password during the pre-authentication process so that 
the DCE security server can recover the information and verify 
that it is correct with other environments.

The fix would be included in the unintegrated tree.

[10/25/94 public]

Submitted; marked as 'fix'.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12466
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : HYP: Memory corruption problms.
Reported Date                 : 10/3/94
Found in Baseline             : 1.1
Found Date                    : 10/3/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : see_list_at_the _end_of_ot
Sensitivity                   : public

[10/3/94 public]
The following text is taken from CR 12178. These fixes must go into 1.1
integrated tree.

[9/30/94 public]
In doing 12150 work & encountering a similar traceback/memory problem,
using
Sentinel points out some instances of unchecked allocations in the sec
server:

rs/rpriv_util.c:
krb5_copy_principal(req_info->authent->ticket->server,
rs/rs_rep_auth.c:	krb5_copy_principal(creds->client, &creds->server);
rs/rs_rep_auth.c:
krb5_copy_keyblock_contents(tkt->enc_part2->session,
rsdb/kdb_rsdb.c:	krb5_copy_principal(princ, &entry->principal);

The latter is being tripped over due to a bogus-length principal string;
it may not be directly relevant to this problem, but all are worth
fixing...

[10/3/94 public]
Ann was working on schema update and found out this memory corruption:
rsdb_attr_sch_store_new() in rsdb_attr_schema.c: 

845c783
<       sizeof(*sch_entry_id), st_p);
---
>       sizeof(sch_entry_id), st_p);
849c787
<       sizeof(*sch_entry_id), st_p);
---
>       sizeof(sch_entry_id), st_p);

[10/3/94 public]
on hypercritical list.

[ sekhar 10/5/94 public ]

Fixed. Also fixed the comments in the OT . ( Sue's comments were mixed up
with Rob's comments ). List of files submitted:

security/server/rs/rpriv_util.c
security/server/rs/rs_rep_auth.c
security/server/rsdb/kdb_rsdb.c
security/server/rsdb/rsdb_attr_schema.c



CR Number                     : 12439
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd crash after delete attr errors
Reported Date                 : 9/30/94
Found in Baseline             : 1.1b20
Found Date                    : 9/30/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[9/30/94 public]

config:  BL-20
        edgar          (OSF1)         sec server, dts server
        yosemite       (HPUX)         cds server, dts server
        fiji           (OSF1)         sec replica, dts server, ntp_provider

master secd on osf/1 coredumped after ~19hrs of systest runs.  
Run of erarel001 on HP was showing repeated failures (after some 
initial PASSes) when deleting an attribute from a principal.

1st failure (6th iteration of test) appeared to coredump dcecp.
Test gave message:
delete_attr[18]: 23718 Memory fault(coredump)

but since TET runs in tmp directory which gets removed there is no
coredump. I'll start them again and change the tet config to run
somewhere else.  Iteration 7 thru 11 passed.  Iterations 12 thru 27
failed when deleting attributes from principals.  Attribute was
simply not deleted.  Iteration 28 must have been the core dump,
as TET journal entry shows:
520|0 1 23534 15 51|Attempting to delete attr sestryosemiteayosemite from principa
l object sestrleyosemiteyosemite0p
520|0 1 23534 15 52|ERROR: dcecp principal modify sestrleyosemiteyosemite0p -remov
e sestryosemiteayosemite failed in delete_attr
520|0 1 23534 15 53|Output of previous command:
520|0 1 23534 15 54|Error: Communications failure
... and on and on

Core file shows following (but it's osf/1, so is it useful?):
Program terminated with signal 10, Bus error.
#0  0xa41d1de0 in tgs_key ()
(gdb) break main
Breakpoint 1 at 0x40015a
(gdb) run
Starting program: /opt/dcelocal/bin/secd 

Breakpoint 1, 0x40015a in main ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0xa41d1de0 in rpc__key_info_release (Cannot access memory at address 0xa41d1cc0.
(gdb) where
#0  0xa41d1de0 in rpc__key_info_release (Cannot access memory at address 0xa41d1cc0.

ALSO.....
/opt/dcelocal/var/security has tons of audit trail stuff:
# ls sec_aud*
sec_audit_trail
sec_audit_trail.1994-09-29-20-49-21
sec_audit_trail.1994-09-29-20-49-21.md_index
sec_audit_trail.1994-09-29-21-18-15
sec_audit_trail.1994-09-29-21-18-15.md_index
... and on and on...

# ls sec_aud* | wc -l
        70


No svc ERRORS reported 'til after crash.

[9/30/94 public]
Some more info.  I brought down dce on the sec master node and 
then restarted it.  Next attempt at running and era test had
strange results.  Running as cell_admin, after creating a schema 
the attr couldn't be added to a principal, got error:
  "Error: schema entry not found"

Extract from TET log:

520|0 1 6691 1 12|Schema /.:/sec/xattrschema/seacla has been ADDED to the registry.
520|0 1 6691 1 13|Attempting to add person seacladyosemitep to registry
520|0 1 6691 1 14|Person seacladyosemitep has been ADDED to the registry.
520|0 1 6691 1 15|Attempting to add account for person seacladyosemitep
520|0 1 6691 1 16|Account seacladyosemitep has been ADDED to the registry.
520|0 1 6691 1 17|SUCCESSFULLY added person, group, org and account to registry
520|0 1 6691 1 18|Setting up permissions to change ACLs for seacladyosemitep
520|0 1 6691 1 19|Able to assign permission for /sec/principal
520|0 1 6691 1 20|Able to assign permission for /sec/group
520|0 1 6691 1 21|Able to assign permission for /sec/org
520|0 1 6691 1 22|Able to assign permission for /sec/policy
520|0 1 6691 1 23|Able to assign permission for /.:/sec/xattrschema
520|0 1 6691 1 24|Able to assign permission for /sec/group/seaclyosemiteg
520|0 1 6691 1 25|Able to assign permission for /sec/org/seaclyosemiteo
520|0 1 6691 1 26|SUCCESSFULLY set up permissions to change acls for seacladyosemitep
520|0 1 6691 1 27|Attempting to add person seaclcliyosemite0 to registry
520|0 1 6691 1 28|Person seaclcliyosemite0 has been ADDED to the registry.
520|0 1 6691 1 29|Attempting to add attr seacla with val yosemite0pval to principal seaclcliyosemite0
520|0 1 6691 1 30|ERROR: dcecp principal modify seaclcliyosemite0 -add {seacla yosemite0pval} failed in add_attr
520|0 1 6691 1 31|Output of previous command:
520|0 1 6691 1 32|Error: schema entry not found

THEN, I attempted this by hand.  Logged in as cell_admin and couldn't
create schema:
dcecp> xattr create /.:/sec/xattrschema/testattr1 -encoding printstring -aclmgr {{principal r ruf r rmD} {group r rm rt rmD} {organization r rm rt rmD}}
Error: unauthorized to perform this operation

DUE to:
dcecp> acl show /.:/sec/xattrschema
{unauthenticated r----}
{user 00000000-0000-0000-0000-000000000000 rcidm}
{other_obj r----}
{any_other r----}

The test does a lot with adding/deleting acls but does NOT remove 
cell_admin from /.:/sec/xattrschema.

[10/3/94 public]
Martha is trying to reproduce this bug to be able to supply more info.

[10/3/94 public]
Designated as being on the hypercritical list.  OSF/1 bug had prevented
us from reproducing this weekend, are working on it.

[10/4/94 public]
Not sure how the 2 are correlated, but I'm using a 'latest' version of
dcecp that won't cause the delete attr errors.  So far the test has been 
running for ~16hours.  Might need to use the bl-20 bits to recreate
problem.  I'll send Sue info on running the test if she wants to try
it against straight bl-20.

[10/5/94 public]
Stried to build systest againt last week's code build.  No luck.
Will talk to Jim to find out what he changed in dcecp to see if there is
any clue.  Will try to sup bl-20. We don't have bl-20 in house yet.

[10/5/94 public]
According to Jim, the main parts of his submissions during last thursday and
friday are related to memory management: calcalate the right size for malloc
and do the right free.
As far as I know the reason this ot is still open even it doesn't happen
any more is that OSF claim that bad data sent from client shouldn't core
dump secd.  But this is not bad data only, bad memory menagement also.
And bad data in the wire could possibly trash secd's memory also.  This
is probably a memory corruption problem.  
For now I can do is to check all the public ERA API's output parameter to 
see if they are initialized.  I don't think we have time to understand the
problem before this Friday.  Therefore, I would like it to become an
on-going effort to check secd's memory corruption especially on ERA side.
I consider ot12511 is in the same catagory.

[2/2/95 public]
Just like 12511, fixed in DCE 1.2.1
Closed.



CR Number                     : 12432
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec tests.
Short Description             : Defunct directory for the
tet-based tests from /src/test/security.
Reported Date                 : 9/30/94
Found in Baseline             : 1.1
Found Date                    : 9/30/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : ./src/test/security/tet-tests
Sensitivity                   : public

[9/30/94 public]
Max, Please defunct the tet-tests directory from ./src/test/security. The
tet-based security tests were originally developed under this path. Now
that all tet-based tests are under ./src/test/functional/security,
everything including tet-tests directory from the ./src/test/security path
should be defunct.

[10/3/93 public]
Done by the rats. Marking fixed



CR Number                     : 12430
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : auth_helper
Short Description             : dfs server only seeing initiator
Reported Date                 : 9/30/94
Found in Baseline             : 1.1b20
Found Date                    : 9/30/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b21
Affected File(s)              : src/security/helper/auth_helper.c, src/rpc/kruntime/sec_authn_krpc.c
Sensitivity                   : public

[9/30/94 public]
On real delegated access to DFS, the DFS server only sees the initiator.
It appears sec_krb_dg_decode_message_kern() does not pass up the
authz_fmt to dfsbind.  The result is authhelper calls 
sec_krb_dg_decode_msg_frags() with a hard code V1_0 format.

[9/30/94 public]
My fault...  That hardcoded format version would definitely cause this
problem.  Good catch Ron.  I had thought this was already being tested, so
I didn't think of going through and checking for things like this...
I'll send down a new auth_helper.c and krbdgsrv.c asap for you to try.

[9/30/94 public]
Fix submitted.



CR Number                     : 12426
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rs_pgo (secd)
Short Description             : bogus event specific audit info appears sporadically
Reported Date                 : 9/30/94
Found in Baseline             : 1.1
Found Date                    : 9/30/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : rs_pgo.c
Sensitivity                   : public

[9/30/94 public]
Bogus audit event information is periodically being displayed for
PGO_Get and PGO_KeyTransfer events.  Most problematic case is when an 
error condition occurs due to the requested principal not being found 
in the registry; the associated uuid is garbage.  Suggested fix is
to only display event specific info as passed from the caller; no longer
trying to convert the info always into a uuid form. 

Proposed fix is ready to be submitted.

[9/30/94 public]
Fix submitted.



CR Number                     : 12405
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dlg_intermediary
Short Description             : add -exec switch to dlg_intermediary
Reported Date                 : 9/29/94
Found in Baseline             : 1.1
Found Date                    : 9/29/94
Severity                      : D
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : src/test/security/api/moretests/dlg_intermediary.c
Sensitivity                   : public

[9/29/94 public]
Add -exec switch to dlg_intermediary test process to allow execution
of arbitrary programs as delegated identity for test purposes.

[10/3/94 public]
Fix submitted.



CR Number                     : 12374
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12150
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : login
Short Description             : can't login to <alias>/cell_admin
Reported Date                 : 9/27/94
Found in Baseline             : 1.1b19
Found Date                    : 9/27/94
Severity                      : C
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : 1.1WP
Sensitivity                   : public

[9/27/94 public]
This is probably a dup of 12150, but is logged separately.  When we get a
fix we'll try this scenario and see if it really is one.

We configured a cell with name <primary>.  Then added an alias name
<alias>.  We could do:

  login cell_admin -p -dce-
  login <primary>/cell_admin -p -dce-
  princ show cell_admin 
  princ show <primary>/cell_admin 
  princ create <primary>/foo
  princ show <primary>/foo
  princ create <alias>/foo
  princ show <alias>/foo
  group create <alias>/foogroup
  group show <alias>/foogroup
  dir show <alias>

we could not however:

  login <alias>/cell_admin -p -dce-

We got the error: Invalid Password

[9/29/94 public]
Probably will be fixed with the fix for 12150.  Since this is a separate
scenario don't want to mark this a dup, but will only track 12150.  Marked
as interdependant though. :-)

Note the severity is correct:  A major problem with a work-around.  The
user can use the old name of the cell to login.

[10/7/94 public]
This turns out to be related to but independent of 12150;
the client pepper is correctly composed of the current primary realm,
while the server's is mismatched, presumably from the old key table entry.

[10/24/94 public]

The bug is that sec_login_pvt_get_pepper should be a remote operation to
the security server, at least in this case, to get the "real" pepper value
if any.

[10/25/94 public]

Strike that; there is code in place to handle returning a pepper from the
security server (in the error message from the first try).  When I make the
security server return the correct pepper, dce_login does one or the other
of two things (nondeterministically):

 a) core dumps (double free, fix understood and about to be tested)
 b) reports "registry server unavailable" (problem not understood yet).

[10/26/94 public]

Well, I can get an initial TGT now, but I can't use it for anything
interesting, so I don't see any point in submitting what I have now.

There are just too many loose ends dealing with realm aliases.  In order to
do things correctly, either they have to be completely canonicalized above
kerberos, or they really have to be known about all over the kerberos
client-side library.  Fixing this correctly will take me at least a week or
two, and I need to back off a bit to think harder about exactly where
aliases have to be known about in the code.

[2/6/96 public]
(another one that was hiding because it was marked 'defer')
I asked Bill to look at this again and he confirmed that what was described
above was fixed in the 1.1WP (but OT won't let me enter 1.1 as a fixedby,
so I've marked it as 1.2.1 just so it will let me close it).  The one issue
that wasn't addressed in the WP that Bill had been including in his above
thoughts is the functionality described in OT13276 which will remain open
until fixed.  I'm closing this one.



CR Number                     : 12346
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Attempting to free garbage in secd: rs_auth.c
Reported Date                 : 9/26/94
Found in Baseline             : 1.1b18
Found Date                    : 9/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : security/server/rs/rs_auth.c,
security/utils/sec_encode.c
Sensitivity                   : public

[9/26/94 public]
In security/server/rs/rs_auth.c (secd), epac_data_to_cred_handle() cleans
up temporary storage when it's done with it.  It's calling
sec_encode_epac_set_free() with garbage in a sec_id_epac_set_t that's no
longer ever used in that routine.  This is what I believe caused the secd
coredump problem we saw last Friday when I added the extra DEALLOCATE()'s
to the sec_encode free routines, to clean up memory leaks.  Currently, we
are just *lucky* that it's not dying with the other garbage that it's trying
to free.  So, since this could start crashing secd at any time and because
it's preventing a memory leak fix which affects secd  and *ALL* DCE servers,
this is an A0.  I'm testing a fix now.

[9/27/94 public]
Submitted fix to rs_auth.c and resubmitted mem leak fixes for sec_encode.c
now that the other bugs are gone.  Marked 'fix'.



CR Number                     : 12344
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11166
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : rs_secidmap audit points not in source tree
Reported Date                 : 9/26/94
Found in Baseline             : 1.1
Found Date                    : 9/26/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : rs_pgo.c
Sensitivity                   : public

[9/26/94 public]

During doc review, discovered ./security/server/rs/rs_secidmap.c's
audit points were never submitted in any of our code drops.  Believe
code was pulled due to OT 11166, where audit subsystem would loop
infinitely if these code points were submitted.  OT 11166 has since
been fixed, so these code points should be submitted.

[9/30/94 public]
Fix submitted.



CR Number                     : 12342
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : dlg systest
Short Description             : build on RIOS failed - Undeclared identifier authn_svc.
Reported Date                 : 9/26/94
Found in Baseline             : 1.1
Found Date                    : 9/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : test/systest/security/dlgstr001/identity.c
Sensitivity                   : public

[9/26/94 public]

extract from tests.log.09-25-94 in the directory
/u1/RAT_tools/logs/RIOS on vertigo

cc -c         -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rio
s/src/test/systest/security/dlgstr001 -I/project/dce/build/dce1.
1-snap/src/test/systest/security/dlgstr001  -I/u1/devobj/sb/nb_r
ios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/exp
ort/rios/usr/include   /project/dce/build/dce1.1-snap/src/test/s
ystest/security/dlgstr001/identity.c
"/project/dce/build/dce1.1-snap/src/test/systest/security/dlgstr
001/identity.c", line 299.3: 1506-045 (S) Undeclared identifier
authn_svc.
*** Error code 1

[9/27/94 public]
Canceling - clean builds today - no changes had been made to
this test so I suspect a build problem (disk space/script/etc.)
caused this error.

[9/27/94 public]

The tests build on tailor finished at 12:30 today afternoon.  It has the 
same error as was reported earlier.  I am opening the bug again.

[9/26/94 public]
This only happens on the RIOS.

[9/27/94 public]
Fixed the hw,sw,description,component fields.
This should never have built on RIOS.  The following is the problem:

void establish_identity
#ifdef PROTOTYPES
(
    /* [in]  */ unsigned32      authn_svc,
    /* [in]  */ unsigned_char_t    *principal_name,
    /* [in]  */ unsigned_char_t    *keytab_file_name,
    /* [out] */ identity_info_t    **identity_info
)
#else
(principal_name, keytab_file_name, identity_info)
    /* [in]  */ unsigned_char_t    *principal_name;
    /* [in]  */ unsigned_char_t    *keytab_file_name;
    /* [out] */ identity_info_t    **identity_info;
#endif

Note the #else does not have the same argument list as the #ifdef.
Since the first have is correct and the RIOS now supports prototypes, just
get rid of the #ifdef line and everything between the #else and the #endif
and it'll work.

[9/29/94 public]
Oops - forgot to move to "fix" state, build worked yesterday and today -
closing.



CR Number                     : 12326
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 12215
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : Need manpage for set_context_ownership
Reported Date                 : 9/23/94
Found in Baseline             : 1.1b18
Found Date                    : 9/23/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : gssdce_set_cred_context_ownership.3sec
Sensitivity                   : public

[9/23/94 public]
A new GSSAPI routine, gssdce_set_cred_context_ownership(), was added today.
A man-page for this routine needs to be written.

[09/29/94 public]
Assigned to writer Ron Johnson, owner of GSSAPI doc.

[10/4/94]
Created new manpage.

[10/27/94 public]
Closed bug.



CR Number                     : 12323
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd dumps core during
configuration
Reported Date                 : 9/23/94
Found in Baseline             : 1.1
Found Date                    : 9/23/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : security/utils/sec_encode.c
Sensitivity                   : public

[9/23/94 public]
Using the latest bits from Nightly build, secd dumps core on HP/UX. The
problem was found during smoketesting by RATS. I configured o a separate
HP/UX and found the same problem of secd dumping core. Here is the info:

1. dce_config screen output.

        Enter the starting point to be used for UNIX ID's that
        are automatically generated by the Security Service
        when a group is added using "rgy_edit": (100) 
S:****** Starting secd...
S:****** Checking for active sec_client service...
S:****** Starting sec_client service...

2. dce_config log output.

S:****** Starting secd...
D:         Executing: secd -bootstrap
DEBUG:     Executing: modify_rcfile(secd)
V:         Successfully modified rcfile /etc/rc.dce for "secd"
D:         Executing: sleep 15
S:****** Checking for active sec_client service...
D:         Executing: sec_client service startup
S:****** Starting sec_client service...

3. secd tracback.

>t
 0 free@libc + 0x00000008 (hp-ux export stub)
 1 fill_acl + 0x000000b4 (0x400378b0, 0, 0, 0)
 2 TMEM@libdce + 0x00099aa4 (0x7b034930, 0x7b034930, 0, 0)
 3 TMEM@libdce + 0x003123fc (0x4002ba42, 0x7b03493c, 0x7b03493c,
0x7b034944)
 4 epac_data_to_cred_handle + 0x0000018c (0x7b034878, 0, 0x4002d5c0,
0x7b033da8)
 5 rs_auth_init + 0x0000027c (0x7b033da8, 0x40126878, 0x100, 0x38)
 6 rgy_main + 0x00000aa0 (0x2, 0x7b03393c, 0x7b033b88, 0)
 7 main + 0x000000b0 (0x2, 0x7b03393c, 0, 0)

The memory leak submission to sec_ecode.c might be a culprit here.

Here is the call sequence.

epac_data_to_cred_handle()

sec_encode_epac_set_free()

sec_encode_epac_free()

        if (epac->seals != NULL) {
            sec_encode_seal_set_free(dealloc, epac->seals);
            DEALLOCATE(dealloc, epac->seals);
        }
        epac->seals = NULL;

[9/23/94 public]
It's definitely sec_encode.c, so I assigned it to myself.  Your analysis
doesn't match what I'm seeing as should be wrong (ie: I just found in the
middle of tons of Sentinel output, that it doesn't like one of the 3 new
free's that I added, even though the memory leak report at the end now
doesn't have this memory as leaked...).  Sentinel says it's the free in
sec_encode_epac_set_free() of epac_set->epacs.  I don't get it because 
before I free'd this there was a leak, and looking at the IDL description
of it, the pickling code *should* be allocating memory for this.  Anyway,
I just sent Rajendra a sec_encode.c with this free (deallocate) commented
out to see if it fixes the problem.  I'm not seeing the coredump here, just
a single Sentinel complaint (among *many* others that are bogus complaints
and some we still need to look into) while secd is running.



CR Number                     : 12310
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : /test/security/api/moretests
Short Description             : too few arguments to function
Reported Date                 : 9/22/94
Found in Baseline             : 1.1
Found Date                    : 9/22/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : /test/security/api/moretests/sec_authn.c
Sensitivity                   : public

[9/22/94 public]

This bug was found during the rebuild on 9/22 at 5:05 PM


[ /test/security/api/moretests at 16:58 (PM) Thursday ]
makepath moretests/. && cd moretests &&  exec make MAKEFILE_PASS=BASIC     build_all
/project/dce/build/dce1.1-snap/tools/at386/macho/gcc -B/project/dce/build/dce1.1-snap/tools
/at386/macho/  -c    -D_SHARED_LIBRARIES       -I. -I/u1/devobj/sb/nb_486/src/test/security
/api/moretests -I/project/dce/build/dce1.1-snap/src/test/security/api/moretests  -I../../..
/../security/h -I/u1/devobj/sb/nb_486/src/security/h -I/project/dce/build/dce1.1-snap/src/s
ecurity/h -I../../../../security/client/login -I/u1/devobj/sb/nb_486/src/security/client/lo
gin -I/project/dce/build/dce1.1-snap/src/security/client/login -I/u1/devobj/sb/nb_486/expor
t/at386/usr/include -I/project/dce/build/dce1.1-snap/export/at386/usr/include   -pic-lib   
-L/u1/devobj/sb/nb_486/export/at386/usr/shlib -L/project/dce/build/dce1.1-snap/export/at386
/usr/shlib -L/usr/shlib -L/u1/devobj/sb/nb_486/export/at386/usr/lib     -L/project/dce/buil
d/dce1.1-snap/export/at386/usr/lib    -ldce    /project/dce/build/dce1.1-snap/src/test/secu
rity/api/moretests/sec_authn.c
/project/dce/build/dce1.1-snap/src/test/security/api/moretests/sec_authn.c: In function `ma
in':
/project/dce/build/dce1.1-snap/src/test/security/api/moretests/sec_authn.c:132: warning: pa
ssing arg 7 of `sec_krb_cn_build_message' from incompatible pointer type
/project/dce/build/dce1.1-snap/src/test/security/api/moretests/sec_authn.c:132: too few arg
uments to function `sec_krb_cn_build_message'
*** Error code 1

[9/23/94 public]
Fix submitted.

~
~
~
~

~
~
~
~
~



CR Number                     : 12305
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_rgy_wait_until_consistent is 
implemented
Reported Date                 : 9/22/94
Found in Baseline             : 1.1
Found Date                    : 9/22/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : man3sec/sec_rgy_wait_until_consistent.3sec
Sensitivity                   : public

[9/22/94 public]

Remove notes stating sec_rgy_wait_until_consistent is not implemented.
Make other changes to clarify descriptions requested by rps.

[9/22/94 public]
Fixed and verified.  Verified by rps

[10/27/94 public]
Closed bug.



CR Number                     : 12297
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : Serviceability messages not in catalog
Reported Date                 : 9/22/94
Found in Baseline             : 1.1b18
Found Date                    : 9/22/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : gss.sams
Sensitivity                   : public

[9/22/94 public]
In the last GSSAPI codedrop, I changed the sams attributes for all the
serviceability messages to "undocumented".  Unfortunately, this also removes
all the other default attributes, so currently the GSSAPI serviceability
messages aren't being put in the message catalog.

[9/23/94 public]
Attributes changed to "undocumented incatalog intable"



CR Number                     : 12237
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Submit dlgstr001
Reported Date                 : 9/19/94
Found in Baseline             : 1.1
Found Date                    : 9/19/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : Makefile
Sensitivity                   : public

[9/19/94 public]


Submit the dlgstr001 (the multi-delegate test)

[9/21/94 public]

Submitted

[9/22/94 public]

Test update



CR Number                     : 12234
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : 3 memory abuse problems in process_as_req()
Reported Date                 : 9/16/94
Found in Baseline             : 1.1b17
Found Date                    : 9/16/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : security/krb5/kdc/do_as_req.c, security/client/login/sec_login_pvt.c
Sensitivity                   : public

[9/16/94 public]
Using Sentinel (memory leak/corruption detection package), found the following
three problems in security/krb5/kdc/do_as_req.c, process_as_req():

sprintf() using a krb5 data structure string that is not NULL terminated,
copying uninitialized data and not null terminating the destination string
correctly.

syslog() being passed names that were already free()d on error (syslog() calls
should be before cleanup calls on error).

3 calls to krb5_free_last_req() need to be #ifdef'd out because currently
the fetch_last_req() routine just passes back a pointer to static data.
Leaving them in there with #if 0 so we'll know where to put them back in
if/when we implement last_req usage...

[9/19/94 public]
Submitted do_as_req.c for above, plus off by 1 error on memcpy() in
sec_login_pvt.c sec_login_pvt_get_namecache().  Marked 'fix'.



CR Number                     : 12215
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12073
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : gssapi doesn't free all generated login-contexts
Reported Date                 : 9/15/94
Found in Baseline             : 1.1b17
Found Date                    : 9/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : gssapi.c, gssapi.h
Sensitivity                   : public

[9/15/94 public]
In certain cases, GSSAPI will need to generate a login-context as part of a
credential.  In most cases, this login-context should be deleted when the
credential is deleted, although occasionally a generated login-context should
be allowed to outlive its parent credential (if the app wants to use it with
RPC, for example).  What GSSAPI is supposed to do is delete the login-context
with the credential unless the user has called login_context_to_cred or
cred_to_login_context, in which case the user is responsible for deleting
the context.  In fact, GSSAPI never currently deletes these contexts.

On many cases the app will want different behavior anyway.  As well as fixing
the deletion problem, the app should be able to tell GSSAPI whether it's going
to take responsibility for login-context deletion, or whether GSSAPI should.

This relates to CR 12073 because the fix for that will make the existing bug
more of a memory-leak.

[9/23/94 public]
Modified GSSAPI to delete gss_acquire_cred-created login-contexts.  Added
new routine gssdce_set_cred_context_ownership to allow application to
modify login-context deletion behavior.



CR Number                     : 12200
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11880, 12190
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : core dump in gss_init_sec_context
Reported Date                 : 9/15/94
Found in Baseline             : 1.1
Found Date                    : 9/15/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : Fixed with CR 12190.
Sensitivity                   : public

[9/15/94 public]

While running gds_sec tests we get a core dump (Bus error) in
gss_init_sec_context.
(Nightly build of Sept. 13th)

This is the stack:

 0 _open@libc + 0x000002b0 (0x4004a148, 0x7affbc20, 0x14, 0x7b0334c8)
 1 free@libc + 0x00000138 (0x4004a148, 0x7af9a920, 0x10c1, 0x3400a95c)
 2 cma_lib_free@libdce + 0x00000148 (0x7b03d194, 0x400d2c40, 0xffffffff, 0)
 3 nm_oid_free@libdce (oid = 0x7b03d194)    [/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi.c: 3019]
 4 gss_init_sec_context@libdce (minor_status = 0x7b03479c, claimant_cred_handle = 1, context_handle = 0x7b034788, target_name = 0x40132278, mech_type = 0x7b034794, req_flags = 6, time_req = 4294967295, input_chan_bindings =   00000000, input_token = 0x7b0347bc, actual_mech_type = 0x7b034790, output_token = 0x7b0347c4, ret_flags = 0x7b0347b4, time_rec = 0x7b0347a8)    [/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi.c: 5212]
 5 dua_conf_sec_ctx + 0x0000228c (0x40020005, 0x1, 0x7b0346cc, 0x7b0346f0)
 6 d21_bh1_exec_bind + 0x000015ec (0x7b034130, 0x40010000, 0x1b9, 0x4001cc14)
 7 d21_1_bind + 0x00000bc0 (0x7b034038, 0x4000cdf8, 0x4000ce08, 0)
 8 ds_bind + 0x00001134 (0x400ce760, 0x400cd970, 0x40039d64, 0)

...

We checked the gssapi code and found:

gss_init_sec_context defines an automatic variable message_mech_type
(line 4545, gssapi.c):

gss_OID_desc message_mech_type;

Then it calls  (line 5188)

gss__unwrap_token(...,&message_mech_type, ...)

which performs basicly

message_mech_type.length = 4;
message_mech_type.elements = malloc(4);
strncpy(message_mech_type.elements,"\x2b\x18\x09\x08",4);

("\x2b\x18\x09\x08" is GSSDCE_C_OID_DCE_KRBV5_DES_desc.)

Then it calls

nm_oid_free(&message_mech_type);

This function compares first the pointers &message_mech_type and
GSSDCE_C_OID_DCE_KRBV5_DES - of course they are not equal because 
message_mech_type is an automatic variable.
Then it does

free(oid->elements);

what is correct.
But then it also frees &message_mech_type (line 3019):

free(oid);

This is wrong - &message_mech_type has never been allocated.

We think that nm_oid_free is used for many purposes.
So the fix should be done in gss_init_sec_context - 
change from

gss_OID_desc message_mech_type;

to

gss_OID message_mech_type;

message_mech_type = malloc(sizeof(OM_object_identifier));

...

gss__unwrap_token (..., message_mech_type, ...);

...

nm_oid_equal(..., message_mech_type);

...

nm_oid_free(message_mech_type);

[9/15/94 public]

I believe that the fix for OT 12190 (submitted today) also fixes this problem.
Can you verify this against tomorrow's sup and let me know if this CR can
be closed?



CR Number                     : 12190
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : gss_release_oid_set corrupts memory
Reported Date                 : 9/14/94
Found in Baseline             : 1.1b16
Found Date                    : 9/14/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : gssapi.c
Sensitivity                   : public

[9/14/94 public]
gss_release_oid_set calls the internal routine nm_oid_set_free, which in turn
calls nm_oid_free in a way that causes nm_oid_free to corrupt the freelist.

[9/15/94 public]
Fixed in today's drop



CR Number                     : 12181
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : ERROR - rgy_edit - creating ktab
Reported Date                 : 9/14/94
Found in Baseline             : 1.1
Found Date                    : 9/14/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : ./utils/commands.c
Sensitivity                   : public

[9/14/94 public]


Failed on the config of the multi machine test.
Please note dce_config passed on the core test but failed
on the multi-machine cell.

output from budapest:/tmp/dce_config.log


D:         Executing: rgy_edit> ktadd -p hosts/budapest/self -pw <not shown>
D:         Executing: rgy_edit> ktadd -p hosts/budapest/self -a -r
D:         Executing: rgy_edit> quit
DEBUG:     Executing: chk_rgy_edit(rgy_edit - creating ktab entry in registry
           database.)
DEBUG:     Executing: err_exit(rgy_edit - creating ktab entry in registry
           database.
             Message from rgy_edit:
             )
ERROR:   rgy_edit - creating ktab entry in registry database.
           Message from rgy_edit:

[9/14/94 public]

We reran the multi-machine smoketest on budapest 
and got the rgy_edit error again.


S:****** Check for active sec_client service...
./dce_config: 3288 Memory fault
ERROR:   rgy_edit - creating ktab entry in registry database.
           Message from rgy_edit:
           
+ cd /u1/RAT_tools

[9/14/94 public]
Here is the output of the dce_config.log file from the budapest machine (HP):

V:         Creating ktab entry in registry for this client node.
D:         Executing: rgy_edit> domain principal
D:         Executing: rgy_edit> add hosts/budapest/self
D:         Executing: rgy_edit> domain account
D:         Executing: rgy_edit> add hosts/budapest/self -g none -o none -pw
           <not shown> -mp <not shown>
D:         Executing: rgy_edit> ktadd -p hosts/budapest/self -pw <not
shown>
D:         Executing: rgy_edit> ktadd -p hosts/budapest/self -a -r
D:         Executing: rgy_edit> quit
DEBUG:     Executing: chk_rgy_edit(rgy_edit - creating ktab entry in
registry
           database.)
DEBUG:     Executing: err_exit(rgy_edit - creating ktab entry in registry
           database.
             Message from rgy_edit:
             )
ERROR:   rgy_edit - creating ktab entry in registry database.
           Message from rgy_edit:

Looking further on the server side, there was no principal by the name of
hosts/budapest/self existed in the registry. So, the first rgy_edit command
to add the principal hosts/budapest/self really failed. Manually running
the rgy_edit commands from budapest worked successfully. I have asked Peter
to re-configure sif and budapest again to see if this problem disappears.

[9/15/94 public]

The same problem was seen in the multimachine test on budapest.

Here is the extract from the log file do_test.dfs.log

        S:****** Starting dced...
        S:****** Initializing dced...
        S:****** Check for active sec_client service...
        ./dce_config: 5790 Memory fault
        ERROR: rgy_edit - creating ktab entry in
        Message from rgy_edit:

[9/15/94 public]

Memory corruption?

Here is the back trace from the core file:

0 _open@libc + 0x000002b0 (0x40012ae8, 0x7affb468, 0x7b010e9c, 0x7b033c30)
 1 free@libc + 0x00000138 (0x40012ae8, 0, 0xffffffd0, 0x7b033c30)
 2 cma_lib_free@libdce + 0x00000148 (0x400db468, 0, 0xffffffd0, 0x7b033c30)
 3 rpc__mem_free@libdce + 0x00000224 (0x400db468, 0x3f, 0x7b037558, 0x7b033c30)
 4 rpc__tower_flr_free@libdce + 0x00000090 (0x400db458, 0x7b037558, 0x7b0370ac, 0x7b037a34)
 5 rpc__tower_ref_free@libdce + 0x00000074 (0x400db410, 0x7b037558, 0x7b0370ac, 0)
 6 rpc__tower_ref_vec_free@libdce + 0x000000ac (0x7b03757c, 0x7b037558, 0x7b037558, 0x7b0375b8)
 7 ep_get_endpoint@libdce + 0x00000cac (0x7afa7010, 0x40115098, 0x7b0370ac, 0xffdd5440)
 8 rpc_ep_resolve_binding@libdce + 0x000001d4 (0x40115098, 0x7afa7010, 0x7b0370ac, 0x100000)
 9 rpc__cn_call_start@libdce + 0x00000858 (0x40115098, 0x2, 0x7afa7010, 0x4)
10 rpc_call_start@libdce + 0x0000025c (0x40115098, 0x2, 0x7afa7010, 0x4)
11 op4_csr@libdce (h = 0x40115098, name_domain = 0, key = 0x7b036370, allow_aliases = 0, item_cursor = 0x7b0358a4, cache_info = 0x7b036d20, result = 0x7b036788, status = 0x7b0358a0)    [rs_pgo_cstub.c: 1490]
12 rgy_pgo_get@libdce (context = 0x40113918, domain = 0, key = 0x7b036370, allow_aliases = 0, cursor = 0x7b0358a4, result = 0x7b036788, status = 0x7b0358a0)    [/project/dce/build/dce1.1-snap/src/security/client/rca/pgo.c: 286]
13 sec_rgy_pgo_get_by_name@libdce (context = 0x40113918, name_domain = 0, pgo_name = 0x7b0343cc, item_cursor = 0x7b0358a4, pgo_item = 0x7b03620c, status = 0x7b0358a0)    [/project/dce/build/dce1.1-snap/src/security/client/rca/pgo.c: 332]
14 pgo_key_validate (pgo_form = 0x40099948, name = 0x7b0343cc)    [/project/dce/build/dce1.1-snap/src/security/client/admin/rgy_edit/ek_db.c: 738]
15 form_real_write (form = 0x40099948, field_offset = 8, data = 0x7b0343cc, data_len = 19, validate = 1, status = 0x7b0357f4)    [/project/dce/build/dce1.1-snap/src/security/client/admin/rgy_edit/form.c: 318]
16 ek_write_field (op_handle = 0x40099938, field = 8, data = 0x7b0343cc, data_len = 19)    [/project/dce/build/dce1.1-snap/src/security/client/admin/rgy_edit/ek_db.c: 8552]
17 eif_write_pgo_field (pgo_handle = 0x40099938, field = 8, data = 0x7b0343cc, domain = eif_domain_person, check_default = 0, stp = 0x7b034ddc)    [/project/dce/build/dce1.1-snap/src/security/client/admin/rgy_edit/eif_pgo.c: 164]
18 tty_do_add_pgo (c = 0x7b033cc8, domain = eif_domain_person)    [/project/dce/build/dce1.1-snap/src/security/client/admin/rgy_edit/tty_pgo.c: 715]
19 tty_do_add (c = 0x7b033cc8)    [/project/dce/build/dce1.1-snap/src/security/client/admin/rgy_edit/tty.c: 301]
20 procs_cmds (must_prompt = 0, prompt_string = 0x40005da4)    [/project/dce/build/dce1.1-snap/src/security/utils/commands.c: 361]
21 main (argc = 2, argv = 0x7b0339f8)    [/project/dce/build/dce1.1-snap/src/security/client/admin/rgy_edit/tty.c: 1776]

[9/15/94 public]
Same error as happening in 12131.  Will submit similar but better fix:
 wcs_size = mbstowcs((wchar_t *) 0, buf, 0) to
 wcs_size = mbstowcs((wchar_t *) 0, buf, sec_rgy_name_t_size) 

The reason why OSF is seeing this is as follow:
From Sue Kline:

the bus error with the call to mbstowcs() in
acl_edit whereas we can't locally recreate the problem.

A defect with this routine was fixed in 9.0.3.  However, at OSF, 
you are using a special libc that HP built to workaround another 
I18N defect (in nl_langinfo()) to allow the new 1.1 RPC I18N 
functionality to work properly.  This version of libc was built off 
of a 9.0.1 release.  Regardless of the OS version of the machine you 
have, you must also have this version of libc installed in as to 
allow the I18N RPC tests to succeed.

[9/16/94 public]
File submitted yesterday and passwd today's multi-machine dce_config test.
Marked fix.



CR Number                     : 12179
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : DCE1.1 slower!  Tickets not being reused.
Reported Date                 : 9/14/94
Found in Baseline             : 1.1b17
Found Date                    : 9/14/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : krb5/lib/krb/get_creds.c, krb5/include/krb5/func-proto.h, security/utils/sec_authn.c, security/client/login/sec_login_pvt.c, security/client/rca/priv.c
Sensitivity                   : public

[9/14/94 public]
About 6 different people have mentioned to me that the 
S:****** Setting ACLs for all new namespace entries...
part of dce_config "seems to take much longer recently".  I've seen this
too.  Most don't feel confortable opening a CR on so weak a statement.  I
on the other hand, have no problems doing so :-)

Anyway, I looked at the acl_edit code and found that only one file has
changed since august, deif.c:

 * Revision 1.1.10.6  1994/09/13  21:10:20  desai
 *      Temporary fix for CR 12131. Adding strlen of buffer in a call to get the
 size.
 *      [1994/09/13  20:23:17  desai]
 *
 * Revision 1.1.10.5  1994/09/09  20:41:01  kline_s
 *      OT 12028: I18N code cleanup for Security.
 *      [1994/09/09  20:28:31  kline_s]
 * 
 * Revision 1.1.10.4  1994/06/02  21:57:18  mdf
 *      Merged with changes from 1.1.10.3
 *      [1994/06/02  21:53:32  mdf]
 * 

I18n seems like a likely cause of a performance hit, so:

 * Do we know of any performance impacts in the i18n work
 * Has anyone done any performance evaluation of the i18n changes
 * Is there something we can/should do?

Explanations:

 * I set this to priority 1 so someone would look at it.  
   Feel free to lower the priority.
 * I explicitly assigned Sue to this CR since she is the obvious person.
   Hopefully, we can remove several hours of delay of it getting to her.
   Again, reassign as necessary.  :-)

[9/14/94 public]
Okay, so I looked a little more.  The changes that Sue made are:

absolut admin/acl_edit$ bdiff -r  1.1.10.4 -R  1.1.10.5 deif.c
===================================================================
RCS file: ./security/client/admin/acl_edit/deif.c,v
retrieving revision 1.1.10.4
retrieving revision 1.1.10.5
10a11,14
>  * Revision 1.1.10.5  1994/09/09  20:41:01  kline_s
>  *    OT 12028: I18N code cleanup for Security.
>  *    [1994/09/09  20:28:31  kline_s]
>  *
14c18
<  *
---
diff -r1.1.10.4 -r1.1.10.5
>  * 
17c21
<  *
---
>  * 
19c23
<  *
---
>  * 
122a127
> #include <wchar.h>
126a132
> #include <un_maloc.h>
431,433c437,455
<     while (*buffer != '\0') {
<         if (isupper(*buffer)) *buffer = tolower(*buffer);
<     *buffer++;
---
>     wchar_t     *wcs_buf, *wcs_ptr;
>     int         wcs_size;
> 
>     wcs_buf = NULL;
> 
>     /* Determine the size of wchar_t buffer needed to be allocated,
>      * then malloc storage and convert to wchar_t for processing.
>      */
> 
>     wcs_size = mbstowcs((wchar_t *) 0, buffer, 0);
>     wcs_buf = malloc((wcs_size + 1) * sizeof(wchar_t));
>     mbstowcs(wcs_buf, buffer, (wcs_size+1));
> 
>     /* Convert to lower case */
>     wcs_ptr = wcs_buf;
>     while (*wcs_ptr != (wchar_t) 0) {
>          if (iswupper(*wcs_ptr)) 
>              *wcs_ptr = towlower(*wcs_ptr);
>          wcs_ptr++;
434a457,460
> 
>     /* Convert back to multibyte string format & cleanup */
>     wcstombs(buffer, wcs_buf, (wcs_size+1));
>     free(wcs_buf);

My question is what are we processing in wchars?  keys (principal, group,
cell names) are limited to PCS.  The names of the ACL Entries (e.g., user,
group, any_other, etc.) are also PCS strings.  The permission bits are
limited to PCS.  So what could this be?

[09/14/94 public]
I echo Howard's question.  WHY is acl_edit now dealing with multi-byte
chars?  The only legal place where this might possible need to happen
is DFS.  And why tolower!?

[9/14/94 public]
I echo everyone's question and would also like to add a statement.  Many
of the acl_edit's are upon CDS objects.  It is possible that CDS is one
who has slowed down.  This slow down in config has been evident for at
least 3 weeks now.

[9/14/94 public]
I agree with the timing of the slowdown.  We in qa have noticed it for 
a few weeks. Definitely before the 9/9 change mentioned above.

[9/14/94 public]
I agree that this section of dce_config is slower.  I don't agree that Sue's
acl_edit changes had anything to do with it because they just happened and
people have noticed this slowness for months...  I have no idea why it's
downcasing things now, I'll let SueK answer that.  I don't agree with looking
at acl_edit to see why it's slower.  Almost none of the time spent modifying
an acl is spent in acl_edit itself.  Most of it is spent in sec_acl_bind
which spends almost all of it's time waiting for CDS via rpc_ns calls, and
the rest is spent waiting for the sec_acl_lookup and sec_acl_replace in
which case the time is spent in ACL manager code.  I think I also remember
one or two acl_edit's in dce_config changing from the -addr syntax to the
pathname syntax, which means they would now be using CDS to bind instead of
just converting a string binding to an RPC binding which is real fast...
This is not a p1 problem and should not be assigned to Sue, so I've downgraded
the priority and assigned it to sec_bat.  Would still like an explanation
from Sue as to why these changes are even in acl_edit (shouldn't they be in
the API?) and why we're downcasing things now.

[9/14/94 public]
If you looked carefully from Melman's bdiff result, tolower() has been there 
before her change.  She only made it I18Nied.  Why it should be I18ned, Sue will
explain it.  Her code maybe slower it down a bit, but should be non-noticeable.
Maybe the change from -addr to CDS binding caused it slower as Mike mentioned.
Maybe it should assigned to dce_config?

[9/14/94 public]
Thanks SueC, you're right: If I had looked at the diff at all, I might have
noticed that, but I just echoed rsalz's comment above assuming he had noticed
a new piece of code calling tolower.  That tolower is ok because it's just
the ACL entry type tokens it's downcasing to compare against known ones
(ie: it'll accept USER:burati:crwxidt and match the entry type against the
known entry type "user").  I don't pretend to have followed any discussion
on why things need to support wide characters so I don't know why this had
to be changed.  Note that these are architectural tokens so they should not
need to be NLS'd (which they still aren't, but I just wanted to make sure
people understood that).

[9/14/94 public]
Geez, I promise I won't visit the doctor's in the morning any more! :-)

First, regarding the slowdown in CDS portion of dce-config, I have noticed
this slowdown since late August.  The I18N changes will add some overhead
(< 1%) to further degrade performance, but nothing this severe.  This OT
should be reassigned to the dce_config and CDS folks to resolve.

As far the I18N changes, this is necessary as a user in Japanese (for 
instance) may enter in a multibyte name and to ensure proper tolower()
conversions, in an I18N world you must convert the data stream to wchar_t.
Otherwise, a byte of a given multibyte character may be misinterpreted by libc
and actually converted to a lowercase value.  Even though we say this is
currently restricted to PCS, the user can enter any data they wish and the
code must handle it.  I could have changed the code to first check to ensure
the data is all PCS data, but eventually DCE will have to somehow support 
non-PCS principal names if it's going to fully accepted in a global market,
so I chose to make the more robust I18N modification once.

[9/22/94 public]
Reassigning to John Dugas who volunteered ;-) during the tech conf call to
look into this. One suggestion was to turn off auditing (via an environment
variable?) and compare the performance to the default which has auditing on.
Bumped severity and priority for the time being to reflect that this is impacting
system test (we're doing lots of configs) and that there MAY be a clue here
related to other performance problems we're seeing througout DCE. Left this
in the sec component but perhaps cds or auditing is more appropriate?

[09/23/94 public]
In order to compare performance without auditing, set environment 
variable DCEAUDITOFF to 1, before starting secd.

[9/26/94 public]
I said I would get some performance data for the the acl_edit phase
of cell configuration. Here is the data
 

I ran through three configurations:
  1.0.3
  1.1 with DCEAUDITOFF unset
  1.1 with DCEAUDITOFF=1

The following table gives real times for the start of configuration,
security configuration done, ACL edits started, and all done as well as
elapsed time for each stage. For example, The 1.0.3 configuration was 
started at 10:30:18 and its security configuration was completed at 10:31:52. 
The elepsed time for the security configuration was 1 minute 34 seconds.

                 1.0.3           1.1 DCEAUDITOFF not set  1.1 DCEAUDITOFF set

start            10:30:18        11:15:30                 11:36:42
elapsed          1:34            1:38                     1:42
sec done         10:31:52        11:17:08                 11:38:24
elapsed          1:40            2:10                     2:10
acls started     10:33:32        11:18:18                 11:40:34
elapsed          2:32            10:17                    10:40
all done         10:36:04        11:29:35                 11:51:14

The number of acls during the 'Setting ACLs' phase:
1.0.3 - 72
1.1 DCEAUDITOFF not set - 73
1.1 DCEAUDITOFF  set - 73


I looked for audit trail generation and found:

1.1 DCEAUDITOFF not set......

# find /opt/dcelocal -name '*aud*' -print       
/opt/dcelocal/bin/auditd
/opt/dcelocal/var/security/sec_audit_trail
/opt/dcelocal/var/security/sec_audit_trail.md_index
/opt/dcelocal/var/audit
/opt/dcelocal/etc/audit
/opt/dcelocal/etc/audit/ec/dce_audit_filter_modify
/opt/dcelocal/etc/audit/ec/dce_audit_filter_query
/opt/dcelocal/nls/msg/en_US.ASCII/dceaud.cat
# find /opt/dcelocal/var/audit -print
/opt/dcelocal/var/audit
/opt/dcelocal/var/audit/adm
/opt/dcelocal/var/audit/client
# ls -ls /opt/dcelocal/var/audit
total 4
   2 drwxr-xr-x   2 root     bin           24 Sep 26 10:41 adm
   2 drwxr-xr-x   2 root     bin           24 Sep 26 10:41 client
# ls -ls /opt/dcelocal/var/security
total 138
   2 -rw-------   1 root     sys           20 Sep 26 11:37 .mkey
   2 drwxrwxrwt   2 root     bin         1024 Sep 26 11:39 creds
   2 drwxr-xr-x   2 root     sys         1024 Sep 26 11:37 rcache
   2 drwxr-xr-x   2 root     sys         1024 Sep 26 11:37 rgy_data
 122 -rw-rw-rw-   1 root     sys        61832 Sep 26 11:51 sec_audit_trail
   6 -rw-rw-rw-   1 root     sys         2080 Sep 26 11:51 sec_audit_trail.md_index
   2 -rw-r--r--   1 root     root          62 Sep 26 11:37 sec_clientd.binding
   0 -rw-r--r--   1 root     sys            0 Sep 26 11:37 secd.log
# 


1.1 DCEAUDITOFF  set......

# find /opt/dcelocal -name '*aud*' -print
/opt/dcelocal/bin/auditd
/opt/dcelocal/var/audit
/opt/dcelocal/etc/audit
/opt/dcelocal/etc/audit/ec/dce_audit_filter_modify
/opt/dcelocal/etc/audit/ec/dce_audit_filter_query
/opt/dcelocal/nls/msg/en_US.ASCII/dceaud.cat
# find /opt/dcelocal/var/audit -print
/opt/dcelocal/var/audit
/opt/dcelocal/var/audit/adm
/opt/dcelocal/var/audit/client
# ls -ls /opt/dcelocal/var/audit
total 4
   2 drwxr-xr-x   2 root     bin           24 Sep 26 10:41 adm
   2 drwxr-xr-x   2 root     bin           24 Sep 26 10:41 client

[9/26/94 public]

I'll try one more thing.

Its just possible that the performance is being lost to conversion routines
for debug servicability calls. CDS is sprinkled with debug servicability
calls that have as arguments conversion routines that convert internal
data structures to ascii format to pass into servicability. Of course the
decision to output or notoutput the strings  based on the debug level isn't made
until after the conversions have been done and the strings passed through the
serviceability api. 

We can turn off all such processing by building CDS without -DDEBUG. I don't
know if other components are similarly burdened but I can build CDS and at
least try that.

[9/26/94 public]
This was downgraded last Friday, presumably because it's not an obvious
cause of any system or functional test failures.  I claim that if DCE is
4X slower in 1.1 than 1.0.3, then it could be causing *LOTS* of problems,
including some that we are seeing with long running tests timing out and/or
RPC believing dfsbind is catatonic and any other performance related problems.
I'm leaving it assigned to JohnD for now, since he seems to  have the most
time to look into it, but I've upgraded it back to 1 because if DCE1.1 really
is 4X slower than 1.0.3, then we *must* do something about it, at least in
the unintegrated tree, maybe sooner if it is causing problems with the
long running stress tests...  John, could you note the various sizes of
DCE binaries in 1.0.3 vs 1.1 that you used for the testing (including libdce)?

NOTE: Turning DCEAUDITOFF only gave us back 23 seconds (this was discussed
in email, so I'm noting it here too), so that wasn't necessarily much of a
problem.  BUT!  Nobody answered JD's question in the conference call last
week about whether setting DCEAUDITOFF  really prevents *all* of the auditing
work from being performed (ie: does it check it immediately or only after
lots of setup & conversions and just before the data would be written).  I
know this sounds like guesswork, but at this stage it could be anything...

[09/26/94 public]
I guess I didn't get the question during the telecon...  Yes, the check is immediate.
About time to look somewhere else ...
If the desire to be absolutely sure is still there, and there is some free time to
do it :-), then you can compile out the codepoints (some compile flag in secd if
I remember correctly).

[9/26/94 public]
Thanks for verifying that, I had also just checked the audit calls we make
and found that it's the first thing it checks...  John, don't bother trying
to compile out the codepoints, it would only save a procedure call and an
if statement per audit point.

[9/26/94 public]
YOUCH!  I just did some testing of my own.  acl_edit /.:/subsys -l (just
read the acl, don't even change it) on our 1.0.3 product vs a DCE1.1 machine
(running bl17, mine with the newer stuff didn't have CDS up at the moment).
Here's the timing results (in seconds from /bin/time acl_edit /.:/subsys -l):
(both HPUX, ran it many times on both to make sure results were consistent)
		REAL	USER	SYS
DCE1.0.3	1.6	0.6	0.1
DCE1.1		7.2	2.4	1.9

There's gotta be some startup overhead wasted here because acl_edit starts
up from scratch for every ACL.  If DCE1.1 is really that much slower than 1.0.3
across the board (ie: for longer running programs where the startup isn't as
much a factor) and we can't fix it, then you can bet I'll be looking for
some other line of work real fast...  Now I'm too depressed to go home :-(

John, it'd still be great if you can do the rebuild of CDS you were going to
try, just to rule that out too (we already ruled out auditing), but if it
doesn't prove much then reassign this to me.  I just found the following
by setting the env var DEBUG_ACL to 3 and rerunning the acl_edit command
on both platforms (running them simultaneously on 1.0.3 and 1.1).

(a) The first sec_acl_bind() debug stmt printed out on DCE1.1 shows up at
    about the same time that the 1.0.3 acl_edit has completely finished.
(b) There's several seconds between the inq_server_princ_name status debug
    stmt and when it prints out the status for rpc_binding_set_auth_info().
    The ONLY thing that happens between those two debug stmts is the call to
    rpc_binding_set_auth_info().
(c) The rpc_ns_ calls, while appearing a tiny bit slower than in 1.0.3, do
    not seem to be the bottleneck (just based on how fast the debug stmts
    surrounding them are showing up).
(d) The libdce.sl on that bl17 machine may have some parts built with debug
    because it seems to be over 14MB whereas mine is only 9.2MB (the 1.0.3
    libdce.sl is 3.9MB), but I wouldn't think that would account for all of
    the time shown above.
(e) We have big problems :-(

I'll try to figure out what's taking so long in acl_edit before the first
sec_acl_bind() debug stmt tonight, and talk to Greg about the slowness in
rpc_binding_set_auth_info() tomorrow and see if he has any ideas.

[9/26/94 public]
I fired off a scratch build last night with DCE_DEBUG turned of in dce.h but
it didn't get far. I'll figure out why later and just build CDS without DEBUG
this morning. It should take no more than a couple of hours to find out if this
is going to have any impact at all. I'll note that the timing for when most 
people think this began to be a problem doesn't fit with the  CDS serviceability
drop timing. The later came in  much earlier than the July/Augest time
frame most people report. But it could be that a couple of serviceability calls
were added in just the right place after the main drop so its worth checking.

[9/26/94 public]
As suspected turning off serviceability had very little impact.

start            10:32:37
elapsed          2:01 
sec done         10:34:38
elapsed          2:07
acls started     10:36:45
elapsed          9:22 
all done         10:46:07


Mike, Jean Hsiao is going to do a build tonight with profiling turned on so
we can nail this down a bit better tomrrow. In the mean yime he has some 
interesting numbers just through monitoring process times of the various
DCE pieces. I'll let him update this with what he has. I'll also assign this
to him.

[9/27/94 public]

The test, acl.sh, does 10 "acl_edit /.:/subsys -l"
in the server machine and below is a distribution
of the CPU usages:

        elapsed time    84.1 seconds

        acl.sh          42.6 seconds(50.6%)
        cdsclerk        14 (16.6%)
        cdsd            4 (4.7%)
        secd            3 (3.5%)
        dced            1 (1.1%)

The next step is to profile acl_edit and cdsclerk.

++++++++++++++++++++++++++++++++++++++++++++++
# acl.sh
ps -elf > /tmp/ps.log
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
        /bin/time acl_edit /.:/subsys -l
ps -elf >> /tmp/ps.log

[9/27/94 public]
Well I at least have better news than I did last night, although still not
great news...  I had so much trouble trying to get things running last night
that I rebuilt the world using last night's build source, so I now have time
info for the current nightly.

		REAL	USER	SYS
DCE1.0.3	1.6	0.6	0.1
DCE1.1b17	7.2	2.4	1.9   (may have been built debug here?)
DCE1.1 (9/27)	3.0	1.2	0.4   (last night's build)
Still about twice as slow as 1.0.3, but much better than whatever I was
testing on that bl17 machine.  Still (using DEBUG_ACL env var) seems like
most of the extra time is spent near startup and in rpc_binding_set_auth_info.

[09/27/94 public]

Repeating my acl_edit test above for 1.0.3 on a HP, "vanilla",
gave the following results:

	elapsed		20.6 seconds (100%)

	acl.sh		11.9 seconds(57.7%)
	cdsclerk	4 (19.4%)
	cdsd		2 (9.7%)
	secd		1 (4.8%)
	rpcd		1 (4.8%)

[09/28/94 public]

There are two gprof files(flat+call graph) from 
two "acl_edit /.:/subsys -l" runs located in "hsiao" directory. The 
prof.acl_edit.dat file is for 1.1 run, and the 
prof.103.acl_edit.dat file is for 1.0.3. Log-in snoopy and cd
to hsiao to get them. 

Below is a sample of many comparisons to be made. The cma_read is
called by same set of fuctions in both 1.0.3 and 1.1, but
in 1.1 the calls count is almost four times as in 1.0.3 --- 
1585 versus 430. Can some of you explain why? 

-----------------------------------------------
*** from 1.1 run ***

                0.00        0.00       1/1585        objid_file [359]
                0.00        0.00       4/1585        read_context [280]
                0.00        0.01      12/1585        krb5_fcc_read_addr [136]
                0.00        0.01      35/1585        krb5_fcc_read_authdatum [63]
                0.00        0.02      47/1585        krb5_fcc_read_keyblock [54]
                0.00        0.02      55/1585        krb5_fcc_open_file [43]
                0.00        0.06     145/1585        cds_reader [47]
                0.00        0.13     309/1585        krb5_fcc_read_data [23]
                0.01        0.41     977/1585        krb5_fcc_read [17]
[39.2    0.01        0.67    1585         cma_read [11]
                0.03        0.27    1530/1596        cma__io_wait [24]
                0.26        0.00    1674/1685        _read [28]
                0.07        0.00    1485/1548        cma__io_prolog [51]
                0.02        0.00    1484/1546        cma__io_epilog [120]
                0.02        0.00    1630/2628        _sigsetjmp [90]
                0.01        0.00    1630/2628        exc_push_ctx [209]
                0.00        0.00    3170/8726        cma__is_open [814]
                0.00        0.00    1630/2628        _setjmp [3729]
                0.00        0.00    1629/2615        exc_pop_ctx [815]

-----------------------------------------------
*** from 1.0.3 run ***

                0.00        0.00       1/430         objid_file [247]
                0.00        0.00       2/430         read_context [229]
                0.00        0.00       2/430         krb5_fcc_read_authdatum [249]
                0.00        0.00       6/430         krb5_fcc_read_addr [189]
                0.00        0.00      11/430         krb5_fcc_read_keyblock [106]
                0.00        0.00      13/430         krb5_fcc_open_file [51]
                0.00        0.03      92/430         krb5_fcc_read_data [33]
                0.00        0.03      94/430         dns_reader [47]
                0.00        0.08     209/430         krb5_fcc_read [36]
[23.5    0.01        0.16     430         cma_read [22]
                0.01        0.07     394/394         cma__io_wait [40]
                0.07        0.00     487/490         _read [42]
                0.01        0.00     364/364         cma__io_epilog [136]
                0.00        0.00     860/2280        cma__is_open [594]
                0.00        0.00     459/1191        exc_push_ctx [599]
                0.00        0.00     459/1191        _sigsetjmp [3243]
                0.00        0.00     459/1191        _setjmp [3242]
                0.00        0.00     458/1181        exc_pop_ctx [600]
                0.00        0.00     365/365         cma__io_prolog [607]

[9/26/94 public]
I'm not sure the number of calls to cma_read is the issue. Notice that all
of the callers of cma_read in 1.1 are also called more frequently in the
1.1 run. The percentage of the total calls to cma_read made by krb_fcc_read
for example is 48% for 1.0.3 and 60% in 1.1. While the later is a bit higher
its not 4 times higher. It looks like cma_read may be  getting called far more in
1.1 because all of the callers of cma_read are getting called more. And  to
use the krb5_fcc_read example again, Jeans data shows it getting called 209 
times during the 1.0.3 run and 977 times in the 1.1 run. We didn't look at the 
other callers of cma_read but it looks the ratios of calls to total calls for 
the major callers seem to be approximatly the same for both runs. I think 
something further up chain is causing the callers of cma_read to get called
more times.

[09/28/94 public]

The following comparison on krb5_fcc_retrieve will give a better idea.

In 1.1 it used  total 0.83 second and in 1.0.3 it used jist .20 second.
The differece 0.63 seconds is ~60% of the total user CPU difference, 1.01 second.

Note that krb5_get_cred_from_kdc is not in the 1.0.3 gprof at all.

*** from 1.1 run ***

                0.00        0.42       2/4           krb5_get_credentials       <cycle 1> [14]
                0.00        0.42       2/4           krb5_get_cred_from_kdc     <cycle 1> [18]
[48.3    0.00        0.83       4         krb5_fcc_retrieve [6]
                0.00        0.77      49/49          krb5_fcc_next_cred [9]
                0.00        0.03      47/51          krb5_free_cred_contents [77]
                0.00        0.02       4/4           krb5_fcc_start_seq_get [102]
                0.00        0.00       4/4           krb5_fcc_end_seq_get [604]
                0.00        0.00      47/47          krb5_cc_match [858]
                0.00        0.00       4/8           krb5_timeofday [944]
                0.00        0.00       2/2           krb5_move_cred_contents [1070]

-------------------------

*** from 1.0.3 ***


                0.00        0.20       2/2           krb5_get_credentials [17]
[28.1    0.00        0.20       2         krb5_fcc_retrieve [16]
                0.00        0.17      11/11          krb5_fcc_next_cred [21]
                0.00        0.01       2/2           krb5_fcc_start_seq_get [114
]
                0.01        0.00       2/2           krb5_fcc_end_seq_get [132]
                0.00        0.01      11/11          krb5_free_cred_contents [19
9]
                0.00        0.00      11/11          krb5_cc_match [709]
                0.00        0.00       2/2           krb5_timeofday [813]
                0.00        0.00       2/2           krb5_move_cred_contents [81
1]

[09/28/94 public]

Since I have got all the possible data that I can think of and
I believe the performance bug, if any, is in the security 
side, I hereby switch the responsible person from "hsiao" to
"desai".

[09/28/94 public]

Mike B., you certainly can kill two birds with one stone now
--- this and OT 12311!

Here are new facts:
	* 2 "renewed" tickets per per klist --- from klist
	* 6 "renewed" tickets per acl_edi --- from klist
	  Enclosed below are two tickets with 8 seconds apart.	

	* 6 more krb5_fcc_next_cred calls per acl_edit
     	  --- from gprof of "acl_edit /.:/subsys -l"

So, more and more krb5_fcc_next_cred calls have casued
acl_edit slower and slower, and dfsbind to spin(OT12311).

Kinit can get you back!
++++++++++++++++++++++++++++++++++++++++++++++++
Renewed tickets with 8 seconds apart:

Client: dce-ptgt@dce10_cell.osf.org     Server: dce-rgy@dce10_cell.osf.org
        valid 94/09/28:13:29:54 to 94/09/28:14:09:51
Client: dce-ptgt@dce10_cell.osf.org     Server: dce-rgy@dce10_cell.osf.org
        valid 94/09/28:13:30:02 to 94/09/28:14:09:51

[9/28/94 public]
Found it!  I followed the krb5 cc matching (ticket matching/fetching) fcns
down the stack and found that it was never matching existing tickets even
if they were still valid.  It turned out that it was matching the svr, client,
exp times ok, but not matching the authdata.

About a month ago, Greg added code to store the EPAC creds in the Ticket
authdata fields of ccaches, so that the runtime could get at them for a
call start instead of having to extract them on a callback.  This is what
caused the problem because the KRB5 api always matches against principals,
time and authdata whereas we only want to match against principal and time.
(because there's no way to know what the authdata is at this point in the
client; it only knows that it wants a ticket to a particular server).

Greg's suggestion to fix this (since we can't change the KRB5 api without
breaking compatibility) is to have a parallel interface at this level
(krb5_get_credentials_dce()) which allows you to pass in the requested
fields to match against and have sec_krb_get_creds() call this new rtn
instead of krb5_get_credentials() which hardcodes the flags to 
KRB5_TC_MATCH_TIMES | KRB5_TC_MATCH_AUTHDATA.

Upgraded to severity A because this isn't just an acl_edit slowness problem
in dce_config anymore, this is "mega bogosity :-)" in that DCE1.1 would be
unusable in a real environment if every time anybody got a new handle to
any DCE daemon or DCE application server it wound up getting new tickets...
I'm almost positive that *most* if not all of the slowness causing the
problems in 12311 is caused by this one, but I'll leave that one open
separately for now, in case this doesn't completely fix that one.

[9/28/94 public]
Submitted fixes, marked 'fix'.



CR Number                     : 12168
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : privilege server
Short Description             : compat mode security hole in
priv server
Reported Date                 : 9/13/94
Found in Baseline             : 1.1
Found Date                    : 9/13/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : rpriv_v1_1_mgrs.c
Sensitivity                   : public

[9/13/94 public]

Currently the privilege server ignores the requested
compatibility mode in a delegation request and always
sets it to "initiator."  This was done because, at the
time, the other core components did not support the
1.1 authorization model and a compat mode of "none"
would cause all authenticated CDS or DTS requests
to fail.

I made this a p0 bug because Bruce is going to start
testing compat mode, which will immediately fail, and
because allowing a delegate to use compat mode
"none" when the initiator did not enable it amounts
to illegal impersonation in the compatibility case.

[9/28/94 public]

fix submitted.

[10/4/94 public]

Verified against bl-20, closing

Here's what I tested:

BUILD: BL-20


CONFIG:

dce1 (HP/UX) : 1.1 Security Server and 1.1 DTS Local Server
stthomas(486): 1.0.3 Client and DTS Local Server



I started an initiator and delegate
on the 1.1 System (dce1)
and I was playing with the ACL (/.:/hosts/stthomas/dts-entity) for
the DTS Local Server on the pre1.1 system (stthomas).
By playing, I mean use sec_acl_test_access
on the /.:/hosts/stthomas/dts-entity ACL


                initiator       delegate        compat_mode     PASS/FAIL
                permissions     permissions
--------------------------------------------------------------------------

                rwc             rwc             initiator       P
                rwc             ---             initiator       P
                ---             rwc             initiator       F
                ---             ---             initiator       F


                initiator       delegate        compat_mode     PASS/FAIL
                permissions     permissions
--------------------------------------------------------------------------

                rwc             rwc             caller          P
                rwc             ---             caller          F 
                ---             rwc             caller          P
                ---             ---             caller          F


                initiator       delegate        compat_mode     PASS/FAIL
                permissions     permissions
--------------------------------------------------------------------------

                rwc             rwc             none     	F 
                rwc             ---             none            F 
                ---             rwc             none            F
                ---             ---             none            F



CR Number                     : 12150
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb
Short Description             : HYP: sec failures with cell aliases
Reported Date                 : 9/12/94
Found in Baseline             : 1.1b17
Found Date                    : 9/12/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : ./security/krb5/kdc/do_tgs_req.c,
./security/krb5/kdc/kdc_util.c, ./security/utils/sec_authn.c
Sensitivity                   : public

[9/12/94 public]
I installed and configured b17 on an HP (absolut).

I up'ed the directory version number to 4.0 on /.:

I by hand created an alias for the cell (sec, cds, dce_cf.db).

I stopped and restarted the servers.

I then set the alias to be the new primary name.  All the commands
completed successfully.  I then tried to stop and restart the cell so that
the dce_cf.db changes would take affect, but dced would not come up.

root@absolut /$ rc.dce
        /opt/dcelocal/bin/dced

(hangs here)

  absolut admin/dcecp$ psdce
    root 17437  1512  0 16:55:09 ttyp2    0:00 rc.dce /etc/rc.dce
    root 17469 17437  0 16:55:12 ttyp2    0:00 /opt/dcelocal/bin/dced
    root 17470 17469  2 16:55:14 ?        0:01 /opt/dcelocal/bin/dced
  absolut admin/dcecp$

[9/12/94 public]
Would you elaborate on how to do the steps above (except intall & config :-).
(up dir version, create alias, switch primary)
We (Rich and/or I) definitly will want to do the steps.

[09/13/94 public]
Here is what we believe is happening:  an alias was created and secd
was switched to the new primary.  dced is trying to use the machine
keytab, but failing because the security API doesn't recognize the old
name as still being a name for the current cell.  Reassigned.

[9/13/94 public]
Data point.  I edited dce_cf.db and changed back to the old cellname.  I
then tried rc.dce again and made it past dced.  rc.dce ran to completion
and I had a cell running.  I was able to login as cell_admin and do a
hostdata catalog (auth RPC).  

I would have expected some problems since the principal is named with the
new name (old name == absolut_cell, new name == absolut_alias).  I looked
at the principals:

  dcecp> pri show krbtgt/absolut_alias
  {fullname {}}
  {uid 12451}
  {uuid c6d8e45c-ce6d-11cd-b65d-080009251352}
  {alias no}
  {quota unlimited}
  dcecp> pri show krbtgt/absolut_cell  
  {fullname {}}
  {uid 12446}
  {uuid cec2c5b8-ce61-11cd-8c6f-080009251352}
  {alias no}
  {quota 0}
  {groups none}
  dcecp> 

I see that neither is an alias.  I didn't have a log to ensure that the
principcal got created as an alias (seeing that the uids are different I
bet I screwed that up), but I did find this in the Xterm log:

  dcecp> prin mod krbtgt/absolut_alias -alias no
  dcecp> registry verify

I'll trying fixing this and resetting the primary name of the cell...

[9/13/94 public]
I set the krbtgt/absolut_alias principal to be a real alias of
krbtgt/absolut_cell and a few simple dcecp commands worked okay.  I then
did: 

  dcecp> prin mod $_n -alias no
  dcecp> prin sh $_n
  {fullname {}}
  {uid 12446}
  {uuid cec2c5b8-ce61-11cd-8c6f-080009251352}
  {alias no}
  {quota unlimited}
  dcecp> prin sho krbtgt/absolut_cell
  {fullname {}}
  {uid 12446}
  {uuid cec2c5b8-ce61-11cd-8c6f-080009251352}
  {alias yes}
  {quota unlimited}
  {groups none}

and brought down the cell.  While down I changed dce_cf.db to be:

  cellname /.../absolut_alias
  hostname hosts/absolut
  cellalias /.../absolut_cell

and tried rc.dce again.  It hung in dced as before.

[9/14/94 public]
I was told to add more detail.  I working on making the cellalias script
work (now that dced hostdata should be functional).  See the script in
src/admin/dcecp/scripts/cellalias.dcp for details.

 [I'll assume the alias name is "absolut_alias" and the uid of the
 "krbtgt/absolut_cell" principal is 123

To create an alias:

  principal create krbtgt/absolut_alias -alias yes -uid 123
  registry verify     # only needed if security replication

  cdsalias create /.../absolut_alias
  directory synchronize /.:

  # edit dce_cf.db to add "cellalias /.../absolut_alias"

  # now dce_shutdown, rc.dce so everyone re-reads dce_cf.db

To set an alias as a primary

  principal modify krbtgt/absolut_alias -alias no
  registry verify     # only needed if security replication

  cdsalias set /.../absolut_alias
  directory synchronize /.:

  # edit dce_cf.db to swap the values of cellname and cellalias

  # now dce_shutdown, rc.dce so everyone re-reads dce_cf.db

[9/22/94 public]
Several people know I'm working on this, but apparently not the right ones.
After getting further info, reproduced this in Chelmsford; debugging.

[9/29/94 public]
Changed the short description to more accurately reflect what this CR
represents.  

CR 12374 will probably be fixed by the fix for this CR.

Question: Could this also be related to 12274 (intercell login failure) or
12178 (rgy_edit cell failures between 486 and 486)?

[9/29/94 public]
A prescient question -- after fixes are applied to kerberos for realm
canonicalization, secd cores with a traceback similar to one in 12178.
We're pursuing that as a possible memory corruption problem.

[10/5/94 public]
I'm back on this today...  Secd bootstrapped & I can dce_login, so ship it?
Not yet -- more finishing, test & review tbd, but it may come in tomorrow.

[10/6/94 public]

Well, I was going to work on it before I got flattened for half a week with
a bad cold, but Rob got it working before I could get to it.
changing responsible person to reflect reality.

[10/7/94 public]
Submitted.  Cells now configure/boot, but it's quite possible that we'll
find more lurking problems (eg 12374), for which new OTs should be opened.



CR Number                     : 12134
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : pwd_config
Short Description             : unable to unconfigure Password Management Server
Reported Date                 : 9/12/94
Found in Baseline             : 1.1b16
Found Date                    : 9/12/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : dce_config
Sensitivity                   : public

[9/12/94 public]
dce_config tests for pwd_strengthd already running before invoking
pwd_config.  Since pwd_config can be called to unconfigure as well
as configure the Password Management Server, the test for already
running should be performed only if the argument is not "-unconfig".

This error prevents use of Menu item 11 "Unconfigure Password Management
Server" in the "Additional Server Configuration" menu, although
/opt/dcelocal/etc/pwd_config -unconfig can be executed manually.

[9/12/94 public]
Fix as submitted: enclose test for password management server already
running with test for zero-length argument to the config_pwd_mgmt()
function.



CR Number                     : 12131
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit memory fault
Reported Date                 : 9/12/94
Found in Baseline             : 1.1
Found Date                    : 9/12/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : acl_edit/deif.c
Sensitivity                   : public

[9/12/94 public]

Using latest bits configured a security server successfully. Trying to
configure a cds server gives the following error on HP/UX.

S:****** Configuring initial CDS Server...
S:****** Please wait for user authentication and authorization...


S:****** Check for active sec_client service...

        Create LAN profile so clients and servers can be divided
        into profile groups for higher performance in a multi-lan cell ?
(n) 
S:****** Starting cdsadv...
S:****** Starting cdsd...
S:****** Setting ACLs for all new namespace entries...
./dce_config: 12794 Bus error
./dce_config: 12814 Bus error
ERROR:   acl_edit - setting ACLs on new namespace entries.
           Message from acl_edit:
           
        Press <RETURN> to continue, CTRL-C to exit: 


Here is the dce_config log file output:

D:         Executing: acl_edit -e /.:/hosts/spring/profile -m
           user:hosts/spring/self:rwt
D:         Executing: acl_edit /.:/subsys/HP/sample-apps -m
any_other:rwtdica
           -m unauthenticated:rwti
DEBUG:     Executing: chk_acl_edit(acl_edit - setting ACLs on new namespace
           entries.)
DEBUG:     Executing: err_exit(acl_edit - setting ACLs on new namespace
           entries.
             Message from acl_edit:
             )
ERROR:   acl_edit - setting ACLs on new namespace entries.
           Message from acl_edit:

V:         User query: Press <RETURN> to continue, CTRL-C to exit:

[9/12/94 public]
Re-configured cds server again and got core dump on acl_edit this time.
Here is the traceback info:

>t
 0 rpc__dg_network_select_dispatc + 0x000004a8 (0x40009cb0, 0x1, 0,
0x7b033b98)
 1 cma_lib_free@libdce + 0x00000284 (0x400c6350, 0, 0x400cd250, 0x7b033a5c)
 2 rpc_ss_mem_item_free@libdce + 0x000000b4 (0x7b033cac, 0x400c6368,
0x400cd201, 0x7b03443c)
 3 rpc_ss_ndr_m_struct_pointees@l + 0x00001a4c (0x400c6358, 0xd,
0x642f7379, 0x73627573)
 4 rpc__dg_network_select_dispatc + 0x000004a8 (0x400c6350, 0x400c6358,
0x1, 0x7b033ccc)
 5 rpc__dg_call_wait@libdce + 0x000001f8 (0x400d1610, 0x1, 0x7b033ccc,
0xfe0338c8)
 6 rpc__dg_call_receive_int@libdc + 0x00000120 (0x400d1610, 0x7b033b74,
0x7b033ccc, 0x1)
 7 rpc__dg_call_transceive@libdce + 0x000003e4 (0x400d1610, 0x7b033ba8,
0x7b033b74, 0x7b033cd8)
 8 rpc_call_transceive@libdce + 0x00000084 (0x400d1610, 0x7b033ba8,
0x7b033b74, 0x7b033cd8)
 9 op1_csr@libdce + 0x00000260 (0x400c3ce0, 0x4008ebf8, 0x40007600, 0)
10 sec_acl_replace@libdce + 0x000001c0 (0x400c3ad8, 0x40007600, 0,
0x40006af8)
11 deif_save_sec_acl ()
[2086]
12 tty_process_args (argc = 0, args = 0x7b03370c, mask_calc_type_p =
0x7b033950)
[1420]
13 main (argc = 5, argv = 0x7b0338e0)
[231]

[9/14/94 public]
We couldn't reproduce this bug in house yet.  Yesterday we gave desai a possible
fix which we concluded from code inspection and reading on  mbstowcs manpage.
He tried it and seems working on HPUX.  But the person who coded it doesn't think
the original code is the culpit.  And the fix is not the best I18N's code.  I'll
leave it open.  Since the bug went away, I'll lower the priority and make OT12129
the dup of this one.  I also changed the title which is misleading.

[9/23/94 public]
The change submitted to address this has fixed the problem reported in this
CR, so I'm marking this 'fix'.  I'll mention to SueK that she needs to open
an enhancement request if she wants to keep track of wanting a better fix.



CR Number                     : 12125
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd dumps core after 9hrs systest w/ assertion failure
Reported Date                 : 9/10/94
Found in Baseline             : 1.1b17
Found Date                    : 9/10/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : see mem leak fix files in OT 10924
Sensitivity                   : public

[9/10/94 public]

secd master on osf/1  dumped core after ~9hrs of systest runs
I'll try to restart cell and tests with osf/1 master built
with debug security, if it's available.

cell:  bl17_cho_cell.osf.org
Config:
	OSF/1 sec master 
	HP CDS master
	2 osf/1 clients (1 sec rep)
	Rios Client (1.0.3a)

Running systests: 
	dcethrpc_auth(tcp)
	dcerpbnk_auth(udp)
	dcesestr
	dcerpcrun(tcp)
	dcethrpc(udp)

ls -l /opt/dcelocal/var/security/core
-rw-r--r--   1 root     bin             24235320 Sep 10 06:07 /opt/dcelocal/var/security/core
root@dce3> ls -s /opt/dcelocal/var/security/core
47392 /opt/dcelocal/var/security/core
root@dce3> du -sk core
23696   core

root@dce3> cat secd.log
%Internal DCE Threads problem (version CMA BL10+), terminating execution.
% Reason: assertion failure:  attempt to relock a mutex
        at line 1249 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c, pid = 4458
% See 'cma_dump.log' for state information.
**** Assertion failure. attempt to relock a mutex
     at line 1249 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c pid = 4458



Tail of cma_dump.log from time of crash:
...
Condition variable <USER> (142d378) 30598
Condition variable <USER> (14018a0) 30599
DCE Threads internal VM manager statistics:
 small (24 bytes): 22 allocated, 0 free
 medium (72 bytes): 8456 allocated, 0 free
 large (744 bytes): 63 allocated, 0 free
 38 things currently on general pool list
 30 zeroed allocations (1320 bytes)
 56 syscalls for 3522616 bytes (7 exact size), 2 attempts failed
 8551 pool extractions; 8488 split from larger packets
 47 pool returns; 0 merged with previous, 0 with next
 Lookaside scrounging: 0 small, 0 medium, 0 large
 0 sbrk alignments

Not much info from core; looks alot like previously
reported in CR 11812, but no FATAL malloc (svc not routed)

root@dce3> gdb /opt/dcelocal/bin/secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..
Core was generated by `secd'.
Program terminated with signal 6, IOT/Abort trap.
#0  0xa403fea4 in tgs_key ()
(gdb) break main
Breakpoint 1 at 0x40015a
(gdb) run
Starting program: /opt/dcelocal/bin/secd 

Breakpoint 1, 0x40015a in main ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0xa403fea4 in kill ()
(gdb) where
#0  0xa403fea4 in kill ()
Cannot access memory at address 0xc6053d44.
(gdb)

[9/10/94 public]
Just noticed that the limits were:

time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         16384
stack(kbytes)        2048
memory(kbytes)       unlimited
coredump(blocks)     unlimited
nofiles(descriptors) 1024
vmemory(kbytes)      unlimited

I'll restart the cell/tests with data unlimited.  Looking at
the size of secd up to the crash shows it growing up to
24.5M:
ps axww -o ucomm,pid,ppid,state,vsize,rssize,minflt,pagein,nswap,cputime,usertime,systime
secd              4458     1 S <  13.5M 4.30   1545     86     0     1:23.38     1:06.50     0:16.88
secd              4458     1 S <  15.2M 5.91   2106    342     0     5:05.44     3:56.79     1:08.65
secd              4458     1 S <  15.8M 6.09   2459   1005     0     8:45.22     6:51.04     1:54.18
secd              4458     1 U <  16.4M 5.91   2727   1521     0    12:18.48     9:37.85     2:40.63
secd              4458     1 U <  17.5M 5.92  10135   2310     6    15:57.79    12:30.30     3:27.49
secd              4458     1 U <  18.1M 5.93  11892   3403     7    19:52.92    15:29.64     4:23.28
secd              4458     1 S <  18.5M 6.24  12216   4512     7    23:12.18    18:00.58     5:11.60
secd              4458     1 S <  19.4M 6.32  12610   5453     7    26:09.11    20:15.01     5:54.10
secd              4458     1 S <  19.8M 5.46  12887   6610     7    29:10.42    22:30.18     6:40.24
secd              4458     1 S <  20.2M 5.69  13255   8151     7    32:12.86    24:44.99     7:27.87
secd              4458     1 U <  20.9M 6.53  13633   9274     7    34:55.79    26:50.80     8:04.99
secd              4458     1 S <  21.5M 5.81  21690  10116    14    38:03.78    29:11.36     8:52.42
secd              4458     1 U <  21.9M 5.91  35515  11836    31    40:44.66    31:12.94     9:31.72
secd              4458     1 U <  22.3M 6.18  35855  13039    31    43:20.28    33:10.50    10:09.78
secd              4458     1 U <  23.1M 3.73  42998  14344    37    46:03.34    35:11.46    10:51.88
secd              4458     1 S <  23.4M 5.25  59426  15613    56    48:21.23    36:48.55    11:32.68
secd              4458     1 S <  23.8M 6.06  72648  17030    71    50:57.02    38:41.70    12:15.32
secd              4458     1 S <  24.5M 6.36  76082  18359    73    53:32.28    40:34.94    12:57.34

[9/12/94 public]
Sunday, It died again with the upped limits.  This time I had SVC routed and got
the FATAL message as before in OT 11812:

1994-09-11-02:30:53.191-04:00I0.739 secd FATAL sec rs_rsdb balanced_trees.c 202 0x00793b70 unable to allocate memory.

So I got the osf/1 build with security built with debug and installed and
configged that as the server.  Restarted the tests.

Monday morning, the cell is still up and running.  This is the longest the osf/1
sec master has gone before hitting this bug (over 13 hours now).  Do we
need to run with debug to avoid this ?? ; )

[9/12/94 public]

Although I don't know how to accomplish what I am about to
suggest below, I'm told that it should be possible (except, 
perhaps, on hp/ux, where one cannot build with both both debug
and optimization in the same build).

Build two versions of the library, one with debug and one 
without using exactly the same sources.  Run with the 
non-debug version.  When debugging core dumps, load debug
info from the debuggable version of the library.

Just a thought ...

[09/12/94 public]

OT 11812 was duplicated to OT10924 - please refer to that instead.
This also looks very much the same.

Can you put the core file somewhere I can get at it?

[9/13/94 public]
I'm attempting to put the core in the afs cell in project/dce/osf.
I'll let you know when it makes it.
Meanwhile, we found that what we thought was a debug version of
security was actually built with optimization.  That run did
eventually crash also, but I'm not even going to deal with it.
Today we did get a real version of security built with -g osf
osf/1 for bl17.  I installed that and then ran gdb on the core
from the crash with the fatal malloc.  Here's what I got:

Warning: exec file is newer than core file.
Core was generated by `secd'.
Program terminated with signal 6, IOT/Abort trap.
#0  0xa403fea4 in tgs_key ()
(gdb) break main
Breakpoint 1 at 0x40015f: file
/project/dce/build/dce1.1-baseline/bl-17/src/security/server/rs/rs_main.
c, line 314.
(gdb) run
Starting program: /opt/dcelocal/bin/secd 

Breakpoint 1, main (argc=1, argv=0xbffffa8c)
    at
/project/dce/build/dce1.1-baseline/bl-17/src/security/server/rs/rs_main.c:314
314         setlocale(LC_ALL, "");
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0xa403fea4 in kill ()
(gdb) where
#0  0xa403fea4 in kill ()
Cannot access memory at address 0xc60e0d44.
(gdb)

[9/13/94 public]
Core file is on maalox in project/dce/hp/core.SECDcrash2

[9/14/94 public]
It happened again last night... with the non-debug version
of secd with the memory leak patches built against bl-17
on osf/1.  Same secd.log as above (attempt to relock a 
mutex).  No core dump info.  Took about 5 1/2 hours to occur.  

The version built with debug and the patches against 
bl-17 is still up and running...

[09/14/94 public]

A suggestion from greg which may help us get a better traceback is
to run a nondebuggable secd in the debugger. When it crashes, the debugger
may give a better traceback. Use the -v & -d options of secd.

[9/20/94 public]
Tried the above suggestion, still no useful traceback.  Activity
at the time showed normal update attempts and updates taking place
on registry.

Have since installed bl-18.  Still getting core dump, didn't run
in gdb this time; will try again.  Here's the core info:
..
Core was generated by `secd'.
Program terminated with signal 10, Bus error.
#0  0x4a5024 in search ()
(gdb) break main
Breakpoint 1 at 0x40015a
(gdb) run
Starting program: /opt/dcelocal/bin/secd 

Breakpoint 1, 0x40015a in main ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0x4a5024 in search ()
(gdb) where
#0  0x4a5024 in search ()

[9/23/94 public]
Given that we've fixed more memory leaks since bl18, we need you to see if
this can be reproduced with a build of yesterday or later.

[9/23/94 public]
I'll attempt to run over the weekend with the nightly from last night
plus Tom J's fixes on osf/1 and Rajendra's fixes on the HP.

[9/26/94 public]
GOOD NEWS!  Ran this weekend with the build from Sat a.m. which included
above-mentioned fixes.  Ran 48 hrs of security tests.  SECD is STILL up 
and running - 51+ hours.  I'm happy.  I'm closing this CR.



CR Number                     : 12106
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : era
Short Description             : secd core dumps during schema create test
Reported Date                 : 9/8/94
Found in Baseline             : 1.1b16
Found Date                    : 9/8/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : 
./security/h/rsdb_attr_pvt.h
./security/server/rs/rs_log.c
./security/server/rs/rs_log_attr_schema.
Sensitivity                   : public

[9/8/94 public]

   Using the dcecp functional test schema_create_P.tcl, we
are seeing secd crash on a regular basis.  This is seen on
a cell using dce1.1 bl-16.3.

   The schema_create_P.tcl test is comprised of 90 test
cases, each of which creates an object in the default
security schema (/.:/sec/xattrschema) in a different way,
using different switches, attributes, etc.  Individually,
each test works correctly.  But when run together in the
test suite, the secd core dump is seen.

   The point where secd crashes varies anywhere from the
20th test case to the 80th.  We have not been able to
characterize it in terms of the type of schema create's
being done.  It doesn't seem to matter if triggers, acl's,
bindings, flags, etc, are being used or not.

   Were still trying to figure out if the dcecp code
that creates the schema_entry structure is correct.  At
one point we thought the malloc's for bindings were not
done correctly, but we can get the same dump to happen
if we do alot of schema creates without using bindings.
So we're still looking into things.

   The traceback from the core dumps seem to be trashed
a bit, so not sure how helpful they'll be.  The
high points of the three tracebacks are:

   child died due to: bus error
   0 free@libc
   1 rsdb_attr_sch_store_by_id
   2 TMEM@libdce
   3 rsdb_attr_sch_add
   4 rs_attr_schema_create_entry
   5 op0_ssr
   6-10 TMEM@libdce
   11 free@libc

   child died due to: segmentation violation
   0 malloc
   1 TMEM@libdce
   2 TMEM@libdce
   3 dce_aud_commit (evt_write.c: 722)
   4 rs_attr_schema_create_entry
   5 op0_ssr
   6-10 TMEM@libdce

   child died due to: bus error
   0 free@libc
   1-4 TMEM@libdce
   5 audit_pickle_dencode_ev_info [audit_pickle_cstub.c: 966]
   6 dce_aud_commit [evt_write.c: 723]
   7 rs_attr_schema_create_entry
   8-13 TMEM@libdce

   The core files were originally found in /opt/dcelocal/var/security/core
   and are now on (local HP machine)...
      /afs/ch/users/truitt/core.schema_create_1
                           core.schema_create_2
                           core.schema_create_3

   As a side note, sometime before/during/after the core dump, the window
   in which dced and secd started displays the message

   "RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: Wrong principal in request (dce/krb)"

   I don't know why this is coming up, or if it's even related.

[09/08/94 public]
Two of the three tracebacks, show some audit activity, similar with CR 11965.
If you could rerun the test with environment variable DCEAUDITOFF set to 1,
it would be possible to isolate to audit, or security.

[09/12/94 public]
By setting DCEAUDITOFF=1 in the tetexec.cfg file, the tests pick up the
environment variable.  The core dump still occurs, and the limited trace
we can get shows mostly TMEM's and free's, with no references to audit
calls.

[09/13/94 public]
I had secd core dump on a 486 this morning (running the most recent
nightly build -- 9/12) after I had issued the following dcecp command
by hand (this is the same command as appears in some of the ERA FVTs):

xattrschema create /.:/sec/xattrschema/pgo_test_binding -enc binding -acl mgr {group r r r r}

However, after I restarted secd and tried the same command again,
there were no ill effects. Unfortunately, I don't think the core dump
is going to be very useful:

Core was generated by `secd'.
Program terminated with signal 11, Segmentation fault.
#0  0xa419049c in tgs_key ()
(gdb) bt 8
#0  0xa419049c in tgs_key ()
Cannot access memory at address 0xc608ed40.
(gdb) bt
#0  0xa419049c in tgs_key ()
#1  0xd7 in ?? ()

[9/15/94 public]
Got the trace back.  Need more investigation.

0 key_equal (k1 = 0x402a4618, k2 = 0x00000004)    [/project/dce/build/dce1.1-snap/src/security/server/rsdb/balanced_trees.c: 375]
 1 update (tree = 0x4014175c, td = 0x402a4698)    [/project/dce/build/dce1.1-snap/src/security/server/rsdb/balanced_trees.c: 529]
 2 update (tree = 0x4014d4a4, td = 0x402a4698)    [/project/dce/build/dce1.1-snap/src/security/server/rsdb/balanced_trees.c: 553]
 3 update (tree = 0x4014d4b8, td = 0x402a4698)    [/project/dce/build/dce1.1-snap/src/security/server/rsdb/balanced_trees.c: 557]
 4 insert_data (replace_ok = 0, db = 0x4002d080, new_key = 0x402a4618, new_data = 0x402a4610)    [/project/dce/build/dce1.1-snap/src/security/serv
er/rsdb/balanced_trees.c: 776]
 5 rsdb_store (db = 0x4002d080, key = 0x402a45a0, key_len = 8, data = 0x4013f480, data_len = 67, status = 0x402a4368)    [/project/dce/build/dce1.
1-snap/src/security/server/rsdb/rsdb.c: 1380]
 6 rs_log_propq_add (lep = 0x4013f480, st = 0x402a4368)    [/project/dce/build/dce1.1-snap/src/security/server/rs/rs_log.c: 1128]
 7 rs_log_write (bp = 0x4013f480, update_seqno =   00000000, update_ts =   00000000)    [/project/dce/build/dce1.1-snap/src/security/server/rs/rs_
log.c: 511]
 8 rs_log_attr_schema_delete (schema_name = 0x4012c2a8, attr_id = 0x402a3844, master_info =   00000000)    [/project/dce/build/dce1.1-snap/src/sec
urity/server/rs/rs_log_attr_schema.c: 357]
 9 rs_attr_schema_delete_entry (h = 0x40146630, schema_name = 0x4012c2a8, attr_id = 0x402a3844, cache_info = 0x402a3854, st_p = 0x402a3870)    [/p
roject/dce/build/dce1.1-snap/src/security/server/rs/rs_attr_schema.c: 504]
10 op1_ssr (h = 0x40146630, IDL_call_h = 0x4013f860, IDL_elt_p = 0x402a351c, IDL_drep_p = 0x400bc310, IDL_transfer_syntax_p = 0x4013fa5c, IDL_mgr_
epv = 0x4000ddb0, IDL_status_p = 0x402a3550)    [rs_attr_schema_sstub.c: 1660]
11 rpc__cn_call_executor@libdce + 0x000007c8 (0x4013f860, 0, 0, 0)
12 cthread_call_executor@libdce + 0x000002d4 (0x4012b7a0, 0x7a976478, 0x4004b240, 0xf)
13 cma__thread_base@libdce + 0x0000021c (0x4004b240, 0, 0, 0)
14 cma__thread_start1@libdce + 0x0000004c (0x4004b240, 0, 0, 0)
15 cma__thread_start0@libdce + 0x00000008 (0x4004b240, 0, 0, 0)
16 update (tree =   00000000, td =   00000000)    [/project/dce/build/dce1.1-snap/src/security/server/rsdb/balanced_trees.c: 529]
17 end + 0x00014138 (Bad access to child process (UE308)

[9/22/94 public]
Files submitted.  Marked fix.

The cause of the problem is memory corruption, so every time it core dumpped
on different places.

While in alloc_attr_sch_create(), it didn't malloc schema_name's space and in 
rs_log_attr_schema_create(), address calculation for schema_name didn't take 
into the consideration that rsdb_attr_schema_create_t is already part of 
rs_log_attr_sch_create_t.  The fix is to calculate the size correctly.

While I was in sentinel, I also saw similiar memory corruptions in
rs_log_attr_sch_prop_create() and rs_log_attr_sch_replay_create().
I also saw memory uninitiaoized in entryp in rs_log_replay() and
fix macros RSDB_ATTR_COPY_ADV_SRC and RSDB_ATTR_COPY_ADV_TGT to check NULL
pointer and 0 length before doing any copy.



CR Number                     : 12099
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : UHYP: generic trigger's not complete
Reported Date                 : 9/8/94
Found in Baseline             : 1.1
Found Date                    : 9/8/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : sec_rgy_attr.c , rsdb_attr.c
Sensitivity                   : public

[9/8/94 public]

The following problems exist in sec_rgy_attr.c

    Each successful call to rpc_ns_binding_import_next requires
    a corresponding call to rpc_binding_free() to deallocate the
    binding_handle.

    In the triggers() routine, after the call to 
    rpc_binding_set_auth_info (which uses fields in
    sec_attr_p), sec_attr_util_inst_free_ptrs is called
    so that the trigger can return an attribute directly 
    in the attrs[] array.  The problem is that if 
    sec_attr_trig_query fails with a comm failure, the 
    code iterates through rpc_binding_set_auth_info again
    with the next binding handle.  In this case, the
    binding auth_info from sec_attr_p has already been
    wiped out.

    Some of the code segments are duplicated, needs to be resturcted.

    The "string_binding" component of the generic trigger wasn't 
    implemented.  This is rather trival to implement (again making
    use of existing code), becomes easier after code is resturcted.

The following problems exist in rsdb_attr.c

    rsdb_attr_export_trig_binding, the (*allocator) is called directly 
    even though the comments say that allocator can be NULL.
    
    Incorrect amount of memory being allocated in rsdb_attr_export_trig_binding()

    The following statement is unnecessary:

	>           SA_ATTR_BND_AUTH_SVR_PNAME_P(sec_attr_p) =
	>                       SA_TRG_BND_AUTH_SVR_PNAME_P(sch_entry_p);


    The ')' is in the wrong location in most of the strlen calls
    in rsdb_attr_export_trig_binding(), (currently includes a '+1'
    inside of the ')').

    rsdb_attr_export_trig_binding, the unimplemented
    case for sec_attr_bind_type_twrs should not call "return" since each 'i'
    in the bindings array should be evaluated, regardless of whether
    a twr_set appears in the middle.  This case should not set a
    bad status because if a binding is left out, even if no bindings 
    get returned, at least this routine completed its job correctly.
    A higher level routine should be able to process the exported binding,
    even if it contains zero elements.

    The return status comments are wrong.

    Reduce overhead in rsdb_attr_lookup_by_name(), by only calling
    rsdb_attr_sch_export after it is known that a 
    query trigger is indicated.

[10/14/94 public]
According to Michael Fairbrother thhis code was submitted several weeks back
so this should no longer be open or tracked.  Marked as "fix".



CR Number                     : 12051
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_create_db
Short Description             : Smoketest failed creating  sec_create_db
Reported Date                 : 9/6/94
Found in Baseline             : 1.1
Found Date                    : 9/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/server/rs/rs_reserved.c
Sensitivity                   : public

[9/6/94 public]


HOST:		budapest
CORE FILES:	none


output from budapest:/u1/RAT_tools/do_automatic_test.log

S:****** The current highest UNIX ID for groups is 5000.
/mnt/opt/dce1.1/etc/dce_config: 2326 Memory fault
ERROR:   Error during creation of the security registry database.
+ cd /u1/RAT_tools
+ rm -f /u1/RAT_tools/run_commands.log.previous

+ cat /u1/RAT_tools/run_commands.log
Sorry.
User Identification Failure. - Registry server unavailable (dce / sec)
+ toolsdir=/u1/RAT_tools
+ report=/u1/RAT_tools/do_test.msg

+ subject_line=DCE 1.1 core smoketest on budapest Tue 09-06-94 at 04:33
+ rm -f /u1/RAT_tools/do_test.msg
+ [ -s /u1/RAT_tools/run_commands.log ]
+ + tail -1 /u1/RAT_tools/run_commands.log
fini=User Identification Failure. - Registry server unavailable (dce / sec)
+ [ XUser Identification Failure. - Registry server unavailable (dce / sec) = XDO
NE ]
+ dcecp=Tests did not finish
+ outcome=
+ echo DCE 1.1 core smoketest result on budapest dated 09-06-94 ===>
+ 1> /u1/RAT_tools/do_test.msg


output from budapest:/tmp/dce_config.log



S:****** Initializing dced...
D:         Executing: dced -i || { err_exit "dced -i failed to start."; }
D:         Executing: dced -b || { err_exit "dced -b failed to start."; }
DEBUG:     Executing: modify_rcfile(dced)
V:         Successfully modified rcfile /etc/rc.dce for "dced"
S:****** The current highest UNIX ID for persons on this node is 12345.
S:****** The current highest UNIX ID for groups is 5000.
D:         Executing: sec_create_db -my subsys/dce/sec/master -keyseed <not
           shown> -creator cell_admin -password $default_pw -pe 12445 -g 5100
           -ma 32767
DEBUG:     Executing: err_exit(Error during creation of the security registry
           database.)
ERROR:   Error during creation of the security registry database.
~

[9/6/94 public]
Some additional log info:

1994-09-06-10:28:57.189-04:00I----- dced NOTICE dhd general init.c 212
0x7affb918 Could not create file '/opt/dcelocal/etc/security/pe_site'
during init phase, No such file or directory
1994-09-06-10:29:03.977-04:00I----- dced NOTICE dhd general main.c 618
0x4001cee0 DCED is listening...
1994-09-06-10:29:32.020-04:00I----- sec_create_db NOTICE_VERBOSE sec
rs_sec_create_db rgy_create.c 594 0x7affb918 Attempting to create master
registry database for cell /.../new_cell

Looking at rgy_create.c file, after the log message, rs_setup_creator() is
called in rs_reserved.c file which was submitted on 9/2.

[9/6/94 public]
Re-created the problem again. This time got a core file as well.

 0 rsdb_attr_sch_calc_size + 0x00000074 (0x400bdc68, 0x7b034bf0,
0x7b033ff8, 0)
 1 rsdb_attr_sch_alloc_db_entry + 0x00000050 (0x400bdc68, 0x7b034b38,
0x7b033ff8, 0x6ab9320)
 2 rsdb_attr_sch_import + 0x00000068 (0x400bdc68, 0x7b034b38, 0x7b033ff8,
0x7b033ff8)
 3 rsdb_attr_sch_add + 0x000000c8 (0x40007f94, 0x400bdc68, 0x7b033ff8,
0x7b033ff8)
 4 add_attr_sch_entries + 0x000003a4 (0x7b033ff8, 0x7b033ffc, 0x7b033ff8,
0x7b033ff8)
 5 db_create + 0x00000618 (0x7b033ffc, 0x7b0340a0, 0x64, 0x400bd6b0)
 6 create_master_db + 0x0000020c (0x7b034010, 0x400bd348, 0x7b033012,
0x7b0340a0)
 7 create_master + 0x000004c0 (0xf, 0x7b033b34, 0x7b033ffc, 0x7b03401
 8 rgy_main + 0x000002bc (0xf, 0x7b033b34, 0, 0)
 9 main + 0x0000009c (0xf, 0x7b033b34, 0, 0)

[9/6/94 public ]

I am looking into rsdb_Attr_sch_calc_size now.  The change to 
rs_reserved.c is not related to this.

Is the following log message "normal"?

  1994-09-06-10:28:57.189-04:00I----- dced NOTICE dhd general init.c 212
  0x7affb918 Could not create file '/opt/dcelocal/etc/security/pe_site'
  during init phase, No such file or directory

[9/6/94 public]
Not normal, its a bug but not catastrophic.  The pe_site file was recently 
added as one of the dced hostdata objects.  dced is attmepting to create it
before the file exists, should not be affecting anything else.

[9/6/94 public]
Also note that the "pe_site" message is a NOTICE, not ERROR.

[9/6/94 public]
It was rs_reserved.c that was causing the problem.  Submission
pending approval.



CR Number                     : 12047
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : No return value in nm_oid_set_test_member
Reported Date                 : 9/6/94
Found in Baseline             : 1.1b14
Found Date                    : 9/6/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : gssapi.c
Sensitivity                   : public

[9/6/94 public]
The internal routien nm_oid_set_test_member() has a missing return statement in its default path.  This routine is called from gssdce_test_oid_set_member(),
and this bug means that if the specified OID is not in the OID set, 
gssdce_test_oid_set_member will sometimes claim that it is.

The fix is simply to add a 'return 0;' statement as the last line of
nm_oid_set_test_member() in gssapi.c.

[9/15/94 public]
Fixed in today's drop



CR Number                     : 12040
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Password Management Server
Short Description             : Unable to config the Password
Management Server.
Reported Date                 : 9/2/94
Found in Baseline             : 1.1
Found Date                    : 9/2/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : pwd_config
Sensitivity                   : public

[9/2/94 public]

Trying to configure a Password Management Server using dce_config using
9/01 NB bits gives the following error.

S:****** Configuring Password Management Server...
        Enter cell administrator password: 

ERROR:   Error while setting ACL on Password Management Server CDS
directory and object.
  Message from acl_edit:
  ERROR: acl object not found (dce / sec)
Unable to bind to object /.:/pwd_mgmt/pwd_strength

Here is the command which dce_config was trying to run when failure
happened:

D:         Executing: acl_edit -e /.:/pwd_mgmt/pwd_strength -m

[9/6/94 public]
Please include dce_config log output starting from the entry to
pwd_config.  It looks like the CDS directory was not created for
some reason, but log will show if creation was done or was skipped
for some reason.

[9/12/94 public]
Problem is that rpccp output has changed.  Previously, when an object
was not found, rpccp reported ">>> rpc runtime error: entry not found (dce / rpc)

Now, rpccp reports ">>> no matching objects found"

pwd_config looks for "error: entry not found" in checking to
see if the object has already been exported.

[9/12/94 public]
submitted fix is as follows:
pwd_config checks both stderr and stdout output from rpccp, looking for
either "error:" or "no matching objects found".



CR Number                     : 12036
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : key_mgmt api tests.
Short Description             : Running sec functional tests
creates 22 Meg of keytab file in /tmp.
Reported Date                 : 9/2/94
Found in Baseline             : 1.1
Found Date                    : 9/2/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : security/krb5/lib/keytab/file/ktf_util.c
Sensitivity                   : public

[9/2/94 public]

Created a single machine cell on at486 using NB bits. During SEC functional
test execution got file system full/unable to write messages. Further
investigation shows that key_mgmt_test file in /tmp (which is a keytab
file) is of approx. 22+ Mbytes.

-rw-------   1 root     root            22790144 Sep  2 11:46 key_mgmt_test

Here is the test script output when this happened:

Routine Tested:   key_mgmt
Tested For:       k4b key_mgmt_change_key test_key1 v0

Trace Message:    sec_key_mgmt_get_next_kvno status: Successful completion
(dce / svc), cur_vno: 1, next_vno: 2

/: write failed, file system is full


On HP/UX the same file is:

-rw-------   1 root     sys          331 Sep  2 10:01 key_mgmt_test

[9/2/94 public]

A similar thing happens when I run my test (dlgcfg001) too:

BUILD: 16.3

CONFIGURATION: HP Server, 2 OSF/1 Clients

The dlg_rgy_setup script runs fine on the server.
The dlg_rgy_setup script is in src/test/security/api/moretests.

However, when I run the following commands on
the client, the keytab area (/krb5/v5srvtab) explodes in size.

rgy_edit <<EOF
do a
kta -p dlg_svr -pw dlg_svr
EOF

root@stcroix(auth) % df /
Filesystem  512-blocks    Used   Avail Capacity  Mounted on
/dev/sd0a        62996   62798   -6100   111%    /
root@stcroix(auth) % pwd
/krb5
root@stcroix(auth) % ls -l
total 27714
-rw-rw-rw-   1 root     bin                  53 Sep  2 14:31 krb.conf
-rw-------   1 root     bin             14180352 Sep  2 15:15 v5srvtab

[9/6/94 public]
It's not obvious from the above when the explosion in size actually occurs
What was the size of the file just before you executed that rgy_edit cmd?
What was the size of v5srvtab just after running dce_config? (which does
that above rgy_edit command multiple times).
After the file becomes that big, run rgy_edit ktlist (hit ctrl-c after you
get a bunch of output) and let us know what's in the keytab file...

[9/7/94 public]

It appears the problem occurs when deleting the keytab not adding it.

I ran the following commands after adding the keytab 

rgy_edit <<EOF
do a
ktd -p dlg_svr -v 1
EOF

When running these commands that's where I got the filesystem full.

When I ran the commands to ADD the keytab everything looked OK.


rgy_edit=> ktl
/.../dce1_cell.qadce.osf.org/hosts/stcroix/self         1
/.../dce1_cell.qadce.osf.org/hosts/stcroix/self         2
/.../dce1_cell.qadce.osf.org/dlg_svr            1


However, "ktd -p dlg_svr -v 1" caused the explosion in size.


>What was the size of the file just before you executed that rgy_edit cmd?

-rw-------   1 root     bin                 150 Sep  2 15:55 v5srvtab


>What was the size of v5srvtab just after running dce_config? (which does

I don't know absolutely for sure, but I think it was the same as above.
It seemed normal to me

>After the file becomes that big, run rgy_edit ktlist (hit ctrl-c after you
>get a bunch of output) and let us know what's in the keytab file...

The output doesn't look weird, but the size of the file is

root@stthomas(auth) % rgy_edit
Current site is: registry server at /.../dce1_cell.qadce.osf.org/subsys/dce/sec/master 
rgy_edit=> do a
Domain changed to: account
rgy_edit=> ktl
/.../dce1_cell.qadce.osf.org/hosts/stthomas/self                1
/.../dce1_cell.qadce.osf.org/hosts/stthomas/self                2
rgy_edit=> quit
bye.


root@stthomas(auth) % ls -l /krb5
total 43426
-rw-rw-rw-   1 root     bin                  53 Sep  2 14:39 krb.conf
-rw-------   1 root     bin             22208512 Sep  7 10:15 v5srvtab

[9/7/94 public]
I'm not working on this (Sue will be), but I had a cell up with a recent
nightly build, so I decided to try it and see what happens...  I can't
reproduce the problem with either ktadd or ktdelete on HPUX.  Could you try
it on HPUX and/or RIOS to see if this is an OSF/1 only problem?  Also, as
Rich Salz has warned us in the past, we should really use 'ls -s' to see
what the size of the file is because 'ls -l' can be deceiving on some
platforms in some cases...  Could you let us know what ls -s says the file is
(it's probably in blocks, so let us know what the blocksize is too for the
platform that you report the ls -s size on).

[9/7/94 public]
This problem is OSF/1 specific and does not happen on HP/UX. This was
indicated when I opened the CR last week. I haven't tried on RIOS yet.

[9/7/94 public]

This one's probably my baby (merge bug), so I'm grabbing it.

[9/16/94 public]

There were a few misplaced byte swaps in the ktf_util.c code.

Note: this induces is a file format change to keytab files; existing
keytabs created since the previous submit of ktf_util.c will not be
readable by the current keytab code.

Keytabs on little-endian machines created since 8/26/94 will need to be
blown away and recreated.  Keytabs created before that point should still
be readable.



CR Number                     : 12028
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : I18N code cleanup
Reported Date                 : 9/2/94
Found in Baseline             : 1.1b16
Found Date                    : 9/2/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : ./security/client/admin/acl_edit/deif.c
./security/client/admin/sec_admin/sa_util.c
./security/server/pwd_mgmt/pwd_strength/pwd_strengthd.c
./security/server/rs/rs_pgo.c
./security/server/rs/rs_pwd_mgmt.c
./security/utils/commands.c
Sensitivity                   : public

[9/2/94 public]

Placeholder for upcoming I18N code cleanup fixes to Security.

[9/9/94 public]
Fixes submitted.



CR Number                     : 12012
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sad.sams
Short Description             : Extra newline chars in sad.sams
Reported Date                 : 9/1/94
Found in Baseline             : 1.1b17
Found Date                    : 9/1/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : security/h/sad.sams
Sensitivity                   : public

[9/1/94 public]

The new line character should be removed from some of the messages 
in the file security/h/sad.sams .  The messages from which the new line
should be removed are :

(1) Messages used by utilities which have not been converted (because
    dcecp is going to be replacing these ) to use SVC calls . These are
    acl_edit , rgy_edit ( there are no messages for used by sec_admin ).

    These utilities retrieve the message text using dce_error_inq_text()
    and log the message using (for e.g.) printf() . But the new extra line
    in the messages causes functional test scripts to fail. 

    Since there is nothing to be gained by adding a newline character,
    (and doing so only breaks existing functional tests ),
    I think the newline character should be removed from the messages. 

(2) Error messages logged by password_export and password_import. 

    passwd_export and passwd_import have been converted to use SVC calls.
    And the error messages in these clients should be ( and are - I believe)
    being logged using dce_pgm_fprintf() and/or dce_pgm_printf() . 

    dce_pgm_fprintf() and dce_pgm_printf() automatically append 
    a newline ( by design ) . Hence a newline in messages is redundant
    and can be removed. 

I have assigned it a priority 1 because this will fix the functional
tests which currently fail .

[ sekhar 9/9/94 public ]

Fixed.



CR Number                     : 11989
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 11880
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : ERA documentation
Short Description             : sec_login_set_extended_attrs dumps core
Reported Date                 : 9/1/94
Found in Baseline             : 1.1
Found Date                    : 9/1/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_login_set_extended_attrs.3sec
Sensitivity                   : public

[9/1/94 public]

Our functional test suite "gds_sec" fails because of a core dump
in sec_login_set_extended_attrs. We could reduce the problem to the following 
sample program:

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#include <pthread.h>
#include <dce/gssapi.h>
#include <dce/rpc.h>
#include <dce/uuid.h>
#include <dce/dce_error.h>
#include <dce/rgybase.h>
#include <dce/binding.h>
#include <dce/sec_cred.h>


#define UUID_EXT_ATTR_DN "c5949eba-384a-11cd-8cba-080009353559"
#define UUID_EXT_ATTR_MB "c6a51456-384a-11cd-b6ef-080009353559"

/* prototypes of internal functions */

int main(void);

void t_dceerror (char* func, error_status_t e_st) ;

/* hardwire the corresponding uuid_t */

main()
        {
        sec_attr_t x500_attrs[1], attr;
        int i;
        error_status_t dce_st,dst;
        sec_login_handle_t  login_ctx, new_login_ctx;
    sec_cred_attr_cursor_t  acursor;
    sec_cred_pa_handle_t    pa_h;

        unsigned char era_buf[] = "";
        unsigned char buffer[2024];
        unsigned char *dce_e_string;
        unsigned32 ret, num_attrs = 1;

        uuid_t dn_attr_id;
        uuid_t mb_attr_id;
        dce_e_string = buffer;

        /* get the current login context */

        fprintf(stderr,"calling sec_login_get_current_context ..\n");
        fflush(stderr);

        sec_login_get_current_context(  &login_ctx, &dce_st);
        if ( dce_st != error_status_ok)
                {
                t_dceerror("sec_login_get_current_context" , dce_st);
                exit(1);
                }

        fprintf(stderr,"calling uuid_from_string ..\n");
        fflush(stderr);

        uuid_from_string (UUID_EXT_ATTR_DN , &dn_attr_id, &ret );
        if (ret != uuid_s_ok)
                {
                exit(7);
                }

        fprintf(stderr,"calling uuid_from_string ..\n");
        fflush(stderr);

        uuid_from_string (UUID_EXT_ATTR_MB , &mb_attr_id, &ret );
        if (ret != uuid_s_ok)
                {
                exit(8);
                }

        x500_attrs[0].attr_id = dn_attr_id;
        x500_attrs[0].attr_value.attr_encoding = sec_attr_enc_printstring;
        /*
        x500_attrs[0].attr_value.tagged_union.printstring = era_buf ;
        */


        /* set extended attribute required */

        fprintf(stderr,"calling sec_login_set_extended_attrs ..\n");
        fflush(stderr);

        new_login_ctx = sec_login_set_extended_attrs(
                                login_ctx,
                                num_attrs,
                                x500_attrs,
                                &dce_st);
        if ( dce_st != error_status_ok)
                {
                t_dceerror("sec_login_set_extended_attrs" , dce_st);
                exit(2);
                }


        fprintf(stderr,"calling sec_login_set_context ..\n");
        fflush(stderr);

        /* set the extended login context to be the default one */
        sec_login_set_context(  new_login_ctx, &dce_st);
        if ( dce_st != error_status_ok)
                {
                t_dceerror("sec_login_set_context" , dce_st);
                exit(4);
                }

        fprintf(stderr, "New login context available\n");

        /* get the new one again */
        sec_login_get_current_context(  &login_ctx, &dce_st);
        if ( dce_st != error_status_ok)
                {
                exit(6);
                }

        fprintf(stderr,"got current context handle<%d> \n",login_ctx);

        /* get the callers privileges */
    pa_h = sec_login_cred_get_initiator(new_login_ctx, &dce_st);
        if ( dce_st != error_status_ok)
                {
                exit(7);
                }
        fprintf(stderr,"got the callers privileges\n");

    sec_cred_initialize_attr_cursor(&acursor, &dce_st);
        if ( dce_st != error_status_ok)
                {
                exit(7);
                }
        fprintf(stderr,"initialized the attr cursor\n");

        /* get the callers extended attributes */
        while (dce_st == error_status_ok)
                {
                sec_cred_get_extended_attrs(pa_h, &acursor, &attr, &dce_st);
                if ( (dce_st != error_status_ok) && (dce_st != sec_cred_s_no_mor
e_entries))
                        {
                        exit(8);
                        }
                if (dce_st == error_status_ok)
                        {
                        if (uuid_compare(&(attr.attr_id), &mb_attr_id, &dst) ==
0 )
                        {
                        if (attr.attr_value.attr_encoding != sec_attr_enc_prints
tring_array)
                                {
                                fprintf(stderr,"Returned attr encoding %d incorr
ect\n",
                                                                attr.attr_value.
attr_encoding);
                                }
                        fprintf(stderr,"X500_DSA_Admin value: \n");

                        for (i = 0 ;
                                i<attr.attr_value.tagged_union.string_array->num
_strings;
                                i++)
                                        fprintf(stderr,"\t<%s>\n",
                                        attr.attr_value.tagged_union.string_arra
y->strings[i]);
                        }

                        else if (uuid_compare(&(attr.attr_id), &dn_attr_id, &dst
) == 0 )
                        {
                        if (attr.attr_value.attr_encoding != sec_attr_enc_prints
tring)
                                {
                                fprintf(stderr,"Returned attr encoding %d incorr
ect\n",
                                                                attr.attr_value.
attr_encoding);
                                }
                        fprintf(stderr,"X500_DN value: \n");

                        fprintf(stderr,"\t<%s>\n",
                                        attr.attr_value.tagged_union.printstring
);
                        }
                        else
                                fprintf(stderr,"Attribute not for X500 \n");
                        }
                }


        /* purge the new login context */
        sec_login_purge_context(  &login_ctx, &dce_st);
        if ( dce_st != error_status_ok)
                {
                exit(9);
                }

        fprintf(stderr,"purged context handle \n");
        exit(0);
}


void t_dceerror(
        /* IN */ char * funcname ,
        /* IN */ error_status_t e_st)
        {
        unsigned char textbuf [dce_c_error_string_len];
        int error_st;

        dce_error_inq_text ( (unsigned long) e_st, textbuf, &error_st);
                if ( error_st == -1 )
                        fprintf(stderr,"%s returns error <%08x>\n", funcname, e_
st);
                else
                        fprintf(stderr,"%s : %s\n", funcname,textbuf);
        }

-------------------------

Please note: if we decomment

        /*
        x500_attrs[0].attr_value.tagged_union.printstring = era_buf ;
        */

the sample program works. ( era_buf is defined as:

unsigned char era_buf[] = "";

........)

Our gds_sec tests also run if we set

x500_attrs[0].attr_value.tagged_union.printstring = era_buf ;

(and define "unsigned char era_buf[2048]")

what doesn't make any sense for us.
We use this as a temporary work around - but the reported problem 
should be fixed.

[09/01/94 public]
Sorry - forgot to put the stack of the core dump:

Program received signal 11, Segmentation fault
0xa40408d2 in strlen ()
(gdb) bt
#0  0xa40408d2 in strlen ()
#1  0xa429a398 in rpc_ss_build_bounds_list
    (-1073751576, 3, 0, 0, 1, -1073751480, 4706632)
#2  0xa4295c74 in rpc_ss_pointee_desc_from_data
    (-1538612560, 3, 0, 0, -1073751492, 4706632)
#3  0xa42978d6 in rpc_ss_ndr_marsh_scalar
    (-1538613476, 3, -1073747092, 4706632)
#4  0xa4297a4a in rpc_ss_ndr_m_enc_union_or_ptees
    (-1073747096, 1200, 1, 4706632)
#5  0xa42947a1 in rpc_ss_ndr_m_struct_pointees (15, 1164, -1073747112, 4706632)
#6  0xa4294eeb in rpc_ss_ndr_m_struct_pointees
    (-1073747112, 1, 4690644, -1538613524, 4706632)
#7  0xa4293269 in rpc_ss_ndr_marsh_pointee
    (-1538613552, -1073747112, 1, -1073750732, 4706632)
#8  0xa4294a60 in rpc_ss_ndr_m_struct_pointees (15, 224, -1073749624, 4706632)
#9  0xa4290a5a in rpc_ss_ndr_marsh_interp (1, 160, -1073750052, 4706632)
#10 0xa43129b4 in id_epac_data_encode (4677936, -1073749624)
#11 0xa434999b in sec_id_epac_data_encode
    (-1541936676, -1541937140, -1073749624, -1073749368, -1073749364, -107374715
6)
#12 0xa435b4b7 in pac_to_epac
    (4669480, 1, -1073747112, -1073749320, -1073747156)
#13 0xa435bab1 in sec_login_pvt_set_ext_attrs
    (4669480, 1, -1073747112, -1073747156)
#14 0xa434f7f4 in sec_login_set_extended_attrs
    (4669480, 1, -1073747112, -1073747156)
#15 0x4004ef in main () at s1.c:88

[9/1/94 public]
This is an IDL limitation.  If you want to pass data over the wire and that
data's size is determined by a null terminating character or by a num_bytes
field, then that data must be initialized to something that IDL can marshall.
Even though the server side of sec_login_set_extended_attrs() ignores the
value of the attribute (IN MOST CASES; If it turns out to be a trigger ERA, it
may not ignore it), the data must be non-garbage if it's not a fixed size
attribute type (ie: integer) that IDL can handle without dereferencing that
data.  So, you must initialize the printstring to NULL, and if you were
passing in a bytes type ERA, you would have to initialize the num byte field
to 0.  I'm changing this to a DOC bug.  (btw, since you stated 2 workarounds
that you were able to use above, this shouldn't have been an A0 in the first
place).

[09/01/94 public]
Reopened. You are probably right that this a doc problem.
But - as far as I know - it's not documented yet. Because of that
we have had the problem - it took a long time to find the workaround.

It should be documented for all parts of the tagged_union
how to initialize the component (i.e.: how to initialize a print_array).

[9/1/94 public]
Sorry about that, my fingers were working faster than my brain this morning.
I meant to change it back from cancel to open before I exited after changing
it to a doc defect, but I exited the editor too quickly and snoopy stopped
responding for about 15minutes...  Thanks for reopening it.  You're correct
that it's not documented for this particular API yet.

[10/19/94 public]
Fixed and verified.  Verified bu burati.

[10/27/94 public]
Closed bug.



CR Number                     : 11981
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : svr_example acl manager
Short Description             : Example ACL manager in src/test/security has user_obj_delegate bug
Reported Date                 : 8/31/94
Found in Baseline             : 1.1b16
Found Date                    : 8/31/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : test/security/svr_example/dacl_manager.c
Sensitivity                   : public

[8/31/94 public]
In the access control algorithm in dacl_manager.c (sample acl manager used
for tests and example code only), it erroneously falls through from the
user_obj check to the user_obj_delegate check even if the user_obj matches
the caller.  I've verified that this is only a problem in this test code
(done correctly in secd's ACL manager and DCE ACL mgr library).  Thanks to
Ron Arbo for finding this one.

[9/15/94 public]
Rajendra passed the bug to me quite a few days ago.  Updated the
responsible eng.
Also although I have put in the fix (not submitted yet) is worth
noting that there is not much utility in fixing user_obj stuff
in the example acl manager as the user_obj uuids it deals with
are always null.   In other words there is only token support for
user_obj or group_obj concepts.  I had to hack the example manager
itself to simulate verifying the fix.



CR Number                     : 11980
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_base
Short Description             : Anonymous cell, principal, group uuids need to be made public
Reported Date                 : 8/31/94
Found in Baseline             : 1.1b15
Found Date                    : 8/31/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : security/idl/sec_cred.idl
Sensitivity                   : public

[8/31/94 public]
The restriction code that was submitted hardcoded the anonymous uuids within
itself, when they should have been made public.  We need to make them public
so that apps can check to see if they're being called by an anonymous caller
(as opposed to a caller that they just don't have an ACL entry for)...
either by defining them as constants in sec_base.idl (can you do that in idl?)
or by providing a sec_cred routine that returns the uuid.

[09/01/94 public]
Only integers and strings can be IDL constants.

dced could use this ASAP.

[10/3/94 public]
This went in with some other fixes a week or two ago, but I forgot to
update this CR at the time.  Marked 'fix'.



CR Number                     : 11978
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : utils
sec_attr_util_alloc_copy()
Short Description             : sec_attr_util_alloc_copy() not handling all attributes correctly
Reported Date                 : 8/31/94
Found in Baseline             : 1.1b16
Found Date                    : 8/31/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : sec_attr_util.c
Sensitivity                   : public

[8/31/94 public]
sec_attr_util_alloc_copy() dumps core while source sec_attr has empty data,
such as empty printstring_array. Some kind of check logic need be put in.


[8/131/94 public]
If you're passing in NULL *or* garbage data, then it should core dump.
Per his excellency Richard Salz's ultimatum, no DCE shall waste time checking
for NULL and passing back errors (and you can't necessarily check for
garbage data), it should just coredump.  If you've made a programming
error then you want it to core dump so you can debug it before sending out
broken code to users.  Having an error which may get passed all over the
place before the user actually sees it is not going to help you find your
programming error.  This CR is cancelled.

[09/06/94 public]
Please, Mike, capitalize Excellency. ;-)

There is a bug here, but not quite what Ping said.  Imagine the case where
the attribute is "array of bytes" or "array of printstrings" and it's an
array of size 0.  In this case the copy routine may give bad data (look
for "fromsa - 1" or something similar), or it may set some fields to NULL
and the free() routine must know to skip those fields if the count is 0.
The full-blown checking of everything for non-NULL shouldn't be done, but
sec_attr_free() must certainly be able to free anything sec_attr_copy
created, and copy has some bugs as I just mentioned.

Go in peace.

[9/9/94 public]
Submitted.



CR Number                     : 11976
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : login
Short Description             : secd dumps core during dce_config.
Reported Date                 : 8/31/94
Found in Baseline             : 1.1
Found Date                    : 8/31/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : ./security/krb5/kdc/do_as_req.c
Sensitivity                   : public

[8/31/94 public]
Using nightly build and fix for CR 11949, secd dumps core on at 486. There
is no additional core info available. Here is the output from dce_config
and core.

S:****** Starting secd...
S:****** Check for active sec_client service...
S:****** Starting sec_client service...
login failure.
  message from login:
  
  Sorry. Password Validation Failure. - Cannot contact any KDC for
requested realm (dce / krb)
Failed to log in to DCE.

root@[sunrise]:gdb secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..
Core was generated by `secd'.
Program terminated with signal 11, Segmentation fault.
#0  0x0 in ?? ()
(gdb) b *__start
Breakpoint 1 at 0x400000
(gdb) run
Starting program: /usr/bin/secd 

Breakpoint 1, 0x400000 in __start ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0x0 in ?? ()
(gdb) where
#0  0x0 in ?? ()
(gdb) bt
#0  0x0 in ?? ()

[8/31/94 public]
Does it work on the other two platforms?  Is there any message in secd.log
after this happens?  Can you try starting secd with -v -d to see if there's
any additional info you can give us?

[8/31/94 public]
Maryann is looking at this problem currently at osf (at least for few more
hours).

[8/31/94 public]
Thanks, but the rest of us would still like to know what to expect.
Does it work on the other two platforms?

[8/31/94 public]
I'm testing the fix for this right now on HP/UX (it fixes 486 secd core
dump problem). Once this is submitted, we will have at least two platforms 
(HP and 486) working ok. Our RATs are building/testing on RIOS and will let
us know as soon as it completes.

[8/31/94 public]
Fix submitted.



CR Number                     : 11961
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : sinix
Component Name                : sec
Subcomponent Name             : secd
Short Description             : rgy_edit core dumps on SVR4 due to secd error
Reported Date                 : 8/30/94
Found in Baseline             : 1.1
Found Date                    : 8/30/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : .security/client/admin/rgy_edit/tty_pgo.c,./security/server/rsdb/rsdb_acct.c
Sensitivity                   : public

[8/30/94 public]

The rgy_edit core dumps when adding accounts to the registry during the
configuration time. The cause was eku_dec_int32() call in ek_acct_add()
routine. The passwd_version_number passed to this routine is some junk
because sec_rgy_acct_add did not received a good value from the server
side. rsdb_acct.c:rsdb_acct_add() calls create_new_account() that is
suppose to set the passwd_version_number argument to some legit value
that never happens because create_new_account() completely ignores the
passwd_version_number paramer. The question is does it make sense to set
passwd_version_number to sec_passwd_c_version_none? Where should it be
set in create_new_account()?

the stack trace on the rgy_edit side before eku_dec_int32() overwrites
on the stack is:

#0  sec_rgy_acct_add (context=0x816d8d8, login_name=0x804368c,
    key_parts=0x8044290, user_part=0x8044294, admin_part=0x80445b4,
    caller_key=0x8044620, new_key=0x804460c, new_keytype=sec_passwd_des,
    new_key_version=0x8044a38, status=0x80433e4)
    at ../../../../src/security/client/rca/acct.c:292
#1  0x806ca8a in add_new_acct (key=0x804368c, abbrev=0x8044290,
    user_part=0x8044294, admin_part=0x80445b4, my_passwd=0x8044620,
    passwd=0x804460c, new_key_type=sec_passwd_des,
    passwd_version_number=0x8044a38)
    at ../../../../../../src/security/client/admin/rgy_edit/ek_db.c:7876
#2  0x806cc88 in ek_acct_add (acct_form=0x80ff818)
    at ../../../../../../src/security/client/admin/rgy_edit/ek_db.c:7955
#3  0x806e190 in ek_do_op (op_handle=0x80ff2b8 ")")
    at ../../../../../../src/security/client/admin/rgy_edit/ek_db.c:8994
#4  0x804c90a in eif_add_acct (add_handle=0x80ff2b8 ")")
    at ../../../../../../src/security/client/admin/rgy_edit/eif_acct.c:374
#5  0x805862b in tty_do_add_acct (c=0x80476ac)
    at ../../../../../../src/security/client/admin/rgy_edit/tty_acct.c:1999
#6  0x8050a00 in tty_do_add (c=0x80476ac)
    at ../../../../../../src/security/client/admin/rgy_edit/tty.c:299
#7  0x807148d in procs_cmds (must_prompt=1,
    prompt_string=0x8082138 "rgy_edit=> ")
    at ../../../../src/security/utils/commands.c:334
#8  0x80536b5 in main (argc=2, argv=0x8047b94)
    at ../../../../../../src/security/client/admin/rgy_edit/tty.c:1880

Please note that after I set the *new_key_version to 0 after sec_rgy_acct_add
returned, core dump went away.

There is another bug in file tty_pgo.c approx line #2171:

2170          tmp_name = fullname + GLOBAL_DIR_ROOT_LEN;
2171          name = (char *) malloc((KRB_DIR_ROOT_LEN + strlen(tmp_name) +1) *
2172                                  sizeof(char));
2173          sprintf(name, "%s%s", KRB_DIR_ROOT, tmp_name);

I'd to add '+1' in malloc call to allow room for the terminating NULL.

Please let me know your feedback to the first fix.

[8/30/94 public]

In rsdb_acct.c create_new_account now reads
---------
    gen_auth_key(pname, passwd, acct, NULL, status);
    if(BAD_STATUS(status)) {
        return;
    }

    acct->threads.next   = last.threads.id;
    acct->threads.prev   = last.threads.prev;
---------
should be
---------
    gen_auth_key(pname, passwd, acct, NULL, status);
    if(BAD_STATUS(status)) {
        return;
    }
>   *passwd_version_number = acct->cur_key_version;

    acct->threads.next   = last.threads.id;
    acct->threads.prev   = last.threads.prev;
---------

This will turn out to be == sec_passwd_c_version_none + 1 == 1
but is set lower down in rsdb_auth_set_version_number

[8/31/94 public]

This is exaclty what I changed in my code. Yesterday night it finished the
build and succeeded in doing rgy_edit. However, the next stop is cdsd core dump
trying to do sec_init_thread() etc. This particular problem seems to be 
resolved by the fixes suggested. We can close this after I submit the fixes.

[9/01/94 public]
Parul, are you planning on submitting these changes?  If so, please assign
this bug to yourself.  Thanks.



CR Number                     : 11949
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Smoketest hangs after secd core dump
Reported Date                 : 8/30/94
Found in Baseline             : 1.1
Found Date                    : 8/30/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : ./security/krb5/kdc/do_as_req.c
Sensitivity                   : public

[8/30/94 public]

Not much help here. Info very limited on this problem

D:         Executing: sec_client service startup
S:****** Starting sec_client service...

	Smoketest hangs at this point
	all platforms

[8/30/94 public]
The sec client service is hanging because secd is core dumping.  This
occurs running either dced secval or sec_clientd.

(setenv SEC_CLIENT=sec_clientd & re-config)

The secd core from xdb follows:

> trace

 1 process_as_req + 0x00001750 (0x40127070, 0x40279a88, 0x40279aa8, 0)
 2 dispatch + 0x0000036c (0x40279aa0, 0x40279a88, 0x40279aa8, 0)
 3 rsec_krb5rpc_sendto_kdc + 0x00000100 (0x40192840, 0xe4, 0x40126ed0,
0x1000)
 4 op0_ssr + 0x0000021c (0x40192840, 0x40194158, 0x4027951c, 0x40194030)
 5 TMEM@libdce + 0x00147904 (0x40194158, 0, 0, 0)
 6 TMEM@libdce + 0x0010cd2c (0x401fa138, 0x7af521b0, 0x4004bc00, 0xf)

> p *($pc-16)\20i

0x000b2ec4  LDSID       (0,1),31
0x000b2ec8  MTSP        31,0
0x000b2ecc  BLE 0(0,1)
0x000b2ed0  OR  31,0,2
0x000b2ed4  LDW -32(0,30),19
0x000b2ed8  STW 28,-80(0,30)
0x000b2edc  LDW -68(0,30),1
0x000b2ee0  COMIBT,=,N  0,1,_fp_status+005c
0x000b2ee4  LDW -68(0,30),31
0x000b2ee8  LDW 8(0,31),20
0x000b2eec  COMIBT,=,N  0,20,_fp_status+002c
0x000b2ef0  LDW -68(0,30),21
0x000b2ef4  LDW 8(0,21),26
0x000b2ef8  BL  _fp_status+0008,2
0x000b2efc  ADDIL       0xffff4000,2
0x000b2f00  LDO 1940(1),1
0x000b2f04  LDSID       (0,1),31
0x000b2f08  MTSP 31,0
0x000b2f0c  BLE 0(0,1)
0x000b2f10  OR  31,0,2

> lr $a
$arg0     = 0x40037710
$arg1     = 0x4027a9ac
$arg2     = 0x401274fd
$arg3     = 0

> lr $r
$r0       = 0
$r1       = 0x1279fe0
$r2       = 0xb2ed7
$r3       = 0
$r4       = 0
$r5       = 0
$r6       = 0
$r7       = 0
$r8       = 0
$r9       = 0
$r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      = 0x40001000
$r20      = 0x177dc000
$r21      = 0x177db009
$r22      = 0x1
$r23      = 0
$r24      = 0x401274fd
$r25      = 0x4027a9ac
$r26      = 0x40037710
$r27      = 0x4002d428
$r28      = 0
$r29      = 0x401274fd
$r30      = 0x4027a760
$r31      = 0x1279fe0
$ret0     = 0
$ret1     = 0x401274fd

[8/30/94 public]
Maryann is looking into this problem at HP. Her submission associated with
the login activity fix might be causing secd to dump core.

[8/31/94 public]
Fix submitted.



CR Number                     : 11944
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_wait_until_consistent is not implemented
Reported Date                 : 8/29/94
Found in Baseline             : 1.1
Found Date                    : 8/29/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : security/client/rca/misc.c, security/server/rs/rs_master_replist.c, security/server/rs/rs_misc.c
Sensitivity                   : public

[8/29/94 public]

The sec_rgy_wait_until_consistent() subroutine is not 
implemented.  This call is used to wait until all security
replicas have been updated with information from the master
security server.

In a two machine cell, one with a master security server and
the other with a replica, I have seen instances where this call
does NOT wait for the replica to be updated.  

Using security APIs, I created a principal and account, binding
to the master security server using sec_rgy_open_update().  I
then used the sec_rgy_wait_until_consistent() to wait until all 
the updates had been propogated to the security replicas. When 
I went to create keytab entries for the account, the 
sec_key_mgmt_get_next_kvno() call returns the error "Registry 
object not found."  

All of the sec_key_mgmt... calls bind to whichever security 
server they can since they are only performing read operations.
I am assuming that call mentioned previously binds to the 
security replica when I see this problem.

I would think that the sec_rgy_wait_until_consistent routine 
would be essential for operation in a replicated security 
environment.

The only easy workaround that I can think of is to put a sleep
in the application between any updates to the registry and any
operations on those new additions to give the master time to 
propogate the new information to the security replicas.  This
workaround is not acceptable because the time needed to update
the replicas is dependent on machine type, workload, network
traffic, etc.

Also, this subroutine IS documented in the Application Development
Reference.  Customers may attempt to use this routine and get a
result similar to the one described above.

[9/22/94 public]
Submitted 9/20; doc changes forthcoming.

[9/22/94 public]
Will open separate doc bug.



CR Number                     : 11943
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : 1.1 clients configured in a
1.0.3 cell report security errrors
Reported Date                 : 8/29/94
Found in Baseline             : 1.1b16
Found Date                    : 8/29/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security files
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[8/29/94 public]

Build: BL-16
Configuration:

HPUX: DCE 1.0.3 CORE server
OSF1: DCE 1.1 client, dtsd, NTP provider
OSF1: DCE 1.1 client, dtsd
HPUX: DCE 1.0.3 client

In this configuration the 1.1 dtsd servers are reporting consistently
the following error:

(on OSF1 and HPUX)

1994-08-29-12:51:39.727-04:00I1.056 dtsd ERROR dts dtserror transport_rpc.c
1941 0xa44d0d58
Failed to determine if server is in security group: Registry server
unavailable (dce / sec)

But, I am able to access the registry using dcecp and the cell is working.

Another error I have seen says:

(ON HPUX)

root@needle> 1994-08-29-11:31:24.121-04:00I1.076 dtsd ERROR dts dtsdate
time_request.c 685 0x4019bec8
RPC call ClerkRequstTime() to remote server failed: unable to allocate
memory. (dce / sec)

I tried to see if I could make the errors happen by executing dtscp 
subcommands but could not. I am not sure what sort of information, 
I could collect, will be found useful to narrow down the problem.

[8/29/94 public]

The problem seems to be a general one, not specific to dts.  The errors
are being reported by dtsd and cdsclerk. dtsd reports them earlier.
The cell works fine for about 6 hours before the flood of errors starts 
to take momentum. The 1.1 clients start to experience problems as well
as the tests but the 1.0.3 servers are fine.

Here is a better example of the type of errors printed over and over by
the 1.1 clients:

1994-08-29-15:12:29.570-04:00I2.406 cdsclerk(15401) ERROR cds general
clerk_bind.c 627 0x004e7980
Routine sec_rgy_pgo_is_member(3sec) failed : status = 387063931.
1994-08-29-15:13:20.170-04:00I2.457 cdsclerk(15401) ERROR cds general
clerk_bind.c 627 0x004e7980
Routine sec_rgy_pgo_is_member(3sec) failed : status = 387063931.
1994-08-29-15:13:20.580-04:00I2.457 dtsd ERROR dts dtserror
dtss_service_global_set.c 692 0xa44d0d58
Failed to retrieve server binding from the namespace: Registry server
unavailable (dce / sec)
1994-08-29-15:14:07.890-04:00I2.505 cdsclerk(15401) ERROR cds general
clerk_bind.c 627 0x004e7980
Routine sec_rgy_pgo_is_member(3sec) failed : status = 387063931.
1994-08-29-15:14:55.090-04:00I2.552 cdsclerk(15401) ERROR cds general
clerk_bind.c 627 0x004e7980
Routine sec_rgy_pgo_is_member(3sec) failed : status = 387063931.
1994-08-29-15:15:43.890-04:00I2.601 cdsclerk(15401) ERROR cds general
clerk_bind.c 627 0x004e7980
Routine sec_rgy_pgo_is_member(3sec) failed : status = 387063931.
1994-08-29-15:15:43.920-04:00I2.601 dtsd ERROR dts events
logevent_v_ultrix.c 407 0xa44d8
LAN profile not found
1994-08-29-15:15:43.920-04:00I2.601 dtsd ERROR dts dtserror
dtss_service_global_set.c 354 0xa44d0d58
Can't retrieve DCE cell name from configuration DB: Registry server
unavailable (dce / sec)
1994-08-29-15:15:43.930-04:00I2.601 dtsd WARNING dts config
logevent_v_ultrix.c 269 0xa44d0d58

[09/02/94 public]

I installed BL16.3 and this is still happening.
The cell configures successfully, and it works for a while. It starts
to deteriorate over time, reporting errors like the ones already listed
in earlier entries here and making the 1.1 clients unsuable.

[09/12/94 public]
Using bl-17, I tried setting up this config:

HPUX: DCE 1.0.3 CORE server
HPUX: DCE 1.0.3 client, dtsd server
OSF1: DCE 1.1 client, dtsd server
OSF1: DCE 1.1 client, dtsd clerk

Kept getting tons of protocol mismatch errors, I think,
(didn't record this but I will attempt to recreate tomorrow). 
Anyway, decided to just keep the 1.0.3 machines as dts servers
and the 1.1s as clerks and see if the cds errors showed up
during the test runs.
Ran 4 systests for 48 hours with no major DCE failures and
no CDS problems recorded in either 1.1 svc log.  Only the
following dts WARNINGs/ERRORs:
1994-09-12-08:05:19.644-04:00I----- dtsd WARNING dts config logevent_v_ultrix.c 
269 0xa44d49ac Too few servers (0), need 1 servers
--- had a few of these ---

1994-09-10-16:25:14.469-04:00I----- dtsd ERROR dts dtsdate time_request.c 685 0x
006cb1d0 RPC call ClerkRequstTime() to remote server failed: Communications fail
ure (dce / rpc)
--- had one of these ---

As I said, I'll try again using 1.1 dtsd servers and record
what happens.

hester 09/13/94 public]
I left the cell idle and noticed now that at ~5 hours after the 48 hour
mark a number of ERROR messages started being recorded on one of the 1.1
nodes.  Similar to what MarthaD indicated above:
1994-09-12-18:54:44.072-04:00I5.719 dtsd ERROR dts dtserror dtss_service_global_set.c 478 0x7aff9198 Couldn't get remote server's principal name: Communications failure (dce / rpc)
1994-09-12-19:50:50.791-04:00I9.349 cdsclerk(10033) ERROR cds general clerk_bind.c 560 0x401c9188 Routine sec_id_parse_name(3sec) failed : status = 387063931.
1994-09-12-19:51:29.991-04:00I9.388 cdsclerk(10033) ERROR cds general clerk_bind.c 560 0x401c9188 Routine sec_id_parse_name(3sec) failed : status = 387063931.
1994-09-12-19:51:30.006-04:00I9.388 dtsd ERROR dts dtserror dtss_service_global_set.c 692 0x7aff9198 Failed to retrieve server binding from the namespace: Registry server unavailable (dce / sec)

At times, CDS seems unusable (cdscp show dir returns no info) and then it recovers.
Seems fully recovered now, but no systests running.

[9/28/94 public]

I have been running systest on DCE 1.1 clients, using BL-19, 
configured with 1.0.3 servers for about 45 hours and this 
problem has diminished in severity, however it has not 
disappeared completely.

The error messages now are localized to OSF1 DCE 1.1 clients, 
the HPUX DCE 1.1 clients work fine. The important result 
is that in spite of the error messages reported, the cell 
continues to operate and does not degrade over time.

I want to point out that the errors are printed out by dtsd.
And they are the result of having configured 1.1 and 1.0.3 
dtsds in the cell.

I have lowered the CR's severity and priority because it no
longer prevents me from running system tests and the cell is
operational regardless of the errors reported. Perhaps, those
working on the code to support the upgrade of 1.0.3 cells to 1.1
will want to take a closer look at this.

[10/20/94 public]

This problem still present in BL-23. Again, it seems to be worse
on OSF/1.

[1020/94 public]

This configuration used to run fine eventhough errors were
being reported by the 1.1 clients. It seems that the case
has worsen. The famous rpbnk system test that used to pass is
now (BL-23) failing with:

-severe--: host:thread  program:bank    pid:20929
Cannot import_next
Registry server unavailable (dce / sec)

It run successfully with BL-21.
Tjis is the same error reported by the command programs in
the same situation.

[12/13/95 public]

This has been fixed in DCE 1.2.1.

[1/25/96 public]
We are interested in this fix. Could someone provide a little more
info about the fix? There is very little detail wrt which files
were effected and what the solution was. Thanks. 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'



CR Number                     : 11942
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_login_setup_first
Short Description             : sec_clientd can't start if
creds files incomplete
Reported Date                 : 8/29/94
Found in Baseline             : 1.0.3
Found Date                    : 8/29/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : sec_login.c
Sensitivity                   : public

[8/29/94 public]

If you try to start a configured DCE client system when the registry
isn't available, the sec_clientd startup will not succeed.  But when you
subsequently try to start the client sec_clientd after the registry is up,
it fails to establish its machine credentials.

What happened in the first goround is that sec_login_setup_first() created
the dcecred_ffffffff file, but failed to delete it when sec_login_pvt_
get_ktb_tkt() failed.  On the second goround, machine_context() in
sec_clientd.c identified an existing dcecred_ffffffff file, and mistakenly
assumed a machine context could be inherited from it.

I verified this problem in 1.0.3.  But 1.1 does sec_login_setup_first()
differently, and I can't tell whether the problem is fixed.

[8/29/94 public]
Rich S just cancelled an OT (9076 I think) which was the essentially the same
as this one.  It was cancelled because dced secval (the replacement for
sec_clientd) will not attempt to perform the sec_login_setup_first() 
until secd has come up.  

Unfortunately, there are other reasons why the sec_login_setup_first() may
fail and leave the single ffffff creds file.  Therefore I think we should
leave this one open and target it towards the sec_login_setup_first() API and
not secval/sec_clientd.  

I believe rc.dce will cleanup the creds directory on each invocation so
the bad creds file should be removed on the next DCE startup, no?

[08/29/94 public]
Rob, if setup+first fails can you just purge and get the file removed?
This may be all we have time to work-around.  Or we can call it fixing
it in the docs -- "if it fails, purge to remove partial state."

[8/29/94 public]
purge in the sense of sec_login_purge_context() can't work because that
requires a valid context, which the incomplete ffff thing isn't.  

I can easily unlink() all *ffff* files from the creds directory from secval
logic.  It sort of unveils the implementation from below the sec API's but
it would do the trick.

[08/29/94 public]
"I can easily..."  Yes, but it would be wrong.  Very wrong.  Any fixes
should happen inside the sec API.

[08/29/94 public]

Ending of sec_login_setup_first now is

    if (GOOD_STATUS(st)) {
        (*lcap)->state = setup;
        (*lcap)->flags = sec_login_machine_princ;
    }

    close(dfd);
    return  GOOD_STATUS(st);

Should be

    if (GOOD_STATUS(st)) {
        (*lcap)->state = setup;
        (*lcap)->flags = sec_login_machine_princ;
    }
>   else
>       unlink(pagfile);
	
    close(dfd);
    return  GOOD_STATUS(st);

[8/31/94 public]

Sent request to dce-ot-sec for above fix, with the following
remarks:
------------------------------------------------------
sec_login_setup_first can rarely fail, most likely due
to config problems.  In any case should clean up the
creds file.  This is not a big deal, but I'd like to
put it in and clean the bug.  

Notice that in the OT, different issues got mixed
together.  The original OT report was issued on 1.0.3.

Things seem to have changed quite a bit in 1.1 and
I believe all the cases where the problem may have
appeared in 1.0.3 are basically gone (so the fix is
not as critical an issue in most case).

Then a problem with sec_clientd was added to the OT.
This seems to be a sec_clientd problem that will remain
after the fix.  It will be fixed in dced/secval and
there is already an OT on it.
-----------------------------------------------------

The sec_clientd  probably sees a validate_first failure.  This
could be due to KDC availability issues.  In any case sec_clientd
should either purge the context and later retry the setup_first -
 validate_first sequence, or should just retry later the validate_first.

After submission I plan to mark this fixed.  Any other
issues pertain to sec_clientd and dced/secval.

[9/1/94 public]

Fix submitted as described above



CR Number                     : 11925
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : intercell
Short Description             : klist dumps core after logging
successfully as cell_admin in a foreign cell.
Reported Date                 : 8/26/94
Found in Baseline             : 1.1
Found Date                    : 8/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/krb5/lib/krb/copy_creds.c
Sensitivity                   : public

[8/26/94 public]

Using latest bits from last night (available on 8/26 AM):

1. Configured single machine cells on hp and 486.
2. Ran cdscp defined cached server command on both machines.
3. Successfully performed rgy_edit cell command in both cells.
4. Successfully logged as cell_admin from both cells to the foreign cell.
5. After dce_login as cell_admin, running klist dumped core in both cells.

Here are the details:

spring : rgy_edit
Current site is: registry server at /.../hp_cell/subsys/dce/sec/master 
rgy_edit=> cell /.../486_cell
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
  Principals and Accounts have been created
rgy_edit=> quit
spring : dce_login /.../486_cell/cell_admin -dce-
Password must be changed!
spring : klist
DCE Identity Information:
        Warning: Identity information is not certified
Segmentation fault (core dumped)

ON HP/UX:
--------

>t
 0 priv_krb_util_concat_authdata@ + 0x0000011c (0x400cab10, 0, 0x7b03653c,
0x7b036538)
 1 krb5_get_cred_via_tgt@libdce + 0x000009ec (0x7b036420, 0, 0x7b030001,
0x7b030002)
 2 krb5_get_cred_from_kdc@libdce + 0x0000097c (0x40087468, 0x400892c0,
0x7b036390, 0x400892c0)
 3 krb5_get_credentials@libdce + 0x00000178 (0, 0x40087468, 0x400892c0,
0x7afa3f90)
 4 sec_priv_get_eptgt_internal@li + 0x000007f0 (0x40086b18, 0x400891b0,
0x1, 0x2)
 5 sec_priv_get_eptgt@libdce + 0x00000060 (0x40086b18, 0x400891b0, 0x1,
0x2)_cred_from_kdc (4690144, 4686552, -1073753060)
 6 sec_login_util_get_krb_ptgt@li + 0x000000c0 (0x40086b18, 0x400891b0,
0x1, 0x2)
 7 sec_krb_get_cred@libdce + 0x000002b4 (0x40086b18, 0x40089150, 0x5, 0x2)
 8 rpc__krb_get_tkt@libdce + 0x000003d8 (0x40089070, 0x5, 0x40089058,
0x400890c0)
 9 rpc__krb_bnd_set_auth@libdce + 0x00000670 (0x40089058, 0x5, 0x40086b18,
0x2)
10 rpc_binding_set_auth_info@libd + 0x00000448 (0x400bf690, 0x40089058,
0x5, 0x1)
11 rca_setup_handle@libdce + 0x000005e0 (0x40088720, 0x7b03413c,
0x7b03413c, 0)
12 rca_site_bind_nsi_cell_if@libd + 0x000001dc (0x40088720, 0x40088f48,
0x7afa7218, 0x7b03413c)
13 rca_site_bind_nsi_cell@libdce + 0x000000d0 (0x40088720, 0x40088f48,
0x7b03413c, 0)
14 rca_nsi_binding_import@libdce + 0x000001ec (0x40088720, 0x7b03413c,
0x7b0350d8, 0x7b03413c)
15 rca_site_bind@libdce + 0x0000059c (0x7b034cd0, 0x7b034c78, 0x2, 0)
16 rca_create_default_context@lib + 0x0000008c (0x7b03413c, 0x7af3ac62,
0x1, 0x7b034bf8)
17 rca_expand_default_handle@libd + 0x000000d0 (0x7b0341ac, 0x7b03413c,
0x7b034bd8, 0x7b034b84)
18 sec__id_gen_name@libdce + 0x000000bc (0, 0, 0x7b0333e0, 0x7b0333f4)
19 sec_id_gen_name@libdce + 0x00000068 (0, 0x7b0333e0, 0x7b0333f4,
0x7b033d38)
20 print_pac + 0x000000dc (0x7b0333d8, 0x7ffe6000, 0x51da, 0x7b03361c)
21 print_dce_info + 0x00000120 (0, 0, 0, 0)
22 main + 0x00000244 (0x1, 0x7b0331f8, 0, 0)
>

[8/30/94 public]
FYI - this problem is blocking dfs testing :-(

[9/1/94 public]
Now that he's back, Greg Carpenter has taken this on
(the authdata corruption itself was easily found but is a
second-order effect, and he knows the code best...)

[9/2/94 public]
Just an update, similar coredump seen with bl-16.3 - hit cdsclerk. Above
reference to dfs testing made because it can also hit dfsbind.

[9/2/94 public]

I'm pretty sure I know where the problem lies, but I'm not going
to have the fix built and tested until sometime next Tuesday.
Here's a context diff showing the fix I intend to apply to
src/security/krb5/lib/krb/copy_creds.c in case anyone else would
like to test drive it before then.

***************
*** 109,114 ****
--- 109,124 ----
        xfree(scratch);
      }
  
+ #ifdef OSF_DCE
+     /* BUGFIX applied from the krb5 beta 4 sources. */
+ 
+     if (incred->authdata) {
+       retval = krb5_copy_authdata(incred->authdata,&tempcred->authdata);
+       if (retval)
+           goto cleanticket;
+     }
+ #endif
+ 
      *outcred = tempcred;
      return 0;

[9/6/94 public]

Fix submitted.



CR Number                     : 11919
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : login activity idl change
Reported Date                 : 8/26/94
Found in Baseline             : 1.1
Found Date                    : 8/26/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : 
server/rs/rs_log_login_activity.c
          rs_login_activity.c
          rs_reserved.c
server/lm/lm_jrnl.c
          lm_login.c
krb5/kdc/do_as_req.c
         kdc_util.c
idl/rgynbase.idl
    rs_login_activity.idl
    sec_rgy_login_activity.idl
    rs_login_base.idl
server/rsdb/rsdb_policy.c
            kdb_rsdb.c
            rsdb_journal.c
            rsdb_login.c
client/rca/sec_rgy_login_activity.c
h/rsdb_jrnl.h
  rsdb_login.h
  lm_login.h
Sensitivity                   : public

[8/26/94 public]


Login activity idl changed to support a tagged_union of address types
for tracking the location of the login request.

Since password expiration is now enforced on the server(rather than
optionally on the client) an additional ERA for server principals
(and cell_admin) to be exempt from the expiration check so that servers 
(and admins who forget to change their password) don't get locked out.



CR Number                     : 11915
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_login_inq_pag doesn't
return pag
Reported Date                 : 8/26/94
Found in Baseline             : 1.1b16
Found Date                    : 8/26/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : 
	security/idl/sec_login_encode.idl
	security/utils/sec_encode.c
	security/h/sec_login_pvt.h
	security/client/login/sec_login_pvt.c
	security/client/login/sec_login.c
Sensitivity                   : public

[8/26/94 public]
the dce1.1 dfsgw add needs to use existing login context (if
there is one) this removes the need to enter the dcepassword
on the command line or as an interactive prompt, currently 
the code always performs sec_login_setup_identity so the 
sec_login_inq_pag works, but in the case where there is an
exisiting context the sequence sec_login_get_current_context
and then sec_login_inq_pag is not returning the pag but 0   
without this fix the dfsgw command will not be capable of 
providing the user to add an authentication table entry
without the use of -dceid

[8/26/94 public]
Removed dce-ot-sec from interest list because we get these mailed
automagically and we really don't need 2 copies of it for each update...

[9/16/94 public]

fix submitted; change was to move pag into stable store info.



CR Number                     : 11910
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11853
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd (priv svr)
Short Description             : Priv server not passing delegation chain to attr trigger interface
Reported Date                 : 8/26/94
Found in Baseline             : 1.1
Found Date                    : 8/26/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : rpriv_v1_1_mgrs.c,
rpriv_util.c, rpriv_attr.c
Sensitivity                   : public

[8/26/94 public]
The priv attr trigger interface has been updated to include a delegation chain
parameter, but the chain itself isn't being passed down to it correctly yet.
This isn't breaking any functional tests *yet*, but would break any app trying
to use that argument and any functional test that we will be writing to get to
code coverage goals for ERAs.  It must be fixed for DCE1.1.

[9/6/94 public]
This is dependent on 11853 which has been reopened because the datatype being
passed in the trigger interface wasn't something trigger servers can use...
Can't make the changes for this CR until fix for 11853 has been submitted.

[9/28/94 public]

fix submitted



CR Number                     : 11909
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_cred (libdce)
Short Description             : sec_cred_get_extended_attrs *must*
filter out confidential bytes attrs
Reported Date                 : 8/26/94
Found in Baseline             : 1.1
Found Date                    : 8/26/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/utils/sec_cred.c
Sensitivity                   : public

[8/26/94 public]
Because ERAs of type confidential bytes were never implemented in DCE1.1,
we must make sure that the DCE1.1 version of sec_cred_get_extended_attrs()
skips over any ERAs of that type in an EPAC so that when they are supported
in DCE1.2, it won't cause problems with application svrs running on a DCE1.1
platform.  This must be fixed for DCE1.1 and cannot affect any functional
tests, because no test can be using this type of ERA yet.



CR Number                     : 11906
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd didn't link
Reported Date                 : 8/26/94
Found in Baseline             : 1.1
Found Date                    : 8/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/server/bin/Makefile
Sensitivity                   : public

[8/26/94 public]
This is in build.log.08-25-94 on the HP (cleaned up):

c89   -g   -z -Wl,-Bimmediate,-Bnonfatal,-a,default,+b,/lib:/usr/lib     
-L/u3/devobj/sb/nb_ux/export/hp800/usr/shlib 
-L/project/dce/build/dce1.1
-snap/export/hp800/usr/shlib 
-L/usr/shlib 
-L/u3/devobj/sb/nb_ux/export/hp800/usr/lib     
-L/project/dce/build/dce1.1-snap/export/hp800/usr/lib   
-o secd.X rs_main.o  
-L../../krb5/kdc 
-L../../krb5/lib/kdb 
-L../rsdb 
-L../rrs 
-L../../utils 
-L../../audit/libaudit 
-L../lm 
-L../rs 
-lrs -lkrb5kdc -lkdb -lrsdb -lrrs -lsecutil -laudit -ldce -lrss  -llm  
/bin/ld: Unsatisfied symbols:
   sec_key_mgmt_set_key (code)
*** Error code 1

[8/26/94 public]
I am trying to locate why this is failing.

[8/26/94 public]
I don't know why it failed, but the following fixes it.

diff /net/allergy/disk4/sb/mdf/shared/src/security/server/bin/Makefile /net/allergy/disk3/lastgoodbuild/src/security/server/bin/Makefile
82,83c82,84
< LDIRS = -L../../krb5/kdc -L../../krb5/lib/kdb -L../rsdb \
<                 -L../rrs -L../../utils -L../../audit/libaudit -L../lm -L../rs
---
> # Libraries the programs need to link with
>   LDIRS =             -L../../krb5/kdc -L../../krb5/lib/kdb -L../rsdb -L../rrs -L../../utils -L../../audit/libaudit -L../lm
>   EXE_LIBS =          -lkrb5kdc -lkdb -lrsdb -lrrs -lsecutil -laudit -ldce
85c86
< EXE_LIBS = -lrs -lkrb5kdc -lkdb -lrsdb -lrrs -lsecutil -laudit
---
> # note that -lrs comes before ${LIBS}, but -lrss comes both before and after ${LIBS}
87c88
< secd_LIBS = ${LDIRS} ${EXE_LIBS} -lrss -llm -ldce ${${TARGET_MACHINE}_LIBS}
---
> secd_LIBS = ${LDIRS} -L../rs -lrs ${EXE_LIBS} -lrss ${${TARGET_MACHINE}_LIBS} -llm
89c90
< sec_create_db_LIBS =${LDIRS}  ${EXE_LIBS} -llm -ldce ${${TARGET_MACHINE}_LIBS}
---
> sec_create_db_LIBS = ${LDIRS} -L../rs -lrsdb -lrs  ${EXE_LIBS} ${${TARGET_MACHINE}_LIBS} -llm



CR Number                     : 11868
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rs_prop_attr_delete
Short Description             : rs_prop_attr_delete functionality missing
Reported Date                 : 8/24/94
Found in Baseline             : 1.1b16
Found Date                    : 8/24/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/server/rs/rs_prop_attr.c
Sensitivity                   : public

[8/24/94 public]

IBM Austin noted that the rs_prop_attr_delete function has not been
implemented yet.  As they pointed out, the synchronization process
for replicas is incomplete and incorrect without this.

[9/7/94 public]
Michael submitted the fixes for this last week.



CR Number                     : 11861
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_authn, dfsbind, dce_krpc.ext
Short Description             : support for EPAC's in kernel is broken
Reported Date                 : 8/24/94
Found in Baseline             : 1.1
Found Date                    : 8/24/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/utils/sec_authn.c, security/helper/auth_helper.c, rpc/kruntime/sec_authn_krpc.c
Sensitivity                   : public

[8/24/94 public]
A simple "cd /:" using the nightly build of 8/23 will panic your
machine consistently.  Mike Burati's looking at this...

[8/24/94 public]
There's a bug in the new sec_authn.c that was submitted last Thursday,
that appears to only affect DFS because it only affects generating the pickled
creds that dfsbind wants to pass into the kernel, not the user space side of
things that just creates a credential handle at this point.  I'm building the
fix now...

[8/24/94 public]
Submitted fixes, marked 'fix'.



CR Number                     : 11857
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : delegation
Short Description             : Add delegation audit points
Reported Date                 : 8/24/94
Found in Baseline             : 1.1b16
Found Date                    : 8/24/94
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : 
 ./security/h/sec_aud_evts.h
 ./security/server/rs/rpriv.c
 ./security/server/rs/rpriv_util.h
 ./security/server/rs/rpriv_util.c
 ./security/server/rs/rpriv_v1_1_mgrs.c
Sensitivity                   : public

[8/24/94 public]
Add delegation audit points in rpriv_become_delegate(),
rpriv_become_impersonator() and rpriv_get_ptgt().  Rpriv_get_eptgt()
can't be added (actually the code is there, just being commented out)
because it will cause secd hang (looping).  The code is done, will
submit it this afternoon.

[8/24/94 public]
Files submitted.  Marked fix.



CR Number                     : 11853
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Interface needs to change.
Reported Date                 : 8/24/94
Found in Baseline             : 1.1
Found Date                    : 8/24/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : see below
Sensitivity                   : public

[8/24/94 public]
To ensure that the official DCE 1.1 version of priv_attr_trig.idl
defines the protocol the way we expect it to work for a while.

1. Add the "delegation chain" parameter to the priv_attr_trig_query
call in priv_attr_trig.idl:

    void priv_attr_trig_query (
        [in]        handle_t                        h,
        [in]        sec_id_foreign_t                principal,
        [in]        sec_bytes_t                     *dlg_chain, <== NEW
        [in, out]   priv_attr_trig_cursor_t         *cursor,
        [in]        unsigned32                      num_attr_keys,
        [in]        unsigned32                      space_avail,
        [in, size_is(num_attr_keys)]
                    sec_attr_t                      attr_keys[],
        [out]       unsigned32                      *num_returned,
        [out, size_is(space_avail), length_is(*num_returned)]
                    sec_attr_t                      attrs[],
        [out, size_is(space_avail), length_is(*num_returned)]
                        priv_attr_trig_timeval_sec_t    time_to_live[],
        [out]       unsigned32                      *num_left,
        [out]       error_status_t                  *st
    );


2. In rpriv_attr_get_effective, add the delegation chain to
the signature:

void rpriv_attr_get_effective
(
    sec_attr_component_name_t   principal_name,         /* [in]  */
    sec_id_epac_data_t          *client_epac,           /* [in]  */
    sec_bytes_t                 *dlg_chain,             /* [in]  */ <= NEW
    unsigned32                  num_attr_keys,          /* [in]  */
    sec_attr_t                  attr_keys[],            /* [in]  */
    boolean32                   invoke_trigger,         /* [in]  */
    rpc_auth_identity_handle_t  (*get_auth_ident)(),    /* [in]  */
    unsigned32                  *num_returned,          /* [out] */
    sec_attr_t                  **attrs,                /* [out] */
    error_status_t              *st_p                   /* [out] */
)

Pass the dlg_chain through to the priv_attr_trig_query call.

3. In every call to rpriv_attr_get_effective  (currently only
in rpriv_util.c/rpriv_util_verify_local_attrs) declare a
sec_bytes_t, set the bytes length to 0 and pass it by reference.

[9/6/94 public]]]

Comment from Greg Carpenter...
  
  I don't think the dlg_chain should be a (sec_bytes_t).  That
  would be fine if this were an internal security interface, but
  it's not; it's a public API.  If we use a (sec_bytes_t), we'll
  have to specify how those bytes are encoded and provide a public
  API routine to decode them.
  
  Rather than add still more stuff, I think the type of the
  parameter should be changed to be an array of (sec_id_foreign_t).
  E.G., 
  
     [in]    unsigned32           num_delegates,
     [in, size_is(num_delegates)]
             sec_id_foreign_t     dlg_chain[],
  
  Sorry about that ...
  
    -greg

[9/28/94 public]

fix submitted



CR Number                     : 11851
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : encoding of kdc flags is backwards.
Reported Date                 : 8/24/94
Found in Baseline             : 1.0
Found Date                    : 8/24/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/krb5/lib/mvr/krb5-manual-glue.c
Sensitivity                   : public

[8/24/94 public]

The encoding of KDC flags used by DCE is *backwards* (bit-reversed) from
the standard (both RFC1510 and the AES).

Fortunately, we don't use any of these flags in the core DCE, so just
fixing this shouldn't cause any compat headaches (and will relieve *other*
compat headaches..).

[8/26/94 public]

fix submitted.



CR Number                     : 11810
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 11444, 10141
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : sample audit filters
Reported Date                 : 8/22/94
Found in Baseline             : 1.1
Found Date                    : 8/22/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : admin_gd/security/security/15_audit_tasks.gpsml
Sensitivity                   : public

[8/22/94 public]

This email from Shyh-Wei should end up somewhere in our docs....

 From luan@almaden.ibm.com Fri Jul 29 20:49:28 1994
 Subject: Proposed default audit filters

Greetings!

Upon Robert's request, I am sending the following initial filters as
a proposed default set for audit_config use in dce_config.

(There is no "standard" as to what should be audited.  For example,
the Orange Book only specifies what events should be "auditable" but
not what events should be "audited" for a C2 system.  This is always
a trade-off between performance/storage requirements and security
needs.)

The following suggested default filters catch events attempting to
change the TCB state/data, events failing to query the TCB state/data
(somebody is trying to see what is not supposed to be seen (denial), or
there is something wrong within TCB (failure)), and failed/denied
authentication events.

After a cell stablizes, modification events will hopefully be much less
frequent than query events, and failed/denied query events will likely
be rare.  Storage and performance impacts would then be reduced.

The TCB includes secd, dtsd, and auditd.

dcecp lines: (hope I got the dcecp syntax right :-)

audf create world -at {\
{dce_sec_modify dce_sec_server \
dce_dts_time_provider dce_dts_sync dce_dts_mgt_modify \
dce_audit_filter_modify} \
success log}

audf create world -at {\
{dce_sec_modify dce_sec_server \
dce_dts_time_provider dce_dts_sync dce_dts_mgt_modify \
dce_audit_filter_modify} \
{failure denial} all}

audf create world -at { \
dce_sec_authent dce_sec_query \
dce_dts_mgt_query \
dce_audit_filter_query} \
{failure denial} all}

Hope this helps,

Shyh-Wei

[08/23/94 public]
Assigned to writer Willie Williams (security and audit
component owner).

[08/30/94 public]
Per Hal Lichtin's request, reassigned to Rico Cruz at IBM.

[9/12/94 public]
Having just duped CR 10141 to this one, I added 10141 to th related CRs
list.  Both CRs should be reviewed before verifying this CR.

[9/12/94 public]
Inserted a space before "From" in the email header above because our POP
server that delivers email was treating it as a separate msg and the second
half of this CR always got lost in the mail...

[9/12/94 public]
Added a section on default filters in the Admin Guide.

[10/27/94 public]
Closed bug.



CR Number                     : 11804
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : remove scope from sec_rgy_pgo_get_by_name.3sec
Reported Date                 : 8/22/94
Found in Baseline             : 1.0.3
Found Date                    : 8/22/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_rgy_pgo_get_by_name.3sec
Sensitivity                   : public

[8/22/94 public]

remove mention of scope from pgo_name parm description

[8/29/94 public]
Fixed and verified.  Verified by ahop.

[09/01/94 public]
Closed bug.



CR Number                     : 11789
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : <krb5/base-defs.h> princ_size macro is incorrect
Reported Date                 : 8/19/94
Found in Baseline             : 1.1
Found Date                    : 8/19/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/krb5/include/krb5/base-defs.h
Sensitivity                   : public

[8/19/94 public]

There are a number of macros in <krb5/base-defs.h> which were added to
allow us to back-port some code from krb5 beta3 to the krb5-beta 1.5 base
which is in the DCE source tree.

One of these macros is incorrectly defined.  I hope nobody's using it (I
haven't checked yet), but some code I'm back-porting *does* use it, so this
should be fixed.

[8/26/94 public]

fix submitted.



CR Number                     : 11782
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : libksec.a
Short Description             : undefined symbol in dce_krpc.ext
Reported Date                 : 8/19/94
Found in Baseline             : 1.1
Found Date                    : 8/19/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/utils/sec_encode.c
Sensitivity                   : public

[8/19/94 public]
The RAT's asked me to file this because I helped them track
it down.  The symbol idl_es_inq_encoding_id is undefined in 
the dce_krpc.ext kernel extension.  It appears there is a 
newly introduced kernel reference to this symbol coming from 
libksec.a, sec_encode.o (sec_encode_get_encoding_type()).  The 
fix may be as simple as surrounding sec_encode_get_encoding_type() 
with #ifndef KERNEL, but it's better for the security folks to 
decide.  The kernel extension needs to be loaded to test since
symbols in HP kernel extensions don't get resolved until load time.

[8/19/94 public]
Since Greg's on his way out the door on vacation and I've got the setup to
test DFS anyway, I'm reassigning this to myself.

[8/19/94 public]
Fix submitted (with verbal approval from Ron since I needed to get this in
fast and he knew exactly what the problem was and what I needed to change to
fix it), marked 'fix'.



CR Number                     : 11775
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : password management
Short Description             : Out parameters in rsec_pwd_mgmt_str_chk/gen_pwd should be reference ptrs
Reported Date                 : 8/19/94
Found in Baseline             : 1.1b14
Found Date                    : 8/19/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : security/idl/rsec_pwd_mgmt.idl,security/server/rs/rs_pwd_mgmt.c,security/server/pwd_mgmt/pwd_strength/pwd_strengthd.c,security/client/pwd_mgmt/sec_pwd_mgmt.c
Sensitivity                   : public

[08/19/94 public]

Out parameter (str_info_out * gen_info_out) of rsec_pwd_mgmt_str_chk()
and rsec_pwd_mgmt_gen_pwd() should be reference pointers instead of
full pointers.

[08/31/94 public]

Fix submitted.



CR Number                     : 11774
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000,i486
S/W Ref Platform              : aix,osf1
Component Name                : sec
Subcomponent Name             : /libdce
Short Description             : Undefined symbol _sec_id_pac_set_encode
Reported Date                 : 8/19/94
Found in Baseline             : 1.1
Found Date                    : 8/19/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : /src/security/client/login/sec_login_pvt.c
Sensitivity                   : public

[8/19/94 public]

libdce failed to build on at486,rs6000


libdce_2.o: Undefined symbol "_sec_id_pac_set_encode" referenced

collect: /project/dce/build/dce1.1-snap/tools/at386/macho/real-ld returned 1 exit status
*** Error code 1

[8/19/94 public]
Fix submitted by Greg.



CR Number                     : 11765
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : Remove gssdce_extract_creds_from_cred
Reported Date                 : 8/18/94
Found in Baseline             : 1.1b14
Found Date                    : 8/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : gssapi.c, gssapi.h
Sensitivity                   : public

[8/18/94 public]
The public API routine gssdce_extract_creds_from_cred should be obsoleted, as:
i) Its function has never been particularly clear.
ii) All possible functions it might serve can be achieved via other routines.
iii) It will be difficult to document the conditions under which it currently
     works.
iv) If it were kept, its signature would need to change.
v) It has a silly name :-)

No existing code invokes this routine, so its removal will not impact any other component.

[8/23/94 public]
Routine removed.



CR Number                     : 11763
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : Add support for Kerbero RFC protocol ID
Reported Date                 : 8/18/94
Found in Baseline             : 1.1b14
Found Date                    : 8/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : several
Sensitivity                   : public

[8/18/94 public]
The GSSAPI's Kerberos mechanism type (GSSDCE_C_OID_KRBV5_DES) currently
implements the Internet Draft spec for GSSAPI over Kerberos.  The latest
revision of this Internet Draft has reserved a new protocol ID to signify
the eventual RFC version of this protocol.  The DCE GSSAPI should be updated
to accept either the Internet Draft or the RFC protocol IDs.

[8/23/94 public]
Added private OID constants to identify both Internet Draft and RFC versions
of the protocol.  Either will be accepted on incoming messages; Outgoing
messages will use Internet Draft OID unless the preprocessor symbol
USE_RFC_PROTOCOL_ID is defined when compiling the gssapi sources.  Outgoing
reply messages will only use the RFC OID if this symbol is defined, and if
the initiating message also carried the RFC ID.



CR Number                     : 11762
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : generate_sequence_no can overwrite memory
Reported Date                 : 8/18/94
Found in Baseline             : 1.1b14
Found Date                    : 8/18/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : gssapi.c
Sensitivity                   : public

[8/18/94 public]
The routine gss_generate_seq() incorrectly generates a random byte string
of length sizeof(OM_uint32) to fill in a SEQUENCE_NO field.  If OM_uint32
is larger than SEQUENCE_NO on a given platform, gss_generate_seq will
overwrite memory.

[8/23/94 public]
Fixed by replacing sizeof(OM_uint32) with sizeof(SEQUENCE_NO).  Also
change the signature of gss_generate_seq to expect (SEQUENCE_NO *)
arguments, and give it a prototype.



CR Number                     : 11759
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rsdb
Short Description             : missing parameter to call to dce_svc_printf
Reported Date                 : 8/18/94
Found in Baseline             : 1.1
Found Date                    : 8/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/server/rsdb/rsdb_log.c
Sensitivity                   : public

[8/18/94 public]

The function rsdb_log_open_logfile() in rsdb_log.c makes a call to 
dce_svc_printf() that I believe needs another parameter.  I get prototype 
mismatch errors when compiling with ANSI C.  The following is the diff I
made to fix the compiler error:

diff rsdb_log.c /project/dce/build/dce1.1/src/security/server/rsdb/rsdb_log.c
172d171
<                        sec_sys_errno_text_only,



CR Number                     : 11758
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rs
Short Description             : possibly missing parameter
Reported Date                 : 8/18/94
Found in Baseline             : 1.1
Found Date                    : 8/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : security/server/rs/rs_log.c
Sensitivity                   : public

[8/18/94 public]

The function rs_log_truncate() in rs_log.c makes a call to dce_svc_printf()
that I believe needs another parameter.  I get prototype mismatch errors
when compiling with ANSI C.  The following is the diff I made to fix the
compiler error:

diff rs_log.c /project/dce/build/dce1.1/src/security/server/rs/rs_log.c
971d970
<                            sec_sys_errno_text_only,

[ sekhar 08/19/94 public ]
Fix submitted.



CR Number                     : 11757
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rsdb
Short Description             : need to dereference pointer
Reported Date                 : 8/18/94
Found in Baseline             : 1.1
Found Date                    : 8/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : security/server/rsdb/rsdb_login.c
Sensitivity                   : public

[8/18/94 public]

The function rsdb_update_login_data() in rsdb_login.c needs a '*'
before the 'status' variable.  The following is the diff:

diff rsdb_login.c /project/dce/build/dce1.1/src/security/server/rsdb/rsdb_login.c
417c417
<     *status = princ_to_login_name(&searchfor, &login_name);
---
>     status = princ_to_login_name(&searchfor, &login_name);

[ sekhar 08/18/94 public ]

And the line following the above line 

   if (BAD_STATUS(&status))
      
should be
  
   if (BAD_STATUS(status))

I caught these while doing SVC work and have fixed it
and will submit with my changes soon.

[ sekhar 08/19/94 public ]
Fix submitted.



CR Number                     : 11756
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : lm
Short Description             : need to derefernce pointer
Reported Date                 : 8/18/94
Found in Baseline             : 1.1
Found Date                    : 8/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : security/server/lm/lm_login.c
Sensitivity                   : public

[8/18/94 public]

The function lm_update_login_info() in lm_login.c needs a '*'
before the 'status' variable.  The following is the diff:

diff lm_login.c /project/dce/build/dce1.1/src/security/server/lm/lm_login.c
179c179
<     *status = princ_to_login_name(&searchfor, &login_name);
---
>     status = princ_to_login_name(&searchfor, &login_name);

[8/31/94 public]
This was apparently fixed as part of the fix for CR11919.



CR Number                     : 11751
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : ACL Manger for SVC Interface
Reported Date                 : 8/18/94
Found in Baseline             : 1.1b14
Found Date                    : 8/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : see_end_of_ot
Sensitivity                   : public

[8/18/94 public]

This is new functionality not a bug.

This is a description of the secd ACL manager for the remote
SVC interface.

The SVCIF ACL manager in the security is implemented using
Policy ACL Manager. One new permission bit 's' ( 's' stands for
serviceability ) - has been added for the Policy ACL manager.

To retrieve Serviceability information , only the read permssion
is required. 
To modify serviceablity information the 's' permission is required.

By default, only cell_admin can modify serviceability information.
So by default the Policy ACL is created as follows :

# acl_edit /.:/sec/policy
sec_acl_edit> l

# SEC_ACL for /.:/sec/policy:
# Default cell = /.../cell_svc
unauthenticated:r----
user:cell_admin:rcmas
group:acct-admin:rcma-
other_obj:r----
any_other:r----

The routing for a security master can be changed via
/.:/subsys/dce/sec/master . For e.g.
dcecp> log modify /.:/subsys/dce/sec/sec/master \
           -change NOTICE:TEXTFILE:/tmp/notice.log

The routing for a slave can be changed via 
/.:/subsys/dce/sec/<slave_name> (i.e. the name
with which the slave was configured ). 

There is one new error code sec_svc_not_authorized 
which is returned when there is no authorization to perform
the serviceability operation.

[ sekhar 08/19/94 public ]

This is fixed locally.

[ sekhar 8/31/94 public ]
Fixed. I submitted the changes on 8/25/94 . 

List of files changed:

security/server/rs/rs_svc_acl.c **** NEW FILE ****
security/server/rs/rs_main.c
security/server/rs/rs.c
security/server/rs/Makefile
security/server/rsdb/rsdb_acl.c
security/h/rsdb_acl.h
security/idl/sec.sams



CR Number                     : 11743
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : bad malloc in krb5-glue.c
Reported Date                 : 8/18/94
Found in Baseline             : 1.1
Found Date                    : 8/18/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : krb5-glue.c
Sensitivity                   : public

[8/18/94 public]

The function asn1_field2krb5_data_ptr(m) contains a malloc of incorrect
size.  The line:

    ret = (krb5_data *) malloc(sizeof(krb5_data *));

should be:

    ret = (krb5_data *) malloc(sizeof(*ret));

Without this fix, the call to asn1_field2krb5_data() will overwrite
the allocated memory causing undefined behavior.

[8/18/94 public]
This will be fixed in 1.1. It is currently not blocking anyone, thus
lowering the priority to 1.

[8/25/94 public]
Fixed via malloc(sizeof(krb5_data))



CR Number                     : 11717
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : delegation test
Short Description             : OSF's changes were overwritten.
Reported Date                 : 8/16/94
Found in Baseline             : 1.1b14
Found Date                    : 8/16/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : 
 ./test/security/api/moretests/dlg_client.c
 ./test/security/api/moretests/dlg_intermediary.c
Sensitivity                   : public

[8/16/94 public]
OSF made some changes to delegation test which was overwritten by the code
drop.  Merged has been done, now they are reviewd by OSF.  Bruce is going
to do the submission after he reviews them.



CR Number                     : 11714
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dfsbind, libdce
Short Description             : New dfsbind/libdce fnclty to strip ERAs/RSTRs from DFS EPACs
Reported Date                 : 8/15/94
Found in Baseline             : 1.1
Found Date                    : 8/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/helper/auth_helper.c, security/utils/sec_encode.c
Sensitivity                   : public

[8/15/94 public]
New functionality called by dfsbind when decoding auth info message in user
space for KRPC.  Before it writes the encoded EPAC set into the kernel, it
decodes it and each EPAC and strips out any ERAs and Opt/Req/Deleg Restrictions
that might be in there (they're useless to DFS and we don't want to clutter
up the kernel with them, which could put us over the 4/8K shared mem buff limit
or just waste the kernel's time cleaning them up later...

[8/16/94 public]
Submitted new code, marked 'fix'.



CR Number                     : 11712
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd core dumps due to a bad pointer in SVC message.
Reported Date                 : 8/15/94
Found in Baseline             : 1.1b14
Found Date                    : 8/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/rs/rs_ns.c
Sensitivity                   : public

[8/15/94 public]

During dce_config if NOTICE_VERBOSE is turned on, secd core dumps
while trying to configure cds.

The secd core dump is caused by use of an illegal pointer while
trying to log a SVC message with severity level NOTICE_VERBOSE.

The code fragment from file rs_ns.c , func read_group_name() is :

    dce_svc_printf(SEC_RS_NS_PROF_ELT_INQ_SUCC_MSG,
                   (char *) (* group_name), 
                   (char *) (* profile_name));  <==== illegal pointer

[ sekhar 8/17/94 public ]

Fixed. 

NOTE: This bug can show up even if NOTICE_VERBOSE is not
      turned on since an attempt will be made to dereference
      a bad pointer even though the message is not logged .



CR Number                     : 11702
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : test
Short Description             : pwd_strength-tc Test Needs
Makefile Enhancement
Reported Date                 : 8/15/94
Found in Baseline             : 1.1
Found Date                    : 8/15/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : test/functional/security/ts/client/pwd_mgmt/pwd_strength/Makefile
Sensitivity                   : public

[8/15/94 public]
The link for the pwd_strength-tc test fails if the build host provides
its own pthreads library for pthreads symbols.  The makefile file must
be modified so LIBS includes ${${TARGET_MACHINE}_LIBS} or the build
rule for the target is  modified as:
pwd_strength-tc_LIBS = ${LIBS} ${${TARGET_MACHINE}_LIBS}



CR Number                     : 11700
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : audit "deadly embrace - secd fails to restart
Reported Date                 : 8/15/94
Found in Baseline             : 1.1b14
Found Date                    : 8/15/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : 
../security/server/rs/rs_main.c
Sensitivity                   : public

[8/15/94 public]
Secd core dumped after running dcecp functional tests for about three 
hours. I believe that it was caused by CR 11583, for which mdf@apollo.hp.com
just submitted a fix.

Trying to restart secd, it coredumps fairly quickly. The trace is below.

Looking at the trace, this may very well be a svc or an audit bug, but
I'll let the security folk make that decision.

I found this on an HP CDS/SEC server in a 4 machine cell. There was a
security replica running at the time.

Child died due to: segmentation violation
Procedures:     87
Files: 13
>t
 0 dce_svc__debug@libdce + 0x0000004c (0, 0x4, 0x1, 0x40022914)
 1 dce_aud_start_with_pac (event = 275, pac = 0x40313840, address =   00000000, options = 0, outcome = 4294967295, ard = 0x401e06f4, status = 0x401e0710)    [/project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c: 304]
 2 dce_aud_start_with_name (event = 275, client = 0x40175c18, address =   00000000, options = 0, outcome = 4294967295, ard = 0x401e06f4, status = 0x401e0710)    [/project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c: 365]
 3 dce_aud_start (event = 275, binding = 0x40175ca0, options = 0, outcome = 4294967295, ard = 0x401e06f4, stp = 0x401e0710)    [/project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c: 176]
 4 rs_login_get_info + 0x0000006c (0x40175ca0, 0x401de850, 0x401df454, 0x401df470)
 5 op0_ssr + 0x00000264 (0x40175ca0, 0x401db230, 0x401de51c, 0x4010da60)
 6 rpc__cn_call_executor@libdce + 0x000007c8 (0x401db230, 0, 0, 0)
 7 cthread_call_executor@libdce + 0x000002d4 (0x401dc5e0, 0x7af4d118, 0x40045140, 0xb)
 8 cma__thread_base@libdce + 0x0000021c (0x40045140, 0, 0, 0)
 9 cma__thread_start1@libdce + 0x0000004c (0x40045140, 0, 0, 0)
10 cma__thread_start0@libdce + 0x00000008 (0x40045140, 0, 0, 0)
11 dce_svc__debug@libdce + 0x0000004c (0, 0, 0, 0)

[8/15/94 public]
Changed to audit after weisz@vnet.ibm.com pointed out that this stack trace
is very similar to CR 11429. I'll dup this one when we confirm that this
is the same thing. CC'ed interested HP folks.

FYI I did nothing with the DCEAUDITFILTERON env variable, I was just running
my cell normally. No audit daemons were running.

[ sekhar 8/15/94 public ]

First of all, I am not sure why 11583 would have cause a core dump.
Did you get the OT number right ? 

As far as this particular problem goes, just some more info.

I hit the same problem on Saturday in our local build 
environment ( and some of my own changes to the code ). 

But one thing I found was that this problem disappeared when 
I moved the dce_aud_open() call in security/server/rs/rs_main.c back to
where it was before the most recent submit ( now 
dce_aud_open() is called after server bindings have been obtained).

[8/15/94 public]

Note that although sekhar's suggestion does make this core dump go away -
the audit calls in secd have to be made AFTER secd has registered - otherwise
you will get a different core dump when audit filtering is turned on.  This
is not the right workaround.  We need to understand why we're getting this
dump and fix the real problem.

[8/15/94 public]
Sekhar, yes I did get the CR wrong, and for the life of me I can't seem to 
find the right one. mdf did a submit (or a request to submit) this morning
for a core dump in one of the sec_rgy_schema_mumble... routines. It seems
to be the cause of the original core dump.

On to the current problem... 

Talking to John Bowe, svc component owner, he quickly noticed that at call 0
on the trace, dce_svc__debug() is getting called with a NULL svc handle.
Robert also noticed that this call is at the bottom of the trace too with
all parameters zeroed. I don't know exactly what this means, but if someone
who is more accustomed to looking at xdb traces can shed some light...

[8/15/94 public]
I promise, I won't update this anymore today. dce_aud_open() needs to 
be called before any audit events are logged (ie. using dce_aud_start()).
Setting a breakpoint in dce_aud_open(), secd dies with this problem 
before it ever does a dce_aud_open(). Pointed back at security to
see why secd is calling dce_aud_start() before it ever makes the call to
dce_aud_open().

[8/16/94 public]

I was able to recreate this problem by doing a sec_admin stop of secd,
then attempting to restart secd.

[08/23/94 public]
If the only probably with the out-of-order calls is that hte SVC handle
is never initialized, audit code can just use DCE_SVC_DEFINE_HANDLE
instead of dce_svc_register.

[08/23/94 public]
Thanks for the tip.  Unfortunately, this is not the only problem...
An endless stream of undescribable calamities is just waiting behind
it.  First one has to open the trail, before starting writing to it.

[08/23/94 public]

This problem only manifests itself when secd is restarted and other
DCE daemons/servers (noteably CDS) are already running.  In trying to
narrow the problem further, it appears that the problem only occurs
during restart if the current process level has credentials from
dce_login.  When simply killing secd and restarting as root without
having dce_logged in, secd can be successfully restarted.

From the testing done, it appears that while attempting to restart
via cell_admin, name service calls are causing CDS to invoke audit 
code points with secd's rs layer before secd has opened its audit trail.
I suspect this is a pure timing problem as the audit trail is not
opened until after secd has registered itself, and the cdsclerk may be 
sneaking in a security call which results in an auditable event before 
the trail is opened. 

The suspected call sequence which invokes this core dump is:

  (cds) get_rpc_handle()
  (cds) get_secure_handle()
  (sec) sec_login_import_context()
  (sec) rs_login_get_info()
  (aud) dce_aud_start... 

Security is planning on working around this problem by opening a dummy 
audit trail (in /tmp) when secd is first started. Once secd's server 
bindings have been established, we close the dummy trail and open the 
actual security audit trail.  This is a fairly hacked workaround, IMO as 
we're actually just blowing any interim audit records away until secd 
has had a chance to open the audit trail.  If you have better suggestions
for working around this problem, please let us know.

This appears to be more of an architectural problem with auditing as the 
dc_aud_start*() calls should check for a valid audit trail descriptor as
part of a general sanity check for out of sequence audit library calls.   
Therefore this defect is being reassigned to aud.

[08/25/94 public]
dce_aud_open in rs_main.c, was located after the call rs_ns_server_register_start_task,
which probably was causing the CDS calls to secd, which therefore were out of order.
Thanks to Sue K. from HP, who worked long hours to prove that indeed this was the case,
and it seems it works nicely for now.
If you desire a sanity check be performed in dce_aud_start for a valid audit trail being
opened (tradeoff with performance, since dce_aud_open is done once, for the lifetime
of secd, while dce_aud_start is called at every codepoint) please open a separate CR.

[08/25/94 public]

Fix submitted.



CR Number                     : 11687
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : sec_login failed with internal error
Reported Date                 : 8/15/94
Found in Baseline             : 1.1b14
Found Date                    : 8/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : security/client/login/sec_login_pvt.c, security/idl/sec.sams
Sensitivity                   : public

[8/15/94 public]

Three test client applications running on HP-UX failed with a sec_login
internal error running the rpc.sec.2 tests.  The clients all failed
at the same time, with the same error message after the test had been
running for 90 minutes.  The OSF/1 test clients continued to run. 

message:

internal error in sec_login (dce / sec)
maintain id(23077): Couldn't validate identity

Build: NB0812

HPUX: secd, cdsd, dtsd
OSF1: client, sec replica, dtsd 
OSF1: client, ntp provider, dtsd

[8/16/94 public]

Can you reproduce this for me but turn the debugging on? You can
run the rpc.sec.2 with the -d flag. This will tell me what the
error status is.

[8/18/94 public]

Here's the relevant part of the debug output: 

                Error(8813) validating login context...checking error code...don
e.

                Error code(8813): 387064052
                Error Message(8813): internal error in sec_login (dce / sec)
NOTICE(8813): JUST GOT ERROR 0: code: 387064052 count: 1 time: Thu Aug 18 14:02:
31 1994 string: internal error in sec_login (dce / sec)
Hi from rpcsec2_rep_gen: called from code:  0...
Cli: 8 RUNNING Host: brandy O/S: HP-UX Time: Thu Aug 18 14:02:31 1994 Protcl: nc
adg_ip_udp Calls: 170 Pass: 170 Fail: 0 Min: 0 sec 0 nsec Max: 0 sec 0 nsec Elap
sed: 0 sec 0 nsec Avg: 0.000000000 sec id_refr: 48 last: Thu Aug 18 13:59:58 199
4
Client(8): ERRORS ENCOUNTERED
Client(8):   ERROR 0: code: 387064052 count: 1 time: Thu Aug 18 14:02:31 1994 st
ring: internal error in sec_login (dce / sec)
maintain id(8813): Couldn't validate identity(Thu Aug 18 14:02:31 1994).
Hi from rpcsec2_rep_gen: handling signal:  -2...
Cli: 8 DIED Host: brandy O/S: HP-UX Time: Thu Aug 18 14:02:31 1994 Protcl: ncadg
_ip_udp Calls: 170 Pass: 170 Fail: 0 Min: 0 sec 0 nsec Max: 0 sec 0 nsec Elapsed
: 0 sec 0 nsec Avg: 0.000000000 sec id_refr: 48 last: Thu Aug 18 13:59:58 1994
Client(8): ERRORS ENCOUNTERED
Client(8):   ERROR 0: code: 387064052 count: 1 time: Thu Aug 18 14:02:31 1994 st
ring: internal error in sec_login (dce / sec)
Client(8): Starting thread cancels at Thu Aug 18 14:02:31 1994

Client(8):    Main thread...

[ sekhar 8/30/94 public ]

Just more status. Don't know yet what the exact problem is.

I have rebuilt libdce (after adding debugging code) . But I don't
know how to run the rpc.sec.2 test. I did install (using dcetest_config)
the "rpc" test suite and tried to run the test case dcerpsec from 
the tet_scen file but I got some errors. 

So could someone please mail me instructions on how to run the test ? 
Once I receive these, I will attempt to reproduce this problem here.


[ 9/2/94 public ]

After runnning the test locally here with my instrumented debugging 
code to get more information , in every case I got the following message:

1994-09-01-23:51:53.988+00:00I----- PID#17803 DEBUG1 sec syscall ? 0 0x400148d8
Newfile ( /opt/dcelocal/var/security/creds/dcecred_458bcebf ) open failed. Errno
 = 24

That is errno 24 ( decimal ) which is EMFILE from open() system call.

I checked and verified that at least in the file sec_login_pvt.c 
the files are being correctly closed.

Can someone please check the test code to make sure that files 
are being closed ?

[ petero 9/2/94 public ]

The only place in the rpc.sec.2 test code where an open() is being performed 
is in the client setup of the sync files (rpc.sec.2_cmain.c).  The file is 
opened and closed in sequence.

[ sekhar 9/2/94 public ]

The bug (or at least one bug) is in the function 
sec_login_pvt_get_trusted_preauth() in file sec_login_pvt.c . Within this
function creat() is called but the file descriptor is never freed.

[ sekhar 9/7/94 public ]

Fixed. 

In my comments dated 9/2/94, in the line 

     "function creat() is called but the file descriptor is 
       never freed."

I meant closed() not freed.

Verify by running rpc.sec.2 test and making sure that 
sec_login_s_internal_error is no longer obtained.

[ petero 9/14/94 public ]

I've been running the tests for almost 24 hours now.  It would have
shown up on the HP clients long before this.  Closed.



CR Number                     : 11684
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krpc extension
Short Description             : unresolved symbols
Reported Date                 : 8/15/94
Found in Baseline             : 1.1
Found Date                    : 8/15/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/utils/restrictions.c
Sensitivity                   : public

[8/15/94 public]

[ /file/libafs at 06:50 (AM) Monday ]
makepath libafs/. && cd libafs &&  exec make MAKEFILE_PASS=BASIC     build_all
xlc -c       -D_BSD -DAFS_DEBUG -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_ALL_SOURCE -DAFS_AIX32_ENV -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/file/libafs -I/project/dce/build/dce1.1-snap/src/file/libafs   -I/u1/devobj/sb/nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/cfgafs.c
xlc -c       -DAFS_DEBUG -DKERNEL -D_KERNEL -D_ALL_SOURCE -DAFS_AIX32_ENV -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/file/libafs -I/project/dce/build/dce1.1-snap/src/file/libafs   -I/u1/devobj/sb/nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/dfscorecfg.c
xlc -c       -DAFS_DEBUG -DKERNEL -D_KERNEL -D_ALL_SOURCE -DAFS_AIX32_ENV -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/file/libafs -I/project/dce/build/dce1.1-snap/src/file/libafs   -I/u1/devobj/sb/nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/config.c
xlc           -L/u1/devobj/sb/nb_rios/export/rios/usr/lib     -L/project/dce/build/dce1.1-snap/export/rios/usr/lib  -o cfgdfs.X cfgafs.o  -lafssys -lcfg -lodm  
mv cfgdfs.X cfgdfs
rm -f ./dfscore.exp
cp /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/dfscore.exp .
rm -f ./extras.exp
cp /project/dce/build/dce1.1-snap/src/file/export/RIOS/extras.exp .
rm -f ./export.exp
cp /project/dce/build/dce1.1-snap/src/file/export/RIOS/extras.exp .
rm -f ./export.exp
cp /project/dce/build/dce1.1-snap/src/file/export/RIOS/export.exp .
rm -f ./afs.exp
cp /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/afs.exp .
ld -o dfscore.ext -H8 -edfs_core_config  -bexport:dfscore.exp -bexport:afs.exp  -bI:/lib/kernex.exp  -bI:extras.exp -bI:/lib/syscalls.exp  -bI:export.exp -bloadmap:dfscore.ext.ldmap `genpath -L../RIOS `  -L/u1/devobj/sb/nb_rios/export/rios/usr/lib     -L/project/dce/build/dce1.1-snap/export/rios/usr/lib dfscorecfg.o -lvolreg -lvolume -lkxcred -lkdfskutil -lkosi  -lkicl -laixexport -lxvnode -lagfs -lktkc -lktkm  -laggr -lkolddacl -lufsops -lkdacl -lkdacllfs -lktpq -lkzlc -lkbomb -lkafsutil -lcsys -lsys
0706-221 WARNING:  Import version of 'uprintf' replaced by local definition.
0706-222 WARNING:  Import version of 'brkpoint' replaced by import definition.
rm -f  dfscore.exp
rm -f extras.exp
rm -f export.exp
rm -f afs.exp
rm -f ./dfscmfx.exp
cp /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/dfscmfx.exp .
rm -f ./dfscore.exp
cp /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/dfscore.exp .
rm -f ./extras.exp
cp /project/dce/build/dce1.1-snap/src/file/export/RIOS/extras.exp .
rm -f ./export.exp
cp /project/dce/build/dce1.1-snap/src/file/export/RIOS/export.exp .
rm -f ./afs.exp
cp /project/dce/build/dce1.1-snap/src/file/libafs/RIOS/afs.exp .
ld -o dfscmfx.ext -H8 -eafs_config -bI:/lib/kernex.exp  -bexport:dfscmfx.exp  -bI:extras.exp -bI:/lib/syscalls.exp  -bI:export.exp -bI:dfscore.exp -bI:afs.exp -bloadmap:dfscmfx.ext.ldmap `genpath -L../RIOS `  -L/u1/devobj/sb/nb_rios/export/rios/usr/lib     -L/project/dce/build/dce1.1-snap/export/rios/usr/lib config.o -lpx -lcm -lkfldb -lhost -lktkset  -lkcommondata -lkafs4srv -lkafs4clt  -lkrepcli -lkdfsncs -lknck -lkidl -lkdes  -lksec -lcsys -lsys
0706-222 WARNING:  Import version of 'brkpoint' replaced by import definition.
0706-221 WARNING:  Import version of 'setgroups' replaced by local definition.
0706-222 WARNING:  Import version of 'uprintf' replaced by import definition.
0706-317 ERROR: Unresolved or undefined symbols detected:
		 Symbols in error (followed by references) are
		 dumped to the load map.
		 The -bloadmap:<filename> option will create a load map.
.malloc
*** Error code 8
`build_all' not remade because of errors.
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1

[8/15/94 public]
This looks like a merge problem in src/security/utils/restrictions.c.
Looks like at least some of Mike Burati's submit for the KRPC changes
(1.1.2.2) got overwritten with the drop of this file on Friday.  Here's 
the bdiff output: 


< 1.1.2.3
> 1.1.2.2
11,13c11,13
<  * Revision 1.1.2.3  1994/08/12  17:37:53  mdf
<  * 	Hewlett Packard Security Drop
<  * 	[1994/08/12  14:15:59  mdf]
---
>  * Revision 1.1.2.2  1994/08/09  17:32:45  burati
>  * 	DFS/EPAC/KRPC/dfsbind changes
>  * 	[1994/08/08  21:58:58  burati]
15,16c15,17
<  * Revision /main/cuti_dlg/7  1994/08/09  18:50 UTC  cuti
<  * 	Fix sec_id_any_other_rstr_in()
---
>  * Revision 1.1.2.1  1994/08/04  16:14:58  mdf
>  * 	Hewlett Packard Security Code Drop
>  * 	[1994/07/28  17:16:55  mdf]
20a22,24
>  * Revision /main/ODESSA_2/2  1994/07/27  21:19 UTC  cuti
>  * 	 Merge sec_cred_get_authz_session_info()
>  * 
45c49
< 
---
> #include <sec_cred_internal.h>
83c87
< 	if (rstrs->restrictions[i].entry_info.entry_type == sec_rstr_e_type_any_other) {
---
> 	if (rstrs->restrictions->entry_info.entry_type == sec_rstr_e_type_any_other) {
272c276
<     match = (boolean32 *)malloc(sizeof(boolean32) * rs1->num_restrictions);
---
>     match = (boolean32 *)MALLOC(sizeof(boolean32) * rs1->num_restrictions);
287a292
>                 FREE(match);
290a296
>             FREE(match);
300a307
>                 FREE(match);
308a316
>             FREE(match);
320a329
>                     FREE(match);
323a333
>                 FREE(match);
333a344
>                     FREE(match);
341a353
>                 FREE(match);
522a535
>             FREE(match);
532a546
>             FREE(match);
543c557
< 
---
>     FREE(match);
546a561
> #ifndef KERNEL
620c635
< 
---
> #endif /* KERNEL */

[8/15/94 public]
This affects all platforms trying to build DFS, not just RIOS.  Sue will be
resubmitting my changes merged correctly with hers soon.

[8/16/94 public]
File submitted.  Marked fix.



CR Number                     : 11678
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd (rpriv_attr)
Short Description             : rpriv attr lookup busted and READ lock held too long
Reported Date                 : 8/12/94
Found in Baseline             : 1.1
Found Date                    : 8/12/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : server/rs/rpriv_attr.c
Sensitivity                   : public

[8/12/94 public]
While testing DFS/KRPC/dfsbind changes, could no longer run modified dce_login
(that adds attributes to the user's account and then requests them in the EPAC)
without crashing secd in rpriv_attr_get_effective().

It turns out that the new code for processing generic triggers was incorrect,
but happened to work if you only requested 1 attribute (I was requesting 3).
I've fixed the bug and on ahop's request have moved the END_READ call in that
routine up to the end of rsdb usage so the dbase read lock wouldn't be held
throughout trigger callout processing.  Submit will happen real soon now.



CR Number                     : 11672
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : schema catalog cores secd
Reported Date                 : 8/12/94
Found in Baseline             : 1.1b14
Found Date                    : 8/12/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : rs_attr_schema.c
Sensitivity                   : public

[8/12/94 public]
I'm using the nightly build started 8/11/94 on an HP.

  dcecp> login cell_admin -p -dce-
  dcecp> schema catalog /.:/sec/xattrschema
  Error: connection request rejected

secd has died.  Found a core file in /opt/dcelocal/core:

>t 5
 0 rpc_ss_ndr_marsh_struct@libdce + 0x00000008 (hp-ux export stub)
 1 rpc_ss_build_bounds_list@libdc + 0x000004e8 (0x2b, 0x4030c760, 0, 0x4000e2ac)
 2 etext + 0x0049fbd0 (Address not found (UE302)

[8/12/94 public]
There is a bug in rs_attr_schema_scan that could cause secd to crash
retrieving the last set of entries in the schema.

The diff to fix this crash in security/server/rs/rs_attr_schema.c is:

# diff -c rs_attr_schema.c rs_attr_schema.c.fix
*** rs_attr_schema.c    Fri Aug 12 13:37:46 1994
--- rs_attr_schema.c.fix   Fri Aug 12 17:35:59 1994
***************
*** 704,714 ****
            *object_name_p, attr_schema_mgr_type, FALSE,
            &null_client_ids, st_p)) {
  
!           for((*num_read) = 0; STATUS_OK(st_p) && (*num_read) < num_to_read; 
                (*num_read)++) {
                rsdb_attr_sch_get_next(schema_name, rpc_ss_allocate,
                    cursor, &schema_entries[(*num_read)], 
                    &num_sch_entries_left, st_p);
            }
        }
      } END_READ
--- 704,719 ----
            *object_name_p, attr_schema_mgr_type, FALSE,
            &null_client_ids, st_p)) {
  
!           for((*num_read) = 0; (*num_read) < num_to_read; 
                (*num_read)++) {
                rsdb_attr_sch_get_next(schema_name, rpc_ss_allocate,
                    cursor, &schema_entries[(*num_read)], 
                    &num_sch_entries_left, st_p);
+ 
+               /* if lookup fails, break to avoid incrementing (*num_read) */
+               if(BAD_STATUS(st_p)) {
+                   break;
+               }
            }
        }
      } END_READ

[8/12/94 public]
I just spoke with Anne, (thanks for fixing this so quickly!).  Her hopes on
this were that Michael would apply this monday in the next drop.  I've
assigned this to him, if not update this CR and we'll apply it here.
I'd like to see this in soon, so whatever we can do to help.

[8/16/94 public]
Fix was just submitted.



CR Number                     : 11657
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : pwd_strengthd
Short Description             : pwd_strengthd crashes coming up
Reported Date                 : 8/11/94
Found in Baseline             : 1.1b14
Found Date                    : 8/11/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/pwd_mgmt/pwd_strengthd/pwd_strengthd.c
Sensitivity                   : public

[8/11/94 public]

pwd_strengthd crashes when starting up. The workaround is to run it in
the foreground (-d option).

I believe it has something to do with the way it is built because it
doesn't crash when built in another build environment here (non-ODE).

[08/23/94 public]

Fixed in HP submission (from mdf)



CR Number                     : 11652
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : the attr_update functional should be removed from rgy_edit pgo commands for backward compatibility
Reported Date                 : 8/11/94
Found in Baseline             : 1.1b8
Found Date                    : 8/11/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b118
Affected File(s)              : in src/security/client/admin/rgy_edit
 Makefile, eif.c, eif.h, eif_attr_schema.c, eif_attr_schema.h, eif_def.c, eif_def.h,
eif_pgo.c, eif_pgo.h, ek_db.c, ek_db.h, ek_types.h, ek_util.c, ek_util.h, tty.c, 
tty_attr_schema.c, tty_attr_schema.h, tty_conf.c, tty_conf.h, tty_pgo.c
Sensitivity                   : public

[8/11/94 public]
The attr update functionality that was "temporarily" added to rgy_edit
should be removed so that customer scripts using rgy_edit pgo commands
won't be broken by this (now unnecessary) feature in rgy_edit.

[9/1/94 public]
HP believes that this should be fixed in the mainline because the 
temporary ERA support added addtional prompts to rgy_edt.  If we don't 
remove these, it could potentially cause alot of folks already using
DCE to have to rewrite/modify existing scripts.  Therefore, we have
bumped the priority of this defect to 1.

[9/9/94 public]
Files submitted for mob.  Marked fix.



CR Number                     : 11634
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : pwd_strengthd
Short Description             : Don't check cache if pwd_val_type is 2
Reported Date                 : 8/10/94
Found in Baseline             : 1.1b14
Found Date                    : 8/10/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/pwd_mgmt/pwd_strength/pwd_strengthd.c
Sensitivity                   : public

[8/10/94 public]

If user's pwd_val_type ERA is 2 (USER_CAN_SELECT), then pwd_strengthd
should not check the generated password cache to see if the user's
selected password matches the one generated. By having an ERA of
USER_CAN_SELECT, the user has the right to select their own password,
which also means they have the right to override a generated password
and use their own.

This fixes the bug which occurs if a user changes their password with
a generated password and then changes it again with a password they selected
within 30 minutes. Since the generated password remains in the cache for 
30 minutes (configurable), the second password change fails because it 
thought you had used a generated password and the match failed. It
shouldn't care, unless your policy requires you to use generated passwords.

[08/23/94 public]

Fixed in HP submission (from mdf).



CR Number                     : 11631
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : /security/helper
Short Description             : Cannot build security/helper on 486
Reported Date                 : 8/10/94
Found in Baseline             : 1.1
Found Date                    : 8/10/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/Makefile
Sensitivity                   : public

[8/10/94 public]

[ /security/helper at 22:21 (PM) Tuesday ]
makepath helper/. && cd helper &&  exec make MAKEFILE_PASS=THIRD     build_all
/project/dce/build/dce1.1-snap/tools/at386/macho/gcc -B/project/dce/build/dce1.1-snap/tools/at386/macho/  -c    -D_SHARED_LIBRARIES  rpc_helper.h: No such file or directory
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1

[8/10/94 public]
This directory should never be built when NO_DFS is define, but always has
been for some unknown reason.  It just happened to work up until now, but
should not...  I've submitted a fixed security/Makefile which will ignore
the security/helper directory if NO_DFS is defined.



CR Number                     : 11628
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref, app_gd
Short Description             : add generic dce_attr_sch calls
Reported Date                 : 8/9/94
Found in Baseline             : 1.0.3
Found Date                    : 8/9/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : new dce_attr_sch calls 
in app_ref/man3dce and additions to app_gd/security/4.5_era.gpsml
Sensitivity                   : public

[8/9/94 public]

add new generic attribute calls to app_gd and app_ref

[10/19/94 public]
Fixed and verified.  Verified by hanfei.

[9/7/94 public]

The reference pages are actually in the man3dce section of the reference
manual, not man3sec, so I corrected the files field above.  Also, note that
this is documentation for the "The generic attr schema interface" defined
in src/dce/utils/attr/dce_attr_sch.idl (per the dup CR 11404).
(And While I was at it I upped the Priority/Severity to B1 as this is new
functionality that needed documentation.)

[10/27/94 public]
Closed bug.



CR Number                     : 11623
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit cell fails
Reported Date                 : 8/9/94
Found in Baseline             : 1.1b14
Found Date                    : 8/8/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b17
Affected File(s)              : client/rca/priv.c, dce_config
Sensitivity                   : public

[8/9/94 public]

(Actually this was found in baseline 14.1)

In a 2-cell configuration where each cell has its core services 
and gdad running on an HP platform, after restarting gdad to
get unauthenticated access to work, with both cells registered 
in DNS, the rgy_edit cell command in each cell gives the error

(rgy_edit) Incomplete cell add - invalid credential handle (dce / sec)

The command was executed as follows (in this case from the cell
/.../meadows.qadce.osf.org to the cell /.../woodlands.qadce.osf.org) :

rgy_edit=> cell /.../woodlands.qadce.osf.org
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   <-dce->
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: <-dce->
Enter expiration date [yy/mm/dd or 'none']: (none) 
?(rgy_edit) Incomplete cell add - invalid credential handle (dce / sec)

[8/9/94 public]

Additional note: I tried shutting dce down and restarting
it, so that it wouldn't be running in it's initial state
(with dced -b). The rgy_edit cell command reported the
same error after the restart in both cells.

[8/9/94 public]

Tried using the alternative form, "dcecp account create".
This failed too. (Do I have the syntax wrong? I haven't
tried this before. I didn't try it on both cells since
it didn't work on the first one).

From cell woodlands, as cell_admin, tried the command
from within dcecp:

account create /.../meadows.qadce.osf.org -org none -group none
 -password '-dce-'

This returned "Error: Registry server unavailable"

"echo $_s(sec)" returned {} afterwards

"account show" succeeded in listing accounts

"registry show -replica" then showed status as "enabled"

repeated account create command with _s(sec) set to local
registry, and this failed with same error

[8/10/94 public]

Just wanted to correct a reporting error which I made in
the previous entry. The dcecp command used specified the
argument as /.../meadows.qadce.osf.org/cell_admin (I left
off the principal in the description above, sorry.)

[8/10/94 public]

I replicated this last night. Got exactly the same message and have
mnever seen it before during intercell configuration. This morning I
installed baseline 14 and did not see the problem.

[8/10/94 public]

Does jd's note above mean that it's happening in current baselevel
and not in the previous one?  ie. BL14 is the older one and it doesn't
happen there?

[8/10/94 public]
Yes, it is correct. I also asked Rick to test the BL14 in his environment
and he just informed me that it works in BL14 as jd has pointed out
earlier. The BL-14 consists of code snap of 8/3 evening. Thus, it looks
like the submission which happened on 8/4 broke the intercell (again).

[08/10/94 public]
Can you use "cdscp define cached server" in place of DNS for the short term?
This works (up here at least...)

[8/15/94 public]
Thanks for the suggestion. However, "cdscp define cached server" did not 
solve our problem with the rgy_edit cell command. Using BL 14.2, I 
performed the following steps:

	-install and configure the same two cells as previously from 
	 scratch
	-edit the pe_site file on each core server to include the two
	 lines of binding information that were in the other's pe_site file
	-execute "cdscp define cached server <clearinghouse> tower <cn address>
	 on each core server
	-execute "rgy_edit cell" in one of the cells

This failed in the same way as reported- with the invalid credential handle
error.

Then I executed this same sequence of steps using BL14.0, and the rgy_edit 
cell command worked. However, I encountered errors trying to use
hierarchical cells. 

So I reinstalled BL14.0 and used DNS in place of the "cdscp define cached 
server" command. With this configuration, both rgy_edit cell and the
hierarchical cell commands worked as expected.

[8/15/94 public]
The actual error when rgy_edit cell command fails is the following:

rgy_edit=> cell /.../486_cell
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
?(rgy_edit) Incomplete cell add - invalid credential handle (dce / sec)
rgy_edit=> quit

[8/16/94 public]
The error I see from cds....

The two cells /.../dugas an hp, /.../john a 486.

On each cell each cell I ran cdscp define cached server giving the string
binding and host name for the other cell.

On each cell I edited /opt/dcelocal/etc/security/pe_site entering the
information from the other cell's pe_site file.

From each cell unauthenticated show dir of the other cell's root directory
works. Authenticated show dir fails.

As cell_admin from /.../john

$ cdscp show dir /.../dugas 

                        SHOW
                   DIRECTORY   /.../dugas
                          AT   1994-08-16-10:40:14
global principal name before /.../dugas/hosts/vanilla/cds-server
global principal name after  (null)
authn 0, login_context 569118
1994-08-16-10:40:15.694-04:00I----- cdsclerk(14367) ERROR cds general clerk_bind.c 501 0x004dad88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.
global principal name before /.../dugas/hosts/vanilla/cds-server
global principal name after  (null)
authn 0, login_context 569118
1994-08-16-10:40:15.784-04:00I----- cdsclerk(14367) ERROR cds general clerk_bind.c 501 0x004dad88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.
Error on entity: /.../dugas
Requested operation would result in lost connectivity to root directoryFunction: dnsEnumAttr

As cell_admin from /.../dugas

$ cdscp show dir /.../john  

                        SHOW
                   DIRECTORY   /.../john
                          AT   1994-08-16-10:37:25
global principal name before /.../john/hosts/balder/cds-server
global principal name after  
authn 0, login_context 4018a030
1994-08-16-10:37:30.167-04:00I----- cdsclerk(23901) ERROR cds general clerk_bind.c 501 0x4002e820
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.
global principal name before /.../john/hosts/balder/cds-server
global principal name after  
authn 0, login_context 4018a030
1994-08-16-10:37:30.307-04:00I----- cdsclerk(23901) ERROR cds general clerk_bind.c 501 0x4002e820
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.
Error on entity: /.../john
Requested operation would result in lost connectivity to root directoryFunction: dnsEnumAttr


The 

global principal name before /.../john/hosts/balder/cds-server
global principal name after  

strings are from some instrumentation I checked into directory/cds/clerk_bind.c
to track CR11566. It only gets emitted when rpc_binding_set_auth_info
has failed and it puts out the principal name going into the call and comming
out. The principal name is obtained from rpc_mgmt_inq_server_princ_name. The 
only other time we have seen it output since checking it in was when secd 
disappeared. Both times the principal going in looked correct and comming out 
it was empty. Is this normal on rpc_binding_set_auth_info failure? Are
11566 and this ot related. 11566 is currently assigned to cds but I'm inclined
to give it to security unless someone can tell me what else to look for
from clerk_bind.

[8/16/94 public]
Ignore the empty principal name comment above. The set_auth call is failing
and the before principal name is apparently ok but I'm printing out the
after after the string being printed is free'd. I'll fix the instrumentation
and leave the ot where it is for now.

[8/16/94 public]
Yes, the binding set auth info *should* fail until you have intercell auth
set up (ie: until the cell command has worked).  The security client binding
code explicitly tells CDS to run unauthenticated when it's looking up bindings
to RGY's (to avoid circular dependencies) via rpc_ns_set_authn(false), BUT!!!
Greg Carpenter believes he was seeing CDS fail with unauth messages even
though auth should have been shut off.  I'll see where he is with that one...

[8/24/94 public]
Rajendra suggested that we try the test again with BL16. I did, using
DNS and the pe_site file edit, and stopping/restarting gdad. The failure
now is back to an earlier error message rather than the invalid credential
handle error:

rgy_edit=> cell /.../lakes.qadce.osf.org
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
?(rgy_edit) Incomplete cell add - Registry server unavailable (Registry Edit Kernel)
 (dce / sad)
rgy_edit=>

[8/24/94 public]
Right, but it's essentially the same problem -- rpc WAY failing.

[8/25/94 public]

I started to look at this to see what the situation was with dcecp.
I edited the pe_site. After doing this was able to aquire unauthenticated 
access to the foreign cell to do catalog and show operations on pgo and 
account information. When performing the registry connect with:

registry connect /.../terrapin_cell.osf.org -forg none -fgroup none \
      -facct cell_admin -facctpwd -dce- -mypwd -dce- -org none -group none

I also got the Registry server unavailable error.

The process had 
        opened foreign cell unauth
        aquired foreign prop 
        setup identity on foreign cell 
        validate identity on foreign cell
        failed on opening the cell auth.

After the failure I am now unable to access the foreign cell unauth. In
other words I can no longer do catalog and show commands.

[8/25/94 public]
Submitted Changed to dce_config to register rpriv v1.1 
interface in cell-profile too.

[8/25/94 public]
Saw another problem along the way (core dump in priv compat code);
will open OT if necessary.

[9/14/94 public]
This thing doesn't seem to want to die. Rick fadden opened 12007 basically
stateing that teh rgy_edit cell command doesn't workbetween two hps. Ihave tested
intercell several times during the past few days between an hp and a 486 but
not hp to hp. I check this morning and rick was correct. Its a bit different
than before though. I set up the dns data base brought up gdad and checked
unauthenticated access to the other cell. It worked. I then ran the rgy_edit
cell command. It hung forever. At least I waited about 15 or 20 minutes. No
message it just hung after asking all of its questions. I sigterm'd it and
edited the pe_site file. The rgy_edit cell command then worked. I only tried
once and only thought dns. I will tray again in the morning and do it through
define cache server.

[9/14/94 public]
The bug causing the original report was fixed; if intercell config now
fails with different symptoms (only certain machines, and hanging rather
than taking an error), it's time for a new OT.  As always, reports of hangs
should include a traceback, and DEBUG_SEC=3 traces are helpful in case of
potential problems contacting remote registry sites.



CR Number                     : 11616
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : attr lookup
Short Description             : sec_rgy_attr_lookup_by_id and lookup_no_expand return an incorrect num_left
Reported Date                 : 8/9/94
Found in Baseline             : 1.1b8
Found Date                    : 8/9/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : rsdb_attr.c
Sensitivity                   : public

[8/9/94 public]
The rsdb_attr_lookup_by_uuid routine doesn't yet calculate the
total number of entries for an initial cursor.  This means that
all subsequent "number of entries left" parameters returned
are inaccurate.  It's important to fix this since the "num_left"
parameter is used by callers to determine whether another iteration
of the lookup is required.

[8/22/94 public ]
Submission is pending DRB approval.

[8/22/94 public ]
Submission has been made.



CR Number                     : 11611
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : attr utils
Short Description             : sec_attr_util_alloc_copy needs an allocator argument passed in
Reported Date                 : 8/9/94
Found in Baseline             : 1.1b8
Found Date                    : 8/9/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : sec_attr_util.c, sec_attr_util.idl
Sensitivity                   : public

[8/9/94 public]
Now that the idl compiler has been fixed to handle the passing of
a function pointer, the "allocator" argument to sec_attr_util_alloc_copy
must be uncommented so that callers of this routine can choose
rpc_ss_allocate (or any other allocator).

[8/16/94 public ]
fix was submitted.



CR Number                     : 11610
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Missing check for allocator
Reported Date                 : 8/9/94
Found in Baseline             : 1.1
Found Date                    : 8/9/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/rsdb/rsdb_attr.c
Sensitivity                   : public

[8/9/94 public]

If allocator is defined, then don't call the sec_attr_util_sch_ent_free_ptrs()
routine, which uses free.

[8/16/94 public]
fix was submitted



CR Number                     : 11609
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rsdb
Short Description             : FULLWORD_SIZE not correctly defined
Reported Date                 : 8/8/94
Found in Baseline             : 1.1
Found Date                    : 8/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : blanced_trees.c
Sensitivity                   : public

[8/8/94 public]

The definition of FULLWORD_SIZE has changed in the most recent sec drop
from: 

    #define FULLWORD_SIZE sizeof(long)     /* Must be a power of 2 */

to:

    #define FULLWORD_SIZE 4     /* Must be a power of 2 */

This should be defined as sizeof(long) inorder to work on 64 bit systems.

[8/8/94 public]

All changes made for OT 8651 have been lost in this most recent version
of balanced_trees.c .

[8/11/94 public]
Lost merge has been put back.



CR Number                     : 11608
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : "name service unavailable" message
Reported Date                 : 8/8/94
Found in Baseline             : 1.1
Found Date                    : 8/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/rs/rs_ns.c
Sensitivity                   : public

[8/8/94 public]

During configuration secd prints the following message :

1994-08-08-14:26:03.020-04:00I----- secd ERROR sec rs_ns rs_ns.c 1197
0x4004ac60
name service unavailable

The message will appear from secd until cdsd has come up properly.

This was caused by the SVC changes.

But this message should be logged as a NOTICE_VERBOSE not as
ERROR . This is consistent with the pre-SVC world.

In the pre-SVC world, the message would not have been logged
unless secd was started with the -v option .  Now the message
should not be logged unless NOTICE_VERBOSE messages are being
logged.

[ sekhar 8/8/94 public ]

Rob, can you please keep this OT and dup 11599 to this
since this contains more info on the fix ?

[ sekhar 8/12/94 public ]

Fixed by code drop done today by mdf .



CR Number                     : 11601
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : auth krpc
Short Description             : Submit auth KRPC and dfsbind changes
Reported Date                 : 8/8/94
Found in Baseline             : 1.1
Found Date                    : 8/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : lots, see below
Sensitivity                   : public

[8/8/94 public]
Submit the following files with latent support for Ron's DFS changes,
in KRPC extensions and dfsbind.

./file/libafs/HPUX/Makefile
./rpc/idl/klib/Makefile
./rpc/idl/lib/pickling.c
./rpc/kruntime/HP800/machdep.mk
./rpc/kruntime/exc_handling.h
./rpc/kruntime/sec_authn_krpc.c
./rpc/runtime/krbdgsrv.c
./security/Makefile
./security/h/sec_cred_internal.h
./security/helper/auth_helper.c
./security/idl/sec_authn.idl
./security/kutils/HP800/sec_kmalloc.c
./security/kutils/Makefile
./security/kutils/RIOS/sec_kmalloc.c
./security/utils/restrictions.c
./security/utils/sec_authn.c
./security/utils/sec_authnp.h
./security/utils/sec_cred.c
./security/utils/sec_cred_internal.c
./security/utils/sec_encode.c
./security/utils/seca_dg.c



CR Number                     : 11600
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Should pass rpc_ss_allocate
Reported Date                 : 8/8/94
Found in Baseline             : 1.1b14
Found Date                    : 8/8/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : security/server/rs/rs_attr.c
Sensitivity                   : public

[8/8/94 public]

315c320
<                       (char *)attr_name, rpc_ss_allocate, &sch_entry, st_p);
---
>                       (char *)attr_name, NULL, &sch_entry, st_p);
329a335
>     sec_attr_util_sch_ent_free_ptrs(&sch_entry);

[8/8/94 public]
Fix pending approval.



CR Number                     : 11591
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : sec_salvage_db is modified to handle DCE1.1 to DCE 1.0.3 rgy database backward conversion
Reported Date                 : 8/8/94
Found in Baseline             : 1.1b14
Found Date                    : 8/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : 
	.../security/h/sec_svg_prt.h
	.../security/server/sec_salvage_db/sec_svg_db.c
	.../security/server/sec_salvage_db/sec_svg_prt.c
	.../security/server/sec_salvage_db/sec_svg_rec.c
Sensitivity                   : public

[8/8/94 public]

sec_salvage_db should be moved to nosupport.  Don't forget to modify the
upper level Makefile to remove the sec_salvage_db diredctory.

[8/9/94 public]
Reassigned to HP at their request.

[9/6/94 public]
I am cancelling this OT because it turns out that sec_salvage_db is needed
for the migration work.  This will be put in the unintegrated tree instead.

[9/6/94 public]
I jumped the gun.... moving this back to "open" pending the decision by
the DCE 1.1 PM team on how to handle the salvager.

[9/15/94 public]

Sec_salvage_db is modified to support rgy database backward (DCE 1.1 to
DCE 1.0.3 ) conversion.  So it should maintain in the support tree.

A new sec_salvage_db option -dce1.0.3 is provided.  When invoking, 
sec_salvage_db would skip DCE 1.1 specific data and would put 
in correct DCE 1.0.3 version numbers so the ascii print files can be
reconstructed under DCE 1.0.3 bits.  For any aggregate PGODIR type
added in DCE 1.1, DIR is taken as the default to be generated for DCE 1.0.3
and the associated PGO information is stored in the file info.prt.  
User can manually merge them back to the assocaited .prt file if desired.

The sequence to use this tool for backward conversion are :
	- stop DCE 1.1 
	- do sec_salvage_db -print < ... > -dce1.0.3
	- cleanup /opt/dcelocal/var/security/rgy_data/*
		  /opt/dcelocal/var/security/rcache/*
		  /opt/dcelocal/var/security/creds/*
		  /opt/dcelocal/var/rpc/rpcdep.dat
	- reload DCE 1.0.3 bits
	- do sec_salvage_db -reconstruct < ... >
	- restart DCE 1.0.3



CR Number                     : 11583
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd can't be started remotely.
Reported Date                 : 8/7/94
Found in Baseline             : 1.1
Found Date                    : 8/7/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/rs/rs_proc.c
Sensitivity                   : public

[8/7/94 public]

secd can't be started remotely because it does not close
the stdin, stdout and stderr (causing remsh/rsh to hang).

The fix is similar to that which was used by rpcd 
i.e. secd only when run in the background will :

a. close stdin, stdout and stderr.
b. then set stdout and stderr to a log file.

The log file name is constructed by concatenating 
dcelocal_path with /var/security/secd.log which 
(currently) yields /opt/dcelocal/var/security/secd.log .

Since all message are logged by SVC calls, the only time
secd.log is used is when secd is run in the background 
and when the routing is STDOUT or STDERR . For e.g. if secd
is started as :

   secd -w FATAL:STDERR:-- -w ERROR:STDERR:-- -w NOTICE:/tmp/log

all FATAL and ERROR messages are logged in 
/opt/dcelocal/var/security/secd.log and NOTICE messages in /tmp/log .

Since most daemons will be doing this same thing, SVC 
documentation should make this clear .

Priority 1 because I want to fix this for 1.1 . In fact I just
did locally.

[ sekhar 8/12/94 public ]

Mostly fixed in the code drop done by mdf. remsh of 
secd should work.

But there is another small fix fixed locally - but did 
not make it into this drop . When that fix is submitted,
I will mark this fixed.

[ sekhar 8/19/94 public ]

Fixed. The above 'small' fix was submitted to OSF tree on 8/16/94 .



CR Number                     : 11581
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : incorrect handling of user input in locksmith mode
Reported Date                 : 8/7/94
Found in Baseline             : 1.1
Found Date                    : 8/7/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/rs/rs_auth.c
Sensitivity                   : public

[8/7/94 public]

Any bad user response (i.e. anything other than y , n or <CR> ) in 
locksmith mode is not handled because of a bug in function 
get_yes_or_no ( file rs_auth.c ) .

For e.g.

# secd -locksmith hello
Account for hello doesn't exist.  Create it [y/n]? (y) incorrect
Bad input. Try again [y/n]? (y) Bad input. Try again [y/n]? (y) Bad input. Try
 again [y/n]? (y) Enter password for locksmith account:

I just fixed this locally (while making SVC changes).

[ sekhar 8/12/94 public ]

Fixed by code drop done today by mdf .

There is a slight user interface change. The code now uses
dce_rpmatch() to process the user response. So a valid user
response would be 'y', 'Y', 'n', 'N' or <CR> ( for default ).
Previously only 'y', 'n' or <CR> were valid.

There is no documentation impact. I checked the Admin Guide .



CR Number                     : 11571
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : doesn't mention /.:/sec/replist
Reported Date                 : 8/5/94
Found in Baseline             : 1.0.3
Found Date                    : 8/5/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_gd/overview/overview/appa.gpsml
Sensitivity                   : public

[8/5/94 public]
The appendix in the back of the intro volume that describes the namespace
doesn't list the /.:/sec/replist object.  It should.  There is also a new
/.:/sec/xattrschema object as part of ERA work that is being added in 1.1,
the replist object was added in 1.0.3

[08/11/94 public]
Assigned to myself.

[08/23/94 public]
Changed priority to "1" and severity to "B".

[09/06/94 public]
Added table entries for both /.:/sec/replist and /.:/sec/xattrschema.
I still need to edit the figure that shows the top-level
security directory so that it includes these new objects.

These changes verified by Rajendra Desai and Howard Melman.

[09/13/94 public]
Closed bug.
Peter Neilson added the new objects to Figure A-4, the Top-Level
Security Directory.  I verified all changes in the build output.



CR Number                     : 11570
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : New HP Code Submission: (pwd_strength, ERA scan/del, cell alias create/auth.
Reported Date                 : 8/5/94
Found in Baseline             : 1.1b13
Found Date                    : 8/5/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : lots
Sensitivity                   : public

[8/5/94 public]

New HP Submission:

Hightlights of what's here: (or at least what I am told is here)

aha
    pwd_strengthd is a sample Password Management Server that supports
    password strength checking and password generation.  The password
    strength checking that is done is based on the DCE Registry password
    policy in effect at the time.

    If pwd_strengthd is invoked by the name "pwd_checkd" (either via link
    or via renaming), then additional options are supported allowing
    override of the DCE Registry password policy.

    All errors and messages are sent to the logfile
    /opt/dcelocal/var/security/pwd_strengthd.log.

ahop
	Implements:
	- sec_rgy_attr_delete
	- sec_rgy_attr_sch_scan
	
	With this submission, a new rgy database must be created since a
	new field was added to the attribute instance record.  In other
	words, don't test this code without reconfiguring security so as
	to create a new database.
	
rps
	Allows creation of and authentication to cell aliases.
	(Doesn't support configuring other cells with them, though.)

[8/10/94]

This was submitted on Monday 8/8.  Can this go to fix->closed?

[8/10/94 public]
It should've been marked fix when submitted (I just did it now).  The OSF
must verify it in a baselevel before it can go to closed.



CR Number                     : 11558
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec API documentation and sec_rgy_default_handle
Short Description             : sec_id_parse_name() cannot be called with NULL rgy handle and not dce_login'ed.
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_rgy_site_binding_get_info.3sec
sec_rgy_site_get.3sec
Sensitivity                   : public

[8/3/94 public]

The API returns a no-current-context status code if the rgy_handle 
param is NULL and the caller has no login context.  It is felt
that this shouldn't happen and the call should succeed, returning
the parsed name.

Note that with an rgy_handle and no login context it does work.

[8/4/94 public]
Unfortunately, this behavior cannot be changed.  I talked with Joe about it
and it turns out that since the sec_rgy_default_handle (NULL handle) func-
tionality is hidden under the covers, there's no real correct way to get info
about whether the data can be trusted or not if it were possible that the handle
could be obtained unauthenticated.  Because of this, there's a limitation that
when passing sec_rgy_default_handle to any of the security APIs, you must have
a valid login context set for the process.  This most likely needs to be
documented more explicitly, so Joe has asked that I reassign this to 'doc'.

The correct thing for dcecp to do is obtain it
's own unauthenticated handle
using sec_rgy_site_bind(/.:, ...);

[8/16 public]
Changed priority to C2.

[8/29/94 public]
Fixed and verified.  Verified by Burati.

[09/01/94 public]
Closed bug.



CR Number                     : 11557
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5,sec_login
Short Description             : Need to subtype DCE preauth data
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : (many)
Sensitivity                   : public

[8/3/94 public]

DCE preauth data needs to be subtyped to avoid future compatibility
problems if we decide to have more preauthentication types.

This also applies to error data which is returned on authentication 
failures.

[08/19/94 public]

Bumped priority to P1. This must be fixed in DCE 1.1, as it affects
compatibility with future releases.

[08/20/94 public]
Please update admin/dced/server/sv_preauth.c instead of (or at least,
in addition to) security/server/sec_clientd.

[08/31/94 public]

Fix submitted. Note: comment above is irrelevant since the fix did not
affect dced.



CR Number                     : 11556
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : Update DCE preauth types to match Kerberos RFC.
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : (many)
Sensitivity                   : public

[8/3/94 public]

DCE preauthentication code needs to be updated to use the new 
reserved preauth type for DCE as specified in the Kerberos RFC.

[08/19/94 public]

Bumped priority to P1. This must be fixed in DCE 1.1.

[08/31/94 public]

Fix submitted.



CR Number                     : 11548
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dced/sec_login
Short Description             : HYP: Need more secure DCE preauth communication
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b99
Affected File(s)              : 
	config/rc.dce
	security/client/login/sec_login_pvt.c
	security/idl/rsec_login.idl
	admin/dced/idl/dhd.sams
	admin/dced/server/main.c
	admin/dced/server/sv_clientd.c
	admin/dced/server/svimpl.h
	admin/dced/server/sv_preauth.c
Sensitivity                   : public

[8/3/94 public]

A slightly more secure mechanism is needed to transmit secret keys
between the login process and dced (sec_clientd) for DCE preauthentication.

Currently, the login process creates a temporary file read only by
the user. It would be safer to have dced create this file read
only by the user.

[08/19/94 public]

Bumped priority to 1. This MUST be fixed for DCE 1.1 as it affects
the wire protocol between the client login process and sec_clientd/dced.

[08/20/94 public]
Er, like what?  We trust the local host (assuming, say, that root hasn't been
compromised) so what hole are you trying to close?

[09/01/94 public]

The login process (sec_login_validate_identity) creates a file read only by
the user and then sends the pathname of the file to sec_clientd/dced. sec_clientd/dced
places a secret key in that file which is then used by the login process to
decrypt the ticket granting ticket. There is a threat that between the time
the file is created and the file is sent to sec_clientd, someone could create a different
file and trick sec_clientd into writing the secret key to it. It is much more
secure if sec_clientd creates the file itself- read only by the user trying to
log in.

In any case, I believe this fix shouldn't affect compatibility because the communication
is on the local host only. So we can defer this fix to the unintegrated tree.

[10/5/94 public]
Bumped priority back to 1 to indicate that we are tentatively planning
this for the unintegrated tree.

[10/11/94 public]

Bumped to priority 0. After discussing with Bill Sommerfeld, there is
indeed a very serious security hole.

The login process currently creates a temporary file with mode 600 to be used for 
transmitting a secret key created by dced secval. It makes an unauthenticated
RPC request to sec_clientd with the pathname of the temporary file. dced
opens the file write only (it is running as root so it has rights) and writes
the secret key to the file. The login process then opens the file, reads the
key and destroys the file.

The problem is that dced does not perform checks to ensure that the file
passed by the client is legal (e.g., watch out for symlinks, disallow "/" in the
pathname passed from the client, check ownership and permissions, etc.)
dced could accidentally write over any file on the file system.

So, the following scenario could occur:

client: 

 1) generates a not-so-temporary file name (say "/etc/passwd").
 2) makes unauthenticated RPC call to dced, sending pathname of file

server: 
 1) opens file with write permission
 2) writes random secret key to file
 3) closes file

"game over".

The solution is to have dced create the temporary file in a known safe
directory, such as /opt/dcelocal/var/security/preauth. This would be a
directory, owned by root, mode 711 (rwx for root, --x for everyone else)
The directory is emptied and re-chowned when dced starts up.

The client calls to server, asking for credentials and passing its local uid.
The server randomly generates file name in that directory.
The server opens file with O_CREAT|O_EXCL|O_TRUNC, mode 600; if open fails,
pick a new file name and try again.

The server chowns file to client's uid, writes key to file, & closes file.
The server schedules file to be deleted in N minutes. (N=~ 5 minutes)
The server returns filename to client.

The client gets filename from server, opens it read-only and reads the key.

[10/11/94 public]

Changed severity to "A" since the current service as implemented can be
used as a "clobber arbitrary file" service; an attacker could use it for
denial-of-service attacks and potentially other exploitation of the system
(e.g., it could be used to clobber audit trails and negative-acl files like
/etc/ftpusers, etc.)

[10/12/94 public]
Changed to "HYP" to indicate that we are trying to get this into the mainline
due to it's seriousness.

[10/13/94 public]

Twilight zone trivia note: the number of this defect  (11548) is the same
as the zip code of the home I grew up in.

Fix is coded and tested in hp800 and at386, touching six files; one .idl,
one .c file in libdce, and four files in dced; it's currently in
rsalz-review-wait.

[10/13/94 public]
Down with Greenvale.  Locust Valley rules. :-)

I will be sending revised code to Bill early Fri morn or late Thurs night.
The rc.dce file is being changed, too.

[10/17/94 public]

fixed.



CR Number                     : 11546
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kinit
Short Description             : kinit -c is broken
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : kinit.c
Sensitivity                   : public

[8/3/94 public]

DCE preauthentication changes broke kinit -c. Should be trivial fix.

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 11540
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : memory-leak in gssapi
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : gssapi.c
Sensitivity                   : public

[8/3/94 public]
This OT relates to OT 10895 - Look there for further details.
The workaround submitted today introduces a memory-leak,
and this OT is a reminder that this has to be fixed
once the underlying problem is fixed.

[9/15/94 public]
Fixed in today's drop.



CR Number                     : 11532
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_rgy_attr_sch
Short Description             : sec_rgy_attr_sch test core dumps due to missing &.
Reported Date                 : 8/2/94
Found in Baseline             : 1.1b13
Found Date                    : 8/2/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : ./test/security/tet-tests/ts/client/rca/sec_rgy_attr_sch/sec_rgy_attr_sch.c
Sensitivity                   : public

[8/2/94 public]

Line 332 in function tp6(), I believe it should be &cursor, not cursor.

[8/4/94 public]

Change suggested was made.

[08/04/94 public]



CR Number                     : 11498
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : passwd_override
Short Description             : passwd_override bourne shell
test getting syntax error
Reported Date                 : 7/29/94
Found in Baseline             : 1.1b13
Found Date                    : 7/29/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : passwd_override,passwd_override.sh
Sensitivity                   : public

[7/29/94 public]

The passwd_override.sh FVT has syntax errors at each reference
to an "if [ $x -ne $y ] " type conditional in the function
check_status.  This occurs only on 486 whose Bourne shell
doesn't like -ne with strings.  I think '!=' will work on
486 and HP bourne shell in this case.

The test does not report this as a failure and is erroneously
reporting SUCCESS.

[7/29/94 public]
Mistakenly reported the problem with passwd_import.sh when it is
actually with passwd_override.sh.  Changed all references import->override

[7/9/94 public]
The problems found are the following.
1 Use of -ne instead of != for string comparisons.
  (as described in the CR).
2 Only arguments $1-$9 are directly accessible from
  a shell function, as check_status (at least on 486).
  A valid $10 is always evaluated to "00" causing failure.
3 sed filters are space sensitive and do not match the
  output of binlogin causing failures
4 Mismatches between passwd_override.sh and passwd_override
  files causes tests failures.



CR Number                     : 11492
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : dce_login takes too long
Reported Date                 : 7/29/94
Found in Baseline             : 1.1
Found Date                    : 7/29/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : unknown
Sensitivity                   : public

[7/29/94 public]

Dce_login can take as long as 38 seconds if secd is shutdown and
brought backup. But, the standalone dce_login test takes less than
4 seconds.

When this long elapsed occurred, the serviceability rpc traces of 
dce_login showed a 36 seconds gap between a 99 bytes cn-send 
and a 36 bytes cn-recv when running with cn, and many pings when 
running with dg. Also, there were some gaps of few seconds in secd's 
serviceability rpc traces. 

To re-produce this problem, takes secd down and bring it backup. Then,
run "/bin/time dce_login_noexec cell_admin -dce-".

[7/29/94 public]
I performed the same test and did not see this behaviour.  But, I 
explicitly waited for the newly started secd process to reach a
quiescent state (watch ps until CPU activity % goes -> 0.0).  Then
the dce_login is ~ 4 seconds as usual for 1.1

secd startup activity did take ~40 seconds to subside.  I'm guessing
that normal registry resync, log replay, whatever on startup is the reason.
Will cancel unless there is disagreement.

[8/1/94 public]
Tried on hp800.  Always logged in in a few second.  Even while secd is
restarting.  Closed (per baum)



CR Number                     : 11491
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : appdevref
Short Description             : confusing NOTE in sec_rgy_open refpages
Reported Date                 : 7/29/94
Found in Baseline             : 1.1
Found Date                    : 7/29/94
Severity                      : B
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_intro.3sec
sec_rgy_site_get.3sec	
sec_rgy_site_open.3sec	
sec_rgy_site_open_query.3sec
sec_rgy_site_open_update.3sec
Sensitivity                   : public

[7/29/94 public]

The manpages for sec_rgy_site_open_XXX (and sec_rgy_site_get) all have
A note that follows this formant
	NAME
		sec_rgy_site_open_query - binds to a registry query site
	Note: to bind to a registry query site, the use of the
	    sec_rgy_site_bind_query() call is recommended in place of this
	    call.

The Note should be moved to the end and written as this:
	This routine is deprecated; use sec_rgy_site_bind_query instead.
Or, perhaps even just stop documenting sec_rgy_site_open(&site_get).

The second problem is that sec_rgy_site_bind_XXX all take a
sec_rgy_bind_auth_info_t parameter.  This datatype should be described
in intro(3sec).  Those manpages instead refer you to rpc_binding_set_auth_info
which does not help.

[8/24/94 public]

Assigned to Pam Millette

[08/25/94 public]
Corrected typo in Responsible Engineer field (so ot_bugs queries
on the code field will include this CR).

[8/29/94 public]
Yikes!  sec_rgy_site_open() is not deprecated, but sec_rgy_site_open_query()
is.  The documentation for that call should be removed (I thought this was
already reported and taken care of elsewhere) and the Notes should all be
removed.

[8/31/94 public]
Pam & I discussed this with Joe P a few weeks back and agreed that:
No man pages would be removed.
Use of site_open* and site_bind_query would be discouraged.
AES will document only site_bind and site_bind_update.

We don't see anything confusing about the current note, though Pam
is going to move them to their proper place in the NOTES section.

[9/1/94 public]
Fixed and verified. Verified by rps.  
I added sec_rgy_bind_auth_info_t and sec_rgy_bind_auth_info_type_t to 
the intro page and moved the note to the end of the files in the Notes 
section.  Note text was unchanged.

[09/22/94 public]
Closed bug.



CR Number                     : 11489
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dce_login
Short Description             : dce_login on a 1.0.3 client
causes the 1.1 security slave, on an HP, to core dump.
Reported Date                 : 7/29/94
Found in Baseline             : 1.1b13
Found Date                    : 7/29/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/krb5/kdc/do_as_req.c
Sensitivity                   : public

[7/29/94 public]

BUILD: BL-13
Cell Configuration:

OSF1: 1.1 DCE core server
HPUX: 1.1 DCE client, DTS server, SEC replica
OSF1: 1.0.3 DCE client, DTS server


Executinf a "dce_login cell_admin -dce-" on the 1.0.3 client
provokes the secd replica, on the HPUX, to core dump. I must
add that subsequent  dce_logins, serviced by the master (OSF1),
are successfull and do not cause the master to coredump.

(I will try other platform configurations to get more info)

Here is some xdb information of the core; it is alaways the same.


>t
 0 process_as_req + 0x00001fbc (0x4023f560, 0x40210b48, 0x40210b68, 0)
 1 dispatch + 0x0000036c (0x40210b60, 0x40210b48, 0x40210b68, 0x40176be4)
 2 rsec_krb5rpc_sendto_kdc + 0x00000100 (0x40176c20, 0xaf, 0x4023f0f8,
0x1000)
 3 op0_ssr + 0x0000021c (0x40176c20, 0x4023f320, 0x4021053c, 0x40210520)
 4 rpc__dg_execute_call@libdce + 0x00001ba4 (0x4023f320, 0, 0, 0)
 5 cthread_call_executor@libdce + 0x000002d4 (0x40176d80, 0x7af52078,
0x40048cc0, 0xd)
 6 cma__thread_base@libdce + 0x0000021c (0x40048cc0, 0, 0, 0)
 7 cma__thread_start1@libdce + 0x0000004c (0x40048cc0, 0, 0, 0)
 8 cma__thread_start0@libdce + 0x00000008 (0x40048cc0, 0, 0, 0)
 9 process_as_req + 0x00001fbc (0, 0, 0, 0)
20y0C File: unknown    Procedure: process_as_req + 0x00001fbc    Line:
unknown                      
    >lr $a
$arg0     = 0x40211d38
$arg1     = 0
$arg2     = 0
$arg3     = 0x400b9084
20y0C File: unknown    Procedure: process_as_req + 0x00001fbc    Line:
unknown                          >
>  p *($pc-16)\20i        
0x000ad704  LDSID       (0,1),31
0x000ad708  MTSP        31,0
0x000ad70c  BLE 0(0,1)
0x000ad710  OR  31,0,2
0x000ad714  LDW -32(0,30),19
0x000ad718  LDO 11(0),31
0x000ad71c  STB 31,-1624(0,30)
0x000ad720  STW 0,-1620(0,30)
0x000ad724  LDB -1840(0,30),20
0x000ad7280x000ad72c  LDW,20,_fp-2148(0,30),21
0x000ad730  LDW 4(0,21),22
0x000ad734  LDW 0(0,22),1
0x000ad738  LDH 0(0,1),31
0x000ad73c  EXTRU       31,31,16,20
0x000ad740  COMIBT,=,N  7,20,_fp_status+01e8
0x000ad744  LDO -1144(30),21
0x000ad748  STW 21,-1152(0,30)
0x000ad74c  STW 0,-1148(0,30)
0x000ad750  LDW -1152(0,30),22
20y0C File: unknown    Procedure: process_as_req + 0x00001fbc    Line:
unknown               
lr $r           
$r0       = 0
$r1       = 0x6c53
$r2       = 0xad717
$r3       = 0
$r4       = 0
$r5       = 0
$r6       = 0
$r7       = 0
$r8       = 0
$r9       $r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      $r20      = 0x4
$r21      = 0x4023f560
$r22      = 0
$r23      = 0x400b9084
$r24      = 0
$r25      = 0
$r26      = 0x40211d38
$r27      = 0x4002c7c0
$r28      = 0x40211cac
$r29      $r30      = 0x402123a0
$r31      = 0xb
$ret0     = 0x40211cac
$ret1     = 0x4023fa85
20y0C File: unknown    Procedure: process_as_req + 0x00001fbc    Line:
unknown

[08/04/public]

Downgrading this because there are more pressing problems at 
the moment that HP is focuing on. 

HP has asked me to configure a 1.0.3 HP client, repeat this test 
and document the results here. I will be doing that today.

[08/15/94 public]

I have reproduced this in house using 3 HP-UX machines. There
is no need for you to provide further information.

[08/23/94 public]

Fixed in HP code drop a few days ago.



CR Number                     : 11476
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : dlg_client test failing distributed
Reported Date                 : 7/28/94
Found in Baseline             : 1.1b11
Found Date                    : 7/28/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : dlg_client.c, dlg_intermediary.c
Sensitivity                   : public

[7/28/94 public]

I know I tried the dlg_client test yesterday, however, when
I ran the initiator on node1, the delegate on node 2,
and the target on node 3, today I am getting the same error message:

FAILED: Delegation test; Error from rpc_binding_set_auth_info: 
connection request rejected (dce / rpc)

The test consistently fails on rpc_binding_set_auth_info.
I doubled checked my configuration.
I don't know why this worked yesterday and not today.

The test works fine if I run it with the client on one node
and the delegate and server on the other node.
It only fails when the client, delegate and target are on
different nodes.

I have assigned this bug to myself for further investigation.
However, Mike if you have any information about why this
might be failing in a disributed mode, that would be very helpful.
It would be useful if someone else can try this and see if they
get the same failure.

[7/28/94 public]

Added max to the interest list.
Max, could you put the information you find out about
this problem here? Thanks.

[7/28/94 public]

It seems like the problem is in the communication between
the initiator and the delegate because the delegate
never reacts when I get this error message.
Even when I have debugging turned on in the delegate.
I still don't know what exactly is causing this problem.

[7/29/94 public]

The test failure is now reproducable.
The first time you configure a cell and
you try the test, it works on any three nodes.
However, if you then bring down the intermediary and
start the intermediary on a different node,
the dlg_client test always fails.  
I talked to Rob and Max about the problem
and Max will investigate further.

Tried rpc_ns_mgmt_set_exp_age(0, &status); in the client
after rpc_ns_binding_import_begin(), but before the call to
rpc_ns_binding_import_next();  This didn't fix the problem
though.  However, it changed the error message:

FAILED: Delegation test; Error from rpc_binding_set_auth_info: 
communications failure (dce / rpc)

[8/01/94 public]

Moved rpc_ns_mgmt_set_exp_age to the beginning of bind_to_svr
function, before any rpc_ns calls and this fixed the problem.
Also added rpc_ns_mgmt_entry_delete to dlg_intermediary
to make sure the /.:/dlg_test entry is deleted.
Rob/Max, I believe this problem is fixed now.



CR Number                     : 11461
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Login Management
Short Description             : Improper test of array pointer
value causes compilation error in SVR4
Reported Date                 : 7/26/94
Found in Baseline             : 1.1
Found Date                    : 7/26/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : lm_login.c
Sensitivity                   : public

[7/26/94 public]

The file ./security/server/lm/lm_login.c contains the following
construct in a number of places:

  if (login_activity->good_origin)
	strcpy(....)

The good_origin structure member (as well as bad_origin in the same struct)
is s typedef whose base type is a char array.  Taking the address of an 
array will always be true AND it generates a compiler errror on SVR4.

The offending statements can be found at line #'s 323, 330, 337, 353, 368
in lm_login.c (revision 1.1.2.1)

[09/07/94 public]

the redesign of the address type as a tagged union should submitted by 
11919 eliminates this



CR Number                     : 11446
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_krb_tgtprinc_from_dce_cell_pair not in any header file
Reported Date                 : 7/26/94
Found in Baseline             : 1.1b12
Found Date                    : 7/26/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : security/h/sec_krb_util.h
Sensitivity                   : public

[7/26/94 public]

The routine sec_krb_tgtprinc_from_dce_cell_pair is not declared in
any header file.  security/h/sec_krb_util.h seems like the obvious
place.  I'm willing to make this change if the OT is assigned to me.

[07/26/94 public]
Added the declaration and submitted the file.



CR Number                     : 11442
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd master hangs after 8-10
hours of operation (or less)
Reported Date                 : 7/26/94
Found in Baseline             : 1.1b13
Found Date                    : 7/26/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : Greg's latest drop - 8/18.
Sensitivity                   : public

[7/26/94 public]

Build: NB Jul 25

Cell: HPUX: sec server, cds server
      OSF1: client
      OSF1: client

Running the dcesergy test (sec.rgy.7) overnight results in secd 
spinning after 8-10 hours.  The following were taken over about
five minutes: (the test was already hung)

15936 24 16:02:4   438:12 secd -bootstrap
15936 9 16:02:48  440:54 secd -bootstrap 
15936 3 16:02:48  442:55 secd -bootstrap

While there was no crash of any component, the cell was not functional.
All the components were up, but could not communicate.

dtscp was not functional.  Invoking the command never got to the dtscp prompt.
 
cds was not functional in the cell.  The following was returned from
cdscp:

cdscp> sho dir /.:

                        SHOW
                   DIRECTORY   /.../systest
                     AT   1994-07-26-08:27:59
Error on entity: /.../systest
Implementation specific error
Function: dnsEnumAttr


cdscp> sho dir /.../systest

                        SHOW
                   DIRECTORY   /.../systest
                     AT   1994-07-26-08:28:20
Error on entity: /.../systest
Implementation specific error
Function: dnsEnumAttr

The server node was displaying the following messages from dts:

1994-07-26-08:20:53.047-04:00I22.762 dtsd ERROR dts dtserror transport_rpc.c 184
5 0x7aff8bb0
Failed to determine if server is in security group: auth ticket expired (dce / r
pc)
1994-07-26-08:20:53.193-04:00I22.762 dtsd ERROR dts dtserror dtss_service_global
_set.c 676 0x7aff8bb0
Failed to retrieve server binding from the namespace: Implementation specific er
ror (dce / cds)
1994-07-26-08:20:53.555-04:00I22.762 dtsd ERROR dts events logevent_v_ultrix.c 3
97 0x7aff8bb0
LAN profile not found
1994-07-26-08:20:53.803-04:00I22.763 dtsd ERROR dts dtserror dtss_service_global
_set.c 340 0x7aff8bb0
Can't retrieve DCE cell name from configuration DB: Implementation specific erro
r (dce / cds)
1994-07-26-08:20:53.909-04:00I22.763 dtsd WARNING dts config logevent_v_ultrix.c
 259 0x7aff8bb0
Too few servers (1), need 3 servers


The client node running dcesergy displayed the following messages from dts:

1994-07-26-07:56:58.190-04:00I21.290 dtsd WARNING dts config logevent_v_ultrix.c
 259 0xa44c0cb0
Too few servers (1), need 3 servers
1994-07-26-07:58:49.300-04:00I21.401 dtsd WARNING dts dtserror provider_interfac
e.c 1064 0x005cdb08
Couldn't add authentication to the Time Provider binding: auth ticket expired (d
ce / rpc)
1994-07-26-07:58:49.330-04:00I21.401 dtsd ERROR dts dtserror dtss_service_global
_set.c 676 0xa44c0cb0
Failed to retrieve server binding from the namespace: status 0x10d0a7ce (dce / c
ds)
1994-07-26-07:58:49.350-04:00I21.401 dtsd ERROR dts events logevent_v_ultrix.c 3
97 0xa44c0cb0
LAN profile not found

The other client node displayed the following messages from dts:

1994-07-26-08:36:44.871-04:00I24.001 dtsd ERROR dts dtserror dtss_service_global
_set.c 676 0xa44c0cb0
Failed to retrieve server binding from the namespace: status 0x10d0a7ce (dce / c
ds)
1994-07-26-08:36:44.881-04:00I24.001 dtsd ERROR dts events logevent_v_ultrix.c 3
97 0xa44c0cb0
LAN profile not found
1994-07-26-08:36:44.891-04:00I24.001 dtsd ERROR dts dtserror dtss_service_global
_set.c 340 0xa44c0cb0
Can't retrieve DCE cell name from configuration DB: status 0x10d0a7ce (dce / cds
)
1994-07-26-08:36:44.901-04:00I24.001 dtsd WARNING dts config logevent_v_ultrix.c
 259 0xa44c0cb0
Too few servers (1), need 3 servers

From the output log of the dcesergy test, it appears that the test was
performing a number of sec_login calls when the security server started 
spinning.

(We'll run this again to try and get more info on the state of the server
when it gets into this state.)

[7/26/94 public]

At the moment, there is no SVC in SEC, correct?  Given that,
when the secd is spinning (being seen in this OT as well as #11419) what 
is the best method of obtaining info as to where it is?  GDB on some
platforms (not 486/OSF1, unfortunately) can attach to a running process.
Can XDB do this?  We can kill it with a SEGV to cause it to dump core, 
but this may or may not give an interesting snapshot of its location.

[7/29/94 public]

I was able to reproduce this problem last night. It is not
difficult to do. Similarly, the master secd was running on 
an HPUX.

In my case, all I had running was a script, on each machine 
(4 total), executing dce_login commands. 

By examining the cdsclerk and dtsd SVC logs, it appears that 
at one point these components started to get the same type of
errors. Here are the example messages:

cdsclerk:

1994-07-29-00:26:52.904-04:00I46.422 cdsclerk(11207) ERROR cds general
clerk_bind.c 620 0x0057d430
Routine sec_rgy_pgo_is_member(3sec) failed : status = 336760973.

stcode 336760973 translates to:

Tech = 1 = 01 = 0x1 = dce
Comp = 16681 = 040451 = 0x4129 = krb
Mesg = 141 = 0215 = 0x8d = Matching credential not found

dtsd:

1994-07-29-00:26:53.764-04:00I46.423 dtsd ERROR dts dtserror
dtss_service_global_set.c 676 0xa44c0cb
0
Failed to retrieve server binding from the namespace: Matching credential
not found (dce / krb)

These errors are probably the result of these services finding secd
hung, but what got secd to hung in the first place? 

This bug blocks progress in running system tests for a good number of
hours, given that most of the tests use dce_login.

[08/04/94 public]

You can use "xdb -P process_id" to attach to a running process.

Can you do that and get a traceback for me? It would also help if
secd was built debuggable.

Also, can you monitor the size of secd as the tests are running. Run
"ps -elf | grep secd" about every 5 minutes and save the output.

Also, please make sure you have plenty of swap space and disk space
and open files available when secd is spinning.

This defect has some similarities with OT 11419.

[8/4/94 public]

I tried xdb -P last week.  The debugger indicates that the process
is stopped in the kernel.  I wanted to put a breakpoint in a user 
space function and then continue.  Tried cma_malloc() and a few
others but the breakpoints were not hit.  

What is the suggested method of attaching to and stopping a process that 
might be looping in an unknown spot not making any system calls?

We are attempting to have the nightly build here build all of SEC with
-g. The Release group told me that this can only be done
for 486 because there is no room to do so on the HP build machine.
Also, it looks like some of the SEC makefiles override the -g setting
from cascading all the way down.  The RATS were going to file an OT on
this.  I will pursue further....

[8/10/94 public]

I am downgrading the priority of this bug to a 1 until we get and
test the fix for CR 11419. Then, system test will try to reproduce 
the hung again. I would appreciate if someone at HP could teach me 
how to attach to a hung process using xdb, so I can obtain useful 
information for you.

[8/11/94 public]

I ran two cds system tests (dcecdsacl6 and cdsserv) and a dts test (dcetmsyn)
in the following cell last night.  All three tests hung after 4-5 hours, there
were mismatched seal messages on one of the OSF/1 clients. (See 11419)

secd was spinning on the HP server.  Rob Baum and I attempted to attach
to the server process with xdb, but could not get the server to breakpoint.
We sent the secd process a SIGSEGV signal and got the following trace.
It may or may not be meaningful, but here's hoping...

Quoting sommerfeld@hp:  

(I have a vague memory of seeing secd spinning in a loop calling accept()
in one of our product versions of DCE; I'll go digging for that fix and
annotate the new defect with that info.  I think it was either a threads
bug or a CN bug..).

This one was already open, so I went for it.  It seems like a good fit.

NB0808 (Monday night's)

HP-UX : secd, cdsd
OSF1:   client
OSF1:   client, ntp provider

>t
 0 accept@libc + 0x00000008 (hp-ux export stub)
 1 cma_accept@libdce + 0x00000438 (0x5, 0, 0x4014176c, 0x400bbd7c)
 2 rpc__socket_accept@libdce + 0x0000004c (0x5, 0, 0x401416f0, 0)
 3 rpc__cn_network_select_dispatc + 0x00000218 (0x5, 0x400cc9e8, 0x1, 0x401416
80)
 4 lthread_loop@libdce + 0x000002c0 (0x40141490, 0, 0, 0)
 5 lthread@libdce + 0x0000010c (0x7aff4220, 0x7af560d8, 0x40042420, 0x7)
 6 cma__thread_base@libdce + 0x0000021c (0x40042420, 0, 0, 0)
 7 cma__thread_start1@libdce + 0x0000004c (0x40042420, 0, 0, 0)
 8 cma__thread_start0@libdce + 0x00000008 (0x40042420, 0, 0, 0)
 9 cma__thread_start0@libdce + 0x00000008 (0x40042420, 0, 0, 0)
 .
 .
 >lr $a
 $arg0     = 0x5a88
 $arg1     = 0x7ffe6000
 $arg2     = 0x5a88
 $arg3     = 0x7aff4854

 >lr $r
 $r0       = 0
 $r1       = 0x1c2000
 $r2       = 0x8008852b
 $r3       = 0
 $r4       = 0
 $r5       = 0
 $r6       = 0
 $r7       = 0
 $r8       = 0
 $r9       = 0
 $r10      = 0
 $r11      = 0
 $r12      = 0
 $r13      = 0
 $r14      = 0
 $r15      = 0
 $r16      = 0
 $r17      = 0
 $r18      = 0
 $r19      = 0x7af37238
 $r20      = 0x24b5
 $r21      = 0x40141ea0
 $r22      = 0
 $r23      = 0x7aff4854
 $r24      = 0x5a88
 $r25      = 0x7ffe6000
 $r26      = 0x5a88
 $r27      = 0x400299d0
 $r28      = 0x1
 $r29      = 0x1
 $r30      = 0x40141b60
 $r31      = 0x8008852b
 $ret0     = 0x1
 $ret1     = 0x1

 >p *($pc - 16)\20i
 0x80088518  LDO -128(30),30
 0x8008851c  BREAK       0,0
 0x80088520  BL  _fp_status+0040,2
 0x80088524  OR  0,0,0
 0x80088528  LDW -24(0,30),2
 0x8008852c  LDSID       (0,2),1
 0x80088530  MTSP        1,0
 0x80088534  BE,N        0(0,2)
 0x80088538  BL  _fp_status+0028,2
 0x8008853c  OR  0,0,0
 0x80088540  LDW -24(0,30),2
 0x80088544  LDSID       (0,2),1
 0x80088548  MTSP        1,0
 0x8008854c  BE,N        0(0,2)
 0x80088550  BL  _fp_status+0008,1
 0x80088554  ADDIL       0xfffae000,1
 0x80088558  LDO 1212(1),1
 0x8008855c  BV,N        0(1)
 0x80088560  STW 19,-28(0,30)
 0x80088564  LDIL        0xc0000000,1

[8/19/94 public]
Fix submitted by Greg in the latest drop.



CR Number                     : 11423
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dg
Short Description             : "who are you"/refresh fails
Reported Date                 : 7/25/94
Found in Baseline             : 1.1b12
Found Date                    : 7/25/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : Greg's recent drop - 8/18.
Sensitivity                   : public

[7/25/94 public]

Using the build available today to create a single-machine DFS cell
on a RIOS, the following command fails:

fts create root.dfs -server cobbler -aggr m1.aggr1 -localauth

with:

Error: who are you failed (dce / rpc)

I've reproduced this twice - doubt it's RIOS-specific but it's all
I have time for right now. Logging in as cell_admin and running the
same command WITHOUT the -localauth switch succeeds. I would call this
a priority 2 except that this will prevent the automated config/smoketest
run from succeeding unless dce_config/dfs_config is altered to do
this workaround.

[7/25/94 public]
Hmm ... no word on this one - this is also causing dfs fileset replication to
fail (at a point where I believe only user space rpc's are being used).
Bumping the severity and priority since losing dfs fileset replication is a
major regression.

From /opt/dcelocal/var/dfs/adm/RepLogs (both HP and RIOS fail in same way):

94-Jul-29 11:10:15 repserver: log initialized to /opt/dcelocal/var/dfs/adm/RepLo
g
94-Jul-29 11:10:21 Replication server started.  Mainprocs=1; tokenprocs=4.
94-Jul-29 14:03:19 setNextTime: 0,,29: delay 120 secs: GetIncrementalDump: can't
 open remote source ft: who are you failed (dce / rpc)

[8/2/94 public]

I get the following messages in my cell after it has been up for a day
or two.  No DCE system tests were active.  The cell is still functional.
I've seen the messages on both the client and server.

HP-UX  sec server,  cds server
OSF/1  client
OSF/1  client, time provider

1994-07-31-17:01:10.714-04:00I1.287 dtsd ERROR dts dtsdate time_request.c 658 0x
005c29a0
RPC call ClerkRequstTime() to remote server failed: status 0x1412908d (dce / krb
)
1994-07-31-17:01:10.794-04:00I1.287 dtsd ERROR dts dtsdate time_request.c 658 0x
0064ca18
RPC call ClerkRequstTime() to remote server failed: status 0x1412908d (dce / krb
)
1994-07-31-17:01:18.504-04:00I1.295 dtsd ERROR dts dtserror transport_rpc.c 1845
 0xa44c0cb0
Failed to determine if server is in security group: who are you failed (dce / rp
c)

[8/2/94 public]

I have seen the "who are you failed" message, reported in the previous
entry, on a machine running a dts clerk.

[8/3/94 public]
I got the fts command to work by doing goto's over the refresh logic (ie: so it
never did the sec_login_refresh_identity()). Since DTS also fails with the same
error after a refresh, I'm reassigning this to security as a refresh problem.

[8/4/94 public]
Dropping to a "1" for the time being since the dfs replication regression
will not be blocking anyone for a couple of weeks now. Note that the
inability to refresh tickets will block all attempts at 48 CHO (exit
criteria) for all of DCE 1.1 - not just DFS ...

[8/8/94 public]

This will be fixed by the current Delegation/Backwards Compat work that
we are doing.  In the meantime, a workaround that should get you going
is to increase the default certificate lifetime and the dce-ptgt princ
lifetime to ~ 1 week (per Greg Carpenter's suggestion).

Also, see 11419 and Bill's comments - we think these are related problems.

[8/19/94 public]
Fix submitted by Greg in the drop of 8/18.

[8/19/94 public]
Verified that (using bl-16 of 8/23 bits), I can successfully
do a:
	fts create my.fs -server cobbler -aggr m1.aggr2 -localauth

so I'm closing. I believe other related problems still exist (ie. 11708)
but the specific localauth problem is fixed.



CR Number                     : 11422
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : uninit'ed local variables
Reported Date                 : 7/25/94
Found in Baseline             : 1.1
Found Date                    : 7/25/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : kdc_preauth.c
Sensitivity                   : public

[7/25/94 public]

Pointers declared on stack in kdc_preauth.c:third_party_padata()
need to set to NULL.

[7/25/94 public]

Changed submitted.



CR Number                     : 11419
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : mismatched seal 0
Reported Date                 : 7/25/94
Found in Baseline             : 1.1b13
Found Date                    : 7/25/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : Greg's recent drop - 8/18.
Sensitivity                   : public

[7/25/94 public]

Build: NB July 22
Cell Configuration: 
 HPUX (west): SEC server, DTS server
 OSF1 (dce3) : CDS server, DTS server
 OSF1 (barbados): DCE client, DTS server, NTP prov., SEC slave
 OSF1: DCE client

The cell was running system tests during the weekend. 

Events: 

1- On dce3 and barbados I found the message: 

	mismatched seal 0

2- On Barbados the secd did a core dump. 
   
root@barbados> gdb /opt/dcelocal/bin/secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..
Core was generated by `secd'.
Program terminated with signal 11, Segmentation fault.
#0  0xa433df4f in rwl_e_owner ()
(gdb) where
#0  0xa433df4f in rwl_e_owner ()
Cannot access memory at address 0xc6072d44.
(gdb) 

3. The cell hung about the time secd (slave) did the core dump
   because the servicibility logs (dts and cds) we not updated since
   then.

[7/25/94 public]
Assigned to sec_bat/hp.  The 'mismatched seal 0' is a printf found
at sec_authn.c:1845.

[2/25/94 public]

I want to add a couple more notes about the state of the DCE cell
today:

Both cdsd and secd seem to be spinning. Here is the current situation:


System: west                                          Mon Jul 25 14:34:13
1994
Load averages: 1.00, 1.01, 1.01
46 processes: 44 sleeping, 2 waiting
Cpu states: 53.6% user,  0.0% nice, 46.4% system,  0.0% idle,  0.0% unk5,
0.0%
unk6,  0.0% unk7,  0.0% unk8
Memory: 10844K (9816K) real, 31860K (30072K) virtual, 5100K free     Screen
# 1/
3

TTY   PID USERNAME  PRI   NI  SIZE  RES  STATE   TIME   %WCPU  %CPU COMMAND
?    17394 root    202   10 14016K 7148K  wait 2364:45  99.51  99.34 secd

root@west> ps -elf | grep secd
  1 R    root 17394     1 -64 206 10  20ffc00 3504  Jul 23  ? 2366:01 secd

On dce3:

root@dce3> ps -ef | grep cdsd  
root     19794     1  0.0   Jul 23 ??          29:28.63 cdsd

On dce3 I found an error from cdsd that reads:

root@dce3> more cds.ERROR
1994-07-23-21:35:38.734-04:00I0.898 cdsd(19794) ERROR rpc rpc_svc_auth
cnsassm.c
 4017 0x0097d2e0 RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status =
1712217d

[07/26/94 public]

I reproduced this problem. This time both the replica and the master
did core dumps. I used xdb on the HP to look at the core (from the master)
and the trace is:

 0 _kill@libc + 0x00000008 (hp-ux export stub)
 1 _raise@libc + 0x00000024 (0x7b00e538, 0x4004e0c0, 0x7b00d164,
0x7b00d160)
 2 _abort@libc + 0x00000078 (0x40035c80, 0x39, 0, 0)
 3 rs_task_fatal + 0x0000002c (0x17122000, 0, 0xa0000000, 0)
 4 go_away + 0x00000034 (0x17122000, 0x40357660, 0x91, 0x402)
 5 rs_util_fatal + 0x000000c4 (0x40357660, 0x40003ee8, 0x40003f04, 0x376)
 6 rs_log_truncate + 0x00000318 (0x40005e28, 0x40355478, 0x40355478, 0)
 7 rsdb_checkpt + 0x00000164 (0x4, 0x2, 0x40355478, 0)
 8 rsdb_checkpt_task + 0x00000154 (0, 0x7af5a068, 0x4004e0c0, 0x15)
 9 cma__thread_base@libdce + 0x0000021c (0x4004e0c0, 0, 0, 0)
10 cma__thread_start1@libdce + 0x0000004c (0x4004e0c0, 0, 0, 0)
11 cma__thread_start0@libdce + 0x00000008 (0x4004e0c0, 0, 0, 0)
12 cma__thread_start0@libdce + 0x00000008 (0x4004e0c0, 0, 0, 0)


I will save the core in case someone sees the need to examine it.

[07/26/94 public]

The core on the OSF1 machine (from the replica) did not give
any useful information.

[07/29/94 public]

I have some useful information about this bug:

Every "mismatched seal 0" alert printed is followed by a 
message from the DCE deamon that received the message. 

For example: 

root@raven> mismatched seal 0
1994-07-29-05:00:48.465-04:00I0.706 cdsd(814) ERROR rpc rpc_svc_auth
cnsassm.c 4017 0x00793f08
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status = 1712217d

mismatched seal 0
1994-07-29-05:00:49.495-04:00I0.707 dtsd ERROR rpc rpc_svc_auth cnsassm.c
4017 0x005d0220
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status = 1712217d


The status  1712217d means:

stcode -h 1712217d
Tech = 1 = 01 = 0x1 = dce
Comp = 28962 = 070442 = 0x7122 = sec
Mesg = 381 = 0575 = 0x17d = integrity error: EPAC seal mismatch.


I have reason to believe that the secd coredumps are not directly 
related to this error because these errors occur in an idle cell
when secd is not being stressed by tests. Furthermore, these errors 
do not seem to have a detrimental effect on the cell immedidately...  
What is the long time effect on a cell whose deamons keep getting 
this message? I do not know.

The cause of the coredumps need more investigation because they
are caused at different times and the circunstances are not always
the same. Perhaps, I will split this CR in two when I know more.

[07/29/94 public]

One more thing:

I also noticed that the dtsd SVC message, on raven, is extremely 
close in time to another SVC message on a second DTS server, on bronze.
Unfortunately my third DTS server is a 1.0.3 ... SVC-less

Here are the two messages seen together:

On machine raven (OSF1):

mismatched seal 0
1994-07-29-05:00:49.495-04:00I0.707 dtsd ERROR rpc rpc_svc_auth cnsassm.c
4017 0x005d0220
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status = 1712217d


On machine bronze (HPUX):

root@bronze> 1994-07-29-05:00:49.587-04:00I0.762 dtsd ERROR dts dtsdate
time_request.c 658 0x4002ead8
RPC call ClerkRequstTime() to remote server failed: unknown reject (dce /
rpc)

[8/4/94 public]

On the secd dumps:

The traceback from the secd master server you cited in your note of 7/26
occurred in rs_log_truncate().

There are a number of different ways in which that routine could fail;
unless we get the output from secd's stderr, we can't readily know which
one that was.  By any chance, was the partition containing the security
database full or nearly full before the crash?

I'm not sure about the "mismatched seal" problem; this indicates that the
external epac data doesn't match the seal for same found inside the
credentials.  I'll think about coding up a "trap" to see if we can identify
where the mismatch came from (including more information in the mismatched
seal message).

[8/24/94 public]

At this point we should separate the core dump and the mismatch 
seal message. This CR should just concentrate on the latter. 
When I first reported the problem, I thought they were related,
but they do not seem to be. We will address the core dumps in another
CR.

[8/5/94 public]

Current "best guess" as to what's going on here (based on discussion with
Greg Carpenter, who is tracking a similar bug elsewhere):

 - with dce1.1, the PAC data is moved outside of the ticket into a
delegation chain (maintained separately).
 - currently, on the client side, we cache the ticket in memory while
fetching the deleg. chain from disk on demand when we need it.
 - if the delegation chain changes out from underneath the application, the
seal in the ticket won't match the deleg. chain any more.

This seal mismatch can happen if:
 - the user is added to/deleted from groups
 - refreshed credentials come from a server with a different NDR from the
original ..

The fix is to cache the delegation token in memory along with the ticket.

This can be fixed entirely in sec_authn.c; I'll be coding a fix on Monday.

[8/11/94 public]

I ran two cds system tests (dcecdsacl6 and cdsserv) and a dts test (dcetmsyn)
in the following cell last night.  All three tests hung after 4-5 hours, there
were mismatched seal messages on one of the OSF/1 clients.

secd was spinning on the HP server.  Rob Baum and I attempted to attach
to the server process with xdb, but could not get the server to breakpoint.
We sent the secd process a SIGSEGV signal and got the following trace.
It may or may not be meaningful, but here's hoping...

NB0808 (Monday night's)

HP-UX : secd, cdsd
OSF1:   client
OSF1:   client, ntp provider

>t
 0 accept@libc + 0x00000008 (hp-ux export stub)
 1 cma_accept@libdce + 0x00000438 (0x5, 0, 0x4014176c, 0x400bbd7c)
 2 rpc__socket_accept@libdce + 0x0000004c (0x5, 0, 0x401416f0, 0)
 3 rpc__cn_network_select_dispatc + 0x00000218 (0x5, 0x400cc9e8, 0x1, 0x401416
80)
 4 lthread_loop@libdce + 0x000002c0 (0x40141490, 0, 0, 0)
 5 lthread@libdce + 0x0000010c (0x7aff4220, 0x7af560d8, 0x40042420, 0x7)
 6 cma__thread_base@libdce + 0x0000021c (0x40042420, 0, 0, 0)
 7 cma__thread_start1@libdce + 0x0000004c (0x40042420, 0, 0, 0)
 8 cma__thread_start0@libdce + 0x00000008 (0x40042420, 0, 0, 0)
 9 cma__thread_start0@libdce + 0x00000008 (0x40042420, 0, 0, 0)
 .
 .
 >lr $a
 $arg0     = 0x5a88
 $arg1     = 0x7ffe6000
 $arg2     = 0x5a88
 $arg3     = 0x7aff4854

 >lr $r
 $r0       = 0
 $r1       = 0x1c2000
 $r2       = 0x8008852b
 $r3       = 0
 $r4       = 0
 $r5       = 0
 $r6       = 0
 $r7       = 0
 $r8       = 0
 $r9       = 0
 $r10      = 0
 $r11      = 0
 $r12      = 0
 $r13      = 0
 $r14      = 0
 $r15      = 0
 $r16      = 0
 $r17      = 0
 $r18      = 0
 $r19      = 0x7af37238
 $r20      = 0x24b5
 $r21      = 0x40141ea0
 $r22      = 0
 $r23      = 0x7aff4854
 $r24      = 0x5a88
 $r25      = 0x7ffe6000
 $r26      = 0x5a88
 $r27      = 0x400299d0
 $r28      = 0x1
 $r29      = 0x1
 $r30      = 0x40141b60
 $r31      = 0x8008852b
 $ret0     = 0x1
 $ret1     = 0x1

 >p *($pc - 16)\20i
 0x80088518  LDO -128(30),30
 0x8008851c  BREAK       0,0
 0x80088520  BL  _fp_status+0040,2
 0x80088524  OR  0,0,0
 0x80088528  LDW -24(0,30),2
 0x8008852c  LDSID       (0,2),1
 0x80088530  MTSP        1,0
 0x80088534  BE,N        0(0,2)
 0x80088538  BL  _fp_status+0028,2
 0x8008853c  OR  0,0,0
 0x80088540  LDW -24(0,30),2
 0x80088544  LDSID       (0,2),1
 0x80088548  MTSP        1,0
 0x8008854c  BE,N        0(0,2)
 0x80088550  BL  _fp_status+0008,1
 0x80088554  ADDIL       0xfffae000,1
 0x80088558  LDO 1212(1),1
 0x8008855c  BV,N        0(1)
 0x80088560  STW 19,-28(0,30)
 0x80088564  LDIL        0xc0000000,1

[8/11/94 public]

The spinning secd process appears to be unrelated to the "mismatched seal"
errors; please open a separate defect for that.

(I have a vague memory of seeing secd spinning in a loop calling accept()
in one of our product versions of DCE; I'll go digging for that fix and
annotate the new defect with that info.  I think it was either a threads
bug or a CN bug..).

[8/18/94 public]

This may be superfluous information at this point, but while I was reading
mail, I noticed the following message on my HP server screen, more or less
simultaneously with a mismatched seal 0 message on the client, followed 
shortly thereafter by a mismatched seal 0 message on the server.  The cell
appears to be operational. (dce.ps is successful on all nodes.)

1994-08-18-09:00:47.761-04:00I1.446 cdsclerk(7593) ERROR cds general clerk_bind.c 638 0x403f0fe8
Routine sec_rgy_pgo_is_member(3sec) failed : status = 387064111.

[8/18/94 public]
status = 387064111 is "invalid credential handle", FYI.

[8/19/94 public]
Fix submitted by Greg in the latest drop.



CR Number                     : 11410
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : sec
Subcomponent Name             : secd
Short Description             : dce_login being denied on SVR4 in preauth, when they should not be
Reported Date                 : 7/25/94
Found in Baseline             : 1.1
Found Date                    : 7/25/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : Don't know
Sensitivity                   : public

[7/25/94 public]

On the SNI SVR4 machine, dce_login is failing with 'invalid passwd'.  The
routine do_as_req.c:process_as_req() in secd is failing with a retval
of KDC_PREAUTH_FAILED.

This lowest level function that seems to be returning the failure
is preauth.c:krb5_verify_padata()  from which the status code value
336761036 (Generic Preauth Failure - dce/krb ) is being bubbled back up.  
We do not have symbols in this particular module so there are no more 
details on the cause of the status code.  This can be gotten if necc.

[7/25/94 public]
Downgrading to 1 because we are not seeing the problem on mainline
platforms.

[8/9/94 public]
Per the above stmt that more info can be gotten if necc:  Yes, it is necessary
since it's not reproducible on any of the 3 available platforms.  Is this still
reproducible?  I'm downgrading it to C2 because it's not reproducible on any
of the DCE1.1 reference platforms and may just be a porting bug (it's not
holding up ref platform work like our other p0 and p1 bugs are).  Please let
us know if this is still happening on the SNI platform.

[8/9/94 public]
Due to a high rate of births among employees and spouses of employess at
SNI, this one has been on hold a bit...

Parul, we need a build with symbols in at least the ./krb5 subdirectory.  
Althoouh, if you have space, it might be helpful to do all of security 
with symbols.  Then its just a matter of gdb'ing with a breakpoint
in krb5_verify_padata() and stepping until something interesting happens.

I was talking with Maryann Hondo (honda@apollo.hp.com) about this.

[8/29/94 public]
Still no answer to my question of 3 weeks ago as to whether this is still
reproducible or not.  Has dce_login really been broken for a month at SNI?

[8/29/94 public]
I just spoke with Parul (who works for SNI) and he has got dce_login working
currently with mods in his sandbox. He will update this CR with specific
details. He is chasing rgy_edit core dump problem (now that dce_login
works!! for him)

[08/29/94 public]
Sorry everybody for not getting to this bug report sooner. High birthrate
did not affect this :-). Somehow, I'm not getting relevant OT's by email.

Here is the complete story. The secd was dumping core when doing dce_login.
I was getting the following stack trace from secd:

(gdb) bt
#0  0x80f7cb0 in __nr_free ()
#1  0x80f705b in free ()
#2  0x80c2d54 in third_party_padata (client=0x83259d8, padata=0x826fa4c,
    reply_key=0x8325768)
    at ../../../../../src/security/krb5/kdc/kdc_preauth.c:341
#3  0x80bf650 in check_padata_type (client=0x83259d8, src_addr=0x826fae8,
    padata=0x826fa4c, pa_id=0x8325798, flags=0x8325794, reply_key=0x8325768)
    at ../../../../../src/security/krb5/kdc/do_as_req.c:160
#4  0x80c07ab in process_as_req (request=0x8427940, from=0x8326690,
    response=0x8326674) at ../../../../../src/security/krb5/kdc/do_as_req.c:612
#5  0x80bf3de in dispatch (pkt=0x8326678, from=0x8326690, response=0x8326674)
    at ../../../../../src/security/krb5/kdc/dispatch.c:116
#6  0x808ba89 in rsec_krb5rpc_sendto_kdc (h=0x84189d0, len=563,
    msg=0x8426610 "j\2000\200!\003\002\001\005"\003\002\001\n#\2000\2000\200!\00
3\002\001\a"\200\004\202\001\2120\200 \200\004\201qa\2000\200 \003\002\001\005!\
006\e\004test"\0310\027 \003\002\001\001!\0200\016\e\006krbtgt\e\004test#\2000\2
00 \003\002\001\001!\003\002\001\001"\200\004\201(\205!#AAv^\236<\235UW\\223\004
c\t\023MjGBZH\205\210\006[;g\231-f\f\004R\030%T\221ryiM5Wika]GcOE\200;\004+c\002
s;~\211n1\220\r,@~R\003\204}\036g(p\226", out_len=4096, resp_len=0x83269a0,
    out=0x8426868 "", st=0x832699c)
    at ../../../../../src/security/server/rs/rkrb5rpc.c:80
#7  0x8074a10 in op0_ssr (h=0x84189d0, IDL_call_h=0x8369354,
    IDL_elt_p=0x8326c98, IDL_drep_p=0x8467b60,
    IDL_transfer_syntax_p=0x8369550, IDL_mgr_epv=0x8106fb8,
    IDL_status_p=0x8326c74) at krb5rpc_sstub.c:200
#8  0x801adec4 in rpc__cn_call_executor ()
#9  0x80192486 in cthread_call_executor ()
#10 0x8010971b in cma__thread_base ()
(gdb)

I applied the following fixes to my code:

File:./krb5/lib/mvr/decode.c - added memsets after mallocs to avoid bad frees.
< new
> old

51d50
< #include <sys/types.h>
53d51
< #include <string.h>
77,79c75
<
<     memset((void *)temp, 0, (size_t)tempsize);
<     memset((void *)res, 0, (size_t)ressize);
---
>

File:./krb5/lib/mvr/krb5-glue.c - This was a good one. I picked it up from
one of the submissions.
< new
> old

1189c1189
<                 ret = (krb5_data *) malloc(sizeof(krb5_data));
---
>                 ret = (krb5_data *) malloc(sizeof(krb5_data *));

File:./client/login/sec_login_pvt.c
< new
> old

1782c1782
<     *unix_projlist = (signed32 *) malloc(num_groups * sizeof(signed32));
---
>     *unix_projlist = (long *) malloc(num_groups * sizeof(signed32));
4730c4730
<                 memcpy(ncname, ptr+1, len-1);
---
>                 memcpy(ncname, ptr+1, len);

The last one I picked-up from Abby home directory.

Currently, dce_login is working but rgy_edit core dumps trying to add
accounts for CDS entries. Unfortunately, I'm not getting a good stack
trace. I've found one possible culprit. However, this bug can be closed
after I submit the fixes.

[8/29/94 public]
Please note: The above problem in krb5-glue.c has already been found, fixed
and submitted (on 8/25).  The other two do look like problems that are still
open.

[9/1/94 public]
Yes, krb5-glue.c fix is something that I noticed in someone's submission and
thought that it would be relevant to my problems with dce_login.

After my recent trials I conclude that we do not need to change the decode.c
for clearing the malloc'ed memory. My secd stays up without that fix. It must
be the krb5-glue.c fix that helped correct the problem.

[2/2/96 public]
Closed as it was fixed in 1.1 already.



CR Number                     : 11379
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : move acl_edit/svr_example to test area
Reported Date                 : 7/21/94
Found in Baseline             : 1.1
Found Date                    : 7/21/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : svr_example
Sensitivity                   : public

[7/21/94 public]

Move src/security/client/admin/acl_edit/svr_example to
src/test/security/acl_edit/svr_example since svr_example
is being used by the functional and system tests.

[7/21/94 public]

Sorry, accidentally made this a dupe.  It has now been brought back to
life.



CR Number                     : 11376
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : Const qualifiers should be taken out
Reported Date                 : 7/21/94
Found in Baseline             : 1.1b12
Found Date                    : 7/21/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : security/gssapi/gssapi-supp.c
Sensitivity                   : public

[7/21/94 public]

When the *_KRBV5_DES_desc variable addresses are assigned to the gss_OID
type pointer variables, they are type-casted to "const gss_OID". This
causes the link error when building the shared library, libdce.sl, from the
objects compiled with the +ESlit c89 option on HP-UX. The +ESlit option
places string literals and const-qualified data into read-only memory
($TEXT segment). (The ANSI-C allows the compiler implementor to do this for
const-qualified data, though the const pointer-type vs. pointer-type const
is confusing.) Since the *_KRBV5_DES_desc variable addresses need to be
relocated when the shared library gets loaded and the linker can't generate
the loader address fixup for the read-only data, the link fails. (Don't
blame the compiler. It knows that it generating PIC, but not sure if it
going to be a part of the shared library. :-)

[8/23/94 public]

const qualifiers removed from all OID components except the gss_OID_desc
objects.



CR Number                     : 11373
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krpc
Short Description             : Submit KRPC and dfsbind big auth changes
Reported Date                 : 7/20/94
Found in Baseline             : 1.1
Found Date                    : 7/20/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : security/idl/sec_authn.idl, security/helper/auth_helper.c, rpc/runtime/krbdgsrv.c, rpc/kruntime/sec_authn_krpc.c
Sensitivity                   : public

[7/20/94 public]
Submit changes to get the rest of the auth info message in user space if the
message is larger than the shared memory buffer between kernal and dfsbind.

[7/26/94 public]
Files submitted.  Marked 'fix'.



CR Number                     : 11370
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11700
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd -locksm did not repair
the cell, did a core dump in the middle, cell left disrepaired.
Reported Date                 : 7/20/94
Found in Baseline             : 1.1b12
Found Date                    : 7/20/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : security/server/rs/rs_auth.c security/idl/sec.sams
Sensitivity                   : public

[7/20/94 public]


USING BL-12
Secd Server: RIOS

While waiting for OT 11108 to be fixed, I decided to do some
hand tests...
I followed the steps described int the Admin Guide, chapter 28,
to bring secd in locksmith mode.

Using rgy_edit, I changed the Account lifspan registry to 1 minute
(28.2.1), then stopped secd and brought it up in locksmith mode.
Here are the results:

root@cobbler>   /opt/dcelocal/bin/secd -locksmith master_admin
Setting policy account lifespan to 1117 minutes (or 18 hours or 0 days)
Setting locksmith account to expire in 60 minutes
Registry: Fatal Error - Replica cannot get host identity
 at line 487 of file
/project/dce/build/dce1.1-snap/src/security/server/rs/rs_main.c -
0x14129017 - Password has expired (dce / krb)
IOT/Abort trap(coredump)

After this happened, I could not do anything. I had to reconfigure.

[8/22/94]
Basicly I tried to follow the above steps, (less the time change)
on an HPUX system.  This might be a duplicate, but I have to check.


 0 dce_svc__debug@libdce + 0x0000004c (0, 0x4, 0x1, 0x40022f5c)
 1 dce_aud_start_with_pac (event = 275, pac = 0x403104c8, address =   00000000, options = 0, outcome = 4294967295, ard = 0x4025a6f4, status = 0x4025a710)    [/net/allergy/disk3/lastgoodbuild/src/security/audit/libaudit/evt_write.c: 304]
 2 dce_aud_start_with_name (event = 275, client = 0x401705d0, address =   00000000, options = 0, outcome = 4294967295, ard = 0x4025a6f4, status = 0x4025a710)    [/net/allergy/disk3/lastgoodbuild/src/security/audit/libaudit/evt_write.c: 365]
 3 dce_aud_start (event = 275, binding = 0x401714b0, options = 0, outcome = 4294967295, ard = 0x4025a6f4, stp = 0x4025a710)    [/net/allergy/disk3/lastgoodbuild/src/security/audit/libaudit/evt_write.c: 176]
 4 rs_login_get_info + 0x0000006c (0x401714b0, 0x40258850, 0x40259454, 0x40259470)
 5 op0_ssr + 0x00000264 (0x401714b0, 0x401d8048, 0x4025851c, 0x400b8b90)
 6 rpc__cn_call_executor@libdce + 0x000007c8 (0x401d8048, 0, 0, 0)
 7 cthread_call_executor@libdce + 0x000002d4 (0x40173fc8, 0x7af4f260, 0x40047b60, 0xf)
 8 cma__thread_base@libdce + 0x0000021c (0x40047b60, 0, 0, 0)
 9 cma__thread_start1@libdce + 0x0000004c (0x40047b60, 0, 0, 0)
10 cma__thread_start0@libdce + 0x00000008 (0x40047b60, 0, 0, 0)
11 dce_svc__debug@libdce + 0x0000004c (0, 0, 0, 0)


 303: #ifdef DCE_AUD_DEBUG
 >   304:     DCE_SVC_DEBUG((aud_svc_handle, aud_s_msgs, svc_c_debug1,
     305:         "dce_aud_start_with_pac: event may need auditing\n"));
     306: #endif

[8/22/94 public]
No, this is not a duplicate of 11700.  The problem you (mdf) saw above is a
duplicate of 11700, but that is not the problem that Martha opened this CR
for.  I've reopened this and marked it dependent on 11700 instead of a dup
of it (in other words, 11700 needs to be fixed first, so you can reproduce
the real problem this CR was created for).  The locksmith feature was added
so that you can fix bad changes to passwords or lifetimes, and the above
seems to show that you can't use it because secd itself can't even come up
(not even in locksmith mode) if those properties are set too short.  This is
a serious problem that needs to be fixed after 11700 is out of the way.

[8/24/94 public]

Additonal comments, from defect 11815

The account lifespan policy applies to all accounts in a cell.  And when
this cell-wide policy and the account expiration date differ, the
stricter lifespan applies.  Unfortunately, this policy applies to
all accounts in a cell, including the accounts used by dce, such as
dce-rgy.  But when the dce-rgy account expires, the registry becomes
unavailable when the cell is restarted, and the cell is basically broken.
Only running secd in locksmith mode can recover it.

Setting the account lifespan to anything other than "forever" 
effectively limits the life of the cell to that value.  This is because
there is no way to overrride this policy in an individual account that
really needs to exist forever in order for the cell to function.

[8/29/94 public]
Although I am not "pleased" with the solution, (nothing prevents
bogus values from being set), which would force the running of 
secd with the -locksmith option.  Locksmith mode now reset's the values
of the following principals:	locksmith, dce-rgy, and cell, that
was preventing the repair of the cell.



CR Number                     : 11366
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : can secd chdir() to well known directory?
Reported Date                 : 7/20/94
Found in Baseline             : 1.1
Found Date                    : 7/20/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/rs/rs_proc.c
Sensitivity                   : public

[7/20/94 public]

Can secd chdir ("/opt/dcelocal/var/adm/security/similar/to/the/cds/daemons")
so that core dumps are easily and reliably found?

[ sekhar 8/7/94 public ]

I just fixed this locally here at HP. 

secd will change directory to /opt/dcelocal/var/security ( 
not /opt/dcelocal/var/security/adm ) - but only if secd
running is the background . So if secd core dumps , the core 
dump will be in 

a.  /opt/dcelocal/var/security ( when running in background ) 
b.  the current directory ( when running in the foreground).
    ( e.g when run with -d option or in locksmith mode ).

[ sekhar 8/12/94 public ]

Fixed by code drop done today by mdf .



CR Number                     : 11363
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : core smoketest hung ( secd core dumping, core was mangled)
Reported Date                 : 7/20/94
Found in Baseline             : 1.1
Found Date                    : 7/20/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : kdc_preauth.c
Sensitivity                   : public

[7/20/94 public]


Core Smoketest hung


Output from core smoketest

sif/u1/RAT_tools/do_automatic_test.log

S:****** Starting cdsd...

sif/u1/RAT_tools/run_commands.log

Sorry.
User Identification Failure. - Registry server unavailable (dce / sec)

sif:/tmp/dce_config.log

S:****** Starting cdsd...
D:         Executing: cdsd -a

[7/20/94 public]

secd is gone.  Happens on HP as well.  Last attempt to recreate left a
mangled core.  Will re-try on HP again to attempt to get good core.

NOTE: OT 11365 is another secd core dump but this is happening after
the cell is up and a good core was recovered.  Until we know its the same
problem, I'd rather leave them as 2 CR's....

[7/20/94 public]
Perhaps obvious, but... we need more information before anyone here
can even begin to take a look at this one.

[7/20/94 public]


We reran the core smoketest for a third time on sif and obtained
more concrete info. It should be noted that these errors were
not consistent across the three tests done today on sif. The other two
hung (no output for 15 minutes or more) after starting the cdsd. 

1994-07-20-10:38:11.687-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:38:47.694-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:39:23.691-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:39:59.688-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:40:35.695-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:41:11.692-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:41:47.689-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:42:23.696-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:42:59.693-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:43:35.690-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:44:11.687-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:44:47.694-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:45:23.692-04:00I----- cdsclerk(728) ERROR cds general clerk_bind.c 483 0x004e7d88
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
1994-07-20-10:45:23.702-04:00I----- cdsd(727) FATAL cds server dns_service_ncl.c 534 0xa447fc70
Can't read root replica, status =  DNS_NOCOMMUNICATION
ERROR:   cdsd failed to start
+ cd /u1/RAT_tools
+ rm -f /u1/RAT_tools/run_commands.log
+ /u1/opt/dcelocal/bin/dce_login cell_admin -dce- -exec /u1/RAT_tools/run_commands
+ 1> /u1/RAT_tools/run_commands.log
+ cat /u1/RAT_tools/run_commands.log
Sorry.
User Identification Failure. - Registry server unavailable (dce / sec)
+ + hostname

[7/20/94 public]
Unfortunately, this addt'l info doesn't add too much to the picture.
status = 387063931. is 'Registry Server Unavail.' ie, secd has crashed.

I have been trying to get a good core dump on this one.  The problem
occurs everytime on 486 at config, gdb core is mangled.  I will try
to build a full symbol secd on 486 tonight.

The HP core is periodic and almost nonsense.  Finally got one that
has a normal looking stack, although this looks like simple
startup code to me.....

 1 _raise@libc + 0x00000024 (0x6c696420, 0x696e7661, 0x62202d20, 0x32323030)
 2 _abort@libc + 0x00000078 (0x40035c80, 0, 0, 0)
 3 rs_task_fatal + 0x0000002c (0x1712200b, 0x3, 0x1, 0x11ed2286)
 4 go_away + 0x00000034 (0x1712200b, 0x4030fe20, 0x8c, 0x402)
 5 rs_util_fatal_st + 0x00000124 (0x1712200b, 0x4030fe20, 0x40004c4c, 0x203)
 6 rs_ns_server_register + 0x00000370 (0x4030f0e0, 0x7af5a068, 0x4004d870, 0x14)
 7 cma__thread_base@libdce + 0x0000021c (0x4004d870, 0, 0, 0)

[7/20/94 public]
Another occurrence of a crash from last night's nightly build on an HP
during cell config.  

The stack below looks very similar if not identical to the one reported 
in OT 11342 which was closed with a one line fix to kdc_preauth.c.  This
seems very strange.  The stack and add'l info follow:

 0 free@libc + 0x00000008 (hp-ux export stub)
 1 cma_lib_free@libdce + 0x00000284 (0x40035c80, 0x40049fe0, 0, 0)
 3 cma_lib_free@libdce + 0x00000284 (0x40035c80, 0x40460588, 0x40460568, 0)
 4 cma_lib_free@libdce + 0x00000148 (0x40309078, 0x40253f10, 0x4002ae6a, 0x14)
 5 third_party_padata + 0x00000b90 (0x40253c20, 0x4037d8c8, 0x40253f10, 0x1ff09c
0)
 6 check_padata_type + 0x0000005c (0x40253c20, 0x403ec7f8, 0x4037d8c8, 0x40253ee
8)
 7 process_as_req + 0x00001718 (0x403e6840, 0x40252b48, 0x40252b68, 0)
 8 dispatch + 0x0000036c (0x40252b60, 0x40252b48, 0x40252b68, 0x403e208c)
 9 rsec_krb5rpc_sendto_kdc + 0x00000100 (0x4045e488, 0x27f, 0x4045fdc0, 0x1000)
10 op0_ssr + 0x0000021c (0x4045e488, 0x4045c490, 0x4025253c, 0x40252520)
11 rpc__dg_execute_call@libdce + 0x00001ba4 (0x4045c490, 0, 0, 0)
12 cthread_call_executor@libdce + 0x000002d4 (0x4016de58, 0x7af5a068, 0x40049fe0
, 0xf)
13 cma__thread_base@libdce + 0x0000021c (0x40049fe0, 0, 0, 0)
14 cma__thread_start1@libdce + 0x0000004c (0x40049fe0, 0, 0, 0)
15 cma__thread_start0@libdce + 0x00000008 (0x40049fe0, 0, 0, 0)
16 cma__thread_start0@libdce + 0x00000008 (0x40049fe0, 0, 0, 0)

>lr $a
$arg0     = 0x40309078
$arg1     = 0x1
$arg2     = 0x400b9d68
$arg3     = 0
>lr $r
$r0       = 0
$r1       = 0x24b5
$r2       = 0x800b27c3
$r3       = 0x7b0127b0
$r4       = 0x2
$r5       = 0x40309074
$r6       = 0
$r7       = 0x652d7264
$r8       = 0
$r9       = 0
$r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      = 0x7b007948
$r20      = 0x177dc000
$r21      = 0x800b27b8
$r22      = 0x7afeef98
$r23      = 0
$r24      = 0x400b9d68
$r25      = 0x1
$r26      = 0x40309078
$r27      = 0x4002c7c0
$r28      = 0x177db009
$r29      = 0x4045e855
$r30      = 0x402545a0
$r31      = 0x812063cf
$ret0     = 0x177db009
$ret1     = 0x4045e855
>p *($pc-16)\20i
0x800b27b0  BV  0(2)
0x800b27b4  LDWM        -192(0,30),3
0x800b27b8  BL  _fp_status+0018,2
0x800b27bc  OR  0,0,0
0x800b27c0  LDW -24(0,30),2
0x800b27c4  LDSID       (0,2),1
0x800b27c8  MTSP        1,0
0x800b27cc  BE,N        0(0,2)
0x800b27d0  STW 2,-20(0,30)
0x800b27d4  STWM        3,192(0,30)
0x800b27d8  STW 4,-188(0,30)
0x800b27dc  STW 5,-184(0,30)
0x800b27e0  STW 6,-180(0,30)
0x800b27e4  STW 7,-176(0,30)
0x800b27e8  STW 8,-172(0,30)
0x800b27ec  STW 9,-168(0,30)
0x800b27f0  OR  26,0,4
0x800b27f4  STW 19,-32(0,30)
0x800b27f8  COMIBT,=    0,26,_fp_status+026c
0x800b27fc  OR  0,0,6

[7/21/94 public]
Maryann Hondo and Rob Baum looking at this.

[7/22/94 public]
Submitted change to nightly.  Marked fix.



CR Number                     : 11362
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : /test/functional/security/gssapi/ts
Short Description             : don't know how to make tet_code
Reported Date                 : 7/20/94
Found in Baseline             : 1.1
Found Date                    : 7/20/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : see OT 11328
Sensitivity                   : public
This ot may be the same as OT 11233
Please review and cancel if appropriate

[7/20/94 public]
[ /test/functional/security/gssapi/ts at 04:34 (AM) Wednesday ]
makepath ts/. && cd ts &&  exec make MAKEFILE_PASS=BASIC     build_all
ts: created directory
make: don't know how to make build_all (continuing)
make: don't know how to make tet_code (continuing)

[7/20/94 public]
Problem due to a stalled bsubmit (fix for OT 11328) from 7/19.
Aborted & re-submitted.

[7/20/94 public]
Files have arrived.



CR Number                     : 11349
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : build
Short Description             : rs_attr_schema cstub "problems"
Reported Date                 : 7/18/94
Found in Baseline             : 1.1b11
Found Date                    : 7/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : security/idl/Makefile, etc.
Sensitivity                   : public

[7/18/94 public]

There seems to be a problem with rs_attr_schema's cstub and the way it is
(or isn't?) included in libdce.  We haven't seen it at OSF, but have heard
word that it's blocking static builds on other platforms.  Should the
cstub file be in libdce?  If so, it should be compiled with -cepv and the
generated .h file should be exported.  It seems that this isn't quite
happening right.

Sorry to be so vague ("it seems that"... ick) but perhaps an buildmeister
at HP can take a look at what's going on, since Jim Truitt up in Chelmsford
is getting bit by this.

[7/20/94 public]

Per Anne Hopkin's this is being assigned to Ping Wang.  Here is the email
that she had sent on the subject:

Date: Mon, 18 Jul 94 16:56:05
Subject: Re: OT dce CR 11349 created: rs_attr_schema cstub "problems"
To: Rich Salz <rsalz@osf.org>
Cc: dce-ot-sec@osf.org, rsalz@osf.org, truitt@apollo.hp.com
In-Reply-To: Rich Salz <rsalz@osf.org>, Mon, 18 Jul 94 15:52:33 -0400

....

Firstly, clients like dcecp should generally be calling
only client interfaces like dce_attr_sch.idl or sec_rgy_attr.idl.
These client interfaces belong in libdce.  Since Jim
Truitt has to call both dce_attr_sch and sec_rgy_attr_sch
calls in support of schema operations, he should only
have to link with libdce.  The problem is that the
dce_attr_sch client agent probably isn't in libdce yet
because Ping only started it last week.

I understand that the dcecp dced commands were coded
to the rs_attr wire i/f as an intermediate step until 
the client i/f was available.  If this has to be done,
then the dcecp Makefile must build its own client copy of
rs_attr.h with the -cepv flag (in order to get the
rs_attr client EPV defined) and it must build the
rs_attr client stub (both *_cstub.c and *_cstub.o)
and then link with *_cstub.o.

On the other hand, for schema stuff, Jim shouldn't
be coding to rs_attr_schema at all (unless you've
decided to punt the dce_attr_sch.idl client agent
implementation.

[7/28/94 public]
Fixed with the dce_attr_sch i/f submission on last 
friday (7/22/94).

[07/29/94 public]
Built; closed.



CR Number                     : 11345
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Need SVC in SEC
Reported Date                 : 7/18/94
Found in Baseline             : 1.1
Found Date                    : 7/18/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : Quite a few files.
Sensitivity                   : public

[7/18/94 public]

The next HP security drop is scheduled to have SVC logging.  This OT
is a place holder.

[mdf 8/4/94 public] 
Submit has been made.



CR Number                     : 11342
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd core dump on HP during
cell config
Reported Date                 : 7/18/94
Found in Baseline             : 1.1
Found Date                    : 7/18/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : ./security/krb5/kdc/kdc_preauth.c
Sensitivity                   : public

[7/18/94 public]


Output from do_automatic_test.log

:****** Waiting for node self-identity to be established...
login failure.
  message from login:
  
  Sorry. Password Validation Failure. - Cannot contact any KDC for requested realm (dce / krb)
Failed to log in to DCE.
        Press <RETURN> to continue, CTRL-C to exit: 


Registry server unavailable
Registry server unavailable
Registry server unavailable




output from dce_config.log

DEBUG:     Executing: x_exit(login failure.
             message from login:
             
             Sorry. Password Validation Failure. - Cannot contact any KDC for 
           requested realm (dce / krb)
           Failed to log in to DCE.)
V:         User query: Press <RETURN> to continue, CTRL-C to exit: 




We rebooted the system and reran the smoketest with the same results.

[7/18/94 public]

Could you explain why is this a System Test problem? 
If so, which System Tests are failing?

[7/18/94 public]
I'm somewhat familiar with the smoketests - I'll take
a look.

[7/18/94 public]
Martha, the reason we assign it to systest is because it
seems liket the closest component name that we are given
to choose from.  Would it be worth having Bruce add a 
new component name = smoketest, which is really what it
should be assigned to?

[7/18/94 public]

Perhaps, the compoment should be unknown until the responsible
Eng. figures out what caused the failures. A question to ask is
what component are the NB smoketest part of? The bld component, 
utils..? It is definetely not System Tests, this is just my 
opinion.

[7/18/94 public]
Okay - looks like a real problem (ie. not a script problem -
reproduced by hand). The 486 single machine cell config with
today's build passed but the HP one is not. Secd apparently
disappears so that sec_clientd cannot do his thing. Couldn't
find a coredump. Handing off to Rob Baum.

[7/18/94 public]
Sorry Rob - should've reproduced on a different machine - the
smoketest machine root partition is full so there was no room
for the /krb5 directory - not clear that secd should just
(silently?) exit under these conditions or whether a better
error message is possible but this is definitely no longer an A0.
I'm trying to clean up the smoketest machine root partition now -
let me know where you want to go with this one - I'll update when
I've successfully config'd the smoketest machine (I've successfully
config'd a system test HP with today's build).

[7/18/94 public]
The code you currently have still has the pre-DCE1.1 error messages...
With the old stuff, it tried to spit out an error to the tty it was started
in, before exiting.  The code submitted on Friday was the latest stuff here
as of early last week (froze it and spent a couple days building/testing).
The serviceability work was being merged into our mainline here at the end
of last week and early this week and will handle getting these errors logged.
I've changed this to be an enhancement request asking for the secd svcability
functionality (which addresses the problem you had of not knowing why secd
was exiting).  The next big HP security submission should include the secd
serviceability changes.

[7/18/94 public]
Switching this CR back to its original self and making a new OT for the
lack of SVC in SEC.  

The problem of the secd core'ing on configuration of the cell has not gone
away.  It is just imtermittent.  I was able to config once, so was Gail but
more than 50% of the time the config fails.  The secd process is dumping
core.  I will append a core dump momentarily.....

[7/18/94 public]
Hmm, lets see how many times this CR can be updated in one day :-).
Along with the core dump info, can you list the amount of free disk space in /
and the amount of swapspace (/etc/swapinfo -t) available after it dies?  Also
let us know if the traceback from the core files is the same each time it
dies.

[7/18/94 public]
I promise this will be the last time I edit the CR today.  The stack trace from
xdb is attached.  The partition from which the dce_config was run had
more than 20Meg.  And the free swapspace was over 100Meg.  Stack always
the same.

The SEGV in free() would suggest free'ing a bad pointer.  This might help
explain the intermittency of the crash and why the 486 is more reliable.  The
486/GNU gcc platform is more lenient on SEGV'ing with code doing bad things
with malloc/free.  

The kdc_preauth.c:third_party_padata() routine where the free() SEGV is being
called from attempts to clean up malloc'ed memory.  The code is a little 
complicated due to all the goto cleanN; labels.  Maybe some pointer is begin 
free'ed twice?  Maybe free'ing non-malloc'ed memory?

Somewhat related question:  Is it possible for secd to chdir() to a well
known directory so that core dumps will always end up in the same place?
Finding secd cores is sometimes a chore in itself...

SECD CORE from xdb:

 0 free@libc + 0x00000008 (hp-ux export stub)
 1 cma_lib_free@libdce + 0x00000284 (0x40035be0, 0x40049fe0, 0, 0)
 2 cma_lib_free@libdce + 0x00000284 (0x40035be0, 0, 0, 0)
 3 cma_lib_free@libdce + 0x00000284 (0x40035be0, 0x40373870, 0x403738d0, 0)
 4 cma_lib_free@libdce + 0x00000148 (0x4002a62c, 0x40253e50, 0x4002add2,
0x14)
 5 third_party_padata + 0x00000b90 (0x40253b60, 0x4030bd90, 0x40253e50,
0x1ff09c0)
 6 check_padata_type + 0x0000005c (0x40253b60, 0x40372578, 0x4030bd90,
0x40253e28)
 7 process_as_req + 0x00001718 (0x40372328, 0x40252a88, 0x40252aa8, 0)
 8 dispatch + 0x0000036c (0x40252aa0, 0x40252a88, 0x40252aa8, 0)
 9 rsec_krb5rpc_sendto_kdc + 0x00000100 (0x40300260, 0x243, 0x40371050,
0x1000)
10 op0_ssr + 0x0000021c (0x40300260, 0x40167320, 0x4025251c, 0x4030cdc0)
11 rpc__cn_call_executor@libdce + 0x000007c8 (0x40167320, 0, 0, 0)
12 cthread_call_executor@libdce + 0x000002d4 (0x4016def0, 0x7af5a068,
0x40049fe0, 0xf)
13 cma__thread_base@libdce + 0x0000021c (0x40049fe0, 0, 0, 0)
14 cma__thread_start1@libdce + 0x0000004c (0x40049fe0, 0, 0, 0)
15 cma__thread_start0@libdce + 0x00000008 (0x40049fe

[7/19/94 public]
Well I'm actually glad that this resulted in all this discussion - very
good transfer of information and very interesting estimates with respect
to pass/fail rate of configuring! But just to get back to the catalyst for
all this... we will be adding a check to our smoketests script to catch
the out of space in root partition problem.


[ mob public 7/19/94]
We believe this is a problem related to an incomplete submission
of the intercell fix which was a bug at the end of 1.1 Beta but
never got fixed for Beta.  This fix was submitted with other changes
in the first merge of our code to OSF.  We will provide additional
information as it becomes available.

[7/19/94 public]

Bad free() fix put into nightly build.  Will ask systest to test out
thoroughly tomorrow.

[7/20/94 public]
Other secd cores are occuring but the stack looks different.  See 
OT #11363, 11365.  Closing this one.



CR Number                     : 11340
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000, hppa,i486
S/W Ref Platform              : osf1,aix,hpux
Component Name                : sec
Subcomponent Name             : test/security/tet-tests/tools/updat				             e_tet_scen
Short Description             : No such file or directory
Reported Date                 : 7/18/94
Found in Baseline             : 1.1
Found Date                    : 7/18/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : Makefile
Sensitivity                   : public

[7/18/94 public]


../obj/hp800/test/security/tet-tests/tools/update_tet_scen ../obj/hp800/test/security/tet-tests/tet_scen /ts/client/pwd_mgmt/pwd_gen pwd_gen-tc
make: ../obj/hp800/test/security/tet-tests/tools/update_tet_scen: No such file or directory
make: don't know how to make ts-common.o (continuing)
*** Error code 1

[7/18/94 public]

Fix.  Makefile changed submitted by HP.



CR Number                     : 11339
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : /src/test/security/api/moretests/dl				             g_intermediary.c
Short Description             : line 565: error 1523: Too many init                                             ializers
Reported Date                 : 7/18/94
Found in Baseline             : 1.1
Found Date                    : 7/18/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : ./test/api/moretests/dlg_test.idl
Sensitivity                   : public

[7/18/94 public]

cc: "/project/dce/build/dce1.1-snap/src/test/security/api/moretests/dlg_intermediary.c", line 565: error 1523: Too many initializers.
*** Error code 1

[7/18/94 public]

HP submitted missing change to .idl file.



CR Number                     : 11333
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kdc
Short Description             : KDC doesn't support forwardable tickets
Reported Date                 : 7/15/94
Found in Baseline             : 1.0
Found Date                    : 7/15/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[7/15/94 public]

The kerberos server in secd doesn't support forwardable tickets.

Third-party kerberos apps (e.g., telnet, rlogin, rsh) which use forwardable
tickets are somewhat unhappy with this.

This should be fairly straightforward to fix.

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 11331
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : kerberos cred/keytab file format change
Reported Date                 : 7/15/94
Found in Baseline             : 1.0
Found Date                    : 7/15/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : 
	security/krb5/lib/{ccache,keytab}/file/*
	security/client/key_mgmt/seckey_{get,list}.c	
	file/security/dfsauth/dfsauth_keytab.c
Sensitivity                   : public

[7/15/94 public]

DCE is (still) using the "old, moldy" V5 beta 1 kerberos key table and
credential file formats.

For better same-host interoperability with the kerberos reference
implementation, we should pick up the credential cache and keytab file
modules out of MIT kerberos V5 beta 4.1

These modules will continue to read the old format, but will read and write
the new format by default.

Since DCE1.1 on-disk credentials are in an incompatible format from DCE
1.0.x, it is better to take this hit now rather than later.

We may need a way to generate old-format keytabs to dcecp; we'll cross that
bridge when we come to it..

[8/26/94 public]

Fix sumbitted.



CR Number                     : 11328
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : tet codedrop
Reported Date                 : 7/15/94
Found in Baseline             : 1.1
Found Date                    : 7/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : test-gssapi.c + new files
Sensitivity                   : public

[7/15/94 public]
Codedrop of changes to "tetify" the GSSAPI test suite.  Consists of mods
to test/security/api/gssapi/test-gssapi.c to allow compilation for the tet
environment, + a new directory under test/functional/security containing
a tet test-harness.

[7/20/94 public]
Submitted new files



CR Number                     : 11323
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_clientd
Short Description             : redefined macros
Reported Date                 : 7/15/94
Found in Baseline             : 1.1
Found Date                    : 7/15/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : src/security/h/scd_loc.h
				src/security/client/login/sec_login_file_loc.h
				src/security/server/sec_clientd/sec_clientd.c
				src/security/server/sec_clientd/scd_thread.c
Sensitivity                   : public

[7/15/94 public]

The beta build produced the following warnings for redecaration
of macro names:

cc -c     -O  -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dc
elocal\" -D_BSD -DBSD -Dunix  -DHAS_STDLIB_H  -D_ALL_SOURCE -DAIX32   -I. -I/pr
oject/dce/build/dce1.110/src/security/server/sec_clientd -I../../h -I/project/d
ce/build/dce1.110/src/security/h -I../../idl -I/project/dce/build/dce1.110/src/
security/idl -I/project/dce/build/dce1.110/export/rios/usr/include   ../../../.
./../src/security/server/sec_clientd/sec_clientd.c
"/project/dce/build/dce1.110/src/security/h/scd_loc.h", line 49.0: 1506-236 (W)
Macro name EXTERN has been redefined.
"/project/dce/build/dce1.110/src/security/h/scd_loc.h", line 50.0: 1506-236 (W) 
Macro name INITVAL has been redefined.
     352  1500-010: (W) WARNING in keymgmt: Infinite loop.  Program may not sto
p.
cc -c     -O  -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dc
elocal\" -D_BSD -DBSD -Dunix  -DHAS_STDLIB_H  -D_ALL_SOURCE -DAIX32   -I. -I/pr
oject/dce/build/dce1.110/src/security/server/sec_clientd -I../../h -I/project/d
ce/build/dce1.110/src/security/h -I../../idl -I/project/dce/build/dce1.110/src/
security/idl -I/project/dce/build/dce1.110/export/rios/usr/include   ../../../.
./../src/security/server/sec_clientd/scd_thread.c
"../../../../../src/security/server/sec_clientd/scd_thread.c", line 58.0: 1506-
236 (W) Macro name pthread_equal_np has been redefined.

[07/15/94 public]
Note that for the official release sec_clientd will be moved to nosupport
and dced's secval service will be used instead.  dced does not have this
bug.

[7/29/94 public]
Closed in response to Rich's entry above.



CR Number                     : 11303
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl manager support
Short Description             : Modify all Security 
Service ACL manager names and helpstrings as described below.
Reported Date                 : 7/14/94
Found in Baseline             : 1.1b11
Found Date                    : 7/14/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b19
Affected File(s)              : security/server/rsdb/rsdb_daclmgr.c
Sensitivity                   : public

[7/14/94 public]

BACKGROUND:
 A polymorphic object, as in DCE 1.1, can be a principal name and a 
 principal directory and therefore have 2 ACL managers. 

 In "dcecp", the ACL manager name can be obtained by invoking the
 "acl show -managers" command.  The other "acl" commands can
 accept a -type option to specify the manager name.  Previously, 
 this ACL manager name was really only informational and not visible
 to the end user, but now it is.

 Below, I have compiled a list of the ACL manager names and their 
 "helpstrings" that will be displayed to the user.

CDS ACL Managers:
    GDA managment ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-gda -managers
        {GDA              Change ACL for gda management}

    CDS Server Management ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-server -managers
        {CDS Server       Change ACL for server management}

    CDS Directory entry ACL manager:
        dcecp> acl show /.:/cell-profile -managers -entry
        {Directory entry  Change ACL for CDS directory entry}

    CDS Directory ACL manager:
        dcecp> acl show /.:/hosts -managers
        {Directory        Change ACL for CDS directory}

    CDS Clearinghouse ACL manager:
        dcecp> acl show /.:/<hostname>_ch -managers
        {Clearinghouse    Change ACL for CDS clearinghouse}

    CDS Clerk management ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-clerk -managers
        {CDS Clerk        Change ACL for clerk management}


Security ACL Managers:
    Security Directory ACL manager:
	dcecp> acl show /.:/sec/principal -managers
	dcecp> acl show /.:/sec/group -managers
	dcecp> acl show /.:/sec/org -managers
        {Sec Directory    Manage directory object acls.}

    Security Principal ACL manager:
        dcecp> acl show /.:/sec/principal/<name> -managers
        {Sec Principal    Manage principal object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/principal/<princ-dir-name> -managers
	{Sec Principal    Manage principal object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Group ACL manager:
        dcecp> acl show /.:/sec/group/<name> -managers
        {Sec Group        Manage group object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/group/<group-dir-name> -managers
	{Sec Group        Manage group object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Organization ACL manager:
        dcecp> acl show /.:/sec/org/<name> -managers
        {Sec Org          Manage org object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/org/<org-dir-name> -managers
	{Sec Org          Manage org object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Replica List ACL manager:
        dcecp> acl show /.:/sec/replist -managers
        {Sec Replist      Manage the replist object acl.}

    Security Policy ACL manager:
        dcecp> acl show /.:/sec/policy -managers
        {Sec Policy       Manage the policy object acl.}

    Security Extended Attribute Schema ACL manager:
        dcecp> acl show /.:/sec/xattrschema/<name> -managers
        {Sec Attr_schema  Manage the attr_schema object acl.}


DTS ACL manager:
    dcecp> acl show /.:/hosts/<hostname>/dts-entity -managers
    {dtsd             DTSD DCE Time Service daemon}


Auditing ACL manager:
    dcecp> acl show /.:/hosts/<hostname>/aud-acl -managers
    {audit            Audit daemon ACL manager}


DCED ACL managers:

    Generic ACL managers for DCED:
	dcecp> acl sh /.:/hosts/<hostname>/self -m
	dcecp> acl sh /.:/hosts/<hostname>/config -m
        {dced-mgmt        DCED manager}

        dcecp> acl show /.:/hosts/<hostname>/config/srvrconf -managers
        dcecp> acl show /.:/hosts/<hostname>/config/srvrexec -managers
	dcecp> acl show /.:/hosts/<hostname>/config/hostdata -managers
        dcecp> acl show /.:/hosts/<hostname>/config/keytab -managers
        dcecp> acl sh /.:/hosts/<hostname>/config/attr_schema -managers
        dcecp> acl show /.:/hosts/<hostname>/config/secval -managers
        {dced-managers    DCED manager Pseudo-object}

    Server configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/srvrconf/<name> -managers
        {srvrconf         Server Configuration}

    Server execution ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/srvrexec/<name> -managers
        {srvrexec         Server Execution}
    
    Hostdata configuration ACL managers:
        dcecp> acl show /.:/hosts/<hostname>/config/hostdata/<name> -managers
        {hostdata         Host Data}

    Keytab configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/keytab/<name> -managers
        {rkeytab          Key Management}

    Extended Attribute Schema configuration ACL manager:
        dcecp> acl sh /.:/hosts/<hostname>/config/xattrschema/<name> -managers
        {attr_schema      Attribute Schema}

    Secval configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/secval/<name> -managers
        {secval           Security Validation}


DFS ACL manager:
    dcecp> acl show /.:/fs/<name> -managers
    {DFS              DFS ACL manager}


Misc:
    dcecp> acl show <application-specific ACL object>  -managers
    {general          General ACL Manager}
    Note that there is nothing DCE ships that uses this ACL manager.
    This is part of the ACL manager library for application
    developers.

____________________________________________________________
NEW GUIDELINES FOR ACL MANAGER NAMES:

We would like to enforce guidelines for all DCE ACL
managers.  These are not architectural and dcecp will accept 
any valid ACL manager names, but we would like DCE-named ACL 
managers to be named consistently and in an easily
usable manner.  Since dcecp is what will make these names
visible to a user, we are using dcecp attribute naming
conventions:

ACL manager names for all of DCE must be:
1) lowercase
2) no underscores
3) no spaces
4) 16 bytes (sizeof "sec_acl_printstring_len").
5) Choose names similiar to object command names supported in
   dcecp wherever possible.
   For example, the ACL manager name "principal" refers to
   the object that contains registry information about principals;
   /.:/sec/principal.
   Note that dcecp will allow abbreviations. For example, a user
   can specify "org" for the ACL manager name "organization".
6) Names must be unique within a component's ACL manager but not
   within DCE. 
   For example, "xattrschema" can be used for a DCED Extended
   Attribute Configuration Schema ACL object and for a Security 
   Extended Registry Attribute Schema ACL object.
7) The helpstring for an ACL manager must specify the component
   that owns or manages the objects in questions, since this 
   information cannot always be derived from the ACL manager name.
____________________________________________________________
PROPOSAL:

Below are the current DCE ACL manager names/helpstrings and their 
proposed names/helpstrings following the above guidelines.

  Old names        New names/helpstrings
--------------    ---------------------------
GDA               {gda           Global Directory Agent server}
CDS Server        {cdsserver     Cell Directory Service server}
Directory entry   {entry         CDS namespace entry ACLs}
Directory         {directory     CDS directory ACLs}
Clearinghouse     {clearinghouse CDS clearinghouse ACLs}
CDS Clerk         {cdsclerk      Cell Directory Service clerk}
Sec Principal     {principal     Registry principal object ACLs}
Sec Directory     {secdirectory  Registry directory object ACLs}
Sec Group         {group         Registry group object ACLs}
Sec Org           {organization  Registry organization object ACLs}
Sec Replist       {replist       Registry replica list object ACL}
Sec Policy        {policy        Registry policy object ACL}
Sec Attr_schema   {xattrschema   Registry extended attribute schema object ACLs}
dtsd              {dts           Distributed Time Service server or clerk}
audit             {audit         Audit server}
dced-mgmt         {dced          DCED server}
dced-managers     {container     DCED container ACLs}
srvrconf          {srvrconf      DCED server configuration object ACLs}
srvrexec          {srvrexec      DCED server execution object ACLs}
hostdata          {hostdata      DCED host data object ACLs}
rkeytab           {keytab        DCED key management object ACLs}
attr_schema       {xattrschema   DCED extended attribute schema object ACLs} 
secval            {secval        DCED security validation service}
DFS               {dfs           Distributed File Service server}
general           {generic       Generic ACL server}

[8/29/94 public]
Upgraded:  Must be fixed for DCE1.1 to conform to the ACL mgr naming policies.



CR Number                     : 11288
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Next Code drop from HP
Reported Date                 : 7/14/94
Found in Baseline             : 1.1
Found Date                    : 7/14/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : Many.
Sensitivity                   : public

[7/14/94 public]


Submitting 175 files.

[7/18/94 public]

Submission completed.



CR Number                     : 11262
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : the attribute update changes in pgo_create should be removed
Reported Date                 : 7/12/94
Found in Baseline             : 1.1
Found Date                    : 7/12/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/server/admin/rgy_edit/Makefile,eif.c,eif.h,eif_attr_schema.c,eif_attr_schema.h,eif_def.c,eif_def.h,eif_pgo.c,eif_pgo.h,ek_db.c,ek_db.h,ek_types.h,ek_util.c,ek_util.h,tty.c,tty_attr_schema.c,tty_attr_schema.h,tty_conf.c,tty_conf.h,tty_pgo.c
Sensitivity                   : public

[7/12/94 public]
The temporary and incomplete support for ERA updates that 
was put in rgy_edit should be removed for two reasons:
1. the DCECP support is complete and supercedes the 
rgy_edit support.
2. Customers of DCE 1.0.3 will find that the rgy_edit UI has
changed and may not work with their scripts anymore.
For the sake of backward compatibility, it's important
that this be fixed for DCE 1.1.

[9/1/94 public]
HP believes that this should be fixed in the mainline because the 
temporary ERA support added addtional prompts to rgy_edt.  If we don't 
remove these, it could potentially cause alot of folks already using
DCE to have to rewrite/modify existing scripts.  Therefore, we have 
bumped the priority of this defect to 1.

[9/20/94 public]
The fix for this was submitted by Sue Cuti for me on 9/9.



CR Number                     : 11228
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : description for
sec_login_refresh_identity not clear
Reported Date                 : 7/9/94
Found in Baseline             : 1.1
Found Date                    : 7/9/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_login_refresh_identity.3sec
Sensitivity                   : public

[7/9/94 public]


The description part of sec_login_refresh_identity() says "Any
administrative changes are reflected in the refreshed identity". 

This is not true. THsi function only updates the TGT, not PAC. For example,
if you add this account to an addtional group, this group change (i.e. PAC
change) will NOT reflect by refreshing with this call. Only a new DCE login
will pick up the PAC change.

I remember there was a discusion about whether we should make this fucntion
to really reflect the complete changes, and HP decided to postpone.

There may be other places in the app_gd where the description may be wrong.

[7/25/94 public]

Assigned this CR to Pam Millett (HP security writer).

[8/29/94 public]
Fixed and verified.  Verified by burati.

[09/01/94 public]
Closed bug.



CR Number                     : 11227
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kinit
Short Description             : kinit core dumps when context
not expired
Reported Date                 : 7/8/94
Found in Baseline             : 1.1
Found Date                    : 7/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : klist.c
Sensitivity                   : public

[7/8/94 public]

On all platforms, kinit core dumps.

A brief GDB session shows the PAC extracted from the net_info structure
returned by sec_login_inquire_net_info() has null realm.name and principal.name
fields.  Without checking for null, the kinit.c code attemps to strcpy
these guys to get a global name.  This is the core dump.

klist.c checks for NULL PAC fields and if so, calls sec_id_gen_name() to return
a full name.  It seems like kinit should do same.

Why is this a new problem?  Have the EPACS/creds changes affected the old 
PAC logic on the client side in that they are now created differently?

[8/1/94 public]
From an inspection of the code in the Aug 1 HP submission (not yet in
backing tree), this problem looks to be fixed.   Once the submission
is completely in, will mark 'fix'

[8/11/94 public]
Rob, can you verify that this one is fixed?  Thanks.



CR Number                     : 11177
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit_LD_OPT_LEVEL must die.
Reported Date                 : 7/5/94
Found in Baseline             : 1.1
Found Date                    : 7/5/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/client/admin/rgy_edit/Makefile
Sensitivity                   : public

[7/5/94 public]

security/client/admin/rgy_edit/Makefile contains a
bogus

rgy_edit_LD_OPT_LEVEL=

This was an HP-specific porting change which should not have gotten merged
back to the OSF, and which should be ripped out.



CR Number                     : 11157
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Code drop: Group Override Support Minor Fixups
Reported Date                 : 7/1/94
Found in Baseline             : 1.1
Found Date                    : 7/1/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : roverride.c, various others
Sensitivity                   : public

[7/1/94 public]
This cleans up a  previous code drop to support group override.  A couple
bugs are fixed in roverride.c and the tests are enhanced to give 80%+
code coverage.

[7/15/94 public]
Submission made on 7/1.



CR Number                     : 11155
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : ON OSF1, configuring a dce1.0.3
with a dce1.1 server causes secd to core dump.
Reported Date                 : 6/30/94
Found in Baseline             : 1.1
Found Date                    : 6/30/94
Severity                      : C
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec?
Sensitivity                   : public

[6/30/94 public]


I am opening this CR because Tom fixed CR# 11021 and the core dump
I reported there seems to be an unrealted to the problem that happened
at the same time.

An entry in CR 11021 says that the core dump might be related to another
bug, for which a fix will be submitted soon.

	[tatsu_s 6/28/94 public]

	I forgot to mention that secd crash is probably related 
	to OT 10876 since 1.0.x client uses 1400 bytes max message 
	size. This case is taken care of by the second MBF code drop, 
	but it didn't make it into the beta bits.


To keep a separate record of the compatibility issues, I am opening this
CR.

[7/1/94 public]
The fix for 10876 was submitted a while ago and *did* make it in
to Beta.  Seiichi (and I) don't know if the secd crash is at all
related to RPC.  This should be investigated from the security
side.  Provided, of course, this is reproducable with the fix
to 11021 in the code.

[7/6/94 public]

Installed and configured the NB to get a core dump and trace. 
The problem is not there anymore. I am closing this bug.



CR Number                     : 11141
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : delegation acl_edit -d core dumps
Reported Date                 : 6/30/94
Found in Baseline             : 1.1
Found Date                    : 6/30/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : unknown
Sensitivity                   : public

[6/30/94 public]


I am running a one-node cell with bl-10.3 on an at486 machine.
When I delete an acl on /.:/hosts/clam/dts-entity with 
user_delegate acl entry type acl_edit core dumps

acl_edit /.:/hosts/clam/dts-entity -m user:dts_test:rwc -m user_delegate:dts_svr:rwc
acl_edit /.:/hosts/clam/dts-entity -d  user_delegate
Segmentation fault (core dumped)

I added dts_test and dts_svr with the following script

#!/bin/csh
rgy_edit <<EOF
do p
add dts_test
add dts_svr
do a
add dts_test -g none -o none -mp -dce- -pw dts_test
add dts_svr -g none -o none -mp -dce- -pw dts_svr
kta -p dts_svr -pw dts_svr
kta -p dts_test -pw dts_test
quit
EOF

[6/30/94 public]

The proper specification should be:
acl_edit /.:/hosts/ice/dts-entity -d user_delegate:dts_svr

However, if a user invokes:
acl_edit /.:/hosts/ice/dts-entity -d user_delegate

Acl_edit should return an error stating that it's an invalid ACL entry.
Try dcecp:
dcecp> acl mod /.:/hosts/ice/dts-entity -a {user:jas:rwc user_delegate:jas:rwc}
dcecp> acl sh $_n
{unauthenticated r--}
{user hosts/ice/self rwc}
{user jas rwc}
{group subsys/dce/dts-admin rwc}
{any_other r--}
{user_delegate jas rwc}
dcecp> acl mod /.:/hosts/ice/dts-entity -r user_delegate
Error: Invalid ACL entry key.
dcecp> acl mod /.:/hosts/ice/dts-entity -r user_delegate:jas
dcecp> acl sh $_n
{unauthenticated r--}
{user hosts/ice/self rwc}
{user jas rwc}
{group subsys/dce/dts-admin rwc}
{any_other r--}

[6/30/94 public]

Not specific to the user_delegate type nor the command line version
of acl_edit.  For example, similar syntactic mistake on user: entry
from prompt within acl_edit:

# SEC_ACL for /.:/hosts/oscar/dts-entity:
# Default cell = /.../oscar_cell.osf.org
unauthenticated:r--
user:hosts/oscar/self:rwc
user:cell_admin:rwc
group:subsys/dce/dts-admin:rwc
any_other:r--

sec_acl_edit> del user
del user
Segmentation fault (core dumped)

[7/14/94 public]
Moved to dcecp component for Howard to look at prior to setting status
to defer to 1.2  (dcecp now performs most functions of the control programs)

[7/18/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to acl_edit and should not be changed back to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.

[2/6/96 public]
Fixed in 1.2.1. Can't create core dump as shown below:
(root@ibm_l4) -->acl_edit /.:/hosts/ibm_l4/dts-entity
sec_acl_edit> l

# SEC_ACL for /.:/hosts/ibm_l4/dts-entity:
# Default cell = /.../test_cell
unauthenticated:r--
user:hosts/ibm_l4/self:rwc
group:subsys/dce/dts-admin:rwc
any_other:r--
sec_acl_edit> del user
ERROR: SEC_ACL_EDIT - invalid or unknown entry key (dce / sad)
sec_acl_edit>

Closing.



CR Number                     : 11135
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rrs
Short Description             : portability changes to rrs_prop_pgo.c
Reported Date                 : 6/29/94
Found in Baseline             : 1.1
Found Date                    : 6/29/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : rrs_prop_pgo.c
Sensitivity                   : public

[6/29/94 public]

The following definitions in rrs_prop_pgo.c should be changed from
long to signed32 :

long                  num_returned;/* number of members returned in
long                  num_members; /* number of members total */



CR Number                     : 11130
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : compilation warnings in gssapi.c
Reported Date                 : 6/29/94
Found in Baseline             : 1.1
Found Date                    : 6/29/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : security/gssapi/gssapi.c
Sensitivity                   : public

[6/29/94 public]
gssapi.c gives compilation warnings (mismatched pointers) on HP-UX



CR Number                     : 11108
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : an Assertion warning.. locks
the cell.
Reported Date                 : 6/28/94
Found in Baseline             : 1.1
Found Date                    : 6/28/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : sec_login_util.c
Sensitivity                   : public

[6/28/94 public]

BUILD:

Using the NB from June 25, I have the following cell configuration
NOTE: dced is running on all the nodes.

CELL Configuration:

	secd	cdsd	dtsd	sec-slave   cds-replica client	ntp_provider
---------------------------------------------------------------------------
RIOS		x	x	
HPUX	x		x
OSF1			x	x			x	x
OSF1						x	x
OSF1							x


PROBLEM: 

On the RIOS, one of the DCE components prints the following message, and then
the cell hungs:

root@soldier> **** Assertion warning. attempt to relock a mutex
     at line 1244 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c



The control programs hung and dce.clean hungs also.

"dce_shutdown -f" brings mosts of the deamons down on most nodes.
However on the RIOS, after many times of running "dce_shutdown -f"
dced and dtsd are still there:

root@soldier> dce_shutdown -f
Caught signal 15.  Exiting.
WARNING: dtsd not killed
WARNING: dced not killed

This problem has happend while the cell is idle and while running tests.

[6/28/94 public]
Threads puts out a warning if a thread is attempting to take a recursive 
mutex that it already has. Its a warning because recursive mutexes allow
this but it MAY indicate a problem. In this case it does appear to
indicate a problem. We don't know who or what is causing the warning
or even if the waring and the hang are related but my money says they
are. I'll build a rios libdce in my sandbox replacing the warning with an 
abort and give it to Martha. I'll also check in a change to threads to
have the process id kicked out with the warning. Threads serviceability
would put this out but the code isn't in yet. When we know where the 
problem is we will reassign this.

[6/28/94 public]
My mistake. The warning was comming not from the recursive mutex case
but from the fast mutex case. I've made it a fatal condition. I also submitted
the change to spit out the pid. 

As a note. What ever cell was running on wolfboy, one of our rios machines,
was apparently in the hung state. dce.clean did no good whatsoever. I had
to kill off the processes before reconfiguring. I did not see the assertion
warning message but it in all likelyhood was put out when no one was logged in.
When I reconfigured all appeared to be all right but it may take time for
it to get in its mystery state.

[7/5/94 public]

I was hoping to reproduce this problem over the weekend but it did not
happen. I am canceling this bug. If the error appears again I will re-open 
it.

[7/15/94 public]
Well now we know who to give this to. Sorry Tom.

Note while putting the data together for this ot Martha came in and
said she had dtsd died with the same problem. I looked at the trace
on her machine and it ends up in the same rpc call. THe mutex it is
attempting to take is a fast mutex. This used to generate a warning
which was just wrong. I changed it to a fatal on 6/28. See above.
While I was looking at Mathas trace Bob O'Malley came by and said
he saw a similar lock assertion although it is in a different
location in the rpc. I'm leaving this an A0 becaus it killed three
machines last night. I'll get together with tom. I hace and will keep
the core file and logs. 

On a split server configuration that was left running overnight
I found the following 

On the 486 with
with 
dced
secd 
sec_clientd
cdsadv + clerks
dtsd -s


root     25414 25417  0.8 17:33:44 ??           0:12.32 /opt/dcelocal/bin/cdsclerk
root     25417     1  0.0 17:33:41 ??           0:01.87 cdsadv
root     25118     1  0.0 17:33:31 ??           0:01.30 sec_clientd
root     25395     1  0.1 17:33:04 ??           0:08.65 secd
root     25378     1  0.0 17:32:42 ??           0:03.48 dced
root     25053     1  0.0 17:34:27 ??           0:01.68 dtsd -s
# **** Assertion failure. attempt to relock a mutex
     at line 1249 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c pid = 25414
%Internal DCE Threads problem (version CMA BL10+), terminating execution.
% Reason: assertion failure:  attempt to relock a mutex
        at line 1249 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c, pid = 25414
% See 'cma_dump.log' for state information.

I had done the ps before leaving the previous night. 

The serviceability notice entries....
1994-07-14-17:33:41.042-04:00I----- cdsadv(25235) NOTICE cds adver adver_main.c 251 0xa44b1c18 CDS Advertiser Starting.
1994-07-14-17:33:42.262-04:00I----- cdsadv(25417) NOTICE cds cache casys.c 517 0xa44b1c18 shmid file /opt/dcelocal/etc/cdsc
ache.shmid unlinked.
1994-07-14-17:33:44.782-04:00I----- cdsclerk(25414) NOTICE cds clerk clerk_main.c 298 0xa44b1c18 CDS Clerk Starting.
1994-07-14-17:34:20.352-04:00I----- cdsclerk(25414) NOTICE cds clerk clerk_tree_walk.c 921 0x004eb988 Communication failed
to /.../john.qadce.osf.org/vanilla_ch. Status = 382312471.
1994-07-14-17:34:43.252-04:00I----- dtsd NOTICE dts general logevent_v_ultrix.c 269 0xa44b1c18 Startup completed
1994-07-14-17:34:43.262-04:00I----- dtsd NOTICE dts general dtss_service_main.c 411 0xa44b1c18 Server starting
1994-07-15-03:26:13.712-04:00I----- cdsclerk(25448) NOTICE cds clerk clerk_main.c 298 0xa44b1c18 CDS Clerk Starting.

The serviceability error entries....
1994-07-15-03:26:09.812-04:00I----- dtsd ERROR dts dtserror dtss_service_global_set.c 676 0xa44b1c18 Failed to retrieve ser
ver binding from the namespace: Error with socket (dce / cds)
1994-07-15-03:26:15.882-04:00I----- PID#25395 ERROR rpc rpc_svc_auth cnsassm.c 3978 0x00822c88 RPC_CN_AUTH_VFY_CLIENT_REQ o
n server failed, status = 1712217c
1994-07-15-03:26:21.572-04:00I----- PID#25395 ERROR rpc rpc_svc_auth cnsassm.c 3978 0x0068a158 RPC_CN_AUTH_VFY_CLIENT_REQ o
n server failed, status = 1712217c

What's still running int the morning
root     25417     1  0.4 17:33:41 ??           4:39.28 cdsadv
root     25448 25417  1.3 03:26:11 ??           7:13.51 /opt/dcelocal/bin/cdsclerk
root     25118     1  0.1 17:33:31 ??           1:14.09 sec_clientd
root     25395     1  0.3 17:33:04 ??           3:09.50 secd
root     25378     1  0.0 17:32:42 ??           1:41.99 dced
root     25053     1  0.7 17:34:27 ??           6:56.45 dtsd -s




hp800
machine with
dced 
sec_clientd
cdsd
cdsadv + clerks
dtsd -a

I had not done a ps prior to leaving.

# **** Assertion failure. attempt to relock a mutex
     at line 1247 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c pid = 17116
%Internal DCE Threads problem (version CMA BL10+), terminating execution.
% Reason: assertion failure:  attempt to relock a mutex
        at line 1247 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c, pid = 17116
% See 'cma_dump.log' for state information.

The serviceability notice log

1994-07-14-17:33:56.064-04:00I----- cdsadv(17105) NOTICE cds adver adver_main.c 251 0x7aff91f0 CDS Advertiser Starting.
1994-07-14-17:33:58.428-04:00I----- cdsd(17109) NOTICE cds server server_main.c 365 0x7aff91f0 CDS server starting.
1994-07-14-17:34:00.428-04:00I----- cdsclerk(17111) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-14-17:34:01.713-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1247 0x7aff91f0 Transaction log playback statistics for clearinghouse 4013fcf0->ee05249c-9f4b-11cd-a349-08000925e32c
1994-07-14-17:34:01.748-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1262 0x7aff91f0     Started:  Thu Jul 14 17:34:00 1994
1994-07-14-17:34:01.816-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1276 0x7aff91f0     Finished: Thu Jul 14 17:34:01 1994
1994-07-14-17:34:01.820-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1283 0x7aff91f0     Creates: 0 Directories 
1994-07-14-17:34:01.824-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1290 0x7aff91f0              1 Objects
1994-07-14-17:34:01.829-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1297 0x7aff91f0              0 Do_Updates
1994-07-14-17:34:01.833-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1304 0x7aff91f0     Updates: 0 to directories
1994-07-14-17:34:01.837-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1311 0x7aff91f0              0 to clearinghouse
1994-07-14-17:34:01.841-04:00I----- cdsd(17110) NOTICE cds server db_tlog.c 1318 0x7aff91f0              36 to objects
1994-07-14-17:34:06.891-04:00I----- cdsd(17110) NOTICE cds server dns_service_ncl.c 1043 0x7aff91f0 Event: Clearinghouse /.../john.qadce.osf.org/vanilla_ch Enabled
1994-07-14-17:34:10.150-04:00I----- cdsclerk(17116) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-14-17:34:30.939-04:00I----- dtsd NOTICE dts general logevent_v_ultrix.c 269 0x7aff91f0 Startup completed
1994-07-14-17:34:30.951-04:00I----- dtsd NOTICE dts general dtss_service_main.c 411 0x7aff91f0 Server starting
1994-07-14-18:14:00.901-04:00I----- cdsclerk(17111) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-14-18:34:09.082-04:00I----- cdsclerk(17236) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-14-19:14:09.532-04:00I----- cdsclerk(17236) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-14-19:34:15.576-04:00I----- cdsclerk(17346) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-14-20:14:16.072-04:00I----- cdsclerk(17346) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-14-20:34:19.746-04:00I----- cdsclerk(17494) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-14-21:14:20.510-04:00I----- cdsclerk(17494) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-14-21:34:23.415-04:00I----- cdsclerk(17601) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-14-22:14:23.869-04:00I----- cdsclerk(17601) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-14-22:34:26.719-04:00I----- cdsclerk(17708) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-14-23:14:27.160-04:00I----- cdsclerk(17708) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-14-23:34:30.121-04:00I----- cdsclerk(17815) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-00:14:30.560-04:00I----- cdsclerk(17815) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-00:34:33.479-04:00I----- cdsclerk(17922) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-01:14:33.929-04:00I----- cdsclerk(17922) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-01:34:36.815-04:00I----- cdsclerk(18039) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-02:14:37.272-04:00I----- cdsclerk(18039) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-02:34:41.707-04:00I----- cdsclerk(18762) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-03:14:42.420-04:00I----- cdsclerk(18762) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-03:24:12.947-04:00I----- cdsclerk(18844) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-03:24:58.625-04:00I----- cdsclerk(18845) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-04:04:13.390-04:00I----- cdsclerk(18844) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-04:34:48.082-04:00I----- cdsclerk(18980) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-05:14:48.533-04:00I----- cdsclerk(18980) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-05:34:50.696-04:00I----- cdsclerk(19087) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-06:14:51.149-04:00I----- cdsclerk(19087) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-06:34:53.303-04:00I----- cdsclerk(19194) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-07:14:53.761-04:00I----- cdsclerk(19194) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-07:34:56.526-04:00I----- cdsclerk(19301) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-08:14:57.010-04:00I----- cdsclerk(19301) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-08:35:00.278-04:00I----- cdsclerk(19410) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-09:15:00.721-04:00I----- cdsclerk(19410) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-09:35:05.380-04:00I----- cdsclerk(19545) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.
1994-07-15-10:15:06.068-04:00I----- cdsclerk(19545) NOTICE cds clerk clerk_main.c 438 0x7aff91f0 Normal Succesfull Exit
1994-07-15-10:35:09.999-04:00I----- cdsclerk(19679) NOTICE cds clerk clerk_main.c 298 0x7aff91f0 CDS Clerk Starting.

The seciceability error log
1994-07-15-05:35:11.296-04:00I----- cdsclerk(19087) ERROR cds general clerk_bind.c 620 0x4002f288 Routine sec_rgy_pgo_is_member(3sec) failed : status = 382312543.

What's still running in the morning...
    root 18845 17106  0 03:24:56 ?        7:00 /opt/dcelocal/bin/cdsclerk
    root 17110     1  0 17:33:58 ?       21:02 /opt/dcelocal/bin/cdsd
    root 19679 17106  0 10:35:07 ?        0:03 /opt/dcelocal/bin/cdsclerk
    root 17106     1  0 17:33:56 ?        0:58 /opt/dcelocal/bin/cdsadv
    root 17100     1  0 17:33:52 ?        0:18 /opt/dcelocal/bin/sec_clientd
    root 17096     1  0 17:33:48 ?        0:58 /opt/dcelocal/bin/dced
    root 17115     1  0 17:34:08 ?        6:20 /opt/dcelocal/bin/dtsd -s


A backtrace with the debugger on the 486 did give much but the xdb on the
hp gave.....

0 kill@libc + 0x00000008 (hp-ux export stub)
1 cma__abort_process@libdce + 0x000000a4 (0x6, 0, 0, 0x7b022d28)
2 cma__bugcheck@libdce + 0x00000488 (0x7af41d6c, 0x7af50c30, 0x4df, 0x7af50c4c)
3 cma__assert_message@libdce + 0x00000134 (0x1, 0x7af50c30, 0x7af50c4c, 0x4df)
4 cma__int_mutex_block@libdce + 0x000013e0 (0x4002fe08, 0x3, 0x400e43c8, 0x4002f288)
5 ptdexc_mutex_lock@libdce + 0x000000dc (0x7aff9958, 0x3ff00000, 0, 0x400a9938)
6 rpc__dg_call_start@libdce + 0x0000012c (0x40205110, 0x2, 0x7af8c810, 0)
7 rpc_call_start@libdce + 0x0000025c (0x40205110, 0x2, 0x7af8c810, 0)
8 op0_csr@libdce + 0x000001bc (0x40205110, 0x272, 0x4035a268, 0x1000)
9 sec_krb5rpc_sendto_kdc@libdce + 0x000002ac (0x401912b0, 0x272, 0x4035a268, 0x1000)
10 krb5_sendto_kdc@libdce + 0x000000bc (0x40276f00, 0x401912b0, 0x400e38c8, 0x54)
11 krb5_send_tgs@libdce + 0x00001050 (0, 0x402742c4, 0x400e0001, 0x400e0002)
12 krb5_get_cred_via_tgt@libdce + 0x000001b0 (0x400e37b0, 0, 0x400e0001, 0x400e0002)
13 krb5_get_cred_from_kdc@libdce + 0x0000097c (0x400a8da0, 0x402742b0, 0x400e3720, 0x402742b0)
14 krb5_get_credentials@libdce + 0x00000178 (0, 0x400a8da0, 0x402742b0, 0x400e30a4)
15 sec_priv_get_eptgt@libdce + 0x000008c4 (0x4018cd80, 0x4018cd80, 0x1, 0x2)
16 sec_login_util_get_krb_ptgt@li + 0x0000013c (0x4018cd80, 0x4018cd80, 0x1, 0x2)
17 sec_login_pvt_get_ecreds@libdc + 0x000000a4 (0x4018cd80, 0x400e30c0, 0x400e30a4, 0x400e1c60)
18 sec_login_util_get_delegation_ + 0x00000104 (0x4018cd80, 0x400e30c0, 0x400e30a4, 0)
19 sec_krb_build_message_common@l + 0x00000128 (0x4018cd80, 0x402743e0, 0x400e2bf0, 0x2)
20 sec_krb_cn_build_message@libdc + 0x00000114 (0x4018cd80, 0x402743e0, 0x5, 0x2)
21 rpc__krb_cn_fmt_client_req@lib + 0x00000324 (0x4018cc60, 0x4018ccf8, 0x4018efc8, 0x400e2a8c)
22 send_pdu@libdce + 0x00000d70 (0x4018cb80, 0xb, 0x401967c0, 0)
23 init_assoc_action_rtn@libdce + 0x00000574 (0x4018cb80, 0x400e28cc, 0, 0)
24 rpc__cn_sm_eval_event@libdce + 0x0000016c (0, 0x400e28cc, 0x4018cb80, 0x4018cb88)
25 rpc__cn_assoc_open@libdce + 0x000005ec (0x4018cb80, 0x400a8db8, 0x4000aec8, 0)
26 rpc__cn_assoc_request@libdce + 0x00000ab0 (0x4018eaa8, 0x400a96e8, 0x4000aec8, 0x4018eca4)
27 allocate_assoc_action_rtn@libd + 0x00000150 (0x4018eaa8, 0x4000aec8, 0, 0x400deaa8)
28 rpc__cn_sm_eval_event@libdce + 0x0000016c (0x8, 0x4000aec8, 0x4018eaa8, 0x4018eadc)
29 rpc__cn_call_start@libdce + 0x00000f38 (0x400a96e8, 0x2, 0x4000aec8, 0x15)
30 rpc_call_start@libdce + 0x0000025c (0x400a96e8, 0x2, 0x4000aec8, 0x15)
31 cds_ReadAttribute + 0x00000190 (0x400a96e8, 0x400e137c, 0x4010e008, 0x400e1278)
32 ReadAttributeRPC + 0x0000018c (0x4010e044, 0x4034b4dd, 0x4034b494, 0x40004c5c)
33 processAddr + 0x00000248 (0x4010e044, 0x4034b480, 0x4034b4dd, 0x40004afc)
34 processCH + 0x00000158 (0x4010e044, 0x4034b480, 0, 0x40004a40)
35 clerk_WalkTree + 0x0000071c (0x4010e044, 0x4020469b, 0x7, 0x40004e0c)
36 sendToWalkTree + 0x00000084 (0x4010e044, 0x4020469b, 0x4, 0x40007af0)
37 clerkReadAttribute + 0x00000228 (0x4010e044, 0x1, 0x3, 0x40003920)
38 clerk_request + 0x0000053c (0x400a8b98, 0x400a8e08, 0x9, 0x40019348)
39 th_start + 0x000000cc (0x400a8e08, 0x7af560b8, 0x4002f288, 0x7)
40 cma__thread_base@libdce + 0x0000021c (0x4002f288, 0, 0, 0)

[7/15/94 public]

I had an assertion failure on my HP server this morning.  My cell configurationis HP server (CDS and SEC), OSF/1 client, OSF/1 client and time provider.
I was running the rep.sec.2 tests on the client/time provider machine with
9 clients (3 on each machine) for 12 hours.  The assertion failure happened
about 10 hours into the test.  

It may or not be related, but dced core dumped about three hours later. I 
won't include the trace, because I don't want to muddy the waters, but I've
saved the core in case it is relevant.

ssertion failure. attempt to relock a mutex
     at line 1247 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c pid = 27814
     %Internal DCE Threads problem (version CMA BL10+), terminating execution.
     % Reason: assertion failure:  attempt to relock a mutex
             at line 1247 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c, pid = 27814
             % See 'cma_dump.log' for state information.
             1994-07-15-02:51:17.693-04:00I1.338 dtsd ERROR dts dtserror dtss_service_global_set.c 676 0x7aff91f0
             Failed to retrieve server binding from the namespace: Error with socket (dce / cds)
             **** Assertion failure. attempt to relock a mutex
                  at line 1247 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c pid = 28569
                  %Internal DCE Threads problem (version CMA BL10+), terminating execution.
                  % Reason: assertion failure:  attempt to relock a mutex
                          at line 1247 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c, pid = 28569
%Internal DCE Threads problem (version CMA BL10+), terminating execution.
% Reason: assertion failure:  attempt to relock a mutex
        at line 1247 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c,
pid = 28569
        % See 'cma_dump.log' for state information.
        1994-07-15-06:29:04.826-04:00I14.405 dced FATAL rpc rpc_svc_cn_state cna
ssoc.c 3014 0x400268c0
        Illegal state transition detected in CN client association state machine
 [cur_state: 2, cur_event: 0, assoc: 400b7868]

[7/15/94 public]
This is cause by RPC taking its global lock twice.

Take a look at the following sequence:
6 rpc__dg_call_start@libdce + 0x0000012c (0x40205110, 0x2, 0x7af8c810, 0)
...
18 sec_login_util_get_delegation_ + 0x00000104 (0x4018cd80, 0x400e30c0, 0x400e30a4, 0)
...
21 rpc__krb_cn_fmt_client_req@lib + 0x00000324 (0x4018cc60, 0x4018ccf8, 0x4018efc8, 0x400e2a8c)
...
29 rpc__cn_call_start@libdce + 0x00000f38 (0x400a96e8, 0x2, 0x4000aec8, 0x15)

When we are starting the BIND process for a CN rpc, we go down in to
security, which wants to do another rpc to get delegation info.
We relock the global RPC mutex which is fatal.

Why is this happening now?  Does there need to be further security
changes made to rpc_cn_call_start?  It tries to get its security info
before opening the association, should we be doing more to prevent
another rpc call?

Help from the HP security folks would be great (Bill?)

[7/15/94 public]

One way to fix it is for CN to stop taking the global lock and to implement
the association (and/or call) lock (like DG), which will require a lot of
code changes... If the security can avoid doing RPC in
sec_krb_cn_build_message() (probably do it under
rpc_binding_set_auth_info()?), then it would be easier for CN.

[7/18/94 public]
Requested assistance from someone at HP to work with Tom.

[7/19/94 public]

Basically, the problem here is that some recent changes to security
violated a fundamental assumption made when the sec_authn interface was
designed: namely, that the sec_krb_*_build_* (and sec_krb_*_decode_*)
routines could operate without needing to reference any outside process.

This constraint needs to be reinstated; any work which sec_krb_build_* is
doing which could provoke an outgoing RPC needs to be pushed back to the
sec_krb_get_cred() call, where it's safe to do that kind of thing.

Any other solution is going to be even hairier.

[7/19/94 public]
Bil has summarized the problem exactly.

So I will assume someone (Bill?) is working on this from the security side.

[7/20/94 public]

Greg Carpenter has recoded the sec_login_util_get_delegation_chain() in
sec_login_util.c based on Bill's recommendations above.  This is currently
getting built and smoketested at HP.  When soketest completes, OSF (Martha 
and/or Tom) will pick up the fix from an HP branch and verify that the fix 
works in their environment before HP submits.

[7/20/94 public]
Due to secd core dumps, we are unable to test this locally.
I am going on vacation, so security people will have to fix this
without me. Assigned to Greg @ HP.

Note: Martha claims the lock assertion happens after 10-12 hours
(something expired?), even on a idle cell (since dtsd is doing
auth-rpc's to sync).  Perhaps this will help reproduce this.
(you *are* running dts in your cells, right?)

[7/22/94 public]
Submitted proposed fix from Greg Carpenter to nightly build.  Awaiting 
results from Systest.....

[7/25/94 public]
Have not seen the assertion warning in past few days.  Moving to 'fix'.
Will close after tests runs are performed for a few more nights...



CR Number                     : 11052
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Auditing
Short Description             : Turn on auditing for security.
Reported Date                 : 6/22/94
Found in Baseline             : 1.1
Found Date                    : 6/22/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : ../security/server/*/Makefile
Sensitivity                   : public

[6/22/94 public]

Enable auditing in the security component now that memory leaks in libaudit
has been fixed.

[6/27/94 public]
Fis submitted.



CR Number                     : 11021
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : who are you fails for dg.
client with a DCE 1.1 server.
Reported Date                 : 6/21/94
Found in Baseline             : 1.1b10
Found Date                    : 6/21/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : rpc/runtime/krbdgsrv.c
Sensitivity                   : public

[6/21/94 public]

Cell Configuration:

HPUX: DCE 1.1 SEC server, CDS server
OSF1: DCE 1.0.3 client.

Using the the Beta release binaries, I was unable to configure a dce1.0.3
client. Security configures but CDS fails with the following error:

        What is the name of a CDS server in this cell
        (if there is more than one, enter the name of
        the server to be cached if necessary)? rum

        Is this cell using multiple LANs?
        Specifically, are clients and servers divided into profile
        groups to facilitate performance? Most cells will not require
        this feature.
 
        Are you using multiple LAN's within this cell? (n) 
ERROR:   cdscp show dir /.: failing -- CDS not usable
        Press <RETURN> to continue, CTRL-C to exit: 
ERROR:   cdscp show dir /.: failing -- CDS not usable
        Press <RETURN> to continue, CTRL-C to exit: 
ERROR:   cdscp show dir /.: failing -- CDS not usable
        Press <RETURN> to continue, CTRL-C to exit: 
ERROR:   cdscp show dir /.: failing -- CDS not usable
        Press <RETURN> to continue, CTRL-C to exit: 
ERROR:   cdscp show dir /.: failing -- CDS not usable
        Press <RETURN> to continue, CTRL-C to exit: 
ERROR:   cdscp show dir /.: failing -- CDS not usable
        Press <RETURN> to continue, CTRL-C to exit:



An OSF1 DCE1.1 server and an OSF1 DCE1.0.3 client also fails but the 
erros are different. I found that secd core dumps on the DCE 1.1 server.
Here is a sample of the error messages seen on the client:

 
        Are you using multiple LAN's within this cell? (n) 
ERROR:   Error while modifying client ACLs in the name space.
  Message from acl_edit:
  Unknown default cell from ACL - ERROR: communications failure (dce / rpc)
INFO: Local cell will be used for operations requiring default cell info.
user:hosts/tahiti/self - connection request rejected (dce / rpc)
ERROR: Timeout occurred, operation not performed (dce / cds)
Unable to bind to object /.:/hosts/tahiti/self
ERROR: Timeout occurred, operation not performed (dce / cds)
Unable to bind to object /.:/hosts/tahiti/cds-clerk
ERROR: Timeout occurred, operation not performed (dce / cds)
Unable to bind to object /.:/hosts/tahiti/profile
        Press <RETURN> to continue, CTRL-C to exit:

[06/24/94 public]

Making this CR a priority 0 because it is blocking compatibility testing;
(1.1 servers and 1.0.3 clients)

[6/27/94 public]
The cell configures and then does a cdscp dump clerk cache looking for
the cell name in the cache. If it finds it all is well but its not.
When after getting out of dce_config I attempted a cdscp show dir /.:
I got

Error on entity: /.../john.qadce.osf.org
who are you failed (dce / rpc)
Function: dnsEnumAttr

and when I attempted dce_login cell_admin -password- I got

# dce_login cell_admin -dce-
Sorry.
Password Validation Failure. - who are you failed (dce / rpc)

I talked to Tom and he had me set RPC_SUPPORTED_PROTSEQS='ncacn_ip_tcp'
and the problem went away. I set it back RPC_SUPPORTED_PROTSEQS='ncadg_ip_udp'
and the problem came back.

[6/28/94 public]

The WAY auth fallback (1.0.x backward compatibility) code is not working.
(I don't think it ever worked before.) Offending code is the use of
outbuf_ptr.

--- ../../../link/src/rpc/runtime/krbdgsrv.c    Tue Jun  7 14:06:28 1994
+++ krbdgsrv.c  Tue Jun 28 11:12:39 1994
@@ -255,7 +255,7 @@
            (*conv_v3_0_c_epv.conv_who_are_you_auth)
                (h, actuid, boot_time, inbuf, omp-(rpc_mp_t)inbuf, 
                 MAX_AUTH_MESSAGE_LEN,
-                seq, cas_uuid, outbuf_ptr, &outlen, stp);
+                seq, cas_uuid, cred_head->buff, &outlen, stp);
        }
 
        RPC_DBG_PRINTF(rpc_e_dbg_auth, 4,

[6/28/94 public]

I forgot to mention that secd crash is probably related to OT 10876 since
1.0.x client uses 1400 bytes max message size. This case is taken care of
by the second MBF code drop, but it didn't make it into the beta bits.

[7/1/94 public]
The fix Seiichi is refering to did make the beta bits.
I have submitted the runtime fix above, and if the secd crash still happens,
it will be fixed under OT #11155.



CR Number                     : 11018
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : 1.0.3 changes not in 1.1 source
Reported Date                 : 6/21/94
Found in Baseline             : 1.1
Found Date                    : 6/21/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : the ones listed below
Sensitivity                   : public

[6/21/94 public]

The following files are missing the changes made for OT 8651.  These
changes are in the 1.0.3 source.

    client/admin/rgy_edit/tty_pgo.c
    h/rs_log.h
    server/rs/rs_rep_util.c
    server/rs/rs_log_acct.c
    server/sec_clientd/sec_clientd.c

OT 10692 was opened last week to report this same problem fo
rs_rep_util.c.  So it should be marked as a duplicate of this OT.

[8/4/94 public]

I belive this has been submitted.

[8/4/94 public]

As of yesterday only the changes to rs_rep_util.c have been submitted to
the source pool.

[8/5/94 public]
Michael, do you believe the remaining changes went in with the
submission on 8/4?  If so, could a_ferris recheck?  Thanks.

[8/8/94 mdf]
Yup, the files contained in my DRB request just got submitted today.

[8/9/94 public]

The changes are now in the source base.  thanks.



CR Number                     : 11014
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dlg_client
Short Description             : dlg test not checking result of sec_acl_test correctly
Reported Date                 : 6/20/94
Found in Baseline             : 1.1
Found Date                    : 6/20/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : dlg_intermediary.c
Sensitivity                   : public

[7/25/94 public]

Added logic to test return of sec_acl_test_access
Actually fixed and tested this bug weeks ago but
needed to test mandatory baselines in fixedinbaseline

[6/20/94 public]

I was playing around with the test you sent me
and I modified one of the entries in dlg_acl_setup

The first line in the file dlg_acl_setup was:

acl_edit /.:/myfilesystem/mike -m user:dlg_test:rwx -m user_delegate:dlg_svr:rwx


However, I tried:

acl_edit /.:/myfilesystem/mike -m user:dlg_test: -m user_delegate:dlg_svr:rwx

So now the ACL for /.:/myfilesystem/mike is:


# SEC_ACL for /.:/myfilesystem/mike:
# Default cell = /.../clam_cell.osf.org
mask_obj:-rwx---
user:dlg_test:-------
user_delegate:dlg_svr:-rwx---


Now when I tried dlg_client with no arguments it still passed:

root@clam {61} ==> dce_login cell_admin -dce-
Password must be changed!
You have mail.
root@clam {5} ==> ./dlg_client
PASSED: Delegation test


I would have thought that the test should have failed,
since dlg_test doesn't have permissions on /.:/myfilesystem/mike.

Even if I change mask_obj to no permissions the test still passes:
# SEC_ACL for /.:/myfilesystem/mike:
# Default cell = /.../clam_cell.osf.org
mask_obj:-------
user:dlg_test:-------
user_delegate:dlg_svr:-rwx---   #effective:-------
sec_acl_edit> co
sec_acl_edit> quit

I tried this test with an old build (approx 2 weeks old)
and the test failed as I would have expected.

root@clam {13} ==> ./dlg_client
FAILED: Delegation test; Error from dlg_test_access: 1712201b

This was before the dce_error_inq_text was added to the test.

However, when I try the test with last night's 486 nightly build.
The test PASSES which is incorrect.

I get the same results on an HP/UX system too.

[6/20/94 public]
You're supposed to be able to delegate.  The ACLs are on an object in a sample
server.  The test uses delegates to see if the access check for delegates is
correct, not to see if you can delegate when you change an ACL (I've updated
the description above to reflect the real problem).  The result of the
test_access is not being checked correctly (only the status is checked, not
the return value).  Reassigned to bhaim, since he's dealing with this test at
the moment.



CR Number                     : 11009
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11913
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : RPC_CN_AUTH_VFY_CLIENT_REQ errors
Reported Date                 : 6/20/94
Found in Baseline             : 1.1
Found Date                    : 6/20/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[6/20/94 public]

While running the dfs.read_write_all.main test (48 CHO) with 6 users in
a 5 dts local server/4 flserver cell, I got the following errors on
cobbler, a rios, which is also the (only) security server for the cell:

root@cobbler> (RPC_CN_AUTH_VFY_CLIENT_REQ) on server failed status = 0x14129025
(RPC_CN_AUTH_VFY_CLIENT_REQ) on server failed status = 0x14129025
(RPC_CN_AUTH_VFY_CLIENT_REQ) on server failed status = 0x14129025
ie.
336760869 (decimal), 14129025 (hex): Clock skew too great (dce / krb)

on booboo, which is only a dts local server and flserver:

(RPC_CN_AUTH_VFY_CLIENT_REQ) on server failed status = 0x16c9a0e1
382312673 (decimal), 16c9a0e1 (hex): received packet has an invalid checksum (dce / rpc)

Time skew on the machines is well within the 5 minute boundary.
Also, for some reason, not all dts local servers can see all the
other servers at all times, ie, dtscp show local servers does
not always output the 4 other servers.

[7/6/94 public]
The next step for this bug is to run the test with "rpc_svc_auth" subcomponent
serviceability turned on - Hopefully sometime during the next week.

[7/7/94 public]
Also along these lines, I received the following when installing the NB
from 7/6 on an HP.

S:****** Starting cdsd...
S:****** Setting ACLs for all new namespace entries...
1994-07-07-11:11:02.477-04:00I----- cdsd(22511) ERROR rpc rpc_svc_auth 0x40051070
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status = 1412901f

[ninja]:/usr/users/rousseau> stcode 0x1412901f
Decrypt integrity check failed (dce / krb)

[8/29/94 public]
Gail, have their been any instances of this recently?
I believe these errors were due to security problems and are not related
to rpc at all.  Note that all the above errors are returned to rpc from
the security code.

[8/29/94 public]
You're probably right but ... I haven't had a chance to run the
scenario that produced the problem and I don't want to cancel/close
it until I do ... in cases like these, I leave the bug assigned to
myself (as this one has been) - I know it still affects the metrics
but without help, that's the best I can do.

[9/21/94 public]
Well, this problem just reared it's ugly head.

1994-09-21-16:23:20.745-04:00I----- cdsd(11559) ERROR rpc auth cnsassm.c 4028 0x40040b60
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: Decrypt integrity check failed (dce / krb)

This was configuring the initial machine (HP) in a cell. cdsd keeps spitting
this message out. After looking at my calendar, I'm bumping this to a '1'.
If that isn't justified, feel free to change it. I am going to reconfigure
and see if I can reproduce the problem.

FYI. secd is running. I can dce_login. klist gives me valid info.

[9/21/94 public]
As I noted above, the rpc runtime is just reporting the credential
errors as given to it from the security verification routines.
I would believe that the *client* to cdsd is just not presenting
valid credentials to the server.

Re assigning this to security, but I really don't think they will
be able to do much with it either.

[9/22/94 public]
Changed short description to be more accurate - also adding Tom's earlier
opinion here from email dated 7/7/94 in response to John Rousseaus above note:

This, by the way, is "Very Bad".

There are several possibilities:
	1. The CN RPC code I added for big PAC support has a long
	   unconvered bug in it.  This is my least liked guess. :-)

	2. The security verification functions (the "sec_authn" interface
	   to CN rpc) got changed recently and have a bug.

	3. cdsd is scribbling over some important security or rpc memory.

	4. Something completly different is happening, like:
	The packet is really getting hosed on the network
	acl_edit is hosing the client side packets
	security is providing bad info to the client or server.
	etc.

[9/23/94 public]
Lowering the priority of this CR to 2. As John Rousseau have mentioned
above the secd functionally is working after this error was displayed. If
this is seen by others on a continuous basis, I'll bump up the priority for
inclusion in 1.1. I've discussed this with Tom last night and he agrees
with this for now.

[9/29/94 public]

I've got a cell with all two out of three nodes reporting this error on a 
continuous basis.

BUILD: BL-20

Cell
HP-UX: secd dtsd
OSF1:  cdsd dtsd
OSF1:  client dtsd ntp_provider

The OSF/1 client is reporting:

1994-09-29-15:59:23.771-04:00I0.795 dtsd ERROR rpc auth cnsassm.c 4034 0x00657670
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed: Decrypt integrity check failed (dce / krb)

The OSF/1 node with cdsd is reporting:

Too few servers (2), need 3 servers
1994-09-29-15:59:23.902-04:00I5.259 dtsd ERROR dts dtsdate time_request.c 689 0x
006651e0
RPC call ClerkRequstTime() to remote server failed: Decrypt integrity check fail
ed (dce / rpc)

The HP-UX is reporting 'who are you' failures.

[9/29/94 public]

In the interest of accuracy, all three nodes are reporting this error.  the
HP-UX is reporting:

1994-09-29-16:30:12.940-04:00I117.763 dtsd ERROR dts dtsdate time_request.c 689 0x401bb6d8
RPC call ClerkRequstTime() to remote server failed: Decrypt integrity check failed (dce / rpc)

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 10999
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_attr_util
Short Description             : free_attr_ptrs() uses "free()" to release sec_attr_enc_printstring  instead of input parameter deallocate.
Reported Date                 : 6/17/94
Found in Baseline             : 1.1
Found Date                    : 6/17/94
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec_attr_util.c
Sensitivity                   : public

[6/17/94 public]
In free_attr_ptrs(void (*deallocate)(void *ptr), sec_attr_t *sec_attr_p), it
is supposed to use deallocate() to release the pointers, but it accidently
uses free() to release sec_attr_enc_printstring (line number 78).

[06/20/94 public]
I have the fix in my sandbox; will submit when the tree is open.

[06/20/94 public]
Michael will submit the fix.

[7/19/94 public]
Visual inspection shows no use of free() in free_attr_ptrs().  Moving
directly to closed.



CR Number                     : 10997
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10996
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : dcecp polymorphic prins cores secd
Reported Date                 : 6/17/94
Found in Baseline             : 1.1b9
Found Date                    : 6/17/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/server/rsdb
Sensitivity                   : public

[6/17/94 public]
CR 10996 might be related, it was doing the same operations but with
rgy_edit and acl_edit, this is doing it with dcecp.  This could be some
dcecp bugs, but still secd should not core dump, we just call the API.

The following commands resulted in a core dump of secd.  The core file
was found in / not under /opt/dcelocal.  Sorry but since the builds by
default don't turn on debugging info, I couldn't get anything from the
core file.  This was done in a one machine cell running the nightly of
6/15/94 on an HP. 

  absolut admin/dcecp$ dcecp
  dcecp> login cell_admin -p -dce-
  dcecp> prin cat
  /.../absolut_cell/nobody
  /.../absolut_cell/root
  /.../absolut_cell/daemon
  /.../absolut_cell/sys
  /.../absolut_cell/bin
  /.../absolut_cell/uucp
  /.../absolut_cell/who
  /.../absolut_cell/mail
  /.../absolut_cell/tcb
  /.../absolut_cell/dce-ptgt
  /.../absolut_cell/dce-rgy
  /.../absolut_cell/cell_admin
  /.../absolut_cell/krbtgt/absolut_cell
  /.../absolut_cell/hosts/absolut/self
  /.../absolut_cell/hosts/absolut/cds-server
  /.../absolut_cell/hosts/absolut/gda
  /.../absolut_cell/one/two
  /.../absolut_cell/mel
  /.../absolut_cell/sala/mone
  /.../absolut_cell/a/b
  dcecp> prin cre x
  dcecp> prin cre x/y
  dcecp> acl per /.:/sec/principal/x
  {r read}
  {c control}
  {D Delete object}
  {n name}
  {f fullname}
  {m management info}
  {a authentication info}
  {u user info}
  {g groups}
  dcecp> acl per /.:/sec/principal/x/y
  {r read}
  {c control}
  {D Delete object}
  {n name}
  {f fullname}
  {m management info}
  {a authentication info}
  {u user info}
  {g groups}
  dcecp> prin del x
  dcecp> prin cat
  Error: connection request rejected
  dcecp> prin cat
  Error: Registry server unavailable
  dcecp> 

The principal cat command at the end killed secd.

[6/21/94 public]
I'm nearly certain this is a side-effect of 10996 (and is fixed by
its one-liner), but as this didn't reproduce here I'll leave it open.

[7/12/94 public]

I have a 3-machine cell with the master security server running on
an HP. All machines installed with 1.1b10+.

Note that in all cases, rgy_edit produces the same results as dcecp.
Review the following cases and note the order of principal creation
and deletion.
_________________________
CASE #1 WORKS:
dcecp> prin create x
dcecp> prin create x/y
dcecp> acl pe /.:/sec/principal/x -type "Sec Principal"
{r read}
{c control}
{D Delete object}
{n name}
{f fullname}
{m management info}
{a authentication info}
{u user info}
{g groups}
dcecp> acl pe /.:/sec/principal/x -type "Sec Directory"
{r read}
{c control}
{i insert}
{d delete}
{D Delete object}
{n name}
dcecp> prin delete x/y
dcecp> prin delete x

_________________________
CASE #2 DOES NOT WORK:
dcecp> prin create x/y
dcecp> prin create x
dcecp> acl pe /.:/sec/principal/x -type "Sec Principal"
{r read}
{c control}
{D Delete object}
{n name}
{f fullname}
{m management info}
{a authentication info}
{u user info}
{g groups}
dcecp> acl pe /.:/sec/principal/x -type "Sec Directory"
{r read}
{c control}
{i insert}
{d delete}
{D Delete object}
{n name}
dcecp> prin delete x/y
dcecp> prin delete x
Here in CASE #2, the master registry server dies.

_________________________
CASE #3 DOES NOT WORK:
dcecp> prin create x/y
dcecp> prin create x
dcecp> acl pe /.:/sec/principal/x -type "Sec Principal"
{r read}
{c control}
{D Delete object}
{n name}
{f fullname}
{m management info}
{a authentication info}
{u user info}
{g groups}
dcecp> acl pe /.:/sec/principal/x -type "Sec Directory"
{r read}
{c control}
{i insert}
{d delete}
{D Delete object}
{n name}
dcecp> prin delete x
dcecp> prin delete x/y
The master registry server dies and the database is corrupted. Have
to reconfigure machine.

_________________________
CASE #4 DOES NOT WORK:
dcecp> prin create acl_check_024_P0
dcecp> prin cat
/.../dcecp_cell.osf.org/nobody
/.../dcecp_cell.osf.org/root
/.../dcecp_cell.osf.org/daemon
/.../dcecp_cell.osf.org/sys
/.../dcecp_cell.osf.org/bin
/.../dcecp_cell.osf.org/uucp
/.../dcecp_cell.osf.org/who
/.../dcecp_cell.osf.org/mail
/.../dcecp_cell.osf.org/tcb
/.../dcecp_cell.osf.org/dce-ptgt
/.../dcecp_cell.osf.org/dce-rgy
/.../dcecp_cell.osf.org/cell_admin
/.../dcecp_cell.osf.org/krbtgt/dcecp_cell.osf.org
/.../dcecp_cell.osf.org/hosts/frick/self
/.../dcecp_cell.osf.org/hosts/frick/cds-server
/.../dcecp_cell.osf.org/hosts/frick/gda
/.../dcecp_cell.osf.org/hosts/ice/self
/.../dcecp_cell.osf.org/hosts/ice/cds-server
/.../dcecp_cell.osf.org/hosts/ice/gda
/.../dcecp_cell.osf.org/hosts/ninja/self
/.../dcecp_cell.osf.org/hosts/ninja/cds-server
/.../dcecp_cell.osf.org/hosts/ninja/gda
/.../dcecp_cell.osf.org/acl_check_024_P0
dcecp> prin create acl_check_024_P0/acl_check_024_P1
Error: Name already exists

Here, I have a name 15 bytes long instead of "x". And it does
not work. If "x" refers to "acl_check_024_P0" and "y" refers
to "acl_check_024_P1", these principals should be created like
in CASE #1.

[7/12/94 public]
Again, it's not worth spending time on this unless you have the
simple fix for 10996 -- all these cases work up here with rgy_edit.

[7/13/94 public]

FYI
I made the same change in module src/security/server/rsdb/rsdb_pgo.c in 
routine rsdb_pgo_delete(): 
    dir.type = rsdb_dir_type;

I rebuilt librsdb.a and rebuilt the security server in
src/security/server/bin. librsdb.a is not part of libdce so
this seems OK.

I started my new version of the security server and my previous
note still applies.

[7/13/94 public]
Well, there are other fixes in our forthcoming drop.

[7/18/94 public]
With the latest HP security code drop, all case scenarios above
are now working. Thanks.



CR Number                     : 10996
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : polymorphic principal acl problem
Reported Date                 : 6/17/94
Found in Baseline             : 1.1b9
Found Date                    : 6/17/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/server/rsdb/rsdb_pgo.c
Sensitivity                   : public

[6/17/94 public]
This will soon block dcecp development so priority 1.

I created a principal a, and then one called a/b.  So a is a polymorphic
object.  I could use acl_edit to see its principal ACL.  I then deleted
the principal a and checked that there was still a principal a/b.  But I
could not acl_edit the principal directory a, though I could for the
principal directory hosts:

absolut admin/dcecp$ rgy_edit
Current site is: registry server at /.../absolut_cell/subsys/dce/sec/master 
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> a a
rgy_edit=> a a/b
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/absolut_cell                        12429
hosts/absolut/self                         12430
hosts/absolut/cds-server                   12431
hosts/absolut/gda                          12432
one/two                                    12435
mel                                        12433
sala/mone                                  12438
a                                          12439
a/b                                        12440
rgy_edit=> quit
bye.
absolut admin/dcecp$ acl_edit /.:/sec/principal/a
sec_acl_edit> ge
Granted permissions: rcDnfmaug
sec_acl_edit> exit
absolut admin/dcecp$ acl_edit /.:/sec/principal/a/b
sec_acl_edit> ge
Granted permissions: rcDnfmaug
sec_acl_edit> exit
absolut admin/dcecp$ rgy_edit
Current site is: registry server at /.../absolut_cell/subsys/dce/sec/master 
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> del a
Please confirm delete of name "a" [y/n]? (n) y
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/absolut_cell                        12429
hosts/absolut/self                         12430
hosts/absolut/cds-server                   12431
hosts/absolut/gda                          12432
one/two                                    12435
mel                                        12433
sala/mone                                  12438
a/b                                        12440
rgy_edit=> exit
bye.
absolut admin/dcecp$ acl_edit /.:/sec/principal/a  
ERROR: acl manager type not recognized (dce / sec)
Unable to bind to object /.:/sec/principal/a
absolut admin/dcecp$ acl_edit /.:/sec/principal/a/b
sec_acl_edit> ge
Granted permissions: rcDnfmaug
sec_acl_edit> exit
absolut admin/dcecp$ acl_edit /.:/sec/principal/hosts
sec_acl_edit> get
Granted permissions: rcidDn
sec_acl_edit> exit
absolut admin/dcecp$

[6/20/94 public]

802c794
<       pgo.type = rsdb_dir_type;
---
>       dir.type = rsdb_dir_type;

[7/13/94 public]

What does 'Submit not imminent due to lack of rios build.' mean?  We have
had successful RIOS builds recently.  I'd like to get this fix in.  Can I
help with something?, RIOS build/test?

[7/13/94 public]

We don't have non-hp builds here with which to test individual fixes.
This is contained in our next drop, for submission this week.



CR Number                     : 10976
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : clean #define for sec_clientd.bindings
Reported Date                 : 6/16/94
Found in Baseline             : 1.1b9
Found Date                    : 6/16/94
Severity                      : C
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/sv_clientd.c,
		security/h/scd_loc.h,security/idl/oride_base.idl
Sensitivity                   : public

[6/16/94 public]
scd_loc.h has more then just #define's for sec_clientd fields, it
also has clever macros that do run-time resolution of dcelocal paths.
I'd like a simple clean define for sec_clientd's bindings file since
dced's secval doesn't want to use the sec_util stuff.
I'll add this after the beta.

[08/31/94 public]
Added
    const char *   SCD_BINDINGS_FILE    = "/var/security/sec_clientd.binding";
to oride_base.idl and taught scd_loc.h and dced to use it.



CR Number                     : 10970
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : add new secd options
Reported Date                 : 6/15/94
Found in Baseline             : 1.0.3
Found Date                    : 6/15/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : command_ref/man8sec/secd.8sec
Sensitivity                   : public

[6/15/94 public]

add new -master_seqno and -cpi options to secd manpage

[10/19/94 public]
Fixed and verified.  Verified by hanfie.

[10/27/94 public]
Closed bug.



CR Number                     : 10962
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rs code
Short Description             : memory alignment bug in rs_rep_util_rep_buff_pack()
Reported Date                 : 6/15/94
Found in Baseline             : 1.1
Found Date                    : 6/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : rs_rep_util.c
Sensitivity                   : public

[6/15/94 public]

Line #346 in  the file rs_rep_util.c currently looks like:

    ROUND_UP(packed_buff_hlen, rs_c_align_size);

It should be:

    packed_buff_hlen = ROUND_UP(packed_buff_hlen, rs_c_align_size);

[6/17/94 public]
Fix pending open pool

[6/20/94 public]

It appears that the changes made for OT 8651 have not been merged
into the 1.1 source.  There were also changes made to 
rs_rep_util_rep_buff_unpack() that need to be added to the 1.1 source.

Here is a new copy of rs_rep_util_rep_buff_unpack() with the mods:

PUBLIC void rs_rep_util_rep_buff_unpack
  (
    rs_replica_packed_buff_t    *rep_buff,  /* [in, out] */
    rs_replica_name_p_t         *rep_name,  /* [out] */
    rs_replica_twr_vec_p_t      *rep_twrs,  /* [out] */
    error_status_t              *st         /* [out] */
  )
{
    rs_replica_packed_item_t    *p_bp;
    unsigned_char_p_t           bp,
                                begin_p_bp;
    unsigned32                  num_towers;
    unsigned32                  *twr_offp;
    unsigned32                  twr_offs_blen;
    rs_replica_twr_vec_t        *twr_vecp;
    unsigned32                  i;
    unsigned32                  packed_buff_hlen;

    p_bp =  (rs_replica_packed_item_t *) rep_buff;

    if ((p_bp->cookie != rs_c_replica_packed_buff_cookie) ||
        (p_bp->version != rs_c_replica_packed_buff_version)) {
        SET_STATUS(st, sec_rgy_rep_invalid_entry);
        return;
    }

    begin_p_bp = (unsigned_char_p_t) p_bp;

    num_towers = p_bp->num_towers;

    packed_buff_hlen = ((unsigned_char_p_t)&p_bp->buff) -
                ((unsigned_char_p_t)p_bp);
    packed_buff_hlen = ROUND_UP(packed_buff_hlen, rs_c_align_size);

    bp = (unsigned_char_p_t)p_bp + packed_buff_hlen;

    /* point to beginning of name buffer
     */
    *rep_name = bp;

    bp = (unsigned_char_p_t)bp + p_bp->name_bufflen;

    /* point to beginning of tower offsets
     */
    twr_offp = (unsigned32 *) bp;
    twr_offs_blen = sizeof(*twr_offp) * num_towers;
    twr_offs_blen = ROUND_UP(twr_offs_blen, rs_c_align_size);

    /* point to beginning of tower vector
     */
    twr_vecp = (rs_replica_twr_vec_p_t)
                (bp + twr_offs_blen);

    /* fill in the tower vector.
     * each tower pointer = pointer to begin of packed buffer +
     *  offset to tower (saved in tower offset array)
     */
    twr_vecp->num_towers = num_towers;

    for (i = 0; i < num_towers; i++, twr_offp++) {
        twr_vecp->towers[i] = (twr_p_t) (begin_p_bp + (*twr_offp));
    }

    *rep_twrs = twr_vecp;

    CLEAR_STATUS(st);
}

[7/19/94 public]
Fxied by HP code drop of ~7/15.  Verified by code inspection.  Moving 
directly to closed.



CR Number                     : 10958
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security RCA
Short Description             : sec_certify retains purged auth-info
Reported Date                 : 6/15/94
Found in Baseline             : 1.0.2
Found Date                    : 6/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : sec_certify.c, sec_login_util.c
Sensitivity                   : public

[6/15/94 public]
   The following text was copied directly out of our defect database.
Naveen has gone to Bellcore, and analyzed this problem for them. A
summary of it is that the boolean32 (and global?)'certify_bound' in
sec_certify.c never gets cleared. The customer's app is non-privileged
and purges its context cyclically in order to ensure that it has the
latest group list inthe PAC; however, it is also unpriv'd and so calls
validate() followed by certify(). So the cert_h variable internal to
sec_certify.c is left holding an invalid, purged auth-identity, while
the boolean says that it's for real.
   We appear to need an equality function for comparing auth-identities
that can be used to see if the cert_h has an auth_info structure that
'matches' the one passed to sec_login_validate_cert_auth(). If they
match, proceed; otherwise, we need to rebuild cert_h . No?
===================== Abstract =====================
Each dce app, when logging in the first time, caches a binding to
sec_clientd.  If the app then purges his LC, the binding to
sec_clientd becomes invalid, but it is not discarded.  Thus, an app
which tries to obtain a NEW login context after purging the old will
fail, in sec_login_certify_identity(). 
dino-Tue, 14 Jun 1994 16:17:10
===================== Description =====================
The sec_login_certify_identity() call appears to be broken, if used
iteratively.
The customer has a server application which obtains a NEW login
context when the previous LC expires.  The reason for this is that the
sec_login_refresh_identity() does not update the list of groups
containing the account (which may change between refreshes), but
obtaining a new LC will update this list.
The calling sequence used is:
  sec_login_setup_identity()
  sec_key_mgmt_get_key()
  sec_login_validate_identity()
  sec_login_certify_identity()
  sec_login_set_context()
This sequence is used to obtain an initial LC.  Then, when it expires,
the server does
  sec_login_purge_context()
  sec_key_mgmt_free_key()
and then cycles through the login sequence again. The second time
through this sequence, the login succeeds. 
However, on the third time through the login sequence,
sec_login_certify_identity() fails with "0x171220eb: Context has not
been validated (dce / sec)", even though the immediately preceding
call was a successful sec_login_validate_identity(). 
  # -------------------------- #
Naveen, on the customer's side, apparently looked through the code,
and saw that in ...src/security/client/login/sec_login.c, the
sec_login_certify_identity() call (in some cases) results in a local
call to sec_login_validate_cert_auth(). [see
.../src/security/client/rca/sec_certify.c]
Naveen notes that in sec_certify.c, the global unsigned32
certify_bound seems to store whether we need to bind to sec_clientd.
This flag is set to true once we bind to sec_clientd, but does not
appear to be reset when we purge the LC.  When the LC is purged, creds
are destroyed, and the cached handle to sec_clientd goes stale, while
the certify_bound flag remains true.  Thus, the client calling
sec_login_certify_identity() uses the stale handle, and the rpc fails.
The solution would be to set the certify_bound flag to false, once the
creds are destroyed, or when they expire. 
Note: the reason that the sec_login_certify_identity() call succeeds
on the first try, is that no handle is cached.  On the 2nd call, there
is a handle cached, but it is still valid (since we are re-logging in
N seconds before cred expiration).  Only on the third time through
does the call fail; at that point, the original cached handle has
timed out.
  # -------------------------- #
For code which demonstrates this problem, see
 /afs/transarc.com/dept/ps/remedy/defect-info/T5639
There is a server.c source module, as well as a dummy idl file, a
Makefile, and a README.  There is sample output in the file 'output'.
dino-Tue, 14 Jun 1994 18:12:42
Solution Text for Defect 12359 currently not present
Validation Text for Defect 12359 currently not present

[8/12/94 public]
Upgraded from p2 to p1.  Must be fixed by 1.1.

[8/22/94 public]
It looks like this was fixed as a side effect of preauth work Sean Mullan did
that also needed to bind to sec_clientd.  He extracted the common code into
sec_login_util_bind_to_sec_clientd() in sec_login_util.c which caches the
binding to sec_clientd (without auth info).  That routine passes back a copy
of the handle, which the caller then does an rpc_binding_set_auth_info() on,
uses it in an RPC call, and then throws the copy away when it's done.  It looks
like there's no longer a problem, so I've marked this 'fix'.  Verify by
visual inspection.



CR Number                     : 10956
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Replication
Short Description             : Replica secd dumps core during
test execution on Master.
Reported Date                 : 6/15/94
Found in Baseline             : 1.1
Found Date                    : 6/15/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : security/server/rs_attr.c
Sensitivity                   : public

[6/15/94 public]

Using the builds available on 6/14, configured a Master HP and a Slave on
486/OSF1. Succesfully ran the 1.0.3 api tests on the HP master. During
execution of new tests (sec_rgy_atr*) on the HP master, secd on 486 replica
dumps core. 

In file ../client/rca/priv.c the function sec_priv_become_delegate() makes 
call to rpc_ss_client_free() with possibley incorrect pointer value.

        /* done with ndr encoded response */
        rpc_ss_client_free((idl_void_p_t) ptgt_rep);


Here is the traceback info:

# tcc -e /usr/users/desai/sectest/dce1.1/tet-tests
journal file name is:
/usr/users/desai/sectest/dce1.1/tet-tests/results/0002e/journal
PASSED sec_rgy_attr_update() integer test
PASSED sec_rgy_attr_lookup_by_id() integer test.
PASSED verificiation of integer test.
PASSED sec_rgy_attr_update() test_void
PASSED sec_rgy_attr_lookup_by_id() test_void.
PASSED verificiation of test_void.
PASSED sec_rgy_attr_update() test_any
PASSED sec_rgy_attr_lookup_by_id() test_any.
PASSED verificiation of test_any.
PASSED sec_rgy_attr_update() test_printstring
PASSED sec_rgy_attr_lookup_by_id() test_printstring.
PASSED verificiation of test_printstring.
PASSED sec_rgy_attr_update() test_printstring_array
PASSED sec_rgy_attr_lookup_by_id() test_printstring_array.
PASSED verificiation of test_printstring_array.
PASSED sec_rgy_attr_update() test_bytes
PASSED sec_rgy_attr_lookup_by_id() test_bytes.
PASSED verificiation of test_bytes.
PASSED sec_rgy_attr_update() test_confidential_bytes
PASSED sec_rgy_attr_lookup_by_id() test_confidential_bytes.
PASSED verificiation of test_confidential_bytes.
PASSED sec_rgy_attr_update() test_i18n_data
PASSED sec_rgy_attr_lookup_by_id() test_i18n_data.
PASSED verificiation of test_i18n_data.
PASSED sec_rgy_attr_update() test_uuid
PASSED sec_rgy_attr_lookup_by_id() test_uuid.
PASSED verificiation of test_uuid.
PASSED sec_rgy_attr_update() test_attr_set
PASSED sec_rgy_attr_lookup_by_id() test_attr_set.
PASSED verificiation of test_attr_set.
PASSED sec_rgy_attr_update() test_binding
PASSED sec_rgy_attr_lookup_by_id() test_binding.
PASSED verificiation of test_binding.
PASSED sec_rgy_attr_update() test them all
PASSED sec_rgy_attr_lookup_by_id() test them all.
PASSED verificiation of test them all.
PASSED sec_rgy_attr_lookup_by_id() for 1 attr id.
PASSED sec_rgy_attr_lookup_by_id() for 0 attr ids.
PASSED sec_rgy_site_open_update()
PASSED sec_rgy_attr_sch_create_entry()
PASSED sec_rgy_attr_sch_lookup_by_id()
PASSED sec_rgy_attr_sch_lookup_by_name()
PASSED sec_rgy_attr_sch_cursor_init()
PASSED sec_rgy_attr_sch_scan()
PASSED sec_rgy_attr_sch_update_entry()

After the above test is PASSED, core dump happens on slave 486.

root@[sunrise]:gdb secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..(no debugging symbols found)...
Core was generated by `secd'.
Program terminated with signal 11, Segmentation fault.
#0  0xa421fde6 in rwl_e_owner ()
(gdb) b *__start
Breakpoint 1 at 0x400000
(gdb) run
Starting program: /usr/bin/secd 
(no debugging symbols found)...(no debugging symbols found)...
Breakpoint 1, 0x400000 in __start ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0xa421fde6 in rpc_ss_mem_release (5942600, 0, 1)
(gdb) bt
#0  0xa421fde6 in rpc_ss_mem_release (5942600, 0, 1)
#1  0xa4222483 in rpc_ss_free ()
#2  0xa421fc4b in rpc_ss_client_free ()
#3  0xa428e429 in sec_priv_become_delegate ()
#4  0xa42bce9b in sec_login_util_get_krb_ptgt ()
(gdb) info reg
eax            0x0      0
ecx            0x5aad48 5942600
edx            0x6c4018 7094296
ebx            0x0      0
esp            0xc60b1d44       -972350140
ebp            0x5a99a8 5937576
esi            0x4a48a0 4868256
edi            0xa43d858c       -1539471988
eip            0xa421fde6       -1541276186
ps             0x10202  66050
cs             0x17     23
ss             0x1f     31
ds             0xa43f001f       -1539375073
es             0xc60b001f       -972357601
fs             0x670000 6750208
gs             0xa43c0000       -1539571712

[7/11/94 public]
This bug fix is in HP's next code drop to OSF, which is now in progress.

[7/20/94 public]
OSF has this code drop since the end of last week - please
verify if this has been fixed or not.

[8/2/94 public]
Verified.  Closed.



CR Number                     : 10950
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : security master dies on RIOS
when slave replica is created.
Reported Date                 : 6/14/94
Found in Baseline             : 1.1b9
Found Date                    : 6/14/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : src/security/server/rrs/rrs_prop_attr.c
Sensitivity                   : public

[6/14/94 public]

I have a 3 machine cell that was installed with last night's build.
I then re-configured as follows:

machine 1:  sec server
            cds server
machine 2 and 3 are DCE clients.
All three machines are running dts as a local server.

As soon as I create a slave replica using dce_config, secd dies on
machine1, the master security server.

I have to kill the slave security server and re-start the master. But
then the slave server is unavailable.

[6/15/94 public]

please include a traceback from the master sec server death - see 
rajendra about getting this.

[6/15/94 public]
Here is the info from gdb traceback on the core from Julie's machine.
Her configuration was: 486 Master and 2 HP slaves. 

% gdb secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..(no debugging symbols found)...
Core was generated by `secd'.
Program terminated with signal 11, Segmentation fault.
#0  0x4822a9 in rsdb_attr_cursor_init ()
(gdb) b *__start
Breakpoint 1 at 0x400000
(gdb) run
Starting program: /usr/sandbox/opt/dcelocal/bin/secd 
(no debugging symbols found)...
Breakpoint 1, 0x400000 in __start ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0x4822a9 in rsdb_attr_cursor_init ()
(gdb) bt
#0  0x4822a9 in rsdb_attr_cursor_init ()
(gdb) where
#0  0x4822a9 in rsdb_attr_cursor_init ()
(gdb) info reg
eax            0x16     22
ecx            0x0      0
edx            0x68cdf0 6868464
ebx            0x4822a0 4727456
esp            0xc6081d44       -972546748
ebp            0x689428 6853672
esi            0x68ce08 6868488
edi            0x689448 6853704
eip            0x4822a9 4727465
ps             0x10206  66054
cs             0x17     23
ss             0x1f     31
ds             0x4e001f 5111839
es             0x1f     31
fs             0xa41a0000       -1541799936
gs             0x0      0

[6/15/94 public]

I've recreated the problem with the latest nightly build bits. Configured a
Master on 486/OSF1. Trying to configure a replica on HP, secd on 486 Master
dumps core. I started secd on master with -d -v to get some more info.

-----
    Wed Jun 15 11:34:06 1994: by /.../0615_cell/cell_admin from
003d7f2a-1a87-1d
ff-829e-0000c04fd04c@ncacn_ip_tcp:130.105.4.208[4536]
    Attempt Replace acl of type object [Key = 'replist']
-----
    Wed Jun 15 11:34:06 1994: by /.../0615_cell/cell_admin from
003d7f2a-1a87-1d
ff-829e-0000c04fd04c@ncacn_ip_tcp:130.105.4.208[4536]
    Replace acl of type object [Key = 'replist']
-----
    Wed Jun 15 11:34:09 1994: by /.../0615_cell/cell_admin from
003d7f2a-1a87-1d
ff-829e-0000c04fd04c@ncacn_ip_tcp:130.105.4.208[4538]
    Attempt Replace acl of type object [Key = 'replist']
-----
    Wed Jun 15 11:34:09 1994: by /.../0615_cell/cell_admin from
003d7f2a-1a87-1d
ff-829e-0000c04fd04c@ncacn_ip_tcp:130.105.4.208[4538]
    Replace acl of type object [Key = 'replist']
-----
    Wed Jun 15 11:34:34 1994: by /.../0615_cell/hosts/spring/self from
003d7f2a-
1a87-1dff-829e-0000c04fd04c@ncacn_ip_tcp:130.105.4.208[4550]
    Attempt add replica [Key = '2a94fc04-8857-11cd-bce9-080009251539']
-----
    Wed Jun 15 11:34:34 1994: by /.../0615_cell/hosts/spring/self from
003d7f2a-
1a87-1dff-829e-0000c04fd04c@ncacn_ip_tcp:130.105.4.208[4550]
    Add replica succeeded [Key = '2a94fc04-8857-11cd-bce9-080009251539']
SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
SECD prop_driver: prop failed  status
 - 0x16c9a0d6 - not registered in endpoint map (dce / rpc)
SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
SECD prop_driver: rep binding, get auth handle succeeded
SECD prop_driver: rep binding succeeded
SECD prop_driver: attempt to init slave
SECD prop_driver: init slave status 0
SECD prop_driver: prop succeeded
-----
    Wed Jun 15 11:34:51 1994: by /.../0615_cell/hosts/spring/self from
003d7f2a-
1a87-1dff-829e-0000c04fd04c@ncacn_ip_tcp:130.105.4.208[4554]
    Attempt copy database
Segmentation fault (core dumped)

root@[sunrise]:gdb secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..(no debugging symbols found)...
Core was generated by `secd'.
Program terminated with signal 11, Segmentation fault.
#0  0x4822a9 in rsdb_attr_cursor_init ()
(gdb) b *__start
Breakpoint 1 at 0x400000
(gdb) run
Starting program: /u1/opt/dcelocal/bin/secd
(no debugging symbols found)...(no debugging symbols found)...
Breakpoint 1, 0x400000 in __start ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0x4822a9 in rsdb_attr_cursor_init ()
(gdb) bt
#0  0x4822a9 in rsdb_attr_cursor_init ()

[6/16/94 public]
Fix submitted.

[6/17/94 public]

Using last NB, this still a problem when the security master is
a RIOS and the replica an HP. The configuration of the replica on
the HP finishes without and error but the secd on the master dumps 
core.

[6/20/94 public]
The RIOS master still dumps core when replica is created on HP/UX. The core
dump is not meaningful. There is some info from secd screen dump from RIOS
server.

-----
    Fri Jun 17 10:19:23 1994: by /.../s_cell.qadce.osf.org/cell_admin from
0036fc22-aa7d-1e01-a69d-02608c2ffd91@ncacn_ip_tcp:130.105.201.10[4866]
    Attempt Replace acl of type object [Key = 'replist']
-----
    Fri Jun 17 10:19:24 1994: by /.../s_cell.qadce.osf.org/cell_admin from
0036fc22-aa7d-1e01-a69d-02608c2ffd91@ncacn_ip_tcp:130.105.201.10[4866]
    Replace acl of type object [Key = 'replist']
-----
    Fri Jun 17 10:19:26 1994: by /.../s_cell.qadce.osf.org/cell_admin from
0036fc22-aa7d-1e01-a69d-02608c2ffd91@ncacn_ip_tcp:130.105.201.10[4868]
    Attempt Replace acl of type object [Key = 'replist']
-----
    Fri Jun 17 10:19:26 1994: by /.../s_cell.qadce.osf.org/cell_admin from
0036fc22-aa7d-1e01-a69d-02608c2ffd91@ncacn_ip_tcp:130.105.201.10[4868]
    Replace acl of type object [Key = 'replist']
-----
    Fri Jun 17 10:19:54 1994: by /.../s_cell.qadce.osf.org/hosts/west/self
from 0036fc22-aa7d-1e01-a69d-02608c2ffd91@ncacn_ip_tcp:130.105.201.10[4874]
    Add replica succeeded [Key = '2db32f12-89df-11cd-a3c2-080009257d69']
SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
SECD prop_driver: prop failed  status
 - 0x16c9a0d6 - not registered in endpoint map (dce / rpc)
SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
Illegal instruction(coredump)

[06/20/94 public]

I just configured a cell with the Beta release. The SEC master 
on a RIOS dumps core when a SEC replica was configured on an OSF1 
machine. (this was what happened when configuring a replica on a HPUX)

In summary, if the SEC master is on a RIOS, the configuration of
a SEC replica on OSF1 or HPUX will fail.

[7/7/94 public]

OT verify pass:  Bug verified by Martha (dassarma) as still occurring in
NB 7/6.

[mdf 7/14/94 public] 
I just verified that this bug will be fixed when the 
Hewlett-Packard Security Code drop is taken.
Verified by setting up the rios test machine as the master and after
running the full set of security functional tests, (needed for the 
submit request) I set up the HPUX machine (which was also used to
verify the code for the submit request, as a replica) and everything
works!!!  I was able to bring down the master and verify that the
attribute was exported to the replica.

[ mob 7/20/94 public]
This should be fixed at the OSF now, could you please verify this?

[7/28/94 public]
Can no longer repropduce secd SEGV on RIOS master at config time.  Closed.



CR Number                     : 10932
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_clientd
Short Description             : sec_clientd fails to get ticket and cannot construct third party preauthentication.  timestamp preauthentication is used for all logins.
Reported Date                 : 6/10/94
Found in Baseline             : 1.1
Found Date                    : 6/10/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : sec_clientd.c
Sensitivity                   : public

[6/10/94 public]

sec_clientd needs a ticket to the kdc in the cell the user is trying to
login to in order to construct a third party preauthentication request.
a fix for the intercell case has introduced a bug in the local case. The
preauthentication code defaults to a KRB5 Beta 3 Timestamp preauthentication 
when third party preauthentication fails .  In the current 1.1 Beta code, 
only timestamp preauthentication will work in a local cell.
A
A
and that is what is used now.

[6/17/94 public]
Removed intercell bug related info to CR 11001.

[7/19/94 public]
Is this bug fixed by the recent HP code drop?  What is the easiest 
way for me to verify this?

[8/16/94 public]

The fix was made to sec_clientd.c. I just verified that it has been
submitted.

HOWEVER, this fix must also be made to the sec_clientd portion of
dced. In sec_clientd.c, rsec_login_get_trusted_preauth(), there is
a new call to sec_krb_tgtprinc_from_dce_cell_pair(). Can someone
verify that this new call is in dced?

[8/16/94 public]
I just checked the sv_preauth.c file under dced and the new call is in
there. This code was added on 7/18/94 according to the comment header. 
Comparing the code in sec_clientd.c and sv_preauth.c files for the above
call is the same.



CR Number                     : 10924
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Security Memory Leak Tracking and Fixing
Reported Date                 : 6/9/94
Found in Baseline             : 1.1
Found Date                    : 6/9/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : krb5/kdc/kdc_utils.c, server/lm/lm_login.c, server/rsdb/rsdb_attr_schema.c, helper/auth_helper.c, server/rsdb/rsdb_daclmanager.c, security/utils/sec_encode.c, krb5/lib/krb/preauth.c, krb5/lib/crypto/common/desglue.c
Sensitivity                   : public

[6/9/94 public]

Using the nightly build available 06-09, secd grows 1300 bytes per
login.  I executed dce_login_noexec for 60 minutes, 1571 logins were
done and secd grew from 11.0M to 13.0M.  The same test done on a
1.0.3 security server showed growth of 1.0M and then secd stopped
growing.  One more note, in 60 minutes on 1.1, 1571 logins were done.
The same test on 1.0.3 completed 2387 logins in 60 minutes.  This shows
that dce_login_noexec is 52% slower on 1.1 then it was on 1.0.3.

DCE 1.1 Security Server on OSF/1
--------------------------------

START:

Thu Jun  9 13:36:27 EDT 1994
USER       PID %CPU %MEM   VSZ  RSS TTY      STAT STARTED         TIME COMMAND
root      5877  8.7  8.6 11.0M 3.10 ??       S <  13:36:08     0:07.85 secd

END:

Thu Jun  9 14:36:35 EDT 1994
USER       PID %CPU %MEM   VSZ  RSS TTY      STAT STARTED         TIME COMMAND
root      5877  6.0 14.5 13.0M 5.21 ??       S <  13:36:08     5:38.52 secd

[8/11/94 public]
Is this still happening?

[8/12/94 public]

Yes, as of two weeks ago, this was still happening. However, I don't
know if the sizes reported above are still the same. I will run the test
again and report back the results.

[8/29/94 public]

I run this test again and the results do not seem to be as bad as 
previously reported.

Using BL-16 and having a secd master (no replicas) running on an HP,
I found.

secd initial size according to ps -el          = 1504 blocks
secd size after having executed 2556 dce_login = 2304 blocks
 
This gives 160 bits per dce_login. If my math is correct, would 
this number be what is expected?

[8/31/94 public]
Thanks for the updated info...  There's no expected number that we know of.
Any server should increase in size up to a certain point as clients contact
it because the RPC runtime sets up a context for a client and keeps it around
for a period of time (more for DG, less time for CN).  So, you would expect
it to grow for a while (15mins, .5 hr?) and then stay at that size if the
clients were not performing operations that should make the server grow
(ie: adding accounts).  SO, if secd hit 2304 blocks after 15 mins and stayed
that size even after an hour of dce_login's, that's ok.  If it was still
increasing in size at 1/2hr, 1hr, 1.5hr, 2hr... then there's definitely a
leak.  Also, is it still that much slower than before?  Does the slowness
go away if you start secd with the DCEAUDITOFF env variable set to 1?
This is lower priority than anything else holding up system tests, but the
next time you get a chance to get back to this, the additional information
I mentioned would be helpful...

[9/6/94 public]
Two memory leaks I just found by code inspection after becoming suspicious
because of certain things showing up in the core dump analysis...  They are
only part of the problem though, and I'm almost sure there's more leaks, so
I'll leave this assigned to sec_bat and each engineer can just submit leak
fixes against this CR as we find them...

security/server/lm/lm_login.c
			to->data.tagged_union.o_string_binding=
				malloc(from->origin.length);
never freed?  (Maryanne Hondo looking into that now).

security/krb5/kdc/kdc_util.c
    calls rsdb_attr_lookup_by_name() with an allocator parameter of NULL
    multiple times.  The comments above rsdb_attr_lookup_by_name say the
    following:
 *	allocator - if NULL, use malloc for sec_attr_p buffers and
 *		caller must free buffers.
 *		Set allocator to rpc_ss_allocate when calling from
 *		manager code called from a server stub so that 
 *		memory is automatically freed.

    But, the attribute returned is never free()d.  This could be a fairly
    big leak over time (3 attribute lookups per validate_as_request()).

[9/7/94 public]
This bug has been raised in priority and will be used as the mechanism
to track/fix security memory leaks.

[9/12/94 public]

I have submitted two files with fixes for memory leaks.. 
krb5/kdc/kdc_util.c -- call rpc_ss_allocate instead of with NULL pointer
server/lm/lm_login.c  -- call rpc_ss_allocate instead of malloc

[9/13/94 public]
Submitting fix for leak in rsdb_attr_schema.c today.  Leaving this CR open
because there's still leaks we haven't found yet.  Maryanne will be submitting
kdc_util.c and lm_login.c with better fixes for those potential leaks today.

[9/14/94 public]
Submitted fix for memory leak in dfsbind - auth_helper.c

[9/19/94 public]
server/rsdb/rsdb_daclmgr.c: sec_acl_mgr_get_access() calls
sec_cred_initialize_cursor(), uses the cursor, but never calls
sec_cred_free_cursor() before returning.  Leaks a structure of 2 unsigned32's
for each access check.

[9/20/94 public]
Leaks of pa->groups and pa->foreign_groupsets in sec_encode_pa_data_free()
in sec_encode.c and buggy code for freeing foreign groupsets.  Fix built &
tested, waiting for drb approval to submit.

[9/21/94 public]
security/krb5/lib/krb/preauth.c
krb5_verify_padata() only called krb5_finish_key(&eblock) to zero out
the key and free the buffer on error.  Since it never uses eblock again, it
should cleanup eblock whether or not the status is ok after the call to
decrypt.  (Fix verified verbally by Bill & Greg).

security/krb5/lib/crypto/common/desglue.c
mit_des_decrypt_func() was moving memory within a buffer using memcpy(),
causing an overlapping copy.  This is incorrect and the behavior is undefined
according to the HP memcpy() manpage, the ANSI spec and Sentinel's safety
checks.  Bill recommended using memmove() instead of memcpy() and then checked
the Kerberos Beta4 sources and it looks like MIT has already fixed the problem
making this exact same change.  Since picking up the Beta4 code for this rtn
may involve other dependencies on Beta4 that we can't pick up yet, I'm just
changing the memcpy() to memmove().

[9/21/94 public]
Submitted last of fixes for the known memory leak problems (all reported
leaks that aren't related to cached data somehow), so I've marked this one
'fix'.  If anybody finds that there are more leaks, CRs should be opened
for those as appropriate.



CR Number                     : 10901
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : disparity in handling namecache and context files
Reported Date                 : 6/8/94
Found in Baseline             : 1.0.2
Found Date                    : 6/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : sec_login_pvt.c
Sensitivity                   : public

[6/8/94 public]
  sec_login_pvt_set_context() goes to lengths to ensure that the
namecache is created with the euid as the owner, yet goes to greater
lengths to ensure that the ticket and context files are owned by the UID
of the context involved.
  The result (here) is that, due to the need to set the DCE context
before setting the UID within an integrated login (DCE/DFS login.dce),
that all namecache files obtained through interactive logins are owned
by root, have mode 0600, and are no-op files as the user for each file
cannot open, read, write, or destroy them.
  Why not chown() the namecache files in exactly the manner used to set
up the ticket files?

[6/8/94 public]
   In the above description, I filed to mention that the mode on the
observed namecache files was 0600 *only* due to the umask present for
use by login.dce . The following diff makes that behavior (0600)
standard, in order to prevent any problems of users perusing the
name caches of others, for whatever reason.
-------------------------------------------------------------------------------
Changes to security/client/login/sec_login_pvt.c in open delta travis-tr12298-sec-login-should-chown-the-namecache-files-too:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/client/login/RCS/sec_login_pvt.c,v
retrieving revision 10.2
diff -cbt -r10.2 security/client/login/sec_login_pvt.c
*** 10.2	1994/04/14 00:00:00
--- security/client/login/sec_login_pvt.c	1994/06/08 16:53:10
***************
*** 2482,2489 ****
               *  from deleting the name cache file ( via kdestroy).
               */
              lcp->namecache_name = (NAMECACHE_NAME(ncfn, new_cache)) ;
!             ncfd=open(lcp->namecache_name, O_CREAT | O_TRUNC , 0644);
              (void) close(ncfd);
          }
      }
  
--- 2482,2497 ----
               *  from deleting the name cache file ( via kdestroy).
               */
              lcp->namecache_name = (NAMECACHE_NAME(ncfn, new_cache)) ;
!             ncfd=open(lcp->namecache_name, O_CREAT | O_TRUNC , 0600);
!             if (ncfd != -1) {
!               if (INFO_STATE(lcp) == info_certified
!                   && UNIX_CREDS(lcp).pwent != NULL) {
!                 if (fchown(ncfd, UNIX_CREDS(lcp).pwent->pw_uid, -1) == -1)
!                   if (errno != EPERM)
!                     *stp = errno;
!               }
                (void) close(ncfd);
+             }
          }
      }
  
-------------------------------------------------------------------------------



CR Number                     : 10895
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_cred
Short Description             : sec_cred_get_extended_attr returns "invalid privilege attribute handle"
Reported Date                 : 6/8/94
Found in Baseline             : 1.1b9
Found Date                    : 6/8/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : gssapi.c
Sensitivity                   : public

[6/8/94 public]

The following sequence of calls results in an "invalid pa_handle error "
reported from the sec_cred_get_extended_attr() function:

* The DSA calls gss_acquire_cred, which works fine.
* gss_accept_sec_ctx is called, which also is fine. A return token and the clien
ts
  name is returned.
* In order to retrieve the ERA value from the token we call on
  gssdce_extract_creds_from_sec_context , sec_cred_get_initiator and
  sec_cred_initialize_attr_cursor. All these  return ok. The subsequent
  call on sec_cred_get_extended_attr fails.
  The pa-handle structure element magic seems not to be set to the
  SEC__CRED_PA_HANDLE_MAGIC value.

attached is a piece of code and the output produced by it.

A1) Sourcecode:

    GDS_SEC_TRACE1(3,"ENTRY dsa_sec__get_ext_attr ctx_h <%d>",ctx_h);

    /* get a handle to the chain of EPACs */
    ret = gssdce_extract_creds_from_sec_context ( &minor_st,
                                                ctx_h,
                                                &epac_list_handle);
    if ( ret != GSS_S_COMPLETE )
        {
        gds_sec__map_gss_error( GSSDCE_C_OID_DCE_KRBV5_DES, ret, minor_st, statu
s);
        GDS_SEC_TRACE2(2,"gssdce_extract_PAC_from_sec_context failed:<%d>:%s",re
t,status->logstring );
        return(D2_ERROR);
        }

    GDS_SEC_TRACE0(5,"gssdce_extract_creds_from_sec_context returns ok");
    /* get a handle to the initiators EPAC in the chain */

    epac_handle = sec_cred_get_initiator ( epac_list_handle, &dce_status);
    if ( dce_status != error_status_ok)
        {
        gds_sec__inq_err_text(dce_status,"sec_cred_get_initiator",dce_e_string);
        GDS_SEC_TRACE1(2,"sec_cred_get_initiator: %s",dce_e_string);
        return (D2_ERROR);
        }

  GDS_SEC_TRACE0(5,"sec_cred_get_initiator returns ok");

    /* initialize the sec_cred attr cursor */

    sec_cred_initialize_attr_cursor( &epac_cursor, &dce_status);
    if ( dce_status != error_status_ok)
        {
        gds_sec__inq_err_text(dce_status,"sec_cred_initialize_attr_cursor",dce_e
_string);
        strcpy((char*)status->logstring, (char*)dce_e_string);
        return (D2_ERROR);
        }

    GDS_SEC_TRACE0(3,"sec_cred_initialize_attr_cursor returns ok");

    /* TMP ON */
    GDS_SEC_TRACE0(3,"TMP calling sec_cred_get_extended_attr");
    sec_cred_get_extended_attrs (   epac_handle,
                                    &epac_cursor,
                                    &extended_attr,
                                    &dce_status);
    if ( dce_status != error_status_ok)
        {
        gds_sec__inq_err_text(dce_status,"sec_cred_get_extended_attrs",dce_e_str
ing);
        GDS_SEC_TRACE1(2,"sec_cred_get_extended_attrs: %s",dce_e_string);

        }

A2) output

SEC_TRACE 2 :   ENTRY dsa_accept_sec_ctx
SEC_TRACE 3 :   sec_mech:<5>
SEC_TRACE 4 :   client_token length <1151>
   60 82 04 7B  06 04 2B 18  09 08 01 00  6E 80 30 80  A0 03 02 01
   .....
   01 00 00 00  00 00 00 00  00 00 00
SEC_TRACE 5 :   use cred_h 1
SEC_TRACE 3 :   context_handle:<1>
SEC_TRACE 4 :   output_token length <93>
   60 5B 06 04  2B 18 09 08  02 00 6F 51  30 4F A0 03  02 01 05 A1
   03 02 01 0F  A2 43 30 41  A0 03 02 01  01 A2 3A 04  38 33 87 3A
   28 BC A9 7B  06 F7 7F E0  32 6E 21 52  4F 73 2A 33  CD 10 33 1E
   50 5C 74 B4  E0 9D 74 C7  B2 DC 24 89  DD 96 CC 31  69 16 29 60

   92 0F EE 66  0E 13 D6 44  19 56 C4 35  7B
SEC_TRACE 3 :   ENTRY dsa_sec__get_client_name
SEC_TRACE 3 :    dsa_sec__get_client_name uses gss_name </.../c=ie/o=digital/gds
_cl1>
SEC_TRACE 3 :   ENTRY dsa_sec__get_ext_attr ctx_h <1>
SEC_TRACE 5 :   gssdce_extract_creds_from_sec_context returns ok
SEC_TRACE 5 :   sec_cred_get_initiator returns ok
SEC_TRACE 3 :   sec_cred_initialize_attr_cursor returns ok
SEC_TRACE 3 :   TMP calling sec_cred_get_extended_attr
SEC_TRACE 2 :   sec_cred_get_extended_attrs: invalid privilege attribute handle
(dce / sec)
SEC_TRACE 2 :   dsa_sec__get_ext_attr failed

[7/20/94 public]
This works in the absence of gssapi.  A while back, John Wray had mentioned
that he would try to reproduce this without gssapi being involved... Since
the same calls work for us without gssapi, I've reassigned this to John.

[7/22/94 public]
I've replicated this problem, and it doesn't appear to be anything to do
with GSSAPI.  The sequence of security calls that is being made is as follows:

sec_krb_gss_decode_message(&received_message,
                           &client_name,
                           &client_pac,
                           &client_creds,
                           ...);
/* The above is effectively a call to sec_krb_decode_message_common as far
 * as the client_creds parameter is concerned
 */

epac_handle = sec_cred_get_initiator(client_creds,
                                     &dce_status);

sec_cred_initialize_attr_cursor(&epac_cursor,
                                &dce_status);

sec_cred_get_extended_attr(epac_handle,
                           &epac_cursor,
                           &extended_attr,
                           &dce_status);

This last call fails, even though the preceeding sec_cred_get_initiator() call
returns a success status.  I have a version of gssapi.c that makes these
calls without any intervening code, and demonstrates the problem.  I'm inclined to reassign this OT back to HP, but I'll hold off doing that for a couple
of days while I do a bit more testing.

[7/28/94 public]
I was too hasty.  This is at least partly a GSSAPI problem.  Elsewhere
within GSSAPI I call sec_cred_get_initiator() on the same rpc_authz_handle_t,
and free the returned sec_cred_pa_handle_t via a call to
sec_cred_free_pa_handle().  According to sec_cred.idl, this routine should be
used to free local resources associated with pa-handles returned by
sec_cred_get_initiator().  However, freeing this handle seems to cause
subsequent invocations of sec_cred_get_initiator() to return invalid
pa-handles.

To allow SNI to continue, I will comment-out the call to
sec_cred_pa_handle;  Can someone from HP let me know whether I'm supposed to
be able to free a derived pa-handle without affecting the credentials it
was obtained from?  If I don't free it, will I have a memory-leak?

[8/3/94 public]
I have submitted the above work-around (omitting the call to
sec_cred_free_pa_handle()).  My understanding is that this will
cause a memory leak, and I have opened a new OT against GSSAPI
(OT 10824) to remind myself to undo this change when the underyling
problem is fixed.  I've re-assigned this OT to HP, as it appears to
be a problem with sec_cred_free_pa_handle.  I've also down-graded
the severity to C1, as simply not calling free_pa_handle is a work-around,
albeit a not very satisfactory one.

[8/29/94 public]
John:  We believe the following is the problem, and since it would have to
be fixed in gssapi I've reassigned it back to you.  Greg had replied with
this info a couple of weeks ago and I had asked him to forward it to you,
but it looks like he had so much else to do that it fell off the plate.
Please try the fix and let us know what happens.  We're pretty sure this is
the problem, since the error you're seeing is what you should see if the
handle was passed incorrectly, and other things use this free routine correctly
without causing this problem.

(From Greg:)
  Pay close attention to levels of indirection in the
  call to sec_cred_free_pa_handle().  A sec_cred_pa_handle_t
  is a  (void *).  sec_cred_free_pa_handle() takes a 
  (sec_cred_pa_handle_t *).  Since the base type
  is (void *), the compiler won't complain if you forget
  the second level of indirection :-(.  

  Since sec_cred_free_pa_handle() just NULLs out the pointer,
  (to ensure that subsequent atempts to use the pa_handle 
  after it has been freed will result in "invalid_pa_handle"
  errors :-), and the pa_handle itself points to some pretty
  important internal storage ...

[9/15/94 public]

Greg's suggestion was right.  Thanks.  For 1.2, let's prohibit the use of
(void *) across any public APIs!

Fix submitted today.



CR Number                     : 10870
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa, i486
S/W Ref Platform              : osf1, hpux
Component Name                : sec
Subcomponent Name             : rrs_rep_remote.c
Short Description             : error 1621: Too few arguments
Reported Date                 : 6/6/94
Found in Baseline             : 1.1
Found Date                    : 6/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : rrs_rep_remote.acf
Sensitivity                   : public

[6/6/94 public]

cc: "/project/dce/build/dce1.1-snap/src/security/server/rrs/rrs_rep_remote.c", line 122: error 1621: Too few arguments for "<<<NULL_SYMBOL>>>".
cc: "/project/dce/build/dce1.1-snap/src/security/server/rrs/rrs_rep_remote.c", line 136: error 1621: Too few arguments for "<<<NULL_SYMBOL>>>".
cc: "/project/dce/build/dce1.1-snap/src/security/server/rrs/rrs_rep_remote.c", line 151: error 1621: Too few arguments for "<<<NULL_SYMBOL>>>".
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1

{desai 6/13/94 public]
Fix already submitted by Mike F.



CR Number                     : 10864
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_attr_util
Short Description             : printstring_array cases missing
Reported Date                 : 6/3/94
Found in Baseline             : 1.1
Found Date                    : 6/3/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : security/utils/sec_attr_util.c
Sensitivity                   : public

[6/3/94 public]
srvrconf_attr_replace() seems not really copy the sec_attr value
but it leaves the server->attributes.count to non-zero, so that while clinet
program reading data it core dumps. Don't know why sec_attr_util_alloc_copy()
didn't do a its job(copy)?

Here is some trace info,


Breakpoint 1, srvrconf_attr_replace (h=0x4b8498, id_uuid=0x5bcb58, 
    attributes=0x5bcb50, st=0x5bcb4c)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/scops.c:191
191         *st = error_status_ok;
(gdb) n
194         dce_lock_riw(sc_table.lock, st);
(gdb) 
195         if ((sp = srvr_find_by_uuid(&sc_table, id_uuid, st)) == NULL) {
(gdb) 
202         if (!dced_authorized(h, &sc_obj_type,
(gdb) 
209         dced_attr_list_free_ptrs(&sp->data.attributes);
(gdb) 
210         attr_list_copy(&sp->data.attributes, attributes, copy_via_malloc, st);
(gdb) n
211         dce_lock_unlock(sc_table.lock, st);
(gdb) p attributes
$1 = (struct dced_attr_list_s_t *) 0x5bcb50
(gdb) p *attributes
$2 = {count = 1, list = 0x49f788}
(gdb) p attributes->list
$3 = (sec_attr_t *) 0x49f788
(gdb) p *attributes->list
$4 = {attr_id = {time_low = 9127901, time_mid = 28361, 
    time_hi_and_version = 7530, clock_seq_hi_and_reserved = 154 '', 
    clock_seq_low = 199 '', node = {"\000\000T"}}, attr_value = {
    attr_encoding = sec_attr_enc_printstring_array, tagged_union = {
      signed_int = 5340048, printstring = 0x517b90 "\003", 
      string_array = 0x517b90, bytes = 0x517b90, idata = 0x517b90, uuid = {
        time_low = 5340048, time_mid = 0, time_hi_and_version = 0, 
        clock_seq_hi_and_reserved = 0 '\000', clock_seq_low = 0 '\000', 
        node = {"\000\000\000\000\000\000"}}, attr_set = 0x517b90, 
      binding = 0x517b90}}}
(gdb)  p attributes->list->attr_value
$5 = {attr_encoding = sec_attr_enc_printstring_array, tagged_union = {
    signed_int = 5340048, printstring = 0x517b90 "\003", 
    string_array = 0x517b90, bytes = 0x517b90, idata = 0x517b90, uuid = {
      time_low = 5340048, time_mid = 0, time_hi_and_version = 0, 
      clock_seq_hi_and_reserved = 0 '\000', clock_seq_low = 0 '\000', 
      node = {"\000\000\000\000\000\000"}}, attr_set = 0x517b90, 
    binding = 0x517b90}}
(gdb) p attributes->list->attr_value->tagged_union.string_array.num_strings
$6 = 3
(gdb) p attributes->list->attr_value->tagged_union.string_array.strings[0]
$7 = (char_p_t) 0x517bd0 "line1"
(gdb) p sp->data.attributes.list->attr_value->tagged_union.string_array.num_str
ings
$8 = Cannot access memory at address 0x0.
(gdb) p sp->data.attributes.list->attr_value
$9 = {attr_encoding = sec_attr_enc_printstring_array, tagged_union = {
    signed_int = 0, printstring = 0x0, string_array = 0x0, bytes = 0x0, 
    idata = 0x0, uuid = {time_low = 0, time_mid = 29, time_hi_and_version = 0, 
      clock_seq_hi_and_reserved = 0 '\000', clock_seq_low = 0 '\000', 
      node = {"\000\000\035\000\000\000"}}, attr_set = 0x0, binding = 0x0}}
(gdb) n
212         dce_db_store_by_uuid(sc_db, &sp->data.id, sp, st);
(gdb) 
213     }
(gdb) 

Breakpoint 1, srvrconf_attr_replace (h=0x4b8998, id_uuid=0x5bcb00, 
    attributes=0x5bcaf8, st=0x5bcaf4)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/scops.c:191
191         *st = error_status_ok;
(gdb) n
194         dce_lock_riw(sc_table.lock, st);
(gdb) 
195         if ((sp = srvr_find_by_uuid(&sc_table, id_uuid, st)) == NULL) {
(gdb) 
202         if (!dced_authorized(h, &sc_obj_type,
(gdb) 
209         dced_attr_list_free_ptrs(&sp->data.attributes);
(gdb) 
210         attr_list_copy(&sp->data.attributes, attributes, copy_via_malloc, st);
(gdb) s
attr_list_copy (new=0x4c16a8, old=0x5bcaf8, alloc=0x40429c <copy_via_malloc>, 
    st=0x5bcaf4)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:473
473         *st = error_status_ok;
(gdb) n
474         if ((i = new->count = old->count) != 0) {
(gdb) 
475             for (new->list = (*alloc)(i * sizeof *new->list); i; ) {
(gdb) p i
$10 = 1
(gdb) n
476                 i--;
(gdb) 
477                 sec_attr_util_alloc_copy(/*alloc, */
(gdb) s
475             for (new->list = (*alloc)(i * sizeof *new->list); i; ) {
(gdb) 
481     }
(gdb)

[06/06/94 public]
It turns out that the bug was that void sec_attr_util_alloc_copy didn't
have a switch for the printstring array.  Added.



CR Number                     : 10853
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Missing dependencies caused build failures.
Reported Date                 : 6/3/94
Found in Baseline             : 1.1
Found Date                    : 6/3/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/server/rrs/Makefile
Sensitivity                   : public

[6/3/94 public]

Will add the following dependencies back in!!!

9,11d8
< # Revision 1.1.6.2  94/06/03  8:35:05  mdf
< #             Added dependency information for rs_repadm and rs_replist
< # 
70,71d66
<                       rs_repadm.idl   \
<                       rs_replist.idl  \
85,86d79
<                       rs_repadm.h     \
<                       rs_replist.h    \

[6/13/94 public]
Fix submitted by Mike F.



CR Number                     : 10849
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security tests
Short Description             : incorrect comment leader
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : the four files listed below
Sensitivity                   : public

[6/2/94 public]

The following files have incorrect comment leaders in ODE and in 
the file.

    ./test/functional/security/grp_override/tet_code    NONE
    ./test/functional/security/grp_override/tet_scen    NONE
    ./test/functional/security/grp_override/tetexec.cfg NONE
    ./test/security/tet-tests/tet_scen.dat  NONE

You should do the following to fix it:

1) bcs -c "# " <filename>

2) checkout the file and change NONE to '# ' (without the quotes).

thanks
annie

[06/09/94 public]
fix comment leader and add copyright



CR Number                     : 10845
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security/gssapi/gss_msgs.sms
Short Description             : incorrect comment leader in ODE and in file
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : security/gssapi/gss_msgs.sm
Sensitivity                   : public

[6/2/94 public]

Incorrect comment leader in ODE and in file for security/gssapi/gss_msgs.sms

This file has the ODE comment leader as NONE.  It should be set to '# '.
So, please change this using 

    bcs -c "# " security/gssapi/gss_msgs.sms

in your sandbox.

You should then check the file out and fix the comments in there 
from 

## @OSF_COPYRIGHT@
## HISTORY

to

# @OSF_COPYRIGHT@
# HISTORY

thanks
annie

[06/09/94 public]

change comment leader and added copyright



CR Number                     : 10844
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security/krb5/lib/crypto/domestic/NOT_FOR_EXPORT
Short Description             : incorrect comment leader
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : security/krb5/lib/crypto/domestic/N
OT_FOR_EXPORT
Sensitivity                   : public

[6/2/94 public]

The file security/krb5/lib/crypto/domestic/NOT_FOR_EXPORT
has incorrect comment leader inside the file.

The comment leader is correct in ode.  It is set to ' * '.

However, inside the file we have something like:

' * '@OSF_COPYRIGHT
' * ' ...

All the ' * ' NEED to have the quotes (') removed.

thanks
annie

[06/09/94 public]

Check out the file and make the necessary changes.



CR Number                     : 10824
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : GSSAPI BL3
Reported Date                 : 6/1/94
Found in Baseline             : 1.1
Found Date                    : 6/1/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : lots
Sensitivity                   : public

[6/1/94 public]
GSSAPI BL3.
Adds GSSAPI control of delegation, adds GSSAPI test program to build,
enables OSF serviceability code for GSSAPI.



CR Number                     : 10820
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd dumps core
Short Description             : secd dumps core on HP-UX with 1.0.3 client
Reported Date                 : 6/1/94
Found in Baseline             : 1.1
Found Date                    : 6/1/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : See Below
Sensitivity                   : public

[6/1/94 public]

Using the nightly build available on 05/31, secd dumps core on an HP-UX
security server when I try to configure a 1.0.3 security client.  There
is no problem doing the same thing using an AIX or OSF/1 security server.

Only XDB information I can supply:

r0  00000000 000024b5 800b27c3 7b0127b0 r4  00000002 4036fa84 00000000 67742f74
r8  00000000 00000000 00000000 00000000 r12 00000000 00000000 00000000 00000000
r16 00000000 00000000 00000000 7b007948 r20 177dc000 800b27b8 7afef488 00000000
r24 400b2814 00000001 4036fa88 40027c70 r28 177db009 4036dc3d 4024b0e0 811f14bf
    pc = 000024b5.800b27c0     priv = 3     psw = jthlnxbCVmrQPDI     sar = 16
        0x800b2770   malloc  +04ec   DEPI    -1,31,1,26
        0x800b2774   malloc  +04f0   STWS    26,0(0,5)
        0x800b2778   malloc  +04f4   LDW     0(0,3),21
        0x800b277c   malloc  +04f8   COMIBT,=,N      0,21,malloc+0510
        0x800b2780   malloc  +04fc   LDO     -140(30),25
        0x800b2784   malloc  +0500   LDO     -108(30),24
        0x800b2788   malloc  +0504   BL      _sigprocmask,2
        0x800b278c   malloc  +0508   LDO     2(0),26
        0x800b2790   malloc  +050c   LDW     -32(0,30),19
        0x800b2794   malloc  +0510   LDO     4(5),28
        0x800b2798   malloc  +0514   LDW     -212(0,30),2
        0x800b279c   malloc  +0518   LDW     -172(0,30),8
        0x800b27a0   malloc  +051c   LDW     -176(0,30),7
        0x800b27a4   malloc  +0520   LDW     -180(0,30),6
        0x800b27a8   malloc  +0524   LDW     -184(0,30),5
        0x800b27ac   malloc  +0528   LDW     -188(0,30),4
        0x800b27b0   malloc  +052c   BV      0(2)
        0x800b27b4   malloc  +0530   LDWM    -192(0,30),3
        0x800b27b8   free            BL      free,2
        0x800b27bc   free    +0004   OR      0,0,0
 >      0x800b27c0   free    +0008   LDW     -24(0,30),2
        0x800b27c4   free    +000c   LDSID   (0,2),1
        0x800b27c8   free    +0010   MTSP    1,0
        0x800b27cc   free    +0014   BE,N    0(0,2)
        0x800b27d0   free            STW     2,-20(0,30)
        0x800b27d4   free    +0004   STWM    3,192(0,30)
        0x800b27d8   free    +0008   STW     4,-188(0,30)
        0x800b27dc   free    +000c   STW     5,-184(0,30)
        0x800b27e0   free    +0010   STW     6,-180(0,30)
        0x800b27e4   free    +0014   STW     7,-176(0,30)
        0x800b27e8   free    +0018   STW     8,-172(0,30)
        0x800b27ec   free    +001c   STW     9,-168(0,30)
        0x800b27f0   free    +0020   OR      26,0,4
        0x800b27f4   free    +0024   STW     19,-32(0,30)
        0x800b27f8   free    +0028   COMIBT,=        0,26,free+0294
        0x800b27fc   free    +002c   OR      0,0,6
        0x800b2800   free    +0030   LDW     -1456(0,19),3
        0x800b2804   free    +0034   LDW     0(0,3),25
        0x800b2808   free    +0038   COMIBT,=,N      0,25,free+005c
        0x800b280c   free    +003c   BL      _sigfillset,2
 File: unknown    Procedure: free + 0x00000008    Line: unknown                

Copyright Hewlett-Packard Co. 1985,1987-1992. All Rights Reserved.
<<<< XDB Version A.09.01 HP-UX >>>>
Core file from:  secd
Child died due to: segmentation violation
WARNING: /usr/lib/end.o was not linked with this program (UE836)
         Shared-library debugging cannot be made available (UE837)
Procedures:     87
Files: 13
>t
 0 free + 0x00000008 (0, 0x400b2c24, 0x400c891c, 0x8)
 1 free + 0x00000224 (0x686f7374, 0x11, 0x400b1db0, 0)
 2 _end + 0x00083154 (0x400b1d24, 0x400b1d4c, 0x40302ce4, 0x8)
 3 _end + 0x000c31d8 (0x3230312e, 0x3130352e, 0x3133302e, 0x19)
 4 _end + 0x00083fc8 (0x400b274c, 0x400b1d10, 0x40164cfc, 0x8)
>T
 0 free + 0x00000008 (0, 0x400b2c24, 0x400c891c, 0x8)
 1 free + 0x00000224 (0x686f7374, 0x11, 0x400b1db0, 0)
 2 _end + 0x00083154 (0x400b1d24, 0x400b1d4c, 0x40302ce4, 0x8)
 3 _end + 0x000c31d8 (0x3230312e, 0x3130352e, 0x3133302e, 0x19)
 4 _end + 0x00083fc8 (0x400b274c, 0x400b1d10, 0x40164cfc, 0x8)

[06/07/94 public]
This now works in the latest nightly build.



CR Number                     : 10816
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec server init
Short Description             : dispatch() before CS init
Reported Date                 : 5/31/94
Found in Baseline             : 1.0.2
Found Date                    : 5/31/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : rs_main.c
Sensitivity                   : public

[5/31/94 public]
   Three times in about as many months, I have been given odd crash
dumps, none of which lined up quite right with their images, and so
which I hadn't figured out. Until today; the third one, when debugged
back at the machine that dumped it, left a clear trail.
.
   There are authentication requests coming in from test machines in the
cell when the sole secd for the cell dies. The admin restarts secd, and
it core dumps, having tried to generate a session key before the
key's cryptosystem has been initialized. Namely, the random_sequence is
not yet set (or allocated), and the attempt to use the random number
generator for MIT-DES seg faults.
.
   I'd like to confirm that a correct solution for this is to move the
following lines in rs_main.c up to be above the registration of the
rsec_* interface -- that, or learn more detail about what should be
done. We're on a verge of a release here and we'd love to fix this
before the system tests go any further.
.
  One additional question I have come up with here while reading this
code: I don't think anyone put it into the document that passing the
flag to secd to prevent the start of the KDC will cause this same core
dump (which is one quick way to reproduce this).
.
   So, will this be a correct solution: move the following block
.............................................
        if (rs_start_kdc &&
            (rs_state.rep_state != rs_c_state_uninitialized)) {
            /*
             * init kdc and start kdc task
             */
            rs_start_kerberos();
        }
.............................................
  .. to immediately precede this block?
.......................................................
        if ( ! rs_task_create(&task_handle, start_listeners,
                              "SECD client listener", true, NULL) ) {
            fatal("Cannot setup listener tasks");
        }
.......................................................

[5/31/94 public]
  A better proposal for a solution that should alleviate the -no_kdc bug
as well (currently still buidling, I apologize if this is not soup):
-------------------------------------------------------------------------------
Changes to security/h/rs.h in open delta travis-tr12192-secd-init-kdc-before-using-it:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/h/RCS/rs.h,v
retrieving revision 10.1
diff -r10.1 security/h/rs.h
0a1,7
> /*-
>  * @TRANSARC_COPYRIGHT@
>  *
>  * $TALog$
>  * $EndTALog$
>  */
> 
121a129,134
> #ifdef __STDC__
>     void
> #endif
> );
> 
> void rs_init_kerberos (
-------------------------------------------------------------------------------
Changes to security/server/rs/rs.c in open delta travis-tr12192-secd-init-kdc-before-using-it:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/server/rs/RCS/rs.c,v
retrieving revision 10.1
diff -r10.1 security/server/rs/rs.c
0a1,11
> /*-
>  * @TRANSARC_COPYRIGHT@
>  *
>  * $TALog$
>  * $EndTALog$
>  */
> 
> #if !defined(_NOIDENT) && !defined(lint)
> static char *TARCSId = "$Id: c010816,v 1.6 94/09/26 16:28:39 root Exp $";
> #endif
> 
213a225
> PRIVATE boolean32   kdc_initted = false;
759a772,784
> PUBLIC void rs_init_kerberos (
> #ifdef __STDC__
>     void
> #endif
> )
> { 
>     if (kdc_initted) return;
> 
>     kdc_init((sizeof(kdc_argv)/sizeof(kdc_argv[0]))-1, kdc_argv);
>     kdc_initted = true;
> }
> 
> 
769a795
>     if (!kdc_initted)
770a797
>     kdc_initted = true;
-------------------------------------------------------------------------------
Changes to security/server/rs/rs_main.c in open delta travis-tr12192-secd-init-kdc-before-using-it:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/server/rs/RCS/rs_main.c,v
retrieving revision 10.2
diff -r10.2 security/server/rs/rs_main.c
524a525,526
> 	rs_init_kerberos(); /* Initialize the KRB cryptosystem(s). */
> 
-------------------------------------------------------------------------------

[8/24/94]
Fixed by starting KDS before PS.  This seems to be only clean way
although it keeps the undocumented development flag -no_kdc in a
broken state.  Here is the diff of the submission:
Diff:
sparrow> diff rs_main.c
/project/dce/build/dce1.1/src/security/server/rs/rs_main.c
575,589d574
< 	/*
< 	 * Start the KDS before the PS.  This is important as the KDS
< 	 * initialization also sets up the cryptographic system that the
< 	 * PS uses.
< 	 */
< 
<         if (rs_start_kdc && 
<             (rs_state.rep_state != rs_c_state_uninitialized)) {
<             /*
<              * init kdc and start kdc task
<              */
<             rs_start_kerberos();
<         }
< 
< 
602a588,594
>         if (rs_start_kdc && 
>             (rs_state.rep_state != rs_c_state_uninitialized)) {
>             /*
>              * init kdc and start kdc task
>              */
>             rs_start_kerberos();
>         }

[8/24/94 public]
  Won't this fail on slaves when the slave first comes up? I encountered
the situation in which the slave tries to work with the master key, (I'm
recalling from POOR memories) but has received nothing to inquire for,
and so the slave core dumps.



CR Number                     : 10788
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : gss sams file needs cleanup
Reported Date                 : 5/26/94
Found in Baseline             : 1.1
Found Date                    : 5/26/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : gss_msgs.sms (obsoleted),
                                             gss.sams (new), 
                                             security/gssapi/Makefile
Sensitivity                   : public

[5/26/94 public]

The gss sams file needs to be cleaned up to add additional information and
to include some sml markup.  The filename also needs to be changed to match
the format for sams files.  A hard copy of the revisions has been given to
Bob Cuneo for John Wray.

[8/5/94 public]

Submitted cleaned-up version of GSSAPI message file, renamed to be
gss.sams, and replaced the erroneous SNI copyright notice with a Digital
one.



CR Number                     : 10775
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : update change_master section 
in 9_recon.gpsml
Reported Date                 : 5/25/94
Found in Baseline             : 1.1
Found Date                    : 5/25/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_gd/security/security/9_recon.gpsml
Sensitivity                   : public

[5/25/94 public]
Update command-line description of change_master and add 
become -slave/-master

[10/19/94 public]
Fixed and verified.  Verified by emartin.

[10/27/94 public]
Closed bug.



CR Number                     : 10774
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : update sec_admin.8sec
Reported Date                 : 5/25/94
Found in Baseline             : 1.1
Found Date                    : 5/25/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : man8sec/sec_admin.8sec
Sensitivity                   : public

[5/25/94 public]

Update sec_admin for change_master, become -master, and become -slave

[5/25/94 public]
Fixed for beta need HP verification before closing.

[10/13/94 public]
Changes verified by emartin.

[10/27/94 public]
Closed bug.

[10/27/94 public]
Changed "man3sec" to "man8sec" throughout -- the sec_admin
reference page is in the Command Ref, not the App Ref.



CR Number                     : 10731
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : key_mgmt
Short Description             : sec_key_mgmt_change_key misbehaves if lifetime set to infinite
Reported Date                 : 5/23/94
Found in Baseline             : 1.0.3
Found Date                    : 5/23/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/key_mgmt/seckey_list.c
Sensitivity                   : public

[5/23/94 public]

sec_key_mgmt_change_key's keytab GC routine misbehaves if the ticket
lifetime is set to "infinite"; infinity is encoded as zero, and it
evidently treats that as meaning "GC everything but the most recent key"

[12/21/95 public]
Fixed in 1.2.1 version of seckey_list.c
Marked 'closed'.



CR Number                     : 10730
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : replication
Short Description             : Master to slave propagation
does not work.
Reported Date                 : 5/23/94
Found in Baseline             : 1.1
Found Date                    : 5/23/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : Unknown
Sensitivity                   : public

[5/23/94 public]

A. Using install tree available from bl-9 baseline, configured a 486/OSF1
with Master Security and CDS servers. 

sec_admin> lrep -all
Default replica:  /.../486_cell/subsys/dce/sec/master
Default cell:     /.../486_cell


subsys/dce/sec/master (master)
          Instance id: 0026edc9-cddf-1de0-95fa-0000c04fd04c
          Addresses:               ncacn_ip_tcp:130.105.4.197[]
                                   ncadg_ip_udp:130.105.4.197[]
          State:                   in service - master
          Last update received at: Mon May 23 11:43:09 1994
          Last update's seqno:     0.178

B. Successfully configured a HP/UX (bl-9) as a replica security server.

sec_admin> lrep -all
Default replica:  /.../486_cell/subsys/dce/sec/master
Default cell:     /.../486_cell


subsys/dce/sec/master (master)
          Instance id: 0026edc9-cddf-1de0-95fa-0000c04fd04c
          Addresses:               ncacn_ip_tcp:130.105.4.197[]
                                   ncadg_ip_udp:130.105.4.197[]
          State:                   in service - master
          Last update received at: Mon May 23 11:49:45 1994
          Last update's seqno:     0.196

subsys/dce/sec/spring
          Instance id: 967c71cc-7646-11cd-ba38-080009251539
          Addresses:               ncacn_ip_tcp:130.105.4.208[]
                                   ncadg_ip_udp:130.105.4.208[]
          State:                   in service - slave
          Last update received at: Mon May 23 11:49:45 1994
          Last update's seqno:     0.196
          Propagation state:       ready for updates
          Last update delivered:   Mon May 23 11:49:45 1994
          Last update's seqno:     0.196
          Number of outstanding updates: 0

C. Added five new principals using rgy_edit to the master registry to check
   the propagation from master to slave and found the following problem.

sec_admin> lrep -all
Default replica:  /.../486_cell/subsys/dce/sec/master
Default cell:     /.../486_cell


subsys/dce/sec/master (master)
          Instance id: 0026edc9-cddf-1de0-95fa-0000c04fd04c
          Addresses:               ncacn_ip_tcp:130.105.4.197[]
                                   ncadg_ip_udp:130.105.4.197[]
          State:                   in service - master
          Last update received at: Mon May 23 11:59:22 1994
          Last update's seqno:     0.201

subsys/dce/sec/spring
          Instance id: 967c71cc-7646-11cd-ba38-080009251539
          Addresses:               ncacn_ip_tcp:130.105.4.208[]
                                   ncadg_ip_udp:130.105.4.208[]
          State:                   in service - slave
          Last update received at: Mon May 23 11:49:45 1994
          Last update's seqno:     0.196
          Propagation state:       ready for updates
          Last update delivered:   Mon May 23 11:49:45 1994
          Last update's seqno:     0.196
          Number of outstanding updates: 5
          Last comm status:        Name already exists (dce / sec)

[8/9/94 public]
Is this still a problem?  Can anybody reproduce it?  If so, has replication
really been broken since May (seems unlikely since I haven't heard people
complaining loudly about it)?

[8/9/94 public]
It works.  Fixed somewhere along the line.  Closed.



CR Number                     : 10726
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Security Code drop.
Reported Date                 : 5/23/94
Found in Baseline             : 1.1
Found Date                    : 5/23/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : See the dce-drb request for
this CR.
Sensitivity                   : public

[5/23/94 public]

[6/27/94 public]
This code drop alreday submitted by Mike F.



CR Number                     : 10713
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security/server/rrs
Short Description             : rpc_s_mod" undefined
Reported Date                 : 5/20/94
Found in Baseline             : 1.1
Found Date                    : 5/20/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/server/rrs/rrs_p\
					     rop_util.c
Sensitivity                   : public

[5/20/94 public]

c89 -c    -D_SHARED_LIBRARIES  +z  -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/op\
t/dcelocal\" -D_BSD -DBSD -DPOSIX_FILE_LOCKS -DPOSIX_TERMIOS -D__hppa -Dhp9000s800 -Dhp9000s700 \
-D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u3/devobj/s\
b/nb_ux/src/security/server/rrs -I/project/dce/build/dce1.1-snap/src/security/server/rrs  -I../.\
./h -I/u3/devobj/sb/nb_ux/src/security/h -I/project/dce/build/dce1.1-snap/src/security/h -I../..\
/idl -I/u3/devobj/sb/nb_ux/src/security/idl -I/project/dce/build/dce1.1-snap/src/security/idl -I\
../../client/rca -I/u3/devobj/sb/nb_ux/src/security/client/rca -I/project/dce/build/dce1.1-snap/\
src/security/client/rca -I/u3/devobj/sb/nb_ux/export/hp800/usr/include -I/project/dce/build/dce1\
.1-snap/export/hp800/usr/include    /project/dce/build/dce1.1-snap/src/security/server/rrs/rrs_p\
rop_util.c
cc: "/project/dce/build/dce1.1-snap/src/security/server/rrs/rrs_prop_util.c", line 95: error 158\
8: "rpc_s_mod" undefined.
cc: "/project/dce/build/dce1.1-snap/src/security/server/rrs/rrs_prop_util.c", line 95: error 156\
3: Expression in if must be scalar.
*** Error code 1

[05/20/94 public]
It looks like somebody removed the module code symbol for the RPC error statuss
(for serviceability work?) without letting everybody know that it was going
away and without doing a full build to test the change before submitting.


[ Peter Holmes ]

Fix verified in nightly build



CR Number                     : 10699
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_admin commands inconsistent
Reported Date                 : 5/19/94
Found in Baseline             : 1.0.3
Found Date                    : 5/19/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/rca/internal_binding.c
Sensitivity                   : public

[5/19/94 public]

sec_admin site and stop commands behave inconsistently

Scenario 1
__________

After issuing a stop on the slave a "site /.: -u" will fail.  Since
a "site /.../cell_name/subsys/dce/sec/master" (i.e. a site with the
global name) will succeed, the "site /.: -u" form should also succeed.

Example session follows:

> sec_admin
Default replica:  /.../rhinebeck/subsys/dce/sec/master
Default cell:     /.../rhinebeck

sec_admin> lrep
Default replica:  /.../rhinebeck/subsys/dce/sec/master
Default cell:     /.../rhinebeck


subsys/dce/sec/repl1

subsys/dce/sec/master (master)

sec_admin> site /.../rhinebeck/subsys/dce/sec/repl1
Default replica:  /.../rhinebeck/subsys/dce/sec/repl1
Default cell:     /.../rhinebeck

sec_admin> stop

sec_admin> site /.../rhinebeck/subsys/dce/sec/master
Default replica:  /.../rhinebeck/subsys/dce/sec/master
Default cell:     /.../rhinebeck

sec_admin> site /.../rhinebeck/subsys/dce/sec/repl1
Default replica:  /.../rhinebeck/subsys/dce/sec/repl1
Default cell:     /.../rhinebeck

sec_admin> site /.: -u
Unable to bind to master registry - ERROR - connection request rejected (dce / r
pc)
sec_admin> exit
bye.
*****************************************************************************


Scenario 2
__________

After issuing a stop on the slave a "site /.../cell_name/subsys/dce/sec/repl1"
will allow us to get the stopped replica back as the default.  (Any commands
fail, however, just as they should.)  Since a "site subsys/dce/sec/repl1"
fails, the site command with the global name should also fail.

Note this behavior only happens in the same sec_admin session.  If one
quits and then re-invokes sec_admin, the sec_admin binding cache is cleared
and all works as it should.

Example session follows:


> sec_admin
Default replica:  /.../rhinebeck/subsys/dce/sec/master
Default cell:     /.../rhinebeck

sec_admin> site /.../rhinebeck/subsys/dce/sec/repl1
Default replica:  /.../rhinebeck/subsys/dce/sec/repl1
Default cell:     /.../rhinebeck

sec_admin> stop

sec_admin> site /.../rhinebeck/subsys/dce/sec/repl1
Default replica:  /.../rhinebeck/subsys/dce/sec/repl1
Default cell:     /.../rhinebeck

sec_admin> site subsys/dce/sec/repl1
Cannot bind to specified site - ERROR - Registry server unavailable (dce / sec)
sec_admin>

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to sec_admin and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.

[2/2/96 public]
This was actually fixed in internal_binding.c during our 1.1 productization
effort here, and has been given back to the OSF in 1.2.1.  I have no diffs
because the whole file is drastically different than it was in 1.1.  The
change is described in the OSF DCE1.2 Scalability Functional Spec which has
been sent to the OSF and should be released by Walt next week.  Marked closed



CR Number                     : 10693
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : various changes requested by rps
Reported Date                 : 5/18/94
Found in Baseline             : 1.1
Found Date                    : 5/18/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_rgy_pgo_get_by_id.3sec
sec_rgy_pgo_get_by_name.3sec
sec_rgy_pgo_get_by_unix_num.3sec
sec_rgy_unix_getgrgrid.3sec
sec_rgy_unix_getgrnam.3sec
sec_rgy_unix_getpwnam.3sec
sec_rgy_unix_getpwuid.3sec
Sensitivity                   : public

[5/18/94 public]

Following is from mail from rps:

The "item_cursor" Parameter paragraphs in

sec_rgy_pgo_get_by_id
        pgo_get_by_name
        pgo_get_by_unix_num
        unix_getgrgid
        unix_getgrnam
        unix_getpwnam
        unix_getpwuid

look like they were cut&pasted from sec_rgy_pgo_get_next(), but should
instead refer to their respective calls.

Also, sec_rgy_pgo_get_by_name's item_cursor is listed as Output when it
should be Input/Output.

Finally, sec_rgy_unix_getpwnam is inconsistent with respect to the
way it specifies *<out-parameter-name> in the Parameter list paragraphs.

[8/30/94 public]
Fixed and verified.  Verified by me.

[09/06/94 public]
Closed bug.



CR Number                     : 10692
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : fix to sec_key_mgmt_set_key.3sec
Reported Date                 : 5/18/94
Found in Baseline             : 1.1
Found Date                    : 5/18/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_key_mgmt_set_key.3sec
Sensitivity                   : public

[5/18/94 public]

Change to not imply that keyfile name must be prepended with "FILE."  
Code will do it for you.

[8/29/94 public]
Fixed and verified.  Verified by me.

[09/06/94 public]
Closed bug.



CR Number                     : 10680
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : Man page for sec_rgy_site_open() 
does not say that the function requires a login context
Reported Date                 : 5/17/94
Found in Baseline             : 1.0.3
Found Date                    : 5/17/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_rgy_site_open.3sec
                                                             sec_rgy_site_open_query.3sec
                                                             sec_rgy_site_open_update.3sec
                                                             sec_rgy_site_bind.3sec
                                                             sec_rgy_site_bind_query.3sec
                                                             sec_rgy_site_bind_update.3sec
Sensitivity                   : public

[5/17/94 public]

The man page of sec_rgy_site_open() does not say the the caller should have
a network identity (login context) to succeed. Nor does the man page list 
error code (0x171220ec: No currently established network identity for which 
context exists ) as a possible return error.

sec_rgy_site_open() is really just like sec_rgy_site_bind() with defaults
supplied for the auth_info parameter, which attempt to use the default login
context for the process.  

Please fix this man page, also check other sec_rgy_site man pages.

[6/8/94 public]

Assigned this CR to Pam Millett, HP security writer.

[08/25/94 public]
Filled in Fix By Baseline field for housekeeping purposes.

[10/19/94 public]
Fixed and verified.  Verified by rps.

[10/27/94 public]
Closed bug.



CR Number                     : 10668
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : /security/server/sec_clientd
Short Description             : RIOS_LIBs for sec_clientd needs -lkrb5
Reported Date                 : 5/17/94
Found in Baseline             : 1.1
Found Date                    : 5/17/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/security.mk
Sensitivity                   : public

[5/17/94 public]

[ /security/server/sec_clientd at 04:12 (AM) Tuesday ]


0706-317 ERROR: Unresolved or undefined symbols detected:
                 Symbols in error (followed by references) are
                 dumped to the load map.
                 The -bloadmap:<filename> option will create a load map.
.krb5_cc_resolve
.krb5_free_cred_contents
.krb5_get_credentials
.krb5_generate_subkey
.krb5_encode_generic
.krb5_free_keyblock
EncryptedData_free
EncryptedData_cod
EncryptedData_len
EncryptionKey_free
EncryptionKey_cod
EncryptionKey_len
krb5_enc_data2EncryptedData
krb5_keyblock2EncryptionKey
krb5_keytype_array
krb5_kdc_default_options
*** Error code 8

[ /security/server/sec_salvage_db at 04:13 (AM) Tuesday ]
`build_all' not remade because of errors.
*** Error code 1

[5/17/94 public]
Since some krb5 routines are newly being called in
sec_clientd, and since on RIOS, not all krb5 is included
in libdce, the RIOS_LIBS variable in security.mk for
sec_clientd needs -lkrb5 added.
Fixed on the ahop_dce11_hp800 branch of security.mk

[5/23/94 public]
Closed.



CR Number                     : 10654
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : file/security/dfsauth
Short Description             : RIOS pre-processor can't handle func-proto.h
Reported Date                 : 5/16/94
Found in Baseline             : 1.1
Found Date                    : 5/16/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/krb5/include/krb5/func-proto.h
Sensitivity                   : public

[5/16/94 public]

[ /file/security/dfsauth at 03:26 (AM) Sunday ]

xlc -c -D_BSD -DAFS_DEBUG \
 -DDCESHARED_PATH=\"/opt/dce\"-DDCELOCAL_PATH=\"/opt/dcelocal\" \
 -D_ALL_SOURCE -DAFS_AIX32_ENV -D_BSD_INCLUDES -D_aiws -D__unix 
 -D_BSD -D_ALL_SOURCE -DAIX32 -I. \
 -I/u1/devobj/sb/nb_rios/src/file/security/dfsauth \
 -I/project/dce/build/dce1.1-snap/src/file/security/dfsauth  -I.. \
 -I/u1/devobj/sb/nb_rios/src/file/security \
 -I/project/dce/build/dce1.1-snap/src/file/security \
 -I/u1/devobj/sb/nb_rios/export/rios/usr/include \
 -I/project/dce/build/dce1.1-snap/export/rios/usr/include \
 /project/dce/build/dce1.1-snap/src/file/security/dfsauth/dfsauth_client.c
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 112.74: 1506-191 (E) Illegal character #.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 112.75: 1506-046 (S) Syntax error.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 112.99: 1506-191 (E) Illegal character #.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 112.100: 1506-046 (S) Syntax error.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 112.123: 1506-191 (E) Illegal character #.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 112.124: 1506-046 (S) Syntax error.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 463.79: 1506-191 (E) Illegal character #.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 463.80: 1506-046 (S) Syntax error.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 463.101: 1506-191 (E) Illegal character #.
"/u1/devobj/sb/nb_rios/export/rios/usr/include/krb5/func-proto.h", line \
 463.102: 1506-046 (S) Syntax error.
*** Error code 1

[5/16/94 public]
Note that these errors are due to a bug in the RIOS preprocessor
which is incorrectly handling the following:

krb5_error_code krb5_mk_req_extended
        PROTOTYPE((const krb5_flags,
                   const krb5_checksum *,
                   const krb5_flags,
                   krb5_int32,
#ifdef KRB5_BETA1
                   krb5_keyblock *,
#else
                   krb5_keyblock **,
#endif /* KRB5_BETA1 */
                   krb5_ccache,
                   krb5_creds *,
                   krb5_authenticator *,
                   krb5_data * ));

where PROTOTYPE is
#if defined(__STDC__) || defined(KRB5_PROVIDE_PROTOTYPES)
#define PROTOTYPE(x) x
#else
#define PROTOTYPE(x) ()
#endif

I have provided workarounds in the func-proto.h on the
ahop_dce11_hp800 branch (revision 1.1.5.3) that replaces
cases like the above with the bulkier:

#ifdef KRB5_BETA1
krb5_error_code krb5_mk_req_extended
        PROTOTYPE((const krb5_flags,
                   const krb5_checksum *,
                   const krb5_flags,
                   krb5_int32,
                   krb5_keyblock *,
                   krb5_ccache,
                   krb5_creds *,
                   krb5_authenticator *,
                   krb5_data * ));
#else
krb5_error_code krb5_mk_req_extended
        PROTOTYPE((const krb5_flags,
                   const krb5_checksum *,
                   const krb5_flags,
                   krb5_int32,
                   krb5_keyblock **,
                   krb5_ccache,
                   krb5_creds *,
                   krb5_authenticator *,
                   krb5_data * ));
#endif /* KRB5_BETA1 */

Rajendra was able to compile dfsauth_client.c
with my changes.
Ready to submit.

[5/23/94 public]
Closed.



CR Number                     : 10633
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl_edit/dcecp acl, sec_acl_bind()
Short Description             : unable to show or set the acl
of a CDS OBJECT entry that has non-PCS characters.
Reported Date                 : 5/13/94
Found in Baseline             : 1.1
Found Date                    : 5/13/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/client/acl/daclbind.c
Sensitivity                   : public

[5/13/94 public]

While I am able to create a CDS object entry using a name with non
PCS characters, I am NOT able to show its ACL using acl_edit or
dcecp. However, I am able to both create a directory (with non PCS
characters) and show its ACL. This behavior is not consistent.

The error returned by acl_edit and dcecp is:

dcecp> acl permissions -entry /.:/<japanese-name>
Error: invalid acl object name

and using acl_edit

bronze dassarma$ acl_edit -e /.../b_cell.qadce.osf.org/<japanese-name>
ERROR: invalid acl object name (dce / sec)
Unable to bind to object /.../b_cell.qadce.osf.org/<japanese-name>


NOTE: Since dcecp (unlike rgy_edit -see OT 10562) let me create 
      principals with non-PCS characters, then I tried acl_edit 
      on that username and that worked.

[5/13/94 public]
You are not supposed to put non-PCS characters into CDS names.
Not sure who, if anyone, should be checking for this; it's not unlike,
say, fclose checking to make sure it didn't get NULL.

[5/13/94 public]
  I'd like to clarify the above comment.  We do not recommend to use
non-PCS characters for cell name, since it will hurt world-wide portability,
however, we will allow to use non-PCS characters to a directory name,
a link name, and an attribute value (although there is no attribute defined
for this purpose now).

[5/13/94 public]

Well, from the comments above, it seems that this is not a bug. Mariko
suggested to make this an enhancement. 

However, this recommendation needs to be documented: CDS allows a user 
to create a non-PCS object entry, but setting acls on it will not work. 
I don't think users are going to guess the code set restriction set on 
object entries.

[5/13/94 public]
Well Martha, you generated another lively discussion. After talking
this over with Dick and Moriko we believe that niether acl_edit nor
dcecp/cdscp should be checking for PCS on any name space entity. 
Something obviously is. The checking we have done so far points at
the cds acl manager so we will leave this assigned to cds. It will
be made a defect again because I believe one should have the ability
to adminster, with existing tools,  any object one is allowed to create.

[8/15/94 public]
I am reassigning this to security.  The problem is in chk_leaf
in sec_acl_bind.  It makes sure the leaf name isascii.  Thats why you
only see this on acl_edit -e

[8/22/94 public]
Since I already had daclbind.c checked out to fix a memory leak and memory
corruption problem, I'm reassigning this to myself.

[8/23/94 public]
Submitted fix, marked 'fix'.



CR Number                     : 10619
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : priv.c
Short Description             : Error in structure call
Reported Date                 : 5/12/94
Found in Baseline             : 1.1
Found Date                    : 5/12/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/utils/Makefile
Sensitivity                   : public

[5/12/94 public]


This failure broke -ldce which caused a ripple effect to all other
platform errors


[ /libdce at 20:21 (PM) Wednesday ]
cc: "/project/dce/build/dce1.1-snap/src/security/client/rca/priv.c", line 768: error 1529: Cannot select field of non-structure.
cc: "/project/dce/build/dce1.1-snap/src/security/client/rca/priv.c", line 2053: error 1529: Cannot select field of non-structure.
*** Error code 1
cc: "/project/dce/build/dce1.1-snap/src/security/client/login/sec_login_pvt.c", line 6464: error 1529: Cannot select field of non-structure.
*** Error code 1
`export_all_EXPSHLIB' not remade because of errors.
*** Error code 1
dua_sec.c: 51: Unable to find include file 'gssapi.h'.
*** Error code 1
gds_sec_int.c: 51: Unable to find include file 'gssapi.h'.
*** Error code 1
gds_sec_rgy.c: 51: Unable to find include file 'gssapi.h'.
*** Error code 1
dua_sec_int.c: 52: Unable to find include file 'gssapi.h'.
*** Error code 1
gds_sec_auth_ctx.c: 55: Unable to find include file 'gssapi.h'.
*** Error code 1
`export_all_EXPSHLIB' not remade because of errors.
*** Error code 1

[5/12/94 public]
The nightly build broke on all three reference platforms because of no
libdce which did not build because of libdua in gds. Rich Zeliff has
already submitted fix for inclusion of gssapi.h in 7 files under gds.
The error in build for priv.c and sec_login_pvt.c during compilation is
just nuisance and will be fixed (with Bill's clean-up of Makefile work). 
The priv.o and sec_login_pvt.o are in nightly build object tree. I've asked
Ron Rizzo to start the build on HP/UX (with Rich's fixes) so that we can
get results by late afternoon.

[5/12/94 public]
Nope.  On the 486, priv.o was built after the libdce build failed.  It was
built as a target for libsecutil even though it is not included in
libsecutil.  If this defect isn't fixed it will cause the nightly build to
fail once again.

[5/12/94 public]
I just submitted security/utils/Makefile which now states two new
explicit dependencies:
> priv.o:       rpriv_1_0.h
> sec_login_pvt.o:      rsec_login.h

[5/13/94 public]
Closed.



CR Number                     : 10615
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : registry
Short Description             : sec_id_parse_name returns sec_rgy_object_not_found
Reported Date                 : 5/11/94
Found in Baseline             : 1.1
Found Date                    : 5/11/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : rs/rs_secidmap.c, rsdb/rsdb_util.c
Sensitivity                   : public

[5/11/94 public]
I used to invoke sec_id_parse_name with /.../torolab.ibm.com as parameter
global_name and get its uuid.  (/.../torolab.ibm.com being local cell name)
Now I am getting sec_rgy_object_not_found.  Did something change lately?

[5/11/94 public]
Sigh, and I thought the changes for polymorphic registry items were out of
the woods.  Workaround:  pass NULL for the princ uuid parameter if possible.

[5/12/94 public]
Did you mean NULL for the global_name?
It works that way, but it still returns the bad return code, and then there
is no way to know whether the cell name is bad, or it just complains that 
it doesn't like the NULL princ.

[5/19/94 public]
The perscribed workaround described by rps may work for sec_ip_parse_name.
But it works quite poorly for sec_rgy_site_bind and it's family for 
obvious reasons. See OT 10682 (marked status dup by rps) for more 
information on this. Currently, if you do not have a sec_rgy_handle_t 
there is no way, that I know, to ascertain the cellname within a 
full pathname. For instance, 

/.../terrapin/newcell/hosts

[5/25/94 public]
This has to be fixed before the beta release.  The problem is preventing a
positive Aud testcase from passing.

[6/6/94 public]
Derive acl_mgr uuid correctly; use object type only with polymorphs.



CR Number                     : 10608
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 1.0.3/1.1 compatibility
Short Description             : 1.0.3 registry database not useable on 1.1 security server
Reported Date                 : 5/11/94
Found in Baseline             : 1.1
Found Date                    : 5/11/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : 
.../src/security/h
	rsdb_compat.h
	rsdb_compat_pvt.h
	rs_state.h
	rs_pvt.h
	rs_reserved.h
.../src/security/server/rsdb
	rsdb_compat.c
	rsdb.c
	rsdb_policy.c
.../src/security/server/rs
	rs_master.c
	rs_reserved.c
	rs-rsdb.c
	rs_state.c
Sensitivity                   : public

[5/11/94 public]

We know that this isn't a bug since it never worked before, but we would
like to have a defect opened to track the issue since this functionality
is critical to the DCE 1.1 release.

Problem:

You can not upgrade a DCE 1.0.3 security server to DCE 1.1 because
secd complains that the registry database is not useable.

[8/15/94 public]
This is a placeholder for the database conversion work.

[8/25/94 public]

code dropped.

Documentation : Customers are recommended to :
	1) Stop DCE ( pre-DCE 1.1 bits ) where the security master
	   resides, backup their pre-DCE 1.1 rgy data files for
	   recovery purpose, in case the conversion process is aborted
	   before is done.
	2) Install DCE 1.1 bits and re-start DCE.



CR Number                     : 10607
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 1.0.3/1.1 compatibility
Short Description             : Can't configure 1.1 sec clients with 1.0.3 sec server
Reported Date                 : 5/11/94
Found in Baseline             : 1.1
Found Date                    : 5/11/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/client/rca/priv.c
	security/client/rca/rpriv.acf
Sensitivity                   : public

[5/11/94 public]

We know that this isn't a bug since it never worked before, but we would
like to have a defect opened to track the issue since this functionality
is critical to the DCE 1.1 release.

Problem:

You can not configure a DCE 1.1 security client in a cell with a DCE 1.0.3
security server.

[7/5/94 public]
There were two problems:

 - the new rpriv operations and interface blew up the 1.1 client
(rgy_edit) with an unhandled exception if the client attempted to call
a secd which didn't implement them.

 - the 1.1 client didn't properly fall back to the old rpriv operations
when it had to bind using the pe_site file.

[7/6/94 public]

partial fix submitted; leaving this open until Greg submits the "real" fix.

[8/19/94 public]
Fix submitted by Greg in the latest drop.



CR Number                     : 10593
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_key_mgmt_get_next_key() manpage should say to free output params
Reported Date                 : 5/10/94
Found in Baseline             : 1.1b8
Found Date                    : 5/10/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_key_mgmt_get_next_key.3sec
Sensitivity                   : public

[5/10/94 public]
The sec_key_mgmt_get_next_key() manpage should say that the principal_name
output param is allocated and should be freed, with free()  (lest you end
up with a memory leak).  It correctly says to use sec_key_mgmt_key() to
free the key itself.

[6/8/94 public]

Assigned this CR to Pam Millett (HP security writer).

[10/19/94 public]
Fixed and verified.  Verified by rps.

[10/27/94 public]
Closed bug.



CR Number                     : 10591
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : "hp_sec_to_osf_2" drop of ERA, delegation, and extended login functionality
Reported Date                 : 5/9/94
Found in Baseline             : 1.1
Found Date                    : 5/9/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : see list in comments
Sensitivity                   : public

[5/9/94 public]

The following 128 files are to be submitted for the "hp_sec_to_osf_2" drop:
./security/client/admin/rgy_edit/eif.c
./security/client/admin/rgy_edit/ek_db.c
./security/client/admin/rgy_edit/ek_util.h
./security/client/key_mgmt/keymgmt.c
./security/client/login/sec_login.c
./security/client/login/sec_login_file_loc.h
./security/client/login/sec_login_pvt.c
./security/client/login/sec_login_util.c
./security/client/login/sec_login_util.h
./security/client/rca/override.c
./security/client/rca/priv.c
./security/client/rca/rpriv_1_0.acf
./security/client/rca/rsec_login.acf
./security/client/rca/sec_certify.c
./security/h/Makefile
./security/h/macros.h
./security/h/rgymacro.h
./security/h/rpriv_attr.h
./security/h/rs_log.h
./security/h/rs_pwd_mgmt.h
./security/h/rs_util.h
./security/h/rsdb_attr.h
./security/h/rsdb_attr_pvt.h
./security/h/rsdb_attr_schema.h
./security/h/sec_attr_tools.h
./security/h/sec_encode.h
./security/h/sec_login_pvt.h
./security/idl/Makefile
./security/idl/authz_base.idl
./security/idl/authz_encode.acf
./security/idl/authz_encode.idl
./security/idl/id_encode.acf
./security/idl/id_encode.idl
./security/idl/id_epac.idl
./security/idl/prvnbase.idl
./security/idl/rdaclbase.idl
./security/idl/rpriv.idl
./security/idl/rpriv_1_0.idl
./security/idl/rs_attr_schema.idl
./security/idl/rsec_login.idl
./security/idl/sec.msg
./security/idl/sec_login.idl
./security/idl/sec_login_encode.acf
./security/idl/sec_login_encode.idl
./security/idl/sec_pwd_mgmt.idl
./security/krb5/clients/kinit/kinit.c
./security/krb5/include/krb5/Makefile
./security/krb5/include/krb5/base-defs.h
./security/krb5/include/krb5/errors.h
./security/krb5/include/krb5/fieldbits.h
./security/krb5/include/krb5/func-proto.h
./security/krb5/include/krb5/kdb.h
./security/krb5/include/krb5/krb5.h
./security/krb5/include/krb5/mvr/encode.h
./security/krb5/include/krb5/mvr/krb5-glue.h
./security/krb5/include/krb5/preauth.h
./security/krb5/include/krb5/proto.h
./security/krb5/kdc/Makefile
./security/krb5/kdc/do_as_req.c
./security/krb5/kdc/do_tgs_req.c
./security/krb5/kdc/kdc_util.c
./security/krb5/kdc/preauth.c
./security/krb5/lib/error_tables/krb5_err.et
./security/krb5/lib/krb/free_rtree.c
./security/krb5/lib/krb/gc_2tgt.c
./security/krb5/lib/krb/gc_frm_kdc.c
./security/krb5/lib/krb/gc_via_tgt.c
./security/krb5/lib/krb/get_in_tkt.c
./security/krb5/lib/krb/in_tkt_pwd.c
./security/krb5/lib/krb/in_tkt_sky.c
./security/krb5/lib/krb/int-proto.h
./security/krb5/lib/krb/preauth.c
./security/krb5/lib/krb/walk_rtree.c
./security/krb5/lib/krb5/Makefile
./security/krb5/lib/mvr/krb5-glue.c
./security/krb5/lib/mvr/krb5.mvr
./security/server/Makefile
./security/server/pwd_mgmt/Makefile
./security/server/pwd_mgmt/pwd_strength/Makefile
./security/server/pwd_mgmt/pwd_strength/pwd_strengthd.c
./security/server/rs/Makefile
./security/server/rs/rpriv.c
./security/server/rs/rpriv_attr.c
./security/server/rs/rpriv_util.c
./security/server/rs/rpriv_util.h
./security/server/rs/rpriv_v1_1_mgrs.c
./security/server/rs/rs_acct.c
./security/server/rs/rs_attr.c
./security/server/rs/rs_attr_schema.c
./security/server/rs/rs_log.c
./security/server/rs/rs_log_attr.c
./security/server/rs/rs_log_attr_schema.c
./security/server/rs/rs_login.c
./security/server/rs/rs_main.c
./security/server/rs/rs_pwd_mgmt.c
./security/server/rs/rs_reserved.c
./security/server/rs/sec_pwd_mgmt.acf
./security/server/rsdb/kdb_rsdb.c
./security/server/rsdb/rsdb_attr.c
./security/server/rsdb/rsdb_attr_schema.c
./security/server/sec_clientd/Makefile
./security/server/sec_clientd/sec_clientd.c
./security/utils/Makefile
./security/utils/priv_krb_util.c
./security/utils/sec_attr_util.c
./security/utils/sec_authn.c
./security/utils/sec_cred_internal.c
./security/utils/sec_cred_internal.h
./security/utils/sec_encode.c
./test/security/tet-tests/Makefile
./test/security/tet-tests/tet_scen.dat
./test/security/tet-tests/tetexec.cfg
./test/security/tet-tests/tools/update_tet_scen.sh
./test/security/tet-tests/ts/client/Makefile
./test/security/tet-tests/ts/client/login/Makefile
./test/security/tet-tests/ts/client/login/sec_login_deleg.c
./test/security/tet-tests/ts/client/pwd_mgmt/Makefile
./test/security/tet-tests/ts/client/pwd_mgmt/pwd_expiration/Makefile
./test/security/tet-tests/ts/client/pwd_mgmt/pwd_expiration/pwd_expiration.c
./test/security/tet-tests/ts/client/pwd_mgmt/pwd_strength/Makefile
./test/security/tet-tests/ts/client/pwd_mgmt/pwd_strength/sec_pwd_mgmt.acf
./test/security/tet-tests/ts/client/pwd_mgmt/pwd_strength/sec_pwd_mgmt_strength_chk_prvcy.c
./test/security/tet-tests/ts/client/rca/Makefile
./test/security/tet-tests/ts/client/rca/sec_rgy_attr/Makefile
./test/security/tet-tests/ts/client/rca/sec_rgy_attr/print_attrs.c
./test/security/tet-tests/ts/client/rca/sec_rgy_attr/sec_rgy_attr.c
./test/security/tet-tests/ts/client/rca/sec_rgy_attr_sch/Makefile
./test/security/tet-tests/ts/client/rca/sec_rgy_attr_sch/sec_rgy_attr_sch.c

[5/11/94 public ]
Changes bsubmitted.

[5/11/94 public]
Closed.



CR Number                     : 10577
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_gd, app_ref
Short Description             : 
Updated and created documentation for the Application Development Guide describing GSSAPI.
Reported Date                 : 5/8/94
Found in Baseline             : 1.0.3
Found Date                    : 5/8/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : 
1_overv.gpsml and 2_authn.gpsml (updated)  
credentials.gpsml (new chapter)
New reference pages (.3sec) 
gss_accept_sec_context, gss_acquire_cred, gss_compare_name, gss_context_time, gss_delete_sec_context, gss_display_name, gss_display_status, gss_import_name, gss_indicate_mechs, gss_init_sec_context, gss_inquire_cred, gss_process_context_token, gss_release_buffer, gss_release_cred, gss_release_name, gss_release_oid_set, gss_seal, gss_sign, gss_unseal, gss_verify, gssdce_add_oid_set_member, gssdce_create_empty_oid_set, gssdce_cred_to_login_context, gssdce_extract_cred_from_sec_context, gssdce_login_context_to_cred, gssdce_register_acceptor_identity, gssdce_test_oid_set_member, gssapi_intro
Sensitivity                   : public

[5/8/94 public]

Updated the Overview and Authentication chapters to show GSSAPI additions for R1.1. Also created a new chapter describing GSSAPI credentials and created reference pages for GSSAPI.

files: Updates: Chapters 41 (Overview of Security) and 42 (Authentication) New: Credentials chapter and 29 manpages -> 1_overv.gpsml and 2_authn.gpsml (updated)   credentials.gpsml (new chapter) New reference pages (.3sec)  gss_acquire_cred, gss_compare_name, gss_context_time, gss_delete_sec_context, gss_display_name, gss_display_status, gss_import_name, gss_indicate_mechs, gss_init_sec_context, gss_inquire_cred, gss_process_context_token, gss_release_buffer, gss_release_cred, gss_release_name, gss_release_oid_set, gss_seal, gss_sign, gss_verify, gssdce_add_oid_set_member, gssdce_create_empty_oid_set, gssdce_cred_to_login_context, gssdce_extract_cred_from_cred, gssdce_extract_cred_from_sec_context, gssdce_login_context_to_cred, gssdce_register_acceptor_identity, gssdce_test_oid_set_member, gssapi_intro

[6/8/94 public]

Assigned this CR to Ron Johnson (Digital's DCE 1.1 writer).

[09/29/94 public]
Closed bug.
This work was done by writer Ron Johnson at DEC.



CR Number                     : 10575
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : acct_add by user whose acct has been deleted crashes secd
Reported Date                 : 5/6/94
Found in Baseline             : 1.1
Found Date                    : 5/6/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/server/rsdb/rsdb_acct.c
Sensitivity                   : public

[5/6/94 public]
To crash secd:
1. Create acct for user1
2. dce_login as user1
3. in rgy_edit, delete account for user1
4. in rgy_edit (still logged in as user1), add
an account.
Secd will crash in rs_mkey_decrypt_with_master_key.
The bug is in rsdb_acct.c in the rsdb_acct_lookup_acct_id
routine.  There is a case where this routine returns
false BUT with a GOOD STATUS.  At the bottom of
this routine, if got_account ==false, the status should
be set to object_not_found if the status isn't already bad.

An additional fix (although superfluous once the above is 
fixed) is to test the boolean return value of 
rsdb_acct_lookup_acct_id whereever it's called.

[8/15/94 public]
Fix submitted as described.



CR Number                     : 10559
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : security/utils
Short Description             : compilation bug broke libdce.a
which in turn broke libdce.a
Reported Date                 : 5/6/94
Found in Baseline             : 1.1
Found Date                    : 5/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/client/rca/override.c
and security/server/sec_clientd/roverride.c
Sensitivity                   : public

[5/6/94 public]

On the RIOS the following bug broke the build of libsec.a which in
turn broke the build of libdce.a.

[ /security/utils at 22:08 (PM) Thursday ]

"/project/dce/build/dce1.1-snap/src/security/client/rca/override.c", line
416.34: 1506\
-095 (S) Unexpected parameter overridden.
"/project/dce/build/dce1.1-snap/src/security/client/rca/override.c", line
404.6: 1506-\
132 (S) Function override_get_group_info cannot be redeclared.
*** Error code 1

[5/6/94 public]
Fix submitted.

[5/11/94 public]
Closed.



CR Number                     : 10549
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Need info on how to use sec_passwd_rec_t
Reported Date                 : 5/5/94
Found in Baseline             : 1.0.2
Found Date                    : 5/5/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_intro.3sec
                                                             sec_login_validate_identity.3sec
Sensitivity                   : public

[5/5/94 public]
There is wrong and inadequate guidance on how to use the sec_passwd_rec_t
type to pass a password string to such routines as sec_login_validate_identity.
First, the descriptions of sec_passwd_rec_t in chapter 5 of the Ref Man
(under LOGIN API DATA TYPES and KEY MANAGEMENT API DATA TYPES) do not
capture the definition in share/include/dce/passwd.h.

The use of this record in the ref page on sec_login_validtate_identity
is not sufficiently described.  You might set it up as:

passwd_rec.version_number = sec_passwd_c_version_none;
passwd_rec.pepper = NULL;
passwd_rec.key.key_type = sec_passwd_plain;

sec_passwd_str_t      tmp_passwd;

strncpy((char *) tmp_passwd, (char *) my_passwd, sec_passwd_str_max_len);
tmp_passwd[sec_passwd_str_max_len] = '\0';
passwd_rec.key.tagged_union.plain = &(tmp_passwd[0]);

The above is lifted from security/client/admin/rgy_edit/ek_db.c

[5/13/94 public]

Assigned this CR to Pam Millett (HP security writer).

[10/19/94 public]
Fixed and verified.  Verified by burati.

[10/27/94 public]
Closed bug.



CR Number                     : 10532
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit core dumps intermittently trying to add accounts
Reported Date                 : 5/4/94
Found in Baseline             : 1.0.3
Found Date                    : 5/4/94
Severity                      : A
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : security/client/admin/rgy_edit/ek_util.c
Sensitivity                   : public

[5/4/94 public]

rgy_edit dumped core once every 3-4 times I ran a script that used to add
couple of principles and accounts. This happenned on SINIX platform but could
happen on any other depending on how your compiler generates code.

The function eku_dec_int32() in security/client/admin/rgy_edit/ek_util.c file
declares an array of char which is one byte short of what is needed (WAKE UP
guys!!). This results into overwritting the stack that in turn changes the
address of a structure declared in the calling procedure. Following is the
fix shown as #ifdef SNI_SVR4:

void eku_dec_int32
....
....
{
#ifdef SNI_SVR4
    char int32_str[ek_lim_max_int32_len + 1];
#else
    char int32_str[ek_lim_max_int32_len];
#endif /* SNI_SVR4 */
.....
.....

I have verified the fix and it does show that the core dump is gone for good.

[7/28/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.

[8/9/94 public]
This bug still exists in the file security/client/admin/rgy_edit/ek_util.c.
It will take 5 seconds to fix it. I'cw increased the priority back to A2.

[8/9/94 public]
Brief bug history:
 * On 5/4 we know of a one line fix (nice catch)
 * It's expressed as:
     #ifdef SNI_SVR4
         do the right thing for all platforms
     #else
         do the wrong thing for all platforms
     #endif
 * We check that it's not duplicated in dcecp
 * We change the priority to E4
 * We change it back to A2
 * I'd fix it but am afraid that it will get lost in the next HP code drop.

This is a two character fix.  
Can we please stop debating it and just do it (correctly, for everyone).
If someone will tell me that it won't get overwritten I'd be glad to do it.

[8/9/94 public]

Since we weren't planning on touching the code, it's a safe bet that nothing
in the next HP drop will overwrite it.  Please add your name as owner and
Go for it!   thanx!

[8/9/94 public]
will do.

[8/10/94 public]
submitted.

  1190c1190
  <     char int32_str[ek_lim_max_int32_len];
  ---
  >     char int32_str[ek_lim_max_int32_len + 1];



CR Number                     : 10514
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_gd and app_ref
Short Description             : update for delegation
Reported Date                 : 5/3/94
Found in Baseline             : 1.0.3
Found Date                    : 5/3/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : new files to be created
Sensitivity                   : public

[5/3/94 public]

Add delegation to app_gd and app_ref.  
For app_gd, add new file security/3.5_era.gpsml.

For app_ref, add following new files:
sec_cred_get_deleg_restrictions.3sec
sec_cred_get_delegate.3sec
sec_cred_get_delegation_type.3sec
sec_cred_get_extended_attrs.3sec
sec_cred_get_initiator.3sec
sec_cred_get_opt_restrictions.3sec
sec_cred_get_pa_data.3sec
sec_cred_get_req_restrictions.3sec
sec_cred_get_tgt_restrictions.3sec
sec_cred_get_v1_pac.3sec
sec_cred_initialize_attr_cursor.3sec
sec_cred_initialize_cursor.3sec
sec_cred_inq_auth_service_info.3sec
sec_cred_is_authentiated.3sec
sec_login_become_delegate.3sec
sec_login_become_impersonator.3sec
sec_login_become_initiator.3sec
sec_login_cred_get_delegate.3sec
sec_login_cred_get_initiator.3sec
sec_login_cred_init_cursor.3sec
sec_login_disable_delegation.3sec
sec_login_get_delegation_type.3sec
sec_login_set_extended_attrs.3sec

[5/10/94 public]
The files listed above have been submitted to the 
tree for beta.

[10/19/94 public]
Verified.  Verified by burati an greg.

[10/25/94 public]
Closed bug.

The following new ref pages were also created as part of
this CR:

sec_cred_free_attr_cursor.3sec
sec_cred_free_cursor.3sec
sec_cred_free_pa_handle.3sec
sec_cred_get_authz_session_info.3sec
sec_cred_get_client_princ_name.3sec

Also, sec_cred_inq_auth_service_intro.3sec
appears to have been defuncted.



CR Number                     : 10503
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : sec_salvage_db corrupts database
Reported Date                 : 5/2/94
Found in Baseline             : 1.1
Found Date                    : 5/2/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[5/2/94 public]


The following test was carried out on the B7 build:

I had two machines running in a cell: one is a master and one is a slave.
I stopped the master machine then I issued the following sec_salvage_db
commands on the master machine :

    sec_salvage_db -print -prtpath /tmp/print
    sec_salvage_db -reconstruct -prtpath /tmp/print

After reconstruction, when I entered "sec_admin lrep -all" , the "Last
update and seq no" of the master was reset while that of the slave remained 
unchanged. When I added new principals to the master registry database,
the master registry database was updated but the slave database was not. 
I could not even manually reinitialize the slave database because when I issued
"sec_admin initrep <slave replica>", the following message was displayed:

    Initialize replica operation failed - Registry object not found 

Then I tried another scenario with the sec_salvage_db in which I removed the
slave replica from the cell before issuing any sec_salavge_db on the master
machine. After registry reconstruction, I could not reconfigured the slave
replica back to the cell. The configuration of the slave replica failed with
the following message:
    ERROR: rgy_edit error while creating KTAB entry in registry database
 
The OSF document that I read did not mention how sec_salvage_db would work in 
a security replicated environment. Is it supposed to work in a replicated 
environment?


[public 5/2/94]
Due to the large number of database changes with the
ERA and H-cells projects, sec_salvage_db requires
a lot of work before it will be functional for
DCE1.1.  The work is not going to be done in
time for DCE 1.1 Beta.  It is scheduled for
completion before Functional Complete.  Don't
bother testing it until you see a submit request
stating that the submission makes it fully functional.
(The last submission noted that sec_salvage_db was
broken.)

[public 5/4/94]
As noted by Ann above, this will not be fixed for BETA, downgrading the
priority of this CR to 1. The OSF mgmt. is tracking priority 0 bugs for
BETA and this bug is really not blocking anyone at this time.


[public 5/4/94]
The people here at IBM who found this problem also tested this on 1.0.3,
which is what the CRs 10521, 10522, and 10523 have reported.
There wasn't any ERA/H-Cell functionality in 1.0.3, that is why the other
CRs were opened.

[8/1/94 public]
Has salvaging sec_salvage_db been dropped from 1.1 altogether?  If so, I
will mark defer to 1.2...

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 10502
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_svg_db
Short Description             : corrupted membership lists in prt file
Reported Date                 : 5/2/94
Found in Baseline             : 1.0.2
Found Date                    : 5/2/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/sec_salvage_db/*.c
Sensitivity                   : public

[5/2/94 public]
   I say this was found in 1.0.2a, but I see no relevant changes to
sec_svg_prt.c in 1.0.3 and will presume that this report also pertains
to 1.0.3.
.
   Blanks lines are replaced with '.' to avoid a bug in our OT client.
.
   sec_salvage_db seems to be getting group memberships out of whack. At
first, I looked at the sources to see that the membership-printing
subroutine simply strides across the member list using
rsdb_util_get_member_list(), inserting all non-deleted list members into
the linked list. 
   My initital theory was a link foulup within that linked
list. I removed the linked-list management routines from sec_svg_prt.c
and checked them out in a simple test program; they aren't causing this.
What remains a possibility is that rsdb_pgo_get_members() is causing
this... but I find that unlikely.
.
    The following session log shows what is happening.  What follows is
a number of simple trials against a cell whose rgy-db has a group called
"overflow12" having more than 80 members. The members of group
"overflow12" all belong only to that group. For example, a principal
(p14) belongs only to this group. But sec_svg_db prints it, and every
other member of that group, twice.
.
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> v p14 -m
p14                                           58
  Member of 1 groups:
    overflow12
rgy_edit=> do g
rgy_edit=> v overflow12 -m
overflow12                                    50
  99 members
    p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17
    p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32
    p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47
    p48, p49, p50, p51, p52, p53, p54, p55, p56, p57, p58, p59, p60, p61, p62
    p63, p64, p65, p66, p67, p68, p69, p70, p71, p72, p73, p74, p75, p76, p77
    p78, p79, p80, p81, p82, p83, p84, p85, p86, p87, p88, p89, p90, p91, p92
    p93, p94, p95, p96, p97, p98, p99
.
k2# grep "Member_Name = p[1-9][0-9]" < group.prt | sort | uniq -c
   2 Member_Name = p10
   2 Member_Name = p11
   2 Member_Name = p12
   2 Member_Name = p13
   2 Member_Name = p14
   2 Member_Name = p15
   2 Member_Name = p16
   2 Member_Name = p17
   2 Member_Name = p18
   2 Member_Name = p19
   2 Member_Name = p20
   2 Member_Name = p21
   2 Member_Name = p22
   2 Member_Name = p23
   2 Member_Name = p24
	  .
	  .

[8/1/94 public]
Further work on the salvager has been deferred to 1.2

[2/6/96 public]
Re-opened this, since it's been deferred for over a year and a half now.
Either this was fixed with the 1.2.1 sec_salvage_db cleanup or it's still
a bug and needs to be addressed.  Either way, someone needs to hand test
this to see if Ward's assertions are correct.

[2/12/96 public]
Not reproducible with 1.2.1.   Since the 1.2.1 sec_salvage_db was a rewrite
of a fair amount of the utility (most of the memory management of it), there's
no way to give a diff that would make much sense.  Closed as fixed in 1.2.1



CR Number                     : 10493
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : login
Short Description             : unitialized auto variable /
possible free(NULL)
Reported Date                 : 4/29/94
Found in Baseline             : 1.1
Found Date                    : 4/29/94
Severity                      : B
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : .../src/security/client/login/sec_login_pvt.c
Sensitivity                   : public

[4/29/94 public]

 The customer pointed out that the routine import_context_data() contains a
stack variable 'ppac' which could be used without being initialized (if 
fixed->info_state == info_none). This is fixed in the file
/project/dce/build/dce1.1/src/security/client/login/sec_login_pvt.c where
ppac is set to NULL at the beginning of the routine. However, the last
line of the routine frees ppac without checking if it is NULL.

[7/26/94 public]
Recent code drop contains changes requested here.  Although, isn't
ANSI free() defined to accept a NULL pointer without problem?
Closed.



CR Number                     : 10470
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rca
Short Description             : the rca functional tests are
being installed in the wrong directory.
Reported Date                 : 4/27/94
Found in Baseline             : 1.1
Found Date                    : 4/27/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : entire security tet test suite
Sensitivity                   : public

[4/27/94 public]

The security rca functional tests are being installed under

nb_<platform>/install/<platform>/dcetest/dce1.1/tet.

This is incorrect. They should be installed in 

nb_<platform>/install/<platform>/dcetest/dce1.1/test/tet/functional/security

The audit tests are there already.

[8/4/94 public ]

IDIR was modified.



CR Number                     : 10450
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : doc
Short Description             : Change 'forever' option to 'policy -px' to 'none'
Reported Date                 : 4/22/94
Found in Baseline             : 1.0.3
Found Date                    : 4/22/94
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : rgy_edit.8sec
Sensitivity                   : public

[4/22/94 public]

The text which appears in the rgy_edit man page explaining the -px
option to the policy subcommand :

      If you define a password expiration date as forever, the password has
      an unlimited lifespan.

should be changed to :

      If you define a password expiration date as none, the password has
      an unlimited lifespan.

[8/29/94 public]
Fixed and verified.  Verified by me.

[09/08/94 public]
Closed bug.



CR Number                     : 10432
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : server
Short Description             : first sec hcell drop
Reported Date                 : 4/21/94
Found in Baseline             : 1.1
Found Date                    : 4/21/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : <below>
Sensitivity                   : public

[4/21/94 public]

Add support for polymorphic items in security server registry database in

./security/h/rsdb_acl.h
./security/h/rsdb_pvt.h
./security/h/rsdb_util.h
./security/server/rrs/rrs_prop_acl.c
./security/server/rs/rs_attr.c
./security/server/rs/rs_dacl.c
./security/server/rs/rs_secidmap.c
./security/server/rsdb/rsdb_acct.c
./security/server/rsdb/rsdb_acl.c
./security/server/rsdb/rsdb_attr.c
./security/server/rsdb/rsdb_daclmgr.c
./security/server/rsdb/rsdb_dir.c
./security/server/rsdb/rsdb_dir_util.c
./security/server/rsdb/rsdb_misc.c
./security/server/rsdb/rsdb_pgo.c
./security/server/rsdb/rsdb_pgo_util.c
./security/server/rsdb/rsdb_policy.c
./security/server/rsdb/rsdb_util.c

[5/11/94 public]
Closed.



CR Number                     : 10431
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : tests
Short Description             : broken comment leaders
Reported Date                 : 4/21/94
Found in Baseline             : 1.1
Found Date                    : 4/21/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : test/security/tet-tests/tet_scen,
test/security/tet-tests/tetexec.cfg, test/security/api/gssapi/Makefile.echo
Sensitivity                   : public

[4/21/94 public]
All three had "NONE" for their initial rscs comment leader (also fixed.)
Also, leave VTALRM alone in tetexec.cfg.

[5/13/94 public]
Closed.



CR Number                     : 10428
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : group_override support (RFC 55.0)
Reported Date                 : 4/21/94
Found in Baseline             : 1.1
Found Date                    : 4/21/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b3
Affected File(s)              : roverride.c, passwd_export.c,
et al
Sensitivity                   : public

[4/21/94 public]
This OT is to create a tracking reference number for the code drop of
group_override support into the 1.1 tree.  This functionality is fully
described in RFC 55.0.  Briefly, a user can specify a group override
file (/opt/dcelocal/etc/group_override) that allows local override
of group information stored in the registry.  It works in a way similar
to the passwd_override file.  passwd_export will use group_override
information when writing /etc/group.



CR Number                     : 10415
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 10428
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Addition of group override support to DCE Security
Reported Date                 : 4/20/94
Found in Baseline             : 1.0.2
Found Date                    : 4/20/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : See description below
Sensitivity                   : public

[4/20/94 public]

I (Marll McDonald) am changing several files to reflect a change to DCE
Security software.  The full description of the change is in the
document "Adding Group Override Support to DCE Security" that Digital
engineer Joe Comuzzi created.  Joe wrote this document in response to
OSF's Request For Comments number 55.0.

Next are the names of the documentation files I am changing.

app_ref/man3sec/sec_rgy_pgo_get_by_eff_unix_num.3sec (new file)
admin_gd/security/security/8_maint.gpsml
admin_ref/man8sec/passwd_export.8sec
app_gd/security/4_rgy.gpsml

I plan to make some changes to the Porting and Testing Guide, but
will follow Hal Lichtin's suggestion and send the changes directly
to Doug Weir instead of making them through the ODE.

Digital engineer Brian Hasbrouck is making the changes to the software.
He has also reviewed my changes to the documentation.

[04/28/94]

(Entered by Marll McDonald.)

The previous list of affected files is incorrect.  Next is the correct list.

app_ref/man3sec/sec_rgy_pgo_get_by_eff_unix_num.3sec (new file)
admin_gd/overview/overview/9_tasks.gpsml
admin_gd/security/security/8_maint.gpsml
command_ref/man8sec/passwd_export.8sec
app_gd/security/4_rgy.gpsml

I changed the previous five files according to Joe Comuzzi's document.
I found no need to change the Porting and Testing Guide.

[09/19/94 public]
Closed bug.



CR Number                     : 10357
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 9993
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_gd
Short Description             : Add ACL and backing store documentation
Reported Date                 : 4/14/94
Found in Baseline             : 1.1
Found Date                    : 4/14/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : see text below
Sensitivity                   : public

[4/14/94 public]
Adding a new chapter app_gd/dce/backing_store.gpsml about the backing store
for ACL Library support.
Adding ACL Library material to existing chapter, app_gd/security/7_acl.gpsml.

[10/11/94 public]
This material is complete, verified by rsalz, by bowe, and by me.

[10/25/94 public]
Closed bug.



CR Number                     : 10331
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : Intercell is broken
Reported Date                 : 4/12/94
Found in Baseline             : 1.1b6
Found Date                    : 4/12/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : 
/security/client/login/sec_login.c
Sensitivity                   : public

[4/12/94 public]
I can't get intercell communication to work. I am using the same procedure
that I always use to set it up. John Dugas has tried to set up intercell
and is seeing the same problem. 

Unauthenticated access doesn't work, and running the rgy_edit cell command
returns the usual 'Incomplete cell add - Registry server unavailable.'
message.

[4/13/94 public]
Code cleanup munged the string representations of the protocol sequences
in sockaddr_to_tower.

[4/15/94 public]
The above fix fixes the cds side. Unauthenticated intercell operations
now work. The rgy_edit cell command however core dumps. All I know
is it faults while executing sec_login_validate_identity call on line
7578 in ek_db.c. This is in the ek_cell_add function. Instumentation
in gdad indicates it is never seeing a request. Assigning it to security.

[4/26/94 public]
Bumping the priority of this CR to A0. DEC is completely blocked by this
bug to continue their development/testing for the H-Cells (CDS) work.

[4/26/94 public]
If it's core dumping, then please add the traceback from the coredump to this
CR (if it's HPUX, make sure it's linked against end.o before attempting to
debug it to get the traceback).

[4/26/94 public]
I'll get the trace but the pressure is off this for the time being.
DEC is in the process of doing a work around the H-Cell problem.

[5/25/94 public]
Unauthenticated intercell in 1.1b9 is broken. The command
"cdscp show dir /.../<cellname>" using a <cellname> registered in 
DNS returns the NAMESERVERBUG message ("Software error detected in 
server (dce/cds)").

[5/26/94 public]
Moved unauthenticated intercell problem to a new CR, 10790.

[6/13/94 public]
Fix submitted by Greg on 6/10/94.



CR Number                     : 10277
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : Undeclared identifier aud_status in sec_svg_db.c
Reported Date                 : 4/4/94
Found in Baseline             : 1.1
Found Date                    : 4/4/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/server/sec_salvage_db/sec_svg_db.c
Sensitivity                   : public

[4/4/94 public]
RIOS:  Undeclared identifier aud_status
       Syntax error
HP:    Unexpected symbol: "error_status_t"
       "aud_status" undefined
       Argument #6 is not the correct type
       Indirection must be through a pointer
       Expression in if must be scalar
AT386: `aud_status' undeclared (first use this function)
       parse error before `*'

[4/4/94 public]
Fix submitted.

[5/13/94 public]
Closed.



CR Number                     : 10264
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd/sec_salvage_db
Short Description             : First sec audit code drop
Reported Date                 : 3/31/94
Found in Baseline             : 1.0.3
Found Date                    : 3/31/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
./security/h/rs_util.h
./security/h/sec_aud_evts.h
./security/server/bin/Makefile
./security/server/bin/rgy_create.c
./security/server/rs/rs_acct.c
./security/server/rs/rs_main.c
./security/server/rs/rs_policy.c
./security/server/rs/rs_repadm.c
./security/server/rs/rs_util.c
./security/server/sec_salvage_db/Makefile
./security/server/sec_salvage_db/sec_svg_db.c
./security/audit/ec/Makefile
./security/audit/ec/dce_sec_authent
./security/audit/ec/dce_sec_control
./security/audit/ec/dce_sec_modify
./security/audit/ec/dce_sec_query
./security/audit/ec/dce_sec_server
Sensitivity                   : public

[3/31/94 public]
First audit code drop for security component.  Also includes various
security event configuration files.

[5/13/94 public]
Closed.



CR Number                     : 10253
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : update work in policy for ERA
Reported Date                 : 3/30/94
Found in Baseline             : 1.0.3
Found Date                    : 3/30/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
./security/h/sec_svg_tokens.h
./security/server/sec_salvage_db/sec_svg_prt.c
./security/server/sec_salvage_db/sec_svg_rec.c
./test/security/api/moretests/salvager.sh
./test/security/api/moretests/salvager_sample.prt
Sensitivity                   : public

[3/30/94 public]
Security ERA adds new information in policy and sec_salvager_db
needs to be updated.

[5/13/94 public]
Closed.



CR Number                     : 10228
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_rgy_cursor_reset returns
no errors
Reported Date                 : 3/25/94
Found in Baseline             : 1.0.2
Found Date                    : 3/25/94
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_rgy_cursor_reset.3sec
Sensitivity                   : public

[3/25/94 public]
The reference page for sec_rgy_cursor_reset incorrectly states that the
routine might return either of two errors.  sec_rgy_cursor_reset never
returns an error.

[3/29/94 public]

Assigned this CR to Pam Millett (HP security writer).

[8/30/94 public]
Fixed and Verified.  Verified by burati.

[09/13/94 public]
Closed bug.



CR Number                     : 10186
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd/sec_create_db
Short Description             : failure to configure Security
Replication on a DCE client machine, secd dumps core.
Reported Date                 : 3/18/94
Found in Baseline             : 1.1
Found Date                    : 3/18/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b7
Affected File(s)              : security/server/rsdb/balanced_trees.c
Sensitivity                   : public

[3/18/94 public]

Code base: NB from 3/17/94. 
Cell Configuration: 486 - Core server
		     HP - DCE client and
			  security replica server

Problem: Using dce_config, I tried to configure Security Replication in 
         a client machine and secd core dumps. The following messages 
 	 were printed.


	(Running the Additional Server Configuration menu in dce_config)

        selection:  8
S:****** Configuring Security Replication


        Enter the security replica name (without subsys/dce/sec) : (bronze)
        Modifying acls on /.:/sec/replist ...
        Modifying acls on /.:/subsys/dce/sec ...
        Modifying acls on /.:/sec ...
        Modifying acls on /.: ...
        Modifying acls on /.:/cell-profile ...
        Enter keyseed for initial database master key: 

./dce_config: 2385 Memory fault - core dumped
ERROR:   sec_create_db may have failed to create security slave
        Press <RETURN> to continue, CTRL-C to exit: 
                start slave security server (secd) ...
Registry: Fatal Error - Cannot initialize server database
 at line 366 of file
/project/dce/build/dce1.1-snap/src/security/server/rs/rs_main.c -
0x1712207a - Registry object not found (dce / sec)

[3/18/94 public]

Here is more info on this issue:

A. First scenario:

1. Using nightly build of 3/18 AM, configured a HP as a Master Replica.
2. Using nightly build of 3/18 AM, trying to configure a slave replica on  
   486 secd dumps core.

root@[sunrise]:gdb secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..(no debugging symbols found)...
Core was generated by `sec_create_db'.
Program terminated with signal 11, Segmentation fault.
#0  0x41cc1f in rs_rep_auth_binding_set_auth ()
(gdb) b *__start
Breakpoint 1 at 0x400000
(gdb) run
Starting program: /usr/bin/secd 
(no debugging symbols found)...(no debugging symbols found)...
Breakpoint 1, 0x400000 in __start ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0x41cc1f in rs_rep_auth_binding_set_auth ()
(gdb) where
#0  0x41cc1f in rs_rep_auth_binding_set_auth ()
(gdb) bt
#0  0x41cc1f in rs_rep_auth_binding_set_auth ()
(gdb) x/20i  rs_rep_auth_binding_set_auth
0x41cc1c <rs_rep_auth_binding_set_auth>:        pushl  %ebp
0x41cc1d <rs_rep_auth_binding_set_auth+1>:      movl   %esp,%ebp
0x41cc1f <rs_rep_auth_binding_set_auth+3>:      subl   $0xc,%esp
0x41cc22 <rs_rep_auth_binding_set_auth+6>:      pushl  %ebx
0x41cc23 <rs_rep_auth_binding_set_auth+7>:      movl
$0x41cc13,0xfffffffc(%ebp
)
0x41cc2a <rs_rep_auth_binding_set_auth+14>:     movl
$0x0,0xfffffff8(%ebp)
0x41cc31 <rs_rep_auth_binding_set_auth+21>:     movl   0x10(%ebp),%edx
0x41cc34 <rs_rep_auth_binding_set_auth+24>:     pushl  %edx
0x41cc35 <rs_rep_auth_binding_set_auth+25>:     leal
0xfffffff8(%ebp),%eax
0x41cc38 <rs_rep_auth_binding_set_auth+28>:     pushl  %eax
0x41cc39 <rs_rep_auth_binding_set_auth+29>:     pushl  $0x41b6a5
0x41cc3e <rs_rep_auth_binding_set_auth+34>:     movl
0xfffffffc(%ebp),%edx
0x41cc41 <rs_rep_auth_binding_set_auth+37>:     pushl  %edx
0x41cc42 <rs_rep_auth_binding_set_auth+38>:     movl   0x494630,%ebx
0x41cc48 <rs_rep_auth_binding_set_auth+44>:     call   *%ebx
0x41cc4a <rs_rep_auth_binding_set_auth+46>:     addl   $0x10,%esp
0x41cc4d <rs_rep_auth_binding_set_auth+49>:     movl   0x10(%ebp),%eax
0x41cc50 <rs_rep_auth_binding_set_auth+52>:     cmpl   $0x0,(%eax)
0x41cc53 <rs_rep_auth_binding_set_auth+55>:
je     0x41cc5c <rs_rep_auth_binding_set_auth+64>
0x41cc55 <rs_rep_auth_binding_set_auth+57>:
jmp    0x41ccc2 <rs_rep_auth_binding_set_auth+166>


B. Second scenario:
  
1. Using nightly build of 3/18 AM, configured a HP as a Master Replica.
2. Using build available from bl-4, trying to configure a slave replica on
   486 secd dumps core.
3. Same traceback as first scenario.


C. Third scenario:

1. Using nightly build of 3/18 AM, configured a HP as a Master Replica.
2. Using build available from bl-3, successfully configured a slave
   replica on 486.

bl-3 has delegation/epac code drop while bl-4 also has ERA code drop.

[3/22/94 public]

Using nightly build available on 3/22, configured a Master on HP and trying
to configure a replica on another HP causes core dump in sec_create_db.

Here is the output from sec_create_db -v from dce_config script:

Creating replica of registry database in cell /.../hp_cell
SECD Checkpoint on Tue Mar 22 15:15:15 1994
.... saving rgy
.... saving acct
.... saving person
.... saving group
.... saving org
.... saving replicas
.... saving acl
.... saving attributes
config_secreplica[89]: 20189 Memory fault(coredump)
ERROR:   sec_create_db may have failed to create security slave

Here is some more info from xdb:


r0  00000000 400242a0 0001356b 7b0335e8 r4  7b033604 00000006 7b033604
7b033798
r8  00000000 00000004 00000000 00000000 r12 4000bee0 00004bc8 10000080
10000000
r16 4008fb70 00000000 00000000 7b0339e0 r20 40024bc0 400242a0 00000400
7ffe6000
r24 7ffe6000 0000000a 0000000a 40024250 r28 00000008 02228b80 7b037618
00000000
    pc = 00006382.00013568     priv = 3     psw = jthlnxbCvmrQPDI     sar =
21
        0x00013554   save_dat+012c   LDO     1580(1),1
        0x00013558   save_dat+0130   LDSID   (0,1),31
        0x0001355c   save_dat+0134   MTSP    31,0
        0x00013560   save_dat+0138   BLE     0(0,1)
        0x00013564   save_dat+013c   OR      31,0,2
 >      0x00013568   save_dat+0140   LDW     -32(0,30),19
        0x0001356c   save_dat+0144   COMIBT,=,N
8,28,save_database+01e0
        0x00013570   save_dat+0148   LDW     -1228(0,27),31
        0x00013574   save_dat+014c   LDW     0(0,31),26
        0x00013578   save_dat+0150   BL      save_database+0158,2
 File: unknown    Procedure: save_database + 0x00000140    Line: unknown
>t
 0 save_database + 0x00000140 (0x7b035c80, 0, 0x180, 0x100000)
 1 rsdb_save + 0x000003ec (0x40001d18, 0x7b0339e0, 0x400b5bc8, 0x1)
 2 create_slave_db + 0x000001e0 (0x7b035afc, 0x7b0339f8, 0x400b1718,
0x7b033012)
 3 create_slave + 0x0000021c (0x6, 0x7b0335e8, 0x7b0339e4, 0x7b0339f8)
 4 rgy_main + 0x00000278 (0x6, 0x7b0335e8, 0, 0)
 5 main + 0x00000084 (0x6, 0x7b0335e8, 0, 0)

[3/22/94 public]
HP has a fix for this that has been tested internally on HPUX.
Watch this space for branch name for testing.

[4/4/94 public]
Re-opening this bug. Using nightly build available on 4/4 AM, configured a
Master server on HP/UX. Trying to configure a Slave on HP/UX didn't work.
There is no core file on Slave machine. Here are details:

spring : sec_admin                                           
Default replica:  /.../hp_cell/subsys/dce/sec/master
Default cell:     /.../hp_cell
sec_admin> lrep
Default replica:  /.../hp_cell/subsys/dce/sec/master
Default cell:     /.../hp_cell


subsys/dce/sec/master (master)

subsys/dce/sec/bacardi
sec_admin> lrep -all
Default replica:  /.../hp_cell/subsys/dce/sec/master
Default cell:     /.../hp_cell


subsys/dce/sec/master (master)
          Instance id: 4c3c2f9e-4fef-11cd-89e3-080009251539
          Addresses:               ncacn_ip_tcp:130.105.4.208[]
                                   ncadg_ip_udp:130.105.4.208[]
          State:                   in service - master
          Last update received at: Mon Apr  4 17:00:52 1994
          Last update's seqno:     0.196

subsys/dce/sec/bacardi
          Instance id: f7b5d84c-4ff0-11cd-9813-08000920a8b5
          Addresses:               ncacn_ip_tcp:130.105.4.102[]
                                   ncadg_ip_udp:130.105.4.102[]
                    State:         unavailable - no more profile elements
(dce / rpc)
          Propagation state:       marked for initialization


Master Server
-------------

SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
SECD prop_driver: prop failed  status
 - 0x16c9a0d6 - not registered in endpoint map (dce / rpc)
SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
SECD prop_driver: prop failed  status
 - 0x16c9a016 - communications failure (dce / rpc)


Slave server config. info
-------------------------

S:****** Configuring Security Replication


        Enter the security replica name (without subsys/dce/sec) :
(bacardi)
        Modifying acls on /.:/sec/replist ...
        Modifying acls on /.:/subsys/dce/sec ...
        Modifying acls on /.:/sec ...
        Modifying acls on /.: ...
        Modifying acls on /.:/cell-profile ...
        Enter keyseed for initial database master key: 

                start slave security server (secd) ...

[4/5/94 public]
I tested dce1.1b5 plus a sec_create_db built with the fixed
balanced_trees.c and was able to create a master on HP-UX
and a slave on HP_UX.  Changed status to fix.
The symptoms that Rajendra describes above look like
the sec_create_db command on the slave is working but
the subsequent start-up of secd is somehow failing.
Rajendra, if you can still reproduce the problem
starting up a slave, please open another bug for it.

[5/13/94 public]
Closed.



CR Number                     : 10179
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gssapi
Short Description             : gssapi BL2 drop
Reported Date                 : 3/18/94
Found in Baseline             : 1.1
Found Date                    : 3/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : lots
Sensitivity                   : public

[3/18/94 public]
Submit GSSAPI BL2 to DCE 1.1 tree

[5/13/94 public]
Closed.



CR Number                     : 10164
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : svc
Short Description             : Security SVC code drop sec_svc_bl1
Reported Date                 : 3/17/94
Found in Baseline             : 1.1
Found Date                    : 3/17/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : bunch of files
Sensitivity                   : public

[3/17/94 public]

First batch of SVC changes in security code.

[3/28/94 public]
Fixed.

This drop contains 

(a) set up the structure to make further SVC changes to security code.
(b) registers the default message text tables for "sec" and "sad"
    components. So even if NLSPATH is not actual error text rather 
    than hex codes would be printed.
(c) An unauthenticated trying to add to registry will see an
    unauthorized rather than "Principal's Quota exhausted" message.

[5/13/94 public]
Closed.

[ sekhar 08/19/94 public ]

The fix (c) in comments dated  3/28/94 was somehow lost.
So I put the fix back ( code is different from the original
fix since the code has changed ).

So I am changing this OT to fix state. It can be closed
after verifying the changes which are in the file 
   security/server/rs/rs_auth.c 

The Fixed in basline reflects the baseline into which 
this fix is going.



CR Number                     : 10117
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : security/utils
Short Description             : compilation bugs in a GSSAPI file 
				             broke security & thus libdce
Reported Date                 : 3/10/94
Found in Baseline             : 1.1
Found Date                    : 3/10/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/gssapi/gssapi_supp.c
                                             security/gssapi/gssapi.h
Sensitivity                   : public

[3/10/94 public]

Compilation bugs in the GSSAPI source "security/gssapi/gssapi_supp.c"
broke the builds of security and in turn of libdce.  For example:

[ /security/utils ]

"/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi-supp.c", line \
 76.10: 1506-030 (S) Identifier GSSDCE_C_OID_KRBV5_DES cannot be redeclared.
"/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi-supp.c", line \
 82.56: 1506-168 (S) Initializer must be enclosed in braces.
"/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi-supp.c", line \
 84.10: 1506-030 (S) Identifier GSSDCE_C_OID_DCE_KRBV5_DES cannot be redeclared.
"/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi-supp.c", \
 line 90.50: 1506-168 (S) Initializer must be enclosed in braces.
"/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi-supp.c", line \
 92.10: 1506-030 (S) Identifier GSSDCE_C_OID_DCENAME cannot be redeclared.
"/project/dce/build/dce1.1-snap/src/security/gssapi/gssapi-supp.c", line \
 96.35: 1506-168 (S) Initializer must be enclosed in braces.
*** Error code 1

[3/10/94 public]

Problem is apparently due to a header file on RIOS defining "const" to be
a null string.   This temporary fix simply removes const qualifiers from the
affected declarations;  A later task will be to track down which header file
is responsible and fix it properly.

[5/13/94 public]
Closed.



CR Number                     : 10106
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : dce_login/ticket expiration
Short Description             : Can't bind to rgy with expired creds
Reported Date                 : 3/8/94
Found in Baseline             : 1.1
Found Date                    : 3/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : Unknown
Sensitivity                   : public

[3/8/94 public]
Using nightly build available on 3/8 AM, configured a single machine cell.
Performed the following steps:
1. Logged in as cell_admin.
2. Using rgy_edit/prop command changed  Default certificate lifetime to 5m.
3  Exited login session and logged in again as cell_admin.
4. Doing klist indicates ticket lifetime to be 5 minutes.
5. Wait for 6 minutes to pass.
6. Do another klist and make sure tickets are no longer valid.
7. Invoking rgy_edit gives

spring :  rgy_edit
?(rgy_edit) Unable to contact the registry - Registry server unavailable
(Registry Edit Kernel) (dce / sad)
spring:

Here is more info with DEBUG_SEC set to 5.

spring : rgy_edit
(binding_cache_lookup) Looking for site /.../hp_cell, cell , princ dce-rgy,
type 1
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 400cf158
(rca_site_bind_nsi) Attempting to bind to site /.../hp_cell
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../hp_cell
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400dfa38
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
400dfa38
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400dfab8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
400dfab8
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400df380
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
400df380
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400df2e8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
400df2e8
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_nsi_binding_import) attempting to re-import
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../hp_cell
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400e2d50
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with (rca_setup_handle) Auth DCE,
principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
400e2d50
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400e26c0
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
400e26c0
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
/.../hp_cell/subsys/dce/sec/master
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==40148af0
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
40148af0
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==40147f90
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
40147f90
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Got binding
dd3a2196-3a86-11cd-b218-080009251539@ncacn_ip_tcp:130.105.4.208[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding
dd3a2196-3a86-11cd-b218-080009251539@ncadg_ip_udp:130.105.4.208[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site
== /.../hp_cell
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
40147d58
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_rebind) Took alt_handle 1 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site
== /.../hp_cell
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400cf158, handle
401498a0
(rca_setup_handle) end set_auth_info identity 400cf158
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412908d
(rca_rebind) Non-nsi rebind failed
(rca_site_bind_pe_site) assuming /.../hp_cell is string binding
(rca_lock_handle) locking 7b034828
400d0b80: Dropping site refcount from 1 to 0
Drop ref to identity 400cf158 from binding cache
(rca_unlock_handle) unlocking 400d0b80
?(rgy_edit) Unable to contact the registry - Registry server unavailable
(Registry Edit Kernel) (dce / sad)

Pre-1.1 code gave the following error and stayed in the rgy_edit session.
------------------------------------------------------------------------

?(rgy_edit) Warning - binding is not authenticated - Cant establish
authentication to registry (Registry Edit Kernel) (dce / sad)
rgy_edit=>

[3/09/94 public]
The real error looks like it's coming from rpc_binding_set_auth_info (1412908d)
which is the Kerberos error "Matching credentials not found (dce / krb)".  I'm
assuming this is coming from the code to get a PTGT (because that's expired
too), in which case it's almost definitely from the FAKE code to build an
EPAC chain that's in there now...  I've just tried this with the newer code
we have here and the problem no longer exists.  We can't submit this code yet
because all of the FAKE EPAC stuff has been ripped out, and the real stuff
that is there doesn't have all the functionality that the code you have
does.  Downgraded it from Severity 'A' to 'B' since there is a workaround
(just refresh your creds).

[7/13/94 public]

Verified to once again work as the pre 1.1 code did (see above) with recent
NB. Closed.



CR Number                     : 10102
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_key_mgmt_get_key api man page
Short Description             : sec_key_mgmt_get_key does not say what does it means to specify 0 for key_vn arg.
Reported Date                 : 3/8/94
Found in Baseline             : 1.0.3
Found Date                    : 3/8/94
Severity                      : B
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_key_mgmt_get_key.3sec
Sensitivity                   : public

[3/8/94 public]

The man page for sec_key_mgmt_get_key() does not say if you supply 
0 for key_vn argument, it gets you the latest key. This should be added.

[3/24/94 public]

Assigned this CR to Pam Millett (HP security writer).

[millette 8/30/94 public] 
Fixed and verified.  Verified by burati.

[09/15/94 public]
Closed bug.



CR Number                     : 10090
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : client unix interfaces manpages
Short Description             : sec_rgy_unix_getgrnam() doesn't return primary group
Reported Date                 : 3/8/94
Found in Baseline             : 1.0.3
Found Date                    : 3/8/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_rgy_unix_getgrnam.3sec
Sensitivity                   : public

[3/8/94 public]
sec_rgy_unix_getgrnam() does not recognize implicit members of a
group; ie, principals that are members by virtue of the fact that the 
group is the primary group of the principal's account.  The API does
recognize those members of a group who have been added explicitly (via 
the rgy_edit "member <group> -a <member>" subcommand). 

The little program below can be used to illustrate this behavior.


#include <dce/acct.h>
#include <dce/binding.h>
#include <macros.h>

main(argc, argv)
  int   argc;
  char  *argv[];
{
  char                  gname[1024];
  char                  *site = "/.:/";
  sec_rgy_cursor_t      cursor;
  sec_rgy_unix_group_t  g_entry;
  signed32              num_members;
  sec_rgy_member_t      member_list[100];
  int                   i;
  sec_rgy_handle_t      h;
  error_status_t        st;

  if (argc != 2) {
      printf("usage: gr <group>\n");
      exit(1);
  }

  strncpy(gname, argv[1], strlen(argv[1]) + 1);

  sec_rgy_site_open(site, &h, &st);
  printf("sec_rgy_site_open returns %d\n", st);

  if (GOOD_STATUS(&st)) {
      sec_rgy_cursor_reset(&cursor);
      sec_rgy_unix_getgrnam(h, gname, strlen(gname), 100,
                            &cursor, &g_entry, &num_members,
                            member_list, &st);
  }

  printf("sec_rgy_unix_getgrnam returns %d\n", st);

  if (GOOD_STATUS(&st)) {
    printf("num_members = %d\n", num_members);
    for (i = 0; i < num_members; i++) {
        printf("member_list[%d] = %s\n", i, member_list[i]);
    }
  }

}

[3/23/94 public]
Sent mail to Julie but didn't hear back...
The behavior of this routine is intended to match that of the
Unix getgrnam() library call, which returns only the accounts
listed explicitly in the group entry.
An enhancement request could be filed for a new, distinct API.

[3/24/94 public]
I expected the sec_rgy_unix_getgrnam() API to return all the members I
see when I execute a "view <group> -m" in rgy_edit.  I think it's 
misleading to return only a subset of those members.  I don't understand
the UNIX semantics argument; getgrnam() will return those members visible
in a group entry when you cat /etc/group (regardless of how they got there,
and regardless of whether the group is the member's primary group) -- 
shouldn't sec_rgy_unix_getgrnam() return those members visible when you 
"view -m" the group domain in the registry (regardless of how they got there, 
and regardless of whether the group is the member's primary group)?

[4/1/94 public]
For now, we've agreed to disagree and lower the priority until it's
resolved if the current behavior should be more clearly documented.

[8/9/94 public]
We agree with Rob's statement above and with his side of an email conversation
on this topic between Julie and Rob...  I've reassigned this to doc/millette.

The basic issue is:
(a) Unix getgrname() returns what's in /etc/group
(b) /etc/group is a list of *additional* groups that users are members of,
    *not* necessarily including the group that the account is a primary member
    of (ie: the one listed in /etc/passwd).

(c) The projlist (DCE group list) returned by the security version of getgr*
    is the same as (a) above: those groups where members were specifically
    added (as in (b) above), as opposed to those that are members by virtue
    of assocation by primary group.

We don't agree with JY's argument that since the Unix version returns every-
thing in /etc/group then the DCE version should return everything in the DCE
rgy.  /etc/group is not equivalent to the DCE rgy, it's similar to the explicit
projlists created by explicit member addition to groups in the DCE rgy.

We do agree with the statement that the description of this functionality is
lacking (according to Rob, "the Unix getgrnam() man pages I've checked say
only that it returns an entry of the /etc/group file") and thus this is now
a doc CR to update those manpages.

[8/29/94 public]
Fixed and verified.  Verified by rps.

[09/15/94 public]
Closed bug.



CR Number                     : 10084
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit / do p / change
Short Description             : rgy_edit change quota error causes dceseacl to fail
Reported Date                 : 3/7/94
Found in Baseline             : 1.1
Found Date                    : 3/7/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/admin/rgy_edit/tty_pgo.c
Sensitivity                   : public

[03/07/94 public]

When you attempt to change a principals "Enter object creation quota" value
without being authenticated you used to get the message:

rgy_edit=> change st_admin1
Enter new name: (st_admin1) 
Enter new UNIX number: (29) cannot be changed
Enter new full name: () 
Enter object creation quota: (999) unlimited
?(rgy_edit) Unable to change principal  "st_admin1" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Do you wish to try again  [y/n]? (n) 
rgy_edit=> 

Now, you get:

rgy_edit=> change st_admin5
Enter new name: (st_admin5) 
Enter new UNIX number: (33) cannot be changed
Enter new full name: () 
Enter object creation quota: (unlimited) 999
?(rgy_edit) Unable to change principal  "st_admin5" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Enter new name: (st_admin5) 
Enter new UNIX number: (33) cannot be changed
Enter new full name: () 
Enter object creation quota: (999) 
?(rgy_edit) Unable to change principal  "st_admin5" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Enter new name: (st_admin5) 
Enter new UNIX number: (33) cannot be changed
Enter new full name: () 
Enter object creation quota: (999) unlimited
Update attributes  [y/n]? (n) 
rgy_edit=> 

You can not exit the change command until you reenter the original "Enter
object creation quota" value.  I am no longer asked "Do you wish to try
again  [y/n]? (n)".  This caused the dceseacl system test to with scrolling
error messages.

Also, I got stuck in the change command.  I accidentally changed the principal
name and had to use ctrl-c to get out:

rgy_edit=> change st_admin3
Enter new name: (st_admin3) 
Enter new UNIX number: (31) cannot be changed
Enter new full name: () 
Enter object creation quota: (unlimited) 999
?(rgy_edit) Unable to change principal  "st_admin3" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Enter new name: (st_admin3) unlimited
Enter new UNIX number: (31) cannot be changed
Enter new full name: () 
Enter object creation quota: (999) unlimited
?(rgy_edit) Unable to change principal  "st_admin3" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Enter new name: (unlimited) st_admin3
?(rgy_edit) "st_admin3"  - Principal already exists (Registry Edit Kernel) (dce / sad)
?(rgy_edit) Unable to change principal  "st_admin3" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Enter new name: (unlimited) 
Enter new UNIX number: (31) cannot be changed
Enter new full name: () 
Enter object creation quota: (unlimited) 
?(rgy_edit) Unable to change principal  "st_admin3" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
...
...
...

I had to do 2 or 3 ctrl-c's before I could get back to the rgy_edit prompt.

[3/8/94 public]
Fix has been checked-in and a submit request has been sent to the drb.  I can
submit whenever I hear that it's okay.

[3/9/84 public]
Fix has been submitted.

[03/10/94 public]

The original problem is fixed, BUT, if you respond yes to try again it
doesn't work, you get dropped back to the prompt no matter how you respond
to the "Enter new name: " question:

rgy_edit=> change st_admin1
Enter new name: (st_admin1) 
Enter new UNIX number: (31) cannot be changed
Enter new full name: () 
Enter object creation quota: (unlimited) 999
?(rgy_edit) Unable to change principal  "st_admin1" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Do you wish to try again  [y/n]? (n) y
Change Principal=> Enter name: (st_admin1) 	<==== TRIED DEFAULT
rgy_edit=> 

rgy_edit=> change st_admin1
Enter new name: (st_admin1) 
Enter new UNIX number: (31) cannot be changed
Enter new full name: () 
Enter object creation quota: (unlimited) 999
?(rgy_edit) Unable to change principal  "st_admin1" - User not authorized to perform operation (Registry Edit Kernel) (dce / sad)
Do you wish to try again  [y/n]? (n) y
Change Principal=> Enter name: (st_admin1) st_admin1	<==== TRIED SPECIFYING
rgy_edit=> 

Is this question only asked when you are not authenticated or are there other
times when you get this question.  If it is only asked when you are not auth-
enticated it probably could be deleted and you should just be left at the
rgy_edit prompt.

[3/11/94 public]
Downgraded this bug since it is only an inconvenience with a workaround.
This bug shouldn't be standing in the way of system tests since the test
has to be rewritten to handle the new prompts.

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.

[12/21/95 public]
This was really fixed with the above submission MaryB mentions (it only took
1.5 years to realize that :-).  Paul was confused in his "still broken"
statement above.  If you specify the same name, it knows it'll fail again,
so it's correct in not bothering to try.  If he had specified a "new" name,
it does let you try again (I just verified that).  If you want to change
the protections on the principal and then try again, it's just a matter
of re-executing the command, but the command itself is designed not to try
to change the same principal twice if the first time fails.  Any new/different
retry functionality should be done in dcecp.  PS: OT is being annoying in that
it won't let me specify that this was fixed in 1.1 (it will only take 1.2.1
as an answer), so just ignore the FixedIn field above and assume it says 1.1.



CR Number                     : 10080
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_authn
Short Description             : segv in sec_krb_decode_message_common
Reported Date                 : 3/7/94
Found in Baseline             : 1.1
Found Date                    : 3/7/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/utils/sec_authn.c
Sensitivity                   : public

[3/7/94 public]
Just a placeholder for now...

Using dce1.1-baseline/bl-3 to configure a cell, the core server (on a 486)
went fine, but the DFS server (on a hp) had some problems.  When trying to
cd /:, I got "bad directory" back.  I used dfstrace...

DFS Trace Dump -

   Date: Mon Mar  7 13:14:15 1994

Found 1 logs.

Contents of log cmfx:
Log wrapped; data missing.
time 749.800009, pid 4021112: servertokenmgt running 0 subops 
time 749.800013, pid 4021112: flushactivescaches starting 0 concurrent
storebacks 
time 749.800019, pid 4021112: running major renewlazyreps 
time 749.800020, pid 4021112: Renewlazyreps starts 0 subjobs 
time 749.800026, pid 4020796: running write through dslots 
time 756.100004, pid 4009420: cm_lookup 261900c traffic_cell.qadce.osf.org 
time 756.100006, pid 4009420: Trybind on name = traffic_cell.qadce.osf.org 
time 756.100007, pid 4009420: Trybind: cannot get helper 
time 756.100008, pid 4009420: checkerror returning code 5 

DFS Trace Dump - Completed

I sent SIGUSR1 to dfsbind, but it didn't produce a icl.bind file.

I started another dfsbind and did have some luck with it for a short time.
It then core dumped... a segment violation in sec_krb_decode_message_common
(according to the core file).  

Also, xdb was not able to attach to the original dfsbind.

Next, I rebooted the DFS server and restarted DCE -- without any problems.
Now ....

root@dce11> cd /:
dfs: dce errors (382312712) from dfsbind helper. 
ksh: /:: bad directory
root@dce11> /net/venus/u0/systest/setup/stcode_hp 382312712
382312712 (decimal), 16c9a108 (hex): helper process aborted (dce / rpc)

[3/8/94 public]

Config is 486 core server
          HPUX core client, dfs server/client
We've not seen this between HPUX and RIOS, only between HPUX and 486.

User must be dce logged in to reproduce this.  Dfsbind gets a segv in
security code:

0 sec_krb_decode_message_common@ + 0x0000008c (0x401265b0, 0x401265cc, 0x401265c8, 0x401265d0)
 1 sec_krb_dg_decode_message@libd + 0x00000070 (0x401265b0, 0x401265b8, 0x401265c8, 0x401265d0)
 2 handle_sec_krb_dg_decode_message (inptr = 0x400eaa5c, inlen = 700, outbuf = 0x400eb7a0)    [/project/dce/build/dce1.1-baseline/bl-3/src/security/helper/auth_helper.c: 843]
 3 do_auth_request (inptr = 0x400ea7a4, inlen = 700, outbuf = 0x400eb7a0, outsize = 0x400ea790)    [/project/dce/build/dce1.1-baseline/bl-3/src/security/helper/auth_helper.c: 1036]
 4 ProcessRequest (req = 0x400ea788)    [/project/dce/build/dce1.1-baseline/bl-3/src/file/dfsbind/main_helper.c: 385]
 5 service_thread (addr = 0x4001cda8)    [/project/dce/build/dce1.1-baseline/bl-3/src/file/dfsbind/main_helper.c: 280]
 6 cma__thread_base@libdce + 0x0000021c (0x40156058, 0, 0, 0)
 7 cma__thread_start1@libdce + 0x0000004c (0x40156058, 0, 0, 0)
 8 cma__thread_start0@libdce + 0x00000008 (0x40156058, 0, 0, 0)
 9 sec_krb_decode_message_common@ + 0x0000008c (0, 0, 0, 0)
>
------

        0x804b5a88   sec_krb_+005c   LDW     -192(0,30),20
        0x804b5a8c   sec_krb_+0060   STW     20,-64(0,30)
        0x804b5a90   sec_krb_+0064   OR      0,0,25
        0x804b5a94   sec_krb_+0068   OR      0,0,24
        0x804b5a98   sec_krb_+006c   OR      0,0,23
        0x804b5a9c   sec_krb_+0070   BL      sec_krb_decode_message_common@+007
        0x804b5aa0   sec_krb_+0074   ADDIL   0xffffd000,2
        0x804b5aa4   sec_krb_+0078   LDO     1928(1),1
        0x804b5aa8   sec_krb_+007c   LDSID   (0,1),31
        0x804b5aac   sec_krb_+0080   MTSP    31,0
        0x804b5ab0   sec_krb_+0084   BLE     0(0,1)
        0x804b5ab4   sec_krb_+0088   OR      31,0,2
 >      0x804b5ab8   sec_krb_+008c   LDW     -32(0,30),19
        0x804b5abc   sec_krb_+0090   STW     28,-92(0,30)
        0x804b5ac0   sec_krb_+0094   LDW     -192(0,30),21
        0x804b5ac4   sec_krb_+0098   LDW     0(0,21),22
        0x804b5ac8   sec_krb_+009c   STW     22,-88(0,30)
        0x804b5acc   sec_krb_+00a0   LDW     -92(0,30),1
        0x804b5ad0   sec_krb_+00a4   LDIL    0x1412a000,31
        0x804b5ad4   sec_krb_+00a8   LDO     -4056(31),20
        0x804b5ad8   sec_krb_+00ac   COMBF,=,N       1,20,sec_krb_decode_messag
        0x804b5adc   sec_krb_+00b0   LDW     -164(0,30),21
        0x804b5ae0   sec_krb_+00b4   LDW     4(0,21),22
        0x804b5ae4   sec_krb_+00b8   LDB     0(0,22),1

----------
r0  00000000 14129090 804b5abb 00000000 r4  00000000 00000000 00000000 00000000
r8  00000000 00000000 00000000 00000000 r12 00000000 00000000 00000000 00000000
r16 00000000 00000000 00000000 7af611f8 r20 14129028 401266fc 00000000 00000000
r24 4023460d 40126a6c 4001dce0 40018530 r28 14129090 4023460d 401267e0 00000000
    pc = 000024b5.804b5ab8     priv = 3     psw = jthlnxbCVmrQPDI     sar = 08

[3/14/94 public]

Apparently, we don't need a heterogenous setup to see this.  We've just seen it now
between two HP's.

[3/15/94 public]

This is getting in the way of progress.  One either never sees it
in a cell or one always sees it in a cell, and once it starts happening,
you can't get rid of it.  I reconfigured my cell
and now I see it all the time.  There were some changes made to
the libauth helper code for handle_sec_krb_dg_decode_message and friends
for fake EPACS.  Can someone comment on how well this was tested?

Can someone please look at this.  I don't have any idea what I'm supposed
to be looking for, since I'm not a security expert.  I have a cell right
now where I can reproduce it all the time; I would be happy to supply any
requested debug information that I can get out of the cell.

[3/15/94 public]
This is apparently dying in code that is not specific to DFS.  This code has
been tested a lot via all of DCE but DFS...  There shouuld be nothing specific
to DFS in this area of code yet (except an extra param in another piece that
isn't in the above trace and isn't really used by DFS itself or the auth helper
yet).   The fact that it works fine in a particular cell but always fails in
another cell is even more peculiar...  Are there major differences between
the cellnames of the cells that always work and always fail after it starts
failing?  Anything common about what's happening in the cell (ie: a particular
test) just before the cell starts having this problem?  Is it possible for you
to rebuild sec_authn.o and libdce.sl with -g and get a traceback with that
(so we can see where in sec_krb_decode_message_common it's dying)?

[3/16/94 public]
Submitted fix with verbal (vmail) approval from Rajendra, marked 'fix'.

[5/13/94 public]
Closed.



CR Number                     : 10070
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit -s
Short Description             : rgy_edit -s no longer works and causes cds.acl.6 to fail
Reported Date                 : 3/4/94
Found in Baseline             : 1.1
Found Date                    : 3/4/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/client/admin/rgy_edit/tty.c
Sensitivity                   : public

[3/4/94 public]

The following rgy_edit -s command no longer works in the nightly build
available 03/04/94, this causes the cds.acl.6 test to fail:

rgy_edit -s /.../west_cell.qadce.osf.org/subsys/dce/sec/master
?(rgy_edit) "/.../west_cell.qadce.osf.org/subsys/dce/sec/master" - Unknown or redundant keyword (Registry Editor/TTY Interface) (dce / sad)

[ mob 3/7/94 public ]
Fix submitted.

[03/09/94 public]
Verified as fixed in 03/09/94 nightly build.

[03/24/94 public]
Closed.



CR Number                     : 10068
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit / do o / change
Short Description             : rgy_edit change attribute in org dumps core
Reported Date                 : 3/4/94
Found in Baseline             : 1.1
Found Date                    : 3/4/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/server/rs/rs_attr_schema.c
Sensitivity                   : public

[3/4/94 public]

When executing the dcesepol system test, secd dumps core when you execute
the following commands:

	root@west> secd
	root@west> dce_login cell_admin -dce-
	Password must be changed!
	root@west> rgy_edit -update
	Current site is: registry server at /.../west_cell.qadce.osf.org/subsys/
	dce/sec/master 
	rgy_edit=> domain org
	Domain changed to: org
	rgy_edit=> change none
	Enter new name: (none) 
	Enter new UNIX number: (12) cannot be changed
	Enter new full name: () 
	Update attributes  [y/n]? (n) y
	Enter attribute name: () 15m	<======	ERROR IN TEST CAUSED BY THE
						ADDITION OF THE "UPDATE
						ATTRIBUTES" QUESTION
	CORE DUMPED

[3/4/94 public]

Using nightly build on 486/osf1, got different results when above scenario
was executed:

1. rgy_edit=> add testorg
rgy_edit=> v
none                                          12
testorg                                      105
rgy_edit=> change testorg
Enter new name: (testorg)
Enter new UNIX number: (105) cannot be changed
Enter new full name: ()
Update attributes  [y/n]? (n) y
Enter attribute name: () 15m
?(rgy_edit) "15m"  - schema entry not found (dce / sec)
Do you wish to enter policy information [y/n]? (n)


2. rgy_edit=> do
Current domain is: org
rgy_edit=> add abcdefghjomntr
rgy_edit=> v
none                                          12
testorg                                      105
abcdefghjomntr                               106
rgy_edit=> change abcdefghjomntr
Enter new name: (abcdefghjomntr)
Enter new UNIX number: (106) cannot be changed
Enter new full name: ()
Update attributes  [y/n]? (n) y
Enter attribute name: () 15m
?(rgy_edit) "15m"  - fault invalid tag (dce / rpc)
Do you wish to enter policy information [y/n]? (n)

3. rgy_edit=> do
Current domain is: org
rgy_edit=> add abcdefghjomntr
rgy_edit=> v
none                                          12
testorg                                      105
abcdefghjomntr                               106
rgy_edit=> change abcdefghjomntr
Enter new name: (abcdefghjomntr)
Enter new UNIX number: (106) cannot be changed
Enter new full name: ()
Update attributes  [y/n]? (n) y
Enter attribute name: () 15m

secd core dumped.


Here is the backtrace.

root@[sunrise]:gdb secd core
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..(no debugging symbols found)...
Core was generated by `secd'.
Program terminated with signal 11, Segmentation fault.
#0  0xa42296f4 in rwl_e_owner ()
(gdb) b *__start
Breakpoint 1 at 0x400000
(gdb) run
Starting program: /usr/bin/secd
(no debugging symbols found)...(no debugging symbols found)...
Breakpoint 1, 0x400000 in __start ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0xa42296f4 in rpc_ss_get_typed_integer (13, 108, 6548504)
(gdb) bt
#0  0xa42296f4 in rpc_ss_get_typed_integer (13, 108, 6548504)
#1  0xa42298f3 in rpc_ss_build_bounds_list
    (6547296, 0, 108, 4694044, 1, 6547292, 6548504)
#2  0xa42222fa in rpc_ss_ndr_marsh_struct (16, 2052, 108, 6548504)
#3  0xa4226575 in rpc_ss_ndr_marsh_pointee (4696164, 108, 1, 6547592, 6548504)
#4  0xa422733c in rpc_ss_ndr_m_struct_pointees (15, 840, 6548148, 6548504)
#5  0xa42257a2 in rpc_ss_ndr_marsh_interp ()
(gdb)

[3/4/94 public]

Please note that in the current drop of ERA code the ability to 
update attributes is restricted to "principals".  This is because 
the security database contains test schema entries that specifies 
a single acl manager type of "principal". What this means is that
the correct behavior for the typo above is the message:

?(rgy_edit) "15m"  - schema entry not found (dce / sec)

that rajendra saw.  If the attribute name was valid, the correct
behavior would be the message:

?(rgy_edit) unable to change attribute "valid schema name" - operation not
supported on this object type (dce / sec)

An application could be written to add additional schema entries that
specify group or org acl manager if this behavior is required.

[3/7/94 public]
A bug fix in the two lookup operations in rs_attr_schema.c is required
to memset the output schema_entry to zero for error cases.  Without
this fix, if a non-zeroed schema_entry is passed to the 
schema entry lookup routines and the lookup fails, the marshalling
code is likely to barf on the returned uninitialized schema_entry.

Note that the above fix takes care of the secd core dump problem.
This fix will not make the system test work.  The system test
must be modified to handle the new rgy_edit interface.
Unfortunately, system tests using the interactive rgy_edit
interface must be reevaluated every time changes are made
to the rgy_edit interactive i/f.  I recommend the rgy_edit
command line interface as being much less volatile for
system tests work that isn't specifically intended to test
the interactive UI.
Rgy_edit itself doesn't have a bug related to this OT.

[03/07/94 public]
A fix has already been submitted for the dcesepol system test and I am still
working on the dceseacl system test which is having the same problem.

[03/07/94 public]
A fix is on the ahop_hpux11 branch of
security/server/rs/rs_attr_schema.c

[03/09/94 public]
Verified as fixed in 03/09/94 nightly build.

[03/24/94 public]
Closed.



CR Number                     : 10066
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security macros
Short Description             : insufficient grouping in macros
Reported Date                 : 3/4/94
Found in Baseline             : 1.0.2
Found Date                    : 3/4/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : macros.h
Sensitivity                   : public

[3/4/94 public]
  MIN, MAX, DIFF are wrong.
  In macros.h, one instance of this problem is as follows:
----------
#define MIN(a, b)           (a) > (b) ? (b) : (a)
----------
  The following program shows the problem:
----------
#include <stdio.h>
#define MIN(a, b)           (a) > (b) ? (b) : (a)
main()
{
  int      x, y;
  y = 800, x = 1200;
  printf("%d\n", y - MIN(x, y / 2)); /* Should never be > y */
}

[3/4/94 public]
 Fixed the broken comment I added to explain the printf().

[8/11/94 public]
MIN and MAX are defined properly in dce.h and should be the ones used.

[8/12/94 public]
This was fixed a long time ago (part of some code cleanup work?), but nobody
ever marked it 'fix', so I'm doing so now.



CR Number                     : 10061
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : test/security/tet-tests/ts/client/rca/sec_rgy_attr
Short Description             : make: don't know how to make
mob@apollo.hp.com ahop@apollo.hp.com marcyw rrizzo
Reported Date                 : 3/3/94
Found in Baseline             : 1.1
Found Date                    : 3/3/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
./test/security/tet-tests/ts/client/rca/sec_rgy_attr/Makefile
./test/security/tet-tests/ts/client/rca/sec_rgy_attr_sch/Makefile
Sensitivity                   : public

[3/3/94 public]
Test build errors:
in the install_tests.log
  make: don't know how to make sec_rgy_attr-tc (continuing)
  make: don't know how to make sec_rgy_attr_sch-tc (continuing)
in the tests.log
  make: don't know how to make ts-common.o (continuing)
Fixes in Makefiles necessary.  From ERA submission.

[3/3/94 public]
Changed SOURCEBASE to MAKETOP so that builds would work in non populated
sandboxes.  Tested and submitted (entered the wrong defect number) entered
10036 instead of this one.

[5/14/94 public]
Closed.



CR Number                     : 10056
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_gd, app_ref, admin_gd, admin_ref
Short Description             : Add ERA changes to documents
Reported Date                 : 3/2/94
Found in Baseline             : 1.1
Found Date                    : 3/2/94
Severity                      : E
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1doc
Affected File(s)              : see below
Sensitivity                   : public

[3/2/94 public]
This is a blanket CR to add ERA changes to the appropriate 
documents.

[5/10/94 public]
Beta versions of following files submittted:

app_gd/security/4.5_era_gpsml
book.core/Description
app_ref/man3sec/intro.3sec
app_ref/man3sec/sec_attr_trig_query.3sec
app_ref/man3sec/sec_attr_trig_update.3sec
app_ref/man3sec/sec_attr_trig_cursor_init.3sec
app_ref/man3sec/sec_attr_trig_cursor_release.3sec
app_ref/man3sec/sec_rgy_attr_delete.3sec
app_ref/man3sec/sec_rgy_attr_cursor_init.3sec
app_ref/man3sec/sec_rgy_attr_cursor_allocate.3sec
app_ref/man3sec/sec_rgy_attr_cursor_release.3sec
app_ref/man3sec/sec_rgy_attr_lookup_by_id.3sec
app_ref/man3sec/sec_rgy_attr_lookup_by_name.3sec
app_ref/man3sec/sec_rgy_attr_sch_create_entry.3sec
app_ref/man3sec/sec_rgy_attr_sch_cursor_init.3sec
app_ref/man3sec/sec_rgy_attr_sch_cursor_release.3sec
app_ref/man3sec/sec_rgy_attr_sch_delete_entry.3sec
app_ref/man3sec/sec_rgy_attr_sch_lookup_by_id.3sec
app_ref/man3sec/sec_rgy_attr_sch_lookup_by_name.3sec
app_ref/man3sec/sec_rgy_attr_sch_scan.3sec
app_ref/man3sec/sec_rgy_attr_sch_update_entry.3sec
app_ref/man3sec/sec_rgy_attr_set_lookup_by_id.3sec
app_ref/man3sec/sec_rgy_attr_test_and_update.3sec
app_ref/man3sec/sec_rgy_attr_update.3sec

[10/19/94 public]
Verified. Verified by ahop, hanfei, fairbrother

[10/25/94 public]
Deferring this CR until 1.2.

Note that the following two files do not exist for 1.1:

app_ref/man3sec/sec_attr_trig_cursor_init.3sec
app_ref/man3sec/sec_attr_trig_cursor_release.3sec

These appear to be simply errors in the list of new routine
ref pages created in response to this CR, but this should
be verified before this CR is closed.

[10/26/94 publilc]
The sec_attr_trig_cursor_init.3sec and sec_attr_trig_cursor_release.3sec
calls are not in the final code and should have beeen 
deleted from the list above.  I've closed this CR.



CR Number                     : 10055
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 9626
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : add hierarchical cell information
Reported Date                 : 3/2/94
Found in Baseline             : 1.1
Found Date                    : 3/2/94
Severity                      : E
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_gd/security/security/5_multi.gpsml
Sensitivity                   : public

[3/2/94 public]
add new functionality for hierarchical cells

[3/2/94 public]
fixed typo in CR. (I really do know how to spell hierarchical.)

[5/24/93 public]

Following file updated for beta:
admin_gd/security/security/5_multicell.gpsml

Following new files added:

admin_gd/security/security/figures/5_multi_10.ps
                                   5_multi_20.ps
                                   5_multi_30.ps
                                   5_multi_40.ps
                                   5_multi_50.ps
                                   5_multi_60.ps
                                   5_multi_70.ps

[10/18/94 public]
Fixed and verified.  Verified by rps.

[10/25/94 public]
Deferring until 1.2.
The changes made to the figures listed in this CR appear to
have caused some formatting problems in this chapter.
Figures seem to be floating out of their allotted regions.
Formatted output should be checked and necessary figure box
parameter adjustments made.

[10/25/94 public]
Actually it is a little messier than that.  When viewed by Ghostview, or
printed in our environment using the lpr -K2 (print on both sides of the
paper) option, there are the problems described above.  If we print the
chapter using only one side of the paper, it prints fine.  We looked at
this problem and were not able to fix it easily.

[10/26/94 public]
These files print with no problems at HP.  I used the standard 
placement procedure (from rom) that worked for all previous Security 
files.  The only difference is that previous Security ps files were 
derived from Interleaf files;  These files were derived from Frame 
files.

[10/26/94 public]
I am closing this and moving the problems with printing the figures to CR
9626, which generlically covers figure printing problems.



CR Number                     : 10046
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_acl_posix_semantics_t not described in intro.3sec
Reported Date                 : 3/1/94
Found in Baseline             : 1.1
Found Date                    : 3/1/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_intro.3sec
Sensitivity                   : public

[3/1/94 public]
The type sec_acl_posix_semantics_t is mentioned in the following places in
the app_ref section 3sec:

  dce_acl_inq_permset_for_pac.3sec:27:
  rdacl_get_mgr_types_semantics.3sec:40
  rdacl_get_mgr_types_semantics.3sec:86
  sec_acl_get_mgr_types_semantics.3sec:113:
  sec_acl_get_mgr_types_semantics.3sec:157:

But the type is not described in intro.3sec.

[3/24/94 public]

Assigned this CR to Pam Millett (HP security writer).

[8/31/94 public]
Fixed and verified.  Verified by burati.

[09/15/94 public]
Closed bug.



CR Number                     : 10042
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kdestroy
Short Description             : kdestroy -c reserved to privileged user.
Reported Date                 : 3/1/94
Found in Baseline             : 1.0.3
Found Date                    : 3/1/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : kdestroy.c
Sensitivity                   : public

[3/1/94 public]

kdestroy -c currently is reserved to the privileged user.
This is incorrect . Any user should be able to use kdestroy -c
to purge the credentials owned by the user and only by that user.

[3/8/94 public]

Fixed.

[5/13/94 public]
Closed.



CR Number                     : 10041
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : sec_login_import_context man page is misleading
Reported Date                 : 3/1/94
Found in Baseline             : 1.0.3
Found Date                    : 3/1/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_login_import_context.3sec
Sensitivity                   : public

[3/1/94 public]

The man page for sec_login_import_context() reads as follows:

    .... <text deleted> ...
    This routine is generally reserved to the privileged user.

The term "privileged user" is misleading because it leads one 
(at least it led me) that sec_login_import_context() can only
be done by root (on UNIX systems) which is not the case.
(I tend to assosciate a privileged user with root)

I believe the following wording would be clearer:

    .... <text deleted> ....

    To import a login context, a user must have appropriate privileges.
    Hence a non privileged user can only import login context created
    the user. A privileged user, on the other hand, can import login context
    created by any user.

[3/24/94 public]

Assigned this CR to Pam Millett (HP security writer).

[10/19/94 public]
Fixed and verified.  Verified by sekhar.

[10/25/94 public]
Closed bug.



CR Number                     : 10036
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : ERA
Short Description             : initial ERA submission
Reported Date                 : 2/28/94
Found in Baseline             : 1.1
Found Date                    : 2/28/94
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : see list in comments
Sensitivity                   : public

[2/28/94 public]
Submission: Initial ERA Functional Drop

Purpose of Submission: provide initial sec_rgy_attr
and sec_rgy_attr_sch interface implementation.  Provide
rgy_edit attribute update command.

Testing Done:   Built and tested against dce1_1_b3.
                HPUX: built and passed all functional tests
                      (except sec_salvage_db tests which are
                       expected to fail)
                RIOS: currently built, tests will be run.
Binaries/Libraries Affected: libsec, libdce, secd, sec_create_db,
                rgy_edit, dcesec.cat, dcesad.cat

To Test Submission: rebuild libdce, rgy_edit, and
everything under security/server.  Test by configuring
a cell and running all functional tests to ensure
no regression.

Special Notes: since this submission changes the format
of some registry database files, the sec_salvage_db tool
and functional tests will not work correctly.  A future
submission of sec_salvage_db modifications will fix this.

89 Files to be submitted (currently on hanfei_dce1_1 branch):
./security/client/admin/rgy_edit/Makefile
./security/client/admin/rgy_edit/eif.c
./security/client/admin/rgy_edit/eif.h
./security/client/admin/rgy_edit/eif_attr_schema.c
./security/client/admin/rgy_edit/eif_attr_schema.h
./security/client/admin/rgy_edit/eif_def.c
./security/client/admin/rgy_edit/eif_def.h
./security/client/admin/rgy_edit/eif_pgo.c
./security/client/admin/rgy_edit/eif_pgo.h
./security/client/admin/rgy_edit/ek_db.c
./security/client/admin/rgy_edit/ek_db.h
./security/client/admin/rgy_edit/ek_types.h
./security/client/admin/rgy_edit/ek_util.c
./security/client/admin/rgy_edit/ek_util.h
./security/client/admin/rgy_edit/tty.c
./security/client/admin/rgy_edit/tty_attr_schema.c
./security/client/admin/rgy_edit/tty_attr_schema.h
./security/client/admin/rgy_edit/tty_conf.c
./security/client/admin/rgy_edit/tty_conf.h
./security/client/admin/rgy_edit/tty_pgo.c
./security/client/rca/rs_attr.acf
./security/client/rca/rs_attr_schema.acf
./security/client/rca/rs_attr_srch.acf
./security/client/rca/sec_rgy_attr.c
./security/client/rca/sec_rgy_attr_sch.c
./security/client/rca/sec_rgy_attr_srch.c
./security/h/Makefile
./security/h/rgy_obj_names.h
./security/h/rgymacro.h
./security/h/rs_attr_pvt.h
./security/h/rs_attr_util.h
./security/h/rsdb_acl.h
./security/h/rsdb_attr.h
./security/h/rsdb_attr_pvt.h
./security/h/rsdb_attr_schema.h
./security/h/rsdb_policy.h
./security/h/rsdb_pvt.h
./security/h/rsdb_util.h
./security/h/sad_err.et
./security/h/sec_attr_tools.h
./security/idl/Makefile
./security/idl/rs_attr.idl
./security/idl/rs_attr_base.idl
./security/idl/rs_attr_schema.idl
./security/idl/rs_attr_srch.idl
./security/idl/sec.msg
./security/idl/sec_attr_base.idl
./security/idl/sec_attr_trig.idl
./security/idl/sec_attr_util.idl
./security/idl/sec_rgy_attr.idl
./security/idl/sec_rgy_attr_sch.idl
./security/idl/sec_rgy_attr_srch.idl
./security/server/rs/Makefile
./security/server/rs/rs.c
./security/server/rs/rs_attr.c
./security/server/rs/rs_attr_schema.c
./security/server/rs/rs_attr_srch.c
./security/server/rs/rs_attr_util.c
./security/server/rs/rs_log_attr_schema.c
./security/server/rs/rs_reserved.c
./security/server/rsdb/Makefile
./security/server/rsdb/rsdb.c
./security/server/rsdb/rsdb_acl.c
./security/server/rsdb/rsdb_attr.c
./security/server/rsdb/rsdb_attr_schema.c
./security/server/rsdb/rsdb_create.c
./security/server/rsdb/rsdb_daclmgr.c
./security/server/rsdb/rsdb_dir.c
./security/server/rsdb/rsdb_pgo.c
./security/server/rsdb/rsdb_policy.c
./security/server/rsdb/rsdb_util.c
./security/utils/Makefile
./security/utils/sec_attr_util.c
./test/security/Makefile
./test/security/tet-tests/Makefile
./test/security/tet-tests/common/Makefile
./test/security/tet-tests/common/ts-common.c
./test/security/tet-tests/tet_code
./test/security/tet-tests/tet_scen
./test/security/tet-tests/tetexec.cfg
./test/security/tet-tests/tools/Makefile
./test/security/tet-tests/tools/update_tet_scen.sh
./test/security/tet-tests/ts/Makefile
./test/security/tet-tests/ts/client/Makefile
./test/security/tet-tests/ts/client/rca/Makefile
./test/security/tet-tests/ts/client/rca/sec_rgy_attr/Makefile
./test/security/tet-tests/ts/client/rca/sec_rgy_attr/sec_rgy_attr.c
./test/security/tet-tests/ts/client/rca/sec_rgy_attr_sch/Makefile
./test/security/tet-tests/ts/client/rca/sec_rgy_attr_sch/sec_rgy_attr_sch.c

[public 3/7/94]
Submission was made on March 2.

[5/13/94 public]
Closed.



CR Number                     : 10019
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : GSSAPI baselevel 1 drop
Reported Date                 : 2/25/94
Found in Baseline             : 1.1
Found Date                    : 2/25/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : several
Sensitivity                   : public

[2/25/94 public]
Submit GSSAPI baselevel 1 to 1.1 tree

[3/9/94 public]
Change state to fix after submission

[5/13/94 public]
Closed.



CR Number                     : 10007
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : roverride infc. / sec_clientd
Short Description             : uninit'd result-determining autovarin roverride/sec_clientd
Reported Date                 : 2/23/94
Found in Baseline             : 1.0.2
Found Date                    : 2/23/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/server/sv_rover.c
Sensitivity                   : public

[2/23/94 public]
  In routine roverride_is_passwd_overridden(), the auto-variable 'found'
is not always set (is uninitialized), and if the platform doesn't clear
it, can lead to erratic return values. A lower priority defect, as for
in 1.0.2, any entry in the list must have its passwd overridden, and
this minimizes the odds of 'found' remaining unset.

[07/14/94 public]
Fixed by the roverride.c rewrite as part of secval.



CR Number                     : 9993
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : Added man pages
Reported Date                 : 2/22/94
Found in Baseline             : 1.1
Found Date                    : 2/22/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : see text
Sensitivity                   : public

[2/22/94 public]

Neilson (who seems to be an invalid, according to snoopy) installing
39 new man pages for the DCE Application Developers' Guide.

[02/22/94 public]
Peter now has an account on snoopy.

[2/28/94 public]

Assigned this CR to Peter Neilson (OSF ACL manager library and
backing store library writer).

[10/13/94 public]
These man pages are complete.  Verified by me.

The backing store man pages are in these files, in dce_books/app_ref/man3dce:
dce_db_close.3dce              dce_db_iter_next.3dce
dce_db_delete.3dce             dce_db_iter_next_by_name.3dce
dce_db_delete_by_name.3dce     dce_db_iter_next_by_uuid.3dce
dce_db_delete_by_uuid.3dce     dce_db_iter_start.3dce
dce_db_fetch.3dce              dce_db_lock.3dce
dce_db_fetch_by_name.3dce      dce_db_open.3dce
dce_db_fetch_by_uuid.3dce      dce_db_std_header_init.3dce
dce_db_free.3dce               dce_db_store.3dce
dce_db_header_fetch.3dce       dce_db_store_by_name.3dce
dce_db_inq_count.3dce          dce_db_store_by_uuid.3dce
dce_db_intro.3dce              dce_db_unlock.3dce
dce_db_iter_done.3dce

The ACL library man pages are in these files, in dce_books/app_ref/man3sec:
dce_acl_copy_acl.3sec                 dce_acl_obj_add_id_entry.3sec
dce_acl_inq_acl_from_header.3sec      dce_acl_obj_add_obj_entry.3sec
dce_acl_inq_client_creds.3sec         dce_acl_obj_add_unauth_entry.3sec
dce_acl_inq_client_permset.3sec       dce_acl_obj_add_user_entry.3sec
dce_acl_inq_permset_for_creds.3sec    dce_acl_obj_free_entries.3sec
dce_acl_inq_prin_and_group.3sec       dce_acl_obj_init.3sec
dce_acl_is_client_authorized.3sec     dce_acl_register_object_type.3sec
dce_acl_obj_add_any_other_entry.3sec  dce_acl_resolve_by_name.3sec
dce_acl_obj_add_foreign_entry.3sec    dce_acl_resolve_by_uuid.3sec
dce_acl_obj_add_group_entry.3sec

[10/25/94 public]
Closed bug.



CR Number                     : 9992
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : passwd_import man page: -o is wrong
Reported Date                 : 2/22/94
Found in Baseline             : 1.0.2
Found Date                    : 2/22/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : command_ref/man8sec/passwd_import.8sec, 
admin_ref/security/security/11_import.gpmsl
Sensitivity                   : public

[2/22/94 public]
  The man page for 'passwd_import' says of the -o switch that is will
cause the named org to be created if it does not exist. The
implementation does not do this, and there is even a functional test
pass that verifies that the missing org is flagged to be missing (an
expected failure case).

[2/28/94 public]

This problem was reported against the 1.0.2 docs, so I
checked the 1.0.3 source to make sure the problem reported
here still exists in 1.0.3. It does. Assigned this CR to
Pam Millette (HP security writer).

[10/4/94 public]
Fixed and verified. Verified by me.

[10/20/94 public]
Closed bug.



CR Number                     : 9939
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : crash in unpickling PAC
Reported Date                 : 2/10/94
Found in Baseline             : 1.0.3
Found Date                    : 2/10/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : /src/security/utils/sec_pkl.c
Sensitivity                   : public

[2/10/94 public]

The function sec_id_pac_t_unpickle does not correctly unpickle
the foreign_groups pointer.

File: sec_pkl.c
Line: 832

Change 

	data->groups = (*allocator)(1);

to 

	data->foreign_groups = (*allocator)(1);

[2/11/94 public]

The origination of this problem is in ptr_unpickle.  When unpickling
the pointer, the low 4 bytes of the pointer are initialized with the
data from the pickled data stream.  This is ok for pointers that are
4 bytes.  The problem arises when pointers are larger than 4 bytes,
lets say 8 bytes.  The upper four bytes of the pointer are left
uninitialized.

When the check is made in sec_id_pac_t_unpickle to see if it needs
to allocate space for the pointer (if (data->foreign_groups != NULL)),
it passes because the upper four bytes of the pointer have not been
initialized to 0.

In addition to the original fix mentioned above, I propose that in the
function ptr_unpickle before initializing node_number_p from the
pickled data, the following memset be inserted to initialize node_number_p
to 0:

	memset(node_number_p, 0, sizeof(idl_ulong_int *));

[02/11/94 public]
The memset idea is very wrong for two reasons:
    -	A NULL pointer is not necessarily all-bits-zero to the function
	call isn't guaranteed to do the same thing as *p = 0;
    -	The overhead of a function call is way much more than the simple
	assignment shown above

I am also not comfortable with the 8byte/4byte argument, but don't have
anything concrete to say about it right now.

[7/13/94 public]

I think node_number_p = NULL is more correct than node_number_p = 0 for the
all-bits-zero reason stated by Rich.

But, maybe neither is neccesary in this statement since the pointer 
assignment made by the compiler should be aware of the pointer size?

Third, since the first remark about changing line 832 has not taken place,
I assume this problem still exists.  Any updates?

[7/13/94 public]

I have nothing profound to say, other than that the problem of
unmarshalling NDR pointers into pointers of a particular
local archictecture is not peculiar to the hand-rolled 
PAC pickling code.  I imagine a poke through the idl library
sources might yield a (hopefully correct) solution.

[7/13/94 public]

The problem reported on line 832 still exists and should be fixed.

I did need to set the pointer to NULL before unpickling because the
pickling code only assigns four bytes of the pointer.  On a machine
with 8 byte pointers, this would leave the upper four bytes
uninitialized.

[8/17/94 public]

Aside from the obvious problem at line 832 of sec_pkl.c I looked at
the 4/8 byte issue.  It seems to me that the problem is due to the
fact that ptr_unpickle pulls out a node number to be stuffed into
the pointer, in its first four bytes, by rpc_convert_ulong_int.
Since there is no ptr node management these node numbers are basically
used only for testing against 0 to identify a NULL pointer. Thus
initializing data with a line like

	*(char**)data = NULL;

at the very beginning of ptr_unpickle should avoid that NULL pointer
get unpickled as non NULL.

The opposite problem is still possible (always in a 64 bit machine)
as one can see in anon_str_ptr_unpickle.  There, the lines

----------------------------------
    unsigned32 node_number;

    node_number = (unsigned32)*data;
    if (node_number == 0)
    {
        *data = NULL;  /* gratuitous hyper-correctness in case NULL != 0 */
        return;
    }
----------------------------------

show a case where even if *data were non-NULL, could be
upickled into a NULL pointer because the  4 least significant
bytes are 0.  Moreover as we have seen ptr_unpickle does put
the node number in the first 4 bytes, which are the most
significant on MSB architectures (right?).

A fix for this would be to eliminate node_number altogether
and check
	if( *data == NULL)   return; 
This test would work if ptr_unpickle is fixed as above.  Otherwise
	if ((*(unsigned32*)data) == NULL) return;
would do even without fixing ptr_pickle.


Since I do not have a 64 bit machine and cannot test these chages
I will not put them in.  On the other hand does anyone know how to
hit line 832.  It does not seem very easy to me ( non NULL
foreign_groups with num_foreign_groups == 0  in the pac ).



CR Number                     : 9934
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : IDL files
Short Description             : Need fault_status comm_status
Reported Date                 : 2/10/94
Found in Baseline             : 1.1
Found Date                    : 2/10/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[2/10/94 public]
All IDL files that are part of libdce should be compiled with ACF files
that have the [fault_status,comm_status] attributes.  Without this, a
failing RPC could cause client code to core dump when there is a perfectly
good error_status_t parameter available.  When adding the ACF files, it is
important to make sure that no API changes.  As most routines probably
already have an "error_status_t *st" parameter this will probably not be
an issue; routines that don't will have to be handled on a case-by-case,
probably by adding a new routine that DOES have the status param and
changing our existing code to call that routine.

[9/1/94 public]
Dropping priority by 1 to indicate that we are not fixing this for the
mainline.  If fixed in time it will show up in unintegrated.

[12/13/94 public]
Its's not clear from this defect which acf files are actually missing the 
[comm_status, fault_status] attributes.

Some acf files are server side acf files, such as security/server/rs/rs_misc.acf
and do not need the [comm_status, fault_status] attributes. Those attributes are
defined in the client side acf file in security/client/rca/rca_misc.acf.

Marking this as not a bug. The bug should be reopened if more information is provided
about which acf files are missing or incomplete.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 9927
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : sec_salvage_db -reconstruct
Short Description             : sec_salvage_db -reconstruct reboots my machine
Reported Date                 : 2/10/94
Found in Baseline             : 1.1
Found Date                    : 2/10/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[02/10/94 public]

The sec_salvage_db -reconstruct command causes my H-P machine to reboot.
I am trying to reconstruct my 10,019 account registry from ascii files
generated by a sec_salvage_db -print command.  The sec_salvage_db process
grew to 209 meg before the machine crashed.  I have increased my data
size to 268 meg and my swap space to 750 meg.  I have a kernel core
dump saved from the machine crash if it is of any use.

Command used:

sec_salvage_db -reconstruct -dbpath /dcetest/dcelocal/status/security/recon_security -prtpath /dcetest/dcelocal/status/security -verbose

Some statistics before the crash:

swapinfo -mta
-------------
          Mb      Mb      Mb   PCT  START/      Mb
TYPE   AVAIL    USED    FREE  USED   LIMIT RESERVE  PRI  NAME
dev       73      73       0  100%  341280       -    0  /dev/dsk/c201d6s0
dev       74      74       0  100%  340740       -    1  /dev/dsk/c201d5s0
fs       526      64     462   12%    none       0    1  /u2/SWAP
hold       0      31     -31
tot      673     242     431   36%       -       0    -

ps -elf | egrep '(sec|WCHAN)'
-----------------------------

  F S     UID   PID  PPID  C PRI NI     ADDR   SZ    WCHAN    STIME TTY      TIME COMD
  1 S    root  1500     1  0 154 20  2107300  793   1df100  Feb  8  ?        2:53 /opt/dcelocal/bin/sec_clientd
  1 S    root  1895     1  0 154 10  2107900 1182   1df100 16:57:59 ?        1:05 secd
  1 S    root  2668  2666 12 128 20  2107d00 52260   30b654 11:34:09 ttys1   22:11 sec_salvage_db -reconstruct -dbpath

[02/22/94 public]

I increased the datasize to 268mb and still got my HP-UX machine to crash
after trying to -print and -reconstruct a registry with a little over 11,000
accounts.  At the time of the reboot the size of secd was 17,936,000mb and
sec_salvage_db was 233,980,000mb.  The sec_salvage_db process had grown to
be 13 times larger than secd.

Here are some stats, sometimes I forgot to do a stop and start of secd before
executing the sec_salvage_db commands, that's what caused the size of secd to
decrease from 6k to 7k and from 8k to 9k accounts:

# Acc	Process		Block Size
----------------------------------------
4k	secd             2829
4k	sec_salvage_db  21728
----------------------------------------
5k	secd             3569
5k	sec_salvage_db  26987
----------------------------------------
6k	secd             4302
6k	sec_salvage_db  26987
----------------------------------------
7k	secd             3339
7k	sec_salvage_db  37485
----------------------------------------
8k	secd             4061
8k	sec_salvage_db  42737
----------------------------------------
9k	secd             3979
9k	sec_salvage_db  47987
----------------------------------------
10k	secd             4179
10k	sec_salvage_db  53241
----------------------------------------
11k	secd             4484
11k	sec_salvage_db  58495
----------------------------------------

I also changed the priority from 0 to 1, this doesn't need to be fixed ASAP
but should be fixed before 1.1 is released.

[8/1/94 public]
Further work on the salvager has been deferred to 1.2.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 9907
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit NUM_TYPES should be 21 not 12
Reported Date                 : 2/8/94
Found in Baseline             : 1.1
Found Date                    : 2/8/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/idl/aclbase.idl,security/client/admin/acl_edit/deif.c
Sensitivity                   : public

[2/8/94 public]

In module deif.c, routine deif_sort_entries() uses NUM_TYPES to sort all
ACL entry types for display. With the new delegation types added, 
NUM_TYPES should be 21 and not 12.

Optional suggestion:
In aclbase.h header file, add "sec_acl_e_type_max_nbr" as the last value 
to the enumeration sec_acl_entry_type_t. It seems that NUM_TYPES has
burned you in the past.

[7/14/94 public]
Oops, forgot that this had been fixed locally and was picked up with mdf's
drop at the beginning of June.  Verify by visual code inspection (Julie will
know how).  Marked 'fix'.

[7/15/94 public]

verified change by inspection.



CR Number                     : 9895
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : errors in man pages
Reported Date                 : 2/7/94
Found in Baseline             : 1.0.3
Found Date                    : 2/7/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_rgy_unix_getgram.3sec  
                                                             sec_acl_calc_mask.3sec
Sensitivity                   : public

[2/7/94 public]

There are three errors in four man pages

 1. in sec_rgy_unix_getgrnam.3

	the line

		sec_rgy_group_t   group_entry

	should be replaced with

		sec_rgy_unix_group_t   group_entry


 2. in sec_acl_calc_mask.3

	the line

		sec_acl_list_t         sec_acl_list

	should be replaced with

		sec_acl_list_t         *sec_acl_list


 3. in sec_login_import_context.3 and sec_login_export_context.3

	the line

		byte                   buf

	should be replaced with

		ndr_byte               buf

[2/28/94 public]

Assigned this CR to Pam Millett (HP security writer).

[10/19/94 public]
Fixed and verified.  Verified by burati.  Note 
that in the sec_login calls byte was changed to 
idl_byte by CR7532.

[10/20/94 public]
Closed bug.



CR Number                     : 9848
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit validate extended info needs check for good status
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/client/admin/acl_edit/deif.c
Sensitivity                   : public

[1/28/94 public]
   In module src/security/client/admin/acl_edit/deif.c routine 
   deif_get_extended_key(), we have the following:

   /* If above was successful, parse the format label */
   if (strlen(str2) < 9)          /* Min possible is 9 chars if n = 0 */
         SET_STATUS(&st, deif_err_invalid_entry);
    else {
        ....
    Need a "if GOOD_STATUS(&st)" statement before making this check.

[1/28/94 public]
Since it was an extremely obvious and simple fix, and deif.c was changing
anyway, I stuck it in with the DLG drop that was submitted today.  Verification
is visual that it now checks the status before messing with str2 (to keep
from dereferencing a NULL ptr).  Marked 'fix'.

[5/13/94 public]
Closed.



CR Number                     : 9841
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit foreign_group text is incorrect
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/client/admin/acl_edit/deif.c
Sensitivity                   : public

[1/28/94 public]

In module src/security/client/admin/acl_edit/deif.c routine 
deif_print_sec_acl_entry(), the following text error exists.
For the "foreign_group" ACL entry type, if the sec_id_gen_group() and 
the uuid_to_string() calls fail, the "foreign_group" key will display
the following key name:
<ILLEGAL CELL UUID>/<ILLEGAL PRINCIPAL UUID>

It should display as:
<ILLEGAL CELL UUID>/<ILLEGAL GROUP UUID>

[1/28/94 public]
Since it was such a simple fix (hardcoded ascii string swap) I stuck it in
with the DLG drop I did today since deif.c was changing anyway.  Marked 'fix'.

[5/13/94 public]
Closed.



CR Number                     : 9835
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : incorrect descrip of 'A' permission
Reported Date                 : 1/27/94
Found in Baseline             : 1.0.3
Found Date                    : 1/27/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : 13_access.gpsml
Sensitivity                   : public

[1/27/94 public]

section 29.2.14 Permissionsto Execute sec_admin Subcommands

states that you need 'A" to execute ANY sec_admin subcommands.
This is not true, "A" is required only for commands which modify the
status of the replica (eg. state, delreplica, etc.)

Table 29-2 (pg 29-14) says that the 'A' permission is valid on the
Policy object. There is a good chance that this is no longer true,
and even if it is still allowed, it probably is no longer meaningful.

On the next page, there is acl_edit output which indicates that in the initial
state of a registry database 'A' will be assigned to the Plicy object. The
replist object is not shown. In fact the 'A' will not occur on the policy
objct, but will occur on the replist object.

[2/1/94 public]

Assigned this CR to Pam Millett (HP security writer).

[8/30/94 public]
Fixed and verified.  Verified by ahop.

[09/15/94 public]
Closed bug.



CR Number                     : 9829
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : 
sec_salvage_db won't print member names in org.prt correctly if there are
more than 80 members in one org.
Reported Date                 : 1/27/94
Found in Baseline             : 1.1
Found Date                    : 1/27/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec_svg_prt.c
Sensitivity                   : public

[1/27/94 public]
Printing org with more than 80 members won't work correctly.
List_id in print_members() needs to be reset for next looping.

        current_count = current_count + member_list.count;
        list_id = member_list.next;    /* <--- add */


loop.

[5/13/94 public]
Closed.



CR Number                     : 9827
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : lots
Short Description             : Delegation Baselevels 0 and 1 drop
Reported Date                 : 1/27/94
Found in Baseline             : 1.1
Found Date                    : 1/27/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : lots
Sensitivity                   : public

[1/27/94 public]
Submit delegation baselevels 0 and 1 to the DCE1.1 tree.

[5/13/94 public]
Closed.



CR Number                     : 9800
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 8172, 8681
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec salvager
Short Description             : why linked lists?
Reported Date                 : 1/23/94
Found in Baseline             : 1.0.2
Found Date                    : 1/23/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec_svg_prt.c and sec_svg_db.c
Sensitivity                   : public

[1/23/94 public]
  It would seem that the use of linear, linked, sorted lists in the
salvager fails to take account of the balanced trees already developed
for passwd_import and the RS DB. I noticed recently that the salvager
consumes large amounts of CPU and scary amounts of memory while
printing just a moderate size registry (5k principals). I'm seeing over
119Mb of VM in use, and over 80% of the CPU (Sparc II). Even with that
much CPU, it does take a while to run.
  Use of the 2-3 trees would remove most of the insertion overhead. 
  Once the CPU load was lessened, that gained CPU time could be spent
in avoiding copying data into the linear list -- the formatting and
scoping could be done on the fly.
  Finally, it is even necessary for the -print option to alphabetically
sort the PGO lists?
  I am in agreement that a salvager need not be the most optimized tool
in the world! But wouldn't a lot of this 'go away' if the existing,
fast, 2-3 trees were used?
  I worry that -- in a university or corporate environment having (say)
10,000 principals, that the salvager might unexpectedly exhaust the swap
space on the registry server, causing great frustration -- or perhaps
not finish in time for a fix&reconstruction to take place before the
doors open the next business day.

[1/24/94 public]
Sorted pgo's was implemented so the output print files can be easily compared.
I agree with you this feature may not be used a lot and is consuming lots of
memory/swap and CPU.  I will take the sorting out as the default behavior and
-sort command option for -print will enable it.

[2/7/94 public]
The -sort option is now implemented for sec_salvage_db -print.  
Default behavior for -print is unsort.  This unsorting feature does
not seem to be a problem for sec_salvage_db tests, output
from -print are identical, so I leave the test unchanged.  
Documentation needs updates for this new option and changes of 
default behavior.
Statistical data for running big rgy database is in OT 8681.  
Sec_salvage_db, by default, would consume a certain amount of memory
for keeping all data constructed in memory.  This fact is beyond salvager's
scope.  However, current tunning should help it behave better.
For sec_salvage_db to print 5000 principals/accts using both old and
new sec_salvage_db, it does not take too long (see data below), so I
don't quite get the picture for your problem.  Can the problem be caused
by other system level, e.g. configuration, factors ?
old salvage (with sort)   real 3m8.89s    user 2m31.88s   sys 0m10.83s
new salvage (with sort)   real 2m53.26s   user 2m50.01s   sys 0m2.93s
new salvage (w/o sort)    real 1m5.19s    user 0m57.53s   sys 0m2.41s

[5/13/94 public]
Closed.

[5/13/94 public]
  I'm leaving this closed, but I do still wonder -- especially since
sec_salvage_db is built in the security/server subtree -- why
sec_salvage_db doesn't use the routines in balanced_trees.c to maintain
the lists it compiles. The insertion and lookup performance would
improve, the existing tree code is well isolated, well tested, and
easily trustable, and the overall line-count of the salvager might drop
from not implementing its own sorter. The trees also perform fewer
malloc() calls -- batching them up -- and may realize lower
fragmentation from asking for those larger blocks. Finally, any
improvements in the trees in furute releases would benefit the salvager
as well as the server (and passwd_import).



CR Number                     : 9785
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_key_mgmt_initialize_cursor() manpage principal discussion wrong
Reported Date                 : 1/20/94
Found in Baseline             : 1.1
Found Date                    : 1/20/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_key_mgmt_initialize_cursor.3sec
Sensitivity                   : public

[1/20/94 public]

The discussion of the param "principal_name" in the
sec_key_mgmt_initialize_cursor() manapage is wrong.  It says now:

	A pointer to a character string indicating the name
	of the principal whose key is to be changed.

sec_key_mgmt_initialize_cursor() is also used if you want to reall all
keys, without changing them.  There should also be a discussion for
specifying NULL for this param, which is used when accessing all keys,
not just for a single prin.

[2/1/94 public]

Assigned this CR to Pam Millett (HP security writer).

[8/29/94 public]
Fixed and verified.  Verified by burati.

[09/15/94 public]
Closed bug.



CR Number                     : 9782
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : clarify sec_rgy_bind_open behavior
Reported Date                 : 1/19/94
Found in Baseline             : 1.1
Found Date                    : 1/19/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_rgy_site_open.3sec
Sensitivity                   : public

[1/19/94 public]
I'm entering this to get more info, this might very well turn out to be a
doc bug, stay a code bug, or be cancelled.

We've found that sec_rgy_site_open() accepts various forms of input, either
a string binding, a cell name, or the name of a server entry to import
from.  All of the above are documented in the reference page.

We've also found that if you give a cellname followed by garbage, you bind
to the cell name.  So binding to "/.../real_cell/badname" results in a
binding to a secd in /.../real_cell, even though there is no entry called
badname. 

I've been trying to track down what would happen if you appended a garbage
name to a valid server entry name.  Would it bind to the server entry or to
the cell name?  I don't know.

Some here have suggested that this behavior is probably a bug in
sec_rgy_site_open and if you give it extra garbage an error should be
generated.  I've found the following in
security/client/rca/internal_binding.c in the routine rca_site_bind_nsi():

    /* attempt to import a sec_rgy binding handle from this name */
    if (STATUS_EQUAL(status, rpc_s_partial_results)) 
	/* keep going in order to accept principal names; revisit someday */;
    else if (BAD_STATUS(status)) 
    {
	SEC_DBG_GPRINTF(("(rca_site_bind_nsi) inq_resolution failed, status %x\n", *status));
	return false;    
    }

    rpc_ns_binding_import_begin(rpc_c_ns_syntax_dce, 
	context->site_name,
	context->if_spec, (uuid_p_t)NULL,
	&context->import_handle, status);
 
So I get the impression that the behavior is desired from the comment (but
when is someday? :-).  If so then it should be documented.  If not, then
the code should be changed.  What's the story?

[ mob 7/21/94 public ]
This behavior is correct and should be documented.  I have reassigned
this do doc/millette.

[10/19/94 public]
Fixed and verified.  Verified by mob.

[10/20/94 public]
Closed bug.



CR Number                     : 9781
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : users_gdref
Short Description             : : should be . in extended acl
Reported Date                 : 1/19/94
Found in Baseline             : 1.1
Found Date                    : 1/19/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : users_gdref/security/5_auth.gpsml
Sensitivity                   : public

[1/19/94 public]
The users guide says the following:

  .P  
  An \*Lextended\*O ACL entry has the following form:
  .oS
  \*Lextended:\*O\*Vuuid.ndr.ndr.ndr.ndr.number_of_bytes\*L:\*Vdata\*L:\*Vpermissions\*O
  .oE 

after "number_of_bytes" it should be a "." and not a ":".  The line should
be: 

  \*Lextended:\*O\*Vuuid.ndr.ndr.ndr.ndr.number_of_bytes\*L.\*Vdata\*L:\*Vpermissions\*O

[2/1/94 public]

I fixed the typo in the source file and marked this as verified
(I'd rather fix this kind of bug now before I start dismantling
the User's Guide and Ref and all the affected file information
becomes obsolete). When we start doing weekly doc builds, I'll
verify that the fix looks good in the built docs and close the bug.

[09/15/94 public]
Closed bug.  This fix now appears in the following file:

admin_gd/security/security/1.5_acls.gpsml



CR Number                     : 9739
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : strlen of uninit'd ptr
Reported Date                 : 1/13/94
Found in Baseline             : 1.0.2
Found Date                    : 1/13/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec_svg_rec.c
Sensitivity                   : public

[1/13/94 public]
  sec_salvage_db takes a premature strlen() on an uninitialized pointer
during initialization of the reconstruction state. A GDB stack-trace is
attached. Stepping through this to this point shows no attempt to init
the local cell name (which is what strlen() died on; on a Sun I see this
pointer always assume a value of 0x80, probably just old stack data).
  I don't know if construct_init() could call the dce_cf interface to
get the cell name -- I don't know what data it is allowed to presume is
available at reconstruction.
.
.. attachment
.
#0  0xf73423c0 in strlen ()
#1  0x28674 in rsdb_properties_set_realm (
    realm_name=0x80<Address 0x80 out of bounds>, realm_uuid=0xf7fff4f4,
    status=0xf7ffef7c)
    at /afs/transarc.com/project/alpine/dev/rel/09.027/src/security/server/rsdb/rsdb_policy.c:467
#2  0x1c550 in create_rgy (rgy_creator=0xf7fff508, rgy_local_cell=0xf7fff4f4,
    rgy_myname=0x188050 "", default_properties=0xf7fff0b8)
    at /afs/transarc.com/project/alpine/dev/rel/09.027/src/security/server/rsdb/rsdb_create.c:94
#3  0x1c7d8 in rsdb_create_database (rgy_creator=0xf7fff508,
    rgy_local_cell=0xf7fff4f4, rgy_myname=0x188050 "",
    default_properties=0xf7fff0b8)
    at /afs/transarc.com/project/alpine/dev/rel/09.027/src/security/server/rsdb/rsdb_create.c:168
#4  0x102a8 in rsdb_create (rep_name=0x188050 "", rgy_creator=0xf7fff508,
    rgy_local_cell=0xf7fff4f4, default_properties=0xf7fff0b8, st=0xf7fff584)
    at /afs/transarc.com/project/alpine/dev/rel/09.027/src/security/server/rsdb/rsdb.c:262
#5  0x9f60 in construct_init (status=0xf7fff584)
    at /afs/transarc.com/project/alpine/dev/rel/09.027/src/security/server/sec_salvage_db/sec_svg_rec.c:306
#6  0x2a14 in do_reconstruct ()
    at /afs/transarc.com/project/alpine/dev/rel/09.027/src/security/server/sec_salvage_db/sec_svg_db.c:303
#7  0x3998 in main (argc=4, argv=0xf7fff654)
    at /afs/transarc.com/project/alpine/dev/rel/09.027/src/security/server/sec_salvage_db/sec_svg_db.c:645
(gdb) p *rgy_local_cell
$12 = {uuid = {time_low = 0, time_mid = 0, time_hi_and_version = 0,
    clock_seq_hi_and_reserved = 0 '\000', clock_seq_low = 0 '\000',
    node = 0x0 "\000\000\000\000\000"},
  name = 0x80<Address 0x80 out of bounds>}
(gdb) ^Z
Stopped
.
.. End of Attachment
.

[1/17/94 public]
The fix for this problem is to set
	rgy_local_cell.name = NULL; 
in construct_init [sec_svg_rec.c] before rsdb_create(...) is called.
This would make the strlen() checking in rsdb_properties_set_realm 
work ( it actually skip setting the realm name, but this inforamtion
is set later in construct_policies ).

[5/13/94 public]
Closed.



CR Number                     : 9725
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : sec_rgy_acct_user_t definition
Short Description             : passwd component of the
sec_rgy_acct_user_t is incorrect.
Reported Date                 : 1/12/94
Found in Baseline             : 1.0.3
Found Date                    : 1/12/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/intro.3sec
Sensitivity                   : public

[1/12/94 public]

The intro section which describes the data types defintion for the
sec_rgy_acct_user_t currently states that the passwd component field must
be populated with the encrypted account password, which is incorrect. It
should state that the user does not need to supply any information for the
passwd component of the sec_rgy_acct_user_t. This is used as the user_part
in the sec_rgy_acct_add, sec_rgy_acct_replace_all, etc. API's.

[1/18/94 public]

Assigned this CR to Pam Millett (HP security writer).

[3/1/94 public]
Fixed and verified.  Verified by Mike Burati.

[09/19/94 public]
Closed bug.



CR Number                     : 9718
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : sec_login_get_expiration
identity_expiration parameter
Reported Date                 : 1/11/94
Found in Baseline             : 1.0.2
Found Date                    : 1/11/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/sec_login_get_expiration
Sensitivity                   : public

[1/11/94 public]

In the 1.0.2 Admin Ref, the page on sec_login_get_expiration gives
incomplete information on the semantics of the output parameter
identity_expiration.  Technically its type is signed32, so then the
question is okay how do I use it?  As near as I can tell, this 
parameter is copied  from a sec_timeval_sec_t value, which means that
it is interpreted the same way as a Unix time_t value - as the number
of seconds since epoch.  So now I can use it in expressions with Unix
time values, like what I get back from time().

It's obvious, but maybe it should be made more obvious.

[1/18/94 public]

Assigned this CR to Pam Millett (HP security writer).

[6/20/94 public]
Fixed and verified.  Verfied by Mike Burati.

[09/19/94 public]
Closed bug.



CR Number                     : 9714
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : passwd_export
Short Description             : - more than one passwd_export process running can trash passwd/group files.  - possible infinite loop dilemma.
Reported Date                 : 1/11/94
Found in Baseline             : 1.0.3
Found Date                    : 1/11/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : 
.../security/client/admin/passwd_export/passwd_export.c
Sensitivity                   : public

[1/11/94 public]
More than one passwd_export process running at the same time can cause
passwd/group files to be trashed.  This scenario was detected when we
had a passwd_export process running for a long period of time and cron
starts another passwd_export process.
There is a possibility passwd_export can go in an infinite loop, although
we weren't able to confirm what is the exact situation triggered it. (
suspicious scenario : passwd_export running while secd is modifying a 
group with more than 50 members)  Howerver, one conditional check change
seems to fix the problem :
do ...
} while ((GOOD_STATUS(&lstat)) && (mbrs_saved < num_members));
                                             ^^^ ( was != )

[08/09/94 public]
fixed in HP's last code drop.



CR Number                     : 9649
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd, admin_ref
Short Description             : incorrect UUID representation
in rgy adopt descriptions
Reported Date                 : 12/23/93
Found in Baseline             : 1.0.3
Found Date                    : 12/23/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_ref/man8sec/rgy_edit.8sec
admin_gd/security/security/12_trouble.gpsml
Sensitivity                   : public

[12/23/93 public]

A discussion between Nita Sims of HaL Computers and Mark Carter
of U Michigan on dce-talk uncovered an error in the UUID description
in Section 28.4.1 "adopt Syntax". The UUID format is incorrectly 
described and illustrated as an 8-4-4-12 hex digit string.
It is actually an 8-4-4-4-12 string.

This error also appears in the Administration Reference in
the rgy_edit man page, in the description of the "adopt"
subcommand. (There are also several typos on the spelling
of "organization" within this section).

The affected files are:

/admin_ref/man8sec/rgy_edit.8sec
/admin_gd/security/security/12_trouble.gpsml

[3/1/94 public]
Fixed and verified.  Verified by Mike Burati.

[09/19/94 public]
Closed bug.



CR Number                     : 9636
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : acl_edit doesn't have a gui mode
Reported Date                 : 12/20/93
Found in Baseline             : 1.0.2
Found Date                    : 12/20/93
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : acl_edit.8sec
Sensitivity                   : public

[12/20/93 public]
Section 4.3.1 "Invoking the acl_edit Command" in the User's Guide mentions
that if you invoke acl_edit without the -ngui switch it will come up in a
GUI if the terminal is capable of that.  Table 4-2 mentions it too.

It is true that acl_edit takes a -ngui switch, but no GUI mode is
implemented in the code as shipped by OSF.  If you invoke acl_edit on an
xterm without -ngui, you still get the command-line interface.

This section should be changed to say that if your version of acl_edit
supports a GUI and your terminal is capable of using it, invoking acl_edit
without any switches will bring up the GUI mode.  Use the -ngui switch to
bring up the command-line mode.  The examples in this chapter assume that
acl_edit does not have a GUI mode; i.e., no examples specify the use of
-ngui and all assume a command-line interface.

[12/23/93 public]

The current plan for DCE 1.1 is to eliminate the guide
descriptions of acl_edit (and other control programs
whose functions dcecp will perform) and replace them
with descriptions of dcecp functions for manipulating
ACLs. Under this plan, there is no need to revise
the acl_edit documentation in the User's Guide as Howard
has suggested since it's going to be thrown away.

However, it seems to make sense to add a clarifying
sentence about the presence of GUIs and using -ngui
to the reference description of acl_edit (i.e., add the
information to the description of the -gui switch on the
acl_edit man page). 

I'm assigning this CR to Pam Millett (security doc owner).

[8/29/94 public]
Fixed and verified.  Verified by me.

[09/19/94 public]
Closed bug.



CR Number                     : 9635
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 9637
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : users_gd
Short Description             : bad reference to assign command
Reported Date                 : 12/20/93
Found in Baseline             : 1.0.2
Found Date                    : 12/20/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : 1.5_acls.gpsml
Sensitivity                   : public

[12/20/93 public]
In the User's Guide in section 4.2.3 "Acl Entry Types for Dissimila DCE
Releases" there is a reference that says (See section 4.7 for information
on how to use assign).  Section 4.7 does not describe the assign command.
Section 4.5.2 does.

[2/28/94 public]

Because dcecp will be able to perform the function that the
acl_edit assign subcommand performs, Section 4.5.2 in the
User's Guide will be deleted. Instead, the Administration Guide
documentation for dcecp will contain a section that describes
how to use it to do the acl_edit assign function (see CR9637).
Once the dcecp writer (Ward Rosenberry) has decided where
in the Administration Guide the information will appear
about using this dcecp functionality, he should add
the appropriate pointer to this "ACL Entry Types for
Dissimilar DCE Releases" section (which will also be in
the Administration Guide, since the User's Guide and
Reference is being eliminated for DCE 1.1). Assigning
this CR to Ward Rosenberry (OSF dcecp writer).

[10/05/94 public]

This section with the bad reverence moved into the Admin Gd core volume
(Section 28.2.6). It now points to the correct section (28.4) for copying
extended entries. Setting this CR to verified.

[10/20/94 public]
Closed bug.



CR Number                     : 9626
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 10055
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : PostScript figuires cause print problems
Reported Date                 : 12/16/93
Found in Baseline             : 1.0.3
Found Date                    : 12/16/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : admin_gd/dfs/dfs/figures/*.ps, admin_gd/security/security/figures/*.ps, app_gd/security/figures/*.ps
admin_gd/security/security/5_multicell.gpsml
The following figures still have problems:
admin_gd/security/security/figures/5_multi_10.ps
                                   5_multi_20.ps
                                   5_multi_30.ps
                                   5_multi_40.ps
                                   5_multi_50.ps
                                   5_multi_60.ps
                                   5_multi_70.ps
and probably several in admin_gd/security/security/figures/13_access*.ps
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[12/16/93 public]

At least two PostScript files in the Administration Guide--Core Components
are being truncated when printed: 1_over.ps and 13_access.ps.  The reason
is that these files contain included PostScript figures whose prologs
contain too many definitions.  The workaround is to edit the PostScript
file for each included figure.  The files in question are
admin_gd/security/security/figures/*.ps.  For each file to be fixed, add
the following two lines somewhere *after* the first line (which starts with
%!) but *before* the first definition in the prolog:

/tempdict 300 dict def
tempdict begin

I suggest putting these immediately after the %%EndComments line.

Then, add the following line at the end of the file:

end % tempdict

It would be good to check other included PostScript figures for this
problem.

[4/5/94 public]

I have applied this fix to all PostScript files in the doc tree that are
known to have this problem.  These include all files created with Interleaf
or IslandDraw.  The affected files are listed above.

I am changing the status to "fix" rather than "closed" because someone
should try to verify near the end of the release cycle that no other
PostScript files cause this problem.  Unfortunately, the only way to verify
the fix exhaustively is to print out all chapters that contain PostScript
figures.  In lieu of that, perhaps someone could do some sampling.

[08/25/94 public]
Reassigned to Doc Manager Hal Lichtin at his request.
He'll decide who will verify and close this CR closer to
the end of the project.

[10/26/94 public]

I am keeping this open and defering it to 1.2 for two reasons: First, there
are illustrations in chapters 33 and 41 of the Administration Guide -- Core
Services that print correctly in some circumstances but not in others; this
needs to be fixed.  Second, the process of reviewing and fixing printout of
PostScript Figures will be required for EACH and EVERY RELEASE.

I am closing CR 10055 and moving the following information from that CR
to this one:

  The changes made to the figures listed in this CR (the figures in
  admin_gd/security/security/5_multicell.gpsml) appear to have caused some
  formatting problems in this chapter.  Figures seem to be floating out of
  their allotted regions.  Formatted output should be checked and necessary
  figure box parameter adjustments made.

  [hal 10/25/94 public]
  Actually it is a little messier than that.  When viewed by Ghostview, or
  printed in our environment using the lpr -K2 (print on both sides of the
  paper) option, there are the problems described above.  If we print the 
  chapter using only one side of the paper, it prints fine.  We looked at
  this problem and were not able to fix it easily.

  [millette 10/26/94 public]
  These files print with no problems at HP.  I used the standard 
  placement procedure (from rom) that worked for all previous Security 
  files.  The only difference is that previous Security ps files were 
  derived from Interleaf files;  These files were derived from Frame 
  files.

[9/14/95 public]

Changing responsible engineer to myself and reopening this bug. At
the moment we're not in a position to say whether the problem still
exists or not.

[12/14/96 public]

As far as I can see, this problem no longer exists.



CR Number                     : 9608
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : passwd_override should allow empty misc info field
Reported Date                 : 12/13/93
Found in Baseline             : 1.0.3
Found Date                    : 12/13/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec_login_pvt.c
Sensitivity                   : public

[12/13/93 public]

If a passwd_override file entry containing a password has a null "misc info"
or GECOS field, the passwd_override file entry will be considered to be
invalid, even though having a null GECOS field is allowed.

The fix for this exists and will be submitted to 1.1 .

[6 June 94 public]

This fix was submitted as part of Michael Fairbrother's submission of
last week (submitted under OT 10726).



CR Number                     : 9575
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Bad arguments to
sec_rgy_pgo_add causes secd to fail.
Reported Date                 : 12/4/93
Found in Baseline             : 1.0.2
Found Date                    : 12/2/93
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/h/rgymacro.h
Sensitivity                   : public

[12/4/93 public]

Bad arguments to sec_rgy_pgo_add can cause secd to fail. Although this was
found in dce1.0.2 I have verified that it occurs in dce1.0.3b10. Also, this
failure occurs on hp machines as well. However, with the hp machines I have
only checked with dce1.0.2

Here is the message I get when secd fails. 

OSF/1 at386

*****************at386***************************

Registry: Fatal Error - Database store failed
 at line 1306 of file /project/dce/build/dce1.0.2/src/security/server/rsdb/rsdb.c
Registry: Fatal Error - Fatal exception while holding read-intend-write database lock
 at line 321 of file /project/dce/build/dce1.0.2/src/security/server/rs/rs_pgo.c
Registry: Fatal Error - DT exiting with alert exception
 at line 487 of file /project/dce/build/dce1.0.2/src/security/server/rs/rs_main.c - 0x00000000 - successful completion
Registry: Fatal error in main thread; exiting

The hp fails in the same situation. 

Registry: Fatal Error - Database store failed
 at line 1306 of file ../../../../../src/security/server/rsdb/rsdb.c
Registry: Fatal Error - Fatal exception while holding read-intend-write database lock
 at line 321 of file ../../../../../src/security/server/rs/rs_pgo.c
Registry: Fatal Error - DT exiting with alert exception
 at line 487 of file ../../../../../src/security/server/rs/rs_main.c - 0x00000000 - successful completion
Registry: Fatal error in main thread; exiting

This is with: 

sec_rgy_pgo_add(context,sec_rgy_domain_person,name,&pgo_item, &status);

Where context is set to "update", pgo_item is initialize
with all default values. The uid is initialize with
uuid_create_nil, both uid and quota are set to -1 and 
fullname is not used.  The "name" parameter however is 
defined as sec_rgy_name_t but is not initialized in any way.
I tried passing a larger sized value (2048) in the call, but
I was unable to get it to fail. I was also unable to get it
to fail when I was not logged in as cell_admin.

I have just started looking at this, but all the checks for PGO names
will work if a uninitialized name is passed in, is this is this valid?

[5/5/94 public]
Added check to ensure that a LEGAL_PGO_NAME is not of zero length.
The only function that uses the LEGAL_PGO_NAME macro is rs_pgo_add, which
is appropriate, becuase you can't create a pgo node with a null name.



CR Number                     : 9560
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_login_pvt
Short Description             : credentials get rewritten with oid=0
Reported Date                 : 11/30/93
Found in Baseline             : 1.0.2
Found Date                    : 11/30/93
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec_login_pvt.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[11/30/93 public]
  When running in a DFS cell, certain DFS actions result in the
sec_login logic rewriting a user's credential file, unfortunately
leaving it owned by root, and with mode 0600.
  This is reproduced with the following motions:
	user's credentials expire -- dfs warns the user of this
	user immediately performs a successful kinit
	user can verify proper operation of kinit with klist
	user cred files are owned by user(UID) (correct)
	user tries to ls /: -- there is a pause, ls runs
	user's credentials are now owned by root
  The auth_helper was invoked and tried to fill a cred slot. Along the
way, it imports the user's (just now refreshed) context having observed
the expiration of the credentials it previously cached. The import
checks the expiration of the identity, ... and dfsbind accidentally gets
into write_context(). The new context is rewritten as a side effect of
updating our notion of its expiry time.
  We propose to perform a chown() (as in
sec_login_pvt_restricted+context) within write_context() itself.

[11/30/93 public]
Filled in Reported by Company's Ref. Number with `BPG 9792'

[11/30/93 public]
The file ownership of the new incarnation of the context should be exactly
the same as the file ownership of the previous incarnation.

[11/30/93 public]
Well, the new incarnation -- created by open,write,write,close,rename in
write_context() -- is done by dfsbind through the auth_helper. dfsbind
runs as "self" with UID 0. That final rename() moves the newly-created
context (with oid 0) onto the old context, which has uid = (prinicpal's
UNIX UID). The changed ownership of the file is clearly explained by a
review of write_context (called through check_identity_exp()) keeping in
mind that dfsbind is running as root but importing contexts owned by
others.

[11/30/93 public]
I'll let you two figure out where the real problem is, but I wanted to update
this with a Fixby of 1.0.3a since it seems serious enough that 1.0.3a probably
shouldn't ship without this being fixed...

[11/30/93 public]
The "should" in my comment above should be read as "it should be fixed this
way", not "this bug doesn't exist".. i.e., it 'should' be this way, but it
isn't now..

[11/30/93 public]
Changed Interest List CC from `sanzi@transarc.com, jaffe@transarc.com' to 
 `sanzi@transarc.com, jaffe@transarc.com, bab@transarc.com' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[12/7/93 public]
some mail I just sent:
   Date: Tue,  7 Dec 1993 10:17:44 -0500 (EST)
   From: Richard_Sanzi@transarc.com
   Is it the caller, or the creds themselves that "know", ie., add a
   syntatically correct instance of the following before 
   write_context() returns:
	   chown(cred_file, UNIX_CREDS(lcp).pwent->pw_uid, -1);
   Wouldn't that do it?
   Rich
Nope, because there is no *guarantee* that the unix id of the user is
the same as the id stored for them in the registry.
The most notable case of this is hosts/<machinename>/self, where the
uid of the hosts/.../self account in the registry is non-zero, while
the machine credentials files should owned by root.

[12/29/93 public]
I just tried to reproduce this and failed.  Is this an intermittent
problem or is there some step missing in the instructions to
reproduce mentioned above or am I not reading them correctly?  
Details of my attempt are:
- using 103ab2 on a single machine HPUX cell
- cranked ticket expiration down to 10 minutes
- dce_login'ed as rsarbo (os uid 10134, registry uid 10134)
- cd /:;cp /etc/passwd /:;cat passwd, root.dfs is an Episode
  fileset
- wait for tickets to expire, cat passwd, get error about tickets
  expired
- run kinit, run klist to verify 
- ls /: - successful.  check ownership on creds file, still 
  rsarbo
perhaps this problem is Sun specific?

[12/29/93 public]
While I don't pretend to understand all those levels of cred caching
that's going on in security, one potential solution to this problem
might be to check in write_context() if the cred file already exists,
and if so to chown the new cred file to match the ownership of the old.
This should even work on filesystems that don't allow users to give away
files since only root will need to be able to do it.

[1/12/94 public]
Ron: the reason why you couldn't reproduce this was that you ran klist,
which ran as yourself rather than as root..
I am operating under the assumption that the .data file is what's getting
smashed, not the krb5 ccache or the name cache..

[1/12/94 public]
I think I've scoped out how to fix 9560:
In write_context(), stat() the "destination" context name.
If the context exists, save the owner, group, and mode of the .data
file.
After writing the context, but before renaming, chown/chmod the new
context to the "original" identity; ignore errors from the chown/chmod
in case we don't have rights to do this.
This fix assumes that only the ".data" file is getting set to the
wrong ownership.

[1/12/94 public]
  Yes, it was just the ".data" (context) file that suffered this
problem.

[1/12/94 public]
This fix has been included in the 1.0.3a unintegrated tree.  Leaving
open and changing fixby to 1.1 to ensure it makes it into the 1.1
tree.

[5/4/94 public]
The fix suggested by Bill Sommerfeld was submitted when 1.0.3a to 1.1
merge happened (performed by OSF DFS group - 2/4/94).

[5/13/94 public]
Closed.



CR Number                     : 9529
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd does not free memory on deletions
Reported Date                 : 11/22/93
Found in Baseline             : 1.0.3
Found Date                    : 11/22/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/server/rsdb/balanced_trees.c
Sensitivity                   : public

[11/22/93 public]

The licensee reported:

-----Original report starts-------------------
One Line Description:
        Severe memory leak in Security Server (secd).

Full Description:
        The balanced tree manager code in the security server does not
        free memory from deleted entries.  It appears at first glance that
        the algoritm used is along the lines of the "2-3" tree in Aho,
        Hopcroft, and Ullman.  The data_delete() function does not do a
        proper tree deletion operation.  All it does is look up the node to
        be deleted and marks it as deleted.  If the "update" test is run to
        repeatedly add and delete a small number of accounts, the secd
        process will crash after increasing in virtual memory size until
        the per process limit is reached.

Repeat By:
        #!/bin/sh
        while : ; do
                ./update -a -p cell_admin -pw -dce- 50 /.:
                ./update -r -p cell_admin -pw -dce- 50 /.:
        done

Proposed Solution:
        The balanced_trees.c code needs to be reworked to correctly
        implement the node delete operation and to free memory correctly.
        I would also suggest using malloc() and free() directly in the
        node and data allocation/deallocation functions instead of the
        brain-dead mem_alloc() functionality in balanced_trees.c.
        The mem_alloc routine does not appear to be designed to efficiently
        recycle unused cached heapspace.  Malloc, with all of its drawbacks,
        takes care of this more efficiently.
-----------Original report ends-----------------

First of all, I tried the suggested the way to repeat the problem (with
1.0.3b10). I did see secd size growing with every "update" add and remove
(update is the one test under test/security/commands/rgy). Yes, it grows
even with account removal. 

For every 50 accounts addition, secd grows about 44 blocks (22K), about
0.5k/acct. For every 50 accounts removal, secd grows about 4 blocks (2K).

Obviously, if one runs the update to add and remove many times, it will
eventually use up all virtual memory and crash.

I did not try the test in a while loop, but I believe if I did, I would see
the secd crash.

I looked at the source. It looks that the memory is allocated, but never
freed, until the call to mem_free() is made. Mem_free() is only called by
clear_database() and input_database(), both of which are called only for the
database reload/initialization.

The code does look like trying to reuse the node that is marked with
DELETED. But from the test run above, it seems that the marked deleted
space is not really being reused (update add 50 will add 50 accounts,
update remove 50 will remove those 50 accounts, leaving those 50 "slots"
marked as DELETED. The next time you do update add 50, supposedly secd
should reuse those 50 slots, with possible little overhead, hence one
should see no or little  memory size increase. But it is not the case).

I am not sure if this one is related to OT 7437 and 6726.

rsalz (Rich Salz) pointed out that it is a design decision not to free and
reuse the meory for security database, just like CDS

--------Quote from rsalz -------------
Here is how secd reads its database:
	fd=open(secdb);
	fstat(fd, &statbuf)
	datapointer = malloc(statbuf.st_size);
	read(fd, datapointer, ,statbuf.st_size);

Get it?  There is a single malloc'd space that contains all the initial
data.

secd then builds its tree indicies on top of this data, containing pointers
into it.

Deleting a node means the data that was in the file cannot be deleted until
the file is re-loaded.  (You can't, say, delete 20 bytes out of the middle
of a malloc space.)

You might be able to mark the node free and re-use it if you know the size.
That adds overhead (an internal freelist) that might be worth doing.

Or, you can read the data off the file a node at a time.  This will give
you very fragmented memory.

The assumption is that in a production environment the registry database
is basically stable; the current implementation is not unreasonable for
that assumption.
------------end quote------------------

[11/23/93 public]

I will update this defect with on-going email exchanges.

It has been suggested to put a line in the 1.0.3 release notes to document
this memory using behavior:

By rsalz:

Here's what to say:
	secd does not re-use memory when an object is deleted.
	If many objects are being created and deleted, as is common
	in a testing environment, it may be useful to periodically
	restart the secd program.  This is not expected to be a big
	problem in a production environment.

By pato@pop-e5.ch.apollo.hp.com:

Is this problem solved by putting the server into and out of maintenance
mode?  Going into maintenance mode forces the VM DB to disk.  Out of
maintenance mode re-reads it.  (Re-reading the DB will allocate new VM
areas for the various internal relations - I think that the old ones are
nuked in the process, which calls free...)  In the old days on Domain/OS
this wasn't effective because once an area was malloc'd it belonged to the
process even if a free had been called, but in a straight UNIX environment
this should have the garbage collection effect desired.

By pato@pop-e5.ch.apollo.hp.com:

Thanks for this info - the decision not to do frees was intentional - as
was
pointed out in one of the notes (we get to read the entire database into a
contiguous block.

In addition you should comment that the DELETED mark is actually used -
unfortunately repeated applications of the "update" test won't benefit from
this.  Leaving existing nodes in the tree marked as deleted will be reused
if a new node appears that should go into that slot - for some sub-trees
this will never be the case (e.g., the sequential indeces into the database
since these are using monotonically increasing keys, so the data will never
reuse an old slot) but for most of the trees, the data is reused.  In the
update test, it won't happen since the names applied are a function of the
run and therefore it won't fit into the same portion of the tree later.  In
real life, of course, there is a much higher probability that the space
will be reused.

By sommerfeld@apollo.hp.com:

Even so, it sounds like this *still* needs some re-work in the 1.1
timeframe.  This is supposed to be a balanced-tree package, which
means that some sort of "tree rotations" are done to move nodes around
to prevent the tree from degenerating into a linked list, right?

Perhaps a reasonable compromise would be to distinguish between nodes
pointing into the initial one-fell-swoop area and nodes added since
the previous database reload; the latter would use malloc/free
directly, while the former would just point into the allocated region,
which would remain static.

By wwang:

When I was reading the code, it does seem to me that the code wants to reuse
the DELETED slot. I was assuming that it uses the account name or sth to
generate the index into the tree. But running the test indicates that it is
not the case, since every time I create 50 accounts, they have the same names.

Now you mentioned that it is becasue it uses monotonically increasing keys.
But if a key is always monotonically increasing, there is no chance for a
DELETED slot to be ever used again. How in real life a DELETED slot gets
reused? You did say that for some sub-trees, DELETED slots never get
reused. What are these sub trees, what are the ones that can be reused?

By rsalz: 

> Is this problem solved by putting the server into and out of maintenance
> mode?  Going into maintenance mode forces the VM DB to disk.  Out of
> maintenance mode re-reads it.

Perhaps, sort of.  It depends.  How's that for definitive? :-)

Once you do a malloc, even if you do a free, your program's virtual size
will not shrink.  This may be considered to be a bug in malloc, but it
is so common that you could safely say "all Unixes work this way" and
never get challenged on it.  It is important to point out that this is
a local OS thing.

HOWEVER, forcing the database to be reloaded will probably result in
better internal malloc use (which I think is Joe's point).  So that if
you create 100 accounts, delete them, into/out-of maintenance, and then
create 100 accounts you should not see secd getting bigger the second time.

By wwang:

I expected not to see a SZ increase when doing a 50 accts creation after
in and out of maintenance mode.

Too bad, it increased its size just as before. Here is what I did. Let me
know if I missed some importance step(s):

$ ./update -a -p cell_admin -pw -dce- 50 /.:	// create 50 accounts

	saw 45 blocks (22.5K) increase

$ ./update -r -p cell_admin -pw -dce- 50 /.:	// remove the 50 accounts

	saw 4 or 0 blocks increase

$ sec_admin
sec_admin> state -maintenance
sec_admin> state -service
sec_admin> exit
$
	secd SZ stayed the same as expected.

$ ./update -a -p cell_admin -pw -dce- 50 /.:	// create 50 accounts

	saw 45 blocks (22.5K) increase. We expected the SZ to stay
unchaned.

$ ./update -r -p cell_admin -pw -dce- 50 /.:	// remove the 50 accounts

	saw 4 or 0 blocks increase

$ additional creation cause more SZ increase.

By pato@apollo.hp.com:

> regarding Bill Sommerfeld's comments about rotating the tree:

I'm not sure it is worth doing this.  The tree does not degenerate into a
linked list - rotations are applied during additions.  Deleted nodes become
place holders for the next key that fits into the slot of the tree and are
then reused.  In practice deletions are infrequent - so it does not seem
worthwhile to modify this code.

If we do feel the need (e.g., if the addition of attributes to the database
induce lots of deletions to those nodes), then it might be simplest to just
augment the checkpoint task with garbage collection (i.e., reload the DB if
the number of deleted nodes crosses some percentage threshold)

[11/23/93 public]

Jean Hsiao suggested to use "top" command to get a more realistic number.
It turns out that the SIZE you get from top is about 4 times of the SZ
number you get from "ps -efl".

It looks like that one account add/delete causes about 4K size increase.

[12/01/93 public]

The following is comment from the original submitter of this defect.

------------start quote --------------------------------------------------
I am afraid that the assumption that the registry database is basically
stable may be incorrect - in a production environment, accounts are
added and deleted fairly regularly.  At the deployment sig (was end user
forum) during this month's Super Sig, most of the companies were talking
about pilot programs with hundreds of machines in a cell, and 
thousands of accounts.  I have little confidence that the current 
implementation will scale to pilot programs of that size.  Restarting
secd periodically is probably not an acceptable answer either.

If our code inspection is correct, the problem is really twofold:

1) The deleted nodes are never re-used
2) Direct pointers to the nodes are returned to callers - therefore the
   nodes *cannot* be re-used, because it is unknown how many threads
   might still be holding pointers to a node.

So while we appreciate that it may be non-trivial to fix, I believe that
it is fairly important that it be fixed in the 1.1 release.

>The memory is not being reused, even though there is reuse code in the
>mem_alloc allocation routine.  Unfortunately the routine which frees
>deleted nodes does not actually put the memory on any free lists, so the
>nodes marked "Deleted" are left that way forever.  This is probably due
>to the fact that the data retrieval routine returns a POINTER to the
>data in the tree instead of a copy.  Since there is no way of knowing who
>holds pointers to internal tree data in a multithreaded environment, it is
>very dangerous to re-use the deleted tree memory.  
>
>In my opinion, the balanced tree routines should only provide callers with
>a COPY of the data and leave the caller with the responsibility of freeing
>the copied data.  Then it would be safe to recycle deleted tree nodes.
>Also note, that the tree delete routine makes no attempt to rebalance the
>tree on deletion, since the node is not actually deleted.  This should also
>be fixed.

>I must also question the wisdom of using virtual memory to store the registry.
>Sure, it works great for cells with less than a thousand users/machines/etc.
>However in a really large cell (possible with hundreds of thousands of 
>registry entries) you will need a machine with huge amounts of virtual memory.
>Most of this will be in swap space, so there is no real advantage over reading
>registry entries from a temporary file.  The balanced tree implementation 
>should be made flexible so that a file interface can be added for data 
>storage. Caching would be accomplished by increasing the size of the file
>system buffer cache.
-----------------end quote---------------------------------

[07/17/95 public]

I am recording the interest of Hitachi on the subject (support
ticket 21776).

Also I would like to suggest the use of the same BSD library
used in dced, libdb44.
Its implementation of btrees allows for faster access, scales
to larger databases and is page cache based, eliminating the
need to keep the whole database in core (or, as it often happens,
paged out).

[2/6/96 public]
Didn't even know this OT was there (since it was in the 'defer' category).
This was fixed in the 1.2.1 scalability work (documented in the RFC just
released) in the security server's balanced_trees.c module (self-contained).
No diff possible since the whole file was cleaned up a lot.  It should be
fairly straightforward to apply the 1.2.1 balanced_trees.c to a 1.1 source
base.



CR Number                     : 9523
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security/server/rs/rs_main.c
Short Description             : rs_main.o: Undefined symbol
"_rs_rep_auth_init" referenced
Reported Date                 : 11/22/93
Found in Baseline             : 1.0.3
Found Date                    : 11/22/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : correct version of rs_rep_auth.c
Sensitivity                   : public

[11/22/93 public]
The export build s fail on all 3 platforms with
rs_main.o: Undefined symbol "_rs_rep_auth_init" referenced
 in the BASIC pass of security/server/rs.

[11/22/93 public]
The file rs_rep_auth.c in the export build area is not current compared to
domestic version; export area has Revision 1.1.3.9 while domestic has
Revision 1.1.3.10. The Revision 1.1.3.10 submission has rs_rep_auth_init()
function defined in it. The RATS group will check out the latest version
of this file and will re-build.

[11/22/93 public]
The story has more detail:
	It appears the export tapes from DCE1.0.2 are the real culprits...
	
	The file in question is different on the DCE1.0.2 domestic and the
	DCE1.0.2 export tapes. The domestic version is correct.
	
	Paul Ellis tarred in the 102 & 102a tapes and executed the
	overlays. This worked Ok-file for domestic because the correct
	files were on the original tapes.
	This PROCESS worked correctly for the exports EXCEPT the tapes
	were wrong.

	The most probable failure point was when we opened the tree during
	102 endgame to take the replication changes at the last minute. The
	changes were applied to the domestic archive, but not the export
	archive. The files are in the backing builds, which is why Munich
	didn't see this problem...they sup over the files getting the
	latest versions.

	Two things we've learned here:
		- put ALL late changes into the unintegrated tree. 
		- no one uses the export archive. (tape OR AFS).
 		- diff the domestic & export archives after all changes.

 	We will correct the problem by adding the files to the EXPORT
	unintegrated tree with a README and some notation in the release notes.

[11/29/93 public]
Closed.



CR Number                     : 9512
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_gd, admin_ref
Short Description             : Remove notes referring to 
availability of functions not yet implemented in current release
Reported Date                 : 11/18/93
Found in Baseline             : 1.0.3
Found Date                    : 11/18/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : in admin_gd: 1_over.gpsml, 
12_trouble.gpsml; in admin_ref: sec_salvage_db.8sec
Sensitivity                   : public

[11/18/93 public]
Remove all release-dependent notes.  Such notes should 
appear only in the Release Notes.

[6/21/94 public]
Fixed and verified.  Verified by me.

[09/19/94 public]
Closed bug.  Note that sec_salvage_db.8sec in the Command Reference
has since been defuncted, as per another 1.1 CR.



CR Number                     : 9495
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : Export build doesn't
Reported Date                 : 11/16/93
Found in Baseline             : 1.0.3
Found Date                    : 11/16/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : see below
Sensitivity                   : public

[11/16/93 public]
security/krb5/lib/crypto does not build for export releases.  

Export versions of the DCE source code differ from US domestic versions in
the following manner:

  Files removed:
	  security/krb5/lib/crypto/domestic/*
	  rpc/kdes/*
		  -except: Makefile, des_neuter.c, des.h
  
  Code changes:
	  Makeconf: replace 'USE_DES=1' with '.undef USE_DES
	  rpc/runtime/{krbclt.c,krbdgcom.c,krbcn.c}
		  add #define NOENCRYPTION

SNI/Munich has reported this and I've reproduced it independently at OSF. 

The following files don't build:
	security/krb5/lib/crypto/international/cksum.c
Error: inconsistent parameter list declaration for "mit_des_cbc_cksum"

	security/krb5/lib/crypto/international/cbc_encrypt.c
Error: inconsistent parameter list declaration for "mit_des_cbc_encrypt"

	security/krb5/lib/crypto/international/des_tables.c
Error: empty source file 

(Huh?)

[11/16/93 public]
Looking at the header file src/security/krb5/include/krb5/des_int.h, it
appears that prototypes have been changed possibly to accomodate 64-bit
changes. In 1.0.3, krb5_int32 has been substituted for long in 1.0.2 code
for these prototypes.

extern void mit_des_cbc_cksum
    PROTOTYPE((krb5_octet *, krb5_octet *, long , mit_des_key_schedule ,
               krb5_octet *));

extern void mit_des_cbc_cksum
    PROTOTYPE((krb5_octet *, krb5_octet *, krb5_int32, mit_des_key_schedule
,
               krb5_octet *));

extern krb5_error_code mit_des_cbc_encrypt
    PROTOTYPE((krb5_octet *, krb5_octet *, long, mit_des_key_schedule,
               krb5_octet *, int));


extern krb5_error_code mit_des_cbc_encrypt
    PROTOTYPE((krb5_octet *, krb5_octet *, krb5_int32,
mit_des_key_schedule,
               krb5_octet *, int));

[11/16/93 public]
files: security/krb5/lib/crypt/international/cksum.c, cbc_encrypt.c

[11/16/93 public]
Closed.

[11/17/93 public]

Note that the domestic source file des_tables.c is probably not export
controlled since it only contains some well-known random numbers, albeit
permuted a bit from the actual spec.  The domestic source file des_tables.h
*is* export controlled since it contains macros which implement the DES
algorithm.



CR Number                     : 9493
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec/client/login/sec_login_pvt.c
Short Description             : Assertion failure/core dump in
failure path of sec_login_pvt_setup_refresh_context
Reported Date                 : 11/16/93
Found in Baseline             : 1.0.3
Found Date                    : 11/16/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[11/16/93 public]

Licensee reported:

"  src/client/login/sec_login_pvt.c:sec_login_pvt_setup_refresh_context()
        calls sec_login_pvt_purge_refresh_context() in the failure
        path. This calls ...release_context which attempts to delete
        this from the context cache. Subsequently an assertion in
        cache_sanity_check() fails leading to a core dump. The cause of
        the problem is that the refresh context being setup is not
        entered into the cache on the failure path.

        Here is the stack trace of failure when setup refresh .. failed
        due to KRB5_CC_IO.

sdb /opt/dcelocal/bin/cdsd core.1
no source file
0x8101ca58   (_kill+0x8)                bc      12865 <81029360> [_cerror]
*t
_kill()
cma___sig_sync_kill(sig=6,code=0,scp=0x2c3580)  [cma_signal.c:1412]
_sigacthandler()
_sigreturn()
cma___sig_sync_kill(sig=2897260,code=0x2c3568,scp=0x2c3564)  [cma_signal.c:1412]
__assert()
cache_sanity_check(present=0x711078,absent=0)   [sec_login_cache.c:162]
sec_login_pvt_release_context(lcp=0x711078)     [sec_login_cache.c:304]
sec_login_pvt_purge_refresh_context(lcp=0x711078,stp=0x2c386c)  [sec_login_pvt.c:2693]
sec_login_pvt_setup_refresh_context(lcp=0x6fb068,stp=0x2c3dcc)  [sec_login_pvt.c:4125]
sec_login_validate_identity(login_context=0x6fb068,passwd=0x6c7a00,reset_passwd=0x2c3d70,auth_src=0x2c3d6c,st=0x2c3dcc) [sec_login.c:373]
sec_login_valid_from_keytable(login_context=0x6fb068,authn_service=1,arg=0,try_kvno=0,used_kvno=0x2c3d88,reset_passwd=0x2c3d70,auth_src=0x2c3d6c,st=0x2c3dcc)

[get_key_and_validate_id(login_context=0x6fb068,passwd="",name="/.../tcell.sqa.stratus.com/hosts/st17/cds-server",st_p=0x2c3dcc) [sec_init.c:372]
refresh_server_identity(sec_info_p=0x812b7374)  [sec_init.c:310]
th_start(th_p=0x7196f0) [threads_lib.c:1245]
cma__thread_base()      [cma_thread.c:1381]


Repeat By:

Proposed Solution:
        Either enter refresh context rcp into cache earlier or
        do not call sec_login_pvt_purge_refresh_context in the failure path
        of sec_login_pvt_setup_refresh_context.

        Possible fix to sec_login_pvt_setup_refresh_context() is

         out:
#ifdef _FTX
    /* wipe out the contents of the cache */
    if (KRB_INFO(rcp).cache != NULL) {
        krb5_cc_destroy(rcp->krb_info.cache);
        rcp->krb_info.cache = NULL;
    }
    rca_binding_cache_purge(rcp);
#else
    sec_login_pvt_purge_refresh_context(rcp, &lst);
#endif

    return NULL;
"

I checked with our current 1.0.3 code, the problem is not fixed yet. I
believe that the suggested fix from the licensee makes sense.

[8/22/94 public]
As with 11188 that I just dup'd to this one, we already knew the fix to this
problem here, so I've reassigned it to myself.  Fix is ready, waiting for
approval to submit.

[8/23/94 public]
Submitted fix, marked 'fix'.



CR Number                     : 9488
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec binding
Short Description             : rgy_edit 'cell' can bind to slave in foreign cell
Reported Date                 : 11/15/93
Found in Baseline             : 1.0.2
Found Date                    : 11/15/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : client/admin/rgy_edit/ek_db.c
Sensitivity                   : public

[11/15/93 public]
  rgy_edit calls sec_rgy_cell_bind() to prepare for modifications to the
foreign cell, but this has been seen to bind to slaves at the foreign
cell. It appears that either a new routine (sec_rgy_bind_cell_update())
is needed, or that all binds to foreign cells should presume the need
for the foreign master.. small change to add a call to
rca_site_resolve_update() to sec_rgy_cell_bind() if the latter case is
taken, less small change to clone it then modify the new routine
otherwise. (right?)
  Workaround: the cell admin'r rolls the dice again and hopes for a
master binding at the foreign cell.

[11/19/93 public]
  A quick test of changing the sec_rgy_cell_bind() routine to be an
_update() routine, by adding a searchcontext which is used as an out
parameter from rca_site_bind and then passed to
rca_site_resolve_update() to obtain the final context produces SEGV
faults in the rca_tower_rebind area. The tower it is trying to
manipulate has a length of 75 but appears to point to nothing
meaningful; the 'ocontext' returned by rca_site_bind_from_tower_vec() to
rca_site_resolve_update() is null. No check is made for this, and the
RCA tried to set flags within this handle... segv. I'm looking at why
this happens.
  This same sequence of calls works and is stable for binding to the
local realm. Why does it fail for an arbitrary realm?

[11/19/93 public]
NOTE: The problem here is that rgy_edit is not specifically binding to an
update site, not that sec_rgy_cell_bind() should bind to an update site.  The
rgy_edit cell command should be fixed (too late for 1.0.3, but we suggest that
each vendor fix it themselves in their own product because it will cause
lots of confusion in the customer base if it is not fixed...).  The
sec_rgy_cell_bind() call will *not* be changed to always bind to an update
site.  In the future, we could add a sec_rgy_cell_bind_update() call
(the benefit of the _cell_ calls is that they involve less namespace lookups
than the _site_ calls, IFF you know you are always passing it a cellname
and never a real site name or /.../cellname/sec), but that is not necessary
for fixing this defect.

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.

[10/3/94 public]
This function is not incorporated in dcecp. Intercell configuration is
not possible without the rgy_edti cell command.

[10/3/94 public]
Not true, the "dcecp registry connect" command replaces the "rgy_edit cell"
command.

[ mob 10/14/94 public]
Putting back to E4 per earlier decision on "old" admin tools - where
dcecp does the right thing.

[2/2/96 public]
You're not going to believe this, but this has been fixed since
version 1.1.7.2 of ek_db.c on 12/6/1993, but just never closed.  It's
definitely fixed in 1.1.  Since OT won't let me say fixed in 1.1, I put
fixed in 1.2.1



CR Number                     : 9483
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : delete reference to read-only registry property
Reported Date                 : 11/12/93
Found in Baseline             : 1.0.3
Found Date                    : 11/12/93
Severity                      : B
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_gd/security/security/7_pols.gpsml, 
13_access.gpsml
Sensitivity                   : public

[11/12/93 public]
Remove info about rgy_edit prop command read-only property.  This 
was actually obsoleted in 1.0.2.  Use sec_admin state -maintenance 
instead.  (Separate bug is being opened for rgy_edit code.)

[millette 8/29/94 public}
Fixed and verified.  Verified by me.

[09/22/94 public]
Closed bug.



CR Number                     : 9407
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dce_login
Short Description             : dce_login -c and rgy_edit -l gives Assertion warning
Reported Date                 : 11/8/93
Found in Baseline             : 1.0.3
Found Date                    : 11/8/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/rca/sec_lrgy.c
Sensitivity                   : public

[11/8/93 public]

REF: OT9404
There are two assertion warnings: one in dce_login -c and in rgy_edit -l
with the purge and delete subcommands.

Examples follow:

root@largo> dce_login -c
Enter Principal Name: cell_admin
Enter Password: 
**** Assertion warning. attempt to release mutex owned by another thread
     at line 2624 in /project/dce/build/dce1.0.3-snap/src/threads/cma_pthread.c 
**** Assertion warning. attempt to release mutex owned by another thread
     at line 2624 in /project/dce/build/dce1.0.3-snap/src/threads/cma_pthread.c 
Password must be changed!
root@largo>

Second, the purge and delete command under rgy_edit -l gives the same warning:

rgy_edit=> purge
**** Assertion warning. attempt to release mutex owned by another thread
     at line 2624 in /project/dce/build/dce1.0.3-snap/src/threads/cma_pthread.c 

0 account entries purged
0 TGT entries purged

The following note was entered in OT9404 by M. Burati

****

[11/8/93 public]
If you are seeing assertion warnings when trying to do a dce_login (with the
latest 1.0.3 bits) then open an A0 CR ASAP, and let Bob Hathaway know you may
have found a showstopper.
****

[11/9/93 public]
Added John Dugas to the CC list, since the above assertion is coming from
threads, and there was a change to file locking and threads recently which
may be related.

[11/9/93 public ]
In the fix to sec_lrgy.c for OT9357, the LRGY_MUTEX_UNLOCK was placed
at the bottom of lrgy_write_lock (which caused the problem).  The 
LRGY_MUTEX_UNLOCK should be within the failure statements.  I found this
problem on 11/5/93, and put in a submit request based on the pervious defect.
Anyway the submit request was resent based on this defect number.

[11/11/93 public]
Closed.



CR Number                     : 9404
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit -l documentation not complete.
Reported Date                 : 11/8/93
Found in Baseline             : 1.0.3
Found Date                    : 11/8/93
Severity                      : D
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_gd/security/security/1_over.gpsml
admin_gd/security/security/4_accts.gpsml
Sensitivity                   : public

[11/8/93 public]

Assuming that the documentation is correct,  the rgy_edit -l flag
does not work.

The admin reference man page for rgy_edit lists the -l flag to be used
to edit or to view entries in the local registry. The Admin Guide uses the 
-l flag to edit local registry entries (see sections 17.9, 20.9, and 
20.9.3). However, the current implementation of rgy_edit does not seem
to recognize this flag, unless one is doing help, lifespan, and quit. 
Here is an example:


Build: Nov 6, 1993

Cell:  HP 	DCE server
       HP	DCE client
      486	DCE client and SEC replica


root@largo> rgy_edit -l
rgy_edit=> do p
Unknown command: do
rgy_edit=>  domain org
Unknown command: domain
rgy_edit=> v
?(rgy_edit) Unable to view local registry entries - cannot find local registry (dce / sec)
rgy_edit=> prop
?(rgy_edit) Unable to read local registry property record - cannot find local registry (dce / sec)
rgy_edit=> help
Known commands are:
        d[elete]        e[xit]          h[elp]          lifespan        
        pr[operties]    pu[rge]         q[uit]          v[iew]          
rgy_edit=> lifespan

(It works)

rgy_edit=> quit
bye.

The Admin Guide says that the following subset of rgy-edit 
commands can be used with rgy_edit -l:

view
delete principal
properties
help

In addition to the above commands, the rgy-edit command provides one
additional subcommand purge, and an additional regstry property, called
the registry capacity....

This does not work either.

root@largo> rgy_edit -l
rgy_edit=> purge
**** Assertion warning. attempt to release mutex owned by another thread
     at line 2624 in /project/dce/build/dce1.0.3-snap/src/threads/cma_pthread.c 
?(rgy_edit) Unable to purge expired local registry entries - cannot find local registry (dce / sec)

[11/8/93 public]
Never assume anything :-)
The documentation may not say it, but the rgy_edit -l commands can only
succeed if there is a local registry available, and there is only a local
registry available if users have logged into that machine with either a
correctly integrated /bin/login (or X based login) or dce_login with the -c
(certify) option.  Changed to a 'doc' CR.

[11/8/93 public]

First, doing a dce_login -c gives the following messages - I don't think
they should be there. 

root@largo> dce_login -c
Enter Principal Name: cell_admin
Enter Password: 
**** Assertion warning. attempt to release mutex owned by another thread
     at line 2624 in /project/dce/build/dce1.0.3-snap/src/threads/cma_pthread.c 
**** Assertion warning. attempt to release mutex owned by another thread
     at line 2624 in /project/dce/build/dce1.0.3-snap/src/threads/cma_pthread.c 
Password must be changed!
root@largo>

Second, the purge and delete command under rgy_edit -l gives the same warning:

rgy_edit=> purge
**** Assertion warning. attempt to release mutex owned by another thread
     at line 2624 in /project/dce/build/dce1.0.3-snap/src/threads/cma_pthread.c 

0 account entries purged
0 TGT entries purged


It does not seem to be only a documentation problem.

[11/3/93 public]
If you are seeing assertion warnings when trying to do a dce_login (with the
latest 1.0.3 bits) then open an A0 CR ASAP, and let Bob Hathaway know you may
have found a showstopper.

[11/9/93 public]
I've downgraded this CR's severity and priority.  Basically, the 
documentation is correct; however it might be helpful to add 
something about the local registry being created only if you did correct dce_login 
not just local login.  We might also add that if there is 
no local registry because of above reason, user will get an error.
I've also changed to fix by to 1.1.  A separate CR(9407) has been opened 
for the assertion errors, which are a code, not documentation problem.

[6/21/94 public]
Fixed and verified.  Verified by me.

[09/22/94 public]
Closed bug.



CR Number                     : 9385
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 8496
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : rdacl_XXX calls have bad description of handle
Reported Date                 : 11/5/93
Found in Baseline             : 1.0.3
Found Date                    : 11/5/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/rdacl_get_access.3sec
app_ref/man3sec/rdacl_get_manager_types.3sec
app_ref/man3sec/rdacl_get_mgr_types_semantics.3sec
app_ref/man3sec/rdacl_get_printstring.3sec
app_ref/man3sec/rdacl_get_referral.3sec
app_ref/man3sec/rdacl_lookup.3sec
app_ref/man3sec/rdacl_replace.3sec
app_ref/man3sec/rdacl_test_access.3sec
app_ref/man3sec/rdacl_test_access_on_behalf.3sec
Sensitivity                   : public

[11/5/93 public]
The description of the first parameter (a handle_t) of all the rdacl_XXX()
calls (in 3sec) is incorrect.  The text says
    A handle referring to the target object.  Use sec_acl_bind()
    to create this handle.

This should say that it's the binding handle returned by some 
rpc_ns_binding* call.  (It looks like this text was just copied from
the sec_acl_XXX calls.)

[11/12/93 public]

Assigned this CR to Pam Millett.

[11/12/93 public]
This CR may be a moot point if rdacl manpages are deleted in 1.1, 
as requested in CR 8496.

[6/16/94 public]
Fixed and verified.  Verified by Mike Burati.

[09/22/94 public]
Closed bug.



CR Number                     : 9378
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kinit
Short Description             : default lifetime units not hours
Reported Date                 : 11/5/93
Found in Baseline             : 1.0.3
Found Date                    : 11/5/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/krb5/clients/kinit/kinit.c
Sensitivity                   : public

[11/5/93 public]
The kinit(1sec) refpage's description of the "-l" flag is misleading.

    -l lifetime
	Specifies the lifetime of the ticket-granting ticket in hours.

"kinit -l 10 some-user" sets the lifetime to 10 *minutes*, not hours.  If
you want 10 hours, you specify "10h".  The syntax of numbers and intervals
is discussed later in that manpage.  The discussion of "-l" should just
point to the number/interval section.

Same thing goes for the "-r" option discussion.

[11/5/93 public]

Assigned this CR to Pam Millett (HP security writer).

[12/1/93 public]
Actually, this was an inadvertent change of behavior in the program...

[5/17/94 public]
The fix for this was merged on 5/11 as part of the hp_sec_to_osf_2 drop.

[5/23/94 public]
Closed.



CR Number                     : 9376
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_id_pac_t needs to be in intro.3sec
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : src/app_ref/man3sec/sec_intro.3sec
Sensitivity                   : public

[11/4/93 public]
The type sec_id_pac_t type needs to be described/mentioned in the
intro.3sec man page.  Whether it is public or opaque needs to be
determined.  See walt for help.

[11/5/93 public]

Assigned this bug to Pam Millett (HP security writer).

[6/16/94 public]
Fixed and verified.  Verified by Mike Burati.

[09/22/94 public]
Closed bug.



CR Number                     : 9373
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : lrep -prop shows status too
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.2
Found Date                    : 11/4/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_ref/man8sec/sec_admin.8sec
Sensitivity                   : public

[11/4/93 public]
lrep -prop also shows a propagation state.  this is not to be confused with
the replica's state that info shows.  The possible values of the
propagation state, as printed by sec_admin are:

    "bad state"
    "marked for initialization"
    "initializing"
    "ready for updates"
    "marked for deletion"

[11/5/93 public]

Assigned this CR to Pam Millett (HP security doc writer).

[10/18/94 public]
Fixed and verified.  Verified by emartin.

[10/20/94 public]
Closed bug.



CR Number                     : 9369
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : rdacl_lookup has bad description of result argument
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/rdacl_lookup.3sec
Sensitivity                   : public

[11/4/93 public]
In the rdacl_lookup(3sec) manpage the discussion of the output parameter
'result' is wrong.  result.tagged_union.sec_acl_list (not result.sec_acl)
contains a sec_acl_list_t (not sec_acl_t).  (I.e., a list of ACLs, not
just one ACL.)

[11/5/93 public]

Assigned this CR to Pam Millett and changed the "fixby"
date from 1.0.3 to 1.1.

[6/16/94 public]
Fixed and verified.  Verified by Mike Burati.

[09/22/94 public]
Closed bug.



CR Number                     : 9368
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : info -f gives version too
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.2
Found Date                    : 11/4/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : command_ref/man8sec/sec_admin.8sec
Sensitivity                   : public

[11/4/93 public]
The description of the info -full command in sec_admin.8sec does not
mention that the software version is returned as well.  An example:

  sec_admin> info -full
  
  Default replica:  /.../sisyphus.osf.org/subsys/dce/sec/zagreb
  Default cell:     /.../sisyphus.osf.org
	    State:                   in service - slave
	    Last update received at: Fri Oct 29 15:59:24 1993
	    Last update's seqno:     0.3068
	    Instance id:             65685240-d475-11cc-a6ba-080009494196
	    Addresses:               ncacn_ip_tcp:130.105.5.95[]
				     ncadg_ip_udp:130.105.5.95[]
	    Master id:               0056d9de-ef9e-1c7c-9169-08005a0d4582
	    Master address:          ncacn_ip_tcp:130.105.5.20[]
				     ncadg_ip_udp:130.105.5.20[]
	    Master seqno:            0.100
	    Software version:        secd.dce.1.0.2

[11/5/93 public]

Assigned this CR to Pam Millett and changed
"fixby" date to 1.1 from 1.0.3 (per Hal Lichtin)

[10/18/94 public]
Fixed and verified.  Verified by emartin.

[10/20/94 public]
Closed bug.



CR Number                     : 9367
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : remove reference to 
pointer to opaque handle in sec callls
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : see below for 
list of affected files
Sensitivity                   : public

[11/4/93 public]
Remove reference to opaque pointer in the following sec calls:

sec_id_gen_group.3sec                 sec_rgy_pgo_get_members.3sec
sec_id_gen_name.3sec                  sec_rgy_pgo_get_next.3sec
sec_id_parse_group.3sec               sec_rgy_pgo_id_to_name.3sec
sec_id_parse_name.3sec                sec_rgy_pgo_id_to_unix_num.3sec
sec_rgy_pgo_is_member.3sec
sec_rgy_acct_add.3sec                 sec_rgy_pgo_name_to_id.3sec
sec_rgy_acct_admin_replace.3sec       sec_rgy_pgo_name_to_unix_num.3sec
sec_rgy_acct_delete.3sec              sec_rgy_pgo_rename.3sec
sec_rgy_acct_get_projlist.3sec        sec_rgy_pgo_replace.3sec
sec_rgy_acct_lookup.3sec              sec_rgy_pgo_unix_num_to_id.3sec
sec_rgy_acct_passwd.3sec              sec_rgy_pgo_unix_num_to_name.3sec
sec_rgy_acct_rename.3sec              sec_rgy_plcy_get_effective.3sec
sec_rgy_acct_replace_all.3sec         sec_rgy_plcy_get_info.3sec
sec_rgy_acct_user_replace.3sec        sec_rgy_plcy_set_info.3sec
sec_rgy_auth_plcy_get_effective.3sec  sec_rgy_properties_get_info.3sec
sec_rgy_auth_plcy_get_info.3sec       sec_rgy_properties_set_info.3sec
sec_rgy_auth_plcy_set_info.3sec       sec_rgy_site_close.3sec
sec_rgy_pgo_add.3sec                  sec_rgy_site_get.3sec
sec_rgy_pgo_add_member.3sec           sec_rgy_site_is_readonly.3sec
sec_rgy_pgo_delete.3sec               sec_rgy_unix_getgrgrid.3sec
sec_rgy_pgo_delete_member.3sec        sec_rgy_unix_getgrnam.3sec
sec_rgy_pgo_get_by_id.3sec            sec_rgy_unix_getpwnam.3sec
sec_rgy_pgo_get_by_name.3sec          sec_rgy_unix_getpwuid.3sec
sec_rgy_pgo_get_by_unix_num.3sec

[11/04/93 public]
Fixed and verified.  Verified by Rob Stanzel.

[11/11/93 public]

Verified changes in latest doc build and closed this bug.



CR Number                     : 9360
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : typo in initializing description
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : admin_ref/man8sec/sec_admin.8sec
Sensitivity                   : public

[11/4/93 public]
There is a type in the description of the initializing state in the
sec_admin man page:

    .LI 
    \*LInitializing\*O \(em The replica is in the processes of being
    initialized by the 
    master replica or another up-to-date replica

processes should be process.

[11/5/93 public]

Because this bug is very easy to fix, I
did so for 1.0.3 (although officially
we are deferring all new bug reports to
1.1).



CR Number                     : 9359
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : Calling
sec_login_setup_identity twice causes mutex assertion.
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/rca/sec_lrgy.c
Sensitivity                   : public

[11/4/93 public]
Calling a routine that contains sec_login_setup_identity() more than
once with an invalid registry object causes the above call to take 
an assertion. The login context is being freed upon the initial 
failure.

dcecp> login foobar
Error: Registry object not found
dcecp> login foobar
**** Assertion warning. attempt to relock a mutex
     at line 1321 in
/project/dce/build/dce1.0.3-snap/src/threads/cma_mutex.c 


This section of code, if called twice (in different calls
to a routine) causes the assertion.

  if (sec_login_setup_identity((unsigned_char_p_t )user,
			       sec_login_no_flags, &lcontext, &st)) {
    if (st != sec_rgy_status_ok) {
      DCP_APPEND_RESULT_CODE(st);
      sec_login_release_context(&lcontext, &st);
    }

[11/4/93 public]

I found the deadlock in sec_lrgy.c in both lrgy_read_lock and lrgy_write_lock. 
I will put forth a submit request.

[11/4/93 public]
fix has been submitted.

[11/11/93 public]
Closed.



CR Number                     : 9353
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : runaway login ctx cache
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.2
Found Date                    : 11/4/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec_login_pvt.c?
Sensitivity                   : public

[11/4/93 public]
  I will have more information tomorrow, but am following Bill's posted
advice about "file early, file often".
  DFS makes use of an information pipeline process called dfsbind; this
process is the consumer of the security auth_helper module. dfsbind sets
no context of its own; it relies upon inheritance of 'self' for its own
context. dfsbind has been seen to grow unexpectedly and quickly in
virtual size under medium loads. One culprit appears to be a runaway
sec_login cache (linked list maintained solely by sec_login_cache.c). I
will confirm and quantify this tomorrow (the test case that reproduces
this requires a lot of setup and three machines, hence I had to get in
line to investigate this and I get that cell tomorrow) but one
quickly-obtained look at the sec_login cache showed it to have many
occurrences of the local machine's self context, all pointing back to
dcecred_ffffffff and dcecred_ffffffff.nc . The number of duplications
bappeared to be into the hundreds (thousands, by one developer's
defensible claim).
  A typical instance of this that I was able to get hands-on data from
during a short period the other day showed something like 2330 cache
additions, 1200 cache removals, but only a handful of principals were in
existence in the cell. Cache hit rate was about 60% if I recall.
  A symptom of this is that dfsbind sees its incoming work request queue
overflow, perhaps due to the blockings made by the sec_login cache mutex
which is locked for long sanity runs through the cache (we run with
sanity checking turned on -- sanity checking says we're 'sane').
  This was all seen on Sun Solaris systems, but I haven't (knowingly)
made any changes to sec_login's cache mgmt.
  The one stack trace I have been sent also showed dfsbind calling
do_auth_request, and the following chain of events: the desired slot was
found but was invalid, the slot cred was to be refilled, this required a
sec_krb_sec_parse_name on the server name, this required an rgy-bind,
this found -- inexplicably! -- no default context for the process and so
began allocating the default one, this entered (yet another)
dcecred_ffffffff context into the cache.. if this is happening often,
it's the problem right there. But I cannot explain how the valid flag on
the default context could be incorrect.
  I apologize for having no sounder / quantitative data on this one. I
meant to have it before filing, but am taking Bill's posted advice to
heart. I'll append what I learn tomorrow.

[11/4/93 public]
  So far: I see that CR 9313 is related. CR 9313 is causing only the
first two entries inthe auth_helper cache to ever be used. I haven't yet
recreated the trigger for the whole problem, but I suspect two threads
vie for an auth_helper slot to begin with and take the 0 and 1 slots.
  Then, CR 9313 plays: we're looking for a slot, and since when slot <0
we (because of CR 9313) repeatedly compare cache_context[-1].refcount
while looking for an invalid, unreferenced slot, we never find one. We
then try to recycle the oldest one; for the same reasons (CR 9313) we
always recycle slot 1. This slot is holding, for us here, the (euid:0,
pag:ffffffff) context key.
  This triggers a sec_login_release_context of a copy of the default
context.
  There appears to be a problem through here. The refcount on this
context is high. (eight, nine in some cases). The release results in the
default handle being marked invalid (just the flag is set false). But
since the refcount does not return to 1, the copy of this context is not
removed from the cache. Having the default context valid flag cleared
results in another one being allocated next time we try to bind to the
registry (passing a null context to sec_rgy_bind_query underneath
sec_krb_sec_parse_name).
  The sec_login cache is *filled* with instances of "default contexts"
that have been abandoned in this way; all with high refcounts.
  I'll be testing a dfsbind which has a fix for CR 9313 and will post
the remaining details here. For clarity, this defect is intended not to
be a dup of 9313. I just don't expect the fix for CR 9313 to explain how
the refcount got too high, and that's what's causing the sec_logn ctx
cache to grow.

[11/8/93 public]
  I can't see how the purge/release paths involving the default contexts
can correctly maintain the refcounts. I don't understand how
sec_login_release_context() works: why does it refuse the
default context, only to check for it again a few lines further down?
How can repeated increments of the default handle's refcount (in the
sec_login_cache) get dropped back down?
  Raising priority to ascertain that this has been seen... I can only
suspect that this is a design problem between the auth_helper (which
relies upon importation) and the sec_login context cache.
Changed Priority from `2' to `1'

[11/12/93 public]
  I'm attaching a diff of a plausible workaround for these problems.
This diff does not actually address the problems of maintaining a
correct refcount on the default context through a
sec_login_release_context(), or the problems with binding to the
registry before the default context is set up (which creates the default
context along the way).
  What this diff does is to search the login cache for a context whose
credentials lie in the very file we'd read to form the context, before
we go ahead and do the reads. This bumps the refcount on the found
context in the process, which may inflate that context's refcount too
high, but unless the caller is multplexing different idents through the
default context, that's a small price to pay.
  Blank lines in the diff are replaced with '.'
-------------------------------------------------------------------------------
diff -c -b -t -r9.7 security/client/login/sec_login_pvt.c
*** 9.7 1993/10/25 20:43:41
--- security/client/login/sec_login_pvt.c       1993/11/10 21:42:43
***************
*** 2666,2672 ****
                  }
              }
.
!             if (GOOD_STATUS(stp)) {
                  struct stat  stat_buf;
                  char         *cfn;
.
--- 2666,2685 ----
                  }
              }
.
!             /* Perhaps this context is still in the cache, maybe
!              * because it was once the default context but was
!              * lost in the pvt_purge_default_context shuffle..
!              * Look it up, and if it's found, use it.
!              */
!             if (GOOD_STATUS(stp) &&
!                 (*lcap = sec_login_cache_lookup(strlen(env_context)+1,
!                                                 env_context))) {
!               /* Found a context using the ccache file we'd use.
!                * Skip the creation of an independent copy; instead,
!                * just use the found cached entry.
!                */
!               ;
!             } else if (GOOD_STATUS(stp)) {
                  struct stat  stat_buf;
                  char         *cfn;
.
-------------------------------------------------------------------------------

[ mdf 8/4/94 public ]
Any more additional information?  Did the work around solve your problem,
is this still a problem?

[8/4/94 public]
  Our fix, combined with one I think Diane Delgado supplied, seems to
have stopped the uncontrolled growth of the cache by reusing the
discarded entries. Atthe cost of performance, of course.
  Our fix, however, does /nothing/ to address the heinous way in which
the default context's refcount is managed, and leaves the broken
aspects of default context purging wide open.

[9/1/94 public]
Dropping priority by 1 to indicate that we are not fixing this for the
mainline.  If fixed in time it will show up in unintegrated.

[1/6/95 public]

Late in the 1.1 game, the format of the KRB5CCNAME variable was augmented
to include a generation id.  This affected the sec_login_ccache_lookup()
signature, which now takes in a generation id as well as a ccache
name.  To integrate the suggested fix into the unintegrated 1.1 code,
you must first call sec_login_pvt_parse_export_token() to parse the
KRB5CCNAME variable into a ccache name and generation id, and then pass
both to sec_login_ccache_lookup().  You can take a look at the
sec_login_import_context() code to see exactly how this should be done.

[3/28/95]

Another thing, env_context might be NULL, so the strlen(env_context) call
above might get an exception.  In 1.1, here's how I did the patch

if (env_context) {
  sec_login_parse_export_token (env_context, strlen(env_context)+1, &cname,
	&cname_len, &generation_id, &st);
}
if (GOOD_STATUS(stp)  && env_context &&
  (*lcp = sec_login_cache_lookup (strlen(env_context+1), env_context, 
   &generation_id))) {
   ;
} else ...

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 9348
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : Segmentation fault in acl_edit.
Reported Date                 : 11/3/93
Found in Baseline             : 1.0.3
Found Date                    : 11/3/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/admin/acl_edit/deif.c
Sensitivity                   : public

[11/3/93 public]

1.0.3 has the same problem described below for 1.0.2.

Full Description:

        The routine deif_validate_sec_acl_entry produced a
        segmentation fault when the command "delete foreign_user"
        was entered.  This is a syntax error, and not handled
        properly by the current code.

Repeat By:

        1) dce_login cell_admin -dce
        2) acl_edit -e /.:/hosts (or something)
        3) acl_edit>  delete foreign_user

Proposed Solution:

        In the dce1.0.2 code, lines 667 and 688 (checking of status
        code from routine deif_get_key, in cases for foreign_user/group
        and extended_info) should read:
            if ((! GOOD_STATUS(&st)) && (string != NULL))
                *(string-1)=':';
        instead of:
            if (! GOOD_STATUS(&st))
                *(string-1)=':';

[11/3/93 public]
Upgraded from p2 to p1, since a coredump of a core DCE utility on a highly
likely to occur user typo is fairly serious.  This is an easily reproducable
problem with a known cause and fix, so there's no reason for it not to be
high priority.  I've tested the fix on HPUX already and will be requesting
permission to submit now.

[11/3/93 public]
Submitted fix, marked 'fix'.

[11/11/93 public]
Closed.



CR Number                     : 9344
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : kinit
Short Description             : kinit not refershing
credentials.
Reported Date                 : 11/3/93
Found in Baseline             : 1.0.3
Found Date                    : 11/3/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/clients/login/sec_login_pvt.c
Sensitivity                   : public

[11/3/93 public]

The kinit command in the latest 1.0.3 code is not refreshing creds
correctly. There is a descrepency in kinit behavior between 1.0.2 and 1.0.3
code. 

Here is the detailed info:

1.0.3 code
----------

1. Perform dce_login.
2. After normal 10 hours (default), the ticket will expire.
3. Invoked kinit and got the following:
spring :kinit
No DCE network identity information available
Error: auth ticket expired (dce / rpc)
Usage: kinit [ -r time ] [ -vpf ] [ -l lifetime ] [ -c cachename ]
principal


pre 1.0.3 code (1.0.2+)
----------------------

1. Perform dce_login.
2. After normal 10 hours (default), the ticket will expire.
3. Invoked kinit and got the following:

% kinit
Enter password:
                00000069-ce43-2cd7-ab01-08005a0d2b0f subsys/dce/dskl-admin

Identity Info Expires: 93/11/03:11:08:30
Account Expires:       never
Passwd Expires:        never

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_3bdab900

Default principal: cell_admin@rios_cell
Server: krbtgt/rios_cell@rios_cell
        valid 93/11/03:11:03:30 to 93/11/03:11:08:30
Server: dce-ptgt@rios_cell
        valid 93/11/03:11:03:34 to 93/11/03:11:08:30
Client: dce-ptgt@rios_cell      Server: krbtgt/rios_cell@rios_cell
        valid 93/11/03:11:03:34 to 93/11/03:11:08:30
Client: dce-ptgt@rios_cell      Server: dce-rgy@rios_cell
        valid 93/11/03:11:03:34 to 93/11/03:11:08:30

It appears that all tickets are not issued when kinit command completed.
The registry Server entry (dce-rgy) is not there and you can't perform any
rgy_edit, sec_admin, etc. commands.

% rgy_edit
?(rgy_edit) Warning - binding is not authenticated - Cant establish
authentication to registry (Registry Edit Kernel) (dce / sad)
rgy_edit=> quit
bye.
% sec_admin
Unable to bind to registry at /.:
ERROR - auth ticket expired (dce / rpc)

[11/3/93 public]

I suspect that a recent change to sec_login by MDF may be responsible..

[ mdf 11/4/93 public ]

Modified so that if sec_login_pvt_check_exp() returns rpc_s_auth_tkt_expired, 
than the status is ok.

[11/11/93 public]
Closed.



CR Number                     : 9324
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : syntax error in rpc.sec.2_runtest.sh
Reported Date                 : 11/2/93
Found in Baseline             : 1.0.3
Found Date                    : 11/2/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
			src/test/systest/rpc/rpc.sec.2/rpc.sec.2_runtest.sh
Sensitivity                   : public

[11/2/93 public]
The following syntax error occured when I ran rpc.sec.2_runtest.sh:

1200 ->rpc.sec.2_runtest.sh -H
/dcetest/dcelocal/test/tet/system/rpc/ts/rpc.sec.2
rpc.sec.2_runtest.sh[205]: test: 0403-021 A ] character is missing.

Usage: rpc.sec.2_runtest.sh -C <num> [-a authn_svc][-c <mach> -c <mach>...][-b][
-d]

This is a simple problem with a "]" not having a space before it. The line is:

if [ "$rs2_rt_local_os" = "HP-UX" -o "$rs2_rt_local_os" = "SINIX-D"]

and it should be

if [ "$rs2_rt_local_os" = "HP-UX" -o "$rs2_rt_local_os" = "SINIX-D" ]

[11/11/93 public]
Closed.



CR Number                     : 9313
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security auth helper
Short Description             : -1 potentially used as array
indice in ./helper/auth_helper.c
Reported Date                 : 11/2/93
Found in Baseline             : 1.0.2
Found Date                    : 11/2/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : auth_helper.c
Sensitivity                   : public

[11/2/93 public]
In add_context_cache(), the following code can be run time and time
again:
                                                                      .
        } else if (context_cache[i].valid == 0) {
            /* not valid. remember this for future reference */
            if ((slot < 0) && (context_cache[slot].refcount == 0))
                slot = i;
        } else if (context_cache[i].refcount == 0) {
                                                                      .
But, 'slot' can be -1 (via auto-initialization) which means we just
checked the refcount on context_cache[-1] .

[8/12/94]

A quick fix for this.  Should check (context_cache[i].refcount == 0)
instead of (context_cache[slot].refcount == 0).



CR Number                     : 9312
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit login
Short Description             : rgy_edit login command dumps core
Reported Date                 : 11/1/93
Found in Baseline             : 1.0.3
Found Date                    : 11/1/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/admin/rgy_edit/ek_site.c
Sensitivity                   : public

[11/1/93 public]

In a one security server cell the login command within rgy_edit dumps core:

root@dce1> rgy_edit
Current site is: registry server at /.../dce1_cell/subsys/dce/sec/master 
rgy_edit=> login cell_admin
Password: 
Assertion failed: context->cache_prev == NULL, file /project/dce/build/dce1.0.3-
snap/src/security/client/rca/internal_binding.c, line 2291
Abort(coredump)
root@dce1> 

If you use rgy_edit -update it works most of the time:

root@dce1> rgy_edit -update
Current site is: registry server at /.../dce1_cell/subsys/dce/sec/master 
rgy_edit=> login cell_admin
Password: 
rgy_edit=> quit
bye.

But if you do two logins in a row within rgy_edit -update is dumps core:

root@dce1> rgy_edit -update
Current site is: registry server at /.../dce1_cell/subsys/dce/sec/master 
rgy_edit=> login cell_admin
Password: 
rgy_edit=> login cell_admin
Password: 
Assertion failed: context->cache_next == NULL, file /project/dce/build/dce1.0.3-snap/src/security/client/rca/internal_binding.c, line 2290
Abort(coredump)
root@dce1> 

Or if you do a view first within rgy_edit -update it dumps core:

root@dce1> rgy_edit -update
Current site is: registry server at /.../dce1_cell/subsys/dce/sec/master 
rgy_edit=> v
nobody [nogroup none]:*:-2:-2::/::
root [system none]:*:0:0::/::
daemon [daemon none]:*:1:1::/::
uucp [uucp none]:*:4:2::/usr/spool/uucppublic:/usr/lib/uucp/uucico:
bin [bin none]:*:3:3::/bin::
dce-ptgt [none none]:*:20:12::/::
dce-rgy [none none]:*:21:12::/::
krbtgt/dce1_cell [none none]:*:10362:12::/::
cell_admin [none none]:*:100:12::/::
hosts/dce1/self [none none]:*:10363:12::/::
hosts/dce3/self [none none]:*:10364:12::/::
hosts/dce3/cds-server [subsys/dce/cds-server none]:*:10365:1105::/::
hosts/dce3/gda [subsys/dce/cds-server none]:*:10366:1105::/::
hosts/dce1/cds-server [subsys/dce/cds-server none]:*:10367:1105::/::
hosts/dce1/gda [subsys/dce/cds-server none]:*:10368:1105::/::
hosts/brandy/self [none none]:*:10369:12::/::
hosts/brandy/cds-server [subsys/dce/cds-server none]:*:10370:1105::/::
hosts/brandy/gda [subsys/dce/cds-server none]:*:10371:1105::/::
hosts/largo/self [none none]:*:10373:12::/::
hosts/rum/self [none none]:*:10376:12::/::
hosts/west/self [none none]:*:10377:12::/::
hosts/largo/cds-server [subsys/dce/cds-server none]:*:10378:1105::/::
hosts/largo/gda [subsys/dce/cds-server none]:*:10379:1105::/::
hosts/west/cds-server [subsys/dce/cds-server none]:*:10380:1105::/::
hosts/west/gda [subsys/dce/cds-server none]:*:10381:1105::/::
hosts/rum/cds-server [subsys/dce/cds-server none]:*:10382:1105::/::
hosts/rum/gda [subsys/dce/cds-server none]:*:10383:1105::/::
hosts/chlorine/self [none none]:*:10384:12::/::
hosts/traffic/self [none none]:*:10385:12::/::
hosts/traffic/cds-server [subsys/dce/cds-server none]:*:10386:1105::/::
hosts/traffic/gda [subsys/dce/cds-server none]:*:10387:1105::/::
hosts/chlorine/cds-server [subsys/dce/cds-server none]:*:10388:1105::/::
hosts/chlorine/gda [subsys/dce/cds-server none]:*:10389:1105::/::
hosts/dce9/self [none none]:*:10390:12::/::
hosts/dce5/self [none none]:*:10435:12::/::
hosts/dce6/self [none none]:*:10436:12::/::
hosts/dce4/self [none none]:*:10437:12::/::
hosts/dce7/self [none none]:*:10438:12::/::
seacladlargop [seacllargog seacllargoo]:*:10716:1223::/tmp/:/bin/ksh:
seaclclilargo0 [seacllargog seacllargoo]:*:10717:1223::/tmp/:/bin/ksh:
seaclclilargo1 [seacllargog seacllargoo]:*:10718:1223::/tmp/:/bin/ksh:
rgy_edit=> login cell_admin 
Password: 
Memory fault(coredump)
root@dce1>

[11/3/93 public]
Fix:    Invalidate handle cache following close

[11/11/93 public]
Closed.



CR Number                     : 9306
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : sec_admin initial message
does not match documentation
Reported Date                 : 11/1/93
Found in Baseline             : 1.0.2
Found Date                    : 11/1/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : command_ref/security/man8sec/sec_admin.8sec
admin_gd/security/security/12_trouble.gpsml
admin_gd/security/security/9_recon.gpsml
admin_gd/security/security/8_maint.gpsml
admin_gd/security/security/10_setup.gpsml
Sensitivity                   : public

[11/1/93 public]

The following is the output of sec_admin, in DCE 1.0.3, after being
invoked:

root@trinidad> sec_admin 
Default replica:  /.../admin_cell/subsys/dce/sec/bronze
Default cell:     /.../admin_cell


The admin guide shows the following output:

root@trinidad> sec_admin 
Default cell:     /.../admin_cell
Default replica:  /.../admin_cell/subsys/dce/sec/bronze
State: in service slave


Two things:

First,  the order of the first two lines is reversed.
Second, the third line is not displayed by current implementation - although
        it would be nice.


Whether the documentation is correct and the code deviated, I do not know.

[11/3/93 public]

Assigned this CR to Pam Millett and changed "fixby"
date to 1.1 per doc group (Hal Lichtin) policy 
(defer bugs filed after 1.0.3 soft freeze date).

[11/5/93 public]

This is also true of the sec_admin man page. See
admin_ref/man8sec/sec_admin.8sec

[11/9/93 public]

One more note on the output of sec_admin. The documentation, admin guide
and admin reference, is pretty consistent showing the expected output 
from sec_admin. What it seems to have happened is that at some point the
sec_admin code diverged from the documentation and changed the ouput.  

In my opinion the documentation makes more sense.  The code 
should be changed to reflect what has been documented; and remain 
faithful to it. Whether the code or the docs need to change to resolve
their discrepancies is not for someone else (at HP) to decide.

[11/8/93 public]
The documentation was written before sec_admin was implemented because of
documentation schedules that were not synchronized with our implementation
schedules.  The utility is correct and the documentation needs to be brought
up to date.

[6/21/94 public]
Fixed and verified.  Verified by me.

[09/22/94 public]
Closed bug.  Note that change associated with CR 9306 in
the following file was later commented out (.cS/.cE) as part
of the doc work for the dcecp conversion of the security section
of the Admin Guide:

admin_gd/security/security/8_maint.gpsml



CR Number                     : 9299
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Systest
Short Description             : The administration lists need
to be updated to support all the ref. patforms.
Reported Date                 : 11/1/93
Found in Baseline             : 1.0.3
Found Date                    : 11/1/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : Admin Checklists (cds,sec)
Sensitivity                   : public

[11/1/93 public]

Several of the admin lists need to be updated to support all the
reference platforms. 

The output of some of the commands need to be edited to reflect the 
most current changes.

[11/3/93 public]

All the changes had been submitted.

[11/12/93 public]

Closing this defect.



CR Number                     : 9291
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Admin Guide
Short Description             : Incorrect ktadd documentation in Admin Guide
Reported Date                 : 10/29/93
Found in Baseline             : 1.0.1
Found Date                    : 10/29/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : 4_accts.gpmsl
Sensitivity                   : public

[10/29/93 public]

(This was reported by a customer).

The example for ktadd in the OSF Admin Guide (Revision 1.0,Update 1.0.1,
July 1992) on page 4-15, section 4.7.1.4 shown below is incorrect :

     rgy_edit=> ktadd -p random_note_generation -f /dresden/srv_key -r
     /krb5/v5srvtab -r
     Enter Your Password:
     Enter password:
     Re-enter password to verify:
     rgy_edit=>

The line "Enter Your Password:" should be removed since the user 
is never prompted for his/her password.

[11/3/93 public]

Changed "fixby" date to 1.1 from 1.0.3 because the
doc group is now deferring bugs found after 1.0.3
soft freeze date (10/15/93).  Assigned to writer Pam Millett.

[11/8/93 public]
Fixed and verified.  Verified by Mike Burati.  
(Fixed for 1.0.3 because it was an easy fix.)

[11/11/93 public]

Verified change in latest doc build and closed this bug.



CR Number                     : 9274
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : API  key management test
Short Description             : key_mgmt_setup.sh fails to remove ktab file
Reported Date                 : 10/27/93
Found in Baseline             : 1.0.3
Found Date                    : 10/27/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
			src/test/security/api/moretests/key_mgmt_setup.sh
Sensitivity                   : public

[10/27/93 public]
If I have previously run the all_key_mgmt.tsh test on a mahine, it
leaves the ktab file in /tmp. In the file key_mgmt_set_key.tsh it
appears to be using the "/tmp/key_mgmt_test" as the name of the
ktab file. However, it may already exist in which case the test fails.

The solution is to modify key_mgmt_setup.sh to remove
"/tmp/key_mgmt_test".

[11/12/93 public]
Closed.



CR Number                     : 9271
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit tests
Short Description             : failures in rgy_edit test
Reported Date                 : 10/27/93
Found in Baseline             : 1.0.3
Found Date                    : 10/27/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
				src/test/security/api/moretests/rgy_account.sh
				src/test/security/api/moretests/rgy_group.sh
Sensitivity                   : public

[10/27/93 public]
In the rgy_group.sh shell script, which performs some tests on
groups for rgy_edit, the group "rom" is added with a hard coded group
number of 202. This causes the test to fail when that group number is
already used (e.g. if the defaults values are entered when configuring
security and CDS is also configured). I recommend changing this value
to something larger and not quite so common, such as 876.

In the rgy_account.sh shell script, which does account test, the
following error occurs:

Routine Tested:    rgy_edit command line
Tested for:        RA1 Adding Account: bullwinkle,rom,jwe

Failure Message (from rgy_edit):      ?(rgy_edit) "//vw/finger" - Unknown or red
undant keyword (Registry Editor/TTY Interface) (dce / sad)
Test Status:       Test FAILED
Failure Message:   rgy_edit test case failed with error 114

When I changed the following line this test passed:


previous lines
   rgy.sh $DEBUG $SAVE "RA1" "Adding Account: bullwinkle,rom,jwe" \
           "do acc" \
           'a bullwinkle -g none -o none -pw mooseandsquirrel -mp -dce- -m "Thi
s is a test" -h //vw/finger -s /bin/ksh'


new lines
   rgy.sh $DEBUG $SAVE "RA1" "Adding Account: bullwinkle,rom,jwe" \
           "do acc" \
           'a bullwinkle -g none -o none -pw mooseandsquirrel -mp -dce- -m \"Thi s is a test\" -h //vw/finger -s /bin/ksh'

[10/7/93 public]
This CR is a dup of 9239.

[10/27/93 public]
This is not a complete dup of 9239. The problem concerning group
202 being hard coded is still a problem in rgy_group.sh
and rgy_account.sh.

[11/11/93 public]
Closed.



CR Number                     : 9245
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_login API
Short Description             : name caches' mode: 644?
Reported Date                 : 10/22/93
Found in Baseline             : 1.0.2
Found Date                    : 10/22/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
	security/client/login/sec_login_pvt.c
	security/client/rca/secidmap.c
Sensitivity                   : public

[10/22/93 public]
  sec_id's name-cache files are now created in one place, and with mode
644. Is it not possible that this could be viewed as a security hole?
Could not an unscrupulous user on a machine dump the name-caches and
view the name caches of other users and see PGO entries whose scopes are
cloaked from him/her by specific ACLs?
  As an example, say a cell has a principal scope named
"BoardOfDirectors", whose leaves are not to be generally known through
the cell, and so this scope is blocked by ACLs. If a permitted user
translates a principal of that scope, the scope's contents are partially
revealed in their name cache file.
  An attempt to check this here gave inconclusive results. As
cell_admin, I created the scope "travis-test-scope" containing principal
"cloaked1".  I used acl_edit /.../cell/sec/principal/travis-test-scope
and deleted "unauth..." and "any_other", leaving user:cell_admin and
group:acct-admin both with [rcidDn]. As cell_admin, rgy_edit will 'view'
the contents of that scope and acl_edit allow me to bind to the scope
again. As 'travis' or when unauthenticated, rgy_edit still shows me the
contents of the scope!!  and acl_edit refuses to bind to the scope.

[10/22/93 public]

Yup, this is a bug.  It's currently created in sec_login_set_context like
this:

            ncfd=open(lcp->namecache_name, O_CREAT | O_TRUNC , 0644);

also, secidmap.c::add_namecache() calls fopen(filename, "a"), which will
create the cache with default permissions if it's not already there; this
should probably be changed to
	fd = open(..., O_CREAT|O_APPEND, 0600);
	outfile=fdopen(fd, "a");

[10/25/93 public]
You cannot remove permission to view the contents of your "scope" 
by deleting acl entries on the scope.  There is no permission bit
comparable to the UNIX search 'x' bit on directories.  To prevent
unauthorized users from viewing the contents of a directory, remove
the offending acl entries from each object in the directory AND
from the default_object, default_container acls of the directory
itself so that ACLs on newly created objects in the "scope" are 
correct.

[12/21/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 9239
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : Add account gives error for
command line option.
Reported Date                 : 10/22/93
Found in Baseline             : 1.0.3
Found Date                    : 10/22/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /security/utils/args.c,
/security/client/admin/rgy_edit/tty_io.c
Sensitivity                   : public

[10/22/93 public]

Running functional tests with the nightly build available on 10/21, got 2
failures as follows. This possibly happened with the rgy_edit fix submitted
on 10/20 (Cr's 9149 and 5939).

Routine Tested:   rgy_edit command line
Tested for:   RA1 Adding Account: bullwinkle,rom,jwe
Trace Message:   rgy_edit edit command: do acc
Trace Message:   rgy_edit edit command: a bullwinkle -g none -o none -pw
mooseandsquirrel -mp -dce- -m "This is a test" -h //vw/finger -s /bin/ksh
Trace Message:   rgy_edit edit command: quit
-n Failure Message (from rgy_edit): 
?(rgy_edit) "//vw/finger" - Unknown or redundant keyword (Registry Editor/TTY Interface) (dce / sad)
Test Status:h   Test FAILED
Failure Message:   rgy_edit test case failed with error 114
----------------------------------------------------------------

Here is the simple way to reproduce this problem:

rgy_edit=> do a
Domain changed to: account
rgy_edit=> add foo -g none -o none -pw test -mp -dce- -m "this is a dummy" -h /usr/users 
?(rgy_edit) "/usr/users" - Unknown or redundant keyword (Registry
Editor/TTY Interface) (dce / sad)

----------------------------------------------------------------------------
If there are no more parameters after the -m option string, it works ok.

rgy_edit=> add foo -g none -o none -pw test -mp -dce- -m "this is a dummy"
rgy_edit=>

[10/22/93 public]
I talked to Carolyn and we agreed that you can back out the change that you
believe caused this problem (try it in a sbox first). If that fixes the problem
then reopen that defect and change it to fixby 1.1 (it's really an enhancement)
and close this one after backing them out.

[10/22/93 public]
Changes made for CR's 5359,9149 are being backed-out.

[11/11/93 public]
Closed.



CR Number                     : 9218
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : fuzzy description in Admin
security overview ...
Reported Date                 : 10/21/93
Found in Baseline             : 1.0.2
Found Date                    : 10/21/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_gd/security/security/1_over.gpsml
Sensitivity                   : public

[10/21/93 public]


DCE 1.0.2 Admin Guide - Part 4 - Chapter 17.

The following paragragh in section 17.3 needs to be rewritten, it is
not clear.

   Although there is no relationship required between a principal's logical
   identy and any object in the name space, frequently just such a
   relationship may be desired and can be enforced.  In the Security 
   Service there is a corresponding object in the requistry database 
   for each principal name. The database object, which is created
   autimatically when a principal is created, contains attributes of the
   principal, such as account information.

[10/21/93 public]

Assigned this to HP security writer Pam Millett.

[3/2/94 public]
Fixed and verified.  I move this to the end of the section and 
combined with other naming information.  Since this was 
essentially and editorial change, I verified it.

[09/22/94 public]
Closed bug.



CR Number                     : 9212
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kdestroy
Short Description             : able to create empty file
Reported Date                 : 10/20/93
Found in Baseline             : 1.0.2a
Found Date                    : 10/20/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[10/20/93 public]
The following steps produce an empty file when write access should
not be allowed:
	- login as a dce_principal with write access to /:
	- kdestroy but don't logout of the shell
	- acl_edit /: and list/get permissions
   >         note that even though you are (to CDS anyway) unauthenticated,
   >         you still seem to have the permissions of the DCE principal 
   >         you were dce_logged-in as prior to the kdestroy.
	- attempt to write a file to  /: and note
	that you are able to create a file but not
	write to it ...
        ie: ls -l shows the file, but it will always be empty.
	- note that an any_other acl for rx access 
	will prevent this odd behavior

[10/20/93 public]
Assigning to Rajesh who has also reproduced this and is looking at it.

[10/20/93 public]
I talked with Craig and Tu about this behaviour. The basic problem is
that kdestroy does not call into the DFS kernel to destroy the kernel
credentials and does not invalidate any connections created by the
cache manager on behalf of the PAG that the kdestroy destroys.  
Its possible that the cm will have a connection open to a particular
server for a PAG when the kdestroy for that PAG is issued. Since
kdestroy does not call into the kernel to invalidate such connections,
the connection will be used successfully till such time the connection
validity time expires. The file, referred to by Gail, will be created
succesfully if the cm has a valid connection to use for the
AFS_CreateFile RPC. The reason the file has no data is because the
attempt to store the data via a StoreData RPC could fail, if the
StoreData needs to create a new connection. (Trying to establish a new
connection will fail because the user has no valid PAG anymore). This
will result in the StoreData failing with EACCES as the ICL traces
showed in this case.
Also the StoreData is synchronous with the last close of the file and
any error from StoreData is propogated back up to the close(2) syscall.
If the application (e.g. cp) used checked the return code from 
close, it would notice the error. But its likely that many applications
do not check return code from close.
Note that if the cm did not have any cached connections for the said
PAG to the particular server, it would create a new connection for
the AFS_CreateFile RPC itself, which would fail due to PAG not being
valid anymore.
Summarising, the behaviour is dependent on the system state at the
time of the kdestroy. And this is due to a bug in kdestroy, which
should make a syscall to do the invalidation. Craig has suggested a
workaround syscall that kdestory could make, reproduced below. Hence I
think that this bug should be reassigned to security. I have
reassigned it to Gail so that she can reassign it to the right
security person.
\bold{From}: Craig_Everhart@transarc.com
\bold{To}: Richard_Sanzi@transarc.com, Rajesh_Agarwalla@transarc.com,
    Pervaze_Akhtar@transarc.com, Ward_Travis@transarc.com
\bold{Subject}: kdestroy and saved credentials
I believe that the existing NEWTGT system call could be used to get the CM to 
purge its authentication state when a user does a kdestroy.  Basically, all 
that the call does is purge the connection state and set the current PAG's TGT 
lifetime to a given value.  Currently, it will fail with EINVAL if the given 
lifetime isn't in the future, since it expects to be extending the TGT 
lifetime.
The comment at the head of afscall_cm_newtgt() in src/file/cm/cm_xsyscalls.c 
suggests that it's already being ``called by security service routines when a 
user runs either dce_login or kinit.''  Probably a simple unlog() equivalent 
could be created by passing in, say, the current time plus one second as the 
lifetime value and then sleeping for a second (if you care).
The call signature is:
	afs_syscall(AFSCALL_NEWTGT, pag, lifetime)
	unsigned32 pag;
	time_t lifetime;
AFSCALL_NEWTGT is defined in <dcedfs/syscall.h> as 16.  A pag value of 0 uses 
the current pag, and the lifetime value must be no earlier than the current 
time(0) value.
Maybe this will help.
		Craig
Changed Component Name from `dfs' to `dce' 
Changed Subcomponent Name from `sec/acls/cm' to `security' 
Filled in Interest List CC with `cfe@transarc.com, jaffe@transarc.com' 
Changed Responsible Engr. from `Rajesh_Agarwalla@transarc.com' to `gmd@osf.org' 
Changed Resp. Engr's Company from `tarc' to `osf' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[10/20/93 public]
Add Jeff K to interest list.
Changed Interest List CC from `cfe@transarc.com, jaffe@transarc.com' to 
 `cfe@transarc.com, jaffe@transarc.com, jeff@transarc.com'

[10/21/93 public]
Assigning to Rajendra, security component lead. Note that I have bumped the
priority to 1 but have changed the fixby field to 1.0.3a since this is DFS
specific. The description sounds as if this is a general security hole of
which the empty file is just one possible symptom.

[10/21/93 public]
My understanding is that this is just normal behavior, but the CM gives an
odd-looking symptom because it uses multiple binding handles in a non-
deterministic fashion.  That is, a kdestroy doesn't magically invalidate
existing authenticated bindings anywhere in the universe that might have
been authenticated with the now-destroyed credentials; it would be crazy
from an efficiency standpoint to do an authentication challenge on every
RPC, for example.  What kdestroy does is prevent new authentications from
happening.  Thus, if you're running some user-space program that has
already authenticated a binding, and you do a kdestroy, that user-space
program's binding will continue to be authenticated for the lifetime of
the ticket (bogus parlance alert).
 
Perhaps the way that folks tend to avoid problems for user-space programs
is to cause them to exit when they want to keep them from using credentials.
 
Indeed, the DFS cache manager holds on to authenticated bindings well after
a user might have done a kdestroy or logged out or whatever.  This NEWTGT
call is a hack that might serve to help zap those authenticated bindings.
Ideally, if NEWTGT were to be used by kdestroy with any gracefulness, we'd
remove the check on the lifetime value.
 
I imagine that what looks most odd is that some of the CM's bindings are
authenticated and some are not; bindings are created, and authenticated,
on demand, based on usage.  The ones that are created after the kdestroy
clearly won't be able to authenticate.  Thus, one binding is used to create
the file (make the AFS_CreateFile RPC) and another is used to store its
data, generally in another CM thread, making the AFS_StoreData RPC.  It's
just not surprising that some of those bindings might be authenticated and
some might not be.  Even if we were to try to apply some sort of band-aid
here and under some circumstance (like being unable to authenticate a
new binding for a given user, with a certain class of error codes) proceed to
unauthenticate all bindings for that user, that wouldn't really fix the
apparent problem.  You could still get the AFS_CreateFile call to work with
an old binding and have the AFS_StoreData call fail, producing a zero-length
file.  The only difference would be that (if we got the set of error codes
right) any subsequent attempts for that user to do a file creation would
fail immediately, not generate a zero-length file.
 
But anyway, I thought the general problem had already been considered
intractable.

[10/22/93 public]

Doing this right requires a change to the behavior of AFSCALL_NEWTGT.
see 9244 for a description of this.

[10/22/93 public]

That "change" turns out to already be there in the code (psychic designers
strike again..).

[7/13/94 public]

The preceding comment suggests to me this problem should no longer exist.  
Gail, can you verify?

[9/1/94 public]
Dropping priority by 1 to indicate that we are not fixing this for the
mainline.  If fixed in time it will show up in unintegrated.

[9/21/94 public]

fixed (integrated, even..)



CR Number                     : 9149
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : Unable to add account
Reported Date                 : 10/18/93
Found in Baseline             : 1.0.3
Found Date                    : 10/18/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : ../src/security/utils/args.c and ../src/security/client/admin/rgy_edit/tty_io.c
Sensitivity                   : public

[10/18/93 public]

Using latest nightly build available this morning (10/18), rgy_edit account
add gives error as follows:

rgy_edit=> do a
Domain changed to: account
rgy_edit=> add test1
Enter account group [gname]: none
?(rgy_edit) Unable to add account "noneZ$ fK" - Group name contains an
illegal character (Registry Edit Kernel) (dce / sad)

[10/18/93 public]
Upon further testing, it appears that only interactive mode of rgy_edit is
broken. The command line mode for adding an account does work. Lowering
priority to 1.

[10/19/93 public]
Actually, this bug was caused in the effort to make interactive mode use the
same quoting and backslash escaping as the command line mode.  If you quote
the group name, org name, etc. in interactive mode, just the string itself 
will be added to the database.

[10/20/93 public]
Submit request sent to dce-drb.  Awaiting approval.

[10/21/93 public]
Fix submitted last night at 5 pm]

[11/11/93 public]
Closed.



CR Number                     : 9145
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : functional test failure.
Short Description             : sec_login_valid_and_cert api
test fails when tested for invalid password.
Reported Date                 : 10/18/93
Found in Baseline             : 1.0.3
Found Date                    : 10/18/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : ../src/test/security/api/moretests/login_test.c
Sensitivity                   : public

[10/18/93 public]

Running the security functional tests with the latest 1.0.3 build gives a
failure in sec_login_valid_and_cert api test when tested for invalid
password on 486 platform running osf1. This same test passes on hp/ux.

Here is the output with -d63 for 486 first and then for hp.

486 output:
----------

Begin sec_login_valid_and_cert_ident test

---------------------------------------------------------------
Routine Tested:   login_test
Tested For:       1 login_valid_and_cert_ident: good

Trace Message:    sec_login_setup_identity (flintstone 0.. ), status;
successful completion
Trace Message:    sec_login_valid_and_cert_ident ((null) .. ), status;
(null)
Trace Message:    Reset Login flag is false, AuthSrc is Network
Test Status:      Test SUCCEEDED
Status Returned:  0
Status Text:      successful completion

---------------------------------------------------------------
Routine Tested:   login_test
Tested For:       2 login_valid_and_cert_ident: passwd invalide

Trace Message:    sec_login_setup_identity (flintstone 0.. ), status;
successful completion

---------------------------------------------------------------
Routine Tested:   login_test
Tested For:       3 login_valid_and_cert_ident: default context

Trace Message:    sec_login_valid_and_cert_ident ((null) .. ), status;
(null)
Trace Message:    Reset Login flag is true, AuthSrc is Network
Test Status:      Test SUCCEEDED
Status Returned:  0
Status Text:      successful completion


Subtotal: 2 passed, 1 failed
Summary: 140 passed, 1 failed

End sec_login_valid_and_cert_ident test


hp/ux:
-----

Begin sec_login_valid_and_cert_ident test

---------------------------------------------------------------
Routine Tested:   login_test
Tested For:       1 login_valid_and_cert_ident: good

Trace Message:    sec_login_setup_identity (flintstone 0.. ), status;
successful completion
Trace Message:    sec_login_valid_and_cert_ident ( .. ), status; successful
completion
Trace Message:    Reset Login flag is false, AuthSrc is Network
Test Status:      Test SUCCEEDED
Status Returned:  0
Status Text:      successful completion

---------------------------------------------------------------
Routine Tested:   login_test
Tested For:       2 login_valid_and_cert_ident: passwd invalide

Trace Message:    sec_login_setup_identity (flintstone 0.. ), status;
successful completion
Trace Message:    sec_login_valid_and_cert_ident ( .. ), status; Invalid
password (dce / sec)
Trace Message:    Reset Login flag is true, AuthSrc is Network
Test Status:      Test SUCCEEDED
Status Returned:  0
Status Text:      successful completion


---------------------------------------------------------------
Routine Tested:   login_test
Tested For:       3 login_valid_and_cert_ident: default context

Trace Message:    sec_login_valid_and_cert_ident ( .. ), status; illegal
use of
default sec login handle (dce / sec)
Trace Message:    Reset Login flag is true, AuthSrc is Network
Test Status:      Test SUCCEEDED
Status Returned:  0
Status Text:      successful completion


Subtotal: 3 passed, 0 failed
Summary: 141 passed, 0 failed

End sec_login_valid_and_cert_ident test

[10/19/93 public]
Fix tested and submitted.

[11/11/93 public]
Closed.



CR Number                     : 9144
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : Merge problem breaking build
Reported Date                 : 10/17/93
Found in Baseline             : 1.0.3
Found Date                    : 10/17/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[10/17/93 public]
Apparently a submittion by sekhar on the 10/15 caused the following strings
to get inserted into security/client/login/sec_login_pvt.c

#if !defined(LINT) && !defined(apollo)
static char *VersionID =
<<<<<<< 1.1.16.2
    "$Id: c009144,v 1.5 94/03/15 15:23:40 nata Exp $";
======
    "$Id: c009144,v 1.5 94/03/15 15:23:40 nata Exp $";
>>>>>>> 1.1.18.2

I'm going to go ahead and fix it for now. When I'm done I'll update this
ot and mark it as fixed but I'll have someone here look at it on Monday
before closeing it......

[10/17/93 public]
Changed the above lines to 
#if !defined(LINT) && !defined(apollo)
static char *VersionID =
    "$Id: c009144,v 1.5 94/03/15 15:23:40 nata Exp $";
#endif 


The #endif was in the original too.

[11/11/93 public]
Closed.



CR Number                     : 9141
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : sec_login_import_context race conditions.
Reported Date                 : 10/15/93
Found in Baseline             : 1.0.2
Found Date                    : 10/15/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : 
	security/client/login/sec_login.c, sec_login_pvt.c, sec_login_cache.c
Sensitivity                   : public

[10/15/93 public]

if you call sec_login_import_context of the same underlying context (that
had not been imported before) in multiple threads, you may wind up with
multiple login contexts pointing at the same underlying data files.

I think the solution is to extend the scope of the critical section
covering the login context cache to cover the code between
sec_login_cache_lookup and the (possible) subsequent sec_login_cache_enter;
right now, sec_login_cache_lookup and sec_login_cache_enter both take and
release the lock, so the data structures themselves don't get scrambled,
but you can have some unexpected sharing of the underlying files, which
Just Shouldn't Happen.

The list of affected files above is a first-order guess.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 9138
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit client
Short Description             : rgy_edit wrong wrt site name & r/o
Reported Date                 : 10/15/93
Found in Baseline             : 1.0.3
Found Date                    : 10/15/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/admin/rgy_edit/ek_site.c
Sensitivity                   : public

[10/15/93 public]

site command in rgy_edit seems to be confused
---------------------------------------
1.  If site change is attempted to a slave which is
    unavailable, then the site subsequently displayed
    is none (even though the site is actually the master).

    # rgy_edit
    Current site is: registry server at /.../duh2/subsys/dce/sec/master
    rgy_edit=> site /.:/subsys/dce/sec/harps
    ?(rgy_edit) Unable to open the registry at site "/.:/subsys/dce/sec/harps"
    - Registry server unavailable (Registry Edit Kernel) (dce / sad)
    Current site is: registry server at <none>   <===== incorrect
    rgy_edit=> v                                 <===== displays master rgy
    nobody [nogroup none]:*:-2:-2::/::
    .....< rest of output deleted >....
    rgy_edit=> site
    Current site is: registry server at <none>   (read-only)
    rgy_edit=> site -u
    Current site is: registry server at /.../duh2/subsys/dce/sec/master
    rgy_edit=> site
    Current site is: registry server at /.../duh2/subsys/dce/sec/master
(read-only)
    rgy_edit=>

2.  Occasionally , site command shows the master registry as (read-only).
    Conversely a slave site is NOT displayed as read-only.
 - sekhar@apollo.hp.com (Sekhar Vajjhala) ]

[10/15/93 public]
Fix:    Don't overwrite the current context with a new context until the
        new one is known to have been successfully created.
	Don't assume status_ok means update site; check with readonly api.

[11/11/93 public]
Closed.



CR Number                     : 9125
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : typo, not -> no
Reported Date                 : 10/14/93
Found in Baseline             : 1.0.2
Found Date                    : 10/14/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_ref/man8sec/rgy_edit.8sec
Sensitivity                   : public

[10/14/93 public]
In the rgy_edit man page, the second sentence of the purge command in the
local registry section says "The command has not options or arguments", the
not should be a no.

[10/18/93 public]

Assigned this bug to myself.

[10/18/93 public]

Fixed typo in source file and closed bug.



CR Number                     : 9111
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : dce_login with illegal passwd leaves a credential file.
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.3
Found Date                    : 10/13/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : Unknown
Sensitivity                   : public

[10/13/93 public]

If an illegal password is supplied to dce_login, dce_login fails
but leaves behind a credential file. The credential file should
be deleted. 

The problem is that the credential file is created by 
sec_login_pvt_allocate_context() but is never cleaned out 
when sec_login_validate_identity() fails. 

I have a fix which seems to work - but I would like to convince myself
some more that it does not break anything. If I can do that within the 
next day or so, then I will submit the fix for 1.0.3.

[8/1/94 public]
Seems to be fixed. Closed.



CR Number                     : 9110
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd, sec_clientd
Short Description             : Redirection of output with -v does not work correctly.
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.2
Found Date                    : 10/13/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rs_main.c, sec_clientd.c
Sensitivity                   : public

[10/13/93 public]

Starting secd or sec_clientd with the -v option and redirecting
the output to a file does not work correctly.
           
The problem is that the code does not specify any buffering for
the output. So the defaults take effect. And by default output 
to a terminal is line buffered and output to a file is fully
buffered. So if secd (sec_clientd) is started with -v option
, the output is redirected to a file and secd (sec_clientd)
hangs, then the buffered output may not be written to the file,.
which is a hindrance when debugging.
           
I will fix this for 1.0.3 by making output to stdout and stderr
unbuffered. 

Note that DCE serviceability logging routines explicitly flush the
output (via fflush). So this may not be required in DCE 1.1.

[ sekhar 10/15/93 public]

Fixed. Verify by restarting secd and sec_clientd (after a cell
has been configured) with the -v option, redirecting the output
to a file, and making sure that the output is written immediately
immediately to the file .

Without this fix the output would never be written out for sec_clientd
and for secd, the output would be written out only when secd is 
stopped gracefully using sec_admin.

[11/11/93 public]
Closed.



CR Number                     : 9109
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : client/key_mgmt/seckey_util.c
Short Description             : Off-by-one error in sec_key_mgmt__resolve_mode()
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.2
Found Date                    : 10/13/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/key_mgmt/seckey_util.c
Sensitivity                   : public

[10/13/93 public]

Full Description:
        Function sec_key_mgmt__resolve_mode() in file
        security/client/key_mgmt/seckey_util.c has the
        following code

        ...
         if (strlen(keytab) + prefix_len > sizeof(ktname)) {
                p = malloc(strlen(keytab) + prefix_len + 2);
            } else {
                p = ktname;
            }
            if (p != NULL) {
                strcpy(p, prefix);
                p[prefix_len-1] = ':';
                strcpy(&p[prefix_len], keytab);
                ...

        When strlen(keytab)+prefix_len == sizeof(ktname),
        memory is not allocated, but stuff of length
        strlen(keytab) + prefix_len + 1 is copied into
        ktname, thereby overflowing into stack space
        NOT allocated for ktname.

Proposed Solution:
        Change the comparison to

         if (strlen(keytab) + prefix_len + 1 > sizeof(ktname)) {

           OR

         if (strlen(keytab) + prefix_len >= sizeof(ktname)) {

        One minor issue is with length of malloc'ed area in
        the next line - it is 1 more than needed.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 9104
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : ACL
Short Description             : 'default' tag in acl_entry union shouldn't be there
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.2
Found Date                    : 10/13/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/idl/aclbase.idl
Sensitivity                   : public

[10/13/93 public]
There's a 'default' tag in the sec_acl_entry_t union that shouldn't be there
(was left there from way back in the pre-pre-1.0 timeframe when the original
IDL (nidl?) compiler couldn't support unions without 'default' tags). This
will cause interoperability problems between releases if not removed.

[10/13/93 public]
Submitted fixed aclbase.idl, marked 'fix'.

[11/11/93 public]
Closed.



CR Number                     : 9092
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : security/client/login/sec_login.c
Short Description             : No prototype for crypt(), need
casting in the code
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.3
Found Date                    : 10/13/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : sec_login.c sec_login_pvt.c rsdb_acct.c
Sensitivity                   : public

[10/13/93 public]

Licensee reported:

" Since we build with an ANSI compiler and with HAS_STDLIB_H, the
 fake-stdlib.h is not included.  This seems to be the only place to
 get a prototype for the crypt() function, however, the lack of which
 causes compilation problems due to a type mismatch with the function's
 value as int.

 The files affected are:
        client/login/sec_login.c , and sec_login_pvt.c
"

I checked with AIX system and don't see any system include file defining
the prototype for crypt().

In sec_login_pvt.c, an explicit casting has been added for crypt() before
assigning to a var of type (char *).

The call to crypt() in sec_login.c (near line 557) should also be casted.

[10/13/93 public]
>explicit casting has been added
No no no!  This is brain-dead.  Put a proper declaration somewhere, if
it is needed.  Do not just throw in a cast!

[8/5/94 public]
RIOS seems to be the only reference platform with this problem.
The proto should be in unistd.h but is not there.  One should
really consider augmenting the system include file but ...

I am considering putting in an
#ifdef _AIX
char *crypt(const char *, const char *);
#endif 
at the beginning of sec_login_pvt.c and sec_login.c
and eliminate the casts.

Will do so if nobody objects.

[8/8/94 public]
Please do so.  Add a comment saying that this is working around an AIX
bug in unistd.h.  Maybe there is a header file which might be a better
place.  There seem to be other references to crypt in sec code that could
be interesting: 

absolut src/security$ find.fs | xargs gegrep '[^a-z]crypt *\('
./client/login/sec_login.c:            unix_key = (char *)crypt((char *)passwd->key.tagged_union.plain, (char *)pw_salt);
./client/login/sec_login_pvt.c:        pwd = (char *)crypt((char *)PLAIN_PASSWD(passwd), pw_passwd);
./client/unix_utils/login/login.c:      char *ctime(), *ttyname(), *stypeof(), *crypt(), *getpass();
./client/unix_utils/login/login.c:                              rval = strcmp(crypt(p, salt), pwd->pw_passwd);
./client/unix_utils/login/login.c:                      rval = strcmp(crypt(p, salt), pwd->pw_passwd);
./client/unix_utils/su/su.c:    char *crypt(), *getpass(), *getenv(), *getlogin(), *mytty();
./client/unix_utils/su/su.c:                    if (strcmp(pwd->pw_passwd, crypt(p, pwd->pw_passwd))) {
./idl/rs_prop_acct.idl:    * encrypted unix passwd (generated by the unix crypt() function). 
./krb5/include/bsdlib.h:char *crypt  (const char *, const char *);
./krb5/include/bsdlib.h:char *crypt  ();
./server/rsdb/rsdb_acct.c: *    conditionalize out crypt() prototype for OSF/1
./server/rsdb/rsdb_acct.c:    p = (char *)crypt((char *)plain_passwd, salt);
absolut src/security$



CR Number                     : 9086
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit saves ACL on exit even if one doesn't exist.
Reported Date                 : 10/11/93
Found in Baseline             : 1.0.2
Found Date                    : 10/11/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/admin/acl_edit/deif.c
Sensitivity                   : public

[10/11/93 public]
In almost all ACL managers, there's always an ACL on an object (they start off
with defaults).  In the sample ACL manager (and possibly in a 3rd party ACL
mgr, since the architecture allows it) there needn't exist an ACL on an object.
When no ACL exists initially, the first acl_edit command that adds anything to
an ACL will create the ACL from scratch at that point.  The problem occurs when
you run acl_edit on one of these no-initial-ACL objects, then exit (not abort)
without doing anything.  The 'exit' command currently always saves the ACL
before exiting the utility, and doesn't currently check to make sure that an
ACL exists, thus saving garbage back to the sample server.  The fix is simply
to have it only save the ACL when one exists (either by having looked it up
or as a result of acl_edit subcommands that created one for you).

[10/12/93 public]
Submitted fix, marked 'fix'.

[11/8/93 public]
Closed.



CR Number                     : 9073
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec.msg file
Short Description             : Need to add new sec_acl*
error status for CDS acl edit problem.
Reported Date                 : 10/7/93
Found in Baseline             : 1.0.3
Found Date                    : 10/7/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/idl/sec.msg
Sensitivity                   : public

[10/7/93 public]

Need to add a new error code for the CDS 4000 character limit problem when 
acl editing the same object (acl is larger than allowed/fixed size) The CDS
(CR number 7851) will use this new error code and submit changes after this
CR is fixed.

[10/12/93 public]
Submitted fix, marked 'fix'.

[11/8/93 public]
Closed.



CR Number                     : 9064
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : tests
Short Description             : query.c passes int instead of *int
Reported Date                 : 10/7/93
Found in Baseline             : 1.0.3
Found Date                    : 10/7/93
Severity                      : D
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : query.c
Sensitivity                   : public

[10/7/93 public]

These test commands/rgy/query.c passes an int instead of int*
to print_status at lines 469, 474, and 534

[10/7/93 public]
Janet has a fix for this already, and has graciously offered to submit it
for us.

[11/8/93 public]
Closed.



CR Number                     : 9057
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : tests
Short Description             : some tests require the caller
key version number be 1.  Not necessary.
Reported Date                 : 10/6/93
Found in Baseline             : 1.0.3
Found Date                    : 10/6/93
Severity                      : D
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : test/security/api/moretests/acct_rename.c
Sensitivity                   : public

[10/6/93 public]
Some of the tests in moretests require the caller_key (cell_admin -dce-) 
to be 1.  This is a pain when you dce_config to configure your cell
cause it forces you to change the password.  As long as you change
it to what it already is dce_config is happy, but the
tests fail cause of the version.  I want to change
the caller_key.version_number = 0.

These files:
	acct_add_del.c
	acct_admin_repl.c
	acct_lookup.c
	acct_passwd.c
	acct_rename.c
	acct_repl_all.c
	acct_user_repl.c
	auth_policy.c
	unix_getpwnam.c

I have the changes. HP - say the word and I'll submit them.

[10/7/93 public]
I assume this is where it's setting up a passwd structure to use for obtaining
credentials.  If it's a test that's explicitly testing password changing or
something where the version number would make a difference, then please let
us see the fix first.  If it's just the passwds used to log in, go ahead and
request DRB permission to submit them.

[11/11/93 public]
Closed.



CR Number                     : 9056
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : tests
Short Description             : sec_acl test releases handle incorrectly
Reported Date                 : 10/6/93
Found in Baseline             : 1.0.3
Found Date                    : 10/6/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_acl.c
Sensitivity                   : public

[10/6/93 public]
test/security/api/moretests/sec_acl.c calls sec_acl_release_handle with
the sec_acl_handle_t not a pointer.

I'll submit the fix.

[10/7/93 public]
Changed 'code' to test.  Janet has our approval to request that the DRB let
her submit the fix to this.

[11/11/93 public]
Closed.



CR Number                     : 8691
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : core dump: rgy_edit view (princ) -po
Reported Date                 : 9/25/93
Found in Baseline             : 1.0.2
Found Date                    : 9/25/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rgy_edit/tty_util.c
Sensitivity                   : public

[9/25/93 public]
  INVALID_OPT_DOMAIN() uses strcpy() to move the literal "principal" (of
length 9 + a NULL) into the auto variable "char domain_str[8]".
  On Solaris, this writes into the adjacent auto variable "error_buf".
The next sprintf() includes a %s for domain_str, and the results are a
mighty scribble (domain_str becomes infinite ..) and segv's rgy_edit.
  Fixed locally by changing domain_str to [32] (of only four cases,
the longest needed is really only 10).

[9/29/93 public]
Submitted fixed tty_util.c, marked 'fix'.

[10/14/93 public]
Closed.



CR Number                     : 8682
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Error Message Catalog
Short Description             : Bad wording for sec_login_s_already_valid
Reported Date                 : 9/24/93
Found in Baseline             : 1.0.3
Found Date                    : 9/24/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/idl/sec.msg
Sensitivity                   : public

[9/24/93 public]
The text for sec_login_s_already_valid currently says
"login context has been already been validated"
and the redundant department of redundant redundancy checks believes that this
is like dejavu all over again.

[9/29/93 public]
Submitted fixed sec.msg, marked 'fix'.

[10/14/93 public]
Closed.



CR Number                     : 8681
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 8172, 9800
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : memory leaks detected in sec_salvage_db -print and -reconstruct
Reported Date                 : 9/24/93
Found in Baseline             : 1.0.2a
Found Date                    : 9/24/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
.../security/server/sec_salvage_db/sec_svg_prt.c
.../security/server/sec_salvage_db/sec_svg_rec.c
Sensitivity                   : public

[9/24/93 public]

Several memory leaks were detected from sec_salvage_db -print|-reconstruct.
They should be fixed.

[2/7/94 public]

Some data were collected may be interested to some of you.

# of principal/acct | old salvager | new salvager | new salvager | new salvager
 in rgy database    |   -print     |   -print     |   -print     | -reconstruct
                    | ( with sort) | ( with sort) | (w/o sort)   |
--------------------+--------------+--------------+--------------+-------------
     1000           | 4300 Pages   | 1463 Pages   | 1200 Pages   | 5693 Pages
--------------------+--------------+--------------+--------------+-------------
     5000           | 7614 Pages   | 3573 Pages   | 2034 Pages * | 31405 Pages #

The time (users time) consumed on a HP/720 for case * is 3 minutes and 
for case # is 14 minutes.  Page size is 4096 Kb.  I had to reconfigure
HP-UX kernel parameter maxdsiz from 64 meg to 128 meg for case #; else
the process would just core dump because malloc returns NULL.  If you
have the same situation ( core dump on large database ) and there is
plenty of swap space available, check your system imposed process data-
size.

[5/13/94 public]
Closed.



CR Number                     : 8675
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : better adopt description in rgy_edit.8sec
Reported Date                 : 9/23/93
Found in Baseline             : 1.0.2
Found Date                    : 9/23/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_ref/man8sec/rgy_edit.8sec, 
/admin_gd/security/security/12_trouble.gpsml and 3_pgo.gpsml
Sensitivity                   : public

[9/23/93 public]
The adopt command in rgy_edit.8sec could use a better description.

It should be spelled out clearly that the name given must be a new pgo name
and that an existing name cannot be used.  Both Gail and I thought this at
first (probably due to the word adopt) and nothing in the doc told us this
wasn't possible.

The last paragraph of the adopt command is too weak.  The description of
the problem is not clear (again neither Gail or I understood it at first),
and there is no solution to the problem presented.  What do you do if this
happens?

[10/1/93 public]

Assigned this bug to writer Pam Millett.

[11/2/93 public]
Fixed and verified.  Verified by Mike Burati and Howard Melman.

[11/11/93 public]

Verified changes in latest doc build and closed this bug.
Also changed affected files to list admin_gd pathnames
(specifying "user guide" leads a bugmeister to believe that
the users_gdref contains the affected files.)



CR Number                     : 8673
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 8624
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy client binding
Short Description             : rgy site info default context dumps
Reported Date                 : 9/23/93
Found in Baseline             : 1.0.3
Found Date                    : 9/23/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec/client/rca/binding.c
Sensitivity                   : public

[9/23/93 public]
sec_rgy_site_{get, binding_get_info} pass the address of their context arg
to rca_lock_handle, but it's not an out parameter -- it should be copied so
callers can pass sec_rgy_default_handle directly.  Also, rca_unlock_handle()
needs to be conditional for when the default context encounters an error.

[10/15/93 public]
Fix:    Don't try to unlock handle if it wasn't successfully locked.

[11/8/93 public]
Closed.



CR Number                     : 8651
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : not portable to 64-bit architecture
Reported Date                 : 9/22/93
Found in Baseline             : 1.0.3
Found Date                    : 9/22/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : a bunch
Sensitivity                   : public

[9/22/93 public]
The security code does not run on 64-bit architectures.  I have
the fixes and will try to submit for 1.0.3

[11/8/93 public]
Closed.



CR Number                     : 8649
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : policy command listed twice in rgy_edit
Reported Date                 : 9/21/93
Found in Baseline             : 1.0.2
Found Date                    : 9/21/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_ref/man8sec/rgy_edit.8sec
Sensitivity                   : public

[9/21/93 public]
There are two references to the policy command in the Miscellaneous
Commands section of rgy_edit(8sec).  The first contains a lot of useful
information, the second just one sentence.   The second should be removed.

[9/22/93 public]
Fixed and verified.  Verified by me.

[11/11/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 8642
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : incorrect passwords not destroyedDEC
Reported Date                 : 9/21/93
Found in Baseline             : 1.0.3
Found Date                    : 9/21/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : src/security/client/login/sec_login.c
Sensitivity                   : public

[9/21/93 public]

Both sec_login_valid_and_cert_ident() and sec_login_validate_identity()
only destroy the password if it is able to successfully decrypt the
ticket granting ticket. Passwords should be destroyed even if the TGT
cannot be decrypted (an incorrect password is entered). It might
be that the password is slightly incorrect (a typo). This could remain
in memory and be susceptible to password guessing attacks.

[10/08/93 public]

Made sure that sec_login_validate_identity() and sec_login_valid_and_cert_ident()
call destroy_passwd(passwd) before returning on all conditions (fail or pass).

[10/14/93 public]
Closed.

[10/15/93]
1.1.9.4 overwrote changes I made and submitted version 1.1.9.3
Please merge correctly.

[10/20/93]
Fixed merge problem by hand.

[11/8/93 public]
Closed.



CR Number                     : 8637
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : incorrect description of security level selection for sec_rgy_site_open and sec_rgy_site_bind.
Reported Date                 : 9/20/93
Found in Baseline             : 1.0.2
Found Date                    : 9/20/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_rgy_site_open.3sec, 
sec_rgy_site_bind.3sec
Sensitivity                   : public

[9/20/93 public]

The sec_rgy_site_open() man page incorrectly states that:

	"sec_rgy_site_open() ... binds to a registry site
	at an arbitrary level of security."

In fact sec_rgy_site_bind binds at a predefined level of security.

Also, the sec_rgy_site_bind() man page states essentially the same thing,
which is more or less correct in this case but could be made more precise
by stating, for example, that: 

	"sec_rgy_site_bind ... binds to a registry site at 
	the security level specified by by the auth_info argument"

[9/22/93 public]
Fixed and verified.  Verified by Rob Stanzel.

[11/11/93 public]

Verified changes in latest doc build
and closed this bug.



CR Number                     : 8628
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd, 
admin_ref
Short Description             : how to document 
commands supplied as source code only
Reported Date                 : 9/17/93
Found in Baseline             : 1.0.3
Found Date                    : 9/17/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : 
command_ref/man8sec/su.8sec
command_ref/man8sec/chpass.8sec
admin_gd/security/security/4_accts.gpsml
admin_gd/security/security/8_maint.gpsml
Sensitivity                   : public

[9/17/93 public]
We need a statement on how to handle the documentation of 
commands supplied as source code only. Specifically, HP 
supplies chpass and su in source code and expects the 
DCE licensees to build and modify them to work on their 
platform.  Currently the DCE doc sec contains man pages and 
references for these commands.  Should the man pages and 
references be deleted?

[9/17/93 public]
I would probably delete the man pages and just information on these
commands in the porting guide.

[11/12/93 public]

Changed "fixby" from 1.0.3 to 1.1 per Hal Lichtin.

[3/16/94]

Hal Lichtin and Rajendra Desai agree that the way they
would like to proceed is to keep the su and chpass man
pages, but eliminate all the information on them and
replace it with a sentence that identifies
these commands as platform-specific and refers
the reader to his/her local operating system documentation.
Assigned this CR to Pam Millett (HP security writer).

Note that the affected files will soon be located
in /admin_ref/man8sec.

[3/28/94 public]

Discussion of using chpass with -l and -n options and
overrides needs to be revised as a result of this CR.
See the file /admin_gd/security/security/8_maint.gpsml.
(Section is "How passwd_override Handles Multiple Override Entries".)

[6/20/94 public]
Fixed and verified.  Verified by me.


0HISTORY Fri Sep 17 15:48:17 1993 melman	added/changed [melman 9/17/93 public]

[09/22/94 public]
Closed bug.



CR Number                     : 8624
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_rgy_site_get and sec_rgy_site_binding_get_info
Reported Date                 : 9/17/93
Found in Baseline             : 1.0.3
Found Date                    : 9/17/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : ec_rgy_site_get,  sec_rgy_site_binding_get_info
Sensitivity                   : public

[9/17/93 public]

The Description section of sec_rgy_binding_get_info states:

"If the context is the default context, the information for the default
binding is returned"

The Descritption section of sec_rgy_site_get states:

"If the handle is the default handle (as supplied by the
sec_rgy_site_open() routine), the routine returns the name of the
default site."

No information/definition of the default site/binding can be found by
looking at the man page for sec_rgy_site_open. 

By reading the DCE admin guide - core components section 24.1.1, one can
get an understanding of what is meant by the default security replica
(site). It appears that the default replica is modified via the sec_admin
site command, and that when passed Context=NULL, both
sec_rgy_binding_get_info and sec_rgy_site_get return information about the 
default replica/site.

Proposed Solution:

The descriptions of both sec_rgy_binding_get_info and sec_rgy_site_get
should be made consistent in their terminology (sites and contexts). Also
both descriptions should be modified to state how the caller indicates
the default site/context (with a NULL value passed to Context).

[9/20/93 public]
Assigned to me.

[9/23/93 public]
Fixed and verified.  Verified by Rob Stanzel.
Note that to obtain info on the default handle, you must 
initialize the context parm to sec_rgy_default_handle.     
You cannot do it by passing in null.  Also the sec_admin 
site command sets the default replica (i.e., the replica 
acted on by sec_admin) for the current sec_admin session.  
It has no affect on other prcoesses.  Binding to the 
default handle (sec_rgy_default_handle) 
will return the output parms described in sec_rgy_get_info 
and sec_rgy_binding_get_info, but the handle will not be returned.

[11/11/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 8620
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : Clarify order of prompts 
when using rgy_edit to change a password
Reported Date                 : 9/17/93
Found in Baseline             : 1.0.3
Found Date                    : 9/17/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : admin_gd/security/security/4_accts.gpsml
Sensitivity                   : public

[9/17/93 public]
Clarify order of prompts when using rgy_edit to change a password

[9/17/93 public]
Fixed and verified.  Verified by me.

[11/15/93 public]

Verified change in latest doc build and closed this CR.



CR Number                     : 8619
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : Change note to say 
sec_rgy_wait_until_consistent not available in 1.0.3.
Reported Date                 : 9/17/93
Found in Baseline             : 1.0.3
Found Date                    : 9/17/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_rgy_wait_until_consistent.3sec
Sensitivity                   : public

[9/17/93 public]
Change note to say sec_rgy_wait_until_consistent not 
available in 1.0.3.

[9/17/93 public]
Fixed and verified.  Verified by me.

[11/11/93 public]

Verified change in latest doc build and closed
this bug.



CR Number                     : 8609
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_rgy_site_is_readonly does not return status values
Reported Date                 : 9/15/93
Found in Baseline             : 1.0.2
Found Date                    : 9/15/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_rgy_site_is_readonly.3sec
Sensitivity                   : public

[9/15/93 public]

The man page for sec_rgy_site_is_readonly indicates that the error
sec_rgy_server_unavailable is somehow an important or significant 
aspect of the behavior of this function. Since sec_rgy_site_is_readonly
has no output parameters, and only returns a boolean, indicating whether
or not the site is an update or slave site, mention of
sec_rgy_server_is_unavailable under ERRORS is not appropriate.

On examination of the implementation, it appears that the lower level function,
rca_site_check_readonly, does percieve status values but that these values
are not made available via the public function sec_rgy_site_is_readonly.

Given a return value which can represent only whether or not the site
is an update site, coupled with evidence, that there are errors which
can be detected by the lower level function, it is clear that the caller
of sec_rgy_site_is_readonly will not be able to distinguish whether or not
the returned master/query status of the replica was determined in the
presence or absence of errors. The presumption being that the caller should
not rely on information determined in the presence of errors.

Proposed Enhancement:

Add output status parameter to function to make it possible to disambiguate
master/query status from presence of errors. If this is not done, the
ERRORS section should probably be removed and possible replaced with a note
about whether or not one or both of the returned values (true/false) can be
returned when the routine failed to determine the type of the site.

[9/15/93 public]
Assigned to me.

[09/16/93 public]
Surely Ron isn't suggesting changing the API now!?  Changing the docs
is the best we can do (or add another routine)

[9/15/93 public]
Fixed and verified. Verified by Rob Stanzel.  To fix this CR, the Errors 
section was deleted and the Return Values section enhanced to read: 
"The routine returns TRUE if the registry site is read-only or if there was 
an error using the specified handle or FALSE if the registry site is an update site."

[11/11/93 public]

Verified changes in latest doc build and closed this bug.



CR Number                     : 8599
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa, i486, rs6000
S/W Ref Platform              : aix, hpux, osf1
Component Name                : sec
Subcomponent Name             : test/systest/security/sec.rgy.7
Short Description             : script runs_loops.ksh is missing
Reported Date                 : 9/14/93
Found in Baseline             : 1.0.3
Found Date                    : 9/14/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : Makefile, run.sec
Sensitivity                   : public

[9/14/93 public]

[ /test/systest/security/sec.rgy.7 at 22:07 (PM) Monday ]

release   -o bin -g bin -m 755 -tostage
/u3/devobj/sb/nb_ux/src/../install/hp800/dcetest/dce1.0 -fromfile \
/project/dce/build/dce1.0.3-snap/src/test/systest/security/tetexec.cfg \
/test/tet/system/security/tetexec.cfg
/test/tet/system/security/tetexec.cfg: copying from \
/project/dce/build/dce1.0.3-snap/src/test/systest/security/tetexec.cfg
/test/tet/system/security/tetexec.cfg: owner bin, group bin, mode 0755
/test/tet/system/security/tetexec.cfg: installing as \
/u3/devobj/sb/nb_ux/src/../install/hp800/dcetest/dce1.0/test/tet/system/securi\
ty/tetexec.cfg
make: don't know how to make run_loops.ksh (continuing)

[9/17/93 public]
RUN_LOOPS.KSH was in the wrong directory.  It is now in the tools directory
where it belongs.  The fix and other changes will show up in the 17-Sep-93
nightly build.  Jeff Barry.



CR Number                     : 8597
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_rgy_site_binding_get_info() and sec_rgy_site_get() provide duplicate functionality
Reported Date                 : 9/14/93
Found in Baseline             : 1.0.3
Found Date                    : 9/14/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_rgy_site_get, sec_rgy_site_open_query, 
sec_rgy_site_open_update, sec_rgy_site_open
Sensitivity                   : public

[9/14/93 public]

The functionality provided by sec_rgy_site_binding_get_info() appears to
make the function sec_rgy_site_get() unnecessary. The documentation for 
sec_rgy_site_binding_get_info() speaks of server name, while the
documentation for sec_rgy_site_get() speaks of site name. It apperars that
despite the difference in names given to the returned values, the
implementations are the same.

Proposed solution:

Simplyfy the API by defuncting sec_rgy_site_get or at least marking it as
on it's way out (and therefore not recommended).

[9/15/93 public]
Assigned to me.

x

[9/22/93 public]
Status changed to fix.  Waiting to change it to 
verified until Joe Pato approves wording.

[11/8/93 public]
Status changed to verified.  Verified by Joe Pato.  
Note that this change also affects sec_rgy_site_open_query, 
sec_rgy_site_open_update,and sec_rgy_site_open.  The suite 
of sec_rgy_site_bind calls are recommended in place of 
all the sec_rgy_site calls.

[11/11/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 8589
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 8588
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_rgy_site_binding_get_info(3sec) incorrectly documents what is retunred in server name.
Reported Date                 : 9/13/93
Found in Baseline             : 1.0.2
Found Date                    : 9/13/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_rgu_site_binding_get_info.3sec
sec_rgy_site_get.3sec
Sensitivity                   : public

[9/13/93 public]

Full Description:

        The sec_rgy_site_binding_get_info man page in DCE 1.0.2 says that
this routine will return "the name of the node on which server is
resident" in the server_name argument. Actually, depending on how the 
site was opened (sec_rgy_site_open), sec_rgy_site_binding_get_info will
return either the CDS (e.g. /.../tofino_cell/subsys/dce/sec/master) name
of the security server or the protocol tower  (e.g.
ncadg_ip_udp:130.105.1.60) identitying the bound security server.

Repeat By:

        Call sec_rgy_site_open with "" site name and pass the rgy_handle
        to sec_rgy_site_binding_get_info and see what it returns via the
        server_name argument. Also look at the sec_rgy_site_binding_get_info
         man page in DCE 1.0.2 doc.

Proposed Solution:

        modify the documentation.

[9/15/93 public]
Assigned to me.

[9/22/93 public]
Fixed and verified.  Verified by Rob Stanzel.  
Note that we used this CR as an opportunity to 
add statement about memory that is allocated for 
cell name, site name, server name and string binding.

[11/11/93 public]

Verified changes in latest doc build and closed
this bug.



CR Number                     : 8577
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : change to sec_acl_mgr calls
Reported Date                 : 9/9/93
Found in Baseline             : 1.0.3
Found Date                    : 9/9/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_acl_mgr calls
Sensitivity                   : public

[9/9/93 public]
In sec_acl_mgr calls, change "This call is provided in source code 
form only" to "Only the interface for this call is provided as a guideline." 
(from Mike Burati).

[9/10/93 public]
Fixed and verified.  Verified by Mike Burati.

[9/10/93 public]
Marked 'verified' since it wasn't in the previous update.

[11/15/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 8576
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : for sec_login_validate_identity.3sec and sec_login_valid_and_cert_ident.3sec, add statement that 
the password parm passed in is erased after call completes 
processing it.
Reported Date                 : 9/9/93
Found in Baseline             : 1.0.3
Found Date                    : 9/9/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
sec_login_validate_identity.3sec, sec_login_valid_and_cert_ident.3sec
Sensitivity                   : public

[9/9/93 public]
This CR comes from mail I received from Mike Burati.

[9/10/93 public]
Fixed and verified. Verified by Mike Burati.

[11/15/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 8571
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : remove sec_id_e_foreign_cell_referral 
error message from sec_id calls
Reported Date                 : 9/8/93
Found in Baseline             : 1.0.3
Found Date                    : 9/8/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
sec_id_parse_name.3sec
sec_id_gen_group.3sec
sec_id_gen_name.3sec 
sec_id_parse_group.3sec
Sensitivity                   : public

[9/8/93 public]
delete sec_id_e_foreign_cell_referral from sec_id calls

[9/10/93 public]
Fixed and verified. Verified by Rob Stanzel.

[12/21/93 public]
Closed.



CR Number                     : 8570
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : users_gdref
Short Description             : remove term "default" from 
table of acl types
Reported Date                 : 9/8/93
Found in Baseline             : 1.0.3
Found Date                    : 9/8/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
users_gdref/security/5_auth.gpsml
Sensitivity                   : public

[9/8/93 public]
Delete reference to default cell in table of acl types to 
be consistent with Joe Pato's corrections to glossary terms.

[9/10/93 public]
Fixed and verified.  Verified by me.

[12/21/93 public]
Closed.



CR Number                     : 8565
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : uid's are not encrypted
Reported Date                 : 9/7/93
Found in Baseline             : 1.0.2
Found Date                    : 9/7/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
admin_gd/security/security/8_maint.gpsml
Sensitivity                   : public

[9/7/93 public]
    From: pau@watson.ibm.com (Pau-Chen Cheng)
    To: dce-talk@osf.org
    Subject: Encrypted UNIX ID in override file ?
    Date: Tue, 7 Sep 1993 17:28:28 -0400
	    
    In DCE Adminsitration Guide, V1.0.2, page 24-6, section
    24.3.2, the first sentence explaining the "principal_uid" file:
    
      ".... which contains an encrypted UNIX ID..."
                       	
It should say: "...which contains a UNIX ID..."

[9/10/93 public]
Fixed and verified.  Verified by me.

[11/11/93 public]

Verified changes in latest doc build and closed this bug.



CR Number                     : 8507
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : Example Acl Manager
Short Description             : svr_example/dacl_manager.c Fcn rdacl_get_access cannot be redeclared.
Reported Date                 : 8/24/93
Found in Baseline             : 1.0.3
Found Date                    : 8/24/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/admin/acl_edit/svr_example/dacl_manager.c
Sensitivity                   : public

[8/24/93 public]
ple/dacl_manager.c
"../../../../../../../src/security/client/admin/acl_edit/svr_example/dacl_manage
r.c", line 1373.7: 1506-132 (S) Function rdacl_get_access cannot be redeclared.
*** Error code 1 (continuing)

[8/24/93 public]
Ayup, that there's a copy/paste error that looks like it's been there forever,
which means that this could never have been built on a RIOS. That's scary.
It's just the non-STDC signature of rdacl_get_access in dacl_manager.c that's
got a couple extra args from a copy/paste error.  Raj, since this is assigned
to you, could you just fix it and submit it? (it's not supported, so you don't
need to do lots of testing, just make sure it builds on RIOS).  I can't build
on RIOS at the moment.

[8/25/93 public]

Removed two extra arguments from rdacl_get_access function signature in the
dacl_manager.c file for RIOS build. Fix submitted.

[10/14/93 public]
Closed.



CR Number                     : 8496
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 8123
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rdacl manpage
Short Description             : delete rdacl manpages?
Reported Date                 : 8/23/93
Found in Baseline             : 1.0.3
Found Date                    : 8/23/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : app_ref/man3sec/rdacl_get_printstring.3sec
app_ref/man3sec/rdacl_get_referral.3sec
app_ref/man3sec/rdacl_lookup.3sec
app_ref/man3sec/rdacl_replace.3sec
app_ref/man3sec/rdacl_get_access.3sec                
app_ref/man3sec/rdacl_test_access.3sec
app_ref/man3sec/rdacl_get_manager_types.3sec         
app_ref/man3sec/rdacl_test_access_on_behalf.3sec
app_ref/man3sec/rdacl_get_mgr_types_semantics.3sec
Sensitivity                   : public

[8/23/93 public]
I think we should remove the rdacl manpages.  Programmers are supposed to use the
sec_acl_XXX functions.

[8/23/93 public]
Not until we're convinced that the generic ACL manager is so complete that
there's no way anybody could need to write their own (the rdacl manpages are
there for server writers now, not client writers).

[08/24/93 public]
Assigned to writer Pam Millette.

[08/24/93 public]
Mike's right.  Instead the manpages should be changed to remove the
reference to the sec_acl_mgr routines; *those* should be flushed.  (I think
I opened an OT on doing that.)

[5/18/94 public]
Removed references to sec_acl_mgr call in following man pages:
app_ref/man3sec/rdacl_get_printstring.3sec
app_ref/man3sec/rdacl_get_referral.3sec
app_ref/man3sec/rdacl_lookup.3sec
app_ref/man3sec/rdacl_replace.3sec
app_ref/man3sec/rdacl_get_access.3sec                
app_ref/man3sec/rdacl_test_access.3sec
app_ref/man3sec/rdacl_get_manager_types.3sec         
app_ref/man3sec/rdacl_test_access_on_behalf.3sec
app_ref/man3sec/rdacl_get_mgr_types_semantics.3sec 

Verified by me.

[09/22/94 public]
Closed bug.



CR Number                     : 8477
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : login
Short Description             : krb creds inaccessible by forked child
Reported Date                 : 8/18/93
Found in Baseline             : 1.0.2
Found Date                    : 8/18/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_login_pvt.c
Sensitivity                   : public

[8/18/93 public]
Credential code assumed all systems disallow non-root chowns to other
users, but this is bsd behavior, and hpux is sys5.

[8/19/93 public]
Fix: added explicit root check to chowning code

[10/14/93 public]
Closed.



CR Number                     : 8476
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : key mgmt
Short Description             : sec_krb_register_server can leave bogus keytab entry
Reported Date                 : 8/18/93
Found in Baseline             : 1.0.2
Found Date                    : 8/18/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_authn.c
Sensitivity                   : public

[8/18/93 public]
A failing call to rpc_server_register_auth_info() leaves a bogus key
table entry because sec_krb_register_server() doesn't undo the new
allocation if sec_key_mgmt_get_key() doesn't succeed.

[8/19/93 public]
Fix:  dealloc incomplete entry

[10/14/93 public]
Closed.



CR Number                     : 8435
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : Two misspellings on page 4-21
Reported Date                 : 08/12/93
Found in Baseline             : 1.0.2
Found Date                    : 08/12/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rgy_edit.8sec
Sensitivity                   : public

[08/12/93 public]

On page 4-21 of the DCE 1.0.2 Administration Reference Guide in the
Security Service Commands there are two mispellings:

	1 - exmple should be example
	2 - charactes should be characters

[9/1/93 public]
Fixed and verified.  Verified by me.  (Note that I 
couldn't find the mispelling of characters.)

[08/12/93 public]
Assigned this CR to writer Pam Millette.

[9/8/93 public]
Closed bug. Affected file was admin_ref/man8sec/rgy_edit.8sec.
"charactes" typo exists on 4-21 of Ed. Services 1.0.2 Admin
Ref but does not currently exist in source. Assume it was
fixed during Prentice-Hall edits.



CR Number                     : 8422
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : port_gd
Short Description             : Better macro descriptions
Reported Date                 : 8/9/93
Found in Baseline             : 1.0.2
Found Date                    : 8/9/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : port_gd/[2-8]*.gpsml
Sensitivity                   : public

[8/9/93 public]
It would be nice if the list of macros in the security section of the
Porting Guide were alphabetized.  It would make it easy to look up macros.
This applies to the RPC and GDS sections as well, and probably all of them.

The security section doesn't mention the environment variable DEBUG_SEC (at
least that I could find).  It should say what the various settings are and
what they do.  I'm amazed that the testing section doesn't give this as
information on how to get debugging output.  It does mention the -verbose
and -debug switches on secd and sec_clientd but it doesn't describe their
output!

[08/10/93 public]
Assigned this CR to Porting Guide owner Doug Weir.

[08/12/93 public]
Note that for 1.1 the DEBUG_SEC stuff will probably go away in
favor of the standard serviceability stuff.

[09/21/93 public]
Alphabetized all symbol lists.

[11/07/93 public]
Added descriptions of how DEBUG_SEC and DEBUG_ACL work.

[11/12/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 8412
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : Typo in synopsis of sec_rgy_pgo_unix_num_to_name
Reported Date                 : 8/5/93
Found in Baseline             : 1.0.2
Found Date                    : 8/5/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_rgy_pgo_unix_num_to_name.3sec
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[8/5/93 public]
On the manpage for the sec_rgy_pgo_num_to_name function, the synopsis reads
sec_rgy_pgo_to_unix_num_to_id.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[08/05/93 public]
Assigned this CR to writer Pam Millette.

[9/1/93 public]
Fixed and verified. Verified by me.

[9/8/93 public]
Closed bug.



CR Number                     : 8404
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_admin
Short Description             : wrong index causes core dump
Reported Date                 : 8/2/93
Found in Baseline             : 1.0.2
Found Date                    : 8/2/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_admin.c
Sensitivity                   : public

[8/2/93 public]
   sec_admin> lr -a   causes no match due to the presence of both -all
and -addr, and so triggers an fprintf() which goes:
-----
            fprintf(stderr, "Unknown option %s\n", c->args[2]);
-----
   However the incorrect argument is c->args[1] (the loop index is 'i')
and the '2' touches a nil pointer.
   Workaround is to type 'lr -al' instead of the too-short 'lr -a'.
   Symptom on Solaris is a core dump on a segv.

[8/2/93 public]
Filled in Reported by Company's Ref. Number with `8460'

[9/29/93 public]
Submitted fixed sec_admin.c, marked 'fix'.

[10/14/93 public]
Closed.



CR Number                     : 8399
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 7705
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_gd
Short Description             : Remove sec_acl_mgr docs
Reported Date                 : 8/2/93
Found in Baseline             : 1.0.3
Found Date                    : 8/2/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1PH
Fixed In Baseline             : 1.1PH
Affected File(s)              : app_ref, app_gd
Sensitivity                   : public

[8/2/93 public]
OSF does not provide a generic ACL manager, just hokey sample code.  We
document the routines as sec_acl_mgr_XXX in the AppRefGuide as if those
routines existed.  This is very confusing.  We also discuss the routines
in the App Dev Guide as if they existed, but then we tell people (a bit
later on) that they don't exist, but we do give you source so you should
change them as you see fit.  That last part makes the AppRefGuide manpages
even more useless.  Undocument these routines, except perhaps a small
reference in somewhere to the source code.  (Note that in DCE 1.1 we will
be providing a true generic ACL manager.)

[08/03/93 public]
Assigned this CR to writer Pam Millette.

[9/17/93 public]
Assigned to Lisa Zahn.

[3/29/94 public]

Reassigned this CR to Peter Neilson (OSF ACL mgr lib writer).

[09/19/94 public]
In addition to the work Pam Millette did in 7705, defuncting the sec_acl_mgr*
man pages, I have removed references to them from these files -
  ./dce_books/app_ref/man3sec/rdacl_replace.3sec
  ./dce_books/app_ref/man3sec/sec_intro.3sec
  ./dce_books/app_ref/man3sec/sec_acl_calc_mask.3sec
Verified by rsalz.

[10/25/94 public]
Deferring this CR until 1.2.
There still seems to be a mention of the sec_acl_mgr routines in the file

app_gd/security/1_overv.gpsml

I think this reference should be removed.

[10/26/94 public]
Re-opening for fixing in Prentice-Hall phase of work.

[5/17/96 public]

This bug is closed; the final reference mentioned above seems to have
been long since removed.



CR Number                     : 8397
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rs_prop (dubious)
Short Description             : PGO scope check too general after propagation
Reported Date                 : 8/2/93
Found in Baseline             : 1.0.2
Found Date                    : 8/2/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : .../security/server/rs/rs_prop_pgo.c
Sensitivity                   : public

[8/2/93 public]
   The developer who triggered this is out of touch right now, I do not
know the exact circumstances under which he got this to happen; it
happened while I was on vacation. The developer who caused it saw no
errors and was unaware of the domino he knocked over.
   What happened is that he tried to rename a group which was under a
scope. Evidently, the master got past the check for '/' in the
'new_name' parameter of rsdb_pgo_rename() in rsdb_pgo.c (appx. line
1066). The resulting propagation record, however, took along the
'unscoped' name for the 'new_name' parameter.
---
   E.G. the replica saw this routine get invoked with 'new_name' equal
to 'pdhdir/g2' whereas the master must have seen it as only 'g2'.
In both cases, 'old_name' must have been 'pdhdir/g1' -- so the '/' check
in the code was a little too quick.
---
   The replica returns the error (sec_rgy_bad_name) to the master; the
master sees this and never gets past this error. The result is that the
replica stays online but reflects a registry of the past. The registry
as a whole becomes schizophrenic, with the master responding to queries
differently than all replicas.
   There is no simple way to fix the problem; one must stop all
replicas, wait for or force a checkpoint at the master (really?), and
use sec_admin 'initrep' (supported? tested in the system tests?) to get
all the replicas to just download the database instead of accept
propagations. I think. The checkpoint step (where I'd get a quick backup
of the master, which is now alone and in 'maint' mode and hence denying
updates!) is paranoid but wide to prevent any catastrophe while the
master is alone.
   The symptom here was that the registry went haywire; the master
got WAY ahead of (still in service, still answering, fossilized)
replicas. We had to stop the replicas to get the registry 'back' to
where others could use it. I bungled by allowing (by intruding with a
debugger) the prop record to get into the replica's update log, and now
I'm still trying to coerce it to do the update it was intended to do.
   Filed as an A defect because the error was not flagged when it
happened and proceeded to corrupt the registry in a way that looks to
require registry downtime and replica reinitalization (initrep,
potentially time-consuming) or replica recreation from scratch to
recover from.

[8/2/93 public]
   Here's sec_admin output from when the original symptom was noticed.
Replica 'k2' is down for a reason (long-lost slaves seem to not get prop
queue updates when they return) but 'highline' was in service and
answering.
		  ----- ----- ----- ----- ----- -----
sec_admin> lrep -prop
Default replica:  /.../rainier.dce.transarc.com
Default cell:     /.../rainier.dce.transarc.com
                                                                           .
                                                                           .
subsys/dce/sec/master (master)
                                                                           .
subsys/dce/sec/rrs_k2
          Propagation state:
          Last update time and seqno unavailable
                                                                           .
subsys/dce/sec/rrs_highline
          Propagation state:
          Last update delivered:   Tue Jul 27 08:21:15 1993
          Last update's seqno:     0.47604
          Number of outstanding updates: 276
          Last comm status:        Illegal PGO or directory name
                                                                           .
sec_admin>
		  ----- ----- ----- ----- ----- -----

[8/4/93 public]
  Here's more data on how to reproduce this. The developer who triggered
this has returned.
  First, sec_admin output which shows the master and slave to be working
fine before the problem:
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
subsys/dce/sec/master (master)
          State:                    - master
          Last update received at: Wed Aug  4 11:14:14 1993
          Last update's seqno:     0.48586
                                                                      .
subsys/dce/sec/rrs_highline
          State:                    - slave
          Last update received at: Wed Aug  4 11:14:14 1993
          Last update's seqno:     0.48586
                                                                      .
subsys/dce/sec/master (master)
          State:                    - master
          Last update received at: Wed Aug  4 11:15:05 1993
          Last update's seqno:     0.48587
                                                                      .
subsys/dce/sec/rrs_highline
          State:                    - slave
          Last update received at: Wed Aug  4 11:15:05 1993
          Last update's seqno:     0.48587
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
  Then, the developer does these commands on his terminal:
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
   % dce_login cell_admin -dce-
   Password must be changed!
   % rgy_edit -update
   Current site is: registry server at /.../rainier.dce.transarc.com/subsys/dce
   /sec/master
   rgy_edit=> do g
   Domain changed to: group
   rgy_edit=> add pdhtest/i_am_a_group
   rgy_edit=> help ch
                                                                      .
   Usage:
   c[hange] [group_name  [new_fields] [-nl|-l] [-al|-pr]]
        new_fields may include:
            [-n new_name] [-f new_fullname]
   rgy_edit=> scope pdhtest
   rgy_edit=> v
   pdhtest/i_am_a_group                         190
   rgy_edit=> ch pdhtest/i_am_a_group -n pdhtest/i_am_a_group/x
   ?(rgy_edit) Unable to change group  "pdhtest/i_am_a_group" - Illegal PGO or
   directory name (dce / sec)
   rgy_edit=> ch pdhtest/i_am_a_group -n pdhtest/temp
   rgy_edit=> ch pdhtest/temp -n pdhtest/i_am_a_group/x
   rgy_edit=> v
   pdhtest/i_am_a_group/x                       190
   rgy_edit=> q
   bye.
   %
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
  Finally, sec_admin output showing that the error has occurred, due to
the above session.
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
subsys/dce/sec/master (master)
          State:                    - master
          Last update received at: Wed Aug  4 11:15:39 1993
          Last update's seqno:     0.48591
                                                                      .
subsys/dce/sec/rrs_highline
          State:                    - slave
          Last update received at: Wed Aug  4 11:15:21 1993
          Last update's seqno:     0.48588
^Crainier# sec_admin
Default replica:  /.../rainier.dce.transarc.com/subsys/dce/sec/master
Default cell:     /.../rainier.dce.transarc.com
sec_admin> lr -al
Default replica:  /.../rainier.dce.transarc.com/subsys/dce/sec/master
Default cell:     /.../rainier.dce.transarc.com
                                                                      .
                                                                      .
subsys/dce/sec/master (master)
          Instance id: 000f2fbc-8339-1be5-9c78-c037cf05aa77
          Addresses:               ncadg_ip_udp:192.55.207.5[]
          State:                    - master
          Last update received at: Wed Aug  4 11:15:39 1993
          Last update's seqno:     0.48591
                                                                      .
subsys/dce/sec/rrs_highline
          Instance id: 006d32d8-a4ec-1c5e-9661-c037cf6b0000
          Addresses:               ncadg_ip_udp:192.55.207.107[]
          State:                    - slave
          Last update received at: Wed Aug  4 11:15:21 1993
          Last update's seqno:     0.48588
          Propagation state:
          Last update delivered:   Wed Aug  4 11:15:21 1993
          Last update's seqno:     0.48588
          Number of outstanding updates: 3
          Last comm status:        Illegal PGO or directory name (dce / sec)
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
	   ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
So this problem is reproducible....

[9/29/93 public]
 Raising to Sev 0.. this happened again about two weeks ago, and all
I had time to do with it was clean it up. The data is all already here.
Changed Priority from `1' to `0'

[9/30/93 public]
 This problem was caused by renaming scoped pgo at replicas (replicated from
master).  The code did not handle the scoping correctly.  I had the fix in
security/server/rs/rs_prop_pgo.c.  I had verify my fix mannually, can you
run your test to verify the fix also ?
 Second problem you mentioned here about the replica then is out of sync
with the master after the error point.  It is how the replication should
behave.  Once there is an error, master will retry the same replication 
until it succeeds ( we don't want replication data get out of sequence ).
And it can happen only because there is a bug, like this case.

you run it through test ?  
in rs_prop_pgo.c doesn't handle

[10/14/93 public]
Closed.



CR Number                     : 8335
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_login_get_pwent
Short Description             : get_pwent bug that will likely affect /bin/login programs!
Reported Date                 : 7/21/93
Found in Baseline             : 1.0.2
Found Date                    : 7/21/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/login/<machine>/sec_login.np.c
Sensitivity                   : public

[7/21/93 public]
Argh!  Yet another problem that I can't believe nobody's seen yet...
Each OS has it's own idea of the struct passwd typedef...
In 1.0.1, security just passed back the bsd4.4 version (because it was public).
In 1.0.2, we added conversion code that would convert the bsd4.4 pwent to what
each OS expected (via machine dependent files called sec_login_np.c).
Unfortunately, this code tried to be efficient by not doing the conversion
more than once.  This is ok, if the data doesn't change...

BUT, it does change in the following scenario:
If you have a login context, which has been set up, but not validated or
certified, then a sec_login_get_pwent() call will fill in the context's pwent
structure with data from /etc/passwd if possible, in order to support legacy
login programs, which need to check at this point if you're logging in as uid
0, in case you're not allowed to on that particular tty.  The OS dependent
pwent gets filled in with this data at that point, then later on when the
login program does the sec_login_get_pwent again to get the real data, it's
fetched into the context's bsd4.4 pwent structure, but not converted to the
OS structure (because of the bug I mention above).  THUS: login programs which
do the multiple sec_login_get_pwent() calls to support the uid0 tty checking,
will only get pwent data (ie: homedir, shell...) from /etc/passwd...

Workaround: use passwd_export *often*.
Fix: Will be coming real soon now.  We suggest you patch any existing 1.0.2
products with this fix as soon as possible.

[7/26/93 public]
Submitted fixed files, marked fix:
security/client/login/HP800/sec_login_np.c
security/client/login/RIOS/sec_login_np.c
security/client/login/PMAX/sec_login_np.c
security/client/login/SVR4/sec_login_np.c
security/client/login/AT386/sec_login_np.c

[10/14/93 public]
Closed.



CR Number                     : 8334
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd, admin_ref
Short Description             : Add the renewable ticket flag 
is not implemented.
Reported Date                 : 7/21/93
Found in Baseline             : 1.0.3
Found Date                    : 7/21/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_ref/man8sec/rgy_edit.8sec, 
admin_gd/security/security/4_accts.gpsml
Sensitivity                   : public

[7/21/93 public]
Remove all references that imply renewable ticket flag is implemented 
and tickets can be automatically renewed

[9/7/93 public]
Fixed and verified.  Verified by Mike Burati.

[7/21/93 public]

Some corrections:

The renewable ticket *flag* itself is implemented (as is the database
support for it), however, DCE cannot take advantage of it at the present
time and there may be bugs in the underlying support since it's untested.

[11/11/93 public]

Verified changes in latest doc build and closed this
bug. Also removed users_gdref from 'subcomponents' field
and added admin_ref, since no changes were made to the
users_gdref book as a result of this CR, but changes
were made to admin_ref rgy_edit.8sec page for this CR.



CR Number                     : 8326
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : doc
Short Description             : Confusing variable name in examples
Reported Date                 : 7/20/93
Found in Baseline             : 1.0.2
Found Date                    : 7/20/93
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_acl_mgr_configure.3sec, 
sec_acl_mgr_is_authorized.3sec, app_gd/security/7_acl.gpsml
Sensitivity                   : public

[7/20/93 public]
In example code that uses sec_acl_mgr_is_authorized(), the manager_type parameter
position always contains the value "sec_acl_type_object".  Unfortunately, this is
one of the defined values of an enum of type sec_acl_type_t (defined in
/usr/include/dce/aclbase.idl).  Programmers trying to sort out how to implement
ACL managers may be mislead by this coincidence (error?)--I just had to explain
it to someone, as a matter of fact.

Example code that appears in this form can be found on several of the Security
API man pages (for example, sec_acl_mgr_is_authorized() and sec_acl_mgr_configure())
and in at least one place in the App Dev Guide (sorry, I can't remember where).

[08/11/93 public]
Changed CR In to doc, Component to sec and owner to Hal.

[08/12/93 public]
Changed "Responsible Engineer" to Pam Millette, owner of this
part of the DCE doc.

[9/8/93 public]
Fixed and verified.  Verified by Mike Burati.

[11/11/93 public]

Verified changes in latest doc build and close this CR.



CR Number                     : 8319
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_rgy_ API doc
Short Description             : sec_rgy_site_close return codes
Reported Date                 : 7/20/93
Found in Baseline             : 1.0.2
Found Date                    : 7/20/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_rgy_site_close.3sec
Sensitivity                   : public

[7/20/93 public]
  Bob noticed that the man page for sec_rgy_site_close includes
"sec_rgy_server_unavailable" as a possible return code. A quick look
at that routine seems to say that that code cannot be returned. Which is
correct?
  PS: A new line of code to clear the status after the DISPOSE() call
might mask any uninteresting errors from rpc_binding_free()...

[07/29/93 public]
Assigned to writer Pam Millette.

[9/3/93 public]
Fixed and verified. Verified by Mike Burati.

[9/8/93 public]

Closed bug.



CR Number                     : 8275
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : control variables multiply defined
Reported Date                 : 7/14/93
Found in Baseline             : 1.0.2
Found Date                    : 7/14/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : src/test/rpc/rtandidl/testsh/tsh.h
Sensitivity                   : public

[7/14/93 public]

The file tsh.h is included in various modules which are used to compose
the program testsh. The following variables

    int errorflag;
    int errdefault;

    int verboselog ;
    int verbosescrn ;
    int verbose ;
    int scroutput ;
    int outputmask ;

are declared both in tsh.h and main.c, the result being that each module
which includes tsh.h has it's own copy of these variables. In the mcase of
main.c (which also includes tsh.h) there are two copys of these variables
and the corresponding multiple definition complaints by the compiler, not
to mention the problems which can be expected at link time, and the
inability to for the modules other than main to be affected by the values
assigned to these variables during argument parsing.

Propsed Solution:

prefix the definitions of these variables in tsh.h with extern.

    extern int errorflag;
    extern int errdefault;

    extern int verboselog ;
    extern int verbosescrn ;
    extern int verbose ;
    extern int scroutput ;
    extern int outputmask ;

[9/29/93 public]

Fix submitted. Removed multiple definitions from tsh.h file. Tested on
hp/ux.

[11/11/93 public]
Closed.



CR Number                     : 8266
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_acl API
Short Description             : Memory allocation errors and
leaks in sec_acl_bind
Reported Date                 : 7/13/93
Found in Baseline             : 1.0.2
Found Date                    : 7/13/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/client/acl/daclbind.c
Sensitivity                   : public

[7/13/93 public]

Licensee reported:

The sec_acl_bind function has the following bugs (even in DCE1.0.2) :

i) There is an off-by-one memory allocation error. The code has to malloc
memory for a string formed by concatenating the following strings :

residual, "/", unresolved_name

The call to malloc only allocates strlen(residual) +1 + strlen(unresolved_name)
bytes. This does not allow for the terminating '\0' character.

ii) The following check is code is used to modify unresolved_name :

if (unresolved_name[0] == '/')
    unresolved_name++;

ie. unresolved_name is no longer a valid argument for free().

We can, subsequently, get the assignments :

component_name = unresolved_name;

...

new_context->component_name = component_name;

In sec_acl_release_handle, the code will try to free h->component name
which will be the cause of malloc problems.

The unresolved_name++; should be replaced by something like :

{
    unsigned_char_p_t tmp_unresolved_name;

    tmp_unresolved_name = (unsigned_char_p_t)malloc(strlen((char *)unresolved_name));
    strcpy((char *)tmp_unresolved_name, (char *)(unresolved_name + 1));
    free(unresolved_name);
    unresolved_name = tmp_unresolved_name;
}

iii) The code has the following memory leaks.

residual, and unresolved_name are not freed up.

Repeat By:

Code inspection.

Proposed Solution:

Context diffs gives solutions for the problems i) & ii). Problem iii)
should be soluble by using similar code to that for solving the problems with
component_name & resolved_name or maybe sec_acl_bind should be rewritten to
make the clean up easier to implement.

*** /dce_tmp/dce1.0.2/dce/src/security/client/acl/daclbind.c    Thu Mar 18 22:43 :55 1993
--- daclbind.c  Mon Jul 12 17:26:52 1993
***************
*** 419,429 ****
          /* if leading slash on unresolved_name, remove it */
          if (unresolved_name)
              if (unresolved_name[0] == '/')
!                 unresolved_name++;
          /* component_name = unresolved_name + optional residual */
          if (bind_to_entry) {
              component_name = (unsigned_char_p_t) malloc(
                                              strlen((char *) residual) + 1 +
                                              strlen((char *) unresolved_name));
              strcpy((char *) component_name, (char *) unresolved_name);
              strcat((char *) component_name, "/");
--- 419,437 ----
          /* if leading slash on unresolved_name, remove it */
          if (unresolved_name)
              if (unresolved_name[0] == '/')
!             {
!                 unsigned_char_p_t tmp_unresolved_name;
!                 /* Must rellocate memory so that we can validly free unresolve d_name pointer if we do component_name = unresolved_name later. */
!                 tmp_unresolved_name = (unsigned_char_p_t)malloc(strlen((char * )unresolved_name));
!                 strcpy((char *)tmp_unresolved_name, (char *)(unresolved_name +  1));
!                 free(unresolved_name);
!                 unresolved_name = tmp_unresolved_name;
!             }
          /* component_name = unresolved_name + optional residual */
          if (bind_to_entry) {
              component_name = (unsigned_char_p_t) malloc(
                                              strlen((char *) residual) + 1 +
+                                             /* Fix off-by-one error. */ 1 +
                                              strlen((char *) unresolved_name));
              strcpy((char *) component_name, (char *) unresolved_name);
              strcat((char *) component_name, "/");

[7/13/93 public]
Ugh!  Assigned this to myself, since I'm probably the one that made those
brain-dead mistakes.

[8/19/94 public]
I have a fix for this in my sandbox that just needs testing, so I've reassigned
this to myself.

[8/23/94 public]
Submitted fix, marked 'fix'.



CR Number                     : 8262
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : internal binding
Short Description             : rca_rebind() should fall back to pe_site
Reported Date                 : 7/13/93
Found in Baseline             : 1.0.2
Found Date                    : 7/13/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/rca/internal_binding.c
Sensitivity                   : public

[7/13/93 public]
The current implementation of rca_rebind() does not fall back to
pe_site after exhausted CDS binding lookup.  This will cause
the move from secd to a client node not working.

[7/13/93 public]
Since Rob has more fix related to internal_binding, assign to him so he can
do a mass submit and make sure they are all working.

[8/2/93 public]

Fixed locally.

[8/19/93 public]
Fix: rca_rebind:  if nsi fails, fall back to pe_sites

[10/14/93 public]
Closed.



CR Number                     : 8261
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : internal binding
Short Description             : Secd should bypass CDS on startup.
Reported Date                 : 7/13/93
Found in Baseline             : 1.0.2
Found Date                    : 7/13/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/server/rs/rs_login.c
Sensitivity                   : public

[7/13/93 public]
The current implementation of secd enables nsi lookup for
secd startup, which is against the original design - secd
should bypass CDS lookup for secd usually starts before CDS.

[8/2/93 public]

Fixed locally.

[8/4/93 public]
File will be submitted soon.  Mark fix.

[10/14/93 public]
Closed.



CR Number                     : 8253
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Users Guide
Short Description             : User Gd needs to document ACL non-locking limitation
Reported Date                 : 7/9/93
Found in Baseline             : 1.0.2
Found Date                    : 7/9/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 5_auth.gpsml, acl_edit.1sec
Sensitivity                   : public

[7/9/93 public]
There is a limitation in the ACL remote interface, in that you cannot place a
lock on the ACL, with the intent of replacing it after reading and modifying
(because the interface is not transaction based...).  Because of this
limitation, it is possible for two users to simultaneously use acl_edit on the
same ACL, make separate modifications, and the one replaced last will overwrite
any changes made by the other.  This limitation and the potential effects of
the problem need to be documented in the User's Guide where it describes the
manipulation of DCE ACLs.  A warning that the number of principals with rights
to modify any particular ACL should be limited (to 1 if possible), to help
prevent the problem from occurring should also be added.

[9/3/93 public]
Fixed and verified.  Verified by Mike Burati.

[9/8/93 public]
Closed bug.



CR Number                     : 8214
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : replication
Short Description             : Slave startup causes Fatal Error on Master
Reported Date                 : 06/29/93
Found in Baseline             : 1.0.3
Found Date                    : 06/29/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
	security/server/rs/rs_log_acct.c
Sensitivity                   : public

[06/29/93 public]

Split Server Cell Configuration:

	5 HP 9000/700 Machines
		1 = SEC Master, CDS Client, DTS Local Server, dts_ntp_provider
		2 = SEC Client, CDS Server, DTS Local Server
		3 = SEC Slave, CDS Client, DTS Clerk
		4 = SEC Slave, CDS Client, DTS Local Server
		5 = SEC Client, CDS Client, DTS Clerk

Any attempt by the master to propagate a change to the slaves causes the
following error on the master:

gdb secd
...
...
...
SECD Exporting bindings to /.../dce11_cell/subsys/dce/sec/master
-----
ncadg_ip_udp:130.105.201.10[1037]
    Attempt i am slave [Key = '0abcecec-73f0-11cc-aba9-080009257d69']
-----
ncadg_ip_udp:130.105.201.10[1037]
    i am slave succeeded [Key = '0abcecec-73f0-11cc-aba9-080009257d69']
SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
SECD prop_driver: rep binding, get auth handle succeeded
SECD prop_driver: rep binding succeeded
SECD prop_driver: prop succeeded
SECD prop_driver: attempt get rep binding
SECD prop_driver: attempt get rep binding auth info
SECD prop_driver: rep binding, get auth handle succeeded
SECD prop_driver: rep binding succeeded
SECD prop_driver: prop succeeded
SECD prop_driver: propagate updates to slave
Registry: Fatal Error - Prop task aborting
 at line 764 of file ../../../../../src/security/server/rs/rs_prop_tasks.c
Registry: Fatal Error - DT exiting with alert exception
 at line 487 of file ../../../../../src/security/server/rs/rs_main.c - 0x0000000
0 - successful completion
Registry: Fatal error in main thread; exiting

Program exited with code 01.
(gdb) bt
No stack.
(gdb) info reg
The program has no registers now.
(gdb) x/16i $pc-32
0x805a2020 <end+1079546644>:    Cannot access memory at address 0x805a2020.

[7/9/93 public]

Fix submitted

[07/12/93 public]

Fix verified by executing dceseact and dcesepol system tests for 60 hours
in a master and two slave configuration.  There were more than 31,000
propagations executed during the testing.

[07/23/93 public]
Closed



CR Number                     : 8205
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : correct login_context input parm description
Reported Date                 : 6/28/93
Found in Baseline             : 1.0.2
Found Date                    : 6/28/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 17
Sensitivity                   : public

[6/28/93 public]
Fix description of login_context in sec_login calls to remove 
reference to passwords.

[6/30/93 public]
Fixed and verified.  Verified by Mike Burati.

[08/19/93 public]
Closed bug.  The affected files are

	sec_login_certify_identity.3sec
	sec_login_export_context.3sec
	sec_login_get_current_context.3sec
	sec_login_get_expiration.3sec
	sec_login_get_groups.3sec
	sec_login_get_pwent.3sec
	sec_login_import_context.3sec
	sec_login_newgroups.3sec
	sec_login_purge_context.3sec
	sec_login_refresh_identity.3sec
	sec_login_release_context.3sec
	sec_login_set_context.3sec
	sec_login_setup_first.3sec
	sec_login_setup_identity.3sec
	sec_login_valid_and_cert_ident.3sec
	sec_login_validate_first.3sec
	sec_login_validate_identity.3sec



CR Number                     : 8191
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : query test
Short Description             : query test dumps core if executed without an argument
Reported Date                 : 6/22/93
Found in Baseline             : 1.0.2
Found Date                    : 6/22/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /test/security/commands/rgy/query.c
Sensitivity                   : public

[6/22/93 public]

Executing the query test without an argument causes query to dump
core.  Also, query does not respond properly to the -help option.
It does give you the help text, but then goes ahead and attempts to
run the query test anyway.  Should give you the help text and exit.

[9/14/93 public]

Fix submitted and tested against 1.0.3 on hp/ux.

[11/11/93 public]
Closed.



CR Number                     : 8190
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : registry
Short Description             : Need way to override groups
Reported Date                 : 6/22/93
Found in Baseline             : 1.0.2
Found Date                    : 6/22/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : client/admin/passwd_export/passwd_export.c
Sensitivity                   : public

[6/22/93 public]

    I posted this to dce-tech and never recieved a reply. On advice from the
    OSF, I'm posting it as an OT defect.

    The question is: "Why is there no group_override file?"

    There is support for overriding the group of a given account in the
    password override file, but there doesn't seem to be a way to override
    the GID associated with a group in the registry -- if your implementation
    of UNIX doesn't match. Remember my comparison of OSF/1 as shipped by
    OSF and DCE as shipped by OSF? Well, I'll remind you of one detail:

    OSF/1 thinks that GID 3 is 'bin', the DCE registry thinks that GID 3
    is 'kmem'. Now, without a group override file, on a system with single
    login-in, a random file in /usr/bin is going to be displayed as 'kmem'
    rather then 'bin'.

    This doesn't seem like a feature.

    Now, I can't quite figure out why the registry defines groups at all.
    The argument about why it defined principals and accounts was that it
    was necessary to define them so that the password_override file could
    override them. This doesn't seem to apply, since there isn't a
    group_override file at all.

    So, should I enter a OT defect saying the default groups defined in the
    registry should just be deleted?

    Consider this OT defect as saying that.

[8/2/93 public]

Lots of discussion remains on this issue - won't be addressed in
1.0.3.  Changed to enhancement, to be addressed in 1.1 timeframe.

[8/4/93 public]

    As discussed in mail, I don't believe it requires a lot of discussion to
    remove the default (canned) groups from the registry. They (the canned
    groups) serve NO USEFUL PURPOSE and cause problems! They cannot be
    overridden, are UNIX-centric, and shouldn't exist.

[8/4/93 public]

Just because there may not be much engineering effort required to
make the change you suggest does not make it an appropriate change
for 1.0.3.  We will address it one way or another in 1.1.  Changed
back to enhancement.  This will not be fixed for 1.0.3.

[1/10/94 public]
Removing canned groups is not an option at this time because of the
possible compatibility problems it might cause... and the fact that
we could be overcommitted already...   Joe and Walt have discussed
this matter and have agreed that the way we have solved the problem
for our product should be integrated into DCE1.1.   This solution
involves providing a simplistic group override mechanism (not a
whole new remote interface like sec_clientd provides for accounts)
via passwd_export.  When passwd_export creates the group file from
the registry, if /opt/dcelocal/etc/sys.group exists, it will be
prepended to the file.  Using this method, both sets of groups (the
locally overridden and the ones from the rgy) will end up in the
group file, but since all uses of the file read it sequentially and
stop when they find what they're looking for, the overridden ones
will be used.  Each vendor may then ship a sys.group file containing
the overridden groups necessary for their platform.

[8/29/94 public]
This was fixed a long time ago by DEC.  Marked 'fix'.



CR Number                     : 8172
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 9800, 8681
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : sec_salvage_db -print -princ hangs with 10,000 account registry
Reported Date                 : 06/17/93
Found in Baseline             : 1.0.2a
Found Date                    : 06/17/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec_salvage_db
Sensitivity                   : public

[06/17/93 public]

In the process of trying to move a large registry (10,000 accounts) from
one cell to another the "sec_salvage_db -print -princ" command hangs.  I
created the 10,000 account registry using the functional test "update".
I was able to execute "sec_salvage_db -print" on all other record files.

[06/18/93 public]

Further testing has shown that the maximum number of accounts is somewhere
between 3,000 and 4,000.

[06/24/93 public]

On DCE 1.0.3i using HP-UX, sec_salvage_db -print dumped core after outputting
4530 complete records from a 10,000 account registry.  The last record output
is:

================================================================================
Record_Number = 4532
Object_Type = PRINC
Name = principal/dceqa05p/X00513
UUID = 00001209-7008-21cc-8d00-0800093251fc
Unix_ID = 4617
Is_Alias_Flag = false
Is_Required_Flag = false
Quota = 0
Fullname = person 00513
Member_Name = dceqa05g/X00011
Acct_Group_Name = dceqa05g/X00011
Acct_Org_Name = dceqa05o/X00003
Acct_Creator_Name = cell_admin
Acct_Creation_Time = 1993/06/23.18:24
Acct_Changer_Name = cell_admin
Acct_Change_Time = 1993/06/23.18:24
Acct_Expire_Time = none
Acct_Good_Since_Time = none
Acct_Valid_For_Login_Flag = true
Acct_Valid_As_Server_Flag = false
Acct_Valid_As_Client_Flag = false
Acct_Post_Dated_Cert_Ok_Flag = false
Acct_Forwardable_Cert_Ok_Flag = false
Acct_TGT_Auth_Cert_Ok_Flag = false
Acct_Renewable_Cert_Ok_Flag = false
Acct_Proxiable_Cert_Ok_Flag = false
Acct_Dup_Session_Key_Ok_Flag = false
Unix_Key = 76n4.5BcVdw0g
Plaintext_Passwd =
Home_Dir = /home/dceqa05p/X00513
Shell = /bin/csh
Gecos = office,work_phone,home_phone
Passwd_Valid_Flag = true
Passwd_Change_Time = 1993/06/23.18:24
Max_Certificate_Lifetime = 0
Max_Renewable_Lifetime = 0
Master_Key_Version = 1
Num_Auth_Keys = 1
Auth_Key_Version = 1

[8/2/93 public]

Fixed locally.

[9/22/93 public]

This sec_salvage_db problem was caused by no more memory/swap space 
available on the system.  Sec_salvage_db -print keeps in memory a 
sorted list of pgo's before it prints them out at the end of the
processing.  So there is always a system resource limit imposed depending
on how big the rgy database is.  This feature (sorted pgo's) provides
an easier way to examine pgo data and better test validation so we
think it is important to have it.  We will provide a sec_salvage_db 
command line option to turn on/off the sorting to solve this problem.
The fix will be in DCE 1.1 release.

There are memory leaks being detected ( so to make this problem even
more obvious :-) ) while I was chasing down this problem.  I will open 
another OT for it.

[2/7/94 public]
This is similar to what I got when my HP-UX kernel maxdsiz is configured 
as 64 meg.  Can you triple the size, providing you have enough swap
space, and give it a try ?   It worked when I double my maxdsiz for printing
5000 principal's rgy database.

[02/08/94 public]

I was able to do a "sec_salvage_db -print" and a "sec_salvage_db -print -sort"
using a 10,000 account registry on an H-P machine running DCE 1.1.  The "-sort"
option required ~24meg of paging space, about twice as much as without it.  The
problem is that I can not do a "sec_salvage_db -reconstruct" using the print
files generated by "sec_salvage_db -print".  I got "Memory fault(coredump)"
errors everytime I tried it.  I increased my maxdsiz to 268meg and tried
again, the machine rebooted itself.  I'll try a few more things and let you
know what happens.

[12/13/95 public]

This is fixed in DCE 1.2.1 
Closed



CR Number                     : 8171
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 5054
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_login_get_expiration: error in example
Reported Date                 : 6/17/93
Found in Baseline             : 1.0.2
Found Date                    : 6/17/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_login_get_expiration.3sec
Sensitivity                   : public

[6/17/93 public]

The app. ref. for sec_login_get_expiration() shows by example a use of
the function sec_login_refresh_identity which implies that 
sec_login_refresh_identity returns FALSE when status is set to
to sec_login_s_refresh_ident_change.

THis is inconsistent with the man page for sec_login_refresh_identity whose
description and example indicate that FALSE will be returned when the
login context cannot be renewed.

Proposed Solution:

Make bothe xamples consistent

[6/22/93 public]
Assigned this CR to writer Pam Millette.

[09/03/93 public]
This is not inconsistent.  The man page says that it returns  false when the
context cannot be renewed.  Getting this bad status (or any error status)
means that the context cannot be renewed, so it seems consistent to me...
There is a problem there in that the error code is
 sec_login_s_refresh_ident_bad
not ident_change as the example uses.

[9/3/93 public]
sec_login_s_refresh_ident_change changed to sec_login_s_refresh_indent_bad 
in example in sec_login_get_expiration.3sec.  Also 
changed "exit(error_context_expired)" to exit(error_context_not_renewable) 
in example.  

Status changed to verified.  Verififed by Mike Burati.

[9/8/93 public]

Bug closed. Affected file was:

app_ref/man3sec/sec_login_get_expiration.3sec



CR Number                     : 8167
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Incorrect assignment statement.
Reported Date                 : 6/17/93
Found in Baseline             : 1.0.2
Found Date                    : 6/17/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[6/17/93 public]

 At the end of the function sec_login_pvt_get_krb_tgt() there is the
following
 code:

         sec_lrgy_tgt_lookup(global_name, &ltgt, &lst);
         if (lst == error_status_ok)
         {
             if (ltgt.cell) free(ltgt.cell);
             if (ltgt.principal) free(ltgt.principal);
             sec_login_pvt_lrgytgt_to_lc(&ltgt, lcp);
             *stp == error_status_ok;
         }
     }
 }

Proposed Solution:

        Change the last statement from: *stp == error_status_ok;
                                    to: *stp = error_status_ok;

[8/16/93 public]
	fixed as suggested.

[10/14/93 public]
Closed.



CR Number                     : 8154
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : security bugs in app_ref
Reported Date                 : 6/14/93
Found in Baseline             : 1.0.2
Found Date                    : 6/14/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : sec_rgy_pgo_get_members.3sec
Sensitivity                   : public

[6/14/93 public]

The security doc bugs indentified in the DCE 1.0.2 Release Notes, Section
1.10.7.1 should be fixed in the app_ref.

[6/16/93 public]
Fixed and verified.  Verified by Mike Burati.

[08/19/93 public]
Closed bug.



CR Number                     : 8139
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : man page of sec_acl_get_manager_types_semantics
Reported Date                 : 6/10/93
Found in Baseline             : 1.0.2
Found Date                    : 6/10/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_acl_mgr_get_manager_types_semantics, 
sec_acl_get_manager_types_semantics
Sensitivity                   : public

[6/10/93 public]

Full Description:

	The name for thsi routine should be sec_acl_get_mgr_types_semantics,
	not sec_acl_get_manager_types_semantics.

[8/19/93 public]
Defuncted sec_acl_mgr_get_manager_types_semantics and 
sec_acl_get_manager_types_semantics. 
Created sec_acl_mgr_get_mgr_types_semantics and 
sec_acl_get_mgr_types_semantics.
Verified by Mike Burati.

[08/26/93 public]
Closed bug.



CR Number                     : 8134
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : The security doc bugs
described in the 1.0.2 Release Notes, Section 1.10.4.4, should be fixed in
the DCE Administration Reference.
Reported Date                 : 6/10/93
Found in Baseline             : 1.0.2
Found Date                    : 6/10/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : sec_admin, sec_salvage_db, rgy_edit
Sensitivity                   : public

[6/10/93 public]

[06/18/93 public]

Fixed and verified.  Verified by Mike Burati, Hanfie Yu, and 
Bill Sommerfeld.

[08/19/93 public]
Closed bug.



CR Number                     : 8123
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : rdacl_get_access man page
Short Description             : Need to add error codes
Reported Date                 : 6/9/93
Found in Baseline             : 1.0.2
Found Date                    : 6/9/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rdacl_get_access.3sec
Sensitivity                   : public

[6/9/93 public]

Please to add the following error codes to the rdacl_get_access man page:

	- sec_acl_not_authorized
	- sec_acl_object_not_found
	- sec_acl_invalid_acl_type
	- sec_acl_invalid_manager_type

[08/02/93 public]
Actually, RDACL is the RPC interface, and not what users should
use.  I think the RDACL manpages should be removed.

[8/20/93 public]
I've added the error codes to rdcal_get_access and marked this 
CR as verified.  (Verified by Mike Burati.)

rsalz, the question of whether or not the rdacl manpages should be 
removed is beyond the scope of this CR.  Please open a separate 
CR for that question.

[9/9/93 public]
Closed bug.



CR Number                     : 8121
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : sec_login* man pages
Short Description             : Need to add explanation for
sec_login_s_not_certified
Reported Date                 : 6/9/93
Found in Baseline             : 1.0.2
Found Date                    : 6/9/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_login_get_pwent, 
sec_login_get_groups, sec_login_get_expiration, sec_login_inquire_net_info
Sensitivity                   : public

[6/9/93 public]

The following sec_login* api man pages require explanation on the error
code sec_login_s_not_certified. This error status is a warning and not a
real error; i.e. the login context has been validated only using sec_login_
validate_identity api. Applications which use these api's must not only
look for error_status_ok as a succesful completion but also look for the 
sec_login_s_not_certified error status as well.

	- sec_login_get_pwent
	- sec_login_get_groups
	- sec_login_get_expiration
	- sec_login_inquire_net_info

[8/20/93 public]
Fixed and verified.  Verified by Mike Burati.

[9/7/93 public]
Corrected Affected Files field.

[9/8/93 public]
Closed bug.



CR Number                     : 8119
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 6308,6199
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : sec_login_refresh_identity api
Short Description             : Missing error code
Reported Date                 : 6/9/93
Found in Baseline             : 1.0.2
Found Date                    : 6/9/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
sec_acl_mgr_is_authorized.3sec
sec_login_certify_identity.3sec
sec_login_setup_first.3sec
sec_login_setup_identity.3sec
sec_login_valid_and_cert_identity.3sec
sec_login_valid_from _keytable.3sec
sec_login_validate_first.3sec
sec_login_validate_identity.3sec
Sensitivity                   : public

[6/9/93 public]

The following error code must be added to the sec_login_refresh_identity
man page:
	- sec_login_s_refresh_ident_change

[7/13/93 public]

I had hoped to make this a dup of 6199, and reopen 6199 with the comments
included here, but 6199 has been made inactive, so I will just
modify this report; note that I have added 6308, and 61999 as related
defects.

sec_login_refresh_identity does not return
sec_login_s_refresh_ident_change, and one result of the rewrite
done for OT 6199, was that the example no longer features a test for
sec_login_s_refresh_ident_change. Some indication of an administrative
change is probably returned, but the key point is that the validation
should be done in either case, so checking for the "warning" status is
not a decision point in the use of this function.

What remains to be fixed in the man page:

1. The rewitten man page incorrectly refers to the output status
   value as the returned value of the function.

2. The man page does not describe the properties (when true is returned,
   and when false is returned) of the boolean returned value of the
   function

[7/15/93 public]
 I am not sure I completely understand what you are asking for in this CR.  
I will add a "Return Values" head that describes the meanings of the 
boolean32 value.  That should take care of 2. (above).  But, I'm not 
sure what you mean in 1.  Also are you requesting that the example be 
changed and the sec_login_s_refresh_ident_change error message 
be added to the list of errors?  (This error message isn't in the idl 
file.)  Could you restate your change requests?

[monzillo 7/19/93 public]  
In 1, I was stating that the following sentence,

"On successful completion, the routine returns error_status_ok."

which is used to describe the semantics of the output parameter, status,
implies that the "returned value" of the function is a status code.
I believe the sentence should be changed to something like
	
"On successful completion, status is assigned the value error_status_ok."

No, I am not suggesting that sec_login_s_refresh_ident_change error message
be added to the list of errors. That part of my note was only intended to
clarify that the original problem for which this defect had been opened
had already been resolved. I apologize for the confusion which probably
was caused by my not inserting a header between the original text and the
stuff I added

[9/1/93 public]
Fixed and verified.  Verified by Mike Burati.

[9/9/93 public]
Closed bug.



CR Number                     : 8116
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : Doc bugs reported in Release
Notes, Section 1.10.3.2
Reported Date                 : 6/8/93
Found in Baseline             : 1.0.2
Found Date                    : 6/8/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : 5_multicell.gpsml, 
12_trouble.gpsml, 4_accts.gpsml
Sensitivity                   : public

[6/8/93 public]

[6/18/93 public]
Fixed and verified.  Verified by Hanfei Yu and Bill Sommerfeld.

[08/19/93 public]
Closed bug.



CR Number                     : 8109
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_site_close does not release context mutex.
Reported Date                 : 6/7/93
Found in Baseline             : 1.0.2
Found Date                    : 6/7/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : client/rca/internal_binding.c
Sensitivity                   : public

[6/7/93 public]

sec_rgy_site_close does not do a mutex destroy when the a context is freed.

It is not clear to me when it is safe to destroy the mutex because of the
sequence of events in sec_rgy_site_close.  My comments are included and
the code is as follows:

    CLEAR_STATUS(status);

    context = (rca_pvt_handle_blk_t *) ext_context;

    if (context != sec_rgy_default_handle) {
        SEC_DBG_PRINTF(3,("%x: Dropping site refcount from %d", context, context
->refcount));
        assert (context->refcount >= 0);

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! right here the context refcount is modified without having a lock on the context !!!
!!!     is this correct or should the thread obtain the lock before modifying?       !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        context->refcount--;
        SEC_DBG_PRINTF(3,(" to %d\n", context->refcount));

        if (context->refcount == 0)
        {

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! What if another thread comes in here and bumps the refcount up?   !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


            assert (context->cache_next == NULL);
            assert (context->cache_prev == NULL);
            rca_lock_handle(&ext_context, status);

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! What if another thread comes in here and sits on rca_lock_handle?   !!!
!!! We want to nuke the mutex so where does that leave the thread that  !!!
!!! waiting?  does it matter?                                           !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

            if (STATUS_OK(status)) {
                if (context->auth_info.info_type == sec_rgy_bind_auth_dce)
                {

                       .
                       .
                       .

[6/13/93 public]
I have this on a local branch.

[8/19/93 public]
Fix: sec_rgy_site_close:  free handle mutex
(also reordered locking)

[10/14/93 public]
Closed.



CR Number                     : 8067
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db
Short Description             : sec_salvage_db wil clober
the default database if not specifying -dbpath in -reconsturct mode even print files doesn't exist.
Reported Date                 : 5/27/93
Found in Baseline             : 1.0.2
Found Date                    : 5/27/93
Severity                      : B
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : sec_svg_db.c sec_svg_rec.c
sec_svg_rec.h
Sensitivity                   : public
reported by                   : cuti

[5/27/93 public]
In test #2 of sec_salvage_db test, after running 
"sec_salvage_db -reconstruct -prtpath /tmp 2>> /tmp/salvager.out",
/opt/dcelocal/var/security/rgy_data got clobberred to have only three
files left (rgy, rgy_state, update_log).  If you kill secd right after
this test, you will have problem to bring it up again because of files
missing.
The problem is two folds:
1.  By default, if "-dbpath" option missing from "-reconstruct" mode, 
sec_salvage_db will write to default secd DB directory "/opt/dcelocal/var
/security/rgy_data".  But it didn't check if default secd DB exist or not,
and if it exists, it should ask user if (s)he wants to override the DB or
not.  I think this checking is necessary to avoid system administrator to
accidently destroy secd DB.
2.  Sec_salvage_db should check the existence of print file before proceeding
doing reconstruct work.
 
error case checking)

[3/8/94 public]
For reconstruction, sec_salvage_db now checks if all the required
print files exist, then proceeds its reconstruction work.
When -dbpath is not specified for reconstruction, sec_salvage_db
takes the default database as the database needs to be reconstructed.
To protect the default database from overwritten unintentionally,
a user comfirmation is required now.
This fix is tested against 1.1 BL3.

[5/13/94 public]
Closed.



CR Number                     : 8039
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_salvage_db test
Short Description             : sec_salvage_db test #1 failed.
Reported Date                 : 5/21/93
Found in Baseline             : 1.0.2
Found Date                    : 5/21/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
 ./test/security/api/moretests/salvager.sh
 ./test/security/api/moretests/salvager_sample.prt
 ./test/security/api/testsh/main.c
 ./security/h/rs_reserved.h
Sensitivity                   : public

[5/21/93 public]
Need to change foreign cell name in sec_salvage_db's fake db to "zzzzzzz",
so all the reasonable cell name will be print out ahead of this build-in
cell name when do "sec_salvage_db -print".  So the test will pass in all
the cell environment.

[8/5/93 public]
Files submitted.  Marked fix.

[11/11/93 public]
Closed.



CR Number                     : 8037
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_acl
Short Description             : Acl_handle wasn't
initialized to NULL in sec_acl_bind.
Reported Date                 : 5/21/93
Found in Baseline             : 1.0.2
Found Date                    : 5/21/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : security/client/acl/daclbind.c
Sensitivity                   : public

[5/21/93 public]
Ward Travis at Transarc found out this.
After Ward ported sec_acl test to SunOS 5.2, sec_acl test #2 always
have core-dumps on sec_acl_get_error_info() on that platform.  After
his investigation, he found out "The handle is not set by sec_acl_bind()
when the object is not found".  "The results is the following
sec_acl_get_error_info() call are unpredictable".  After my investigation,
I agree with him.  Hence this OT is opened.
People might argue that the test should not call sec_acl_get_error_info()
if sec_acl_bind() fails.  My point is that sec_acl_get_error_info() expects
acl_handle to be NULL, and it returns invalid handle.  sec_acl_bind() should
return acl_handle as NULL if the binding is not successful.  For some reason,
most of the platforms does initialize acl_handle to be NULL even the code didn't
do it.  Therefore, I am opening this as code bug not test bug.

[8/10/93 public]
Filled in Reported by Company's Ref. Number with `7783'

[8/23/94 public]
Submitted fix, marked 'fix'.



CR Number                     : 8027
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : replication
Short Description             : slave does not delete empty pgo directory
Reported Date                 : 5/20/93
Found in Baseline             : 1.0.2
Found Date                    : 5/20/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : .../security/server/rs_prop_pgo.c
Sensitivity                   : public

[5/20/93 public]
When a pgo_delete is propagated to a slave, the slave does
not delete the parent directory if the delete causes the
directory to be empty.  The fix is to have rs_prop_pgo_delete
call rs_util_pgo_delete rather than rsdb_pgo_delete.

[8/2/93 public]

Fixed locally.

[8/23/93 public]
Fixed as suggested by emartin 5/20/93 log.

[10/14/93 public]
Closed.



CR Number                     : 8013
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : libdce, dced
Short Description             : sec_key_mgmt_manage_key() ignores passwd lifetime
Reported Date                 : 5/18/93
Found in Baseline             : 1.0.2
Found Date                    : 5/18/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : security/client/key_mgmt/keymgmt.c
Sensitivity                   : public

[5/18/93 public]
Some analysis from OS/2 DCE development:

    This OT discusses the desire to enhance sec_key_mgmt_manage_key().
 It is currently very inflexible as to real-time changes by
 administrators to the "password lifetime" policy parameter.  For
 example, if server ABC has just done its periodic key update, which
 is currently, say, "once a month"; and an administrator changes
 "password lifetime" to 7 days, server ABC will nevertheless wait
 a month before re-updating its key.

    This is in stark contrast to the situation where "password expiration date"
 is set to the default, "forever".  Daemons wake up every hour to see
 if someone has set this parm to a finite value.

    My suggestion is to levy a maximum wait time of 24 hours.  Thus,
 if the next scheduled update is > 1 day away, the daemon still sleeps
 for 24 hours.  Perhaps a flag should be set prior to sleep to tell
 the daemon why it woke up.  The daemon should either then update the
 key or recompute its new wakeup time based on current value of
 "password lifetime".

    This cannot be a very difficult change to make, and clearly presents
 a better enforcement of the registry policy parameters.

[5/19/93 public]
It currently works the way it was designed to (and we knew that the next
key update would occur at the original time, but felt that since the passwd
lifetimes were advisory limits only, this was satisfactory).  I agree with
your suggestion that it wake up at some minimum limit, to see if the passwd
has expired (since we do it in the expiration==forever case, we should be
consistent), but this is an enhancement request, not a defect.

[8/21/95 public]
Since the previous comment I made (2+ yrs ago :-(), password expiration has
changed from an advisory state to an enforced state (you can no longer get
credentials with an expired password).  As such, I'm changing this back to
a defect, to make sec_key_mgmt_manage_key() more robust, to prevent expired
server keys.  Right now it sleeps until the key is expiring, then tries to
change it.  This needs to be modified to work like the machine context thread
where it sleeps until 10 minutes or so before expiration and start trying to
change it then (in case the cell is slow...).  Also, dced's thread that calls
this logs a returned error then waits 10 minutes before calling it again.
It should have a backoff timeout just like the machine context thread (start
with no wait between tries and back off to 5 minutes, but never back all the
way off to 10 minutes because that would be too long...).

[11/11/95 public]

Adding info from Ticket #22187 
------------------------------
One Line Description:

sec_key_mgmt_manage_key() is too slow when password expiration enabled

Full Description:

The man page for sec_key_mgmt_manage_key() states:
   "... idles until a short time before the current key is due to expire
   and then blah, blah, blah, ... updating both the local key store
   and the DCE Registry."

The code actually waits until the second at which the key expires
without any "short time before" time calculation.  Prior to 1.1,
this worked because password expiration was not enforced.  Now
password expiration is enforced so sec_key_mgmt_manage_key is no
longer able to complete its mission.


Repeat By:

Configure a principal as part of an organization which has pwdlife
policy set to a small value, say 10 minutes.  See if
sec_key_mgmt_manage_key() is able to keep the key from expiring.

Proposed Solution:

   /* wakeup a short time (picking 5 minutes) prior
   *  to the key expiring.
   */
   #define FIVE_MINUTES 300
   if (timer.tv_sec > FIVE_MINUTES) {
       timer.tv_sec = timer.tv_sec - FIVE_MINUTES;
   }
   else {
       timer.tv_sec = timer.tv_sec / 2;
   }

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 8012
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : replay cache should reside in /opt/dcelocal
Reported Date                 : 5/18/93
Found in Baseline             : 1.0.2
Found Date                    : 5/18/93
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
.../security/krb5/include/krb5/osconf.h
.../security/krb5/lib/rcache/rc_io.c
Sensitivity                   : public

[5/18/93 public]
Currently, the KDC replay cache is created by default in /usr/tmp.
The overwhelming majority of the DCE-relevant files reside in <dcelocal>,
whatever filesystem that may be or reside in (probably NOT /usr).  If the 
/usr filesystem fills up and the replay cache can't be written to, then 
security breaks (dce_login fails with "Registry Server Unavailable"; 
rpc_binding_set_auth_info returns KRB5KRB_AP_ERR_REPEAT status.)
Since the DCE administrator is probably monitoring the space for <dcelocal>, 
(or perhaps <dcelocal>/var, since that's what seems to fill up),
wouldn't it be reasonable to put the replay cache there too, so that
s/he doesn't get "sucker-punched" if /usr fills up?  How about putting
krb5_rcache in <dcelocal>/var/security/tmp?  The default directory is defined
by RCTMPDIR in src/security/krb5/include/krb5/osconf.h.
I realize the administrator can change the location of this cache with an
environment variable, but I'd like to see the default location changed.

[10/1/93 public]
Replay cache files is now created under /opt/dcelocal/var/security/rcache
directory, instead of /usr/tmp.  So they are grouped with DCE related files.

[10/14/93 public]
Closed.

[10/14/93 public]
  Shouldn't the switch statement cases at (new) line 107 be split up by
break statbements?
  For example:
>    getdir_st = 0;
>    if ( mkdir(dir, KRB5_RC_DIR_PROT) == -1 )
>      if ( errno != EEXIST ) {
>         switch (errno) {
>         case ENOSPC:
>             getdir_st = KRB5_RC_IO_SPACE;
>           break;
>         case EACCES:
>             getdir_st = KRB5_RC_IO_PERM;
>           break;
>       default:
>           break;
>         }
>      }
  ??

[10/18/93 public]
  Moved this back to 'open' to be sure that it wasn't overlooked...
Changed Status from `closed' to `open' 
Changed Fixed In Baseline from `1.0.3' to `'

[10/19/93 public]
  Fixed as suggested by travis@transarc.

[11/8/93 public]
Closed.



CR Number                     : 7957
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : replica manager init
Short Description             : bad update to replist for master
Reported Date                 : 5/7/93
Found in Baseline             : 1.0.2
Found Date                    : 5/7/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : .../security/server/rs/rs_prop_tasks.c
Sensitivity                   : public

[5/7/93 public]
  If a security master is initially configured with one set of RPC
supported protocol sequences (say, only udp), but later restarted with a
different set of supported sequences (say ucp and tcp), secd crashes.
  The problem arises when rs_rep_mgmt_init_master notices that the tower
vector is not the same as the stored master tower vector. This triggers
a replist update which in turn triggers a wakeup of the propagation tasks.
Unfortunately, the prop task module is still uninitialized, and
rs_prop_tasks_wakeup() tries to do a pthread_cond_broadcast on the
uninit'd C.V. prop_communicado_cv. The result is a core dump.
  The immediate workaround is not to change the protocol set, ever, for
secd. It is not clear to me at this time how I should prevent the core
dump from happening -- can rs_prop_task_start() be called any earlier?

[5/12/93 public]
My first thought is that rs_prop_tasks_wakeup should check whether
the module has been initialized and if it isn't just return without
doing the pthread_cond_broadcast.

[8/2/93 public]

Fixed locally.

[8/23/93 public]
fixed as suggested by emartin 5/12/93 log. In rs_prop_tasks_wakeup(), added :
 if (!rs_prop_tasks_inited) return;

[10/14/93 public]
Closed.



CR Number                     : 7947
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rsdb: acl mgmt
Short Description             : leaking rsdb_acl_t on delete path
Reported Date                 : 5/6/93
Found in Baseline             : 1.0.2b23
Found Date                    : 5/6/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rsdb_acl.c
Sensitivity                   : public

[5/6/93 public]
  It looks like rsdb_acl_delete() calls rsdb_acl_get_by_id() but does
not free the returned rsdb_acl_t . Naveen found this one, and I agree
with his findings.

[8/2/93 public]

Fixed locally.

[10/14/93 public]
Closed.



CR Number                     : 7942
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : 
Short Description             : replay cache logic problems
Reported Date                 : 5/6/93
Found in Baseline             : 1.0.2
Found Date                    : 5/6/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
security/krb5/lib/rcache/rc_dfl.c
security/krb5/lib/rcache/rc_io.c
Sensitivity                   : public

[5/6/93 public]
 Some analysis from OS/2 DCE development:

 Although the replay cache logic now seems to be functioning appropriately,
 there remain a few areas of concern which may warrant investigation/action.

    1.) At the start of routine krb5_rc_dfl_expunge() in rc_dfl.c pointer t
        is set up as follows:

            krb5_error_code krb5_rc_dfl_expunge(id)
            krb5_rcache id;
            {
                struct dfl_data *t = (struct dfl_data *) id->data;
                ...

        Although the data block t references is subsequently freed
        (in krb5_rc_dfl_close()) and a new one allocated in its place (via
        a call to krb5_rc_dfl_resolve()), the pointer t is never updated to
        point to the new block. Throughout the rest of the routine t continues
        to refer to obsolete storage. This has had no harmful effects only
        because malloc() quite accomodatingly returns the same block of storage
        just freed, leaving t to fortuitously continue pointing at the correct
        data. When I tried an experiment consisting of malloc'ing another
        storage block between the calls to krb5_rc_dfl_close() and
        krb5_rc_dfl_resolve(), t no longer referenced the correct data and secd
        crashed. (Details on exactly what went wrong can be provided if
        necessary. It is interesting to point out, though, that it would have
        crashed earlier than it actually did if not for another stroke of
        "luck": The file descriptor in the structure pointed to by t can still
        be used without incident even though it has been closed because it
        has in the meantime been reassigned to another file. So no "bad file
        descriptor" errors occur, but the wrong file is being operated on!)

    2.) In routine krb5_rc_io_move() in rc_io.c the wrong filename is stored
        in the krb5_rc_iostuff portion of the dfl_data structure (the in-memory
        replay cache). The incorrect statement is as follows:

            new->fn = old->fn;

        The effect of this statement is that the name of the temporary file
        used to house the expunged replay cache is now stored in the in-memory
        cache instead of the permanent cache file's name. The name stored no
        longer exists in the file system, since the rename operation has just
        replaced it with the official name. Luckily, this field is not used
        anywhere; all file accesses are made via the file descriptor, which is
        updated correctly, and whenever the file has to be opened the name is
        built up from scratch. There is one exception: the function
        krb5_rc_dfl_destroy() uses the bogus name in a call to unlink(). The
        destroy function is never invoked; if it were to be activated the bug
        would surface.

    3.) The error processing employed in krb5_rc_dfl_expunge() in rc_dfl.c is
        not consistent, and can lead to undesirable outcomes. For example:

            switch(krb5_rc_dfl_recover(id))
             {
               case KRB5_RC_MALLOC: return KRB5_RC_MALLOC;
               case KRB5_RC_IO: return KRB5_RC_IO;
               case KRB5_RC_IO_PERM: return KRB5_RC_IO_PERM;
               default: ;
             }

        This switch statement only catches 3 of the error codes that can be
        returned by krb5_rc_dfl_recover. There are at least 6 more, which are
        not handled, and processing is allowed to continue with sometimes ugly
        results. It is unlikely that this is intentional, as some of the errors
        not handled in the switch() are semantically very similar to ones that
        are (e.g., KRB5_RC_IO_MALLOC). Certainly such an event as a bad version
        number discovered in the cache file (KRB5_RC_BADVNO) should be handled
        at this point in the logic. We ran into this one, which slipped through
        the default case and died an ugly death later.

    4.) In routine krb5_rc_dfl_expunge() in rc_dfl.c it appears that the wrong
        file is being sync'ed in the following statement:

            if (krb5_rc_io_sync(&t->d))
               return KRB5_RC_IO;

        (This analysis ignores the fact that, due to the problem outlined
        in point 1. above, t->d is not trustworthy anyway.) At this point in
        the code, a temporary file has been created and populated with only
        the valid (non-expired) replay cache entries. The intent of this
        statement must surely be to make sure this file is flushed to disk
        before renaming it. Yet the file descriptor supplied is not that of
        the temporary file, but of the pre-expunge cache file, whose contents
        are no longer of interest.

[8/2/93 public]

Fixed locally.

[8/16/93 public]
fixed #1 by reassign t = (struct dfl_data *)id->data after id->data is
         changed.
      #2 by invoking close() directly.
      #3 by returning all error states, instead of selectively returning
	 them.
      #4 by sync on the temp file.
the diff of these two files are :
---------------------- difference of security/krb5/lib/rcache/rc_dfl.c
557,563c554,556
<  switch(krb5_rc_dfl_recover(id))
<   {
<    case KRB5_RC_MALLOC: return KRB5_RC_MALLOC;
<    case KRB5_RC_IO: return KRB5_RC_IO;
<    case KRB5_RC_IO_PERM: return KRB5_RC_IO_PERM;
<    default: ;
<   }
---
>  t = (struct dfl_data *)id->data; /* reallocated, so reset */
>  if (retval = krb5_rc_dfl_recover(id))
>    return retval;
573c566
<     if (krb5_rc_io_sync(&t->d))
---
>     if (krb5_rc_io_sync(&tmp))
---------------------- difference of security/krb5/lib/rcache/rc_io.c
267,268c264,265
<     (void) krb5_rc_io_close(new);
<     new->fn = old->fn;
---
>     if (close(new->fd) == -1) /* can't happen */
>       return KRB5_RC_IO_UNKNOWN;

[10/14/93 public]
Closed.



CR Number                     : 7938
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secd
Short Description             : core dump in sec_id_pac_util_free()
Reported Date                 : 5/5/93
Found in Baseline             : 1.0.2a
Found Date                    : 5/5/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : security/server/rs/rs_auth.c
Sensitivity                   : public

[5/5/93 public]
Gail saw dfsbind core dump with the following trace:

#0  0x73005524 in free ()
#1  0x731c3664 in cma_lib_free ()
#2  0x7345a7f8 in sec_id_pac_util_free ()
#3  0x7343dd54 in free_identity ()
#4  0x7343e3b0 in sec_login_pvt_free_login_context ()
#5  0x7345c4a8 in sec_login_pvt_release_context ()
#6  0x7345cbac in sec_login_util_release ()
#7  0x73434390 in sec_krb_ccache_free ()
#8  0x732c0758 in rpc__krb_free_info ()
#9  0x7323273c in rpc__auth_info_release ()
#10 0x732324e8 in rpc__auth_info_binding_release ()
#11 0x732344b0 in rpc__binding_free ()
#12 0x732347f8 in rpc_binding_free ()
#13 0x73360534 in sec_rgy_site_close ()
#14 0x7335a39c in binding_cache_remove ()
#15 0x7335a718 in rca_binding_cache_purge ()
#16 0x73359efc in binding_cache_enter ()
#17 0x7335ff10 in rca_site_bind ()
#18 0x73351070 in sec_rgy_site_bind ()
#19 0x73351198 in sec_rgy_site_bind_query ()
#20 0x734345d8 in sec_krb_sec_parse_name ()
#21 0x46a550 in cred_from_cred_rep ()
#22 0x46b1d0 in handle_sec_krb_dg_build_message ()
#23 0x46c7d0 in do_auth_request ()
#24 0x400c04 in ProcessRequest ()
#25 0x4005b8 in service_thread ()
#26 0x7321ec40 in cma__thread_base ()
#27 0x7322ec00 in cma__execute_thread ()
#28 0x7322ebe8 in cma__execute_thread ()

(gdb) info all-registers
zero(r0): 0; at(r1): 0x735d0000; v0(r2): 0x82000409; v1(r3): 0x177db009;
a0(r4): 0x82000401; a1(r5): 0x10212b18; a2(r6): 0x1003bf08; a3(r7): 0;
t0(r8): 0x100a19a8; t1(r9): 0; t2(r10): 0; t3(r11): 0;
t4(r12): 0; t5(r13): 0; t6(r14): 0; t7(r15): 0;
s0(r16): 0; s1(r17): 0x100ea028; s2(r18): 0x2c9; s3(r19): 0x100ea028;
s4(r20): 0x10005330; s5(r21): 0x10005338; s6(r22): 0x10005360; s7(r23): 0x100053
30;
t8(r24): 0; t9(r25): 0; k0(r26): 0xc14e7a5c; k1(r27): 0;
gp(r28): 0; sp(r29): 0x1003be78; s8(r30): 0x1003beb8; ra(r31): 0x731c3664;
sr: 0; lo: 0; hi: 0; bad: 0;
cause: 0; pc: 0x73005524; (d0: 0); f0: 0; f1: 0;
(d2: 0); f2: 0; f3: 0; (d4: 0); f4: 0; f5: 0;
(d6: 0); f6: 0; f7: 0; (d8: 0); f8: 0; f9: 0;
(d10: 0); f10: 0; f11: 0; (d12: 0); f12: 0; f13: 0;
(d14: 0); f14: 0; f15: 0; (d16: 0); f16: 0; f17: 0;
(d18: 0); f18: 0; f19: 0; (d20: 0); f20: 0; f21: 0;
(d22: 0); f22: 0; f23: 0; (d24: 0); f24: 0; f25: 0;
(d26: 0); f26: 0; f27: 0; (d28: 0); f28: 0; f29: 0;
(d30: 0); f30: 0; f31: 0; fsr: 0; fir: 0x330;
fp: 0x1008de08; inx: 0; rand: 0; tlblo: 0;
ctxt: 0; tlbhi: 0; epc: 0; prid: 0;

0x7345a7e0 <sec_id_pac_util_free+500>:  nop 
0x7345a7e4 <sec_id_pac_util_free+504>:  addiu $sp,$sp,-16
0x7345a7e8 <sec_id_pac_util_free+508>:  lw $a0,72($v0)
0x7345a7ec <sec_id_pac_util_free+512>:  nop 
0x7345a7f0 <sec_id_pac_util_free+516>:  jal 0x731c3518 <cma_lib_free>
0x7345a7f4 <sec_id_pac_util_free+520>:  nop 
0x7345a7f8 <sec_id_pac_util_free+524>:  lw $v0,0($s8)
0x7345a7fc <sec_id_pac_util_free+528>:  nop 
0x7345a800 <sec_id_pac_util_free+532>:  sw $zero,72($v0)
0x7345a804 <sec_id_pac_util_free+536>:  addiu $sp,$sp,16

I believe the PAC passed into sec_id_pac_util_free() had a
non-null non-valid p_groups pointer, which caused the core
dump.

I can provide the dump itself upon request.

Based on examination of the code, I've found two potential 
problems in PAC allocation that might cause this type of 
core dump:  

(1) Sometimes rpc_ss_allocate() is used to allocate the
groups array in the PAC; other times a simple malloc()
is used.  An example of each is:

construct_pac_from_local_name() in security/server/rs/rs_auth.c 
uses rpc_ss_allocate()

dfs_dce_acl_MakeUpLocalPac() in security/client/acl/dfs_dce_acl.c
uses malloc()

(2) In construct_pac_from_local_name(), the num_foreign_groups
field is initialized to 0, but the foreign_groups pointer is
unitialized.  if sec_id_pac_util_free() is invoked on this
PAC, a core dump would likely result.

There are too many instances of PAC usage in security for
me to audit them all, but instances of pac allocation that
do not zero the groups or foreign_groups pointer would also
likely cause this type of core dump.

[5/10/93 public]
NOTE: the PAC in dfs_dce_acl.c is local and never leaves that module, so
using malloc/free is ok there and the comment above referring to
dfs_dce_acl_MakeUpLocalPac() is not relevant to the problem being seen.
I'm looking into the rest of the problem now.

[5/10/93 public]
ALSO NOTE: The pac construction you note in 1) above is in secd.  This pac
is pickled and the stubs free it with the correct routines.  The crash you
are seeing is in a client, so it's not affected by how rs_auth.c allocates
PACs.  SO, we've established that neither of the examples in 1) above could
be causing this, because the PACs couldn't have come from either of those
pieces of code.  I've also just verified that every client side routine seems
to call sec_id_pac_t_unpickle with 'malloc' as the allocator, and then call
sec_id_pac_util_free() (which always uses free()) to free them.

Where does that leave us?  The only thing left that's still suspect is the
fact that sec_id_pac_util_free() *always* frees the PAC's groups and
foreign_groups pointers if they are non-NULL and we aren't sure if we're
initializing them to NULL on the client side (I would think we'd be seeing
a lot more crashes if we weren't, but it's still possible...).

[5/10/93 public]
It seems the pickling code special cases a null pointer for pickling, and
will just go ahead and try to pickle a non-null pointer.  When secd creates
a PAC, it sets num_groups and num_foreign_groups to 0 (and initializes the rest
of the PAC) but never initializes the foreign_groups pointer and only inits
the groups pointer to the number of (non-primary) groups that the account
belongs to.  I believe the foreign_groups bogus pointer is not being
marshalled as null like it should be, so it winds up being garbage on the
client side (which unpickles the pointer even though num_foreign_groups is 0).
Then when sec_id_pac_util_free() is called, it's trying to free the garbage
pointer because of a recent change to it which frees any non-NULL pointer
instead of only freeing if num_{foreign_}groups is non-zero like it used to
(which explains why this problem has only recently been seen).
I have a probable fix for this problem (server/rs/rs_auth.c where it
initializes the pac, it now inits the groups and foreign_groups ptrs too)
that I'm testing to make sure it doesn't break any existing functionality
and have sent to Ron Arbo, so they can see if it fixes the problem they were
seeing.

[5/12/93 public]
Submitted fixed 'rs_auth.c', marked 'fix'.
Verify for closure by making sure the problem does not occur again.

[10/14/93 public]
Closed.



CR Number                     : 7929
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : spurious auth_tkt_expired from rpc
Reported Date                 : 5/4/93
Found in Baseline             : 1.0.2a
Found Date                    : 5/4/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : not_available
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[5/4/93 public]
The rpc code returns spurious auth_tkt_expired's even though there is
plenty of time left on the TGT.  The scenario is we're running DFS
tests in a cell where the max cert lifetime is set to 3 days and the
default ticket lifetime is 10 hours.  Somewhere along the way, the
krpc is getting auth_tkt_expired, causing the CM to go into
unauthenticated mode, but there were no failures reported in the
dfsbind log.  The client and server were on the same machine. 
Looking at dfsbind traces and ticket expirations from one run
indicated that the failure was very close to end of the service ticket
lifetime.   I believe that the auth helper code was returning a ticket
that was good when it was returned but that expired by the time it got
into the kernel.  The auth helper cache and the cred code itself will
return a ticket with only 1 second left, so if the kernel clock ticks
over, this ticket will be bad.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[05/14/93 public]
Mike, can you or someone at hp have a look at this and tell
us what's happening with this defect?  This is a very
serious problem for us since it's showing up in system
test and cho and is blocking us from meeting out exit
criteria.

[5/18/93 public]
Yes, Bill is at HP, and this was his defect so I don't understand why it was
reassigned to me (especially given that it's occurring in KRPC and related to
the auth_helper).  I've reassigned it to Bill after checking with him...

[6/1/93 public]
IBM (Carl) and Transarc (Jaffe) have been told about a possible fix to this
one which they are trying out; they have said that they'll get back to me
on this with the fix.

[6/2/93 public]
I've submitted the changes to the OSF.  I'm assigning this to Diane so that 
she can mark it fixed once it has been tested.
Changed Responsible Engr. from `sommerfeld' to `delgado'

[6/10/93 public]
Marked fix to indicate a submission has been made to fix this 
problem.  OSF will verify before closing.

[10/14/93 public]
Closed.



CR Number                     : 7840
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : illegal default tkt lifetimes 
allowed
Reported Date                 : 4/29/93
Found in Baseline             : 1.0.2
Found Date                    : 4/29/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 4_accts.gpsml
Sensitivity                   : public

[4/29/93 public]
The following paragraph appears in the Security Module of the 
DCE Admin Guide, chapter "Creating and Maintaining Accounts", section 
"A Note About Ticket Lifetimes":

    The Default Certificate Lifetime cannot be less than the Minimum
    Certficate Lifetime nor greater that the Maximum Certificate 
    Lifetime.  If you enter a value for Default Certificate Lifetime
    that does not fall in the minimum/maximum range, that value will
    display (in the rgy_edit view subcommand) as the number you entered,
    but the effective Default Certificate Lifetime will be lengthened
    or shortened to fall within the minimum/maximum range.

I find this to be false.

If I set the Default Certificate Lifetime to be 2m and leave the
Minimum Certficate Lifetime as 5m, then view the values, I see 2m
as the default and 5m as the min (as advertised).

Next, I dce_login as cell_admin and do a klist.  The tkt lifetimes
are shown to be 2m, not 5m:

178 ->klist
DCE Identity Information:
        Warning: Identity information is not certified
        Global Principal: /.../xinu.cell/cell_admin
        Cell:      00395940-8bef-1bd5-8988-10005a4f33bf /.../xinu.cell
        Principal: 00000064-8bef-2bd5-8900-10005a4f33bf cell_admin
        Group:     0000000c-8bf6-2bd5-8901-10005a4f33bf none
        Local Groups:
                0000000c-8bf6-2bd5-8901-10005a4f33bf none
                00000064-8c1c-2bd5-8d01-10005a4f33bf acct-admin
                00000065-8c1d-2bd5-8d01-10005a4f33bf subsys/dce/sec-admin
                00000066-8c1d-2bd5-8d01-10005a4f33bf subsys/dce/cds-admin
                00000068-8c1e-2bd5-8d01-10005a4f33bf subsys/dce/dts-admin
                00000067-8c1e-2bd5-8d01-10005a4f33bf subsys/dce/dfs-admin
                00000069-8c1e-2bd5-8d01-10005a4f33bf subsys/dce/dskl-admin
                0000006e-d1e9-2bd5-8d01-10005a4f33bf pvtestgrp
                0000006f-dd0c-2bde-8101-10005a4f33bf acl_group

Identity Info Expires: 93/04/29:13:42:15
Account Expires:       never
Passwd Expires:        never

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_53391100
Default principal: cell_admin@xinu.cell
Server: krbtgt/xinu.cell@xinu.cell
        valid 93/04/29:13:40:15 to 93/04/29:13:42:15
Server: dce-rgy@xinu.cell
        valid 93/04/29:13:40:17 to 93/04/29:13:42:15
Server: dce-ptgt@xinu.cell
        valid 93/04/29:13:40:21 to 93/04/29:13:42:15
Client: dce-ptgt@xinu.cell      Server: krbtgt/xinu.cell@xinu.cell
        valid 93/04/29:13:40:21 to 93/04/29:13:42:15
Client: dce-ptgt@xinu.cell      Server: dce-rgy@xinu.cell
        valid 93/04/29:13:40:26 to 93/04/29:13:42:15


If I wait 2m and do another klist, I can verify that my tkts have
expired:

179 ->klist
DCE Identity Information:
        Warning: Identity information is not certified
        Global Principal: /.../xinu.cell/cell_admin
        Cell:      00395940-8bef-1bd5-8988-10005a4f33bf /.../xinu.cell
        Principal: 00000064-8bef-2bd5-8900-10005a4f33bf cell_admin
        Group:     0000000c-8bf6-2bd5-8901-10005a4f33bf <group name unknown>
        Local Groups:
                0000000c-8bf6-2bd5-8901-10005a4f33bf <group name unknown>
                00000065-8c1d-2bd5-8d01-10005a4f33bf <group name unknown>
                00000066-8c1d-2bd5-8d01-10005a4f33bf <group name unknown>
                00000068-8c1e-2bd5-8d01-10005a4f33bf <group name unknown>
                00000067-8c1e-2bd5-8d01-10005a4f33bf <group name unknown>
                00000069-8c1e-2bd5-8d01-10005a4f33bf <group name unknown>
                0000006e-d1e9-2bd5-8d01-10005a4f33bf <group name unknown>
                0000006f-dd0c-2bde-8101-10005a4f33bf <group name unknown>

Identity Info Expires: 93/04/29:13:42:15
Account Expires:       never
Passwd Expires:        never

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_53391100
Default principal: cell_admin@xinu.cell

So, either the documentation is incorrect, or some registry
policy/properties mechanism that validates the Default Certificate
Lifetime is missing or not working properly.

[5/03/93 public]
There is at least one instance in which having a Default Certificate Lifetime
less than or equal to the Minimum Certificate Lifetime breaks functinality.
This is the rgy_edit "site" subcommand as described in the scenario below:

(1) Configure cellA and cellB, including gda.
(2) Use the rgy_edit "cell" subcommand to set up a peer trust relationship.
(3) In cellA, set the Default Certificate Lifetime = 2m (which is shorter than
    the default Minimum Certificate Lifetime, 5m).
(4) In cellA, re-dce_login then issue the rgy_edit "site" subcommand, specifying
    /.../cellB
    ==> function fails with the infamous "Registry Server Unavailable" message
(5) In cellA, set the Default Certificate Lifetime = 5m (equals the default
    Minimum Certificate Lifetime).
(6) In cellA, re-dce_login then issue the rgy_edit "site" subcommand, specifying
    /.../cellB
    ==> function fails as before
(7) In cellA, set the Default Certificate Lifetime = some value greater than the
    Minimum Certificate Lifetime.
(8) In cellA, re-dce_login then issue the rgy_edit "site" subcommand, specifying
    /.../cellB
    ==> function succeeds.

I gathered some security debug output and found that the
rpc_binding_set_auth_info() call in rca_setup_handle() failed with an error of
KRB5KDC_ERR_NEVER_VALID.  This can be returned from do_as_req.c or do_tgs_req.c
when the requested tkt lifetime is too short.


Per Bill Sommerfeld, The documentation is wrong and should be modified to 
reflect the relationship as described in the comment and code below.
Taken from kdb_rsdb.c, in the routine krb5_dbm_db_get_policy():

        /* We enforce the ordering:
         *
         * 60 seconds <= default
         * 60 seconds <= max
         * 60 seconds <= max_renewable
         * min <= default <= max <= max_renewable
         */

        max_life = max (60, max_life);
        max_renewable_life = max (60, max_renewable_life);
        default_life = max(60, default_life);

        max_life = min (max_life, max_renewable_life);
        default_life = min (default_life, max_life);
        min_life = min (min_life, default_life);

[10/15/93 public]
Fixed and verified.  Verified by Mary Bennett.

[11/11/93 public]

Verified changes in latest doc build and closed this bug.



CR Number                     : 7834
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec.rgy.7
Short Description             : sec.rgy.7 fails to build on
the dce1.0.2 release
Reported Date                 : 4/29/93
Found in Baseline             : 1.0.2
Found Date                    : 4/29/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
/test/systest/security/sec.rgy.7/Makefile
Sensitivity                   : public

[4/29/93 public]

Using the DCE 1.0.2 release tape ./test/systest/security/sec.rgy.7 
fails to build if the directory /project/dce/build/dce1.0.2 is not 
mounted on the machine one is building.

The Makefile in sec.rgy.7 has the following line:

INCFLAGS = -I/project/dce/build/dce1.0.2/src/security/h

That needs to change to be a relative path or export the later
needed include file during the build phase and look for the file
there.

With the correct path to the include directory the test builds.

[10/4/93 public]
Fix already submitted. This CR is being closed.



CR Number                     : 7832
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : prop but perhaps many more
Short Description             : excessive auto var sizes
Reported Date                 : 4/29/93
Found in Baseline             : 1.0.2
Found Date                    : 4/29/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/server/rrs/rrs_prop_{acct, acl, pgo}.c
Sensitivity                   : public

[4/29/93 public]
  Upon triggering a copy-all propagation by starting a replica, we find
at least one instance of an enormous demand on the stack for local
variables within a single frame. Routine rrs_prop_pgo_add_domain_init()
requires approx. 60k bytes for local storage, an amount dominated by
the arrays 'bulk' and 'mem_buf' . This exhausts our default thread stack
size of 64k.
  It was fortunate that this large stack adjustment just happened to
leave the stack pointer on our single (4k) guard page. Had either of
these arrays (bulk, mem_buf) been even slightly larger, it is
conceivable that the new stack pointer would have quietly pole-vaulted
over the guard and into another stack. This could have created a very
insidious bug. When the SP jumps by 60k, the 4k guard page is reduced to
a literal bullseye.
  We have sufficient concern about this problem to consider getting 'as'
sources from the compiler and awk'ing them to see the stack offsets
required by each routine. This would give us a scientific start at
determining a minimum safe size for our thread stacks.
  It would seem necessary to change the code to malloc and free these
large structures, even if this requires the addition of TRY clauses to
ensure thorough clean-ups.
  After discussion, this is created as an A1 bug. The pole-vault case
would produce truly difficult problems, both in-house and in the field.
Such problems would wreak havoc, and quite possibly cause the registry
to become corrupt.
  Locally, we will call the RPC mgmt. to increase our stack size to 128
or 256k. This is low-risk and acceptable cost for our 1.0.2 release. If
these large frames are rare (perhaps confined to the prop-all paths? We
never saw this until this occurred) then the correct fix is not to
increase every thread's stack size, but to change the expensive paths.

[10/15/93 public]
Fixes submitted.

[11/8/93 public]
Closed.



CR Number                     : 7829
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : uses must change passwd when expired
Reported Date                 : 4/29/93
Found in Baseline             : 1.0.1
Found Date                    : 4/29/93
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
admin_ref/man8sec/rgy_edit.8sec
admin_gd/security/security/4_accts.gpsml
admin_gd/security/security/7_pols.gpsml
Sensitivity                   : public

[4/29/93 public]

Section 7.1.2 "Password Lifespan" includes the sentence:

  Users must change their passwords when they expire.

This is unclear to me.  Do they have to change them BEFORE they expire, or
can they change them after they expire.  If they can't login when they
expire how can they change their password?  What if they are logged in when
the password expires?  Are they still logged in, and change they change
their password at this point?

Also, when does the password actually expire?  After n days from when the
password is created, or at 12:01am on the day that it expires?

Finally, the text should include a sentence saying with what command users
can change their passwords.

[04/29/93 public]
No no no, the antecedent for "they" is "Users." :-)

[4/29/93 public]
The same comment (the bug not the grammer correction :-) applies to section
7.1.3 "Password Expiration Date" as well.

[7/13/93 public]
The wording wasn't explicit enough that it couldn't be explicit, so it's
being reworded with a better explanation, with expletive's deleted.  As the
doc says now: it is up to the vendor's implementation how this is handled.
Unfortunately, it only says the mechanism is up to the vendor (which does
answer your question about when), but doesn't yet explain that the policy
(whether to adhere to strict passwd-change requirements, or not to use
the feature at all) is also up to the vendor to exploit.  Before we get into
an explosive situation, let's explore an example (can you tell I need a
vacation? :-)

Vendor A may implement a login program that would not allow you to log in,
until you entered a new password (twice) after correctly entering the expired
password.
Vendor B may implement a login program that logs you in and invokes the passwd
change program if the password had expired, but doesn't enfore the change (ie:
you could break out of the passwd change program).
Vendor C could ignore the 'reset_passwd' flag that comes back from the API
altogether, if they didn't care about password expirations.

The point is that the password expiration policy is advisory only at the API
layer (and there is no supported login program shipped with DCE from the OSF)
so it's up to each vendor to decide what their customers need.

[7/16/93 public]
I changed the wording in all the appropriate places to say that 
the policy to handle expired passwords and the mechanism to do 
it is defined for each platform. Changes reviewed by Mike Burati.
CR marked fixed and verified.  (The unclear pronoun reference had been 
fixed earlier.)

[08/19/93 public]
Closed bug.



CR Number                     : 7828
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : mentions account in std policies
Reported Date                 : 4/29/93
Found in Baseline             : 1.0.1
Found Date                    : 4/29/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 7_pols.gpsml
Sensitivity                   : public

[melman 4/29/93 public] 

Section 7.1.5 is titled: "Handling Contradictory Registry, Account, and
Organization Standard Polices".  This is wrong, since standard policies can
only be set for the registry as a whole and for individual organizations.
A better title would be: "Handling Conflicting Standard Policies".  The
text of the section properly mentions only organizations and registry
standard policies.

Section 7.1.6 was created for CR 3301.  It has poor grammer.  The confusion
lies in the phrase password format policy.  This is a collective term that
refers to three separate policies.  Better would be to use password format
policies.   The example in the middle of the second paragraph either needs
the word `the' added before the phrase `password format policy' or it
should be changed to read `the minimum password length policy'.

[7/14/93 public]
Fixed and verified.  Verified by me.

[08/19/93 public]
Closed bug.



CR Number                     : 7826
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : reserved field not described
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.1
Found Date                    : 4/28/93
Severity                      : D
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 6_dispaly.gpsml
Sensitivity                   : public

[4/28/93 public]
In section 6.3 "Displaying Principals", the "Reserved:" field shown in the
example is not described.  This field is described in table 6-2 for groups
and organizations.

[7/14/93 public]
Fixed and verified. Verified by me.

[08/19/93 public]
Closed bug.  The fix is actually in Table 6-3, not 6-2.



CR Number                     : 7825
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : do person doesn't exist
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.1
Found Date                    : 4/28/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 6_dispaly.gpsml
Sensitivity                   : public

[4/28/93 public]
In section 6.3 "Displaying Principals" the example says:

  rgy_edit=> do person
  Domain changed to: person

There is no domain person in rgy_edit.  In both lines above the word
"person" should be changed to "principal"

[7/14/93 public]
Fixed and verified.  Verified by me.

[08/19/93 public]
Closed bug.



CR Number                     : 7824
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : need better descip of unix numbers
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.1
Found Date                    : 4/28/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 3_pgo.gpsml
Sensitivity                   : public

[4/28/93 public]
In section 3.4, table 3-1 the description of UNIX number mentions that you
can enter a number lower than the low unix number set with the rgy_edit
prop command.  It should mention that this is the unix low number for
principals (there are other for groups and orgs that can be set by rgy_edit
prop) 

In section 3.5.2, table 3.2 the description of UNIX number was just cut and
pasted from the principal table description.  The first sentence needs to
change from "The required UNIX ID associated with the principal" to
something that mentions groups and organizations.  Also this description
should be modified as above to mention the low group uid and the low
organization uid.

In section 7.3.3 "Low UNIX ID Property" it should mention that there are
separate low unix ids for principals, groups, and orgs.  The examples in
sections 7.3.7.1 and 7.3.7.2 properly show this.

[7/14/93 public]
Fixed and verified.  Verified by me.

[08/19/93 public]
Closed bug.  Changes were made to the file 3_pgo.gpsml, but not
to 7_pols.gpsml.  As of 1.0.2, the latter file already included
a sentence in the specified section ("Low UNIX ID Property")
about separate low UNIX IDs for principals, groups, and orgs.



CR Number                     : 7819
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_ref
Short Description             : Sentence begins with variable name
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.2
Found Date                    : 4/28/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rgy_edit.8sec
Sensitivity                   : public

[4/28/93 public]
Okay, real minor bug here.  In the description of the adopt command in
rgy_edit(8sec), the 2nd sentence of the 2nd paragraph begins with "uuid'
which in this context is a variable that is passed to the adopt command.
Sentences aren't supposed to begin with variable names.

[7/13/93 public]
Fixed and verified.  Verified by me.

[08/19/93 public]
Closed bug.



CR Number                     : 7816
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : better description of masks in acls
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.1
Found Date                    : 4/28/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : dce_books/admin_gd/security/security/1.5_acls.gpsml
Sensitivity                   : public

[melman 4/28/93 public] 
The users guide in the description of acl_edit only barely mentions the
mask_obj and unauthenticated masks.  In three places it gives the same
information (section 4.2.2, 4.7 and 4.12.1-2).  No mention is made of the
-n and -c switches on the modify command that recompute masks when
necessary, what recomputation entails, why some acls need it and some
don't, what the difference is between -n and -c, etc.  The purge command is
also involved in masks and it is not described well.

I do see that the purge command is in table 4-3 and that -n and -c are
listed in table 4-1, but I think that a complete discussion of masks and
the operations on them (and examples of DCE objects with masks) deserves an
entire section.

[9/17/93 pubic]
After consultation with OSF, I have deferred this CR to 1.1. 
To write a thorough description requires more time than 
I have available for 1.0.3.

[2/3/94]

It appears that the mask_object acl entry type is not supported by either
the cds or registry acl managers. If this is true, then this should be made
clear in the description of the mask_obj. The cds acl manager's supportted
acl entry types are listed on page 7-4 of the dce1.0.2 Core Componet Admin
Guide.

[5/24/94 public]

Reassigning this CR to Peter Neilson, OSF ACL management writer.
Peter is revising the chapter that describes how to manipulate ACLs
with acl_edit (formerly in the User's Guide and Reference,
now in the Administration Guide, Security section) to describe
how to manipulate them with dcecp. This CR impacts that work
(i.e., how to handle masks with dcecp, instead of with acl_edit).

[10/18/94 public]

Added a section on the details of using dcecp acl modify (rather than
acl_edit) with masks.  Verified by melman.

[10/20/94 public]
Closed bug.



CR Number                     : 7812
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : users_gdref
Short Description             : acl_edit description inadaquate
Reported Date                 : 4/27/93
Found in Baseline             : 1.0.1
Found Date                    : 4/27/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.2a
Affected File(s)              : acl_edit.1sec, 5_auth.gpsml
Sensitivity                   : public

[4/27/93 public]
The Description of acl_edit in both the users guide and the reference page
needs to clearly describe the fact that there is a transaction model in
use, and that none of the changes made to an acl during an acl_edit session
are saved to the object until the user invokes either commit or exit.  Also
that abort can be used to exit the session without saving the changes.
These commands are listed in the reference page, but the use model should
be described in the the DESCRIPTION section of the reference page.

[6/16/93 public]
Fixed and verified.  I verified this one myself.

[08/19/93 public]
Closed bug.



CR Number                     : 7805
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 7502
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec-id map
Short Description             : return of the son of the secidmap null-global-name assertion
Reported Date                 : 4/26/93
Found in Baseline             : 1.0.2b21
Found Date                    : 4/26/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : secidmap.c
Sensitivity                   : public

[4/26/93 public]
  We had this assertion (see OT7502) arise today. Another group internal
to Transarc was calling sec_id_parse_name() with a zero-length (as
opposed to a NULL) global name argument. The fix for OT7502 watches for
NULL global names and does the right thing for them. However, empty
strings escape that fix, and in allocate_namecache() the SET_LENGTH()
macro resets these names to be NULL. The newly-NULLed name gets into the
cache and trips up later lookups involving the name cache at the same
assertion previously seen in OT7502.
  We're fixing this locally by converting the lookup's assertion into a
cache miss (skip and continue, instead of exiting). This appears to be
the lowest risk fix, banked against the resulting growth in the cache
(multiple entries with null global-names?) and the (slight) performance
loss within the cache.
  This is opened at high severity and priority in order to have the
above sequence of actions reviewed; it appears that this presents a
compatibility problem with any 1.0.1 clients which coded calls to
sec_id_parse_name() using a zero-length global name, instead of a NULL,
and saw no ill effects at that time. (This was one way to easily obtain
the local cell's UUID.)

[4/26/93 public]
sec_id_parse_name("") should probably fail.
If they want the cell id of the local cell, they can just call
sec_id_parse_name("/.:", ...).

[4/27/93 public]
  The following program isolates a problem found when I told Encina to
use NULL for their global name argument: sec__id_parse_name() contains
several unguarded dereferences of global_name, which can be NULL. The
result is a core dump.
  Encina will use "/.:".
		   ---- ---- ---- ---- ---- ---- ----
		   ---- ---- ---- ---- ---- ---- ----
#include <pthread.h>
#include <dce/binding.h>
#include <dce/dce_cf.h>
#include <dce/dce_error.h>
#include <dce/nbase.h>
#include <dce/pgo.h>
#include <dce/rgynbase.h>
#include <dce/rpcsts.h>
#include <dce/sec_login.h>
#include <dce/secidmap.h>
#include <dce/secsts.h>
#include <dce/uuid.h>
#define DIE(x) if (x) die((x), __LINE__)
void die( est ,  line )
error_status_t est;
int line;
{
  dce_error_string_t txt;
  error_status_t lst;
  dce_error_inq_text(est, txt, &lst);
  if (lst != error_status_ok)			/* Translation failed */
    sprintf((char *) txt, "(no msg) %d", (int) est);
  fprintf(stderr, "died: line %d, %s\n", line, txt);
  exit(1);
}
int main(argc, argv)
int   argc;
char *argv[];
{
  error_status_t	est;
  sec_rgy_handle_t	rgy_context;
  uuid_t		cellID;
  sec_rgy_site_open("/.:", &rgy_context, &est);
  DIE(est);
  sec_id_parse_name(rgy_context,
		    NULL,
		    NULL,
		    &cellID,
		    NULL,
		    (uuid_t *) NULL,
		    &est);
  DIE(est);
}
		   ---- ---- ---- ---- ---- ---- ----
		   ---- ---- ---- ---- ---- ---- ----
Changed Interest List CC from `bb+transarc.alpine@transarc.com' to 
 `bb+transarc.alpine@transarc.com,chriss@transarc.com'

[8/2/93 public]

Fixed locally.

[8/19/93 public]
Fix: translate null input to "/.:" for tmp compatibility

[11/8/93 public]
Closed.



CR Number                     : 7800
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : PACs can be sent unencrypted
Reported Date                 : 4/26/93
Found in Baseline             : 1.0.2
Found Date                    : 4/26/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rpc_binding_set_auth_info.3rpc
Sensitivity                   : public

[4/26/93 public]

There was a discussion on the OSF sig-security mail list about
the fact that it is possible for PACs to be sent unencrypted if
there is no protection level used in an RPC call.  This needs to
be made clear in the documentation.

The relevant notes from the discussion follow:


Article: 195 of osf.sig.security
From: pkqjs@osf.org
Subject: authn rpc bug?
Date: Wed, 24 Mar 93 19:09:49 EST

Joe:

Recall the following question I posed, and answer you provided:


    2) I still don't understand how the authn flag of a PAC could be false.

In the current implementation, there is no way to obtain a PAC from the runtime
that has the authentication flag set to FALSE.  This is because the current
protocol sets don't allow "authz_dce" to be requested unless an authentication
protocol and protection level have been requested.

Well, I found that my trials contradict the theory that you can't specify
authz_dce unless an authentication protocol and protection level have been
specified. Here's the trial:

1) Client annotates security as:
         rpc_binding_set_auth_info( binding_h,
                                   svr_princ_name,
                                   rpc_c_protect_level_none,
                                   rpc_c_authn_dce_secret,
                                   NULL  /*use default security login context
                                        from current addr space*/ ,
                                   rpc_c_authz_dce  /*authz based on client
                                        PAC*/ ,
                                   &status);
        NOTE: Protect_level_none, with authn_dce_secret, and PAC based authz.

RESULT of client calling server who registered for authn RPC:
-----
clouseau-> mygreet_server /.:/dce_users/jal/mygreet
Listening ...
authn_svc is rpc_c_authn_dce_secret
Protect level none
authz_svc is rpc_c_authz_dce
client_privs are
Client UUID 00000079-345F-2AF5-BA00-8060809C0000
Principal Name from uuid pkqjs  (I had to call sec_rgy_pgo_id_to_name. Could
                                 not print pac->principal.name. Got "(null)")
Not a certified PAC!
The mygreet client says: hello, mygreet server

SO.. PAC is transmitted but not certified! Is PAC passed in plain text?
Is the PAC issued by the Privilege Svc? 
No encryption of PAC? So no  key exchange occuring for authenticated RPC?

Is this a bug?

Jeannine Lonski
908-699-5707


Article: 197 of osf.sig.security
From: pato@osf.org
Subject: Re: authn rpc bug?
Date: Thu, 25 Mar 93 15:46:56 EST

Jeannine,

You are right, I mis-typed (and forgot).

pato> protocol sets don't allow "authz_dce" to be requested unless an 
pato> authentication protocol and protection level have been requested.

I should have left out "protection level".  You can, in fact, get a PAC that is
marked unauthenticated if the protection level is set to protect_level_none.   

    SO.. PAC is transmitted but not certified! Is PAC passed in plain text?
    Is the PAC issued by the Privilege Svc? 
    No encryption of PAC? So no  key exchange occuring for authenticated RPC?

In general, the PAC is obtained from the privilege server and is certified in
the normal way.  However, since there is no protection level being used on the
given RPC call, there is no way for the server to validate that the PAC has
been certified.  The PAC is in fact just transmitted in the clear - no ticket
or authenticator is exchanged, no session key is established.  Therefore, it is
possible for the client to have forged the PAC.

    Is this a bug?

No, the server is clearly informed that the PAC was not authenticated
(certified).  If you want the PAC to be transmitted securely, then you must
select protect_level_call.

                    -- Joe Pato
                       Distributed Computing Program / East
                       Hewlett-Packard Company
                       pato@apollo.hp.com
    
-------


Article: 199 of osf.sig.security
From: pkqjs@osf.org
Subject: Re: authn rpc bug?
Date: Fri, 26 Mar 93 12:04:01 EST

Joe,

Thanks for the response:

>SO.. PAC is transmitted but not certified! Is PAC passed in plain text?
>    Is the PAC issued by the Privilege Svc? 
>    No encryption of PAC? So no  key exchange occuring for authenticated RPC?

>In general, the PAC is obtained from the privilege server and is certified in
>the normal way.  However, since there is no protection level being used on the
>given RPC call, there is no way for the server to validate that the PAC has
>been certified.  The PAC is in fact just transmitted in the clear - no ticket
>or authenticator is exchanged, no session key is established.  Therefore, it is
>possible for the client to have forged the PAC.

>    Is this a bug?

>No, the server is clearly informed that the PAC was not authenticated
>(certified).  If you want the PAC to be transmitted securely, then you must
>select protect_level_call.

Although not a bug, this fact should be CLEARLY documented. It is not.
The documentation states that chossing PAC based authz guarentees a certified
PAC from the privilege svc. 

jeannine lonski
908-699-5707


Article: 200 of osf.sig.security
From: pkqjs@osf.org
Subject: follow ques to prot level
Date: Fri, 26 Mar 93 18:52:13 EST

Joe,

I've thought of a followup question to your mail regarding protection level:

----- begin included text -------

In general, the PAC is obtained from the privilege server and is certified in
the normal way.  However, since there is no protection level being used on the
given RPC call, there is no way for the server to validate that the PAC has
been certified.  The PAC is in fact just transmitted in the clear - no ticket
or authenticator is exchanged, no session key is established.  Therefore, it is
possible for the client to have forged the PAC.
 
    Is this a bug?
 
No, the server is clearly informed that the PAC was not authenticated
(certified).  If you want the PAC to be transmitted securely, then you must
sselect protect_level_call.

----- end included text --------

Can't you use protect_level_connect to transmit the PAC securely? In this
case the pac is sent encrypted the first time the client connects to the
server and is it then stored by server rpc runtime for use in future
calls? No authentication on subsequent calls so can't trust that those
calls are really from client? But is PAC available to server manager on
those subsequent calls?

How often is PAC sent? Does it depend on prot_level?

Additionally, I've given more thought to the issue of whether the
requirement for a certain protect_level to achieve authenticated rpc 
is a bug or not. It seems logical that should NOT be able to specify 
authn_dce_secret and a prot_level of none in the rpc_binding_set_auth_info
call, if the prot_level_none negates the authn_dce_secret. DCE should
return an error of incompatible options specified in the call. Else,
the naive dce user can falsely believe authenticated rpc is occurring
when it is not!

jeannine lonski
908-699-5707


Article: 206 of osf.sig.security
From: sommerfeld@osf.org
Subject: Re: DCE client identity
Date: Tue, 30 Mar 93 12:19:01 -0500

In an attempt to stamp out misinformation:

DCE RPC encrypts the name in name-based authorization *exactly* when
it would generate a certified PAC in PAC-based authorization.

The comments in rpcbase.idl explain it quite succinctly:

const long rpc_c_protect_level_default         = 0; /* default for auth svc */
const long rpc_c_protect_level_none            = 1; /* no authentication performed */
const long rpc_c_protect_level_connect         = 2; /* only on "connect" */
const long rpc_c_protect_level_call            = 3; /* on first pkt of each call */
const long rpc_c_protect_level_pkt             = 4; /* on each packet */
const long rpc_c_protect_level_pkt_integ       = 5; /* strong integrity check */
const long rpc_c_protect_level_pkt_privacy     = 6; /* encrypt arguments */

If you give a "protect_level_none", you get no authentication, but
uncertified authorization information *may* be passed along to the
server.  This information should not be trusted under any
circumstances, though it could be useful for
debugging/tracing/measurement purposes in a "friendly" network.

In an ideal world, there would be a function provided by DCE which
takes a server binding handle, an in-memory ACL representation, and a
needed set of permissions and returns a thumbs-up/thumbs-down
indication.  *IT* would do the rpc_binding_inq_auth_client call and
interpret the various authentication services/levels/etc with respect
to the acl, including the "unauthenticated mask", reducing the chance
of the server author making a mistake in interpreting the complicated
credentials coming in off the wire.  It would also be an obvious place
to put in the interpretation of any new delegation/role/
phase-of-moon/etc acl entry types to ensure that all DCE services
interpret ACLs in a consistant way.

Unfortunately, it doesn't exist now (I vaguely recall arguing for it
early on in the design stage but was vetoed, for a reason I still
don't fully understand).

					- Bill

[9/10/93 public]
Fixed and verified.  Verified by Bill Sommerfeld.

[11/11/93 public]

Verified changes to rpc_binding_set_auth_info.3rpc
in latest doc build and closed this bug. Also
removed "app_gd" from list of affected subcomponents
because no changes were made to this book as a result
of this CR.



CR Number                     : 7796
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : doc
Short Description             : rdacl_get_mgr_types_semantics()
manpage is missing
Reported Date                 : 4/23/93
Found in Baseline             : 1.0.2
Found Date                    : 4/23/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rdacl_get_mgr_types_semantics.3sec
Sensitivity                   : public

[4/23/93 public]
I could not find this manpage in the latest version of the Appl Dev Ref.

[4/26/93 public]
Changing this CR to doc from code.

[7/9/93 public]
Fixed and verified.  Reviewed by Mike Burati.

[08/19/93 public]
Closed bug.



CR Number                     : 7795
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : doc
Short Description             : sec_login_valid_from_keytable()
manpage is missing
Reported Date                 : 4/23/93
Found in Baseline             : 1.0.2
Found Date                    : 4/23/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_login_valid_from_keytable.3sec
Sensitivity                   : public

[4/23/93 public]
I could not find this manpage in the latest version of the Appl Dev Ref.

[4/26/93 ppublic]
Changing this CR to doc from code.

[6/21/93 public]
According to Mike Burati, this call is not public (and is not 
in the idl file).  It should not be documented.  I've canceled this 
CR

[6/22/93 public]
In the dce1.0.2ab4 tree, sec_login_valid_from_keytable() IS declared in
sec_login.idl, a public file.  Moreover, this API is already used externally
to the security component -- on such instance is in the CDS code (see
src/directory/cds/library/sec_init.c).  The API should be documented or
publicly deprecated with an alternative routine specified.

[6/22/93 public]
Oops, I looked in the wrong idl file (keymgmt.idl).  That'll teach me not to try
and answer questions while working on several things at the same time...  I've
reopened this.  Since it's publicly exported in sec_login.idl and already
used externally to security (from CDS) it should be documented.  Thanks Julie.

[7/9/93 public]
Fixed and verified.  Reviewed by Mike Burati.

[08/19/93 public]
Closed bug.



CR Number                     : 7791
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rca bind
Short Description             : free(NULL) on compat path
Reported Date                 : 4/23/93
Found in Baseline             : 1.0.2b21
Found Date                    : 4/23/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : internal_binding.c
Sensitivity                   : public

[4/23/93 public]
  When, in rca_site_check_readonly(), Crs_bind_get_update_site() returns
rpc_s_unknown_if, site_name and the tower vector remain uninitialized.
This causes seg faults on the SunOS port as site_name is invariably NULL
in this case, while the tower vec contains random data.
  One possible fix is to move the source lines
----
        rpc_ss_client_free(site_name);
        TOWER_VEC_FREE(rpc_ss_client_free, towerv);
----
  .. into an if (GOOD_STATUS(..)) clause which else's into the existing
if() chain, the one currently below the call to Crs_bind_get_update_site().
  Our cell-profile is as follows (no sec-v1):

[sydney-travis] rpccp show entry /.:/cell-profile
>>> no matching objects found
>>> no matching binding information found
profile elements:
  <interface id>   0d7c1e50-113a-11ca-b71f-08001e01dc6c,1.0
  <member_name>    /.../alpine.dce.transarc.com/sec
  <priority>       0
  <annotation>     secidmap
  <interface id>   8f73de50-768c-11ca-bffc-08001e039431,1.0
  <member_name>    /.../alpine.dce.transarc.com/sec
  <priority>       0
  <annotation>     krb5rpc
  <interface id>   b1e338f8-9533-11c9-a34a-08001e019c1e,1.0
  <member_name>    /.../alpine.dce.transarc.com/sec
  <priority>       0
  <annotation>     rpriv
  <interface id>   4d37f2dded43.02.c0.37.cf.2e.00.00.01,4.0
  <member_name>    /.../alpine.dce.transarc.com/fs
  <priority>       0
  <annotation>     fs
  <interface id>   eb814e2a-0099-11ca-8678-02608c2ea96e,4.0
  <member_name>    /.../alpine.dce.transarc.com/subsys/dce/dfs/bak
  <priority>       0
  <annotation>     bak
  <interface id>   6f264242-b9f8-11c9-ad31-08002b0dc035,1.0
  <member_name>    /.../alpine.dce.transarc.com/lan-profile
  <priority>       0
  <annotation>     LAN
  <interface id>   17579714-82c9-11c9-8a59-08002b0dc035,1.0
  <member_name>    /.../alpine.dce.transarc.com/hosts/capitol/dts-entity
  <priority>       0
  <annotation>     Global Time Serve

[4/23/93 public]
  There is an effective and simple workaround: use rgy_edit -u .
  Severity dropped, priority dropped. Local fix will be test-built and
run. We evidently have a configuration oddity (1.0.2 system without the
full complement of secd's profiles) that causes us to see this, although
it is technically still a bug.
Changed Severity from `B' to `C' 
Changed Priority from `1' to `2'

[8/2/93 public]

Fixed locally.

[8/19/93 public]
Fix: rca_site_check_readonly: don't free memory in compatibility case

[11/8/93 public]
Closed.



CR Number                     : 7776
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : kinit fails to update persistent data
Reported Date                 : 4/21/93
Found in Baseline             : 1.0.2
Found Date                    : 4/21/93
Severity                      : D
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[4/21/93 public]


The fix to OT defect 6556 commented out the section of update_identity_exp()
in sec_login_pvt.c that updated the persistent data.  This adversely affects
klist.  Also, the following code in sec_login_pvt_check_exp() produces
undesirable results for klist:

    if (lcp->identity->policy.identity_exp < now)
    {
        update_identity_exp(lcp, stp);
        time (&now);
        if ((*stp == error_status_ok) &&
            (lcp->identity->policy.identity_exp < now))
        {
            *stp = rpc_s_auth_tkt_expired;
        }
    }

The effect is that the correct identity-info expiration is never updated if
a user performs a kinit before the initial identity-info expiration date.

[10/20/93 public]
No longer ignore error codes, and previously removed code is back in use.

[11/8/93 public]
Closed.



CR Number                     : 7763
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rs_task.c
Short Description             : rs_task_fatal should call abort().
Reported Date                 : 4/20/93
Found in Baseline             : 1.0
Found Date                    : 4/20/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : .../security/server/rs/rs_task.c
Sensitivity                   : public

[4/20/93 public]

rs_task_fatal should call abort(), ensuring that a stack trace is available
in a core file in the event of a crash, rather than throwing an exception
(which destroys the evidence of what happened).

[4/27/93 public]

Liza wants this in ASAP (and I agree with her on this); assigning to her
for now..

[8/2/93 public]

Fixed locally.

[8/23/93 public]
replacing the exception code by abort() in rs_task_fatal() so stack
trace information is maintained in a core file.

[11/8/93 public]
Closed.



CR Number                     : 7758
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : binding
Short Description             : Binding cache confused and returning handle to wrong site?
Reported Date                 : 4/20/93
Found in Baseline             : 1.0.2
Found Date                    : 4/20/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/rca/internal_binding.c
Sensitivity                   : public

[4/20/93 public]
The binding code seems to be getting confused about what name a binding
corresponds to when binding to a master, then to the slave that you had
bound to the master through.  The following commands reproduced the problem
multiple times for me:

# sec_admin
Default replica:  /.../skibum/subsys/dce/sec/rep1
Default cell:     /.../skibum
sec_admin> info

Default replica:  /.../skibum/subsys/dce/sec/rep1
Default cell:     /.../skibum
          State:                   in service - slave
          Last update received at: Tue Apr 20 11:11:21 1993
          Last update's seqno:     0.210
sec_admin> site /.: -u
Default replica:  /.../skibum/subsys/dce/sec/master
Default cell:     /.../skibum
sec_admin> info

Default replica:  /.../skibum/subsys/dce/sec/master
Default cell:     /.../skibum
          State:                   in service - master
          Last update received at: Tue Apr 20 11:11:21 1993
          Last update's seqno:     0.210
sec_admin> site /.:/subsys/dce/sec/rep1
Default replica:  /.../skibum/subsys/dce/sec/rep1
Default cell:     /.../skibum
sec_admin> info

Default replica:  /.../skibum/subsys/dce/sec/rep1
Default cell:     /.../skibum
          State:                   in service - master
          Last update received at: Tue Apr 20 11:11:21 1993
          Last update's seqno:     0.210
sec_admin> quit
bye.

NOTE: The last operation is supposedly to the replica, but the server says
it's the master.  I did this again with DEBUG_SEC turned on, and the last
info was done with the same binding cache entry that the first info (that
worked) used.  So, the bind to the master between those two info calls must
have messed up the cache entry, such that the entry kept it's rep1 name, but
wound up with a handle to the master? (I can't figure out where that happened
since there were no obvious calls to replace the cache entry, but that's what
seems to have happened).  I'll email you the long output with the DEBUG_SEC
traces, so you can follow it easier.

[4/20/93 public]
Changing State from open to defer for 1.0.3.

[10/15/93 public]
Fix:    Don't reset input handle's rpc binding.  Lock input context.

[11/8/93 public]
Closed.



CR Number                     : 7729
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : encryption/password info
Reported Date                 : 4/15/93
Found in Baseline             : 1.0.2
Found Date                    : 4/15/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : 4_accts.gpsml
Sensitivity                   : public

[4/15/93 public]

From Howard's FAQ - Pam, should some of this be added to the
Admin Guide?  In particular, noting that it's not the user's
password that gets transmitted and stored in the registry,
but rather a DES key.


From: walt
To: jec@osf.org
Subject: SEC: Encryption vs Hashing
Date: Mon, 22 Feb 93 14:22:00 -0500

Jonathon, I'll wing an answer without looking into any references, so I
may be slightly wrong but not by very much.

> Could you enlighten me on the encryption vs. hashing? Specifically:
> (a) when I look at the 13 characters in the 2nd field in /etc/passwd,
> what am I looking at? (b) How does the DCE registry store passwords on
> disk? I was laways under the impression taht they were encrypted in
> the registry's master key?!

"Encryption" refers to an invertible process (namely, "decryption"),
based on a key.  "Hashing" (= "checksumming" = "one-way function" =
"fingerprinting", etc.) refers to a non-invertible process, with or
without a key being involved.  References: The DES spec and the MD5 spec
(the latter is Internet RFC 1321).

(a) The first 2 characters are the "salt" (in plaintext), which select
one of 4096 (I think it is) "variations" of DES (these variations are
non-standard because they twist some S-boxes, I think -- it's intended
to effectively expand the DES keyspace, making an exhaustive key search
harder).  The algorithm then crunches the user's password into a 64-bit
DES key (or maybe uses it directly, Unix passwds being so short), and
uses that key to encrypt the null DES block 25 times (using the DES
variation selected by the salt -- again, the 25 times are an attempt to
show down DES, making guessing attacks), and that's what the other 11
characters are (64 random bits -> 11 ACSII characters).  This is
obviously a hashing of the password, not an encryption.

(b) The Rgy doesn't store passwords, it stores DES keys.  As above, the
user's password is crunched, locally on the client (I don't remember the
algorithm used in Unix, but in Kerberos/DCE the crunching is a
"fan-fold" algorithm -- see the Kerberos spec).  It's the key that's
used in the authentication exchange, not the password.

- Walt

[6/22/93 public]
Changed "Fix By Baseline" from 1.0.3 to 1.1.

[9/23/93 public]
Fixed and verified.  Note that we did not define 
encyrption vs. hashing, but we did clarify how the 
principal's password is used to derive the auth key 
and how the keys are used for authentication.  
(Note that a detailed description of authentication 
is in the Application Development Ref.) Verified by 
Mike Burati.

[11/15/93 public]

Verified change in latest doc build and closed this CR.



CR Number                     : 7727
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : bounds error in deif_do_delete
Reported Date                 : 4/15/93
Found in Baseline             : 1.0.2b17
Found Date                    : 4/15/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : deif.c
Sensitivity                   : public

[4/15/93 public]
  While compacting entries in src/security/client/admin/acl_edit/deif.c
routine deif_do_delete(), an inner loop (j) has bounds [i, num_entries).
num_entries is a count and not a max index. Inside the 'j' loop we see
(line 1115):
		     ---- ---- ---- ---- ---- ----
		     ---- ---- ---- ---- ---- ----
     for (j = i; j < sec_acl_p->num_entries; j++)
         Sec_acl_p->sec_acl_entries[j] = sec_acl_p->sec_acl_entries[j+1];
		     ---- ---- ---- ---- ---- ----
		     ---- ---- ---- ---- ---- ----
I have two dumps in which the (j+1) entry is an invalid address.
  Todd Blumer is in Cambridge and is watching this one core-dump on him.
This was found in out port of b17, but the source code has not changed
in the b22 base (latest we have downloaded). A quick scan of OT 
(ot bugs -x "'[comp sec] && [area code]'") shows no match for
this problem.
  I can't believe nobody saw this one in so many months, bu tthe dump is
pretty straightforward. Please contact Todd for the actual test case
which induces this failure. It's part of the challenge code, I think.

[4/14/93 public]
Thanks Ward.  I can't believe nobody found this yet either, but it doesn't
seem to crash (purely because of luck) on the reference platforms.  I had to
mark it 'defer' because they don't want any bugs in the 'open' state except
for the one A0 that they (the OSF) want fixed so they can refreeze 1.0.2.
Go ahead And fix it (j < (sec_acl_p->num_entries - 1)) for your product
until they'll let us fix it in the mainline.

[8/6/93 public]
fixed by changing the following :
     for (j = i; j < sec_acl_p->num_entries - 1; j++)
                                            ^^^
         sec_acl_p->sec_acl_entries[j] = sec_acl_p->sec_acl_entries[j+1];

[11/8/93 public]
Closed.



CR Number                     : 7705
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_acl_mgr_* pointer
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2
Found Date                    : 4/13/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : sec_acl_mgr_configure.3sec
sec_acl_mgr_get_access.3sec
sec_acl_mgr_get_manager_types.3sec
sec_acl_mgr_get_mgr_types_semantics.3sec
sec_acl_mgr_get_printstring.3sec
sec_acl_mgr_is_authorized.3sec
sec_acl_mgr_lookup.3sec
sec_acl_mgr_replace.3sec
Sensitivity                   : public

[4/13/93 public]
Add the pointer below to the App Dev Ref, if it's not already
there:


From: weisman@osf.org
To: gregg@osf.org
Cc: melman
Subject: SEC: Where is code for sec_acl_mgr_ functions 
In-Reply-To: Your message of "Fri, 15 Jan 93 16:13:19 EST."
Date: Fri, 15 Jan 93 16:25:29 -0500

Look in /src/security/client/admin/acl_edit/svr_example/*

Dave

>>sec_acl_mgr_xxxx:
>>the application development reference claims that these functions
>>are not available to applications programmers as procedures (it's
>>true) but exist in code form.  where the code is to be found is not
>>mentioned.  does anyone know where it is?

[08/20/93 public]
The source example referenced above is in the DCE source tree, so you can't
put that in the APP dev guide because it's up to vendors whether to provide
examples or not, and they will be in a different place if they do.  Even so,
it's still an example use, not "exist in code form" as mentioned above.
This is all going to change for 1.1 because Rich Salz is working on a 
replacement for this internal API.  Rich, please comment on what you think
should be done about this documentation.

[08/20/93 public]
I think we should drop the sec_acl_mgr_xxx documentation and consider
it to be totally replaced by the 1.1 ACL library.  There will be
a DCE-RFC shortly.  There is a chance that the 1.1 ACL library won't
be a public facility in 1.1, so don't cancel this OT quite yet...

[9/16/93 public]
I've changed this to an enhancement so that it will not be lost.  
As an enhancement it will be reviewed for 1.1.  At that time we 
will know if the ACL library made it into 1.1.

[8/31/94 public]
Fixed and verified.
As a special favor to rsalz, defuncted the sec_acl_mgr calls.

[10/20/94 public]
Closed bug.



CR Number                     : 7704
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 2817
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : users_gdref
Short Description             : dce_login and clock skew
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2
Found Date                    : 4/13/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : dce_login.1sec, 
sec_login_validate_identity.3sec
Sensitivity                   : public

[4/13/93 public]

The following FAQ note should get incorporated in the User's
Guide:


From: weisman@osf.org
To: dce-team
Subject: SEC: Security Client Folklore
Date: Thu, 16 Apr 92 16:01:55 -0400

Tom Lemaire had a fun problem while trying to dce_login on a security
client machine.  

Symptoms:

1) He could dce_login normally on the server machine.

2) Any attempt to login from the client machine resulted in:
	"Password Validation Failure."

The final problem was due to the time clocks on the machine being
approximately one hour our of sync.  The server machine thought it was
around 1400 and the client thought it was around 1500.

Because of the skew, Kerberos returned an error to
sec_login_validate_identity.

The "Password Validation Failure." message from dce_login was due to an bug
in its error handling (OT 2817).  Unfortunately the real Kerberos error is
not much more descriptive.

Dave

[9/3/93 public]
Fixed and verified.  Verified by Mike Burati and Bill sommerfeld.

[9/9/93 public]
Closed bug.



CR Number                     : 7702
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd, admin_ref, users_gdref
Short Description             : changing passwords using rgy_edit
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2
Found Date                    : 4/13/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : users_gdref/security/4_accts.gpsml
Sensitivity                   : public

[4/13/93 public]

The information below is from Howard's FAQ.  Info needs to be
added to the User's Guide to explain to users how to change
their passwords using rgy_edit (instead of chpass).  The
admin guide (and ref?) need to include information about how the
group and org must be specified before an account can be
changed.  Details follow:

From: sekhar@osf.org
To: melman
Cc: bradcj, weisman, sekhar, davel, hathaway
Subject: SEC: chpass and other utilities
Date: Mon, 16 Nov 92 11:53:43 -0500


> Are we providing a chpass utility to let users (not admins)
> change passwords and other registry info?  Is it in the tree
> yet? 

The state of chpass has not changed since the end of 1.0.1 when
it was delivered. I have included at the end of this mail a copy
of the drb-request which was submitted for chpass.

About a week or two ago I did raise the issue with Brad that we
are not building the 'sample' programs i.e. login, su, chpass etc.
My understanding is that we won't attempt to build these 
and hence there are no plans to build these utilities.

The change command in rgy_edit does allow users (not just
cell_admin ) to change their password as follows (I just
tested this):

     1. created an account sekhar
     2. dce_login sekhar -dce- 
     3. change -p sekhar -g none -o none -mp new -pw newpasswd
     4. exit
     5. dce_login sekhar newpasswd
     6. successfully logged in

I have not checked to see if all the fields which can be changed
by a user using chpass can also be changed using the change command.

One other issue is that chpass allows a user to specify
whether the information it be changed in the registry database, or
the local override file only or both. Without chpass the only way
a user could change information in the override file would be to 
edit the override file (assuming the location is known to the user).
And editing the file would in turn would most probably require
root access since the passwd_override file should be writable by
root only for obvious reasons.

sekhar

--------- Forwarded message --------------------------

>From burati@APOLLO.HP.COM Fri Jul 17 15:02:58 1992
From: burati@APOLLO.HP.COM (Mike Burati)
Date: Fri, 17 Jul 92 14:56:21 EDT
Subject: Notice of pre-approved submission
To: dce-drb@osf.org

This is not a request, but a notice for the rest of dce-drb
readers that the following submission is in progress.  It
was pre-approved by Brad, in case I got it done in time for
submission.

CR4767 Drop chpass REFERENCE source (not buildable version).

We are supplying the source for chpass (from bsd4.4) that has
been integrated with the DCE to the point where vendors may
finish the port, and make it buildable.  It is example code,
so we are not supplying a Makefile, and it can not possibly
affect the stability of 1.0.1 at this time.  There are a few
improvements we intend to make to it for 1.0.2 (password
override file manipulation) but wanted to get the sample
version that at least modified pwent information and passwords,
so that much would be usable in 1.0.1 by those vendors willing
to make it buildable on their platform.

New files:
security/client/unix_utils/chpass/ chpass.h chpass.c
                                   pathnames.h util.c field.c
...Mike

-------


From: sekhar@osf.org
To: kevins
Cc: melman, mp, mcg, sekhar
Subject: SEC: chpass and other utilities 
Date: Tue, 17 Nov 92 11:20:08 -0500

> But when I tried it in a different fashion with the change command like:

> change -p account_name -mp new -pw origpass

> I got this error:

> ?(rgy_edit) Wildcard password changes not allowed. - Unknown or redundant keyword (Registry Editor/TTY Interface) (dce / sad)

> Is this the appropriate message? The documentation does not list 
> any explicit requirement for group and org. There is, however,
> a sentence that could be an implicit(assumed) requirement. Should 
> this be stated more clearly(?) or should I make the assumtion. 

The group and org MUST be specified before you can change an 
account. The help command in rgy_edit shows this. I did a quick
check on the Admin Guide which I don't think mentions this.

rgy_edit=> do a
rgy_edit=> help change
           ..... output deleted .....

           REQUIRED:   If -pw or -rp are specified, then -mp must also be
                       specified, to ensure the callers identity.
                       Wildcard password changes are not allowed.  If the password
                       is to be changed, then the principal, group and org must be
                       specified in either interactive mode or via -p -g and -o.

The reason that group and org must be specified is that a principal
can have more than one account and so the user is required to specify
the group and the org to identify THE account where the password
is to be changed. Without the group and org specification either rgy_edit
would have to update the passwords for all accounts or none at all.
And the current policy is that it refuses to update the passwords 
for any account at all. The term Wildcard refers to "all accounts"

This should be documented in rgy_edit subcommands in the Admin Guide
(which I did not see). So could you please open an OT report ? 

Hope this has clarified things. 

sekhar

[6/22/93 public]
Changed "Fix By Baseline" from 1.0.3 to 1.1.

[9/16/93 public]
Fixed and verified.  Verified by Mike Burati.  Note that the 
issue of pgo's being required to change a password was fixed by 
1.0.2 CR 6133, which was opened against the admin_gd and admin_ref.

[11/15/93 public]

Verified change in latest doc build and closed this CR.



CR Number                     : 7701
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 3097
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : In a few of src/security/idl/*.idl import statements lack "dce/" prefix.
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2b23
Found Date                    : 4/13/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : in src/security/idl: rs_acct.idl, rs_misc.idl, rs_pgo.idl, rs_plcy.idl, rs_prop_acct.idl, rs_prop_acl.idl, rs_prop_pgo.idl, rs_prop_plcy.idl, rs_qry.idl, rs_repmgr.idl rs_unix.idl, rs_upd.idl, rsecidmap.idl
Sensitivity                   : public

[4/13/93 public]
In all the following files (in src/security/idl):

	rs_acct.idl
	rs_misc.idl
	rs_pgo.idl
	rs_plcy.idl
	rs_prop_acct.idl
	rs_prop_acl.idl
	rs_prop_pgo.idl
	rs_repmgr.idl
	rs_unix.idl
	rsecidmap.idl

some import statements lack a "dce/" prefix eventhough all the .h files
resulting from the idl compilation of the imported idl files are exported
to /usr/include/dce. This problem breaks some split sandbox builds.

[8/2/93 public]

Fixed locally.

[8/4/93 public]
Files submitted today.  Marked fix.

[11/8/93 public]
Closed.



CR Number                     : 7685
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : libauthhelper
Short Description             : libauthelper bug causes dfsbind core dump & hangs
Reported Date                 : 4/12/93
Found in Baseline             : 1.0.1
Found Date                    : 4/12/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : src/security/helper/auth_helper.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : open

[4/12/93 public]
src/security/helper/auth_helper.c is using rpc_stralloc() to allocate 
space for strings and free() to free the space.  It should be using 
rpc_string_free().  Using free() causes the memory to be free incorrectly 
and results in usage of non freed memory.  This causes everything from 
stack corruption the check_ownership() function  stating files in 
/.../cellname/fs/.... which is a definite no no.  This occurrs when
the string memory pointing to the ticket file gets incorrectly set to
the server entry in the name space.  The problem gets triggered when
libauthhelper starts recycling cred cache entries.
The fix is to use rpc_string_free() to free the space instead of free().
My guess is that this might be related to the vanishing dfsbind problem
OSF is seeing in their CHO DFS runs.
Below are the code changes in get_context_from_pag() which correct
the problem.  Look for ifdef BUG_FIX.
.
.
.
    if (slot < 0) {
        for (i=0; i<CCSIZE; i++) {
            if (context_cache[i].refcount == 0) {
                error_status_t xst;
#ifdef BUG_FIX
                dprintf("%d: recycled\n", i);
#else
                dprintf("%d: recycled\n", slot);
#endif
                sec_login_release_context (&context_cache[i].context, &xst);
                sec_krb_cred_free(&context_cache[i].cred);
#ifdef BUG_FIX
                rpc_string_free(&context_cache[i].credrep.server_name, &xst);
                rpc_string_free(&context_cache[i].pathname, &xst);
#else
                free(context_cache[i].credrep.server_name);
                free(context_cache[i].pathname);
#endif
                context_cache[i].pathname = 0;
                context_cache[i].valid = 0;
                context_cache[i].cred_valid = 0;
                slot = i;
                break;
            }
        }
    }
.
.
.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `open'

[4/12/93 public]

I'll take your word for it on this fix..

[04/14/93 public]

Changing to to fix by 1.0.2a since we do need this for 1.0.2a for dfs.
Also, If you need help testing the fix, we can do that here at OSF.

[4/27/93 public]
I think I've been struck by this one as well - updating state to "open".

[5/7/93 public]
We'll implement the fix.

[5/12/93 public]
Submitted.

[11/8/93 public]
Closed.



CR Number                     : 7661
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_acl_bind()
Short Description             : acl_edit -e fails on a LFS root
Reported Date                 : 4/6/93
Found in Baseline             : 1.0.2
Found Date                    : 4/6/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : client/acl/daclbind.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : sshi!ibm.com
Transarc Status               : open

[4/6/93 public]
 When cell has LFS root.dfs, acl_edit -e shows the filesystem ACL,
not the namespace ACL like it should.  This works when JFS is
root.dfs. The example in the DCE Users guide and Reference showed
that a user should be able to edit both the file system and CDS ACL (-e).
The example is in Chapter "Authorization", section "Editing Leaf 
Objects the DCE Name Services". 

The problem can be reproduced on the AIX reference platform and PMAX. 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `sshi!ibm.com' 
Added field Transarc Status with value `open'

[4/6/93 public]

The CR is primarily a DFS issue and will therefore be addressed 
in the DCE 1.0.2a release.

[4/14/93 public]
Since 1.0.2 is closed and we're working on 1.0.2a, I've changed the state
to 'open' and changed fixby to 1.0.2a, since a fix for this is necessary for
the DFS release.  Reassigned to myself, waiting for our 1.0.2a backing build
to be set up (for sup'ing).

[4/14/93 public]
State is changed to defer; i.e. it means that it is not open for 1.0.2, but
will be fixed in 1.0.2a.

[5/7/93 public]
Fix is being tested at IBM at the moment, because our RIOS is sick and I can't
seem to get a build of 1.0.2a to work on HPUX (every tool coredumping in RPC).

[5/11/93 public]
IBM verified that the fix resolved the problem and I verified that it did not
cause any regression to the core...  Fix submitted, marked 'fix'.

[11/8/93 public]
Closed.



CR Number                     : 7612
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_key_mgmt_garbage_collect()
Short Description             : sec_key_mgmt_garbage_collect overzealous
Reported Date                 : 3/30/93
Found in Baseline             : 1.0.2
Found Date                    : 3/30/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : security/client/key_mgmt/seckey_list.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : open

[3/30/93 public]
(I wasn't sure who to assign this to...)
The sec_key_mgmt_garbage_collect function garbage collects too many
keys.  The problem shows itself with the 'bos genkey' command.  If the
current key is older than the maximum ticket lifetime, it is removed
when the new key is added, and subsequent bos commands fail.
The problem is that the GC code is looking at the timestamp on the key
when it should be looking at the timestamp on the NEXT key.  When a
new key is created at t, the old key should be kept around for
t+maxlifetime, since a ticket with the old key could have been
generated at t-epsilon.
Here's a possible fix (based on the b19 tree):
*** seckey_list.c	Wed Feb 10 14:24:29 1993
--- /afs/transarc.com/usr/comer/seckey_list.c	Tue Mar 30 12:51:58 1993
***************
*** 728,739 ****
--- 728,741 ----
  #endif
  {
      unsigned32              key_vno, next_vno = -1;
+     unsigned32		    gc_candidate;
      error_status_t          lst;
      sec_passwd_type_t       keytype = sec_passwd_none;
      sec_rgy_login_name_t    account;
      sec_rgy_plcy_auth_t     auth_policy;
      struct timeval          tm;
      int                     oldest;
+     int			    first;
      void                    *cursor;
      krb5_timestamp          current_ts, timestamp;
      del_node_t              *delete_list = NULL, *dnode;
***************
*** 798,816 ****
       * remove any, that is ok too; it means there's no garbage collection
       * needed that we can perform.
       */
      sec_key_mgmt_initialize_cursor(authn_service, arg, principal_name,
                                      &keytype, &cursor, err);
      if (BAD_STATUS(err)) {
          return;
      }
      next_vno = -1;
      while (GOOD_STATUS(err)) {
          sec__key_mgmt_get_next_ts(cursor, NULL, &next_vno,
                                      &timestamp, err);
          if (GOOD_STATUS(err) && (timestamp < current_ts) &&
!                                                     (timestamp < oldest)) {
!             ADD_TO_LIST(delete_list,next_vno);
          }
      }
      /* Caller doesn't need to know we hit end of list */
      if (STATUS_EQUAL(err, sec_key_mgmt_e_key_unavailable)) {
--- 800,828 ----
       * remove any, that is ok too; it means there's no garbage collection
       * needed that we can perform.
       */
+     /*
+      * The way to tell if the key is older than than the oldest possible 
+      * ticket is to look at the timestamp of the key that follows.  If
+      * the timestamp of the key that follows is older than the current
+      * time less the maximum ticket lifetime, there can't be any valid
+      * tickets with the (older) key outstanding.
+      */
      sec_key_mgmt_initialize_cursor(authn_service, arg, principal_name,
                                      &keytype, &cursor, err);
      if (BAD_STATUS(err)) {
          return;
      }
      next_vno = -1;
+     first = 1;
      while (GOOD_STATUS(err)) {
+ 	gc_candidate = next_kvno;
          sec__key_mgmt_get_next_ts(cursor, NULL, &next_vno,
                                      &timestamp, err);
          if (GOOD_STATUS(err) && (timestamp < current_ts) &&
!                                                     (timestamp < oldest) && !first { 
! 	    ADD_TO_LIST(delete_list,gc_candidate);
          }
+ 	first = 0;
      }
      /* Caller doesn't need to know we hit end of list */
      if (STATUS_EQUAL(err, sec_key_mgmt_e_key_unavailable)) {
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `open'

[4/22/93 public]
Changed Interest List CC from `gmd@osf.org, travis@transarc.com' to 
 `gmd@osf.org, travis@transarc.com, frisco@apollo.hp.com, pakhtar@transarc.com'

[4/23/93 public]
If everytime an administrator updates the dfs-server key (which we
hope will happen fairly often), he/she ends up getting a failure on
the next command that talks to the server, we have a problem -- or at
least the potential for a lot of confusion.  Accordingly, I'm
increasing the priority.
Changed Priority from `2' to `1'

[4/28/93 public]
Changed Interest List CC from `gmd@osf.org, travis@transarc.com, 
 frisco@apollo.hp.com, pakhtar@transarc.com' to `gmd@osf.org, 
 travis@transarc.com, frisco@apollo.hp.com, pakhtar@transarc.com, 
 dstokes@transarc.com'

[5/11/93 public]
Ok, I finally had a chance to get to this CR and read it thoroughly enough to
understand what the problem is...  I'm not sure I like the above proposed fix,
because it seems to assume that the keys are coming back from the iterative
lookup calls in timestamp order.  We could prove that this is the case with
the current underlying implementation, but I don't think it's guaranteed to
be that way.  Unfortunately, I think we'll have to do a little more work...
Fortunately, this is a garbage collecting routine which normally only runs
when you're changing a key, so a few extra cycles to ensure correctness aren't
going to affect the overall system performance...
Currently, it assumes that any key older than the max_tkt_lifetime can be
trashed since any tickets created that long ago are no longer valid.  I don't
remember why we did this (Joe and I came up with that assumption a *long* time
ago) but it definitely seems wrong to me (as you point out above) now, because
you could have obtained tickets using that key right up to the point that it
was changed.  It used "oldest = tm.tv_sec - auth_policy.max_ticket_lifetime;"
(The oldest timestamp on a key could be (now - max_tkt_lifetime)).
I believe that the assertion (as opposed to our previous incorrect assumption)
should read as follows:
1) We get the current key # by asking secd, then find the ts of that key by
   iterating over the keytable until we find that key#.
2) A key Kx was current until K(x+1) was created and tkts may have been
   obtained using Kx up until K(x+1) was created.
3) If K(x+1) was created at NOW - max_ticket_lifetime, then there are no tkts
   obtained with Kx or earlier keys, that are still valid (I think that's the
   same thing you were trying to say in your comment above).
I propose the following:
a) Build the list of keys regardless of whether they will be gb'd, in the first
iteration where you're looking for the current one (we were going through most
of the list anyway, so why not save them while we're doing that).
b) Sort by timestamp (newest first).
c) Walking the list;  Any key newer than (NOW - max_tkt_lifetime) is ok.
d)  Find the first one created AT or before (NOW - max_tkt_lifetime), which is
   also ok.  This is our oldest possible key.
e)  Any key older than this oldest key will be garbage collected. 
Comments or problems with this assertion? Let me know NOW (not now-max_tkt_life)

[5/11/93 public]
Looks good to me.

[5/12/93 public]
I've coded and tested the fix.  Waiting for a sanity check on it from Mike
Comer and someone here before I submit it.

[5/13/93 public]
Submitted fix, marked 'fix'.

[11/8/93 public]
Closed.



CR Number                     : 7589
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : users_gdref
Short Description             : typo on option in acl_edit.1sec
Reported Date                 : 3/25/93
Found in Baseline             : 1.0.2
Found Date                    : 3/25/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 1.0.3
Affected File(s)              : acl_edit.1sec
Sensitivity                   : public

[melman 3/25/93 public] 
In the last sentence of the second paragraph of the descriptions of both
the -n and -c options, in the OPTIONS section of acl_edit.1sec, (whew!) it
says: 

   either the c or -n option.

There should be a - (dash) before the c.

[6/7/93 public]
Fixed and verified.

[08/19/93 public]
Closed bug.  Note that there are no change markers in the file
for this editorial fix.



CR Number                     : 7581
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : parse_name
Short Description             : sec_id_parse_name should disallow null or zero-length argument
Reported Date                 : 3/24/93
Found in Baseline             : 1.0.2
Found Date                    : 3/24/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[3/24/93 public]

sec_id_parse_name &crew should fail if passed NULL or "" for a first
argument.

We can't change this *now*, as it would be potentially destabilizing just
prior to a freeze.

[5/7/93 public]
This bug may be related to 7805.

[7/29/93 public]
As this is an incompatible change (that's known to break past Encinas,
for instance) there's no possibility of changing the behavior before 1.1.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 7532
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 7476
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : doc
Short Description             : API incorrectly documented
Reported Date                 : 3/18/93
Found in Baseline             : 1.0.2
Found Date                    : 3/18/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
sec_login_export_context.3sec
sec_login_import_context.3sec
Sensitivity                   : public

[3/18/93 public]
The following security API routines are incorrectly documented making
application developers change code to port to non 32 bit architectures.
The offending parameters need to be changed from long to match
the generated include file declaration which at the moment is ndr_long_int.

sec_rgy_acct_get_projlist
sec_rgy_pgo_get_members
sec_rgy_pgo_id_to_unix_num
sec_rgy_pgo_name_to_unix_num

The following security API routines are incorrectly documented, but
application portablity is not a problem.

sec_rgy_pgo_get_by_unix_num (long -> ndr_long_int)
sec_rgy_pgo_unix_num_to_id  (long -> ndr_long_int)
sec_rgy_pgo_unix_num_to_name (long -> ndr_long_int)

The following security API routines use an undefined type, byte.  To match
the include file it should say idl_byte.

sec_login_export_context    
sec_login_import_context

[3/18/93 public]
This is a 'doc' bug, not a 'code' bug, so I fixed that above.  There's already
a bunch of CR's (dup'd now) open against the idl files as 'code' bugs.  Pam,
check with us to seen when we're fixing this and exactly what we're going
to use (signed32 or ndr_long_int).

[3/18/93 public]
The documentation is incorrect today.  The include files specify
ndr_long_int.  The bug isn't in the code, it is in the documenation.
If you want to change the code to signed32, thats just peachy,
but it is cosmetic.  Changing the documentation to
match what is done today is what I am looking for.  Without it application
developers will have trouble porting to platforms where ndr_long_int
is not C type long

[06/08/93 public]
Changed "Fix By Baseline" field from 1.0.2 to 1.0.3.

[9/8/93 public]
I made the changes the sec_login_export_context and sec_login_import_context.  
The long to ndr_long_int changes were made under CR 7532.
Status changed to fixed.  This CR should not be verified until 
Security developers finalize plans for idl file changes.

[10/7/93]
The source code changes have been submited to the 1.0.3 tree.
ndr_long_int had been changed to signed32 in the .idl files
( and if it applies ndr_ulong_int -> unsigned32)

[10/21/93 public]
I changed the ndr_long_int to signed32.   I verified this CR 
by looking at the idl files changed by mccann.

[11/11/93 public]

Verified that the byte to idl_byte changes (this CR)
were made in the latest doc build and closed this CR.
(Also verified ndr_long_int to unsigned32 changes (CR7476).)



CR Number                     : 7527
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : several defunct files
Reported Date                 : 3/17/93
Found in Baseline             : 1.0.2
Found Date                    : 3/17/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : various .ps files
Sensitivity                   : public

[3/17/93 public]
Pam, Bob Matthews noticed that the following files in
admin_gd/security/security/figures are not included by any file.
They should probably be "defunct-ed".

13_access_110.ps
13_access_60.ps
4_accts_10.ps
4_accts_20.ps
4_accts_30.ps
4_accts_40.ps
4_accts_50.ps
4_accts_60.ps
4_accts_70.ps
4_accts_80.ps
5_muticell_10.ps
7_pols_10.ps
7_pols_20.ps
7_pols_30.ps
7_pols_40.ps
7_pols_50.ps
7_pols_60.ps
7_pols_70.ps
7_pols_80.ps
7_pols_90.ps
8_maint_10.ps
8_maint_20.ps

[06/08/93 public]
Changed "Fix By Baseline" field from 1.0.2 to 1.0.3.

[7/13/93 public]
Fixed and verified.  Verified by me.

[08/19/93 public]
Closed bug.



CR Number                     : 7512
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 6111
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security ccache
Short Description             : byzantine core dump in cc mgmt code
Reported Date                 : 3/16/93
Found in Baseline             : 1.0.2
Found Date                    : 3/16/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_login*
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[3/16/93 public]
  The much-delayed verification of OT 6111 results in the example giving
a core dump. Details follow:
		    ----   ----   ----   ----   ----
		    ----   ----   ----   ----   ----
Pseudocode:
        sec_login_handle_t c1, c2, c3;
        char               c1_bufPtr[1024];    /* Large enough */
        int                used, musthave;     /* for _export_context */
        error_status_t     st;
        extern void check_error(error_status_t st); /* exits on error */
        setup_identity("anyuser", 0, &c1, &st);
        check_error(st);
        validate_identity(c1, "user1-pw.", &st);
        check_error(st);
        set_context(c1, &st);
        check_error(st);
        export_context(c1, 1024, c1_bufPtr, &used, &musthave, &st);
        check_error(st);
        import_context(1024, c1_bufPtr, &c2, &st);
        check_error(st);
        set_context(c2, &st);
        import_context(1024, c1_bufPtr, &c3, &st);
        check_error(st);
        set_context(c3, &st);
        purge_context(c3, &st);
        check_error(st);
        purge_context(c2, &st);       /* Before 6111: succeeds! */
				      /* After 6111: dumps core */
        check_error(st);
        set_context(c1, &st);         /* before 6111: Never returned */
        check_error(st);
        ...
		    ----   ----   ----   ----   ----
		    ----   ----   ----   ----   ----
 Finally got the test code, the baselevel, and the time all together to
verify this fix. We now get a core dump at:
		    ----   ----   ----   ----   ----
		    ----   ----   ----   ----   ----
0xf75a07b4 in sec_login_pvt_purge_context (lcp=0x23e028, stp=0xf7fff000)
    at /afs/transarc.com/project/alpine/dev/rel/07.005/src/security/client/login/sec_login_pvt.c:2698
2698            (void) unlink(DATAFILE_NAME(dfn, KRB_INFO(lcp).cache));
(gdb) print *lcp
$1 = {cell = {"/.../k2.dce.transarc.com", '\000' <repeats 1001 times>},
  principal = {"stresstest/user1", '\000' <repeats 1009 times>},
  identity = 0x23f028, krb_info = {cache = 0x0, pepper = {pa_type = 0,
      length = 0, contents = 0x0}, num_caches = 3, prev_caches = 0x206628,
    tgt_data = 0x0}, state = valid, auth_src = sec_login_auth_src_network,
  flags = 0, local = 1, refreshed = 0, refcount = 2,
  cache_link_next = 0x7f028, cache_link_prev = 0x0,
  context_name = 0x23f228 "FILE:/opt/dcelocal/var/security/creds/dcecred_0d281f00", context_name_len = 55, mark = 0, namecache = 0x0, namecache_name = 0x0}
		    ----   ----   ----   ----   ----
		    ----   ----   ----   ----   ----
... this occurs during the "sec_login_purge_context(c2)" call in the
pseudocode above. The full backtrace is (deducible) as follows:
		    ----   ----   ----   ----   ----
		    ----   ----   ----   ----   ----
#0  0xf75a07b4 in sec_login_pvt_purge_context (lcp=0x23e028, stp=0xf7fff000)
    at /afs/transarc.com/project/alpine/dev/rel/07.005/src/security/client/login/sec_login_pvt.c:2698
#1  0xf7599bb8 in sec_login_purge_context (login_context=0xf7fff004,
    st=0xf7fff000)
    at /afs/transarc.com/project/alpine/dev/rel/07.005/src/security/client/login/sec_login.c:1148
#2  0x19dd0 in itl_sec_drop_context (purge=1)
    at /afs/transarc.com/project/alpine/dev/sb/travis/src/test/security/transarc/itl/sec_login.c:663
#3  0x3b954 in itl_CommandLoop (promptStr=0xf7fff110 "sec_test> ")
    at /afs/transarc.com/project/alpine/dev/sb/travis/src/test/file/itl/itl_command.c:1953
#4  0x2604 in main (argc=1, argv=0xf7fff394)
    at /afs/transarc.com/project/alpine/dev/sb/travis/src/test/security/transarc/itl/sec_test.c:128
(gdb) print *lcp
$1 = {cell = {"/.../k2.dce.transarc.com", '\000' <repeats 1001 times>},
  principal = {"stresstest/user1", '\000' <repeats 1009 times>},
  identity = 0x23f028, krb_info = {cache = 0x0, pepper = {pa_type = 0,
      length = 0, contents = 0x0}, num_caches = 3, prev_caches = 0x206628,
    tgt_data = 0x0}, state = valid, auth_src = sec_login_auth_src_network,
  flags = 0, local = 1, refreshed = 0, refcount = 2,
  cache_link_next = 0x7f028, cache_link_prev = 0x0,
  context_name = 0x23f228 "FILE:/opt/dcelocal/var/security/creds/dcecred_0d281f00", context_name_len = 55, mark = 0, namecache = 0x0, namecache_name = 0x0}
		    ----   ----   ----   ----   ----
		    ----   ----   ----   ----   ----
  This is enough of a twisted example that I can't foresee raising it
above D3. But it's a dumper now and possible could justify a programming
note. A null KRB_INFO(lcp).cache should return 'invalid context'
instead?
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[9/30/93 public]
The program above (suitably tweaked) does the right thing, returning
"Context has not been validated" to the final c1 set_context.  There have
been fixes in this area since the initial report; please re-open with more
info if you can still reproduce it.

[11/8/93 public]
Closed.



CR Number                     : 7499
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : kinit -l/-r with invalid value
doens't report errors
Reported Date                 : 3/15/93
Found in Baseline             : 1.0.2
Found Date                    : 3/15/93
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : src/security/krb5/clients/kinit/kinit.c
Sensitivity                   : public

[3/15/93 public]
kinit with the -r or -l option doesn't report errors for invalid
values, ie) 10y

[9/24/93 public]
Modified the routine convtime() so that invalid time
intervals are returned as errors. Also fixed a minor 
nit in the error message output produced by kinit 
(was missing a closed parentheses).

[9/25/93 public]
  This bug doesn't reject a time that contains more than one unit if the
first unit is one of the recognized units; e.g. it still accepts a time
interval of "1w1f" (a typo of 1w1d).
  To do this, the "return (r);" in convtime() should be changed to
"return 0;". Locally, that's what we've done.
  Should this be reopened due to this?

[9/27/93 public]

Please make sure that commands like "kinit -l 1w1d1h1m1k" also fail because
k is not a valid option for lifetime. This fix should work on -l as well as -r
options.

[9/30/93 public]

Modified convtime() to return(0) when an invalid time interval is input.

[11/8/93 public]
Closed.



CR Number                     : 7498
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kdestroy, sec_login
Short Description             : kdestroy doesn't get rid of
namecache
Reported Date                 : 3/15/93
Found in Baseline             : 1.0.2
Found Date                    : 3/15/93
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : sec_login_pvt.c, kdestroy.c
Sensitivity                   : public
istory                        : 

[3/15/93 public]

kdestroy doesn't remove the .nc files.   kdestroy -c doesn't remove
.data or .nc files.

[3/15/93 public]
It does delete the .nc file for me.  This was added on 10/15/92
(version 1.1.6.5 of sec_login_pvt.c) for 1.0.2.
If you are using 1.0.1, then please update this defect (the found in field)
to reflect that fact.  I'll have to check on the '-c' functionality...

[3/16/93 public]
In our 1.0.2 cell, the .nc is owned by root.  A kdestory doesn;t get rid
of it unless you are local root also.

[ sekhar 10/15/93 public]

Status changed to fix.

The .nc file is owned by root because it is getting created 
by the cdsclerk. kdestroy -c does not remove the .data or the 
.nc file because there never was any code to handle this. 

FIX: 
    The name cache file is now created when the user logs in.
    This gurantees that the name cache file will be owned by
    the process id of the user (possibly non-root) logging in.
    This would enable a user to get rid off the file via kdestroy.

    If -c option is specified, then the login context is first
    imported from the specified credential file and purged .

Verify by 
    1. dce_login as non root user
    2. acl_edit /.: -l  
       without this fix, the .nc file (in /opt/dcelocal/var/security/creds) 
       would be owned by root ; 
       with this fix, the .nc file would be owned by the non-root user
    3. kdestroy 
       the .nc file should be removed with this fix.
           
    To verify that -c option works repeat steps 1 and 2. but
    execute (as root in another window) 

                kdestroy -c <credential_file> 

    where <credential_file> is that specified in KRB5CCNAME for the user.

[11/8/93 public]
Closed.



CR Number                     : 7476
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 7477,7478,7479,7480
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_acct_get_projlist
documents long as an input/output type
Reported Date                 : 3/11/93
Found in Baseline             : 1.0.2
Found Date                    : 3/11/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
sec_rgy_acct_get_projlist.3sec
sec_rgy_pgo_get_by_unix_num.3sec
sec_rgy_pgo_get_members.3sec
sec_rgy_pgo_id_to_unix_num.3sec
sec_rgy_pgo_name_to_unix_num.3sec
sec_rgy_pgo_unix_num_to_id.3sec
sec_rgy_pgo_unix_num_to_name.3sec
Sensitivity                   : public

[3/11/93 public]
sec_rgy_acct_get_projlist documents long as the datatype for input
parameters max_number and output params. unix_projlist, supplied_number,
and num_projects.  

The wire protocol actually uses ndr_long_int which is a 32 bit quanity.
Long on the otherhand may or may not be 32 bits.

The inconsistant use of datatypes does not port to machines where a long
is not 32 bits.  This is especially a problem for output parameters.

The include file generated from acct.idl will not be consistant with the
documentation, leaving application writers confused.  Because of this
an acceptable workaround does not appear to exist.

The documentation and interface need to be consistant.

Janet

[3/15/92 public]

et tu brutus.

The wire protocol and the semantics of the operations are well defined.
They are an IDL "long" which is an ndr_long_int which is a 32 bit 
quantity.  The values defined for these operations can only be 32 bits
they can never be anything else.  You might argue that there is a bug
in the IDL compiler in that it generates a .h file that uses the ambiguous
"long" C datatype - but there is no ambiguity in the IDL data type.

In any case - I think it serves us all to change the IDL definitinos
to be "signed32" (aka long) so that it is clearer to the reader.  This will
have no change in the protocol - it is exactly the same thing as long.

[3/17/93 public]
IDL generates the correct .h file.  The type of the arguments is
ndr_long_int.  The inconsistancy is in the documentation.  It says long
and should say ndr_long_int for 1.0.2.  If the idl types are going to change
to signed32, the documentation needs to be updated to signed32 also.
In addition, the AES must specify either ndr_long_int or signed32, but
not long.  

I have talked to Joe Pato and we seem to be in agreement.

[5/4/93 public]
Opened for 1.0.3.  Since this is a documentation bug.  Assigned to DEC doc
project lead.  Raised priority and severity to D 3.

[6/9/93 public]
This appears to me to be a defect, so I have reassigned it as such

[6/21/93 public]
Assigned this bug myself.  It belongs to hp.

[9/8/93 public]
Fixed but not verified.  This CR should not be 
verified until Security developers decide if ndr_long_int 
is the actual data type name that will be used.

[10/7/93]
The source code changes have been made to the idl files by me and
have been submitted to the 1.0.3 source tree.  ndr_long_int is now signed32
ndr_ulong_int => unsigned32

[10/21/93 public]
I changed the ndr_long_int to signed32.   I verified this CR   
by looking at the idl files changed by mccann.

[11/11/93 public]

Verified changes in latest doc build and closed this bug.



CR Number                     : 7414
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5/lib/mvr
Short Description             : encoding of requests is incorrect.
Reported Date                 : 3/3/93
Found in Baseline             : 1.0
Found Date                    : 3/3/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
	./security/client/login/sec_login.c
	./security/client/login/sec_login_pvt.c
	./security/h/sec_login_pvt.h
	./security/idl/sec_login.idl
	./security/krb5/kdc/dispatch.c
	./security/krb5/kdc/do_tgs_req.c
	./security/krb5/kdc/kdc_util.c
	./security/krb5/kdc/kdc_util.h
	./security/server/rs/rpriv.c
Sensitivity                   : public

[3/3/93 public]

The kerberos v5 implementation in does not use ASN.1 DER when it should;
this bug appears to have been in the code since 1.0

It appears as if there was a change in the interface to do this some time
in the middle of DCE1.0; when they did this, the old way to do this ceased
to work, but the function which did this (asn1_x509_mode_on()) continues to
exist, but is effectively a NO-OP.  I don't seem to recall any mention of
this change happening, and I certainly didn't notice it at the time (we had
so many other changes which broke wire compatibility that I guess I didn't
notice that one).

This is an A0 because it puts us at variance with the kerberos v5 protocol
specification.  I expect this defect to get dropped in priority and
deferred to 1.0.3 (because fixing it will be tricky), but I want to get
this out on the table *now*.

What's going on here is that the kdc decodes a structure, then re-encodes a
sub-part of that structure, checksums the re-encoded section, and verifies
that it matches the checksum sent by the client (as part of the structure
that wasn't reencoded).

The problem is that mavros, by default, uses a "indefinite" encoding for
SEQUENCE types; according to the DER rules, this is a no-no.

I believe it should be possible to "fix" this so that:
a) - new clients sending to new kdc's send DER and it just works
b) - new clients sending to old kdc's send DER, catch the error return from
the KDC, retry with BER, and it just works.
c) - old clients send to new kdc using BER, and the kdc tries both DER and
BER re-encoding, and it just works..

[3/3/93 public]

deferred to 1.0.3

The scope of the fix would involve changing about four different
modules, including a header file which is used by a large number of
different modules within the krb5 library:

1) security/krb5/kdc/kdc_util.c:

	- do fallback to BER using `encode_krb5_kdc_req_body_compat'
	 in KDC if DER re-encode generates bogus checksum.

2) security/krb5/lib/krb/send_tgs.c:
	- do fallback to BER if KDC responds with a
	KRB5KRB_AP_ERR_BAD_INTEGRITY error

3) security/krb5/lib/mvr/encode.c:
	add a "DER" flag argument to krb5_encode_generic(), which sets
the correct flag for the asn.1 encoder.

4) security/krb5/include/krb5/encode.h
	- add additional DER flag to all invocations of
krb5_encode_generic (all of which are done as macros through this
file).
	- additional macros `encode_krb5_kdc_req_body_compat' and 
	`encode_krb5_kdc_tgs_req_compat' which do the encode using BER
	instead of DER.

[3/3/93 public]
tweaked again to satisfy bean-counters..

[10/14/93 public]

Workaround installed as fix; real fix will have to wait until the krb5B3
merge in dce1.1

[11/8/93 public]
Closed.



CR Number                     : 7380
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_clientd doesn't show -purge
option in usage
Reported Date                 : 3/1/93
Found in Baseline             : 1.0.2
Found Date                    : 3/1/93
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : src/security/server/sec_clientd/sec_clientd.c
Sensitivity                   : public

[3/1/93 public]

[5/27/93 public]
Fix available.  File: ../src/security/server/sec_clientd/sec_clientd.c:
usage:
	fprintf(stderr, "Usage: %s [-d[ebug]] [-p[urge]] [-v[erbose]]\n", argv[0]);

[10/1/93 public]
Fixed by changing code to aha's suggestion above.

[11/8/93 public]
Closed.



CR Number                     : 7128
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : user_gdr, admin_gd
Short Description             : defunct unused table directories
Reported Date                 : 2/4/93
Found in Baseline             : 1.0.2
Found Date                    : 2/4/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : users_gdref/security/tables, admin_gd/security/security/tables
Sensitivity                   : public

[2/4/93 public]
Defunct files in tables directories in user_gdref and admin_gd.  
These contain old Postscript tables.  The tables how been converted 
to TROFF and are inline.

[9/1/93 public]
The files in the table directories are defuncted, but the directories 
themselves have not been removed.  Can this bug be verified and closed or 
must someone at OSF delete the directories first?

[9/8/93 public]

Closed enhancement. Affected files are in
the directories:

/users_gdref/security/tables

/admin_gd/security/security/tables

The files have been defuncted and the directories will
not be part of the next backing tree.



CR Number                     : 6979
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : gen_unix_key generates ASCII dependent displayable characters
Reported Date                 : 1/22/93
Found in Baseline             : 1.0.1
Found Date                    : 1/22/93
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/server/rsdb/rsdb_acct.c
 ./test/security/commands/rgy/query.c
Sensitivity                   : public

[1/22/93 public]

The procedure gen_unix_key includes logic to translate a time value
obtained using gettimeofday to a sequence of two characters
chosen from the set [a-zA-Z0-9./]. The two characters are then used
as the "salt in a call to crypt". The problem is that the mechanism
used to translate the time value to salt, is closely coupled to the
numerical encoding of the ASCII character set. This translation
mechanism will most certainly not work for other character encodings.

As an aside, the translation mechanism used by gen_unix_key is incapable of
using characters [abcdefg] in the constructing the salt. Which probably
means that only ((64-7)/64)*4096 or 3468 of the 4096 different ways to
"perturb the DES algorithm" are being used by the call to crypt in
gen_unix_key.

the relevant code fragment is included below:

    gettimeofday(&tp, &tzp);
    tp.tv_usec >>= 2;               /* get rid of unreliable low order bits
*/
    for (i = 0; i < 2; i++) {
        c = tp.tv_usec & 0x3f;      /* take low order 6 bits */
        c += '.';
        if (c > '9') c += 7;
        if (c > 'Z') c += 6;
        salt[i] = c;
        tp.tv_usec >>= 6;
    }
    p = crypt((char *)plain_passwd, salt);
    strcpy((char *)unix_key, p);

[1/22/93 public]

I assume the fix is to change the loop body to:
	{
		salt[i] = (tp.tv_usec & 0x3f)["./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"];
		tp.tv_usec >>= 6;
	}

or some equivalent (yes, that *is* legal C, though I'm probably going to be
whopped by rsalz's momma for it..).

As an aside, you're wrong in the second paragraph; there are 6
characters between Z and a in ASCII: [|]\_`

For those of you cursed with ebcdic, that's:

	open square brace
	vertical bar
	close square brace
	backslash
	underbar
	backquote

Otherwise, you couldn't toggle between upper case and lower case by xoring
with 0x20 :-)

[1/22/93 public]
minor bug fixed in replacement loop body above..

[8/2/93 public]

Fixed locally.

[8/4/93 public]
Files submitted today.  Mark fix.

[11/8/93 public]
Closed.



CR Number                     : 6140
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_login
Short Description             : restrictions on override contexts
Reported Date                 : 11/18/92
Found in Baseline             : 1.0.2
Found Date                    : 11/18/92
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : security/client/login/sec_login.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[11/18/92 public]

In sec_login_inquire_net_info(), the passed handle is checked against
the default context; else it is checked for "valid" state. An override
identity is given state "semisetup" and hence cannot pass this test;
the routine returns override context calls with
sec_login_s_context_invalid. There is a test to ensure that the
parameter checking returned good status, and then a check for the
context having override authentication (lcp->auth_src). Should this be
possible? I'd like to answer this question myself, but the 4x4 state machine
(larger?) of context state vs. context identity state is still
unclear to me; I keep reading the code.

The override context in use was generated with
sec_login_valid_and_cert_ident(), which returns success with the
documented and expected warning indicating no net credentials
were granted. 

This sequence of tests and dead (?) branching is also seen in
sec_login_set_context(), sec_login_refresh_context(),
sec_login_newgroups(), sec_login_get_groups(),
sec_login_get_expiration(), sec_login_inquire_net_info(). 

Found during code inspection and coverage testing here at TA.

Scenario:
Override File Contents:

negley:Vrv4RnvRbtlX6:10000:10000:Negley Account Override:/usr/restrict:/bin/ksh

Commands Issued (via an ITL harness):

setup_identity negley 0				(this sets LOGIN_HANDLE)
						-> returns OK
valid_and_cert_ident $LOGIN_HANDLE negley
						-> returns
  [0] (3:10) --- password has expired
  [0] (3:10) --- no network credentials granted

inquire_net_info $LOGIN_HANDLE
						-> returns
  [0] (6:49) ### error (unexpected) - Context has not been validated (dce / sec)
  [0] (6:49) --- An error occurred, skipping the rest of the buffer.

Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[11/18/92 public]
At first glance it seems like you're right about the dead branch, but I'll have
to look into it some more...  A redundant check does not warrant C2 status, so
I downgraded it to E4.

[11/18/92 public]

  My fault, I wasn't really clear about my concerns for this OT
report. There are dead branches, but also there is a correctness
issue. These routines will return errors, typically
sec_login_s_invalid_context, when their context arguments have been
returned by successful calls to sec_login_valid_and_cert_ident() . It
seems that the intended error in (all of?) these cases is
sec_login_s_auth_local , and that 'invalid context' is misleading.
  Should the calls (in each routine) to ...check_handle be split up to
account for 'semisetup' contexts (from overrides) coming through the
pipes? Is 'semisetup' the intended state for override contexts?
Is it desirable that set_context (and purge_context) reject overrides?
  The correctness issue was why I thought that this would be a B. Please
excuse any presumption here.

[11/25/92 public]
Changed Short Description from `dead branch in sec_login_inquire_net_info, 
 others?' to `severe restrictions on override contexts' 
Changed Interest List CC from `travis@transarc.com' to `travis@transarc.com, 
 burati@apollo.hp.com' 
Changed Severity from `E' to `B' 
Changed Priority from `4' to `1'

[11/25/92 public]
Override contexts are only created if the account's password is overridden.
If the account's password is overridden, then there are NO network credentials
because you are authenticating locally with a Unix encrypted password.  These
checks are in the sec_login code because those routines cannot do anything with
a login context that has no credentials.  If I'm missing your point let me know
asap, otherwise I'll cancel this defect, because that's how it's supposed to
work.  (btw: If you are the person who opened the defect, or the one listed as
responsible, then it sends mail to you anyway, so you don't need to be on the
CC list.   I removed you and myself from the CC list since you opened it and
I am listed as responsible).  I added greg to the CC list, because I've talked
to him about this in the past and he may have comments to add.

[12/4/92 public]
Ok, we know there's at least one problem resulting from the above discussion:
Overridden login contexts cannot be purged!  I'm looking into getting this
fixed for 1.0.2.

[12/9/92 public]
That'll teach me to believe something before checking on it.  The call
sec_login_purge_context does not do the above check to prevent overridden
contexts from making it through, so ignore my previous comment.

Ward, can you update this defect with what you believe the restrictions are
that should be removed so this defect will have a meaning again.  The known
restrictions that we are *not* going to change are set_context, export_context,
import_context, certify_context, refresh_identity, new_groups, get_groups,
get_expiration, inquire_net_info.  Without network credentials, not much is
possible, so none of these are usable.  If there are others, then please let
us know, otherwise we'll cancel this defect, or possibly downgrade it to pass
back better errors on those calls in which an overridden context is useless.

[12/11/92 public]
No response on whether there's anything that needs fixing immediately, for 1.0.2
so I'm downgrading this because there's no serious problems, but still leaving
it open, because we should at least clean up the error handling at some point
so there aren't status checks that can never be useful in there...

[9/29/93 public]
Submitted fixed sec_login.c (removed redundant checks), marked 'fix'.

[11/8/93 public]
Closed.



CR Number                     : 5939
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : acl_edit test
Short Description             : Aborting acl_edit test leaves a principal's ACL too restrictive
Reported Date                 : 11/5/92
Found in Baseline             : 1.0.2
Found Date                    : 11/5/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /src/test/security/api/moretests/acl_edit.sh
Sensitivity                   : public

[11/5/92 public]

I began to run the acl_edit.tsh as cell_admin and then aborted (ctrl-c)
in the middle of the test (because the test must be run after being dce_logged
in as flintstone). This left the registry database in an inconsistent state:
a view command in rgy_edit does not find either the principal flintstone or
the account for flintstone. However an attempt to add the principal fails 
(with an error that the principal already exists). 

% rgy_edit
Current site is: registry server at /.../cn_pmax/subsys/dce/sec/master
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> v flintstone
?(rgy_edit) Cannot retrieve entry for flintstone - Entry not found (Registry Edit Kernel) (dce / sad)
rgy_edit=> add flintstone
?(rgy_edit) Unable to add principal  "flintstone" - An object with the specified name already exists (Registry Edit Kernel) (dce / sad)
rgy_edit=> do a
Domain changed to: account
rgy_edit=> add
Add Account=> Enter account id [pname]: flintstone
?(rgy_edit) Unable to add account "flintstone" - Principal does not exist (Registry Edit Kernel) (dce / sad)
Do you wish to try again  [y/n]? (n)
rgy_edit=>

[11/5/92 public]
This is *not* a secd problem.  The registry is *not* in an inconsistent state.
The test manipulates the ACL on the flintstone principal.  If you quit out of
the test while the permissions on the ACL prevent cell_admin from seeing the
principal, then you won't be able to see it with rgy_edit, and you won't be
able to add it because it's already there.  The test should trap an interrupt
and cleanup by restoring the original ACL on the principal.

[10/7/93 public]
Fix tested and submitted.

[11/11/93 public]
Closed.



CR Number                     : 5806
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : syslog in krb5 may not work.
Reported Date                 : 10/26/92
Found in Baseline             : 1.0.1
Found Date                    : 10/26/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security/krb5/lib/syslog.c
Sensitivity                   : public

[10/26/92 public]

The version of syslog included in the krb5 tree doesn't appear to work on
hp-ux.

To take a bigger view of things, we probably shouln't include one at all
because we don't know what vendors may have done, if anything, to the
client - syslogd interface.

Some of the krb5 code currently uses "vsyslog" (a varargs wrapper for
syslog); I suspect that we can fudge around that using vsprintf and
syslog.

[09/01/93 public]

Changed from an enhancement to a defect after talking to Bill about a problem
with DTS not writing to /usr/adm/syslog/user.log on HP-UX.  Information
from mail exchange with Bill and Tom:

From Bill:
...
...
...
   It has been suggested that the krb5 syslog stuff be changed to a compile
   time option.

Well, sort of.

There are several cases we have to worry about:

 1) system has the 4.3 syslog and vsyslog already (don't include it)
 2) system has the 4.3 syslog, but not vsyslog, but which can use the
version in security/krb5 (DEC, RIOS) -> just use it as is, or write
vsyslog in terms of vsprintf and syslog
 3) system has the 4.3 syslog, but not vsyslog, and which can't use
the version in security/krb5 (HP-UX) -> write vsyslog in terms of
vsprintf and syslog
 4) system doesn't have the 4.3 syslog at all (rewrite syslog in terms
of some other logging package and write vsyslog the same way or in
terms of syslog.)

From Tom:
...
...
...
I would think that this .o (along with perror.o) should *NOT* be
included in this library unless the specific platform needs it.
None of the reference platforms should.

-- 
Tom Jordahl                                       Internet: tom@osf.org

[10/26/93 public]

The more we do of system testing the more we find that not having syslog
working on the HP makes it alot more difficult to debug test failures so
I am changing sev=B and pri=2.

[10/27/93 public]
The "4.3" syslog is the one where openlog() takes three arguments, right?
This came out somewhere after 4.2 (bundled in a sendmail release, I think).
The vsyslog came later.  I think we should say "get the three-arg syslog"
in the porting and testing guide, and replace vsyslog calls with sprintf/syslog
combinations.  As it is so late in the game, however, do "whatever works."
This should be a code-cleanup issue for 1.1.  Added Howard and I to the
interest list.

[02/16/94 public]

With the availability of serviceability in DCE 1.1, not having syslog
functionality on an HP machine is no longer a problem for me.  I'm not
sure if this defect can now be cancelled or not since someone may still
want to use syslog instead of serviceability.

[02/16/94 public]
No, this should still get fixed.  When security does code cleanup,
they should remove the whole syslog() snafu entirely.

I've never even *seen* a syslog message from security, so why does
it need syslog support?  (not a really important question...)

[4/7/94 public]

DCE1.1 serviceability work will *not* cover Kerberos code which is 
exempt from Serviceability requirements. (Comment by pellis on 2/16/94
may lead one to think otherwise).

[04/08/94 public]

Look, the bottom line on the defect is it needs to be FIXED!
Its been hanging around for a long time, and its not clear that
the fix is difficult or complex.  The fact of the matter is
that unless HP has fixed its product code (and if they have,
then there is no excuse for not fixing ours), any application
which links with libdce on HP-UX will be unable to use syslog!

Not to mention the fact that on other platforms, vendors may have
value added features (or bug fixes) in their libc version of syslog,
and its quite rude of DCE to substitue its own.

raising the priority to 1 to make sure this doesn't slip through the cracks.

[ mob 05/03/94 public ]

I have fixed this on HP-UX.  I will test it on 486 or RIOS and will send
a submit request when testing is complete.

[ mob 6 June 94 public ]

This fix has been submitted as part of Michael Fairbrother's submission of
last week (under OT 10726).



