CR Number                     : 13101
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dcdrel002 test failure
Reported Date                 : 9/6/95
Found in Baseline             : 1.2
Found Date                    : 08/31/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[9/6/95 public]

dcdrel002 fails every iteration. 

Journal file follows: 
10|0 /dced/ts/dcdrel002/dcdrel002 10:49:26|TC Start, scenario ref 282-1
15|0 1.9 1|TCM Start
520|0 0 22021 1 1|startup ... STTMPDIR: /tmp
520|0 0 22021 1 2|test case dir is /tet/dced/ts/rel
520|0 0 22021 1 3|TEST MACHINES: ibm_l3
520|0 0 22021 1 4|ibm_l3 is responding
400|0 1 1 10:49:29|IC Start
200|0 1 10:49:29|TP Start
520|0 1 22021 1 5|Executing dcdrel002.tcl /.:/hosts/ibm_l3 /tmp/dcdrel002.ibm_l3.log &
520|0 1 22021 1 6|Attempted to start a dcdrel002 test script on each node
520|0 1 22021 1 7|Waiting for processes 22037  to complete.
520|0 1 22021 1 8|Waiting for process 22037 ...
520|0 1 22021 1 9|Process 22037 done.
520|0 1 22021 1 10|Specified processes completed.
520|0 1 22021 1 11|Test scripts done on all nodes
520|0 1 22021 1 12|Completed processing log files
520|0 1 22021 1 13|Summary results were as follows:
520|0 1 22021 1 14|results: FATAL messages in /tmp/dcdrel002.ibm_l3.log:
520|0 1 22021 1 15|results: dcdrel002: FATAL: No bindings
520|0 1 22021 1 16|results: dcdrel002: FATAL: No bindings
520|0 1 22021 1 17|results: dcdrel002: FATAL: Server not stopped according to "server show"
520|0 1 22021 1 18|results: dcdrel002: FATAL: Server not stopped according to "server show"
520|0 1 22021 1 19|results: dcdrel002: FATAL: dcdrel002_client: rpc_ns_binding_import_next(/.:/hosts
/ibm_l3/systest/dcdrel002_server.22037-req-restart): No more bindings
520|0 1 22021 1 20|results: dcdrel002: FATAL: dcdrel002_client: rpc_ns_binding_import_next(/.:/hosts
/ibm_l3/systest/dcdrel002_server.22037-rpc-restart): No more bindings
520|0 1 22021 1 21|results: dcdrel002: FATAL: server ping /.:/hosts/ibm_l3/systest/dcdrel002_server.
22037-req-restart
520|0 1 22021 1 22|results: dcdrel002: FATAL: Command returned 0 when 1 was expected
520|0 1 22021 1 23|results: dcdrel002: FATAL: server ping /.:/hosts/ibm_l3/systest/dcdrel002_server.
22037-rpc-restart
520|0 1 22021 1 24|results: dcdrel002: FATAL: Command returned 0 when 1 was expected
520|0 1 22021 1 25|results: dcdrel002: FATAL: No bindings
520|0 1 22021 1 26|results: dcdrel002: FATAL: No bindings
520|0 1 22021 1 27|results: dcdrel002: FATAL: Cannot find a matching object.
520|0 1 22021 1 28|results: dcdrel002: FATAL: Cannot find a matching object.
520|0 1 22021 1 29|results: dcdrel002: FATAL: server ping /.:/hosts/ibm_l3/systest/dcdrel002_server.
22037-req
520|0 1 22021 1 30|results: dcdrel002: FATAL: Command returned 1 when 0 was expected
520|0 1 22021 1 31|results: dcdrel002: FATAL: server ping /.:/hosts/ibm_l3/systest/dcdrel002_server.
22037-rpc
520|0 1 22021 1 32|results: dcdrel002: FATAL: Command returned 1 when 0 was expected
520|0 1 22021 1 33|results: dcdrel002: FATAL: directory delete /.:/hosts/ibm_l3/systest
520|0 1 22021 1 34|results: dcdrel002: FATAL: Command failed when it should not have. (Directory mus
t be empty to be deleted)
220|0 1 1 10:56:04|FAIL
410|0 1 1 10:56:04|IC End
80|0 0 10:56:04|TC End
900|10:56:04|TCC End

[02/09/96 public]

Runs of this test on 1.2.1 DCE which occurred after the dced merge in (of 
the numerous bug fixes from HP) show that the problem no longer exists.



CR Number                     : 13052
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dced
Subcomponent Name             : server configuration
Short Description             : Server delete causes dcecp crash (coredump)
Reported Date                 : 8/24/95
Found in Baseline             : 1.1
Found Date                    : 8/24/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : admin/dced/server/misc.c
Sensitivity                   : public

[8/24/95 public]

From support customer:

This is one of those memory free errors not detected by most
Unix implementations. When dcecp tries to free a memory area
already freed, it causes an abend on Tandem platforms. The
problem has been investigated and found to be in the source
of function srvr_get_list() of the dced server component.
In the following piece of code:
        ep->description = (idl_char *)"A server";
        ep->storage_tag = (idl_char *)"#Internal";
dced allocates the same storage address to the 'description'
members of the ep structures, for all the server entries in 
the list. This list, when marshalled to the client(dcecp),
contains same addresses for these components, even for
different server entries. When the cache of server entries 
is freed, it results in freeing the same memory address more 
than once and causes abend on Tandem machines.

Repeat By:
---------
*****This is reproducible only on Tandem platforms****
Make sure there is at least atleast one configured server in the 
server catalog (something like dts-server). Then configure
another server and delete it. For example,
dcecp> server create audit-server -arguments "-a" -directory "/opt/dcelocal/var/audit" -program "/opt/dcelocal/bin/auditd" -starton "explicit"
dcecp> server delete audit-server

Proposed Solution:
-----------------
Use strdup for populating the description and storage_tag components
of the ep structure:
        ep->description = (idl_char *)strdup_for_client("A server",st);  
        ep->storage_tag = (idl_char *)strdup_for_client("#Internal",st); 

I would like to get your comments on the problem: whether my
analysis is correct and if the proposed fix is OK. Of course,
we tested this fix and it seems to work for us.

[8/24/95 public]
I believe that this is a duplicate of CR12828. CR12828 fixes the general
cause of this problem. Please verify and mark this as a 'dup'. If not,
update this CR and I will investigate further.

[8/24/95 public]
John, I believe this will not be fixed by 12828 because srvr_get_list()
is assigning a static string to a string pointer and so it will be non-NULL.
Your fix will work only if it was set to NULL. The proposed fix correctly 
allocates necessary memory to save the string or else it should be set to NULL.

Sorry, I forgot to mention that the code is in file admin/dced/server/misc.c
function srvr_get_list().

[08/24/95 public]
I think Parul's right.

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13045
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : keytab
Short Description             : keytab create/delete can remove any file
Reported Date                 : 8/21/95
Found in Baseline             : 1.1
Found Date                    : 8/21/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[8/21/95 public]

The following dcecp commands delete /etc/passwd file.

dcecp> keytab create /.:/hosts/foo/config/keytab/passwd -entry -annotation {Passwd} -storage {/etc/passwd}
dcecp> keytab delete /.:/hosts/foo/config/keytab/passwd

This means that anyone with the permission to create a keytab entry can
delete any file in a file system.

If a keytab (and hostdata) entry was imported, purging should be
disallowed.

[8/23/95 public]

One suggested fix is to add a flag field to dced_entry_data_t. In
dced_convert.idl:

    typedef struct dced_entry_data_s_t {
	dce_db_header_t		h;
#ifndef	HPDCE_DCED_FIX_OT13045
	unsigned32		flags;
#endif	/* HPDCE_DCED_FIX_OT13045 */
	dced_entry_t		data;
    } dced_entry_data_t;
#ifndef	HPDCE_DCED_FIX_OT13045
    const unsigned32 entry_c_data_imported		= 0x00000001;
#endif	/* HPDCE_DCED_FIX_OT13045 */

and in hostdata/rkeytab_create():

    id_d.h.tagged_union.h.owner_id = Prin;
#ifndef	HPDCE_DCED_FIX_OT13045
    id_d.flags = 0;
    if (just_import)
	id_d.flags |= entry_c_data_imported;
#endif	/* HPDCE_DCED_FIX_OT13045 */
    id_d.data = *id;

and in hostdata/rkeytab_delete():

    if (remove_object) {
#ifndef	HPDCE_DCED_FIX_OT13045
	if (id_d.flags & entry_c_data_imported) {
	    *st = sec_acl_invalid_permission;
	    return;
	}
#endif	/* HPDCE_DCED_FIX_OT13045 */

However, this change the Hostdata.db and Keytab.db file format.

[08/23/95 public]
I like this idea very much!

[8/30/95 public]

Since the above suggested fix changes the file format (data structure), we
should bump the major version number of the IDL file, i.e., version(2.0),
so that dced won't coredump in the pickling code. (With the version number
change, pickling returns rpc_s_unknown_if.) Can OSF bless the major version
number change? (Please!)

[08/30/95 public]
Sure -- bump the version.

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 13044
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : srvrconf
Short Description             : Security hole in srvrconf_fixattr_replace()
Reported Date                 : 8/18/95
Found in Baseline             : 1.1
Found Date                    : 8/18/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[8/18/95 public]

srvrconf_fixattr_replace() allows any user with a "w" permission to set
posix_uid and/or posix_gid to zero. dcecp seems to be not using
srvrconf_fixattr_replace(), but it's easy to write such a client.

srvrconf should have dced_perm_writepriv, but it may require other parts of
fixes. Suggested short term fix is overlying it with dced_perm_flag:

    sec_acl_permset_t	perms = dced_perm_write;

	:

    /* Check ACL for permission */
    if (fixed->posix_gid == 0 || fixed->posix_uid == 0
	|| sp->data.fixed.posix_gid == 0 || sp->data.fixed.posix_uid == 0) {
	perms |= dced_perm_flag;
    }
    if (!dced_authorized(h, &sc_obj_type,
	    &sp->h.tagged_union.h.acl_uuid, &Prin, perms, st)) {
	dce_lock_unlock(sc_table.lock, &st2);
	return;
    }

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12924
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced core dumps on aix dce secd/cdsd server
Reported Date                 : 06/19/1995
Found in Baseline             : 1.1
Found Date                    : 06/15/1995
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[6/20/95 public]
During system test continuous hours of operation testing the 
dced dumps core on the AIX secd/cdsd server for the cell.

dbx on the core file finds that it ends at "abort process 
in cma__abort_process"

This core dump occurs about an hour after a core dump from 
secd on the same node, (a separate OT).  This problem is 
not seen on an HP-UX DCE server but has been reliably repeated 
on the AIX DCE server.


[1:11pm, 7/11/95]

Are you all running in a pure OSF DCE 1.1 Gold + unintegrated + Warranty Patch 
environment?  If so, we can try to repro the problems here.  If you are
running with some sort of augmented code, do you think we need that to
reproduce the problems?  Also, what thread draft level are you running
on HPUX?  

We are running some tests on pure osf code and are seeing some
core dumps but not exactly what you seem to be seeing.  We are 
investigating (but not in haste) the problems we are seeing.

Gerry

[7/12/95 public]

What level of AIX and DCE are you running?  Also, what level of PTF's have you
applied for both AIX and AIX DCE?  Can you give a better description of how AIX
DCE is being used in this cell config?  Is the AIX DCE used as a client cell
configuration?  I see mention of AIX secd/dced, but there is no dced on DCE
1.3.  Does this occur in a reproducable fashion, and if so, after how long?
In your DCE 1.1 code (on the HP side of things), what level of OSF code are
you running with?

Also, do you have a testcase that causes the problem to happen?  If not, what
was going on in the test that caused the problem?

This information will help us try and reproduce the problem.

[9/8/95]

We have another customer reporting similar problems with dced on AIX 3.2.5.
Apparently, dced has never run correctly for them for more than 5 days.
It either core dumps or seems to go into an endless loop chewing up CPU
cycles.

(from bettenhausenl@llnl.gov)

Offering and Version:   DCE1.1
Component (Module):     dced
Client Hardware:        RS6000-560, 128MB memory
Client Software:        AIX3.2.5
Server Hardware:        SAME
Server Software:        SAME
Compiler:               xlccmp.obj, version 01.02.0000.0000

Problem Description
-------------------


	dced dies after running for 5 days.  Memory appears to be trashed when
	looking at the core file:
**************
fridge.llnl.gov{rbettenh}147: dbx -I /dce/dce/src/admin/dced/server /usr/bin/dced
dbx Version 3.1
Type 'help' for help.
reading symbolic information ...
[memory image in core]

abort process in cma__abort_process at 0xd057d5e8
0xd057d5e8 (cma__abort_process+0x40) 80410014          l   r2,0x14(r1)
(dbx) where
warning: Unable to access address 0x202e8ac8 from core
warning: Unable to access address 0x202e8ad0 from core
cma__abort_process(0x0) at 0xd057d5e8
warning: Unable to access address 0x7 from core
warning: Unable to access address 0x202e8ac8 from core
warning: Unable to access address 0xffffffff from core
------------
	the dced log shows:
*************
fridge.llnl.gov{rbettenh}40: more dced.log
Exception: Object referenced does not currently exist (dce / thd)
------------
	the times on the core file and log are the same
*************
fridge.llnl.gov{rbettenh}42: ll core
-rw-r--r--   1 root     bin        36531 Sep  6 04:06 core
fridge.llnl.gov{rbettenh}43: ll dced.log
-rw-r--r--   1 root     bin           66 Sep  6 04:06 dced.log
------------
	after restarting dced, the dce process status showed a problem with
	CDSCP.
*************
fridge.llnl.gov{rbettenh}47: dce.ps

The following DCE components are running on "fridge.llnl.gov".
   PID     STIME   TIME CMD
 14209    Sep 01   4:54 /opt/dcelocal/bin/secd 
 14999    Sep 01   4:58 /opt/dcelocal/bin/dts_null_provider -p 60 -i 100 
 17811    Sep 01  27:31 /opt/dcelocal/bin/dtsd -s 
 19448  13:21:19   0:00 /opt/dcelocal/bin/dced 
 20362    Sep 01   2:02 /opt/dcelocal/bin/cdsadv 
 21134    Sep 01   8:46 /opt/dcelocal/bin/cdsd 
DCE on "fridge.llnl.gov" seems to be running as configured.
Configured: dts_null_provider dtsd cdsd cdsadv secd dced 
You do not have any network credentials. All requests will be unauthenticated.
ERROR: No response from CDSCP.  DCE on "fridge.llnl.gov" may not be functional.

[hp 9/13/95]

Just a suggestion.  You might set MALLOCTYPE=3.1 in the root environment BEFORE 
you start up any dce daemons.  Jim Wade suggested this to me as a way to work 
around FUM's in the code. Apparently the default malloc will allow free of unmalloced space.  The 3.1 type tightens this up a bit and uses some checking. 
The memory corruption seen in the description above could be caused by a FUM.


[hp 12/22/95]

With the above workaround in place on AIX systems, this problem is no 
longer seen on DCE 1.2.1 version.  
Closed.



CR Number                     : 12875
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12874
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ep
Short Description             : rs_attr_schema requests always in-line forwarded
Reported Date                 : 5/17/95
Found in Baseline             : 1.1
Found Date                    : 5/17/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[5/17/95 public]

is_for_me()::epops.c does not filter out rs_attr_schema ifspec (it does for
rdaclif). Thus, dced always handles rs_attr_schema requests by itself and
never forward them to secd. I think that this happens only if
unauthenticated. The fix is to ignore rs_attr_schema ifspec, just like
rdaclif ifspecs. However, once this fix is done, rs_attr_schema ifspec is
subject to CR#12874.

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12874
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12873
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ep
Short Description             : rdacl requests erroneously in-lined forwarded
Reported Date                 : 5/17/95
Found in Baseline             : 1.1
Found Date                    : 5/17/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[5/17/95 public]

dced is erroneously in-line forwarding rdacl requests if an endpoint is not
registered. The following unauthenticated acl_edit command shows the wrong
ACLs for a clearinghouse.

  $ acl_edit /.:/dce_rpc_ch -l                      
  Warning - binding to ACL's server is unauthenticated
  Warning - binding to registry is unauthenticated

  # SEC_ACL for /.:/dce_rpc_ch:
  # Default cell = /.../dce_rpc_rfc20
  unauthenticated:-r--
  user:hosts/dce_rpc/self:crws
  user:cellmaster:crws
  any_other:-r--

This is coming from dced's acl manager.

  $ acl_edit /.:/hosts/dce_rpc/config -l
  Warning - binding to ACL's server is unauthenticated
  Warning - binding to registry is unauthenticated

  # SEC_ACL for /.:/hosts/dce_rpc/config:
  # Default cell = /.../dce_rpc_rfc20
  unauthenticated:-r--
  user:hosts/dce_rpc/self:crws
  user:cellmaster:crws
  any_other:-r--

If the user is authenticated, it's successfully bound to cdsd due to the
call to rpc_mgmt_inq_server_princ_name().

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12837
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12834
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : sxops, scops, epops
Short Description             : lock errors found
Reported Date                 : 4/6/95
Found in Baseline             : 1.1unintegrated
Found Date                    : 4/6/95
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : src/admin/dced/server/sximpl.h
					     src/admin/dced/server/sxops.c
					     src/admin/dced/server/scops.c
					     src/admin/dced/server/epops.c
Sensitivity                   : public

[4/6/95 public]

Several lock management errors exist in these files.  In sxops.c and scops.c,
these consist mainly of acquiring a read lock and then attempting to acquire
a write lock (the sequence should be to acquire a RIW lock, and then acquire
the write lock).  These errors were "hidden" by the AND of pthread_equal()
in dce_lock__write(); since the thread owned a read lock, it wasn't the
riwer, and the blocking loop would exit, allowing the thread to acquire a
write lock erroneously.
	In the case of epops.c, dced_ept_map() would grab a write lock
on sx_table, even though it's just reading.  This is a bad idea, since
srvrexec_stop() grabs a read lock on sx_table, and then proceeds to make
(indirectly) RPC calls which require endpoints to be filled in.  This error
was "hidden" by the AND of have_writer in dce_lock__write(); since no other
writer exists, the AND fails and dced_ept_map() is erroneously granted the
write lock even though a read lock is extant.

Here are suggested changes:

============================ epops.c ================================
227,234d226
< dced_ept_lock_server(
<     error_status_t            *st
< )
< {
<     dce_lock_justwrite(sx_table.lock, st);
< }
<
< static void
594c586
<     dced_ept_lock_server(&st2);
---
>     dce_lock_justwrite(sx_table.lock, &st2);
596c588
<     dced_ept_unlock_server(&st2);
---
>     dce_lock_unlock(sx_table.lock, &st2);
616c608
<     dced_ept_lock_server(&st2);
---
>     dce_lock_justwrite(sx_table.lock, &st2);
618c610
<     dced_ept_unlock_server(&st2);
---
>     dce_lock_unlock(sx_table.lock, &st2);
681c673
<     dced_ept_lock_server(&st2);
---
>     dce_lock_read(sx_table.lock, &st2);
712c704
<     dced_ept_unlock_server(&st2);
---
>     dce_lock_unlock(sx_table.lock, &st2);
767c759
<     dced_ept_lock_server(&st2);
---
>     dce_lock_justwrite(sx_table.lock, &st2);
769c761
<     dced_ept_unlock_server(&st2);
---
>     dce_lock_unlock(sx_table.lock, &st2);

============================ scops.c ================================
184c184
<     dce_lock_read(sc_table.lock, st);
---
>     dce_lock_riw(sc_table.lock, st);
419c419
<     dce_lock_read(sc_table.lock, st);
---
>     dce_lock_riw(sc_table.lock, st);
432a433
>     dce_lock_write(sc_table.lock, st);
540c541
<     dce_lock_read(sc_table.lock, st);
---
>     dce_lock_riw(sc_table.lock, st);
559a561
>     dce_lock_write(sc_table.lock, st);

============================ sxops.c ================================
217,218d216
<       pthread_mutex_lock(&sx_pids.m);
<       pthread_cond_wait(&sx_pids.cv, &sx_pids.m);
225d222
<               pthread_mutex_unlock(&sx_pids.m);
229d225
<       pthread_mutex_unlock(&sx_pids.m);
377c373
<     dce_lock_read(sx_table.lock, st);
---
>     dce_lock_riw(sx_table.lock, st);
402a399
>     }
405d401
< }
670d665
<     dce_lock_read(sx_table.lock, st);
713c708
<     dce_lock_read(sx_table.lock, st);
---
>     dce_lock_riw(sx_table.lock, st);

[5/4/95 public]

I agree with all of these proposed changes except for the changes
to dce_waitpid() in sxops.c . It is still necessary to lock the
mutex and wait on the condition variable.  If this isn't done,
the routine will just return to the caller without waiting for
the child process to terminate.

[5/4/95 public]

But the way the original code did it is deadly, because mutexes are
NON-RECURSIVE.  That is, 

        pthread_mutex_lock(&sx_pids.m);
        pthread_cond_wait(&sx_pids.cv, &sx_pids.m);
        dce_lock_justwrite(sx_pids.lock, st);

should produce instant deadlock, because after the pthread_cond_wait() the
current thread owns the mutex, and the pthread_mutex_lock() inside
dce_lock_riw() inside dce_lock_justwrite() should block forever.  See the
description of the default mutex type and the warning against using recursive
mutexes with condition variables in Section 7.4.1 of the OSF DCE Application
Development Guide Core Components.
	One might be able to solve this by putting a pthread_mutex_unlock()
between the pthread_cond_wait() and the dce_lock_justwrite(), but it occurs
to me that even if you wait on the condition variable, you don't have any
way of knowing what it was that signalled it -- it could have been the
child terminating, or it may have been another thread grabbing and releasing
a write lock.
	I haven't studied the code closely, but maybe what you want is to
loop on the condition variable until there is a zombies to reap, and
THEN grab the write lock -- like so;

    pthread_mutex_lock(&sx_pids.m);
    for (;;) {
        for (i = 0; i < sx_pids.pids.count; i++) {
            if (sx_pids.pids.list[i].pid == pid) {
		pthread_mutex_unlock(&sx_pids.m);
		dce_lock_justwrite( sx_pids.lock, st );
		/* The position of the desired pid in the list might
		   have changed between the last two lines -- but if
		   this thread is the only one waiting for it, then it
		   SHOULD still at least be IN the list...  If it
		   disappeared from the list, I don't know what to do;
		   this code will just return a random status.
		 */
		for (i = 0; i < sx_pids.pids.count; i++) {
		    if (sx_pids.pids.list[i].pid == pid) {
			*status = sx_pids.pids.list[i].status;
			sx_pids.pids.list[i].pid = 0;
		    }
		}
                dce_lock_unlock(sx_pids.lock, st);
                return;
            }
	}
	pthread_cond_wait(&sx_pids.cv, &sx_pids.m);
    }

[5/4/95 public]

Ignore most of that last update, except the part about not having studied
the code much...

jss informs me that sx_pids.cv and sx_pids.m are not part of sx_pids.lock,
and so there is no attempt in the original code to recursively lock a mutex.
However, he also informs me that the code is still buggy, because the
broadcast by srvrexec__reap() wakes up all threads waiting in dced_waitpid(),
and they all will return.
	This happens because there the current code provides no way for the
threads in dced_waitpid() to tell that the server THEY are waiting on is or
is not the one which died.  This can be fixed by

1) Adding a field 'done' to the sx_pid_status_t structure in
   src/admin/dced/server/sximpl.h, as in

	typedef struct sx_pid_status_s_t {
	    pid_t               pid;
	    int                 status;
+	    int                 done;
	} sx_pid_status_t;

2) Clearing this flag after starting the server in dced_fork() in
   src/admin/dced/server/sxops.c, as in

	    sx_pids.pids.list[i].pid = *pp = p;
+	    sx_pids.pids.list[i].done = 0;
	    dce_lock_unlock(sx_pids.lock, st);
	    *st = error_status_ok;

3) Setting this flag after srvrexec__reap() in sxops.c finds that the server
   has died, as in

            /* Must be a hostdata postprocessor. */
            dce_lock_unlock(sx_table.lock, &st);
            dce_lock_justwrite(sx_pids.lock, &st);
            for (i = 0; i < sx_pids.pids.count; i++)
                if (sx_pids.pids.list[i].pid == pid) {
                    sx_pids.pids.list[i].status = wait_stat;
+                   sx_pids.pids.list[i].done = 1;
                    pthread_cond_broadcast(&sx_pids.cv);
                    break;
                }

4) Testing this flag in dced_waitpid() in sxops.c, and not exiting until the
   desired server has exited;

void
dced_waitpid(
    pid_t               pid,
    int                 *status,
    error_status_t      *st
)
{
    unsigned32          i;

    pthread_mutex_lock(&sx_pids.m);
    for ( ; ; ) {
        pthread_cond_wait(&sx_pids.cv, &sx_pids.m);
        dce_lock_riw(sx_pids.lock, st);
        for (i = 0; i < sx_pids.pids.count; i++)
            if (
                (sx_pids.pids.list[i].pid == pid)
             && (sx_pids.pids.list[i].done)
            ) {
                dce_lock_write(sx_pids.lock, st);
                *status = sx_pids.pids.list[i].status;
		 sx_pids.pids.list[i].pid = 0;
		 dce_lock_unlock(sx_pids.lock, st);
		 pthread_mutex_unlock(&sx_pids.m);
		 return;
	     }
	 dce_lock_unlock(sx_pids.lock, st);
     }
 }

 This has jss' seal of approval.

 [rsalz 05/05/95 public]
 Did I really release code that intermixes low-level CV and mutex
 calls with dce_lock_XXX calls, sharing variables?  That's a big
 mistake; I know it happened in the EP code once.

 The table should have a dce_lock, which can only be held when
 the primitive mutex is first held.

 [monzillo 10/17/95]

 I applied the changes suggested above, and computed context diffs to make
 it easy for others to apply the same changes. As stated in OT 12834, the
 lock manager has been modified to make it possible to acquire a write lock
 without first acquiring a riw lock. Accordingly, I don't use the justwrite
 call in the following implementation. Quite a bit of testing has been done,
 I am in the process of running the dced and dcecp test suites with these
 changes.

*** /project/dce/build/dce1.1-maint/src/admin/dced/server/sximpl.h	Thu Aug 25 12:32:38 1994
--- ./sximpl.h	Wed Oct 11 18:22:26 1995
***************
*** 35,40 ****
--- 35,41 ----
  typedef struct sx_pid_status_s_t {
      pid_t		pid;
      int			status;
+     int                 done;
  } sx_pid_status_t;
  
  typedef struct sx_pid_status_list_s_t {

*** /project/dce/build/dce1.1-maint/src/admin/dced/server/epops.c	Mon Jun  5 17:38:57 1995
--- ./epops.c	Wed Oct 11 17:57:51 1995
***************
*** 237,257 ****
      return TRUE;
  }
  
- static void
- dced_ept_lock_server(
-     error_status_t		*st
- )
- {
-     dce_lock_justwrite(sx_table.lock, st);
- }
- 
- static void
- dced_ept_unlock_server(
-     error_status_t		*st
- )
- {
-     dce_lock_unlock(sx_table.lock, st);
- }
  
  
  void
--- 237,242 ----
***************
*** 620,628 ****
      if (!dced_ept_valid_handle(h, TRUE, st))
  	return;
  
!     dced_ept_lock_server(&st2);
      old_ept_insert(num_ents, entries, replace, FALSE, st);
!     dced_ept_unlock_server(&st2);
  }
  
  
--- 605,613 ----
      if (!dced_ept_valid_handle(h, TRUE, st))
  	return;
  
!     dce_lock_write(sx_table.lock, &st2);
      old_ept_insert(num_ents, entries, replace, FALSE, st);
!     dce_lock_unlock(sx_table.lock, &st2);
  }
  
  
***************
*** 642,650 ****
      if (!dced_ept_valid_handle(h, TRUE, st))
  	return;
  
!     dced_ept_lock_server(&st2);
      old_ept_delete(num_ents, entries, st);
!     dced_ept_unlock_server(&st2);
  }
  
  
--- 627,636 ----
      if (!dced_ept_valid_handle(h, TRUE, st))
  	return;
  
! 
!     dce_lock_write(sx_table.lock, &st2); 
      old_ept_delete(num_ents, entries, st);
!     dce_lock_unlock(sx_table.lock, &st2); 
  }
  
  
***************
*** 707,713 ****
      if (!dced_ept_valid_handle(h, FALSE, st))
  	return;
  
!     dced_ept_lock_server(&st2);
      old_ept_map(object, map_tower, lookup_handle, max_towers, num_towers,
  	towers, st);
  
--- 693,699 ----
      if (!dced_ept_valid_handle(h, FALSE, st))
  	return;
  
!     dce_lock_read(sx_table.lock, &st2); 
      old_ept_map(object, map_tower, lookup_handle, max_towers, num_towers,
  	towers, st);
  
***************
*** 738,744 ****
  	    towers, st);
      }
  #endif	/* defined(WANT_LLB) */
!     dced_ept_unlock_server(&st2);
  }
  
  
--- 724,730 ----
  	    towers, st);
      }
  #endif	/* defined(WANT_LLB) */
!      dce_lock_unlock(sx_table.lock, &st2);
  }
  
  
***************
*** 793,801 ****
      if (!dced_ept_valid_handle(h, TRUE, st))
  	return;
  
!     dced_ept_lock_server(&st2);
      old_ept_mgmt_delete(object_speced, object, tower, st);
!     dced_ept_unlock_server(&st2);
  }
  
  
--- 779,787 ----
      if (!dced_ept_valid_handle(h, TRUE, st))
  	return;
  
!     dce_lock_write(sx_table.lock, &st2);
      old_ept_mgmt_delete(object_speced, object, tower, st);
!     dce_lock_unlock(sx_table.lock, &st2);
  }
  
  
*** /project/dce/build/dce1.1-maint/src/admin/dced/server/scops.c	Fri Sep 30 16:14:37 1994
--- ./scops.c	Wed Oct 11 18:09:53 1995
***************
*** 181,187 ****
      }
  
      /* Duplicate object? */
!     dce_lock_read(sc_table.lock, st);
      if (uuid_is_nil(&server->id, st))
  	uuid_create(&server->id, st);
      else if (srvr_find_by_uuid(&sc_table, &server->id, st) != NULL
--- 181,187 ----
      }
  
      /* Duplicate object? */
!     dce_lock_riw(sc_table.lock, st);
      if (uuid_is_nil(&server->id, st))
  	uuid_create(&server->id, st);
      else if (srvr_find_by_uuid(&sc_table, &server->id, st) != NULL
***************
*** 416,422 ****
      *st = error_status_ok;
  
      /* Object exist? */
!     dce_lock_read(sc_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sc_table, id_uuid, st)) == NULL) {
  	dce_lock_unlock(sc_table.lock, st);
  	*st = dced_s_not_found;
--- 416,422 ----
      *st = error_status_ok;
  
      /* Object exist? */
!     dce_lock_riw(sc_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sc_table, id_uuid, st)) == NULL) {
  	dce_lock_unlock(sc_table.lock, st);
  	*st = dced_s_not_found;
***************
*** 430,435 ****
--- 430,436 ----
  	return;
      }
  
+     dce_lock_write(sc_table.lock, st);
      server_copy(value, &sp->data, copy_for_stub, st);
      dce_lock_unlock(sc_table.lock, st);
  }
***************
*** 536,543 ****
  	uuid_create(instance, st);
      *st = error_status_ok;
  
      /* Find object. */
!     dce_lock_read(sc_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sc_table, id_uuid, st)) == NULL) {
  	dce_lock_unlock(sc_table.lock, st);
  	*st = dced_s_not_found;
--- 537,545 ----
  	uuid_create(instance, st);
      *st = error_status_ok;
  
+ 
      /* Find object. */
!     dce_lock_riw(sc_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sc_table, id_uuid, st)) == NULL) {
  	dce_lock_unlock(sc_table.lock, st);
  	*st = dced_s_not_found;
***************
*** 557,562 ****
--- 559,565 ----
  	return;
      }
  
+     dce_lock_write(sc_table.lock, st);
      server_copy(&new.data, &sp->data, copy_via_malloc, st);
      dce_lock_unlock(sc_table.lock, st);
      new.data.exec_data.execstate = server_c_exec_running;

*** /project/dce/build/dce1.1-maint/src/admin/dced/server/sxops.c	Thu Feb 16 16:53:17 1995
--- ./sxops.c	Wed Oct 11 18:32:27 1995
***************
*** 204,209 ****
--- 204,210 ----
  		sx_pids.pids.count * sizeof *sx_pids.pids.list);
      }
      sx_pids.pids.list[i].pid = *pp = p;
+     sx_pids.pids.list[i].done = 0;
      dce_lock_unlock(sx_pids.lock, st);
      *st = error_status_ok;
  }
***************
*** 217,237 ****
  {
      unsigned32		i;
  
      for ( ; ; ) {
! 	pthread_mutex_lock(&sx_pids.m);
! 	pthread_cond_wait(&sx_pids.cv, &sx_pids.m);
! 	dce_lock_justwrite(sx_pids.lock, st);
! 	for (i = 0; i < sx_pids.pids.count; i++)
! 	    if (sx_pids.pids.list[i].pid == pid) {
! 		*status = sx_pids.pids.list[i].status;
! 		sx_pids.pids.list[i].pid = 0;
! 		dce_lock_unlock(sx_pids.lock, st);
! 		pthread_mutex_unlock(&sx_pids.m);
! 		return;
! 	    }
! 	dce_lock_unlock(sx_pids.lock, st);
! 	pthread_mutex_unlock(&sx_pids.m);
!     }
  }
  
  
--- 218,241 ----
  {
      unsigned32		i;
  
+     pthread_mutex_lock(&sx_pids.m);
      for ( ; ; ) {
!         pthread_cond_wait(&sx_pids.cv, &sx_pids.m);
!         dce_lock_riw(sx_pids.lock, st);
!         for (i = 0; i < sx_pids.pids.count; i++)
!             if (
!                 (sx_pids.pids.list[i].pid == pid)
!              && (sx_pids.pids.list[i].done)
!             ) {
!                 dce_lock_write(sx_pids.lock, st);
!                 *status = sx_pids.pids.list[i].status;
!                 sx_pids.pids.list[i].pid = 0;
!                 dce_lock_unlock(sx_pids.lock, st);
!                 pthread_mutex_unlock(&sx_pids.m);
!                 return;
!             }
!         dce_lock_unlock(sx_pids.lock, st);
!     }                                                        
  }
  
  
***************
*** 304,309 ****
--- 308,314 ----
  	    for (i = 0; i < sx_pids.pids.count; i++)
  		if (sx_pids.pids.list[i].pid == pid) {
  		    sx_pids.pids.list[i].status = wait_stat;
+                     sx_pids.pids.list[i].done = 1;
  		    pthread_cond_broadcast(&sx_pids.cv);
  		    break;
  		}
***************
*** 378,384 ****
      *st = error_status_ok;
  
      /* Find object. */
!     dce_lock_read(sx_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sx_table, instance, st)) == NULL) {
  	dce_lock_unlock(sx_table.lock, st);
  	*st = dced_s_not_found;
--- 383,389 ----
      *st = error_status_ok;
  
      /* Find object. */
!     dce_lock_riw(sx_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sx_table, instance, st)) == NULL) {
  	dce_lock_unlock(sx_table.lock, st);
  	*st = dced_s_not_found;
***************
*** 671,677 ****
  	return;
      }
  
!     dce_lock_read(sx_table.lock, st);
      for (sp = sx_table.list, i = sx_table.count; i; i--, sp++) {
  	if (sp->used)
  	    kill_server(sp, srvrexec_stop_rpc, st);
--- 676,682 ----
  	return;
      }
  
!     dce_lock_riw(sx_table.lock, st);
      for (sp = sx_table.list, i = sx_table.count; i; i--, sp++) {
  	if (sp->used)
  	    kill_server(sp, srvrexec_stop_rpc, st);
***************
*** 714,720 ****
      *st = error_status_ok;
  
      /* Find object. */
!     dce_lock_read(sx_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sx_table, id, st)) == NULL) {
  	dce_lock_unlock(sx_table.lock, st);
  	*st = dced_s_not_found;
--- 719,725 ----
      *st = error_status_ok;
  
      /* Find object. */
!     dce_lock_riw(sx_table.lock, st);
      if ((sp = srvr_find_by_uuid(&sx_table, id, st)) == NULL) {
  	dce_lock_unlock(sx_table.lock, st);
  	*st = dced_s_not_found;

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12828
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : bad free's.
Reported Date                 : 3/28/95
Found in Baseline             : 1.1
Found Date                    : 3/28/95
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : admin/dced/api/dced_util.c
Sensitivity                   : public

[3/28/95 public]


*** dced_util.c.save	Tue Mar 28 13:50:05 1995
--- dced_util.c	Tue Mar 28 13:51:47 1995
***************
*** 638,644 ****
  	if (entry->description) {
  		(*deallocate)(entry->description);
  	}
! 	if (entry->storage_tag) {
  		(*deallocate)(entry->storage_tag);
  	}
     	*entry = s_null_entry;
--- 638,646 ----
  	if (entry->description) {
  		(*deallocate)(entry->description);
  	}
! 	/* In server/init.c we aliased the pointers and IDL ES preserved
! 	 * that aliasing so make sure we don't free the pointer twice. */
! 	if (entry->storage_tag && entry->storage_tag != entry->name) {
  		(*deallocate)(entry->storage_tag);
  	}
     	*entry = s_null_entry;
***************
*** 798,804 ****
  	}
  
  	for (i=0; i<string_list->count; i++) {
! 		(*deallocate)(&string_list->list[i]);
  	}
      	(*deallocate)(string_list->list);
      	string_list->count = 0;
--- 800,806 ----
  	}
  
  	for (i=0; i<string_list->count; i++) {
! 		(*deallocate)(string_list->list[i]);
  	}
      	(*deallocate)(string_list->list);
      	string_list->count = 0;

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12805
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server
Short Description             : ep_ping1 can pass deleted entry
Reported Date                 : 2/24/95
Found in Baseline             : 1.1
Found Date                    : 2/24/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint, 1.2.1
Affected File(s)              : oeops.c, lbops.c
Sensitivity                   : public

[2/24/95 public]

Customer reported:

> Dced dies with segmentation violation.  A bad db_entry_t argument
> is being passed to dblist_remove() and ping_server() from ep_ping1().
                           ^
                           |
[by way of epdb_delete_entry().]

> It appears that this entry has already been removed from the linked
> list.  The list does not contain this data address.
 
This problem was detected after hours of running the dcesx nsi test.

The basic problem is that, while the count of readers for the current
endpoint is incremented to keep it from being deleted while the database
is unlocked, the count of readers for the next entry is _not_ incremented,
creating a situation where the next entry could be deleted and yet that
value could still be assigned to the current endpoint on the loop's next
iteration.

The solution is to protect the next entry in the same manner as the
current endpoint:
 
     *** /tmp/ci.8476..oeops.c.8508.1	Mon Jan 16 16:19:51 1995
     --- /tmp/oeops.c.8508.2	Mon Jan 16 16:19:52 1995
     ***************
     *** 461,474 ****
     --- 461,480 ----
       	    if (ep->flags & db_entry_c_local)
       		continue;
       	    if (count > ep_live_c_max_deletes) {
       		count = 0;
       		ep->readers++;
     + #ifdef hitm
     + 		if (next != NULL) next->readers++;
     + #endif
       		epdb_unlock(h);
       		dced_sleep(60);
       		epdb_lock(h);
       		ep->readers--;
     + #ifdef hitm
     + 		if (next != NULL) next->readers--;
     + #endif
       	    }
       	    if (ep->flags & db_entry_c_deleted) {
       		/* Marked for deletion by task2? */
       		if (ep->readers == 0) {
       		    epdb_delete_entry(h, ep, &status);
     ***************
     *** 475,490 ****
     --- 481,502 ----
       		    count++;
       		}
       	    }
       	    else if (ep->comm_failures == 0) {
       		ep->readers++;
     + #ifdef hitm
     + 		if (next != NULL) next->readers++;
     + #endif
       		epdb_unlock(h);
       		pthread_testcancel();
       		listening = ping_server(ep, ep_live_c_short_comm_timeout,
       				&status);
       		epdb_lock(h);
       		ep->readers--;
     + #ifdef hitm
     + 		if (next != NULL) next->readers--;
     + #endif
       		if (!listening) {
       		    ep->comm_failures++;
       		    pthread_cond_signal(&h->cv);
       		}
       	    }

NOTE:  While looking into this problem, I turned up a parallel situation in
the llb_purge_ents function in lbops.c.  The fix would be the same.

[2/24/95 public]

It might be worth checking to see if this is the source of the core dumps
reported in CR #12606.  The trace shows ep_ping1 calling ping_server.

[02/24/95 public]
Mike Kong at HP has a cleaner fix which is to call
	    next = dblist_next(ep, db_c_entry_list);
after the database is relocked in the ep_ping1 loop.

Yes I believe that 12606 is a dup of this (or vice-versa).

[2/24/95 public]

Rich, can you post diffs for HP's fix to this CR?

[02/24/95 public]
No -- I gave all the info I have/remember (why would I hold back :-).
I believe the warranty patch will have the fix.

[4/4/95 public]

Here's the updated ep_ping1 function from HP (with added lines marked)
which is slated for inclusion in the Warranty Patch release:

static void *
ep_ping1(
    void                *arg
)
{
    epdb_handle_t       h;
    struct timeval      now;
    unsigned32          count;
    db_entry_t          *ep;
    db_entry_t          *next;
    boolean32           listening;
    error_status_t      status;

    h = (epdb_handle_t)arg;
    dce_gettimeofday(&now);

    for ( ; ; ) {
        dced_sleep_until(&now, ep_live_c_long_wait);
        epdb_lock(h);

        ep = dblist_first(&h->lists_mgmt, db_c_entry_list, NULL);
        for (count = 0; ep != NULL; ep = next) {
            next = dblist_next(ep, db_c_entry_list);
            /* don't delete local servers (ie, ones within dced) */
            if (ep->flags & db_entry_c_local)
                continue;
            if (count > ep_live_c_max_deletes) {
                count = 0;
                ep->readers++;
                epdb_unlock(h);
                dced_sleep(60);
                epdb_lock(h);
                ep->readers--;
!               next = dblist_next(ep, db_c_entry_list);
            }
            if (ep->flags & db_entry_c_deleted) {
                /* Marked for deletion by task2? */
                if (ep->readers == 0) {
                    epdb_delete_entry(h, ep, &status);
                    count++;
                }
            }
            else if (ep->comm_failures == 0) {
                ep->readers++;
                epdb_unlock(h);
                pthread_testcancel();
                listening = ping_server(ep, ep_live_c_short_comm_timeout,
                                &status);
                epdb_lock(h);
                ep->readers--;
!               next = dblist_next(ep, db_c_entry_list);
                if (!listening) {
                    ep->comm_failures++;
                    pthread_cond_signal(&h->cv);
                }
            }
        }

        epdb_unlock(h);
    }
}

I've posted the entire function rather than just diffs because (1) it's
short, and (2) I want to note the possibility that, with these additional 
lines added, a situation might arise where, in the processing of the for 
loop, endpoints could be skipped over.  This may, in the larger scheme of 
things, be a non-issue, but I wanted to at least raise it.

This fix is also applicable to the llb_purge_ents function in lbops.c, on 
the off chance anyone is still using it.

[04/05/95 public]
Please explain how you think an endpoint can be skipped.  I don't
see it.

[4/5/95 public]

You're quite right.  During a particular iteration of the loop, dblist_next 
will (or at least _should_) always be called with the same value for ep, so,
indeed, no endpoints will be skipped.  Nevermind.

I've cross-referenced CR 12606 to this CR, and will submit this fix to the
DCE 1.1 maintenance tree.

[12/5/95 public]

Fixed as proposed in OT by HP.

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12651
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : secval
Short Description             : Creds removed on secval_disable(), probably shouldn't be.
Reported Date                 : 10/18/94
Found in Baseline             : 1.1b21
Found Date                    : 10/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : svops.c
Sensitivity                   : public

[10/18/94 public]

In svops.c, the secval_disable() routine removes the self principal
credentials files.  This probably should not happen here as it is 
properly done by secval_enable().  The problem is that if a
secval_disable() is done and a secval_enable() is not done *soon* after,
root processes will fail for lack of creds.  The good thing is that these
operations are not normally performed often.

This is *not* related to CR 12627.

BTW, someone's thesaurus got a workout when naming these functions:

  API is called          secval_start
  RPC manager is called  secval_enable
  dcecp command is       secval activate

[10/21/94 public]
Also wanted to note that the secval documentation talks of 'restricting
the login environment' by performing a secval_stop().  The intent might
have been to have dced unregister the secval interface and/or have the
secval_validate_cert_auth() RPC return a failure.  Whatever the case,
nothing of this sort has been implemented.  The docs have been modified
to de-emphasize this feature where possible.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12647
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dced
Subcomponent Name             : 
Short Description             : HYP:UHYP: dced failed to start in dce_config
Reported Date                 : 10/18/94
Found in Baseline             : 1.1b22
Found Date                    : 10/18/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : dce_config
Sensitivity                   : public

[10/18/94 public]

During dce_config of a core server machine from nightly
build of unintegrated, dced failed to start:

S:****** Configuring Security Server...
S:****** Starting dced...
S:****** Initializing dced...
1994-10-18-09:09:04.938-04:00I----- dced FATAL dhd general main.c 476 0x7affb7c0
Initialization (initialize secval data) failed, status=0x113db0ed.
ERROR:   dced -i failed to start.
1994-10-18-09:09:08.262-04:00I----- dced ERROR dhd general main.c 781 0x7affb7c0
Process (pid 12610) exited with status 0400
ERROR:    failed to start.

[10/18/94 public]

The same problem was observed on HP and AT486 core smoketests for 
DCE1.1 as well.

[10/18/94 public]

Spoke w/ Rich Salz who said that the problem was probably due
to either the init_sv_preauth code which looks for the temporary
directory var/security/preauth, or the rc.dce file which is supposed
to be setting it up.

John Dugas and I looked at the rc.dce file which looks correct. However,
John pointed out that rc.dce is only used on shutdown, not startup.
On the smoketest machine, the var/security/preauth directory did not
exist.  So, in terms of an initial configuration, how is this set up?

[10/18/94 public]

JohnD created the directory and tried again... no luck.

[10/18/94 public]

The code looks like it wants specific perms and ownership fo the directory.
Looks like owner=root(uid=0),gruop=system(gid=0) and perms=0722.  chmod
this directory to these and see what happens...

[10/18/94 public]
Make the that... perms=0711

[10/18/94 public]

Oops.  Rich's changes to my changes didn't touch dce_config, and should
have.  Neither of us evidently tested a from-scrach cell config after he
made his changes.

[10/18/94 public]
Yep, Rajendra and I just just came to the same conclusion. After the
failure we created and set the ownership and permission on the preauth
direcory and it was much happier.

[10/18/94 public]
Adding the directory to install_common().
Setting the owner, group, and permissions to be what dced wants.

[10/18/94 public]
Put the required changes in to the mainline and unintegrated.



CR Number                     : 12573
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hostdata
Short Description             : More files need to be exported via hostdata
Reported Date                 : 10/10/94
Found in Baseline             : 1.1
Found Date                    : 10/10/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[10/10/94 public]

dced already exports several hostdata items, including dce_cf.db,
pe_site, and cell_aliases.  However, in order to robustly support
heterogeneous remote configuration, others should also be exported by
default.

Consider storage tags for non-UNIX operating systems.  For example,
OS/2 requires not only a pathname that uses \ instead of /, but also
a drive letter.  I have no idea what MVS will be looking for.

The best thing would be for OSF to have dced export all known
configuration files whose location is fixed (by virtue of other pieces
of DCE expecting them in a specific location).  The storage tags for
these would then be ported by each vendor and be generally available
to enable full remote configuration.

I believe these are the files that need to be added to the current
set:

  /krb5/krb.conf
  /opt/dcelocal/etc/cds.conf
  /opt/dcelocal/etc/cds_attributes
  /opt/dcelocal/etc/CacheInfo (which still causes a problem because
                              it contains a directory name...)

Other considerations:

  /opt/dcelocal/etc/cds_globalnames
	 If this file is intended to never be modified, then
	 it doesn't have to be exported.  But "never say never?"
  /etc/rc.dce and rc.dfs
	 I would have expected these files to be made obsolete by
	 dced's server objects, but they are still maintained by
	 dce_config.  As long as the full server support exists
	 in dced/dcecp, then perhaps rc.dce/dfs can just be ignored
	 by folks doing remote config?

[10/10/94 public]
Sorry, I meant to make this a B1 bug.  Without OSF's support, 
heteregeneous remote configuration will only be a pipe dream...

[1/1/94 public]
I believe that non-unix files are not OSF's problem - they're yours, the
vendors'.  Our concern is the reference platforms.  As far as '\' instead
of '/', the present scheme already supports thoses.  The "storage_tag" is
just a string of characters.  CDS will still use the normal slashes.

[10/11/94 public]
I think John's a little off-the-mark here.  Unlike other areas of DCE
our concern is definitely for inter-host interoperability.

We (I :-) tried to allow for non-Unix systems; that is why hostdata and
keytabs separate the (well-known, common on all systems) "name" from
the storage_tag.  Now, there are issues with the storage_tag datatype.
It is possible that some operating systems will need characters outside
of the PCS.  I thought about that, and decided that those systems could
pay a penalty of some encoding/mapping syntax, rather then make the majority
of systems pay the penalty of treating the storage_tag as an array of bytes.

The major issue is the one Ken originally raised:  all DCE config files
should be built-in-from-the-start hostdata items.  I agree.  It was lack
of knowledge and time that prevented us from making the comprehensive
list.  We can probably fix this in the unintegrated tree -- heck, we can
fix it in the release notes by providing a name/uuid/dce-file-name table.

Does this clarify things?  What's the best way to make the list?

[10/11/94 public]
I'm not concerned about the character set issue.  Worst case, folks will
be forced to use a lowest common character set, but we've seen that type
of restriction before.  That was just part of my argument for exporting
more files.

I guess I went through old (1.0.3 level) code looking for config files
but there could be new ones in 1.1.  We need the files that are directly
created or updated by dce_config during configuration.  Files created by 
daemons are not necessary, nor are files that are installed and not modified
later.  Of course, I already have an exception above
(cds_attributes)--it is not modified during configuration, but it is reasonable
to assume someone would want to update it later (while installing a new
application, for example).  These should also be included.

Someone familiar with the current dce_config code could probably scan
through the appropriate functions in about 30 minutes to generate the
list...

[10/21/94 public]
I have looked through the 1.1 versions of dce_config and dfs_config
myself.  I don't see any files beyond the original four I mentioned 
above that should be exported.  For the record:

   /krb5/krb.conf
   /opt/dcelocal/etc/cds.conf
   /opt/dcelocal/etc/cds_attributes
   /opt/dcelocal/etc/CacheInfo

[10/21/94 public]
Unfortunately we can't get this into 1.1.  Licensees should either edit
src/admin/dced/server/init.c so that these objects are created, or modify
their config/install scripts so that the items are created at config time.
The official "entry list" values are (name, annotation, uuid, storage
tag as used in our reference ports).  Not all DCE implementations may have
all files, but if you have one of the following files use the uuid and
name shown.
    rc.dce	DCE boot-time start script
		5f24eaf0-ed48-11cd-9653-08000925634b
		/etc/rc.dce
    rc.dfs	DFS boot-time start script (optional)
		645351ce-ed48-11cd-a2f1-08000925634b
		/etc/rc.dfs
    krb.conf
		66436fbe-ed48-11cd-8c44-08000925634b
		/krb5/krb.conf
    dfs-cache-info DFS cache config information
		67c2dec4-ed48-11cd-8cb1-08000925634b
		/opt/dcelocal/etc/CacheInfo
    cds.conf	CDS configuration information
		693af3d6-ed48-11cd-a5b3-08000925634b
		/opt/dcelocal/etc/cds.conf
    cds_attributes Names and types of OID's used by cds
		6aa6d06e-ed48-11cd-8392-08000925634b
		/opt/dcelocal/etc/cds_attributes
    cds_globalnames DCE-support X.500 attribute types
		6bfd884a-ed48-11cd-9e69-08000925634b
		/opt/dcelocal/etc/cds_globalnames

[10/27/94 public]
Two more files:
    passwd_override DCE password override file
		/opt/dcelocal/etc/passwd_override
		7017e62e-f1c5-11cd-9369-08000925634b
    group_override DCE group override file
		714c22c6-f1c5-11cd-9e58-08000925634b
		/opt/dcelocal/etc/group_override

[12/15/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12536
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : sv
Short Description             : HYP: dcecp -c secval deactivate  FAILS: Error: permission not valid for this acl
Reported Date                 : 10/6/94
Found in Baseline             : 1.1
Found Date                    : 10/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : admin/dced/server/acls.c
Sensitivity                   : public

[10/6/94 public]


dcecp core smoketest failed on HPUX, AT486 and RIOS

machines - budapest, sif and mudslide

extract from /u1/RAT_tools/do_automatic_test.log

S:****** Configuring CDS Server...
S:****** Checking for active sec_client service...
S:****** Starting cdsadv...
S:****** Starting cdsd...
S:****** Setting ACLs for all new namespace entries...
S:****** Configuring DTS Local Server...
S:****** Stopping sec_client service...
dcecp -c secval deactivate {ncacn_ip_tcp:130.105.5.85[135]} FAILS: Error: permis
sion not valid for this acl
S:****** Starting sec_client service...
dcecp -c secval activate {ncacn_ip_tcp:130.105.5.85[135]} FAILS: Error: permissi
on not valid for this acl
S:****** Starting dtsd...
1994-10-06-08:25:24.888-04:00I----- dtsd ERROR dts dtserror dtss_service_main.c
786 0x200b4760
Error retrieving security configuration information: No currently established ne
twork identity for which context exists (dce / sec)
S:****** This node is now a DTS local server.
S:****** Exiting from dce_config.


.....
.....


invoking dcecp smoke test
acl object not found
dcecp returned value is: ACL
DONE

-----------------------------------------------

contents of /u1/RAT_tools/dcecp.out

RPC
CDS
PGO
ACL

[10/6/94 public]
My guess is that this is related to the change to acls.c:

 * Revision 1.1.2.27  1994/10/05  19:57:52  rsalz
 *      acl_patches modifies any_other to machine_principal (OT CR 12494).
 *      [1994/10/05  18:40:21  rsalz]

I'm installing now to see what the ACL's are and if cell_admin does in fact
have rights to do "secval deactivate" any more.  My guess is probably not.
If this is the case, the dced folks can decide if this is the right thing
or not.  We'll change the smoketest or the code as appropriate.  My first
thoughts are that cell_admin should somehow have rights to disable secval
by default.

I tried looking at the ACL's on sif but couldn't get very far and
didn't know specifically which ACL to look at: 

  /.:/hosts/sif/config
  /.:/hosts/sif/config/secval

I tried as both root and cell_admin and couldn't do an acl perm for either
successfully.  Have fun.

[10/06/94 public]
There are two parts here.  One is letting everyone read the ACL's.  I wlil
fix that.  The second is having dcecp do "secval deactivate" as the machine
principle.  Rob Baum is checking out this fix
	( unset KRB5CCNAME ; dcecp -c 'secval disable' )

[10/07/94 public]
Given the exigencies of the release, we did the fast thing and backed
out the change made for 12494.  Smoketest passed, closing this.



CR Number                     : 12534
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : utility api
Short Description             : wrong index used in for loop
Reported Date                 : 10/6/94
Found in Baseline             : 1.1
Found Date                    : 10/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : admin/dced/api/register.c
Sensitivity                   : public

[10/6/94 public]
In dce_server_register: use either j or i but not both (or ....)

	    for (j = 0; j < rd->num_types; j++) {
		rpc_server_register_if(rd->ifhandle, &rd->types[i].type,
		    rd->types[i].epv, st);
		if (*st != error_status_ok)
		    return;
	    }

Fix:  change first line in

	    for (i = 0; i < rd->num_types; i++) {

[1/6/94 public]
Actually, it shouuld use the j's, since the i's are used in an
outer loop.



CR Number                     : 12533
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : utility api
Short Description             : somewhere
rpc_server_register_auth_info needs to be called
Reported Date                 : 10/5/94
Found in Baseline             : 1.1
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : admin/dced/api/dce_server_sec.c
Sensitivity                   : public

[10/5/94 public]
Not seeing rpc_server_register_auth_info in dce_server_sec_begin
I looked in dce_server_register and finally grepped it.  It seems
nowhere in sight.
I think in the spirit of the api this function should be called
somewhere ( probably in dce_server_sec_begin).
Also this is a 1 line fix.

[10/5/94 public]
Actually is more like three lines. You need to create the key
retrieval function.  I have this in my sandbox, but is very simple to do.

As an aside, the signature of the key retrieval function is changed
from 1.0.3 and so it will be binary and source level incompatible
with already existing code.  This aside does not really belong here but...

[1/6/94 public]
OK, now calls rpc_server_register_auth_info() in dce_server_sec_begin().
We do *not* need to change the signature, since you don't need a key
retrieval func - just the keytab filename.



CR Number                     : 12532
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : utility api
Short Description             : dce_server_sec_begin does not
call sec_login_set_context
Reported Date                 : 10/5/94
Found in Baseline             : 1.1
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : dced/api/dce_server_sec.c
Sensitivity                   : public

[10/5/94 public]
Needs to call sec_login_set_context after successfull validation.
The fix is a 1 liner.

[1/6/94 public]
Right.  Done.



CR Number                     : 12527
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : api
Short Description             : HYP: Bad handle passed to sec_login_validate_identity() in dce_server_sec_begin()
Reported Date                 : 10/5/94
Found in Baseline             : 1.1b19
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : dce/api/dce_server_sec.c
Sensitivity                   : public

[10/5/94 public]
A bad handle is passed to sec_login_validate_identity() in
dce_server_sec_begin().  It should be a sec_login_handle_t, not a pointer
to it.
Found by Max's convenience function tests.

Should be fixed now.  Else, the FVT will not pass.  Risk = none.

[10/5/94 public]

Just spoke w/ Max.  On hypercritical list.

[1/5/94 public]
Removed an extra '&' in 1st param to sec_login_validate_identity().



CR Number                     : 12520
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : api
Short Description             : dce_server_sec_begin inverts the
usage of the dce_server_c_login flag
Reported Date                 : 10/5/94
Found in Baseline             : 1.1
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : dce_server_sec.c
Sensitivity                   : public

[10/5/94 public]
dce_server_sec_begin tests the login flag with

    if (!(flags & dce_server_c_login)) {

should test with 

    if (flags & dce_server_c_login) {

[1/5/94 public]
Did as Max said (because he is right...).



CR Number                     : 12494
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : UHYP: dced during bootstrap unsecure
Reported Date                 : 10/4/94
Found in Baseline             : 1.1b20
Found Date                    : 10/4/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : admin/dced/server/acls.c
Sensitivity                   : public

[10/4/94 public]
There was a previous OT CR that discussed this, but it also got sidetracked
in some other issues.

DCED as currently in the tree is unsecure.

The ACLS that it puts on its objects are not correctly patched -- they
leave "unauthenticated anyone" with all rights.  Fixing this is fairly
easy -- cut&paste the half-dozen lines from write_acl (in acls.c) that
create "machine prin only rights" and add them into the acl_patcher at
the place where it replaces the bogus realm with the good one.  I don't
know if fixing this will expose some test defects however, as the tests
might rely on the current (wrong) ACL's on dced objects.

I am assigning this A0, but not putting because of the possible ripple
of test problems perhaps it should be lowered and not treated as a
'hypercritical' problem.

[10/05/94 public]
Fixed as described above.

[10/06/94 public]
The fix caused various config problems so was backed out.  Changed this
back to open and made it UHYP.

[10/26/94 public]
We will be unable to fix this for DCE 1.1  I am marking defer and lowering
the priority.  Let me justify the latter:  the vulnerability is that the
first host in a cell can be comprised if someone has a DCE client and
creates, say, a password_override hostdata item between the time the host
is configured and the default ACL's are changed.  This is unlikely, but
possible.  The file acls.c has #if 0'd code to patch the ACLs but it
exposed some config problems.  Licensees concerned about the window
should enable that code and work through their config problems.  *All
licensees should modify their config scripts to set the ACLs properly.*

[5/15/95 public]

I'm a little bit confused by the last comment. Let me clarify.

The file acls.c has #if 0'd code to patch the initial ACLs for dced managed
objects.  If this code is not enabled, dced managed objects will have
wide-open ACLs, i.e., any authenticated user can read/write dced managed
objects (can steal server keys!). OSF recommends that "all licensees should
modify their config scripts to set the ACLs properly". However, patching
ACLs in the config scripts will not help when a host is migrated from 1.0.3
to 1.1 since it's already configured. (Ya, right, a vendor can provide a
script, which must be executed as "root" after dced's bootstrap and knows a
cell admin's name.)

What kinds of config problems are expected by #if 1'ing code? I've enabled
it, but so far I havn't seen any problem. (Am I just lucky?)

How about a small window mentioned above? Is it a window between an
execution of init_acl_database() and ACL patching in config scripts? Or a
window between a secd startup and an execution of acl_patcher(), which
exists even if the above code is enabled.

[05/16/95 public]
Sorry but I don't remember the details.  Perhaps we didn't even have time
to figure out what the details where.  I just remember that when I put
in the code, smoketests failed.  When I #if'd it out, smoketests worked.
Perhaps there is a window like you mention (although it does wait_for_secd)
or perhaps there is some acldb multi-threaded access problem going on.

[5/16/95 public]

What was the smoketest? (I can't remember it any more.) Configuring
multi-nodes cell? Any possibility of using dcecp command to fetch the cell
info from the master node (which won't work since the above code disables
any remote operations)?

[05/16/95 public]
I don't remember.  It might have even been as simple as just the
basic config failed.  This leads me to think timing problem since you
had no problems and are presumably on a more powerful machine.

[5/17/95 public]

FYI: #if 0'd code leaves the ACL open for unauthenticated users.

[5/25/95 public]

Everyone should also be aware that even if they change their startup scripts
to allow only cell_admin "add/write/modify" access, this still will allow
cell_admin to load any program onto the machine (see 'hostdata(8dce)') and run
it as root on the machine (see 'server(8dce)').

The following code changes to dced (based on the #if 0'd code) patch the
ACLs as soon as secd comes up so that only the machine principal has
"add/write/modify" permissions.  The startup scripts can then be modified
to ask the system administrator whether to allow remote administration and
to warn the system administrator of the power being granted to root; and
to modify the ACLs if the system administrator wishes.

----------------------- src/admin/dced/server/acldefs.h ---------------------
36a37,38
>     unsigned32                         root_perms;
>     unsigned32                         other_perms;
37a40,41
>     unsigned32                         do_root_perms;
>     unsigned32                         do_other_perms;
-----------------------------------------------------------------------------

------------------------ src/admin/dced/server/acls.c -----------------------
141d140
<
333c332,334
<       &hd_obj_type, &hd_cont_type, &hd_acl, &hd_do_acl },
---
>       &hd_obj_type, &hd_cont_type,
>       &hd_acl, dced_cont_all_perms, dced_perm_read,
>       &hd_do_acl, dced_hd_all_perms, dced_perm_read },
335c336,338
<       &km_obj_type, &km_cont_type, &km_acl, &km_do_acl },
---
>       &km_obj_type, &km_cont_type,
>       &km_acl, dced_cont_all_perms, dced_perm_read,
>       &km_do_acl, dced_km_all_perms, dced_perm_read },
337c340,342
<       &sc_obj_type, &sc_cont_type, &sc_acl, &sc_do_acl },
---
>       &sc_obj_type, &sc_cont_type,
>       &sc_acl, dced_cont_all_perms, dced_perm_read,
>       &sc_do_acl, dced_sc_all_perms, dced_perm_read },
339c344,346
<       &sx_obj_type, &sx_cont_type, &sx_acl, &sx_do_acl },
---
>       &sx_obj_type, &sx_cont_type,
>       &sx_acl, dced_cont_all_perms, dced_perm_read,
>       &sx_do_acl, dced_sx_all_perms, dced_perm_read },
341c348,350
<       &sv_obj_type, NULL,          &sv_acl, NULL },
---
>       &sv_obj_type, NULL,
>       NULL, 0, 0,
>       &sv_acl, dced_sv_all_perms, dced_perm_execute },
343c352,354
<       &as_obj_type, &as_cont_type, &as_acl, &as_do_acl },
---
>       &as_obj_type, &as_cont_type,
>       &as_acl, dced_cont_all_perms, dced_perm_read,
>       &as_do_acl, dced_as_all_perms, dced_perm_read },
669c680,681
<     sec_acl_permset_t perms,
---
>     sec_acl_permset_t rootPerms,
>     sec_acl_permset_t otherPerms,
675c687
<     sec_acl_entry_t   entries[2];
---
>     sec_acl_entry_t   entries[3];
677,678c689
<     entries[0].perms = perms;
<     if (uuid_is_nil(&thishost_prin_uuid, st))
---
>     acl = nil_acl;
680,684d690
<     else {
<       entries[0].entry_info.entry_type = sec_acl_e_type_user;
<       entries[0].entry_info.tagged_union.id.uuid = thishost_prin_uuid;
<       entries[0].entry_info.tagged_union.id.name = NULL;
<     }
686,687c692,704
<     entries[1].perms = perms;
<     acl = nil_acl;
---
>     if (uuid_is_nil(&thishost_prin_uuid, st)) {
>       entries[0].perms = rootPerms;
>       entries[1].perms = rootPerms;
>       acl.num_entries = 2;
>     } else {
>       entries[0].perms = otherPerms;
>       entries[1].perms = otherPerms;
>       entries[2].entry_info.entry_type = sec_acl_e_type_user;
>       entries[2].entry_info.tagged_union.id.uuid = thishost_prin_uuid;
>       entries[2].entry_info.tagged_union.id.name = NULL;
>       entries[2].perms = rootPerms;
>       acl.num_entries = 3;
>     }
690d706
<     acl.num_entries = 2;
701a718,719
>     manager_list_t    *mp;
>
705,711c723,727
<     /* pseudo-container ACLs */
<
<     write_acl(&hd_acl, &hd_cont_type, dced_cont_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_hostdata,
<               "container", (long)*st);
<       return;
---
>     for (mp = managers; mp->name; mp++) {
>       if (NULL != mp->cont_type)
>           write_acl( mp->acl, mp->cont_type, mp->root_perms, mp->other_perms, st )
>       ;
>       write_acl( mp->do_acl, mp->obj_type, mp->do_root_perms, mp->do_other_perms, st );
713,736d728
<     write_acl(&km_acl, &km_cont_type, dced_cont_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_keytab,
<               "container", (long)*st);
<       return;
<     }
<     write_acl(&sc_acl, &sc_cont_type, dced_cont_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrconf,
<               "container", (long)*st);
<       return;
<     }
<     write_acl(&sx_acl, &sx_cont_type, dced_cont_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrexec,
<               "container", (long)*st);
<       return;
<     }
<     write_acl(&as_acl, &as_cont_type, dced_cont_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_attr_sch,
<               "container", (long)*st);
<       return;
<     }
738,778d729
<     /* Initial object ACLs */
<
<     write_acl(&hd_do_acl, &hd_obj_type, dced_hd_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_hostdata,
<               "init. object", (long)*st);
<       return;
<     }
<     write_acl(&km_do_acl, &km_obj_type, dced_km_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_keytab,
<               "init. object", (long)*st);
<       return;
<     }
<     write_acl(&sc_do_acl, &sc_obj_type, dced_sc_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrconf,
<               "init. object", (long)*st);
<       return;
<     }
<     write_acl(&sx_do_acl, &sx_obj_type, dced_sx_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrexec,
<               "init. object", (long)*st);
<       return;
<     }
<     write_acl(&as_do_acl, &as_obj_type, dced_as_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_attr_sch,
<               "init. object", (long)*st);
<       return;
<     }
<
<     /* secval just has an object.  It is not a container. */
<     write_acl(&sv_acl, &sv_obj_type, dced_sv_all_perms, st);
<     if (*st != error_status_ok) {
<       dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_secval,
<               "object", (long)*st);
<       return;
<     }
<
780c731
<     write_acl(&config_acl, &config_type, dced_sx_all_perms, st);
---
>     write_acl(&config_acl, &config_type, dced_sx_all_perms, dced_perm_read, st);
828a780
>
839a792,794
>     sec_acl_entry_t           entries[3];
>     int                       freeEntries;
>     manager_list_t            *mp;
875a831,832
>
>       rpc_sm_free( acl.sec_acl_entries, st );
888a846
>
890a849
>           freeEntries = TRUE;
896d854
< #if 0
899,901c857,887
<               acl.sec_acl_entries[0].entry_info.entry_type = sec_acl_e_type_user;
<               acl.sec_acl_entries[0].entry_info.tagged_union.id.uuid = thishost_prin_uuid;
<               acl.sec_acl_entries[0].entry_info.tagged_union.id.name = NULL;
---
>               for (mp = managers; mp->name; mp++) {
>                   if (
>                       (NULL != mp->cont_type)
>                    && uuid_equal( &acl.sec_acl_manager_type,mp->cont_type,st )
>                   ) {
>                       bcopy( acl.sec_acl_entries, entries, 2 * sizeof( sec_acl_entry_t ) );
>                       rpc_sm_free( acl.sec_acl_entries, st );
>                       freeEntries = FALSE;
>                       entries[0].perms = mp->other_perms;
>                       entries[1].perms = mp->other_perms;
>                       entries[2].perms = mp->root_perms;
>                       entries[2].entry_info.entry_type = sec_acl_e_type_user;
>                       entries[2].entry_info.tagged_union.id.uuid = thishost_prin_uuid;
>                       entries[2].entry_info.tagged_union.id.name = NULL;
>                       acl.sec_acl_entries = entries;
>                       freeEntries = FALSE;
>                       acl.num_entries = 3;
>                   } else if (
>                       uuid_equal( &acl.sec_acl_manager_type,mp->obj_type,st )
>                   ) {
>                       bcopy( acl.sec_acl_entries, entries, 2 * sizeof( sec_acl_entry_t ) );
>                       rpc_sm_free( acl.sec_acl_entries, st );
>                       freeEntries = FALSE;
>                       entries[0].perms = mp->do_other_perms;
>                       entries[1].perms = mp->do_other_perms;
>                       entries[2].perms = mp->do_root_perms;
>                       entries[2].entry_info.entry_type = sec_acl_e_type_user;
>                       entries[2].entry_info.tagged_union.id.uuid = thishost_prin_uuid;
>                       entries[2].entry_info.tagged_union.id.name = NULL;
>                       acl.sec_acl_entries = entries;
>                       acl.num_entries = 3;
903c889,890
< #endif
---
>               }
>           }
908a896
>           if (freeEntries) rpc_sm_free( acl.sec_acl_entries, st );
-----------------------------------------------------------------------------

[5/25/95 public]

The above code leaves the ACL for keytab entries world-readable. The use of
rpc_sm_free() is not appropriate.

Well, here goes yet another fix. I've been working to close this security
hole with minimal change to the config script and the ease of migration
from pre-1.1 DCE.  (Note: When an existing cell migrates to 1.1, dced
should automagically come up with proper ACLs. It shouldn't require to run
the config script on all hosts in the cell.) Here is what I came up:

Tighten up the initial ACLs for dced objects assigned at the bootstrap
phase. Also, while in there, closed a small security hole between the
secd startup and the initial ACL patch by disabling rdacl_replace()
and rs_attr_schema_create/delete/update_entry().

The initial ACLs:
  unauthenticated and any_other: Readonly (None for keytab and secval)
  machine principal: All
  subsys/dce/dced-admin group (iff exists): All

Set umask(022) at dced startup to protect dced created files.

When migrating from the pre-1.1 DCE, a cell administrator must create the
subsys/dce/dced-admin group before installing DCE 1.1. Otherwise, the
remote configuration of dced will be disabled. As a cell administrator,
<cell_admin>, execute the following rgy_edit and acl_edit commands:

$ rgy_edit -update
rgy_edit=> domain group
rgy_edit=> add subsys/dce/dced-admin
rgy_edit=> member subsys/dce/dced-admin -a <cell_admin>
rgy_edit=> quit

$ acl_edit /.:/sec/group/subsys/dce/dced-admin \
    -m group:acct-admin:rctDnfmM

When configuring a new cell, the remote configuration of dced on an initial
security server host will be disabled. To enable it, a cell administrator
must manually fix ACLs. (Simple dcecp script can do this, but not included
in the following diffs.)

Here are diffs: (I manually extracted this fix from our code base and may
missed somthing. :-)

--- /afs/ch/project/dce/build/dce1.1/src/config/dce_config	Tue Oct 18 13:29:42 1994
+++ dce_config	Thu May 25 15:38:52 1995
@@ -4302,11 +4302,13 @@
 	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/cds-server"
 	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/dts-servers"
 	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/audit-admin"
+	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/dced-admin"
 	log_msg DETAIL "Executing: rgy_edit> member acct-admin -a $CELLADMIN"
 	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/sec-admin -a $CELLADMIN"
 	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/cds-admin -a $CELLADMIN"
 	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/dts-admin -a $CELLADMIN"
 	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/audit-admin -a $CELLADMIN"
+	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/dced-admin -a $CELLADMIN"
 	log_msg DETAIL "Executing: rgy_edit> quit"
 	rgy_edit -update >>/tmp/rgy_edit_out$$ 2>&1 <<EOF
 domain group
@@ -4317,11 +4319,13 @@
 add $SUBSYSDIR/cds-server
 add $SUBSYSDIR/dts-servers
 add $SUBSYSDIR/audit-admin
+add $SUBSYSDIR/dced-admin
 member acct-admin -a $CELLADMIN
 member $SUBSYSDIR/sec-admin -a $CELLADMIN
 member $SUBSYSDIR/cds-admin -a $CELLADMIN
 member $SUBSYSDIR/dts-admin -a $CELLADMIN
 member $SUBSYSDIR/audit-admin -a $CELLADMIN
+member $SUBSYSDIR/dced-admin -a $CELLADMIN
 quit
 EOF
 	rgy_edit_status=$?
@@ -5271,6 +5275,16 @@
 	-m group:$SUBSYSDIR/cds-admin:rctDnfmM \
 	-m group:$SUBSYSDIR/cds-server:rctDnfmM >>/tmp/acl_edit_out$$ 2>&1
 	if [ $? -ne 0 ]; then
+		acl_edit_status=1
+	fi
+
+
+	#acl_edit /.:/sec/group/$SUBSYSDIR/dced-admin
+	log_msg DETAIL "Executing: acl_edit -addr $BINDING group/$SUBSYSDIR/dced-admin \
+-m group:acct-admin:rctDnfmM"
+	acl_edit -addr $BINDING group/$SUBSYSDIR/dced-admin \
+	-m group:acct-admin:rctDnfmM >>/tmp/acl_edit_out$$ 2>&1
+	if [ $? -ne 0 ]; then
 		acl_edit_status=1
 	fi
 
--- /afs/ch/project/dce/build/dce1.1/src/admin/dced/server/acls.c	Thu Oct  6 14:11:58 1994
+++ acls.c	Thu May 25 14:45:48 1995
@@ -667,6 +667,9 @@
     uuid_t		*acl_uuid,
     uuid_t		*mgr_type,
     sec_acl_permset_t	perms,
+#ifndef	HPDCE_DCED_FIX_OT12494
+    sec_acl_permset_t	perms2,
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     error_status_t	*st
 )
 {
@@ -683,7 +686,11 @@
 	entries[0].entry_info.tagged_union.id.name = NULL;
     }
     entries[1].entry_info.entry_type = sec_acl_e_type_unauthenticated;
+#ifndef	HPDCE_DCED_FIX_OT12494
+    entries[1].perms = perms2;
+#else
     entries[1].perms = perms;
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     acl = nil_acl;
     acl.sec_acl_manager_type = *mgr_type;
     acl.default_realm.uuid = this_cell_uuid;
@@ -704,31 +711,51 @@
 
     /* pseudo-container ACLs */
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&hd_acl, &hd_cont_type, dced_cont_all_perms, dced_perm_read, st);
+#else
     write_acl(&hd_acl, &hd_cont_type, dced_cont_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_hostdata,
 		"container", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&km_acl, &km_cont_type, dced_cont_all_perms, 0, st);
+#else
     write_acl(&km_acl, &km_cont_type, dced_cont_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_keytab,
 		"container", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&sc_acl, &sc_cont_type, dced_cont_all_perms, dced_perm_read, st);
+#else
     write_acl(&sc_acl, &sc_cont_type, dced_cont_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrconf,
 		"container", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&sx_acl, &sx_cont_type, dced_cont_all_perms, dced_perm_read, st);
+#else
     write_acl(&sx_acl, &sx_cont_type, dced_cont_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrexec,
 		"container", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&as_acl, &as_cont_type, dced_cont_all_perms, dced_perm_read, st);
+#else
     write_acl(&as_acl, &as_cont_type, dced_cont_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_attr_sch,
 		"container", (long)*st);
@@ -737,31 +764,51 @@
 
     /* Initial object ACLs */
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&hd_do_acl, &hd_obj_type, dced_hd_all_perms, dced_perm_read, st);
+#else
     write_acl(&hd_do_acl, &hd_obj_type, dced_hd_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_hostdata,
 		"init. object", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&km_do_acl, &km_obj_type, dced_km_all_perms, 0, st);
+#else
     write_acl(&km_do_acl, &km_obj_type, dced_km_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_keytab,
 		"init. object", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&sc_do_acl, &sc_obj_type, dced_sc_all_perms, dced_perm_read, st);
+#else
     write_acl(&sc_do_acl, &sc_obj_type, dced_sc_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrconf,
 		"init. object", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&sx_do_acl, &sx_obj_type, dced_sx_all_perms, dced_perm_read, st);
+#else
     write_acl(&sx_do_acl, &sx_obj_type, dced_sx_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_srvrexec,
 		"init. object", (long)*st);
 	return;
     }
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&as_do_acl, &as_obj_type, dced_as_all_perms, dced_perm_read, st);
+#else
     write_acl(&as_do_acl, &as_obj_type, dced_as_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_attr_sch,
 		"init. object", (long)*st);
@@ -769,7 +816,11 @@
     }
 
     /* secval just has an object.  It is not a container. */
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&sv_acl, &sv_obj_type, dced_sv_all_perms, 0, st);
+#else
     write_acl(&sv_acl, &sv_obj_type, dced_sv_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, dced_c_service_secval,
 		"object", (long)*st);
@@ -777,7 +828,11 @@
     }
 
     /* For the DCED server itself (eg, for rpc_mgmt_xxx) */
+#ifndef	HPDCE_DCED_FIX_OT12494
+    write_acl(&config_acl, &config_type, dced_sx_all_perms, dced_perm_read, st);
+#else
     write_acl(&config_acl, &config_type, dced_sx_all_perms, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (*st != error_status_ok) {
 	dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, "dced", "server", (long)*st);
 	return;
@@ -828,6 +883,10 @@
 */
 void
 acl_patcher(
+#ifndef	HPDCE_DCED_FIX_OT12494
+    uuid_t			*admin_uuid,
+    uuid_t			*admin_group_uuid,
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     error_status_t              *st
 )
 {
@@ -837,6 +896,11 @@
     unsigned32			count;
     uuid_t			*patches;
     int				i;
+#ifndef	HPDCE_DCED_FIX_OT12494
+    int				j;
+    sec_acl_permset_t		perms;
+    sec_acl_permset_t		perms2;
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 
     /* Can't do DB store operations within a DB iteration (our position
      * gets lost).  So first loop to find all suspects, then loop and
@@ -873,6 +937,9 @@
 			    (count + dced_c_acl_chunk_size) * sizeof (uuid_t));
 	    patches[count++] = *u;
 	}
+#ifndef	HPDCE_DCED_FIX_OT12494
+	dce_acl_obj_free_entries(&acl, &st2);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     }
     dce_db_iter_done(acl_db, st);
     if (*st != error_status_ok) {
@@ -893,6 +960,24 @@
 		break;
 	    }
 	    acl.default_realm.uuid = this_cell_uuid;
+#ifndef	HPDCE_DCED_FIX_OT12494
+	    for (perms = perms2 = 0, j = 0; j < acl.num_entries; j++) {
+		if (acl.sec_acl_entries[j].entry_info.entry_type
+		    == sec_acl_e_type_any_other) {
+		    perms = acl.sec_acl_entries[j].perms;
+		    acl.sec_acl_entries[j].entry_info.entry_type =
+			sec_acl_e_type_user;
+		    acl.sec_acl_entries[j].entry_info.tagged_union.id.uuid =
+			thishost_prin_uuid;
+		    acl.sec_acl_entries[j].entry_info.tagged_union.id.name =
+			NULL;
+		}
+		else if (acl.sec_acl_entries[j].entry_info.entry_type
+			 == sec_acl_e_type_unauthenticated) {
+		    perms2 = acl.sec_acl_entries[j].perms;
+		}
+	    }
+#else
 #if 0
 	    if (acl.num_entries == 2
 	     && acl.sec_acl_entries[0].entry_info.entry_type == sec_acl_e_type_any_other) {
@@ -901,11 +986,60 @@
 		acl.sec_acl_entries[0].entry_info.tagged_union.id.name = NULL;
 	    }
 #endif
+#endif	/* HPDCE_DCED_FIX_OT12494 */
+#ifndef	HPDCE_DCED_FIX_OT12494
+	    if (perms != 0) {
+		if (admin_uuid != NULL
+		    && !uuid_is_nil(admin_uuid, &st2)
+		    && st2 == error_status_ok) {
+		    dce_acl_obj_add_user_entry(&acl, perms, admin_uuid, &st2);
+		    if (st2 != error_status_ok) {
+			dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, "acl_patcher",
+				       "admin ACL", (long)st2);
+		    }
+		    else {
+			DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_aclmgr,
+				       svc_c_debug1,
+				       "Added admin ACL\n"));
+		    }
+		}
+		if (admin_group_uuid != NULL
+		    && !uuid_is_nil(admin_group_uuid, &st2)
+		    && st2 == error_status_ok) {
+		    dce_acl_obj_add_group_entry(&acl, perms,
+						admin_group_uuid, &st2);
+		    if (st2 != error_status_ok) {
+			dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, "acl_patcher",
+				       "admin group ACL", (long)st2);
+		    }
+		    else {
+			DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_aclmgr,
+				       svc_c_debug1,
+				       "Added admin group ACL\n"));
+		    }
+		}
+	    }
+	    if (perms2 != 0) {
+		dce_acl_obj_add_any_other_entry(&acl, perms2, &st2);
+		if (st2 != error_status_ok) {
+		    dce_svc_printf(DCED_S_INIT_ACL_FAIL_MSG, "acl_patcher",
+				   "any_other ACL", (long)st2);
+		}
+		else {
+		    DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_aclmgr,
+				   svc_c_debug1,
+				   "Added any_other ACL\n"));
+		}
+	    }
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 	    dce_db_store_by_uuid(acl_db, &patches[i], &acl, st);
 	    if (*st != error_status_ok) {
 		dce_svc_printf(DCED_S_CANT_STORE_ACL_MSG, "acl_patcher", (long)st2);
 		break;
 	    }
+#ifndef	HPDCE_DCED_FIX_OT12494
+	    dce_acl_obj_free_entries(&acl, &st2);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 	}
     }
 Unlock:
--- /afs/ch/project/dce/build/dce1.1/src/admin/dced/server/dcedimpl.h	Mon Oct  3 15:58:41 1994
+++ dcedimpl.h	Fri May 12 14:04:54 1995
@@ -299,7 +299,11 @@
 
 /* simple function prototypes */
 int		main(int, char**);
+#ifndef        HPDCE_DCED_FIX_OT12494
+void           acl_patcher(uuid_t*, uuid_t*, error_status_t*);
+#else
 void		acl_patcher(error_status_t *);
+#endif /* HPDCE_DCED_FIX_OT12494 */
 void		dced_ept_init(error_status_t*);
 void		dced_fork(char**, pid_t*, error_status_t*);
 void		dced_sleep(time_t);
--- /afs/ch/project/dce/build/dce1.1/src/admin/dced/server/main.c	Mon Oct 17 15:31:04 1994
+++ main.c	Thu May 25 15:02:54 1995
@@ -253,6 +253,12 @@
  */
 /* ______________________________________________________________________ */
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+#include <dce/pthread_exc.h>
+#define PTHREAD
+#define NO_THREADS_HEADER
+#endif	/* HPDCE_DCED_FIX_OT12494 */
+
 #define EXTERN
 #include <dcedimpl.h>
 #include <hdimpl.h>
@@ -264,11 +270,21 @@
 #include <lb.h>
 #endif	/* defined(WANT_LLB) */
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+#include <dce/stubbase.h>
+#include <dce/rpcpvt.h>
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 #include <dce/rdaclifv0.h>
 #include <dce/binding.h>
 #include <dce/secidmap.h>
 #include <dce/pgo.h>
+#ifndef	HPDCE_DCED_FIX_OT12494
+#include <dce/acct.h>
+#include <dce/misc.h>
+#endif	/* HPDCE_DCED_FIX_OT12494 */
+#ifdef	HPDCE_DCED_FIX_OT12494
 #include <pthread.h>
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 #include <sys/wait.h>
 #include <rsec_cert.h>
 #include <rsec_login.h>
@@ -291,6 +307,11 @@
 static void	*signal_catcher(void *);
 static void	background(void);
 static void 	*bootstrap_mgmt(void *arg);
+#ifndef	HPDCE_DCED_FIX_OT12494
+static void	pool_lookup(uuid_p_t, rpc_if_id_p_t if_id,
+			    unsigned32, rpc_thread_pool_handle_t*,
+			    unsigned32*);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 
 /* Global definitions. */
 dce_svc_handle_t	dhd_svc_handle;
@@ -336,6 +357,10 @@
 
 static void
 dced_wait_for_sec(
+#ifndef	HPDCE_DCED_FIX_OT12494
+    uuid_t			*admin_uuid,
+    uuid_t			*admin_group_uuid,
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     error_status_t		*st
 )
 {
@@ -343,10 +368,20 @@
     sec_rgy_handle_t		rh;
     sec_rgy_name_t		prin_in_rgy;
     void			*key;
+#ifndef	HPDCE_DCED_FIX_OT12494
+    error_status_t		st2;
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 
     /* Initialize */
+#ifndef	HPDCE_DCED_FIX_OT12494
+    if (admin_uuid != NULL)
+	uuid_create_nil(admin_uuid, &st2);
+    if (admin_group_uuid != NULL)
+	uuid_create_nil(admin_group_uuid, &st2);
+#else
     uuid_create_nil(&thishost_prin_uuid, st);
     uuid_create_nil(&this_cell_uuid, st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
 
     /* Wait for secd to show up */
     for ( ; ; ) {
@@ -390,6 +425,26 @@
 	uuid_create_nil(&this_cell_uuid, st);
     }
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+    if (admin_group_uuid != NULL) {
+	strcpy((char *)prin_in_rgy, "subsys/dce/dced-admin");
+	sec_rgy_pgo_name_to_id(rh, sec_rgy_domain_group, prin_in_rgy,
+			       admin_group_uuid, &st2);
+	if (st2 != error_status_ok) {
+	    dce_svc_printf(DCED_S_INIT_FUNCTION_FAIL_MSG,
+			   "lookup subsys/dce/dced-admin", (long)st2);
+	    uuid_create_nil(admin_group_uuid, &st2);
+	}
+	else {
+	    DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_aclmgr, svc_c_debug1,
+			   "subsys/dce/dced-admin found\n"));
+	}
+    }
+    if (admin_uuid != NULL) {
+	/* No way to obtain admin principal. Hope in future... */
+    }
+#endif	/* HPDCE_DCED_FIX_OT12494 */
+
     sec_rgy_site_close(rh, st);
 }
 
@@ -430,6 +485,14 @@
     int			i;
     char		**pp;
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+    (void)umask(S_IWGRP|S_IWOTH);
+
+    /* Initialize */
+    uuid_create_nil(&thishost_prin_uuid, &st);
+    uuid_create_nil(&this_cell_uuid, &st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
+
     /* Basic setup. */
     dce_svc_set_progname("dced", &st);
     dce_msg_define_msg_table(dced_svc_g_table,
@@ -553,12 +616,24 @@
 	    dce_svc_printf(DCED_S_CANT_INIT_SOMETHING_MSG, "wait_for_register", (long)st);
     }
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+    rpc_server_set_thread_pool_fn(&pool_lookup, &st);
+    if (st != error_status_ok)
+	dce_svc_printf(DCED_S_CANT_INIT_SOMETHING_MSG, "pool lookup", (long)st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
+
     DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_general, svc_c_debug1,
 	"About to listen."));
     rpc_server_listen(rpc_c_listen_max_calls_default, &st);
     if (st != error_status_ok)
 	dce_svc_printf(DCED_S_CANT_INIT_SOMETHING_MSG, "start listening", (long)st);
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+    rpc_server_set_thread_pool_fn(NULL, &st);
+    if (st != error_status_ok)
+	dce_svc_printf(DCED_S_CANT_STOP_SOMETHING_MSG, "pool lookup");
+#endif	/* !defined(HPDCE_RPC_SCALE) || !defined(HPDCE_DCED_FIX_OT12494) */
+
     /* We're done.  Clean up and exit. */
     if (do_secval)
 	remove_bindings_file();
@@ -837,12 +912,21 @@
 {
     error_status_t	st;
     unsigned32		i;
+#ifndef	HPDCE_DCED_FIX_OT12494
+    uuid_t		admin_group_uuid;
 
+    dced_wait_for_sec(NULL, &admin_group_uuid, &st);
+#else
     dced_wait_for_sec(&st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (st != error_status_ok)
 	dce_svc_printf(DCED_S_CANT_INIT_SOMETHING_MSG, "wait_for_sec", (long)st);
 
+#ifndef	HPDCE_DCED_FIX_OT12494
+    acl_patcher(NULL, &admin_group_uuid, &st);
+#else
     acl_patcher(&st);
+#endif	/* HPDCE_DCED_FIX_OT12494 */
     if (st != error_status_ok)
 	dce_svc_printf(DCED_S_CANT_INIT_SOMETHING_MSG, "ACL patcher", (long)st);
 
@@ -1022,3 +1106,45 @@
     CHECK_STAT_RET(*st);
     sp->registered = FALSE;
 }
+
+#ifndef	HPDCE_DCED_FIX_OT12494
+/*
+**  Thread pool dispatcher.
+*/
+static void pool_lookup(
+    /* [in] */ uuid_p_t obj_uuid,
+    /* [in] */ rpc_if_id_p_t if_id,
+    /* [in] */ unsigned32 opnum,
+    /* [out] */ rpc_thread_pool_handle_t *phandle,
+    /* [out] */ unsigned32 *status
+)
+{
+    unsigned32			st;
+
+    *phandle = NULL;	/* default pool */
+    *status = rpc_s_ok;
+
+    if (bootstrap) {
+	/* If bootstrap, disable rdacl_replace() */
+	if ((uuid_equal(&if_id->uuid,
+			&((rpc_if_rep_p_t)rdaclif_v1_0_s_ifspec)->id,
+			&st)
+	     || uuid_equal(&if_id->uuid,
+			   &((rpc_if_rep_p_t)rdaclif_v0_0_s_ifspec)->id,
+			   &st))
+	    && opnum == 1) {
+	    *status = -1;
+	    return;
+	}
+
+	/* If bootstrap, disable rs_attr_schema_create/delete/update_entry() */
+	if (uuid_equal(&if_id->uuid,
+		       &((rpc_if_rep_p_t)rs_attr_schema_v0_0_s_ifspec)->id,
+		       &st)
+	    && opnum <= 2) {
+	    *status = -1;
+	    return;
+	}
+    }
+}
+#endif	/* HPDCE_DCED_FIX_OT12494 */

The bottom line is that no vendor should release dced without closing ACLs.
(It was really a bad decision for OSF to release the broken dced.) We are
hoping that every vendor adapts for the "subsys/dce/dced-admin" group so
that the config tools work across all platforms.

[05/25/95 public]
disabling the replace ops was a cute hack.
I like the dced-admin group.
>It was really a bad decision for OSF to release the broken dced.
The alternative (no dced) was worse.

[8/21/95 public]

Showstopper. Don't sell dced without fixing ACL problems and/or turning off
rkeytab/hostdata/srvrconf services. :-) Also note that diffs in above
comments are incomplete (still leave some holes).

[12/15/95 public]
Fixed in DCE 1.2.1
Closed

[12/19/95 public]

This was a showstopper for 1.1; we NEED patches against the 1.1 sources
to fix this for products based on 1.1.  Note that the diffs in this OT
still leave some holes.  Reopened.

[2/8/96 public]
This is the fix that went into DCE1.1-maint. Many thanks to Seiichi
Tatsukawa, Marc Levy, Ron Monzillo, Rich Salz and Weidong Wang for
explanations and help.

Fix summary:
The fix tightens up the ACLs and plugs the small initialization hole, but it
does not attempt to deal with the problem of a malicious cell_admin.

Modify dce_config to create the dced-admin group and add cell_admin to it.

When dced comes up, it patches up the ACLs of its objects, giving the
machine principal (and optionally to the dced-admin group) rights, but
restricting severely (and in some cases, eliminating) unauthenticated
and any_other rights. A -g option is added to make dced add ACLs for
the dced-admin group. This flag can be set interactively through
dce_config or by setting the DCED_ADMIN variable in the dce_com_env
file. Because of a bug in the ACL library, invoking dced -g again will
add duplicate ACL entries. Until that bug is fixed, invoking dced with
-g again should be avoided.

Move the service registration code from the main thread to the
bootstrap management thread, leaving only endpoint service to be
registered in the main thread. This eliminates a small security
hole. It also makes all the dced services (except endpoint resolution)
unavailable until secd starts. The patching of ACLs for dced-admin is
also done here. This removes an asymmetry between the initial machine
to be configured into the DCE cell and all the others.

Note that when a cell is configured initially, the group does not
exist and dced does not (cannot) wait for it to be created. In
particular, cell_admin may not have the right to stop and restart the
secval service. Modify dce_config so that stopping and starting the
secval service is done as the machine principal, not as cell_admin.

For an existing cell, the ACLs on the existing dced objects will have
to be modified by hand.  The following scripts will change ACLs so that
they are compatible with the modifications described here and with DCE
1.2.1 (including the dced-admin group):

1) As cell_admin, execute the following dcecp commands:

group create subsys/dce/dced-admin -inprojlist yes
group add subsys/dce/dced-admin -member cell_admin

2) Unauthenticated, run the following script:

# _c is not set when running unauthenticated
set cell [string trim [name parse ""]]
foreach host [host catalog] {
	set self_princ [string trim $host $cell/]/self

	echo fix up the ACLs on all the hostdata objects
	foreach datum [hostdata catalog $host] {
		echo $datum
		set selfperms "cdprw"
		set dcedperms "dprw"
		if { [string compare $datum $host/config/hostdata/post_processors] == 0 } {
			set selfperms "pr"
			set dcedperms "pr"
		} elseif {[string compare $datum $host/config/hostdata/cell_aliases] == 0} {
			set selfperms "dprw"
			set dcedperms "dprw"
		}
		echo user
		acl modify $datum -add "user $self_princ $selfperms"
		echo group
		acl modify $datum -add "group subsys/dce/dced-admin $dcedperms"
		echo any_other unauth
		acl modify $datum -change {{any_other r} {unauthenticated r}}
	}

	echo fix up the ACLS on all the server objects 
	foreach server [server catalog $host] {
		acl modify $server -add "user $self_princ -d-rwx"
		acl modify $server -add {group subsys/dce/dced-admin -d-rwx}
		acl modify $server -change {{any_other r} {unauthenticated r}}
	}

	echo add host principal and dced-admin group to all of the container objects
	acl modify $host/config -add "user $self_princ crws"
	acl modify $host/config -add {group subsys/dce/dced-admin crws}
	acl modify $host/config/hostdata -add "user $self_princ ri"
	acl modify $host/config/hostdata -add {group subsys/dce/dced-admin ri}
	acl modify $host/config/keytab -add "user $self_princ criI"
	acl modify $host/config/keytab -add {group subsys/dce/dced-admin criI}
	acl modify $host/config/srvrconf -add "user $self_princ ri"
	acl modify $host/config/srvrconf -add {group subsys/dce/dced-admin ri}
	acl modify $host/config/srvrexec -add "user $self_princ ri"
	acl modify $host/config/srvrexec -add {group subsys/dce/dced-admin ri}
	acl modify $host/config/xattrschema -add "user $self_princ criI"
	acl modify $host/config/xattrschema -add {group subsys/dce/dced-admin -riI}

	echo set up the initial object ACLs on all of the container objects
	acl modify $host/config/hostdata -add "user $self_princ cdprw" -io
	acl modify $host/config/hostdata -add {group subsys/dce/dced-admin dprw} -io
	acl modify $host/config/keytab   -add "user $self_princ acdepr" -io
	acl modify $host/config/keytab   -add {group subsys/dce/dced-admin acdepr} -io
	acl modify $host/config/srvrconf -add "user $self_princ drwx" -io
	acl modify $host/config/srvrconf -add {group subsys/dce/dced-admin drwx} -io
	acl modify $host/config/srvrexec -add "user $self_princ crws" -io
	acl modify $host/config/srvrexec -add {group subsys/dce/dced-admin rws} -io
	acl modify $host/config/xattrschema -add "user $self_princ crwd" -io
	acl modify $host/config/xattrschema -add {group subsys/dce/dced-admin -rwd} -io

	echo there are no canned xattrschema objects in 1.1

	echo fix up the secval object
	acl modify $host/config/secval -add "user $self_princ csux"
	acl modify $host/config/secval -add {group subsys/dce/dced-admin sux}
	acl modify $host/config/secval -change {{any_other x} {unauthenticated x}}

	echo take away unauthenticated and any_other rights from all the container objects
	foreach dir {config/hostdata config/srvrconf config/srvrexec config/xattrschema} {
		echo $dir
		acl modify $host/$dir -change {{any_other r} {unauthenticated r}} -io
		acl modify $host/$dir -change {{any_other r} {unauthenticated r}}
	}
	acl modify $host/config -change {{any_other r} {unauthenticated r}}

}

3) Finally, as cell_admin, run the following script:

foreach host [host cat] {
	set self_princ [string trim $host $_c]/self

	foreach datum [keytab catalog $host] {
		echo $datum	
		acl modify $datum -add "user $self_princ acdepr"
		acl modify $datum -add {group subsys/dce/dced-admin acdepr}
		acl modify $datum -change {{any_other -} {unauthenticated -}}
		acl modify $datum -change {group subsys/dce/dced-admin adepr}
	}
	acl modify $host/config/keytab -change {{any_other -} {unauthenticated -}}
	acl modify $host/config/keytab -change {{any_other -} {unauthenticated -}} -io
	acl modify $host/config/keytab -change {group subsys/dce/dced-admin adepr} -io
	acl modify $host/config/keytab -change {group subsys/dce/dced-admin -riI}
	acl modify $host/config -remove {group subsys/dce/dced-admin}
}


In any case, the final ACLs should appear as is shown below (assuming
the dced-admin group is used). This is straight dcecp output with
MACHINE standing as a generic host name - the list should look like
this for EVERY host in the cell:

dcecp> acl show /.:/$_h/config
	{unauthenticated -r--}
	{user hosts/MACHINE/self crws}
	{any_other -r--}

dcecp> acl show /.:/$_h/config/hostdata
	{unauthenticated -r--}
	{user hosts/alphaville/self -ri-}
	{group subsys/dce/dced-admin -ri-}
	{any_other -r--}

dcecp> acl show /.:/$_h/config/hostdata -io
	{unauthenticated ---r-}
	{user hosts/MACHINE/self cdprw}
	{group subsys/dce/dced-admin -dprw}
	{any_other ---r-}
dcecp> acl show /.:/$_h/config/hostdata/dce_cf.db
	{unauthenticated ---r-}
	{user hosts/MACHINE/self cdprw}
	{group subsys/dce/dced-admin -dprw}
	{any_other ---r-}

dcecp> acl show /.:/$_h/config/hostdata/cell_name
	{unauthenticated ---r-}
	{user hosts/MACHINE/self cdprw}
	{group subsys/dce/dced-admin -dprw}
	{any_other ---r-}

dcecp> acl show /.:/$_h/config/hostdata/pe_site
	{unauthenticated ---r-}
	{user hosts/MACHINE/self cdprw}
	{group subsys/dce/dced-admin -dprw}
	{any_other ---r-}

dcecp> acl show /.:/$_h/config/hostdata/host_name
	{unauthenticated ---r-}
	{user hosts/MACHINE/self cdprw}
	{group subsys/dce/dced-admin -dprw}
	{any_other ---r-}

dcecp> acl show /.:/$_h/config/hostdata/cell_aliases
	{unauthenticated ---r-}
	{user hosts/MACHINE/self -dprw}
	{group subsys/dce/dced-admin -dprw}
	{any_other ---r-}

dcecp> acl show /.:/$_h/config/hostdata/post_processors
	{unauthenticated ---r-}
	{user hosts/MACHINE/self --pr-}
	{group subsys/dce/dced-admin --pr-}
	{any_other ---r-}

dcecp> acl show /.:/$_h/config/hostdata/svc_routing
	{unauthenticated ---r-}
	{user hosts/alphaville/self cdprw}
	{group subsys/dce/dced-admin -dprw}
	{any_other ---r-}

dcecp> acl show /.:/$_h/config/keytab
	{user hosts/alphaville/self criI}
	{group subsys/dce/dced-admin -riI}

dcecp> acl show /.:/$_h/config/keytab -io
	{user hosts/MACHINE/self acdepr}
	{group subsys/dce/dced-admin a-depr}

dcecp> acl show /.:/$_h/config/keytab/self
	{user hosts/MACHINE/self acdepr}
	{group subsys/dce/dced-admin a-depr}

dcecp> acl show /.:/$_h/config/srvrconf -io
	{unauthenticated ---r--}
	{user hosts/MACHINE/self -d-rwx}
	{group subsys/dce/dced-admin -d-rwx}
	{any_other ---r--}
dcecp> acl show /.:/$_h/config/srvrconf
	{unauthenticated -r--}
	{user hosts/MACHINE/self -ri-}
	{group subsys/dce/dced-admin -ri-}
	{any_other -r--}

dcecp> acl show /.:/$_h/config/srvrexec -io
	{unauthenticated -r--}
	{user hosts/MACHINE/self crws}
	{group subsys/dce/dced-admin -rws}
	{any_other -r--}
dcecp> acl show /.:/$_h/config/srvrexec
	{unauthenticated -r--}
	{user hosts/MACHINE/self -ri-}
	{group subsys/dce/dced-admin -ri-}
	{any_other -r--}

dcecp> acl show /.:/$_h/config/secval
	{unauthenticated ---x}
	{user hosts/MACHINE/self csux}
	{group subsys/dce/dced-admin -sux}
	{any_other ---x}

dcecp> acl show /.:/$_h/config/xattrschema
	{unauthenticated -r--}
	{user hosts/MACHINE/self criI}
	{group subsys/dce/dced-admin -riI}
	{any_other -r--}
dcecp> acl show /.:/$_h/config/xattrschema -io
	{unauthenticated -r--}
	{user hosts/MACHINE/self crwd}
	{group subsys/dce/dced-admin -rwd}
	{any_other -r--}


Files modified:	admin/dced/server/main.c
		admin/dced/server/acls.c
		admin/dced/server/dcedimpl.h
		admin/dced/server/acldefs.h
		admin/dced/idl/dhd.sams
		config/dce_config
		config/dce_com_env
		config/dce_config_env

How tested:
1) Configured new cell with two machines and verified ACLs.
2) Ran the scripts above on a DCE1.1 cell and ensured that the ACLs
are identical to case 1) above.


Platforms:	AIX 3.2.5

Tested against:	1.1-maint tree

How to verify:	Check the ACLs as discussed in the description above.

Diff:		
./config/dce_config
Comparing the file in your sandbox with revision 1.2.63.5.
*** 1.2.63.5	1996/01/22 21:45:21
--- /u0/rcs_trees/dce/rcs/#odexm017693/dce_config	1996/02/02 17:21:54
***************
*** 8,17 ****
  #
  # HISTORY 
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
  # Revision 1.2.63.5  1996/01/22  21:45:21  jcarroll
  # 	OT 12810:  Fix for grep not looking for itself when processing ps output
  # 	[1996/01/22  21:43:31  jcarroll]
! #
  # Revision 1.2.63.4  1996/01/22  21:00:06  jcarroll
  # 	OT 12901:  Update to fix to allow default CDS_DirectoryVersion to be set via a configuration file or an environment variable
  # 	[1996/01/22  20:58:19  jcarroll]
--- 8,33 ----
  #
  # HISTORY 
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
+ # Revision 1.2.67.2  1996/02/02  17:14:41  nick
+ # 	OT 12494 - forgot to delete a debugging "echo"
+ 
+ #
+ # Revision 1.2.63.7  1996/02/02  17:11:38  nick
+ # 	OT 12494 - clarify the explanation for the dced-admin group
+ # 	Add variable DCED_ADMIN and default setting for non-interactive run of dce_config.
+ # 	[1996/02/02  17:08:12  nick]
+ # 
+ # 	OT 12494 - fixed up description of dced-admin group
+ # 	[1996/02/01  13:53:07  nick]
+ # 
+ # Revision 1.2.63.6  1996/02/01  12:13:26  nick
+ # 	OT#12494 - Tighten up dced ACLs and (optionally) use dced-admin group
+ # 	[1996/02/01  05:23:57  nick]
+ # 
  # Revision 1.2.63.5  1996/01/22  21:45:21  jcarroll
  # 	OT 12810:  Fix for grep not looking for itself when processing ps output
  # 	[1996/01/22  21:43:31  jcarroll]
! # 
  # Revision 1.2.63.4  1996/01/22  21:00:06  jcarroll
  # 	OT 12901:  Update to fix to allow default CDS_DirectoryVersion to be set via a configuration file or an environment variable
  # 	[1996/01/22  20:58:19  jcarroll]
***************
*** 635,645 ****
  then
  	ETC="."
  else
! 	ETC="/etc"
  fi
  
  export ETC
! 	
  # DEBUG?
  D=$1
  export D
--- 651,661 ----
  then
  	ETC="."
  else
! 	ETC="${ETC:=/etc}"
  fi
  
  export ETC
! 
  # DEBUG?
  D=$1
  export D
***************
*** 658,664 ****
  fi
  
  echo "*****************************************************************" >>$logfile
! echo "dce_config V$Revision: 1.19 $($Date: 96/02/21 09:37:09 $) executed: `date`" >>$logfile 
  echo "*****************************************************************" >>$logfile
  
  # Report the values of the environment variables to the config log file
--- 674,680 ----
  fi
  
  echo "*****************************************************************" >>$logfile
! echo "dce_config V$Revision: 1.19 $($Date: 96/02/21 09:37:09 $) executed: `date`" >>$logfile 
  echo "*****************************************************************" >>$logfile
  
  # Report the values of the environment variables to the config log file
***************
*** 3541,3549 ****
--- 3557,3573 ----
    # Activate won't return until creds exist.
    dced_binding=`head -1 $binding_file`
    cmd="dcecp -c secval activate {$dced_binding}"
+   saved_krb5ccname=$KRB5CCNAME
+   unset KRB5CCNAME
    log_msg DETAIL "Executing: $cmd"
    secval_status=`$cmd`
    rtn_status=$?
+   if [ "$saved_krb5ccname"xx != "xx" ]
+   then
+     KRB5CCNAME=$saved_krb5ccname
+     export KRB5CCNAME
+   fi
+   unset saved_krb5ccname
    if [ $rtn_status -ne 0 ] 
    then
      echo "$cmd FAILS: $secval_status"
***************
*** 3578,3586 ****
--- 3602,3618 ----
    binding_file="$DCELOCAL/var/security/sec_clientd.binding"	
    dced_binding=`head -1 $binding_file`
    cmd="dcecp -c secval deactivate {$dced_binding}"
+   saved_krb5ccname=$KRB5CCNAME
+   unset KRB5CCNAME
    log_msg DETAIL "Executing: $cmd"
    secval_status=`$cmd`
    rtn_status=$?
+   if [ "$saved_krb5ccname" != "" ]
+   then
+     KRB5CCNAME=$saved_krb5ccname
+     export KRB5CCNAME
+   fi
+   unset saved_krb5ccname
    if [ $rtn_status -ne 0 ] 
    then
      echo "$cmd FAILS: $secval_status"
***************
*** 3780,3786 ****
  			)
  		fi
  
! 		dced_cmd="dced ${dced_s}b"
  		log_msg DETAIL "Executing: $dced_cmd || { err_exit \"$dced_cmd failed to start.\"; }"
  		(
  		cd $DCELOCAL/var/dced;
--- 3812,3842 ----
  			)
  		fi
  
! 		if [ "$do_checks" = "y" ]; then
! 			log_msg WARNING "
! 
! The ACLs protecting dced objects can be restricted to the local host
! principal by answering 'no' to the following question. Otherwise, the
! admin group dced-admin will be given permission to access and modify
! the local dced's objects as well. The implication is that a privileged
! network user (e.g. cell_admin) will be allowed local privileged access
! to the machine. If that is acceptable, answer 'yes' to the following
! question.  Answering 'no' provides more security but severely restricts
! remote dced management capabilities.
! 
! "
! 			echon "Enable dced-admin group ACLs on dced objects?($DCED_ADMIN) "
! 			get_string
! 		fi
! 		answer=${string:-"$DCED_ADMIN"}
! 		log_msg VERBOSE "User entry: $answer"
! 		case $answer in
! 			y)  dced_g=g;;
! 			yes) dced_g=g;;
! 			*)  dced_g=;;
! 		esac
! 		
! 		dced_cmd="dced ${dced_s}${dced_g}b"
  		log_msg DETAIL "Executing: $dced_cmd || { err_exit \"$dced_cmd failed to start.\"; }"
  		(
  		cd $DCELOCAL/var/dced;
***************
*** 4332,4342 ****
--- 4388,4400 ----
  	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/cds-server"
  	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/dts-servers"
  	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/audit-admin"
+ 	log_msg DETAIL "Executing: rgy_edit> add $SUBSYSDIR/dced-admin"
  	log_msg DETAIL "Executing: rgy_edit> member acct-admin -a $CELLADMIN"
  	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/sec-admin -a $CELLADMIN"
  	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/cds-admin -a $CELLADMIN"
  	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/dts-admin -a $CELLADMIN"
  	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/audit-admin -a $CELLADMIN"
+ 	log_msg DETAIL "Executing: rgy_edit> member $SUBSYSDIR/dced-admin -a $CELLADMIN"
  	log_msg DETAIL "Executing: rgy_edit> quit"
  	rgy_edit -update >>/tmp/rgy_edit_out$$ 2>&1 <<EOF
  domain group
***************
*** 4347,4357 ****
--- 4405,4417 ----
  add $SUBSYSDIR/cds-server
  add $SUBSYSDIR/dts-servers
  add $SUBSYSDIR/audit-admin
+ add $SUBSYSDIR/dced-admin
  member acct-admin -a $CELLADMIN
  member $SUBSYSDIR/sec-admin -a $CELLADMIN
  member $SUBSYSDIR/cds-admin -a $CELLADMIN
  member $SUBSYSDIR/dts-admin -a $CELLADMIN
  member $SUBSYSDIR/audit-admin -a $CELLADMIN
+ member $SUBSYSDIR/dced-admin -a $CELLADMIN
  quit
  EOF
  	rgy_edit_status=$?
./config/dce_com_env
Comparing the file in your sandbox with revision 1.1.13.7.
*** 1.1.13.7	1994/08/10 20:46:53
--- /u0/rcs_trees/dce/rcs/#odexm018034/dce_com_env	1996/02/02 18:14:39
***************
*** 7,16 ****
  #
  # HISTORY 
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
  # Revision 1.1.13.7  1994/08/10  20:46:53  mckeen
  # 	Added DFSGW_PORT variable
  # 	[1994/08/10  20:07:08  mckeen]
! #
  # Revision 1.1.13.6  1994/08/08  14:23:08  mdf
  # 	Hewlett Packard Security Code Drop
  # 	[1994/08/04  19:56:07  mdf]
--- 7,21 ----
  #
  # HISTORY 
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
+ # Revision 1.1.18.1  1996/02/02  17:11:34  nick
+ # 	OT 12494 - clarify the explanation for the dced-admin group
+ # 	Add variable DCED_ADMIN and default setting for non-interactive run of dce_config.
+ # 	[1996/02/02  17:08:07  nick]
+ #
  # Revision 1.1.13.7  1994/08/10  20:46:53  mckeen
  # 	Added DFSGW_PORT variable
  # 	[1994/08/10  20:07:08  mckeen]
! # 
  # Revision 1.1.13.6  1994/08/08  14:23:08  mdf
  # 	Hewlett Packard Security Code Drop
  # 	[1994/08/04  19:56:07  mdf]
***************
*** 155,160 ****
--- 160,166 ----
  #------------------------ Assorted Environment Variables ----------------------
  
  : ${EPMAP:=dced}			# use dced not rpcd?
+ : ${DCED_ADMIN:=y}			# use dced-admin group by default
  : ${ETHER_ADDR_FILE:="/etc/ieee_802_addr"}	
  : ${KERB_PORT:=88}			# kerberos port in /etc/services
  : ${DFSGW_PORT:=438}			# dfsgw port in /etc/services
./config/dce_config_env
Comparing the file in your sandbox with revision 1.1.15.1.
*** 1.1.15.1	1996/01/19 21:47:30
--- /u0/rcs_trees/dce/rcs/#odexm018075/dce_config_env	1996/02/02 18:15:37
***************
*** 7,16 ****
  #
  # HISTORY 
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
  # Revision 1.1.15.1  1996/01/19  21:47:30  jcarroll
  # 	OT 12901:  Update to fix to allow default CDS_DirectoryVersion to be set via a configuration file or an environment variable
  # 	[1996/01/19  17:10:25  jcarroll]
! #
  # Revision 1.1.11.6  1994/08/29  19:45:15  baum
  # 	dced is default
  # 	[1994/08/29  19:44:58  baum]
--- 7,21 ----
  #
  # HISTORY 
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
+ # Revision 1.1.15.2  1996/02/02  17:11:52  nick
+ # 	OT 12494 - clarify the explanation for the dced-admin group
+ # 	Add variable DCED_ADMIN and default setting for non-interactive run of dce_config.
+ # 	[1996/02/02  17:08:29  nick]
+ #
  # Revision 1.1.15.1  1996/01/19  21:47:30  jcarroll
  # 	OT 12901:  Update to fix to allow default CDS_DirectoryVersion to be set via a configuration file or an environment variable
  # 	[1996/01/19  17:10:25  jcarroll]
! # 
  # Revision 1.1.11.6  1994/08/29  19:45:15  baum
  # 	dced is default
  # 	[1994/08/29  19:44:58  baum]
***************
*** 129,135 ****
  	SYNC_CLOCKS 		HPDCE_DEBUG 	FILESYSTEM
  	MEDIA			DTS_CONFIG 	CP_OR_SYMLINK
  	USE_DEF_MSG_PATH	SEC_REPLICA	DIR_REPLICATE
!  	EPMAP			SEC_CLIENT	TIME_SERVER"
  
  
  # These are password variables that shouldn't be printed out
--- 134,141 ----
  	SYNC_CLOCKS 		HPDCE_DEBUG 	FILESYSTEM
  	MEDIA			DTS_CONFIG 	CP_OR_SYMLINK
  	USE_DEF_MSG_PATH	SEC_REPLICA	DIR_REPLICATE
!  	EPMAP			SEC_CLIENT	TIME_SERVER
! 	DCED_ADMIN"
  
  
  # These are password variables that shouldn't be printed out
***************
*** 225,230 ****
--- 231,239 ----
  export sec_client_service
  # SEC_CLIENT: should be "dced" or "sec_clientd", depending on which 
  #	sec client service you want to use.  Default is dced.
+ 
+ export DCED_ADMIN
+ # Use dced-admin group? Default is yes.
  
  export HOST_NAME_IP
  # HOSTNAME_IP: IP address of $HOSTNAME (used as default for "ip" in

./admin/dced/idl/dhd.sams
Comparing the file in your sandbox with revision 1.1.2.38.
*** 1.1.2.38	1994/10/17 19:31:02
--- /u0/rcs_trees/dce/rcs/#odexm018625/dhd.sams	1996/02/02 18:43:39
***************
*** 5,14 ****
  #
  # HISTORY
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
  # Revision 1.1.2.38  1994/10/17  19:31:02  sommerfeld
  # 	OT11548: fix hole in local preauth protocol
  # 	[1994/10/17  19:28:28  sommerfeld]
! #
  # Revision 1.1.2.37  1994/10/03  19:58:38  rsalz
  # 	Add dced_s_sx_kill_failed message (OT CR 11725).
  # 	[1994/10/03  19:56:25  rsalz]
--- 5,18 ----
  #
  # HISTORY
  # $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
+ # Revision 1.1.6.1  1996/02/01  12:13:42  nick
+ # 	OT#12494 - Tighten up dced ACLs and (optionally) use dced-admin group
+ # 	[1996/02/01  05:26:35  nick]
+ #
  # Revision 1.1.2.38  1994/10/17  19:31:02  sommerfeld
  # 	OT11548: fix hole in local preauth protocol
  # 	[1994/10/17  19:28:28  sommerfeld]
! # 
  # Revision 1.1.2.37  1994/10/03  19:58:38  rsalz
  # 	Add dced_s_sx_kill_failed message (OT CR 11725).
  # 	[1994/10/03  19:56:25  rsalz]
***************
*** 391,397 ****
  
  start		undocumented intable incatalog
  code		dced_s_usage
! text		"Usage: dced [-idfh] [-w route] [-b|-p] [-e|prot_seq...]\n"
  end
  
  start
--- 395,401 ----
  
  start		undocumented intable incatalog
  code		dced_s_usage
! text		"Usage: dced [-idfgh] [-w route] [-b|-p] [-e|prot_seq...]\n"
  end
  
  start

./admin/dced/server/dcedimpl.h
Comparing the file in your sandbox with revision 1.1.6.1.
*** 1.1.6.1	1995/02/16 21:59:47
--- /u0/rcs_trees/dce/rcs/#odexm018400/dcedimpl.h	1996/02/02 18:21:12
***************
*** 7,16 ****
  /*
   * HISTORY
   * $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
   * Revision 1.1.6.1  1995/02/16  21:59:47  levy
   * 	Submission of 1.1 unintegrated.
   * 	[1995/02/16  20:39:49  levy]
!  *
   * Revision 1.1.4.1  1994/10/26  19:54:35  rsalz
   * 	Add EPmap convenience abstractions (needed to fix OT CR 12061).
   * 	[1994/10/26  19:42:57  rsalz]
--- 7,20 ----
  /*
   * HISTORY
   * $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
+  * Revision 1.1.6.2  1996/02/01  12:13:47  nick
+  * 	OT#12494 - Tighten up dced ACLs and (optionally) use dced-admin group
+  * 	[1996/02/01  05:28:47  nick]
+  *
   * Revision 1.1.6.1  1995/02/16  21:59:47  levy
   * 	Submission of 1.1 unintegrated.
   * 	[1995/02/16  20:39:49  levy]
!  * 
   * Revision 1.1.4.1  1994/10/26  19:54:35  rsalz
   * 	Add EPmap convenience abstractions (needed to fix OT CR 12061).
   * 	[1994/10/26  19:42:57  rsalz]
***************
*** 273,278 ****
--- 277,283 ----
  EXTERN boolean		debug;
  EXTERN boolean		initialize_databases;
  EXTERN boolean		bootstrap;
+ EXTERN boolean		do_admin_group;
  EXTERN boolean		do_secval;
  EXTERN boolean		privacy_required;
  
***************
*** 287,292 ****
--- 292,303 ----
  EXTERN dced_string_list_t	environ_string_list;
  EXTERN pthread_attr_t	thread_attr;		/* For threads we create */
  
+ EXTERN hostdata_v1_0_epv_t		dced_hostdata_v1_0_epv;
+ EXTERN rkeytab_v1_0_epv_t		dced_rkeytab_v1_0_epv;
+ EXTERN rs_attr_schema_v0_0_epv_t	dced_rs_attr_schema_v0_0_epv;
+ EXTERN srvrconf_v1_0_epv_t		dced_srvrconf_v1_0_epv;
+ EXTERN srvrexec_v1_0_epv_t		dced_srvrexec_v1_0_epv;
+ 
  EXTERN name_cache_t	hd_name_cache;
  EXTERN name_cache_t	km_name_cache;
  EXTERN name_cache_t	as_name_cache;
***************
*** 322,328 ****
  
  /* simple function prototypes */
  int		main(int, char**);
! void		acl_patcher(error_status_t *);
  void		dced_ept_init(error_status_t*);
  void		dced_fork(char**, pid_t*, error_status_t*);
  void		dced_sleep(time_t);
--- 333,339 ----
  
  /* simple function prototypes */
  int		main(int, char**);
! void		acl_patcher(uuid_t *, uuid_t *, error_status_t *);
  void		dced_ept_init(error_status_t*);
  void		dced_fork(char**, pid_t*, error_status_t*);
  void		dced_sleep(time_t);
./admin/dced/server/acldefs.h
Comparing the file in your sandbox with revision 1.1.2.3.
*** 1.1.2.3	1994/03/25 18:49:46
--- /u0/rcs_trees/dce/rcs/#odexm018441/acldefs.h	1996/02/02 18:22:11
***************
*** 7,16 ****
  /*
   * HISTORY
   * $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
   * Revision 1.1.2.3  1994/03/25  18:49:46  bowe
   * 	Added uuid_t's for config_type
   * 	[1994/03/25  18:40:06  bowe]
!  *
   * Revision 1.1.2.2  1994/03/18  19:57:16  rsalz
   * 	Put permset bits in dced_aclbits.idl (OT CR 9768)
   * 	[1994/03/18  19:56:08  rsalz]
--- 7,20 ----
  /*
   * HISTORY
   * $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
+  * Revision 1.1.6.1  1996/02/01  12:13:44  nick
+  * 	OT#12494 - Tighten up dced ACLs and (optionally) use dced-admin group
+  * 	[1996/02/01  05:27:41  nick]
+  *
   * Revision 1.1.2.3  1994/03/25  18:49:46  bowe
   * 	Added uuid_t's for config_type
   * 	[1994/03/25  18:40:06  bowe]
!  * 
   * Revision 1.1.2.2  1994/03/18  19:57:16  rsalz
   * 	Put permset bits in dced_aclbits.idl (OT CR 9768)
   * 	[1994/03/18  19:56:08  rsalz]
***************
*** 35,40 ****
--- 39,50 ----
      uuid_t			*cont_type;
      uuid_t			*acl;
      uuid_t			*do_acl;
+     sec_acl_permset_t		self_perms;
+     sec_acl_permset_t		admin_perms;
+     sec_acl_permset_t		other_perms;
+     sec_acl_permset_t		do_self_perms;
+     sec_acl_permset_t		do_admin_perms;
+     sec_acl_permset_t		do_other_perms;
  } manager_list_t;
  
  
./admin/dced/server/main.c
Comparing the file in your sandbox with revision 1.1.6.2.
*** 1.1.6.2	1995/03/28 18:50:23
--- /u0/rcs_trees/dce/rcs/#odexm018452/main.c	1996/02/02 18:22:27
***************
*** 8,19 ****
  /*
   * HISTORY
   * $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
   * Revision 1.1.6.2  1995/03/28  18:50:23  parul
   * 	Fix for OT 12729: an occational hang in dced on SVR4 when
   * 	put in background. Do a fork much before serviceability
   * 	causes initialization of threads.
   * 	[1995/03/28  18:49:49  parul]
!  *
   * Revision 1.1.6.1  1995/02/16  21:59:50  levy
   * 	Submission of 1.1 unintegrated.
   * 	[1995/02/16  20:39:51  levy]
--- 8,23 ----
  /*
   * HISTORY
   * $Log:	c012494,v $
# Revision 1.19  96/02/21  09:37:09  root
# changed fields: Status   new/changed/deleted note(s) [dlynch 2/21/96 ]
# 
# Revision 1.18  96/02/08  09:34:58  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [nick 2/8/96 public]
# 
+  * Revision 1.1.6.3  1996/02/01  12:13:48  nick
+  * 	OT#12494 - Tighten up dced ACLs and (optionally) use dced-admin group
+  * 	[1996/02/01  05:33:26  nick]
+  *
   * Revision 1.1.6.2  1995/03/28  18:50:23  parul
   * 	Fix for OT 12729: an occational hang in dced on SVR4 when
   * 	put in background. Do a fork much before serviceability
   * 	causes initialization of threads.
   * 	[1995/03/28  18:49:49  parul]
!  * 
   * Revision 1.1.6.1  1995/02/16  21:59:50  levy
   * 	Submission of 1.1 unintegrated.
   * 	[1995/02/16  20:39:51  levy]
***************
*** 329,336 ****
  	NULL },
      { &roverride_v1_0_s_ifspec, TRUE, FALSE, "Password Override", NULL },
      { &secval_v1_0_s_ifspec, TRUE, FALSE, "Security Validation", NULL },
!     { &hostdata_v1_0_s_ifspec, TRUE, FALSE, "Host Data", NULL },
!     { &rkeytab_v1_0_s_ifspec, TRUE, FALSE, "Remote Keytable", NULL },
      { &rs_attr_schema_v0_0_s_ifspec, FALSE,TRUE, "Extended Attribute Schema",
  	NULL },
      { &srvrconf_v1_0_s_ifspec, TRUE, FALSE, "Server Configuration", NULL },
--- 333,342 ----
  	NULL },
      { &roverride_v1_0_s_ifspec, TRUE, FALSE, "Password Override", NULL },
      { &secval_v1_0_s_ifspec, TRUE, FALSE, "Security Validation", NULL },
!     { &hostdata_v1_0_s_ifspec, TRUE, FALSE, "Host Data",
!       (rpc_mgr_epv_t)&dced_hostdata_v1_0_epv },
!     { &rkeytab_v1_0_s_ifspec, TRUE, FALSE, "Remote Keytable",
!       (rpc_mgr_epv_t)&dced_rkeytab_v1_0_epv },
      { &rs_attr_schema_v0_0_s_ifspec, FALSE,TRUE, "Extended Attribute Schema",
  	NULL },
      { &srvrconf_v1_0_s_ifspec, TRUE, FALSE, "Server Configuration", NULL },
***************
*** 365,370 ****
--- 371,378 ----
  
  static void
  dced_wait_for_sec(
+     uuid_t			*admin_uuid,
+     uuid_t			*admin_group_uuid,
      error_status_t		*st
  )
  {
***************
*** 372,381 ****
      sec_rgy_handle_t		rh;
      sec_rgy_name_t		prin_in_rgy;
      void			*key;
  
      /* Initialize */
!     uuid_create_nil(&thishost_prin_uuid, st);
!     uuid_create_nil(&this_cell_uuid, st);
  
      /* Wait for secd to show up */
      for ( ; ; ) {
--- 380,394 ----
      sec_rgy_handle_t		rh;
      sec_rgy_name_t		prin_in_rgy;
      void			*key;
+     error_status_t		st2;
  
      /* Initialize */
!     if (admin_uuid != NULL)
! 	uuid_create_nil(admin_uuid, &st2);
!     if (admin_group_uuid != NULL)
! 	uuid_create_nil(admin_group_uuid, &st2);
! 
!     auth.info_type = sec_rgy_bind_auth_none;
  
      /* Wait for secd to show up */
      for ( ; ; ) {
***************
*** 389,397 ****
  
      /* Wait for HOST/self principal to be available. */
      for ( ; ; ) {
! 	strcpy((char *)prin_in_rgy, thishost_prin);
! 	sec_rgy_pgo_name_to_id(rh, sec_rgy_domain_person, prin_in_rgy,
! 		&thishost_prin_uuid, st);
  	if (*st == error_status_ok)
  	    break;
  	dce_svc_printf(DCED_S_WAITING_FOR_SOMETHING_MSG, "machine principal");
--- 402,411 ----
  
      /* Wait for HOST/self principal to be available. */
      for ( ; ; ) {
! 	sec_id_parse_name (rh,
! 	    (unsigned_char_p_t)thishost_prin, NULL,
! 	    &this_cell_uuid, NULL,
! 	    &th[dlynch 2/21/96]

Since this fix is now available in 1.1maint, I'm changing the status once again
to closed.



CR Number                     : 12485
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : HYP: pthread_create not using thread_attr for pthread_create
Reported Date                 : 10/4/94
Found in Baseline             : 1.1
Found Date                    : 10/4/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : admin/dced/server/{lbops.c,oeops.c}
Sensitivity                   : public

[10/4/94 public]

Two pthread_create calls in oeops.c are using pthread_attr_default
for the thread attribute parameter.  They should be using the
variable thread_attr.

[10/4/94 public]

On hypercritical list per conversation w/ Rich Salz.
Please get this in today.  Thanks.

[10/04/94 public]
Fix submitted "today."  You're welcome. :-)
Note that Andy missed the same bug in lbops.c.



CR Number                     : 12477
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : FVT
Short Description             : object_read_2 fails due to use
of wrong UUID
Reported Date                 : 10/3/94
Found in Baseline             : 1.1b20
Found Date                    : 10/3/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : object_read.c
Sensitivity                   : public

[10/3/94 public]
object_read_2 FVT is failing.

[10/3/94 public]
Fix submitted.

[10/3/94 public]

belated note that this is a hypercritical.



CR Number                     : 12467
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hostdata
Short Description             : hostdata create failed to create a binary object.
Reported Date                 : 10/3/94
Found in Baseline             : 1.1
Found Date                    : 10/3/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : server/hdops.c
Sensitivity                   : public

[10/3/94 public]
In dced_server/hdops.c the flag passed to open() is wrong.

[10/3/94 public]
Submitted.



CR Number                     : 12437
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : xattr
Short Description             : Incorrect error message
Reported Date                 : 9/30/94
Found in Baseline             : 1.1b20
Found Date                    : 9/30/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : dhd.sams
Sensitivity                   : public

[9/30/94 public]

The error message given when this command
is used is confusing...

dcecp> xattrschema create /.:/hosts/oddball/config/xattrschema/blech
   -encoding integer -aclmgr {srvrconf t t t t}
Error: Invalid for this acl manager type specified

[9/30/94 public]
Now it's "Error: Invalid permission set specified".
Submitted.



CR Number                     : 12436
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : FVT
Short Description             : HYP: Defunct tests from ./test/admin/dced/*
Reported Date                 : 9/30/94
Found in Baseline             : 1.1b20
Found Date                    : 9/30/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : test/admin/dced/*
Sensitivity                   : public

[9/30/94 public]

Howard has moved the dced tests to the correct location.  The old ones
should be defuncted.

[10/3/94 public]
Tests have been defuncted.  Assigning to my good friend and colleague Sally to 
remove directories.....

./test/admin
./test/admin/dced
./test/admin/dced/ts
./test/admin/dced/ts/api

[10/3/94 public]
Designated as being on hypercritical list.  Should be done 10/3.



CR Number                     : 12393
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced functional test failures
Reported Date                 : 9/28/94
Found in Baseline             : 1.1
Found Date                    : 9/28/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : Several
Sensitivity                   : public

[9/28/94 public]

common test failures

520|0 2 23421 1 1|dced_inq_id_2, Assertion 02(A):
520|0 2 23421 1 2|When a srvrexec dced binding handle is supplied to
520|0 2 23421 1 3|dced_inq_id along with the srvrexec entry name,
520|0 2 23421 1 4|the entry id and the status error_status_ok is returned.
220|0 2 1 15:22:00|FAIL

...

520|1 2 23422 1 1|dced_inq_name_2, Assertion 02(A):
520|1 2 23422 1 2|When a srvrexec dced binding handle is supplied to
520|1 2 23422 1 3|dced_inq_name along with the entry id,
520|1 2 23422 1 4|the entry name and the status error_status_ok is returned.
220|1 2 1 15:22:06|FAIL

...

520|2 2 23423 1 1|dced_list_get_2, Assertion 02(A):
520|2 2 23423 1 2|When a srvrexec dced binding handle is supplied to
520|2 2 23423 1 3|dced_list_get, srvrexec entry list is returned.
220|2 2 1 15:22:14|FAIL

...

520|3 2 23424 1 1|dced_list_release_2, Assertion 02(A):
520|3 2 23424 1 2|When a srvrexec dced binding handle is supplied to
520|3 2 23424 1 3|dced_list_release along with the srvrexec entry list,
520|3 2 23424 1 4|the entry list is freed.
220|3 2 1 15:22:22|FAIL

...

520|4 2 23425 1 1|dced_entry_get_next_2, Assertion 02(A):
520|4 2 23425 1 2|When a srvrexec dced binding handle is supplied to
520|4 2 23425 1 3|dced_entry_get_next, srvrexec entry list is returned.
220|4 2 1 15:22:30|FAIL

...

520|7 2 23428 1 1|dced_object_read_2, Assertion 02(A):
520|7 2 23428 1 2|When srvrexec dced binding handle is supplied to
520|7 2 23428 1 3|dced_object_read along with the object uuid
520|7 2 23428 1 4|the associated object (server_t) is returned.
220|7 2 1 15:22:52|FAIL

...

520|9 2 23430 1 1|dced_object_read_all_2, Assertion 02(A):
520|9 2 23430 1 2|When srvrexec dced binding handle is supplied to
520|9 2 23430 1 3|dced_object_read_all, a list of objects (server_t)
520|9 2 23430 1 4|is returned along with a count of the objects.
220|9 2 1 15:23:10|FAIL


srvrexec test failures

520|0 1 23463 1 1|dced_server_start_1, Assertion 01(A):
520|0 1 23463 1 2|When a srvrconf dced binding handle is supplied to
520|0 1 23463 1 3|dced_server_start along with the server object,
520|0 1 23463 1 4|the server is started and the status is set to error_status_o
k.
520|0 1 23463 1 5|server name : dced_test_server
520|0 1 23463 1 6|server uuid  = "045152aa-d4b9-11cd-b532-10005a4f33bf"
520|0 1 23463 1 7|services count: 1
520|0 1 23463 1 8|server if uuid (ip) = "002d2117-7062-1dd2-a9bb-0000c03cd04c"
520|0 1 23463 1 9|interface name: dced_test_server
520|0 1 23463 1 10|entry name: /.:/hosts/yale/dced_test_server
520|0 1 23463 1 11|objects count: 1
520|0 1 23463 1 12|object uuid = "60cc7b6a-9e48-11cd-a5d7-0000c03cd04c"
520|0 1 23463 1 13|program name: /ufs/test/tet/functional/admin/dced/ts/api/dce
d_test_server
520|0 1 23463 1 14|arguments count: 2
520|0 1 23463 1 15|value[1]: /.:/hosts/yale/dced_test_server
520|0 1 23463 1 16|value[2]: ncadg_ip_udp
520|0 1 23463 1 17|principal count: 1
520|0 1 23463 1 18|principals name : /.../doyen/dced_test_srvr_1
220|0 1 1 15:25:39|FAIL

[9/30/94 public]
Fix submitted.



CR Number                     : 12384
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : HYP: dced crashed after 3 hours running dcdrel001
Reported Date                 : 9/28/94
Found in Baseline             : 1.1b19
Found Date                    : 9/28/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b20
Affected File(s)              : admin/dced/server/oeops.c
Sensitivity                   : public

[9/28/94 public]

I setup an overnight run of dcdrel001 using dg-only protocol to
obtain information regarding recent communication failures. The
test configuration included an HP running core services, and 2 
OSF clients. The test servers and clients were restricted to 
using datagram by setting RPC_SUPPORTED_PROTSEQS. 

After 3 hours 20 minutes dced seg faulted on the HP core server
machine. The core is available for perusal. Top of traceback was:

 0 memcpy@libc + 0x00000008 (hp-ux export stub)
 1 rpc__naf_tower_flrs_to_addr@li + 0x00000050 (0x4, 0x400f7560, 0x400f74ac,
0x40453610)
 2 rpc_tower_to_binding@libdce + 0x00000088 (0x4, 0x400f74e0, 0x400f74ac, 0)
 3 ping_server (ep = 0x40454040, timeout = 3, status = 0x400f74ac)
[355]
 4 ep_sliv_task1 (arg = 0x40015040)
[415]
 5 cma__thread_base@libdce + 0x0000021c (0x40025f38, 0, 0, 0)
 6 cma__thread_start1@libdce + 0x0000004c (0x40025f38, 0, 0, 0)
 7 cma__thread_start0@libdce + 0x00000008 (0x40025f38, 0, 0, 0)
 8 cma__thread_start0@libdce + 0x00000008 (0x40025f38, 0, 0, 0)
 9 cma__thread_start0@libdce + 0x00000008 (0x40025f38, 0, 0, 0)
10 cma__thread_start0@libdce + 0x00000008 (0x40025f38, 0, 0, 0)
11 cma__thread_start0@libdce + 0x00000008 (0x40025f38, 0, 0, 0)
12 cma__thread_start0@libdce + 0x00000008 (0x40025f38, 0, 0, 0)
13 cma__thread_start0@libdce + 0x00000008 (0x40025f38, 0, 0, 0)

It appears that the rest of the stack contains more identical cma__thread_start0
entries.

[09/30/94 public]
I believe I have submitted a fix to this.  I did it last night, but
nobody say -- mail glitch?  I didn't change the status of this OT to fix
since I'm not positive.  Please try again.

[09/30/94 public]
I loaded the nightly build (which became bl20, I believe) yesterday 
onto a three node cell (2HP,1OSF) and ran a 24-hour test with dcdrel001,
using CN only (to concurrently check on previously reported communications
failures). No comm failures were reported. dced crashed on the core server
(HP) after 21 hours. 

Here's the traceback from the core dump. Looks pretty much like the 
previous one.

 0 memcpy@libc + 0x00000008 (hp-ux export stub)
 2 rpc_tower_to_binding@libdce + 0x00000088 (0x4, 0x400f64e0, 0x400f64ac, 0)
 3 ping_server (ep = 0x40764748, timeout = 3, status = 0x400f64ac)
[389]
 4 ep_sliv_task1 (arg = 0x400152a0)
[449]
 5 cma__thread_base@libdce + 0x0000021c (0x40026198, 0, 0, 0)
 6 cma__thread_start1@libdce + 0x0000004c (0x40026198, 0, 0, 0)
 7 cma__thread_start0@libdce + 0x00000008 (0x40026198, 0, 0, 0)
 8 cma__thread_start0@libdce + 0x00000008 (0x40026198, 0, 0, 0)
 9 cma__thread_start0@libdce + 0x00000008 (0x40026198, 0, 0, 0)
10 cma__thread_start0@libdce + 0x00000008 (0x40026198, 0, 0, 0)
11 cma__thread_start0@libdce + 0x00000008 (0x40026198, 0, 0, 0)
12 cma__thread_start0@libdce + 0x00000008 (0x40026198, 0, 0, 0)
13 cma__thread_start0@libdce + 0x00000008 (0x40026198, 0, 0, 0)
etc...

[10/3/94 public]

I ran DCDREL001 over the weekend in a 3 node cell (1H,20) for 48
hours against bl20.1. The cell stayed up the entire time- no crashes
of dced.

[10/3/94 public]

Designated as being on the hypercritical list.  Rich will make changes
to SVC to better diagnose.

[10/04/94 public]
I have added some debugging calls.  I'll get this running on my machines
to see if we can reproduce it.

[10/05/94 public]
Hasn't been reproduced since my fix, marking fixed.
(We'll consider Rick's post-fix "up for 21 hours" an aberration.)

[10/26/94 public]
There are still some problems but they're under another OT. Closing.



CR Number                     : 12381
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server_ebable FVT
Short Description             : Local var. overriding global in server enable/disable tests
Reported Date                 : 9/27/94
Found in Baseline             : 1.1b19
Found Date                    : 9/27/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : server_enable_if.c
Sensitivity                   : public

[9/27/94 public]

Local variable srvr_proc_id overriding initialized global copy, causing
tests to FAIL.

[9/28/94 public]
Fix submitted.



CR Number                     : 12380
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server_enable_if
Short Description             : server enable/disable FVT failing
Reported Date                 : 9/27/94
Found in Baseline             : 1.1b19
Found Date                    : 9/27/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : sxops.c
Sensitivity                   : public

[9/27/94 public]

server_enable_if() not returning dced_s_not_found when appropriate.

[9/28/94 public]
Fix submitted.



CR Number                     : 12368
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : annotations not unique
Reported Date                 : 9/27/94
Found in Baseline             : 1.1b19
Found Date                    : 9/27/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : admin/dced/server/main.c
Sensitivity                   : public

[9/27/94 public]
The endpoint annotations for the two ACL interfaces and the svc interface
should distinguish themselves as dced's implementations.  Without this
distinguishing them from other endpoints via dcecp can't be done.

[09/27/94 public]
Added "DCED" to front of RDACL, RDACLv0 and SVC



CR Number                     : 12364
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ep
Short Description             : "Not registered in endpoint map" sometime
Reported Date                 : 9/27/94
Found in Baseline             : 1.1b19
Found Date                    : 9/27/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[9/27/94 public]
During large fvt run, the error "Not registered in endpoint map" has
been seen from time to time. However it doesn't occur in standalone
test. The follwoing is a example of error log,

400|0 2 1 19:29:45|IC Start
200|0 1 19:29:45|TP Start
520|0 1 10640 1 10|server_ping_6_P: Check to see that we can ping a server by it
s string binding.
520|0 1 10640 1 11|==== Contents of test case:
520|0 1 10640 1 12|{    list [catch "server ping 0073f23a-2e1a-1ddd-b73a-0000c0b
a4944@$DCP_SR_PROTSEQ:$DCP_SR_IP_ADDR" msg] $msg     }
520|0 1 10640 1 13|Test completed successfully.
520|0 1 10640 1 14|== Test output was:
520|0 1 10640 1 15|{1 {Not registered in endpoint map}}
520|0 1 10640 1 16|== Expected output was:
520|0 1 10640 1 17|{0 1}
520|0 1 10640 1 18|Test Failed.
220|0 1 1 19:29:45|FAIL
410|0 2 1 19:29:45|IC End

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12324
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : xattr
Short Description             : Success returned even on strange schema name
Reported Date                 : 9/23/94
Found in Baseline             : 1.1b18
Found Date                    : 9/23/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : dced/server/asimp.h dced/server/asops.c dced/idl/dhd.sams dce/utils/attr/dce_attr_bind.c
Sensitivity                   : public

[9/23/94 public]

The 'xattrschema catalog' command expects a fully qualified schema name
as it's attribute.  The dcecp code calls the set_attr_schema_binding()
function to help determine if the schema_name passed in is valid.

In the set_attr_schema_binding() function, the code tries to determine
if a binding handle was already set, and if so, if it matches the
current schema name the user just entered.  If the name doesn't match,
or the binding handle is not set, the schema name is passed to the
dce_attr_sch_bind() function.

The success or failure of this function is how dcecp determines
whether the schema name is valid or not.

We are finding that the following generate an error as expected...

   dcecp> xattrschema catalog gumby
   Error: Incomplete name
   dcecp>
   dcecp> xattrschema catalog /.:/gumby
   Error: Unknown auth_info type.
   dcecp>
   dcecp> xattrschema catalog /.:/xattrschema
   Error: Unknown interface
   dcecp>

And the following work as expected...

   dcecp> xattrschema catalog /.:/hosts/oddball/config/xattrschema
   /.../gumby/hosts/oddball/config/xattrschema/hostdata/data
   /.../gumby/hosts/oddball/config/xattrschema/hostdata/bindata
   /.../gumby/hosts/oddball/config/xattrschema/xattrschema/dtsconfig
   /.../gumby/hosts/oddball/config/xattrschema/xattrschema/additional_environ
   dcecp>

But we are also finding that if you put some junk on the end of a legal
schema name, the dce_attr_sch_bind() function returns success, thus
the xattrschema catalog command assumes the schema name is good, and
uses it in further output...

   dcecp>xattrschema catalog /.:/hosts/oddball/config/xattrschema/blech
   /.../gumby/hosts/oddball/config/xattrschema/blech/hostdata/data
   /.../gumby/hosts/oddball/config/xattrschema/blech/hostdata/bindata
   /.../gumby/hosts/oddball/config/xattrschema/blech/xattrschema/dtsconfig
   /.../gumby/hosts/oddball/config/xattrschema/blech/xattrschema/additional_environ
   dcecp>

Should the dce_attr_sch_bind() function return success on this schema name?

[9/23/94 public]
The request is that a attr schem obj name has to begin with "xattrschme".
It is legal a obj name has more than "xattrschme" and this is actually how 
you can have multiple attr schema objects, such as xattrschema/serverx and
xattrschema/serverxx. dce_attr_sch_bind() will return success as long
as the attr schema server name is right (in this case it's  
/.:/hosts/oddball/config) and the schema object name is started with
"xattrschme". 

Howerver, server side should perhaps verify the obj name instead of ignoring 
them. But security component does same thing (ignore obj name and assume it's
"xattrschema").

[9/27/94 public]
dced server does validate the schema obj name now. Submitted.



CR Number                     : 12322
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : xattr
Short Description             : Can use applydefs and reserved in modify but not create.
Reported Date                 : 9/23/94
Found in Baseline             : 1.1b18
Found Date                    : 9/23/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : dced/server/asimpl.h
Sensitivity                   : public

[9/23/94 public]

There is something wrong with trying to create an object in
the generic schema when trying to set 'applydefs' and 'reserved'
to yes.

dcecp> xattrschema create /.:/hosts/oddball/config/xattrschema/blech1 -encoding integer -aclmgr {srvrconf r r r r} -applydefs no
dcecp>
dcecp> xattrschema create /.:/hosts/oddball/config/xattrschema/blech2 -encoding integer -aclmgr {srvrconf r r r r} -applydefs yes
Error: Invalid schema entry flag specified
dcecp>
dcecp> xattrschema create /.:/hosts/oddball/config/xattrschema/blech2 -encoding integer -aclmgr {srvrconf r r r r} -applydefs no
dcecp> xattrschema modify /.:/hosts/oddball/config/xattrschema/blech2 -applydefs yes
dcecp>

The create command doesn't allow applydefs to be yes, but the modify does.  Creating
in the security schema works as expected.

Note The same problem appears with the 'reserved' and 'unique' flags, but not with
the 'multivalued' flag.

[9/23/94 public]
The problem is in VALID_SCH_FLAG. I'll fix it.

[9/27/94 public]
Submiited.



CR Number                     : 12321
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : xattr
Short Description             : rs_attr_schema_update_entry() need validate fields to be updated
Reported Date                 : 9/23/94
Found in Baseline             : 1.1b18
Found Date                    : 9/23/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : dced/idl/dhd.sams dced/server/asimpl.h dced/server/asops.c
Sensitivity                   : public

[9/23/94 public]

Using the generic schema, I cannot do this...
(also note the bad error message)

dcecp> xattrschema create /.:/hosts/oddball/config/xattrschema/blech -encoding integer -aclmgr {srvrconf t t t t}
Error: Invalid for this acl manager type specified
dcecp>

But I can do this...

dcecp> xattrschema create /.:/hosts/oddball/config/xattrschema/blech -encoding integer -aclmgr {srvrconf r r r r}
dcecp>
dcecp> xattrschema modify /.:/hosts/oddball/config/xattrschema/blech -aclmgr {srvrconf t t t t}
dcecp>

[9/23/94 public]
The "t" is not in srvrconf perm_set. Please refer to dced/idl/dced_aclbits.idl,
    const unsigned32 dced_sc_all_perms  =
            ( dced_perm_control | dced_perm_delete | dced_perm_flag
    	    | dced_perm_read | dced_perm_write | dced_perm_execute );

or dced/server/acls.c,
static sec_acl_printstring_t sc_prstr[] = {
    { {"c"},  {"control"},      dced_perm_control }, /* Modify the ACL */
    { {"d"},  {"delete"},       dced_perm_delete  }, /* Delete item */
    { {"f"},  {"flag"},         dced_perm_flag    }, /* Start w/ custom flags * /
    { {"r"},  {"read"},         dced_perm_read    }, /* Read item */
    { {"w"},  {"write"},        dced_perm_write   }, /* Modify item's att's */
    { {"x"},  {"execute"},      dced_perm_execute }  /* Start server */
};

However, the dced server update op need to check this stuff too
(it currently does nothing).

[9/27/94 public]
Fixed and submitted.



CR Number                     : 12316
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : osf1
Component Name                : dced
Subcomponent Name             : grp_override
Short Description             : grp_override functional tests fail
Reported Date                 : 9/23/94
Found in Baseline             : 1.1b20
Found Date                    : 9/23/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : src/test/functional/security/grp_override...
Sensitivity                   : public

[9/23/94 public]

The group override and passwd_export test for group override fail
severely on osf1, OSF/1 Alpha, and presumably other platforms.

[10/3/94 public]
Fix submitted by Brian Hasbrouck on 9/29.



CR Number                     : 12307
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : sv
Short Description             : Misplaced dce_svc_printf()
Reported Date                 : 9/22/94
Found in Baseline             : 1.1b18
Found Date                    : 9/22/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : admin/dced/server/sv_clientd.c
Sensitivity                   : public

[9/22/94 public]
Misplaced svc_printf call, reports error (status 0) when there is none:

         sec_login_validate_first(context, &reset_passwd, &auth_src, st);
          DCE_SVC_DEBUG((dhd_svc_handle, dhd_s_secval, svc_c_debug1,
                "scd_setup_first_cntxt: sec_login_validate_first"));
          if (*st == sec_login_s_already_valid)
            *st = error_status_ok;
          else
            dce_svc_printf(DCED_S_SV_SEC_LOGIN_FAIL_MSG, *st);

If *st == error_status_ok we hit the svc_printf().

Maybe Remove teh eslse and say if (!= status_ok) svc_printf().

[9/22/94 public]
Did:
    else if (*st != error_status_ok)
	dce_svc_printf(...)



CR Number                     : 12293
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : create attribute for CDE session management
Reported Date                 : 9/21/94
Found in Baseline             : 1.1b16
Found Date                    : 9/21/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : admin/dced/{api/dced_data.*,server/init.c}
Sensitivity                   : public

[9/21/94 public]
We should create an attribute for CDE (Common Desktop Envronment)
session management.  The X Consortium plans to use DCED for a
session manager.

[9/22/94 public]
I added global definitions and initialization for this in api/dced_data.[ch]
and server/init.c.  Rich, you should check/adjust the names, then close this.

[09/26/94 public]
I checked the names, fixed the xattr name, and am in fact marking this fix.
Thanks.



CR Number                     : 12272
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : srvrexec
Short Description             : Can not access acl of srvrexec objects
Reported Date                 : 9/20/94
Found in Baseline             : 1.1
Found Date                    : 9/20/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : admin/dced/server/{acls.c,sxops.c,scops.c}
Sensitivity                   : public

[9/20/94 public]
After create a srvrconf obj and start, the acl sho on the srvrexec
obj failed,
dcecp> ser start try
cea150c6-d4ac-11cd-990e-0000c010df56
dcecp> server show  try -exec
{uuid cea150c6-d4ac-11cd-990e-0000c010df56}
{program a.out}
{arguments {}}
{prerequisites {}}
{keytabs {}}
{entryname {}}
{services {}}
{principals {}}
{starton {}}
{uid 0}
{gid 0}
{dir /tmp}
{executing
 {uuid cea150c6-d4ac-11cd-990e-0000c010df56}
 {pid 9662}}
dcecp> acl show  /.../foster_cell/hosts/foster/config/srvrexec/try
Error: Unknown message number 0x14601008

pwang@foster24 >statuscode 0x14601008
Tech = 1 = 01 = 0x1 = dce
Comp = 17921 = 043001 = 0x4601 = lib
Mesg = 8 = 010 = 0x8 = Key not found in database

The fvt also failed.

Modification is failed too,
400|0 5 1 15:13:48|IC Start
200|0 1 15:13:48|TP Start
520|0 1 9880 1 37|server_enable_5_N: Check that unauthenticated users are handle
d correctly.
520|0 1 9880 1 38|Command failed: {acl mod $DCP_CELLNAME_THREE/$DCP_HOSTNAME_THR
EE/config/srvrexec/tserver -ch unauthenticated:r}
520|0 1 9880 1 39|Command returned: {Unknown message number 0x14601008}
520|0 1 9880 1 40|Test aborted.
220|0 1 2 15:13:59|UNRESOLVED
410|0 5 1 15:13:59|IC End

[9/2/94 public]
The name cache entries for sx and sc were not being set/deleted on
create/delete; they should have been.  Also, the ACL resolver for sx was
trying to use the wrong cache name. (ACL name resolution uses the cache)



CR Number                     : 12249
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : init
Short Description             : Should chdir() before attempting to read dced config files.
Reported Date                 : 9/19/94
Found in Baseline             : 1.1b18
Found Date                    : 9/19/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : main.c
Sensitivity                   : public

[9/19/94 public]
The dced should chdir(WORKING_DIR) before attempting to read config files.

[9/19/94 public]
Fix submitted.



CR Number                     : 12216
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced complains about nameserve on shutdown
Reported Date                 : 9/15/94
Found in Baseline             : 1.1b17
Found Date                    : 9/15/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : main.c
Sensitivity                   : public

[9/15/94 public]

The dced seems to expect to be able to exit nicely when it
is shutdown.  It usually finds, however, that everyone else
has gone away before it has:

% /etc/dce_shutdown 
1994-09-15-16:27:58.715-04:00I----- dced WARNING dhd general main.c 960 0xa44d49ac
Cannot NSI unexport Security Certification server.
dced:  Name service unavailable
Name service unavailableroot@surf# 

I don't believe that dced should ever report an error such as this
as in every probable situation, the namespace will be long-gone
when dced gets shutdown.

[09/16/94 public]
I changed the test so that it looks like this:
	if (*st != error_status_ok && *st != rpc_s_name_service_unavailable)
				   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    dce_svc_printf(DCED_S_CANT_NSI_UNEXPORT_MSG, sp->annote);

[09/17/94 public]
Submitted.  Fixed.



CR Number                     : 12195
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hd
Short Description             : confusion over cell_aliases
Reported Date                 : 9/14/94
Found in Baseline             : 1.1b17
Found Date                    : 9/14/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : hdmin/dced/server/dcecf_postproc.sh
Sensitivity                   : public

[9/14/94 public]
Using the nightly started 9/13/94 on HP.

dcecp> hostdata mod cell_aliases -data {/.../absolut_alias /.../absolut_cell}
dcecp> h s cell_aliases 
{uuid 002817df-6eca-1d6a-b08a-0000c09ce054}
{annotation  {Cell aliases}}
{storage cell_aliases}
{hostdata/data /.../absolut_alias}
dcecp> h s dce_cf.db    
{uuid 002c7cdf-4301-1d77-af44-0000c09ce054}
{annotation  {DCE name config file}}
{storage /opt/dcelocal/dce_cf.db}
{hostdata/data
 {cellname /.../absolut_cell}
 {hostname hosts/absolut}
 {cellaliases   /.../absolut_alias}
 {cellaliases   /.../absolut_cell}}
dcecp> 

See the dce_cf.db file has two cellaliases line but the cell_alias hostdata
item only shows one of them.

[9/14/94 public]
The syntax is:
	cellaliases /.../aliase_1 /.../alias_2
(ie ONE cellaliases line with multiple values)

[9/14/94 public]
Wait, maybe I'm tired, but doesn't that mean that the post-processor for
cell_aliases did the wrong thing?  See above, I did the hostdata modify
call to put two aliases in (did I get that syntax correct?) and then the
dce_cf.db file had two cellaliases lines.

[9/15/94 public]
The post-processor wrong?  It's a feature...

Your /opt/dcelocal/var/dced/cell_aliases looks like:
    /.../absolut_alias
    /.../absolut_cell

It should look like:
    /.../absolut_alias /.../absolut_cell

That means your DCECP command above would have to be:

    hostdata mod cell_aliases -data {{/.../absolut_alias /.../absolut_cell}}

Yes, I hate that you need the double brackets to write a single line
with spaces.

Could the post-processor be smarter?  Of course.
    Should it combine all non-comment lines into one?
    Take only the first non-comment, non-blank line?
    Or depend on the admin to do the expected thing to cell_aliases?
Last option is easiest. Second is second and would be mean not special
casing for aliases (cell, host, and aliases are processed the same way).
See what the dced owner thinks...

Is it true that the cell's primary name should not appear in the list of
aliases?  (I guess it will between commands for changing it over.)

And is this documented somewhere yet?

[9/15/94 public]
Enhanced post-processor to special-case cell_aliases.  The file can
be several aliases per line and/or multiple lines.



CR Number                     : 12187
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : do not call sv_purge_context() when doing -i
Reported Date                 : 9/14/94
Found in Baseline             : 1.1b16
Found Date                    : 9/14/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : admin/dced/server/main.c
Sensitivity                   : public

[9/14/94 public]
sv_purge_context() is called from parse_args() even if running with "-i".
It should check the initialize_databases (boolean) before doing that.
(Gotta love serviceability...)

[09/17/94 public]
A simple matter of dsallowing -p if -i is set.  Fixed.



CR Number                     : 12182
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hd
Short Description             : don't return void for 0 cell aliases
Reported Date                 : 9/14/94
Found in Baseline             : 1.1b17
Found Date                    : 9/14/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : admin/dced/server/hdops.c
Sensitivity                   : public

[9/14/94 public]
dcecp> h s dce_cf.db
{uuid 002c7cdf-4301-1d77-af44-0000c09ce054}
{annotation  {DCE name config file}}
{storage /opt/dcelocal/dce_cf.db}
{hostdata/data
 {cellname /.../absolut_cell}
 {hostname hosts/absolut}}
dcecp> h s cell_name    
{uuid 00174f6c-6eca-1d6a-bf90-0000c09ce054}
{annotation  {Name of cell}}
{storage cell_name}
{hostdata/data /.../absolut_cell}
dcecp> h s cell_aliases
{uuid 002817df-6eca-1d6a-b08a-0000c09ce054}
{annotation  {Cell aliases}}
{storage cell_aliases}
{hostdata/data present}
dcecp> 

Notice that the value of {hostdata/data present} in cell_alias is present
but there are no alaies.  It should be the emtpy string {}.

[9/14/94 public]
It's actually in dced  in hdops.c:hostdata_get where John returns and era
of type void instead of a printstring_array or byte_array.  The dcecp
utility function that prints an ERA says "if it's of type void print the
value 'present' since void types screw up tcl attribute lists".

[9/15/94 public]
Return a 0-length list of sec_attr_enc_printstring_array or
sec_attr_enc_bytes if there are no cell aliases. (Basically, do the
check for no aliases a little later, then return the proper type.)



CR Number                     : 12166
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : srvrconf
Short Description             : srvrconf_create() doesn't check thefields of server object to be created
Reported Date                 : 9/13/94
Found in Baseline             : 1.1b17
Found Date                    : 9/13/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : scops.c
Sensitivity                   : public

[9/13/94 public]
I believe I opened a similar bug before, but it was closed after fixing
some other problem. So here it's again,

srvrconf_create() doesn't check the fields of server object to be created
so that an all null server can be created,

dcecp>  server create xxx
dcecp> server show xxx
{uuid e36dcfde-cf20-11cd-95b7-0000c010df56}
{program {}}
{arguments {}}
{prerequisites {}}
{keytabs {}}
{entryname {}}
{services {}}
{principals {}}
{starton {}}
{uid 0}
{gid 0}
{dir {}}
dcecp>

[09/13/94 public]
The only required field is the program name.  I have a fix in my sandbox.

[09/17/94 public]
Submitted marking as fixed.



CR Number                     : 12162
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced_object_read returns
'Cannot find a matching object' with srvrexec handle
Reported Date                 : 9/13/94
Found in Baseline             : 1.1b17
Found Date                    : 9/13/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : sxops.c
Sensitivity                   : public

[9/13/94 public]

After creating and starting a server, when I tried to read the
server entry using dced_object_read() with serverexec_handle and
the server_proc_id, 'Cannot find a matching object' error is returned.


But, i could read the entry with server conf handle and server entry id.

[9/13/94 public]
The server conf handle is different from server exec handle, you can
read with the former doesn't mean you can aslo read with the latter.
Check if the server you started is still running by "ps", if not you
may cancel this ot.

[9/13/94 public]
The test server is running when I issue the call.

[9/13/94 public]
Sorry, Prasad, I can not reproduce this bug, I used dcecp
and did following commands on bl-17, all were fine,

dcecp> serv cr try -progarm a.out -dir /tmp
dcecp> serv start try
dcecp> serv sho try -exec

I guess you may have to generate a small test to reproduce the problem.

[9/13/94 public]
Prasad has a real case, The uuids returned by srvrconf_start() and
srvrexec_get() are different. I guess I know where the problem is (scops.c) 
and will try the fix in my sandbox.

dcecp> server sta try5
24b1402a-cf35-11cd-a74f-0000c010df56
dcecp> server sho try5 -exec
{uuid 24c38f32-cf35-11cd-a74f-0000c010df56}
{program a.out}
{arguments {}}
{prerequisites {}}
{keytabs {}}
{entryname {}}
{services {}}
{principals {}}
{starton {}}
{uid 0}
{gid 0}
{dir /tmp}

[09/17/94 public]
Integrated Ping's fix.  Not ideal since it loses the "confiugrd" uuid.
Good enuf tho.



CR Number                     : 12158
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : acls
Short Description             : must grant I, not just i, permission
Reported Date                 : 9/13/94
Found in Baseline             : 1.1b17
Found Date                    : 9/13/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : admin/dced/server/acls.c
Sensitivity                   : public

[9/13/94 public]

the default ACL in dced containers should grant I permission as well
as i permission.



CR Number                     : 12146
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : xattr
Short Description             : dced xattrschema obj should be organized under config/xattrschema
Reported Date                 : 9/12/94
Found in Baseline             : 1.1
Found Date                    : 9/12/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : api/dced_data.h utils/misc/lib.sams utils/attr/attrimpl.h utils/attr/dce_attr_bind.c
Sensitivity                   : public

[9/12/94 public]
Currently the server schema entries are not organized right,

dcecp> xattrschema cata /.:/hosts/foster/config
/.../foster_cell/hosts/foster/config/hostdata/data
/.../foster_cell/hosts/foster/config/testint1
/.../foster_cell/hosts/foster/config/hostdata/bindata
/.../foster_cell/hosts/foster/config/xattrschema/dtsconfig
/.../foster_cell/hosts/foster/config/xattrschema/additional_environ

They should be all under /.../foster_cell/hosts/foster/config/xattrschema/.

[9/21/94 public]
Submitted.



CR Number                     : 12140
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : sc,sx
Short Description             : ep_compat server misleading
Reported Date                 : 9/12/94
Found in Baseline             : 1.1
Found Date                    : 9/12/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : sxops.c,misc.c,epops.c,scops.c
Sensitivity                   : public

[9/12/94 public]
dced creates a "fake" srvrconf object that it supposed to act as
a placeholder for old EP entries.  This is too confusing, and
attempts to perform many dced srvrconf/srvrexec operations fail,
leaving the user to think something is wrong.  The fake-server
should go away.

[09/12/94 public]
Fix in my sandbox being tested.

[09/17/94 public]
Flushed the ep-compat fake server.



CR Number                     : 12136
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hd
Short Description             : hostdata_create must not check if file exists if handle is null
Reported Date                 : 9/12/94
Found in Baseline             : 1.1b16
Found Date                    : 9/12/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : admin/dced/server/hdops.c
Sensitivity                   : public

[9/12/94 public]
In hostdata_create() should not do access() checks if handle is NULL.
(This prevents pe_site from being created - this is called before
the file exists in the init code.)

[9/12/94 public]
Checks are done properly now.



CR Number                     : 12127
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : dced object uuid
Short Description             : dced's object uuid should be
more persistant than it is now
Reported Date                 : 9/11/94
Found in Baseline             : 1.1b16
Found Date                    : 9/11/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : admin/dced/server/main.c,misc.c
Sensitivity                   : public

[9/11/94 public]
dced should not generate its obj UUID each time it comes up.  It should
be per host for the life of the configuration.  Therefore, some method
of stable storage should be used to store and retrieve the UUID at each
dced startup.

[9/12/94 public]
As a tempoarary "fix" for this problem, I have changed 
misc.c:init_global_data() to hardcode the dced object uuid.  This line of code
should be removed when the OT is properly addressed

[09/12/94 public]
Fix in my sandbox being tested.

[09/17/94 public]
dced now writes objectuuid.txt at -i time and reads it at runtime.

[9/22/94 public]
It does as he said (checked a recent nb).



CR Number                     : 12120
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : test/api
Short Description             : secval tests need to be modified
Reported Date                 : 9/9/94
Found in Baseline             : 1.1b17
Found Date                    : 9/9/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : dced/ts/api/{secval_start.c,
secval_stop.c, secval_validate.c binding_fm_rpc.c}
Sensitivity                   : public

[9/9/94 public]

Test assertions for secval api need to verify the status of secval service,
before performing the actual validation of the secval API.

[9/9/94 public]

Make of use the dced_secval_status() to perfom the setup
for the tests. Also cleanup the tests.



CR Number                     : 12102
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12124, 12284,12287
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server
Short Description             : dced core dumps on srvrconf
start command
Reported Date                 : 9/8/94
Found in Baseline             : 1.1b17
Found Date                    : 9/8/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : scimpl.h
Sensitivity                   : public

[9/8/94 public]

I am assuming Nighlty buidl of 906 is going to be BL17.
Because of OT12071, configured a cell with rpcd and started dced with 
options def in /opt/dcelocal/var/dced.

My test api creates a server entry; and then starts (dced_server_start).

dced core dumps with the following trace:


Core was generated by `dced'.
Program terminated with signal 11, Segmentation fault.
#0  0x40710d in srvr_hash_table_add (ht=0x4349a4, up=0x691858,
value=0x5e1558, 
    st=0x5e1adc)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:596
Source file is more recent than executable.
596         bp->list[bp->count++] = *value;
(gdb) where
#0  0x40710d in srvr_hash_table_add (ht=0x4349a4, up=0x691858,value=0x5e1558, 
    st=0x5e1adc)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:596
#1  0x4071e3 in srvr_hash_build (t=0x434dd8, ht=0x4349a4, st=0x5e1adc)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:633
#2  0x4068ba in srvr_add_to_table (t=0x434dd8, new=0x5e1864, st=0x5e1adc)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:367
#3  0x40d664 in srvrconf_start (h=0x67a658, id_uuid=0x5e1aec, fixed=0x0, 
    attributes=0x0, instance=0x58c948, st=0x5e1adc)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/scops.c:615
#4  0x425d1d in op6_ssr (h=0x67a658, IDL_call_h=0x6907d0,IDL_elt_p=0x5e1e38, 
    IDL_drep_p=0x5e1e68, IDL_transfer_syntax_p=0xa449b11c, 
    IDL_mgr_epv=0x432d20, IDL_status_p=0x5e1e60) at srvrconf_sstub.c:2443
#5  0xa421fd1e in acl_db ()
#6  0xa41d4f6c in acl_db ()
#7  0xa41acb07 in acl_db ()
#8  0xa41b1ef9 in acl_db ()
#9  0xa41d4dbc in acl_db ()
#10 0x5ef4c8 in acl_db ()
Cannot access memory at address 0x2.
(gdb) p value
$1 = (struct srvr_hash_entry_s_t *) 0x5e1558
(gdb) p *value
$2 = {entry = 0, service = 0, object = 0}
(gdb) p bp->list
$3 = (struct srvr_hash_entry_s_t *) 0x88e012a2
(gdb) p bp->count
$4 = 20
(gdb) l
$4 = 20
(gdb) l
591         else if (bp->count >= bp->size - 1) {
592             bp->size += srvr_c_hash_bucket_delta;
593             bp->list = (srvr_hash_entry_t *)
594                             realloc(bp->list, bp->size * sizeof
*bp->list);
595         }
596         bp->list[bp->count++] = *value;
597     }
598
599     /*
600     **  (Re)build the hash tables.  Caller must have locks held.
(gdb) p *bp
$5 = {size = 2265055245, count = 20, list = 0x88e012a2}

server entry details( complete):
--------------------
520|0 1 11073 1 5|server name : dced_test_server        
520|0 1 11073 1 6|server uuid  = "50c4c638-ca6b-11cd-9af0-0000c03cd04c"
520|0 1 11073 1 7|services count: 1
520|0 1 11073 1 8|server if uuid (ip) ="002d2117-7062-1dd2-a9bb-0000c03cd04c"
520|0 1 11073 1 9|interface name: dced_test_server
520|0 1 11073 1 10|entry name: /.:/hosts/curry/dced_test_server
520|0 1 11073 1 11|objects count: 1
520|0 1 11073 1 12|object uuid = "60cc7b6a-9e48-11cd-a5d7-0000c03cd04c"
520|0 1 11073 1 13|program name:/usr/sandbox/ganni/test_sb/obj/at386/test/admin/dced/ts/api/dced_test_server
520|0 1 11073 1 14|arguments count: 2
520|0 1 11073 1 15|value[1]: /.:/hosts/curry/dced_test_server
520|0 1 11073 1 16|value[2]: ncadg_ip_udp
520|0 1 11073 1 17|principal count: 1
520|0 1 11073 1 18|principals name : /.../dced_test/dced_test_srvr_1


*** I 'll try to see if i can reproduce this problem with dcecp

[9/8/94 public]

When I tried again dced core dumps - this time in acl_db() - this happens
consistently; The test server seems to come up.

OSF version 1.0 created Mon Dec  7 14:40:14 1992

..
Core was generated by `dced'.
Program terminated with signal 11, Segmentation fault
#0  0xa400372b in acl_db ()
(gdb) bt
#0  0xa400372b in acl_db ()
Cannot access memory at address 0xc60aad44.
(gdb) where
#0  0xa400372b in acl_db ()
#1  0xd7 in ?? ()

0HISTORY Thu Sep  8 11:14:25 1994 ganni	Created

[9/8/94 public]
Please try dcecp to see if it's a problem in test or server.

[9/8/94 public]
Since dced dumps core, there is definitely a problem with the server.

Also, it cannot be IN acl_db(), since that's a variable, not a function.

[9/8/94 public]
ok. I itried with dcecp; created an server entry - with identical info 
as in the test api. then when tried to start, dced core dumps with
similar results.

[9/13/94 public]

In the real bl17, dced does not core dump. Something along th eline got
fixed.
(Initial assumption of nb906 becoming bl17 was wrong).

[9/13/94 public]

I got greedy - I brought up the cell with the latest nightly build (9/12).
Identical core dumps.

I 'll revert back to bl17.

[9/20/94 public]
NB of 9/19 does not exhibit this problem on 486.  HP test still blocked by 
OT 12124, will not cancel until HP verified.

[9/21/94 public]
Fix submitted.  bad index into server has table.

[09/26/94 public]
The fix was changing "table[hashval& ~63]" to "table[hashval & 63]";
The effect showed up in several OT's; marked them as dups and listed
them above.



CR Number                     : 12087
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : srvrexec
Short Description             : "server show -ex" doesn't display "executing" attribute
Reported Date                 : 9/7/94
Found in Baseline             : 1.1b16
Found Date                    : 9/7/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : scops.c
Sensitivity                   : public

[9/7/94 public]

My reading of the dcecp spec indicates that the "executing" attribute
is present for executing servers. However, "server show" does not
display it. On the rare occasions when this sequence gets past the
"Communications failure" error (CR 12085):

dcecp> server cre dummy -prog /usr/users/coren/tmp/dummy -starton explicit -arg /.:/hosts/speed/dummyarg
dcecp> server start /.../speed_cell/hosts/speed/config/srvrconf/dummy
b7193326-ca7d-11cd-ac02-0000c08de054
dcecp> server show dummy -ex
{uuid b73ac4dc-ca7d-11cd-ac02-0000c08de054}
{program /usr/users/coren/tmp/dummy}
{arguments /.:/hosts/speed/dummyarg}
{prerequisites {}}
{keytabs {}}
{entryname {}}
{services {}}
{principals {}}
{starton explicit}
{uid 0}
{gid 0}
{dir {}}
dcecp>

Note there is no "executing" attribute.

[9/7/94 public]

I checked the return from srvrexec_get(), it seems srvrexec doesn't fill 
out the srvrexec_data_t in server_t.

[9/12/94 public]
Turned on server_c_exec_running flag while starting  a server.
Submitted.

[9/22/94 public]
I tried a recent n. build.  Worked fine.



CR Number                     : 12075
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : Unexpected communications failures during DCDREL001
Reported Date                 : 9/7/94
Found in Baseline             : 1.1b16
Found Date                    : 9/7/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[9/7/94 public]

In the first 8 hours of a 48-hour CHO run of DCDREL001, the test
reported more than 20 communication failures while attempting to make
rpc calls to test servers in the local cell. This has occurred
once or twice in previous test runs but not dozens of times. 

This error was seen using bl16.3 in a 4-node cell consisting of 
2 OSF/1 nodes and 2 HP-UX nodes. The errors are reported on the 
OSF/1 nodes by test clients while making remote procedure calls 
to test servers. At present the failure message doesn't indicate 
which node was the target of the failing calls.

[09/07/94 public]
The standard RFMI (request for more info).  Do you know which call
was failing?  Please add when you fix the failure messages to handle
the issue you mentioned.

[9/7/94 public]
With DG, isn't comm_failure a potentially nromal result if the receiving 
epmapper and/or target server is so busy that the DG wathcdog timer goes
off?  The rpc_comm_timeout can be set with the API named something like
rpc_set_comm_timeout()....   If this is a stress test, could be related?

[9/7/94 public]
I've seen this in non-stress situations :-), i.e., from simple dcecp
commands. Specifically, any of "server create", "server show", "server
cat", and "server start" return "Communications failure"
intermittently, while the same command repeated will succeed. But they
seem to fail more often than they succeed.

[09/12/94 public]
I believe this is really dced deleting its own endpoints by mistake.

[10/14/94 public]
This problem continues to show up in testing using DCDREL001.
Therefore it wasn't fixed by the fix to 11408 and is not a dup
of that. Changing the status from dup back to open.

[11/28/95 public]

dced (endpoint mapper) is returning the reject. dcdrel001 test is broken
(bad test design).  What's happening is:

1) A client makes an RPC using a partially bound DG binding handle.

2) The request is forwarded to a server by dced.

3) The reqeust is queued at the server and eventually gets executed.

4) The server manager routine unregisters its endpoint from dced.

5) The client pings the server using a *STILL* partially bound DG binding
handle because it is taking more than 2 seconds. (Note: The client hasn't
heard anything back from the server yet. Thus, it doesn't know the server's
endpoint and sends the ping to dced.)

6) dced returns the reject, comm failure, because it doesn't know about the
server any more.

[12/19/95 public]
Fixed in DCE 1.2.1
Closed



CR Number                     : 12071
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : services
Short Description             : Can't access dced services via namespace
Reported Date                 : 9/7/94
Found in Baseline             : 1.1b16
Found Date                    : 9/7/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : epops.c oeops.c dced_binding.c misc.c
Sensitivity                   : public

[9/7/94 public]

The dced services cannot be accessed via the namespace:

[oscar]:/usr/users/baum# dcecp -c hostdata cat
Error: Unsupported type
[oscar]:/usr/users/baum# setenv RPC_SUPPORTED_PROTSEQS ncacn_ip_tcp
[oscar]:/usr/users/baum# !dce
dcecp -c hostdata cat 
Error: Unsupported type
[oscar]:/usr/users/baum#  setenv RPC_SUPPORTED_PROTSEQS ncadg_ip_udp
[oscar]:/usr/users/baum# !dce
dcecp -c hostdata cat 
Error: Unsupported type
[oscar]:/usr/users/baum# 

yet the few services which accept string bindings can be gotten to fine
(the message from secval is correct):

#  dcecp -c secval activate  {ncacn_ip_tcp:130.105.5.164[135]}
Error: secval service already enabled
# dcecp -c secval activate  {ncadg_ip_udp:130.105.5.164[135]}
Error: secval service already enabled

cdscp sho obj /.:/hosts/oscar/config shows the bindings successfully
exported to NS.

[9/7/94 public]
dced binding code (which dcecp calls to get a dced service binding) uses
a NULL obj point to import a binding and this means it will find any
binding avaiable regardless the object uuids supported by the req.
service. The "Unsupported type" means that "A client application tried to 
make a remote call using a binding handle whose associated object UUID 
has a type that is unsupported for the interface being used." 
So probably either the server should not tie obj uuid with the exported
binding handle or dced binding code should inq a obj uuid of req. service 
before importing a binding.

[9/7/94 public]
For all services, dced exports w/o a obj UUID, expect serviceability 
I think what we need to do is specify teh particuar *ifspec* for 
the service we're looking for and then use rpc_binding_set_object(NIL_UUID)
for any of the dced services (expect attrschema?)

[9/7/94 public]
If you want to strip out uuid from binding by rpc_binding_set_object(),
you don't need specify any if-handle. After imported binding, just
set its uuid to NIL. More correct solution is to inq a object uuid by
rpc_ns_entry_object_inq_begin/next/done before importing a binding, 
so that even server code changes to use object uuid later on, the binding 
code will not need to be changed. If you're going to make the change, 
there are two places need to be modified,
1) admin/dced/api/dced_binding.c 2) dce/utils/attr/dce_attr_bind.c

[9/7/94 public]
THinking about this a little more and bouncing it around a few people has
come up with this simple solution. 

  1) dced_binding.c - Leave import the same as it is (ns_import(NULL if, Nil
     obj uuid); Always rpc_set_object(NIL);

  2) dce_attr_bind.c - No change.  It will get the obj UUID in the binding
     to distinqguish the particular server.

  3) Make sure dced EP registers its server obj uuid in the xattr_schema
     entry in the same manner it does the SVC entry.

[9/7/94 public]
Same error "Unsupported type" occurs using "dcecp acl" command on any
dced object. Ex:

dcecp> acl sh /.:/hosts/frick/config/secval
Error: Unsupported type

Note that just like "acl_edit", dcecp uses "sec_acl_bind()" API to
bind to the specific object's ACL.

[9/7/94 public]
Looks like that instead of trying to find and change every binding APIs,
the easy and better solution is to export the same obj_uuid for 
serviceability to every services of dced so that there will be no
mismatches.

[9/11/94 public]
All dced objects now have obj UUID exported to them.  Changes to endpoint 
mapper to handle object for the forwarder (dced) containing obj UUID.

[9/12/94 public]
Submitted fixes as described in previous entry.



CR Number                     : 12066
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : sx
Short Description             : enable/disable aren't stable
Reported Date                 : 9/6/94
Found in Baseline             : 1.1b16
Found Date                    : 9/6/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/sxops.c
Sensitivity                   : public

[9/6/94 public]

the enable/disable commands don't update the srvrexec backing store.

[09/08/94 public]
Added calls to dce_db_store whenever a server changes, and to
dce_db_delete when a server is deleted.



CR Number                     : 12048
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ep
Short Description             : Smoketest Failure: Endpoint lookup failing.
Reported Date                 : 9/6/94
Found in Baseline             : 1.1
Found Date                    : 9/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : epops.c
Sensitivity                   : public

[9/6/94 public]

HOST=			sif
CORE FILES= 		none

Output from sif:/u1/RAT_tools/do_automatic_test.log

S:****** Check for active sec_client service...
dcecp -c secval status {ncacn_ip_tcp:130.105.5.25[135]} FAILS: Error:
ERROR:   Continuing will return to the Initial Cell Configuration Menu.
+ cd /u1/RAT_tools


Ouput from sif:/u1/RAT_tools/run_commands.log

Password must be changed!
cdscp show server
Binding incomplete (no object ID and no endpoint) (dce / rpc)
Binding incomplete (no object ID and no endpoint) (dce / rpc)
Binding incomplete (no object ID and no endpoint) (dce / rpc)
Binding incomplete (no object ID and no endpoint) (dce / rpc)
cdscp show dir /.:

                        SHOW
                   DIRECTORY   /.../sif_cell
                          AT   1994-09-06-08:34:18
Error on entity: /.../sif_cell
Error with socketFunction: dnsEnumAttr

cdscp list dir /.:
                        LIST
                   DIRECTORY   /.../sif_cell
                          AT   1994-09-06-08:34:19
cdscp show clearinghouse /.:/sif_ch
                        SHOW
               CLEARINGHOUSE   /.../sif_cell/sif_ch
                          AT   1994-09-06-08:34:19
Error on entity: /.../sif_cell/sif_ch

Error with socketFunction: dnsEnumAttr

invoking dcecp smoke test
Error with socket
dcecp returned value is:
DONE

Output from sif:/tmp/dce_config

S:****** Starting secd...
D:         Executing: secd -bootstrap
DEBUG:     Executing: modify_rcfile(secd)
V:         Successfully modified rcfile /etc/rc.dce for "secd"
D:         Executing: sleep 15
S:****** Check for active sec_client service...
D:         Executing: dcecp -c secval status {ncacn_ip_tcp:130.105.5.25[135]}
DEBUG:     Executing: err_exit(Continuing will return to the Initial Cell Configu
ration Menu.)
ERROR:   Continuing will return to the Initial Cell Configuration Menu.

[9/6/94 public]
Rebuilding in sandbox with potential fix....

[9/12/94 public]
Submitted changes.

[9/12/94 public]

I noticed the same problem today in the multimachine test log on budapest

Here is the extract from the error log:

 	SHOW      
        DIRECTORY /.../sif_cell     
        AT 1994-09-15-08:15:06     
        Error on entity: /.../sif_cell   
        Error with socket    
        Function: dnsEnumAttr

[9/21/94 public]
Fixed last week.  Works.



CR Number                     : 12042
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : dced
Subcomponent Name             : 
Short Description             : failed postprocessor exec kills dced
Reported Date                 : 9/5/94
Found in Baseline             : 1.1b16
Found Date                    : 9/5/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/sxops.c
Sensitivity                   : public

[9/5/94 public]
If dced can't successfully run a postprocessor, it does not unlock a mutex
(or otherwise screws something up).

The first time it logs this:
    Postprocessor for cell_name exited with status code 1

The second time I try it:
**** Assertion failure. attempt to relock a mutex
     at line 1249 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c pid
= 30171
%Internal DCE Threads problem (version CMA BL10+), terminating execution.
% Reason: assertion failure:  attempt to relock a mutex
	 at line 1249 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c,
pid = 30171
% See 'cma_dump.log' for state information.

It generates a big core file, which I can't do anything with (except it
says dced was aborted (sig 6)) and a cma_error.log.

Easy to repeat. Just misspell the entry for cell_name, then do
"hostdata mod cell_name -data {{xxx}}".

First place to look: dced_fork() or the setup for that call?

[09/06/94 public]
The bug is that dce_waitpid() didn't unlock the mutex on all paths out
of the function.  Added two pthread_mutex_unlock() calls.



CR Number                     : 12032
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced gives the world root access to your machine
Reported Date                 : 9/2/94
Found in Baseline             : 1.1
Found Date                    : 9/2/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : main.c
Sensitivity                   : public

[9/2/94 public]
dced was recently changed so that it wasn't necessary to explicitly
restart it after a "bootstrap" mode.  This opened a big security hole.
Previously, the intended plan of action was
	bootstrap mode
	configure
	edit the ACL's replacing "unauth any full access" with
		"machine principal full access"
	shutdown
	start
This meant when, say, hostdata came up it was limited to the machine
principal.  Now any user can, say, create a password_override hostdata
object and presto, you're root.

I'm not sure what the best way to fix this is.  I think "bootstrap mode"
should reject all off-host requests.  This at least limits you to
physical security.  (In the normal case bootstrap is done only one your
"secure" secd server host so this is probably okay.)

The acl_patcher should be modified so that it waits for the machine principal
to exist and then, when it does, fix up any ACL's that haven't been modified.

We also need to fix some thigns for adding additional hosts.  The acl_patcher
work, above, will partially address it.  We can completely close the hole by
trying to see if the machine principal exists and, if it does write that
ACL. (The write_acl function in init.c tries to do this now, but I think it
should try a bit harder.)  As part of this, however, dce_config would have to
be changed to know about the idea of the machine principal already having
been created.

Comments?

[9/2/94 public]
Rich, the current dced doesn't invoke the acl_patcher() until the machine
principal exists.  The problem I think is that the services are EP
registered before this (NS registered after) , this should be delayed until
after the acl_patcher() has been called in the bootstrap_mgmt() routine.
What is the fix needed for additional hosts that you mention?

[09/02/94 public]
The last paragraph ("We also need...") describes how to fix things,
perhaps too tersely.

[9/2/94 public]
Will move EP registration of dced services into bootstrap_mgmt() routine.
I don;t think any additional issues pertaining to client machines exist for
dced.  Possible mod to dce_config script could improve handling of 
pre-existing client SELF principal and keytab.

[09/08/94 public]
We added a new ACL bit on DCED's containers:  i lets you insert objects
(e.g., create servers) but I lets you insert privileged objects (e.g.,
create servers that run as root).  I also requires i, it doesn't imply it.

[9/12/94 public]
Submitted code to register dced services in a more security conscious manner
(after ACL's have been initialized)

[09/17/94 public]
Added the I bit.  Really fixed now.



CR Number                     : 12030
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : acl
Short Description             : mem leak: ACLs are never deleted when objects are
Reported Date                 : 9/2/94
Found in Baseline             : 1.1b16
Found Date                    : 9/2/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : dced/server/*ops.c
Sensitivity                   : public

[9/2/94 public]
When objects are deleted (hostdata, srvrconf, etc.), their associated ACLs
are not.  Hence, a memory (silicon and disk) leak.

[09/17/94 public]
With John, deleted all ACLs. One known bug, can't solve: ACL objects
on srvrexec objects if host crashes are orphaned.

[9/17/94 public]
Yup, that's a problem.  Months ago I thought about writing a consistency
checking routine, sort of like "fsck".  I guess we'd call it on start-up.
How to do it: scan all the databases, remembering that ACL UUIDs.  Then scan
the Acl.db, seeing if the UUID of each is in that remembered list.



CR Number                     : 12027
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : srvrexec
Short Description             : srvrexec obj need acl and dced should handle srvrexec objs accordingly while it's going down or  up
Reported Date                 : 9/2/94
Found in Baseline             : 1.1b16
Found Date                    : 9/2/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/s[cx]ops.c
Sensitivity                   : public

[9/2/94 public]
here are a couple of problems,

1) Dced srvrexec need create acl for the srvrexec obj.
2) While dced is shutdown, the servers that started by dced
   should be handled accordingly, as well as while it's coming up.
   Right now, the servers are not be brought down when dced is
   shutdown and then just lost by dced entirely.

[09/06/94 public]
About to submit fix for #1.  For #2, it should not kill the server when it
goes away but I am submitting code so that it doesn't forget about them.



CR Number                     : 12005
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : sx
Short Description             : srvrexec stop cores dced
Reported Date                 : 9/1/94
Found in Baseline             : 1.1
Found Date                    : 9/1/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/sxops.c
Sensitivity                   : public

[9/1/94 public]

A typo (releasing the lock on sc_table not sx_table) means an assertion
fails and dced coredumps.

[09/01/94 public]
Fixed typo (sc_table.lock --> sx_table.lock) and submitted.



CR Number                     : 11979
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ep
Short Description             : log does not bind to correct server
Reported Date                 : 8/31/94
Found in Baseline             : 1.1
Found Date                    : 8/31/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : dce/server/{main,epops}.c
Sensitivity                   : public

[8/31/94 public]


SYSTEM:		RIOS
HOST:		mudslide
TEST:		core smoketest


COREFILES:	none

contents of  dcecp.out

RPC
CDS
PGO
ACL
LOG

contents of do_automatic_test.log

invoking dcecp smoke test
Bad routing specification
dcecp returned value is: LOG
DONE

[ holmes 9/01/94 public ]

SYSTEM:         RIOS, AT486
HOST:           mudslide, sif
TEST:           core dcecp smoketest

COREFILES:	none

Additional info from todays dcecp tests

output from sif:/u1/RAT_tools/do_automatic_test.log

nvoking dcecp smoke test
Unknown component
dcecp returned value is: LOG
DONE

output from sif:/u1/RAT_tools/dcecp.out

RPC
CDS
PGO
ACL
LOG



output from mudslide:/u1/RAT_tools/do_automatic_test.log

invoking dcecp smoke test
Bad routing specification
dcecp returned value is: LOG
DONE


output from mudslide:/u1/RAT_tools/dcecp.out

RPC
CDS
PGO
ACL
LOG

[ salamone 9/01/94 public ]

For the "dcecp log" commands in the Smoketest Script, the argument
used is the dtsd server. 

On the RIOS and 486, I try:
 
 dcecp> log modify /.:/hosts/$hostname/dts-entity -change dts:*.5:DISCARD:
 Error: Bad routing specification
 dcecp> log modify /.:/hosts/$hostname/dts-entity -change dts:*.5:DISCARD:
 Error: Bad routing specification
 dcecp> log modify /.:/hosts/$hostname/dts-entity -change dts:*.5:DISCARD:
 dcecp> log show /.:/hosts/$hostname/dts-entity -d
 {dts {* 5} DISCARD}
   
Note that the same command finally takes on the third try.

Also on the RIOS and 486, the dtsd server and cds clerk act
a little more peculiar:

dcecp> log list /.:/hosts/$hostname/dts-entity
{dts rpc cds}
dcecp> log modify /.:/hosts/$hostname/dts-entity -change dts:*.5:STDOUT:
Error: Bad routing specification
dcecp> log list /.:/hosts/$hostname/dts-entity
{dhd rpc cds}

dcecp> log list /.:/hosts/$hostname/cds-clerk
{dhd rpc cds}
dcecp> log list /.:/hosts/$hostname/cds-clerk
{dhd rpc cds}
dcecp> log list /.:/hosts/$hostname/cds-clerk
{cds rpc}

Note that the list of components have changed here.

I'm going to debug the "dcecp log" code now. Will update in a few.

[ salamone 9/01/94 public ]

First, it doesn't matter what server is used for the "dcecp log" command.
Sometimes I used the dts server and other times I used the
cds clerk.

Secondly, this script fails on all 3 platforms. We're just lucky
when the dce_svc_inq_components() API returns the correct information. 

The following script invokes the "dcecp log list" command several
times. For example for the dts server, you will notice every so 
often that {dhd rpc cds} is returned and sometimes {dts rpc cds} is.

I also modified the dcecp log code to avoid calling the 
dce_svc_inq_components() API during a modify operation and the
script below worked.


Source in the following script after invoking "dcecp":

____________________CUT HERE_____________________

proc log_loop_de_loop {} {
    
    set hostname [exec hostname]
#   set server cds-clerk
    set server dts-entity
    set i 0


    for {set i 0} {$i < 50} {incr i} {
	set rc [catch "log list /.:/hosts/$hostname/$server" show_result]
##	set rc [catch "log modify /.:/hosts/$hostname/$server -change cds:*.5:DISCARD:" show_result]
	puts $show_result
    }

}

____________________END_____________________

[9/1/94 public]
In svcreminpl.c:dce_svc_components() I added some code to print the
components as they are stuck into the table to return.  Looks fine.
In dcecp's dcp_log_do_list_comp() I stopped to print out the binding handle.
It's not always the same thing.  You can tell when dce_svc_inq_components()
will pass or fail by the port number in the binding.  Sometimes it's right,
sometimes it points to DCED's.

rpc_ns_binding_import_begin() is called by:
    rpc_ns_binding_import_begin(rpc_c_ns_syntax_default,
	(unsigned_char_t *)dcp_log_info_p->named_object,
	NULL, NULL, &context, &status);

Other places in the code specify the if_handle (first NULL) (dhd_server.c
uses nulls, tho).  Should it use serviceability_v1_0_c_ifspec?
(Tho it now calls rpc_ep_resolve_binding()...) (I tried that, but it
did not work.)
Is rpc_ep_resolve_binding() working correctly?
Does this have anything to do with endponts being mapped wrong?

[09/01/94 public]
I doubt endpoints are being mapped wrong, but it's possible.  Ick.
It sure sounds like somehow dcecp is getting a binding to dced, not
the server it wants.  Are you *sure* there is an object uuid exported
that you're using on import?

[09/02/94 public]

SYSTEM:         AT486
HOST:           mudslide, sif
TEST:           core dcecp smoketest

COREFILES:      none

Additional info from todays dcecp tests

output from sif:/u1/RAT_tools/do_automatic_test.log

invoking dcecp smoke test
Unknown component
dcecp returned value is: LOG
DONE

output from sif:/u1/RAT_tools/dcecp.out

RPC
CDS
PGO
ACL
LOG

SYSTEM:         RIOS
HOST:           mudslide
TEST:           core smoketest


COREFILES:      none

contents of  mudslide:/u1/RAT_tools/dcecp.out

RPC
CDS
PGO
ACL
LOG

contents of do_automatic_test.log

invoking dcecp smoke test
Bad routing specification
dcecp returned value is: LOG
DONE

[9/2/94 public]
Rich, you ask if the "is an object uuid exported that you're using on
import".  For svc there are no objects to export or import, are there?
Just the interface UUID.
Could that be the problem?  I checked a few servers.  dced calls
rpc_ns_binding_export() with object_uuid_vec=NULL. Others do not (tho
I can't tell with a quick look what object they are specifying.

[9/2/94 public]
It's something in DCED.  We tried deleting the EP entry for svc in dced.
Things worked fine after that.  (Test: do "log list /.:/hosts/xxx/cds-clerk"
a bunch of times.) I'll continue trying to narrow it down.

[09/02/94 public]
Mea culpa.

dced should have an object uuid for its SVC interface.
In epops.c, the line that says
	entry.object = uuid_g_nil_uuid;
should become
	entry.object = ep_object
The "export_to_namespace()" function will should look something like this:
{
	uuid_vector_t uv, *uvp;

	uv.count = 1; uv.uuid[0] = &ep_object;

	....
	do {
	    uvp = sp->ifspec == &serviceability_v1_0_s_ifspec ? &uv : NULL;
	    rpc_ep_register(*sp->ifspec, dced_bindings, uvp,
		(idl_char *)sp->annote, st);
and similar changes made in register_server and unregister_server.

[9/2/94 public]
Did as outlined above. (elusive little bugger, wasn't it...)



CR Number                     : 11975
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : secval FVT
Short Description             : Need new FVT for dced_secval_status() API
Reported Date                 : 8/31/94
Found in Baseline             : 1.1b16
Found Date                    : 8/31/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : secval_status.c others
Sensitivity                   : public

[8/31/94 public]

Need new FVT for dced_secval_status() API.  This API sets a boolean32
out param to TRUE or FALSE depending upon whether the secval service is
active.

[9/30/94 public]
Added new tests, made changes to allow running tests without TET.



CR Number                     : 11963
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : startup/shutdown
Short Description             : dced bindings are being exported only in bootstrap mode, but unexported at every shutdown.
Reported Date                 : 8/30/94
Found in Baseline             : 1.1b16
Found Date                    : 8/30/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : main.c epops.c
Sensitivity                   : public

[8/30/94 public]

The dced object bindings in the NS are being exported only during bootstrap
mode (which is only from dce_config) but being unexported at every
shutdown.  Therefore, after a clean shutdown and restart via rc.dce, the
dced objects will be unreachable.  

We should eether always export to namespace or not unexport when we shut
down.

This is not noticed often because we rarely shutdown cleanly.  The
Namespace is often unavailable at the time of the dced shutdown so the
unexport of the bindings fails.

[9/2/94 public]
Bindings always exported.  Submitted.



CR Number                     : 11954
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ept
Short Description             : dced goes into infinite loop
on dced object acl_edit operations (only with DG protocol)
Reported Date                 : 8/30/94
Found in Baseline             : 1.1b16
Found Date                    : 8/30/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/oeops.c
Sensitivity                   : public

[8/30/94 public]

dced spins when acl_edit is done on a dced object under the DG protocol.
Further info to follow....

[08/30/94 public]
Rob and I figured it out.  For CN resolution "local" EP entries were
added.  For DG forwarding, those local entries must be ignored.



CR Number                     : 11940
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : secval
Short Description             : Memory leak fix/code cleanup.
Reported Date                 : 8/29/94
Found in Baseline             : 1.1b16
Found Date                    : 8/29/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : sv_clientd.c
Sensitivity                   : public

[8/29/94 public]

The dced secval logic contains at least one memory leak which should
be patched.  When secval is deactivated, the mgmt threads are cancelled
but they are not joined or detached so the thread object is lost in
space.  

Also, there are a few questionable error handling branches which should be
trimmed for correctness.

[9/12/94 public]
Submitted.



CR Number                     : 11936
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11791
Project Name                  : dce
H/W Ref Platform              : rs6000,i486
S/W Ref Platform              : osf1,aix
Component Name                : dced
Subcomponent Name             : libdce
Short Description             : Undefined symbols _srvrexec_enable_service
Reported Date                 : 8/29/94
Found in Baseline             : 1.1
Found Date                    : 8/29/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : dced/api/register.c
Sensitivity                   : public

[8/29/94 public]
/project/dce/build/dce1.1-snap/tools/at386/macho/ld -R -export_default libdce:          -L/u1/devobj/sb/nb_486/export/at386/usr/shlib -L/project/dce/build/dce1.1-snap/export/at386/usr/shlib -L/usr/shlib -L/u1/devobj/sb/nb_486/export/at386/usr/lib     -L/project/dce/build/dce1.1-snap/export/at386/usr/lib   -o libdce.so.X libdce_1.o libdce_2.o libdce_3.o libdce_4.o  -lc -lbsd -liconv /project/dce/build/dce1.1-snap/tools/at386/macho/gnulib  
libdce_1.o: Undefined symbol "_srvrexec_enable_service" referenced
libdce_1.o: Undefined symbol "_srvrexec_disable_service" referenced

collect: /project/dce/build/dce1.1-snap/tools/at386/macho/real-ld returned 1 exit status
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1

[8/29/94 public]
Looks like a submission from this weekend that was missing a piece.
I commented out the calls to srvrexec_enable_service() and
srvrexec_disable_service() in api/register.c, just so it passes
the build.
(srvrexec_enable_service() and srvrexec_disable_service() are defined in
the server.  Not sure what the calls are doing in the api.  Rich is still
working on this area...)

[08/31/94 public]
John commented out the offending lines.  My replacing them by the right
lines is covered under 11791.  Closed.



CR Number                     : 11930
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : build
Short Description             : don't know how to make dced-postproc
Reported Date                 : 8/27/94
Found in Baseline             : 1.1b17
Found Date                    : 8/27/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/Makefile
Sensitivity                   : public

[8/27/94 public]
When John renamed dced-postproc to dcecf_postproc he missed one
change in the Makefile.

Directory /project/dce/build/nb_486/logs:

    /project/dce/build/nb_486/logs/install.log.08-26-94
     [ /admin/dced/server at 01:30 (AM) Saturday ]
     make: don't know how to make dced-postproc (continuing)
  Total errors seen in this log file:  1

[08/27/94 public]
Changed this:
	ILIST = ${PROGRAMS} ${SCRIPTS}

[08/30/94 public]
It builds.  Closing.



CR Number                     : 11896
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hd
Short Description             : entries for pe_site & route file
Reported Date                 : 8/25/94
Found in Baseline             : 1.1b16
Found Date                    : 8/25/94
Severity                      : D
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/{server/init.c,api/dced_data.*}
Sensitivity                   : public

[8/25/94 public]
dced should create hostdata entries for pe_site and the default
serviceability routing file the same way it does defaults for dce_cf.db,
et. al.

[8/26/94 public]
Added "svc_routing" and "pe_site" hostdata entries (created when dced is
initialized).

Friday afternoon jab at dcecp crew: Note that when viewing routing file with
"hostdata show svc_routing", there may be multiple spaces and things may not
line up. Don't waste your time reformatting this file.  :-)

[8/26/94 public]
Added writers to CC field, so they know what changed.



CR Number                     : 11895
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : sx
Short Description             : dced_fork() should take an argv, not just a prog name
Reported Date                 : 8/25/94
Found in Baseline             : 1.1b16
Found Date                    : 8/25/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/sxops.c
Sensitivity                   : public

[8/25/94 public]
dced_fork() should take an argv, not just a prog name.  This will allow
us to use one prog for the postprocessor for several hd entries.  Plus,
it's useful and flexible thing to have; others will surely want it.

[08/26/94 public]
So let it be requested; so let it be done.
Code submitted.



CR Number                     : 11877
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : test/admin/dced/ts/api/dtapi_utils.c
Short Description             : structure has no member
Reported Date                 : 8/25/94
Found in Baseline             : 1.1
Found Date                    : 8/25/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : dtapi_utils.c
Sensitivity                   : public

[8/25/94 public]
[ /test/admin/dced/ts/api at 03:26 (AM) Thursday ]
makepath api/. && cd api &&  exec make MAKEFILE_PASS=BASIC     build_all
api: created directory
/project/dce/build/dce1.1-snap/tools/at386/macho/gcc -B/project/dce/build/dce1.1-snap/tools/at386/macho/  -c    -D_SHARED_LIBRARIES       -I. -I/u1/devobj/sb/nb_486/src/test/admin/dced/ts/api -I/project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api   -I/u1/devobj/sb/nb_486/export/at386/usr/include -I/project/dce/build/dce1.1-snap/export/at386/usr/include   -pic-lib   -L/u1/devobj/sb/nb_486/export/at386/usr/shlib -L/project/dce/build/dce1.1-snap/export/at386/usr/shlib -L/usr/shlib -L/u1/devobj/sb/nb_486/export/at386/usr/lib     -L/project/dce/build/dce1.1-snap/export/at386/usr/lib    -ldce  -ltettcm -ltetapi    /project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api/secval_start.c
rm -f dtapi_1_srvr.h
/u1/devobj/sb/nb_486/tools/at386/bin/idl -cpp_cmd "/project/dce/build/dce1.1-snap/tools/at386/macho/cpp"     -keep c_source   -I/u1/devobj/sb/nb_486/export/at386/usr/include -I/project/dce/build/dce1.1-snap/export/at386/usr/include   -client none -server none /project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api/dtapi_1_srvr.idl
/project/dce/build/dce1.1-snap/tools/at386/macho/gcc -B/project/dce/build/dce1.1-snap/tools/at386/macho/  -c    -D_SHARED_LIBRARIES       -I. -I/u1/devobj/sb/nb_486/src/test/admin/dced/ts/api -I/project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api   -I/u1/devobj/sb/nb_486/export/at386/usr/include -I/project/dce/build/dce1.1-snap/export/at386/usr/include   -pic-lib   -L/u1/devobj/sb/nb_486/export/at386/usr/shlib -L/project/dce/build/dce1.1-snap/export/at386/usr/shlib -L/usr/shlib -L/u1/devobj/sb/nb_486/export/at386/usr/lib     -L/project/dce/build/dce1.1-snap/export/at386/usr/lib    -ldce  -ltettcm -ltetapi    /project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api/dtapi_utils.c
/project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api/dtapi_utils.c: In function `test_key_init':
/project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api/dtapi_utils.c:514: structure has no member named `transmit_rep'
*** Error code 1

[8/25/94 public]

removed the reference to the expunged member 'transmit_rep' of the
structure dced_key_t.

[8/26/94 public]
Works in nightly bld. Closed.



CR Number                     : 11840
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : xattrschema
Short Description             : dced rs_attr_schema_create_entry implementation need to validate the input schema_entry fields
Reported Date                 : 8/23/94
Found in Baseline             : 1.1b16
Found Date                    : 8/23/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : idl/dhd.sams server/asops.c server/asimpl.h
Sensitivity                   : public

[8/23/94 public]

This problem is a transient one. It happens only sometime. But the affect 
of this problem is severe. After creating an era, this era shows up as
garbage on screen and then no era can be created. 

dcecp> xattrschema create /.:/hosts/sanatan/config/xattrschema/testint1 -encoding integer -aclmgr {org r r r r}
dcecp> xattrschema catalog  /.:/hosts/sanatan/config/xattrschema
/.../nav_dcecp11/hosts/sanatan/config/xattrschema/hostdata/filecontents
/.../nav_dcecp11/hosts/sanatan/config/xattrschema/testint1@20
/.../nav_dcecp11/hosts/sanatan/config/xattrschema/hostdata/bincontents
/.../nav_dcecp11/hosts/sanatan/config/xattrschema/xattrschema/dtsconfig
/.../nav_dcecp11/hosts/sanatan/config/xattrschema/xattrschema/additional_environ
dcecp> xattrschema show  /.:/hosts/sanatan/config/xattrschema/testint1
Error: Key not found in database

[8/23/94 public]
Nav, can you please send me your schema_entry so that I can create
this entry by my test (which will bypass dcecp) and can figure out
where the problem lies. Thanks much.

[8/23/94 public]
Nav, can you please check if the resolved schema entry name "testint1" 
is null-terminated when you parse your input name
"/.:/hosts/sanatan/config/xattrschema/testint1".

[8/25/94 public]
I can not reproduce it,
dcecp> xattrschema cr /.:/hosts/foster/config/xattrschema/testint1 -encoding integer -aclmgr {org r r r r}
dcecp> xattrschema cata  /.:/hosts/foster/config/xattrschema 
/.../foster_cell/hosts/foster/config/xattrschema/hostdata/data
/.../foster_cell/hosts/foster/config/xattrschema/testint1
/.../foster_cell/hosts/foster/config/xattrschema/hostdata/bindata
/.../foster_cell/hosts/foster/config/xattrschema/xattrschema/dtsconfig
/.../foster_cell/hosts/foster/config/xattrschema/xattrschema/additional_environ
dcecp> xattrschema show /.../foster_cell/hosts/foster/config/xattrschema/testint1
{aclmgr {org {{query r} {update r} {test r} {delete r}}}}
{annotation {{applydefs no}
{encoding integer}
{intercell reject}
{multivalued yes}
{reserved no}
{scope {{trigbind {}}
{trigtype none}
{unique no}
{uuid 00000000-0000-0000-0000-000000000000}

[8/25/94 public]
I agree that we do not anymore see weird characters for the era created, but I 
still cannot create anymore eras after creating the first one. And to do any tests
I have to re-configure DCE and then do dce.clean and rc.dce to create an era again:
dcecp> xattrschema cata /.:/hosts/sanatan/config/xattrschema
/.../nav_dcecp/hosts/sanatan/config/xattrschema/hostdata/filecontents
/.../nav_dcecp/hosts/sanatan/config/xattrschema/somejunk4
/.../nav_dcecp/hosts/sanatan/config/xattrschema/hostdata/bincontents
/.../nav_dcecp/hosts/sanatan/config/xattrschema/xattrschema/dtsconfig
/.../nav_dcecp/hosts/sanatan/config/xattrschema/xattrschema/additional_environ
dcecp> xattrschema cr /.:/hosts/sanatan/config/xattrschema/somejunk5 -encoding integer -aclmgr {org r r r r}
Error: Cannot create object; already exists
dcecp> schema show /.:/hosts/sanatan/config/xattrschema/somejunk4
Error: invalid command name "schema"
dcecp> xattrschema show /.:/hosts/sanatan/config/xattrschema/somejunk4
{scope {org {{query r} {update r} {test r} {delete r}}}}
{Only full or simple names are allowed. {{unlimited no}
{trigbind integer}
{none reject}
{Invalid attribute or policy value. no}
{Invalid attribute. Attribute is illegal in this syntax no}
{nopolicy {{now {}}
{effective none}
{annotation no}
{trigtype 00000000-0000-0000-0000-000000000000}
dcecp> xattrschema cr /.:/hosts/sanatan/config/xattrschema/otherjunk1 -encoding integer -aclmgr {org r r r r}
Error: Cannot create object; already exists

[8/30/94 public]
The problem Nav has is the att_id in the schema_entry to be created
is nil uuid and server operation desn't check and create it if nil,
so that second request is denied because the attr_id( nil) is already
exists.  However the problem is a bit beyond this, server op should 
also validate each field of the schema_entry to be created and reject 
the request if any invalidated field is found, the implementation in 
/project/dce/build/dce1.1/src/security/server/rs/rs_attr_schema.c may
be a good reference.

[9/8/94 public]
The fix is submitted. Jim and Nav may have modify your tests if your tests
are targeted on dced, as well as your dcecp schema code because now dced 
checks fields of schema_entry to be created and only object in dced which 
allows you to create schema entry is srvrconf object so that 
'-aclmgr {org r r r r}' stuff will NOT work any more (org is referring to 
org acl_mgr_type in security). Now you need to find out the dced srvrconf
acl_mgr_type by daclif i/f. (Julie knows how to use the i/f)



CR Number                     : 11833
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server
Short Description             : doesn't print a usage message.
Reported Date                 : 8/23/94
Found in Baseline             : 1.1b15
Found Date                    : 8/23/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/main.c
Sensitivity                   : public

[8/23/94 public]

If you feed dced an invalid argument, or -help, or -usage, it doens't print
a usage message.

This isn't exactly user-friendly.

Fix: replace the exit(1) in parse_args() to a call to a usage() function to
print a usage message.

[8/25/94 public]
Now prints a usage message with "-h" or any unknown option.
(Note: we use getopt().)

Fixed yesterday, and last night's build is happy with it.  Closed.



CR Number                     : 11829
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : test/admin/dced
Short Description             : common API tests associated
with key tab functionality fail.
Reported Date                 : 8/23/94
Found in Baseline             : 1.1
Found Date                    : 8/23/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : list_get.c, entry_get_next.c, object_read_all.c
Sensitivity                   : public

[8/23/94 public]
The follwoing assertions - 
dced_list_get_4, dced_entry_get_next_4, dced_object_read_all_4 fail.
Output is not properly verified.

[8/24/94 public]
Submitted and verified the changes.



CR Number                     : 11811
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11954
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced spinning during DCDREL003
Reported Date                 : 8/22/94
Found in Baseline             : 1.1b15
Found Date                    : 8/22/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/oeops.c
Sensitivity                   : public

[8/22/94 public]

Running DCDREL003 on the HP-UX node dce2 resulted in the
test hanging. This has been occuring for some time, but I
believed it to be covered by CR 11567. Since that CR has
been closed, I'm opening this as a separate CR. 

dced on dce2 appears to be spinning- its rapidly accumulating
cpu time, cdscp show dir /.: hangs, and the test hangs.

[8/22/94 public]

This same problem occurred on an OSF/1 node in a subsequent
test run. In this case, dced was running under gdb and 
got "stuck" after printing

RESOLVE match (obj): hostdata, type=1
RESOLVE match (obj): hostdata, type=1
ENTER: hostdata_get_list

[8/22/94 public]
OK, how about this (just to narrow it down)?  Try it using CN-only and
DG-only. (setenv RPC_SUPPORTED_PROTSEQS whatever" - I think you can just set
that in the client).  That spinning was occuring only with DG earlier this
month...

[08/30/94 public]
I am going to mark this as "fix"  We believe that this is a dup of
11954 which is about to have a fix submitted.



CR Number                     : 11799
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : api
Short Description             : illegal declaration
Reported Date                 : 8/22/94
Found in Baseline             : 1.1
Found Date                    : 8/22/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : dced/server/api/{dced.h,dce_server_sec.c}
Sensitivity                   : public

[8/22/94 public]

c89 -c    -D_SHARED_LIBRARIES    -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u3/devobj/sb/nb_ux/src/test/admin/dced/ts/api -I/project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api   -I/u3/devobj/sb/nb_ux/export/hp800/usr/include -I/project/dce/build/dce1.1-snap/export/hp800/usr/include    /project/dce/build/dce1.1-snap/src/test/admin/dced/ts/api/dtapi_utils.c
pthread_exc.h: 212: warning- Redefinition of macro pthread_cleanup_pop.
pthread_exc.h: 233: warning- Redefinition of macro pthread_getunique_np.
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 404: error 1713: Illegal redeclaration for identifier "pthread_key_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 406: error 1713: Illegal redeclaration for identifier "pthread_addr_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 410: error 1713: Illegal redeclaration for identifier "any_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 412: error 1713: Illegal redeclaration for identifier "pthread_cleanup_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 422: error 1713: Illegal redeclaration for identifier "pthread_once_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 441: error 1713: Illegal redeclaration for identifier "pthread_attr_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 460: error 1713: Illegal redeclaration for identifier "pthread_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 461: error 1713: Illegal redeclaration for identifier "pthread_startroutine_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 465: error 1713: Illegal redeclaration for identifier "pthread_func_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 604: error 1713: Illegal redeclaration for identifier "pthread_mutexattr_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 605: error 1713: Illegal redeclaration for identifier "pthread_mutex_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 632: error 1713: Illegal redeclaration for identifier "pthread_condattr_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 633: error 1713: Illegal redeclaration for identifier "pthread_cond_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 672: error 1713: Illegal redeclaration for identifier "pthread_initroutine_t".
cc: "/u3/devobj/sb/nb_ux/export/hp800/usr/include/dce/pthread_exc.h", line 680: error 1713: Illegal redeclaration for identifier "pthread_destructor_t".
*** Error code 1

[8/22/94 public]

No code has chnaged in this directory - let me see if any other 
changes are causing this problem.

[8/22/94 public]
CHanged the API os dce_server_sec_begin() and _end() to not pass
login context and thread handle since it's not really needed.
Hence, the #include for those are not needed, fixing the above problem.

[08/23/94 public]
I didn't create the bug nor fix it; credit where it's due...

[8/23/94 public]
NB and smoketests are happy, and so am I.  Closed.



CR Number                     : 11795
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : dced
Short Description             : dced failed to start.
Reported Date                 : 8/21/94
Found in Baseline             : 1.1
Found Date                    : 8/21/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : dced/server/init.c
Sensitivity                   : public

[8/21/94 public]

Using, nightly build of 8/20 installed the sec and cds server. During cell
configuration using dce_config getting the following error:

S:****** Initializing dced...
./dce_config: 3154 Memory fault - core dumped
ERROR:   dced -i failed to start.

Here is dce_config.log info:

S:****** Initializing dced...
D:         Executing: dced -i || { err_exit "dced -i failed to start."; }
DEBUG:     Executing: err_exit(dced -i failed to start.)
ERROR:   dced -i failed to start

[8/22/94 public]
I just installed and config'ed last night's (Sun) build on a 486, installing
sec and cds.  No problem at all with DCED.  (The problem I had was secd
dumping core.)  Can you give any more details?  What platform?

Smoketests from last night passed.  I'll cancel this if I you find that
the problem does can not be reproduced...

[8/22/94 public]
There was indeed a bug.  A new field was not being initialized in srvrconf_init.

[8/23/94 public]
Passes NB and smoke.  Closing.



CR Number                     : 11791
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : implement dce_server_XXX convenience functions
Reported Date                 : 8/20/94
Found in Baseline             : 1.1b14
Found Date                    : 8/20/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/api/*
Sensitivity                   : public

[8/20/94 public]
Implement the dce_server_xxx() convenience functions, listed in the RFC:
	dce_server_inq_uuids(), dce_server_inq_attr()
	dce_server_sec_begin(), dce_server_sec_done()
	dce_server_register(),  dce_server_unregister()
	dce_server_enable_if(), dce_server_disable_if()
	dce_server_inq_server()

[8/24/94 public]
Update: Code for these is in: dce_server_inq_uuids(), dce_server_inq_attr(),
dce_server_sec_begin(), dce_server_sec_done(), dce_server_inq_server(). 
sxops.c and scops.c do adjusted to correcly (hopefully) reap child processes
(servers) that have exited.  More testing should be done, of course, but that
is better left untill the rest of the code is in.

[08/26/94 public]
dce_server_register and unregister are done.  enable/disable remain.

[09/06/94 public]
Done.  See OT CR 12061 for known defect.



CR Number                     : 11773
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : api
Short Description             : expunge transmit_rep and key encrypt code and structures
Reported Date                 : 8/19/94
Found in Baseline             : 1.1b14
Found Date                    : 8/19/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/*/*
Sensitivity                   : public

[8/19/94 public]
All the needed include files for needed by dced.h are not being installed. 
You must be able build DCE apps OUTSIDE of a sandbox.  Here's an easy test:

    % cat xxx.c
    #include <dce/dce.h>
    #include <dce/dced.h>
    main() { }
    % cc xxx.c
    In file included from /usr/include/dce/dced.h:72, from xxx.c:2:
    /usr/include/dce/dced_base.h:19: dce/rsbase.h: No such file or directory
    %

So, rsbase.h (and maybe .idl) should be installed (listed in ILIST) from
security/idl, or whatever.  Maybe others as well.

[8/20/94 public]
The problem is that our dced_base.idl imports the rsbase.idl which is
only exported and not installed. This import is for the rs_acct_key_transmit_t
appeared in dced_key_t. There seems to be the following choices,
1) Merge the pointers sec_passwd_rec_t and rs_acct_key_transmit_t into
   one and void type *keydata, i.e. void  *keydata. In api and server code
   it can be casted accordingly.
2) Since we do not need the rs_acct_key_transmit_t thing anymore, why
   don't we get rid of it entirely.
3) Ask for installing rsbase.{idl,h}, but this seems not right thing to do.

Both 1) and 2) may involve considerable amount of work.

Comments, ideas?

[08/23/94 public]
We all agree that #2 is the right thing to do; John will do it.

[8/25/94 public]
Fixed yesterday. Nightly build was happy with it. Closed.

John S, if you use this nightly bld, you should not see your include
problems.



CR Number                     : 11728
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : admin/dced/server/copy.c
Short Description             : Argument #3 is not the correct type
Reported Date                 : 8/17/94
Found in Baseline             : 1.1
Found Date                    : 8/17/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : admin/dced/server/copy.c
Sensitivity                   : public

[8/17/94 public]
c89 -c    -D_SHARED_LIBRARIES -g  +w1 -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp\
9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/\
u3/devobj/sb/nb_ux/src/admin/dced/server -I/project/dce/build/dce1.1-snap/src/a\
dmin/dced/server  -I. -I/u3/devobj/sb/nb_ux/src/admin/dced/server -I/project/dc\
e/build/dce1.1-snap/src/admin/dced/server -I../idl -I/u3/devobj/sb/nb_ux/src/ad\
min/dced/idl -I/project/dce/build/dce1.1-snap/src/admin/dced/idl -I../api -I/u3\
/devobj/sb/nb_ux/src/admin/dced/api -I/project/dce/build/dce1.1-snap/src/admin/\
dced/api -I../../../rpc/runtime -I/u3/devobj/sb/nb_ux/src/rpc/runtime -I/projec\
t/dce/build/dce1.1-snap/src/rpc/runtime -I../../../rpc/runtime/HP800 -I/u3/devo\
bj/sb/nb_ux/src/rpc/runtime/HP800 -I/project/dce/build/dce1.1-snap/src/rpc/runt\
ime/HP800 -I../../../security/h -I/u3/devobj/sb/nb_ux/src/security/h -I/project\/dce/build/dce1.1-snap/src/security/h -I../../../security/idl -I/u3/devobj/sb/n\
b_ux/src/security/idl -I/project/dce/build/dce1.1-snap/src/security/idl -I/u3/d\
evobj/sb/nb_ux/export/hp800/usr/include -I/project/dce/build/dce1.1-snap/export\
/hp800/usr/include    /project/dce/build/dce1.1-snap/src/admin/dced/server/copy\
.c
cc: "/project/dce/build/dce1.1-snap/src/admin/dced/server/copy.c", line 154: er\
ror 1621: Too few arguments for "sec_attr_util_alloc_copy".
cc: "/project/dce/build/dce1.1-snap/src/admin/dced/server/copy.c", line 155: wa\
rning 604: Pointers are not assignment-compatible.
cc: "/project/dce/build/dce1.1-snap/src/admin/dced/server/copy.c", line 155: wa\
rning 563: Argument #1 is not the correct type.
cc: "/project/dce/build/dce1.1-snap/src/admin/dced/server/copy.c", line 155: wa\
rning 604: Pointers are not assignment-compatible.
cc: "/project/dce/build/dce1.1-snap/src/admin/dced/server/copy.c", line 155: wa\
rning 563: Argument #3 is not the correct type.
*** Error code 1

[8/17/94 public]
More like "wrong number of args" being passed to sec_attr_util_alloc_copy().
sec_attr_util_alloc_copy() (which is in ./security/idl/sec_attr_util.idl)
changed last night.  The dce code was anticipating the change - the extra
param was there, but commented out.

Easy to fix.

[8/18/94 public]
Nightly build happy. Closed.



CR Number                     : 11726
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : bootstrap
Short Description             : dced bootstrap should gracefully start up remaining dced services as soon as it can
Reported Date                 : 8/16/94
Found in Baseline             : 1.1b14
Found Date                    : 8/16/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : main.c misc.c acls.c etc
Sensitivity                   : public

[8/16/94 public]

dced bootstrap should not require process to be stoppped and restarted in
order to get remaining dced services up and running.
(The -b flag may go away in this process.)

[8/24/94 public]
Submitted.  The -b flag is still in place for use when started during the
config process.



CR Number                     : 11725
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 6317,6373
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced should use serviceability
Reported Date                 : 8/16/94
Found in Baseline             : 1.1b14
Found Date                    : 8/16/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b20
Affected File(s)              : admin/dced/server/*
Sensitivity                   : public

[8/16/94 public]
DCED should use serviceability.  It just used dce_printf() now.
(This CR is sort of a handle for those submissions...)

[8/31/94 public]
Progress update: a lot of the work is done, including doing the
remote interface.

Reminder (for me): change is_for_me() to also check svc interface
(along with ACL ones).

[09/17/94 public]
Almost all files done now -- on ep* and oe* remain.

[09/26/94 public]
Did lock.c and oeops.c.  Closing this.  It's possible to add more checking
(every other line could be a check) but I think we've met the spirit now.



CR Number                     : 11724
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : llbd support in dced broken
Reported Date                 : 8/16/94
Found in Baseline             : 1.1b13
Found Date                    : 
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : admin/dced/server/lbops.c
Sensitivity                   : public
                              : 8/16/94

[8/16/94 public]
I found this trying to use the ncs version of bank on a RIOS using
BL13.  I have done little investigation, and will try against BL14
ASAP.  The bank code worked properly in a ncs only environment.

Using dced instead of llbd, I get the error "Unable to register" from ncs.

I'll append more info as I find it.

[8/17/94 public]

Tried the same test on a 1.0.3 RIOS machine using RPCD and the test
ran fine.  Reran on BL13, still failing.  A bit of a correction of hte 
error code however.  The bankd is getting an error code of "Unable to 
locate broker" or something very similar to that.  The problem is that 
dced is not responding to the request of ncs to register the application
endpoint.

I will debug and add more info.

[08/26/94 public]
NCS support is in the "would be nice to have" category.
Lowering this to below the required-for-1.1 priority.

[10/04/94 public]
While fixing OT CR 12485 I found what I believe is the cause of this bug
and submitted the fix.  IBM will try to test; being optimistic I'm marking
this fixed.

[10/26/94 public]
Further optimism; marking closed.  As far as OSF is concerned, it is.



CR Number                     : 11711
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : dhd
Short Description             : hostdata/filecontents -> data
Reported Date                 : 8/15/94
Found in Baseline             : 1.1
Found Date                    : 8/15/94
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : api/dced_data.h idl/dced_base.idl
Sensitivity                   : public

[8/15/94 public]
  dcecp> hostdata show dce_cf.db
  {uuid 002c7cdf-4301-1d77-af44-0000c09ce054}
  {annotation  {DCE name config file}}
  {storage /opt/dcelocal/dce_cf.db}
  {hostdata/filecontents
   {cellname  /.../absolut_cell}
   {hostname  hosts/absolut}}

The attribute named "hostdata/filecontents" should be named "data".  So the
output should look like:

  dcecp> hostdata show dce_cf.db
  {uuid 002c7cdf-4301-1d77-af44-0000c09ce054}
  {annotation  {DCE name config file}}
  {storage /opt/dcelocal/dce_cf.db}
  {data
   {cellname  /.../absolut_cell}
   {hostname  hosts/absolut}}

This might apply to keytab output as well.

Also the -binary output which current looks like:

  dcecp> hostdata show dce_cf.db -binary
  {uuid 002c7cdf-4301-1d77-af44-0000c09ce054}
  {annotation  {DCE name config file}}
  {storage /opt/dcelocal/dce_cf.db}
  {hostdata/bincontents \x63\x65\x6c\x6c\x6e\x61\x6d\x65\
  \x20\x20\x2f\x2e\x2e\x2e\x2f\x61\x62\x73\x6f\x6c\x75\
  \x74\x5f\x63\x65\x6c\x6c\x0a\x68\x6f\x73\x74\x6e\x61\
  \x6d\x65\x20\x20\x68\x6f\x73\x74\x73\x2f\x61\x62\x73\
  \x6f\x6c\x75\x74\x0a}

should look like:

  dcecp> hostdata show dce_cf.db -binary
  {uuid 002c7cdf-4301-1d77-af44-0000c09ce054}
  {annotation  {DCE name config file}}
  {storage /opt/dcelocal/dce_cf.db}
  {data 
   {63 65 6c 6c 6e 61 6d 65 20 20 2f 2e 2e 2e 2f 61 62 73 6f 6c 75 
    74 5f 63 65 6c 6c 0a 68 6f 73 74 6e 61 6d 65 20 20 68 6f 73 74 
    73 2f 61 62 73 6f 6c 75 74 0a}}

I made this a Priority 1 as I'm starting to write scripts that will have to
search the output of these commands for info.  The name of the attribute
changing to data is most important, the format of the binary output is
certainly lower priority.

[8/15/94 public]
The hostdata/file[bin]contents is attribute name defined in dced
xattrschema entry and I don't have control over it unless you want
me to hardcode it as "data". One another way to change it is thr 
dcecp schema or xattrschema object.

[8/22/94 public]
Changed to Rich and dced.
The names should be "data" and "bindata"

[08/22/94 public]
Did a s/filecontents/data/ and s/bincontents/bindata/
Submitted.

[08/27/94 public]
Closed.  If Howard changes his mind about hostdata/data and hostdata/bindata
he can re-open and we'll try to accomodate him. :-)



CR Number                     : 11705
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : post_processors
Short Description             : post_processors need to be completed
Reported Date                 : 8/15/94
Found in Baseline             : 1.1b14
Found Date                    : 8/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/server/{init.c,dcecf_postproc}
Sensitivity                   : public

[8/15/94 public]
Trying to change the host_name generates no error but does seem to succeed.

  dcecp> h s $n/host_name                       
  {uuid 00050065-6eca-1d6a-894b-0000c09ce054}
  {annotation  {Name of host}}
  {storage host_name}
  {hostdata/filecontents {hosts/absolut}}
  dcecp> h m $n/host_name  -data {hosts/kurant}
  dcecp> h s $n/host_name                       
  {uuid 00050065-6eca-1d6a-894b-0000c09ce054}
  {annotation  {Name of host}}
  {storage host_name}
  {hostdata/filecontents {hosts/absolut}}

And the above has no effect on the dce_cf.db file.

[8/15/94 public]
The dcecp part is correct, but the change is not propagated to dce_cf.db
since the post_processors are not completed yet.

[8/15/94 public]
I wrote a program (shell script) to do this a while ago, but have not
installed it anywhere.  Steps to do:
	put it in the src tree (with dced?)
	pick a place to install it (/opt/dcelocal/bin OK?)
	put the appropriate lines in the post_processors file itself
	    (uuid-prog name pairs)
	enjoy it :-)

[8/25/94 public]
"dced-postproc" is now checked in and set to be installed in
/opt/dcelocal/bin. Left to do:
 1) Set up the post_processors file file itself with the UUID-program mappings.
    Perhaps while configuring the machine?
	00174f6c-6eca-1d6a-bf90-0000c09ce054 dced-postproc cell_name
	00050065-6eca-1d6a-894b-0000c09ce054 dced-postproc host_name
	002817df-6eca-1d6a-b08a-0000c09ce054 dced-postproc cell_aliases
 2) Be sure DCED can access "dced-postproc".  May have to access it by
    full pathname.
 3) Fix dced_fork() to allow args. [CR 11895]
 4) Beat on it a bit to be sure it all works.

[08/26/94 public]
dced-postproc is a horrid name.  All post-processor programs could have it.
Perhaps dcecf_postproc?

[9/6/94 public]
Implemented all the right stuff.



CR Number                     : 11656
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : secval
Short Description             : turn on secval by default
Reported Date                 : 8/11/94
Found in Baseline             : 1.1b14
Found Date                    : 8/11/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : dced/server/sv_client.c, others
Sensitivity                   : public

[8/11/94 public]
secval should be run by default, not sec_clientd.  This will involve some
dce_config changes, and some misc cleanup inside dced.

[8/12/94 public]
Also, clean up some of the code to meet the coding style guidelines.



CR Number                     : 11619
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced core dumped while running rtandidl tests
Reported Date                 : 8/9/94
Found in Baseline             : 1.1b14
Found Date                    : 8/9/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : admin/dced/server/oemisc.c
Sensitivity                   : public

[8/9/94 public]

I was running the rtandidl rpc functional tests (all_mgmt.tsh)
on the HP and dced took a vacation.

Here is the trace:
 0 memcpy@libc + 0x00000008 (hp-ux export stub)
 1 TMEM@libdce + 0x001117ec (0x4, 0x400d1560, 0x400d14ac, 0x40341470)
 2 TMEM@libdce + 0x00119c84 (0x4, 0x400d14e0, 0x400d14ac, 0)
 3 ping_server (ep = 0x403bab48, timeout = 3, status = 0x400d14ac)    [/project/dce/build/dce1.1-snap/src/admin/dced/server/oeops.c: 327]
 4 ep_sliv_task1 (arg = 0x400104c8)    [/project/dce/build/dce1.1-snap/src/admin/dced/server/oeops.c: 383]
 5 TMEM@libdce + 0x000d10cc (0x40020340, 0, 0, 0)

...

The core file is in ~tom/core.dced, at least for a little while
(it takes up 6 meg!).

[8/9/94 public]
I'm downgrading the priority, since Tom can not reproduce it.

[08/27/94 public]
Have you tried to reproduce this lately?  Can we cancel?

[8/29/94 public]
As soon as we get a good build this week, I am planning on running
all the rpc functional tests, and I will give priority to rtandidl.

[9/1/94 public]
I ran the tests, and dced stayed up.
This does not conclusively prove there isn't a stress related bug here...

[09/06/94 public]
No, but systest has plenty of opportunity (and motive :-) to find
stress-related bugs.  Marking fixed.
(FYI, there were some fundamental changes in the compat stuff
during the few days before and after this CR was created.)



CR Number                     : 11567
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server
Short Description             : "hostdata cat" hoses dced
Reported Date                 : 8/5/94
Found in Baseline             : 1.1b14
Found Date                    : 8/5/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : admin/dced/server/{epops.c,oeops.c,oeimpl.h}
Sensitivity                   : public

[8/5/94 public]
Running "hostdata cat" (from dcecp) as unauthenticated will often sort of
"sticks" dced.  (It's not quite hung.)  You can still do "endpoint show",
but it takes longer than it should, so it's not completely hung.  Before
running the hostdata cmd, "endpoint show" is as fast as it should be.  Once
stuck, the error reported is "Error: communications failure".

When "hostdata cat" sticks, it is not in the server side of the RPC, since
if you run "dced -d" (be sure you're in /opt/dcelocal/var/dced first),
it prints "ENTER: hostdata_get_list" when it arrives at that call.  You
don't see it when it fails.  (ie, fails before it gets there)  I can't tell
if it's happening during binding, authentication, or what. 

The only way I see out of this, is to restart dce on your machine.

I assigned this to dced/api, since I think that's the first place to look
for the problem.

[8/5/94 public]
More info: I have a test application that invokes the various dced
operations directly, without dcecp.  When I try hostdata_get_list(), it
hoses dced (tho the operation doesn't gets to the server.

It's not just the one operation in dced, hostdata_get_list().  That's
just a convenient one to do.  Others I've tried have the same result.

[08/06/94 public]
See if it makes a difference with RPC_SUPPORTED_PROTSEQS=ncadg_ip_udp or
RPC_SUPPORTED_PROTSEQS=ncacn_ip_tcp.

I think the following should be done, anyway:
	add db_entry_c_local to oeimpl.h
	Modify local_ep_register to turn on that flag.
	Modify the "sliv_task[12]" routines in oeops.c so that they
	skip over entries that are deleted or local.

[8/8/94 public]
Just some more info (I haven't done the above yet).  Once I do a hostdata
operation, dced get's "real busy", racking up CPU time. ("ps" command shows
this).  "kill" does not kill it.  I have to do "kill -9".

[8/8/94 public]
More info: When I setting RPC_SUPPORTED_PROTSEQS=ncacn_ip_tcp, I do not see the
above problems.  I several dozen hostdata commands on HP and 486, talking to the
same (local) machine, and to another machine in the cell.

When I use ncadg_ip_udp, I see the problem immediately.

[8/11/94 public]
In is_for_me() [used in DG forwarding; it determines that the DG is for a service
local to dced], there was a botched indirection when getting the ifspec.

[8/12/94 public]
I had several people try the nightly build. Works. Closing.



CR Number                     : 11506
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ep
Short Description             : multi-smoke test hung on cdsadv in dce_config
Reported Date                 : 8/1/94
Found in Baseline             : 1.1
Found Date                    : 8/1/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : admin/dced/server/oeops.c,oemisc.c,...
Sensitivity                   : public

[8/1/94 public]

Multi-cell smoke test hung in cdsadv as followed:

On budapest - hp800 platform, the dce_config.log says:

S:****** Starting cdsadv...
D:         Executing: cdsadv
D:         Executing: BIND_PE_SITE=1
DEBUG:     Executing: modify_rcfile(cdsadv)
V:         Successfully modified rcfile /etc/rc.dce for "cdsadv"
DEBUG:     Executing: dcelogin (from config_cdsclient)
DEBUG:     Executing: dcelogin()
V:         Executing: dce_login_noexec cell_admin <password not shown>
           2>/tmp/login1517
...

It sits here for ages - one hours and was still waiting.

On sif - at386 platform, (the server where cdsd and secd was running),
both servers were there.  cdsd has a very large size though.

thanks
annie

[8/1/94 public]
I'm seeing a hang in single cell machines on both the 486 and hp. cdscp
commands do not come back and dce_login hung as long as I was willing to 
look at it - about 5 minutes. I'm told by John Rousseau that cdsd wasn't
growing in size but was gaining cpu cycles in the above smoke test. While
I'm waiting for dce_login to come back my cdsd is not spinning. The only
thing at all getting any time is cdsclerk and it doesn't seem to be gettin
any more than would be expected while trying to fulfill a request. After
doing a /etc/shutdown -f and then /etc/rc.dce the problems went away.
dce_login and cdscp commands work fine. I'll try another configure to
see if I can reproduce it. If its reproducable its something that came
in late last week.

[8/1/94 public]
Something very strange is going on. The second time I configured I did
not see the dce_login hang problem. I thought I'd try again so I ran
dce_shutdown. On the 486 evrything went away ok but on the hp dced didn't.
It didn't go with a sigterm either - I had to send a sig 9. I reconfigured
and evreything seems fine so I thought I'd check out intercell with the
work around procedure. I set up an intercell connection between a 486 single
machine cell and an hp single machine cell. The hp to 486 connection works 
ok both authenticated and unauthenticated but the 486 to hp  doesn't. I 
wanted to look at somethings with rgy_edit on the 486 so I did a local 
dce_login and attempted to bring up rgy_edit. It hangs.  I went to another 
window on the same machine to try a dce_login - it hangs. 

I haven't verified this but it seems everytime I get in a hung state and
run dce_shutdown -f I get an assertion failure from cma indicating that
dced is attempting to relock a fast mutex. When I restart the same cell
things work ok. I don't know if its related nor am I sure that there is
an 100% corralation.    

I'll get together with Rich in the morning and see what we can do to 
isolate the problem.

[8/2/94 public]
Just some points of info:  No security component changes (other than minor
test changes) have been submitted last week (between 7/26-7/29).

To get more info, when this starts to happen, set the ENV var:

  setenv DEBUG_SEC 5

and re-run dce_login, rgy_edit, etc.  This will spill lots of good info.
Note which routine it is hanging in.  I have seen the hang in the sec
routine ./security/client/rca/internal_binding.c:rca_site_bind_nsi(). (but
this was with a non-standard build with lots of unsubmitted SEC changes
so it doesn;t count yet. )  This routine makes a series of rpc_ns_() calls 
to (I believe) get a binding to a site (secd).

Left assigned to CDS but added Mike B.@hp to CC: list

[8/2/94 public]
If you're seeing multiple pieces of security hang like this, then it's a
pretty sure bet that they're hanging in an rpc_ns_ call to CDS (while trying
to bind to the security server) because CDS is hung.  One way to verify this
is to set the environment variable BIND_PE_SITE to 1 and try dce_login and/or
rgy_edit -v again and see if they work (this tells the binding code to use
the pe_site configuration file instead of CDS).  Then, once you've verified
that, do "cdscp show dir /.:" to verify that CDS is hung.  Changed the CC from
myself to dce-ot-sec in case anybody else here has info about CDS hanging.

[8/2/94 public]
John and I have been looking at this this afternoon.

Investigation seems to show that it is neither CDS of Security that
are hanging, rather it is dced which is not responding to a query
for an endpoint.

Observing dtscp with rpc debug output turned on, when it hangs, it has
established a connection with dced (port 135 at least), sent a BIND packet
and is waiting for a reply.

This seems to happen after dced has gone through and ping'd
all the entries in its endpoint database (every 10 minutes I believe)
which is consistant with the 'it works for a while and then stops'
behavior I have been seeing.  

Useing rpcd seems to make this hanging problem go away.

We have also seemed to have narrowed this problem down to submission from
Friday (7/29), of which there was both a dced and rpc nsi drop.

Rich has submitted some fixes today which may affect this problem
and I am building a new dced to see if the problem persists.

[8/3/94 public]
I think the reason I saw the hang with rpcd yesterday was that I was,
foolishly I might add, looking at intercell at the same time. Intercell under 
some circumstances apparently can exibit similar behavior. Before I left
last night I left a cell running rpcd  as well as one running dced.
The dced version got itself in the mystery state within minutes of comming
up. The rpcd version was behaving itself when I left and still is this morning.
I'm configuring both machines with last nights build to see if the problem
is gone as a result of Rich's submission yesterday.

[8/3/94 public]
While getting coffee both of the cells I configured got themselves into
the mystry state. We still believe its dced but the changes submitted 
yesterday apparently did not fix the problem. I'm assigning this to dced
for the time being.

[8/3/94 public]
Just to be clear.  John's two cells were dced cells.  It seems that running
rpcd as the endpoint map is a good work around and that the bug is in
dced's endpoint map service.

[8/4/94 public]
Rich Salz submitted EP code yesterday that fixed the problems outlined
above, using the nightly build.  John D ran the "killer" test, and Annie
reports that the multi-machine smoke tests pass.
Problem: there was a mutex (or more than one?) not being unlocked when
accessing EP tables.

This *seems* to have uncovered a new problem.  If you do "hostdata catalog"
(in dcecp, under the right circumstances), dced is hung.  (Smoke tests do
not do hostdata command.)  I'll open a separate CR for this.

[8/11/94 public]
Passed smoke test last few nights.  Closed.



CR Number                     : 11465
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : keytab
Short Description             : dced need create a entry for system default key file at initiation time
Reported Date                 : 7/27/94
Found in Baseline             : 1.1b12
Found Date                    : 7/27/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : admin/dced/server
Sensitivity                   : public

[7/27/94 public]
Dced oughts to creating a entry for the system default key file /krb5/v5srvtab
during 'dced -i" process. The best reason for this is that people can do
same thing as "kta -p name -pw passwd" and don't have to import the
default key file first.

[07/29/94 public]
at init time dced creates a keytab entry for the host principal with a
well-known uuid and the name "self" (full name /.:/hosts/foo/config/keytab/self)

[8/9/94 public]
It does the above now.  Closing.



CR Number                     : 11427
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : attr_schema
Short Description             : fix name of attr schema
Reported Date                 : 7/25/94
Found in Baseline             : 1.1b12
Found Date                    : 7/25/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : server/*idl,server/acls.c,idl/dhd.sams,api/dced_data.h
Sensitivity                   : public

[7/25/94 public]
It was decided that the standard name for attribute schemas is
xattrschema.  dced needs to be updated from attr_schema.

[07/25/94 public]
Submitted.

[07/29/94 public]
Built fine; closed.



CR Number                     : 11421
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : 64 bit porting changes
Reported Date                 : 7/25/94
Found in Baseline             : 1.1
Found Date                    : 7/25/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : admin/dced/server
Sensitivity                   : public

[7/25/94 public]

The following files needed to be modified to get dced to work on
the ALPHA: main.c, oeops.c, and sv_clientd.c.  The following is
a description of the changes:

    1. Do not use pthread_attr_default when creating threads.
       What I did was to create a new thread attribute with 
       a stack size of 64K and used this attribute instead
       of the default.

    2. Moved the calls to parse_args() and background() before
       any DCE calls are made.  This was needed because at the
       time of the fork() call, some RPC threads had been created
       and these threads are not cleaned up at the time of the
       fork().  When the child process went to make a RPC call,
       it hung because the RPC runtime was confused.

    3. In check_listener() I put a do-while around the call to
       rpc_server_inq_bindings() because this function can return
       a status of rpc_s_no_bindings and set bv to NULL.  The code
       would then try to access bv resulting in segmentation violation.

I have already provided Rich Salz with the diffs.

[07/29/94 public]
Code submitted that does the above.  Except for #1 you need to add
-DTHREAD_STACK_SIZE=xxxxx to the Makefile.  #2 and #3 are really general
portability fixes, thanks!

[08/01/94 public]
You need to initialize  thread_attr before calling background(). background()
uses this variable when creating the check_listener thread.

[08/01/94 public]
Since I don't want to call *any* threads funcs before fork(), I duplicated
the pthreads_attr_create login in background(), just before the pthread_create
call.  Make sense?

[08/02/94 public]
That will not work if someone wants to run dced in the foreground, the
background() function does not get called.  It should be safe to create
a thread attribute before forking a process.  I do not think the two
pthread calls you are making create any threads.

[08/26/94 public]
Noted, tnx.  Fixed a few days ago.  Closing.



CR Number                     : 11408
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12705, 12031
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : dced
Subcomponent Name             : 
Short Description             : Stale endpoints are not getting deleted
Reported Date                 : 7/23/94
Found in Baseline             : 1.1b11
Found Date                    : 7/23/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b18
Affected File(s)              : admin/dced/server/oeops.c
Sensitivity                   : public

[7/23/94 public]

dced needs to periodically remove stale endpoint entries, but does
not appear to be doing so. Entries appear to remain in the map
for more than 12 hours (perhaps indefinitely). This impacts 
performance of some rpc operations since it increases the 
likelihood that a number of invalid entries must be tried before 
a valid one is found.

[08/02/94 public]
things were always marked as deleted so they were never ping'd
(pung?)  fixed.

[8/16/94 public]
Stale endpoints continue to be left around 8 hours after running
DCDREL001 against BL14.0, so I'm moving this back to open.

[09/12/94 public]
Finally fixed.
	a &= deleted
is nothing at all like
	a |= deleted.

[9/22/94 public]
Sure it is - if you're south of the equator...

Works, closing.



CR Number                     : 11396
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : add entryname to server struct
Reported Date                 : 7/22/94
Found in Baseline             : 1.1b12
Found Date                    : 7/22/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : under dced
Sensitivity                   : public

[7/22/94 public]
The server structure needs an entryname field added to it as the service
struct has.  This will be used as the name of cds entry the server exports
to.  The service entryname field should remain but should be changed to
default to the value of the server struct's field if the service field is
not filled in.  This is for support in the dced server, another CR opened
for the changes to the api (any?) and dcecp code will be opened.

[8/18/94 public]
Made a defect so this doesn't get lost.  dcecp defect CR 11398 depends on
this CR.

[8/18/94 public]
Per Bob hathaway's request, it's assigned to me.

[08/23/94 public]
I changed the server, idl, and most of the API files.  There are three
lines in api/dced_server.c (marked with "PING DELETE ME") that Ping
will delete when he modifies the dcecp code.

[08/24/94 public]
Did what Rich asked and Marked this OT as fix

[8/25/94 public]
It's in and the nightly bld is please with it.  Closed.



CR Number                     : 11327
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10932
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : secval pre-authen
Short Description             : track fix of 10932
Reported Date                 : 7/15/94
Found in Baseline             : 1.1
Found Date                    : 7/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : admin/dced/server/sv_preauth.c
Sensitivity                   : public

[7/15/94 public]

dced secval needs to track 10932.  I think this is the on-line fix
I need to add...  right?
; bdiff -b -c sv_preauth.c 
./admin/dced/server/sv_preauth.c
Comparing the file in your sandbox with revision 1.1.2.4.
*** 1.1.2.4     1994/06/13 20:05:39
--- /u0/rcs_trees/dce/rcs/#odexm006876/sv_preauth.c     1994/07/15 18:41:40
***************
*** 171,177 ****

      /* Construct server principal name as "krbtgt/<user_cell>@<machine_cell>".
       * This allows intercell login to work. */
!     sec_krb_string_from_dce_pair(machine_cell, user_cell, &server_suffix, st);
      if (user_cell)
          free(user_cell);
      if (machine_cell)
--- 171,178 ----
  
      /* Construct server principal name as "krbtgt/<user_cell>@<machine_cell>".
       * This allows intercell login to work. */
!     sec_krb_tgtprinc_from_dce_cell_pair(machine_cell, user_cell,
!       &server_suffix, st);
      if (user_cell)
          free(user_cell);
      if (machine_cell)

[07/18/94 public]
Assuming this is the only fix needed in "user" code, closing this.

[07/29/94 public]
Built fine; closed.



CR Number                     : 11306
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : acl manager support
Short Description             : Modify all DCED ACL
manager names and helpstrings as described below.
Reported Date                 : 7/14/94
Found in Baseline             : 1.1b11
Found Date                    : 7/14/94
Severity                      : E
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : admin/dced/server/acls.c
Sensitivity                   : public

[7/14/94 public]

Old                New
--------------    -----------------------------------------
dced-mgmt         {dced          DCED server}
dced-managers     {container     DCED container ACLs}
srvrconf          {srvrconf      DCED server configuration object ACLs}
srvrexec          {srvrexec      DCED server execution object ACLs}
hostdata          {hostdata      DCED host data object ACLs}
rkeytab           {keytab        DCED key management object ACLs}
attr_schema       {xattrschema   DCED extended attribute schema object ACLs} 
secval            {secval        DCED security validation service}


______________________________________

BACKGROUND:
 A polymorphic object, as in DCE 1.1, can be a principal name and a 
 principal directory and therefore have 2 ACL managers. 

 In "dcecp", the ACL manager name can be obtained by invoking the
 "acl show -managers" command.  The other "acl" commands can
 accept a -type option to specify the manager name.  Previously, 
 this ACL manager name was really only informational and not visible
 to the end user, but now it is.

 Below, I have compiled a list of the ACL manager names and their 
 "helpstrings" that will be displayed to the user.

CDS ACL Managers:
    GDA managment ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-gda -managers
        {GDA              Change ACL for gda management}

    CDS Server Management ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-server -managers
        {CDS Server       Change ACL for server management}

    CDS Directory entry ACL manager:
        dcecp> acl show /.:/cell-profile -managers -entry
        {Directory entry  Change ACL for CDS directory entry}

    CDS Directory ACL manager:
        dcecp> acl show /.:/hosts -managers
        {Directory        Change ACL for CDS directory}

    CDS Clearinghouse ACL manager:
        dcecp> acl show /.:/<hostname>_ch -managers
        {Clearinghouse    Change ACL for CDS clearinghouse}

    CDS Clerk management ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-clerk -managers
        {CDS Clerk        Change ACL for clerk management}


Security ACL Managers:
    Security Directory ACL manager:
	dcecp> acl show /.:/sec/principal -managers
	dcecp> acl show /.:/sec/group -managers
	dcecp> acl show /.:/sec/org -managers
        {Sec Directory    Manage directory object acls.}

    Security Principal ACL manager:
        dcecp> acl show /.:/sec/principal/<name> -managers
        {Sec Principal    Manage principal object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/principal/<princ-dir-name> -managers
	{Sec Principal    Manage principal object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Group ACL manager:
        dcecp> acl show /.:/sec/group/<name> -managers
        {Sec Group        Manage group object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/group/<group-dir-name> -managers
	{Sec Group        Manage group object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Organization ACL manager:
        dcecp> acl show /.:/sec/org/<name> -managers
        {Sec Org          Manage org object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/org/<org-dir-name> -managers
	{Sec Org          Manage org object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Replica List ACL manager:
        dcecp> acl show /.:/sec/replist -managers
        {Sec Replist      Manage the replist object acl.}

    Security Policy ACL manager:
        dcecp> acl show /.:/sec/policy -managers
        {Sec Policy       Manage the policy object acl.}

    Security Extended Attribute Schema ACL manager:
        dcecp> acl show /.:/sec/xattrschema/<name> -managers
        {Sec Attr_schema  Manage the attr_schema object acl.}


DTS ACL manager:
    dcecp> acl show /.:/hosts/<hostname>/dts-entity -managers
    {dtsd             DTSD DCE Time Service daemon}


Auditing ACL manager:
    dcecp> acl show /.:/hosts/<hostname>/aud-acl -managers
    {audit            Audit daemon ACL manager}


DCED ACL managers:

    Generic ACL managers for DCED:
	dcecp> acl sh /.:/hosts/<hostname>/self -m
	dcecp> acl sh /.:/hosts/<hostname>/config -m
        {dced-mgmt        DCED manager}

        dcecp> acl show /.:/hosts/<hostname>/config/srvrconf -managers
        dcecp> acl show /.:/hosts/<hostname>/config/srvrexec -managers
	dcecp> acl show /.:/hosts/<hostname>/config/hostdata -managers
        dcecp> acl show /.:/hosts/<hostname>/config/keytab -managers
        dcecp> acl sh /.:/hosts/<hostname>/config/attr_schema -managers
        dcecp> acl show /.:/hosts/<hostname>/config/secval -managers
        {dced-managers    DCED manager Pseudo-object}

    Server configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/srvrconf/<name> -managers
        {srvrconf         Server Configuration}

    Server execution ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/srvrexec/<name> -managers
        {srvrexec         Server Execution}
    
    Hostdata configuration ACL managers:
        dcecp> acl show /.:/hosts/<hostname>/config/hostdata/<name> -managers
        {hostdata         Host Data}

    Keytab configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/keytab/<name> -managers
        {rkeytab          Key Management}

    Extended Attribute Schema configuration ACL manager:
        dcecp> acl sh /.:/hosts/<hostname>/config/xattrschema/<name> -managers
        {attr_schema      Attribute Schema}

    Secval configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/secval/<name> -managers
        {secval           Security Validation}


DFS ACL manager:
    dcecp> acl show /.:/fs/<name> -managers
    {DFS              DFS ACL manager}


Misc:
    dcecp> acl show <application-specific ACL object>  -managers
    {general          General ACL Manager}
    Note that there is nothing DCE ships that uses this ACL manager.
    This is part of the ACL manager library for application
    developers.

____________________________________________________________
NEW GUIDELINES FOR ACL MANAGER NAMES:

We would like to enforce guidelines for all DCE ACL
managers.  These are not architectural and dcecp will accept 
any valid ACL manager names, but we would like DCE-named ACL 
managers to be named consistently and in an easily
usable manner.  Since dcecp is what will make these names
visible to a user, we are using dcecp attribute naming
conventions:

ACL manager names for all of DCE must be:
1) lowercase
2) no underscores
3) no spaces
4) 16 bytes (sizeof "sec_acl_printstring_len").
5) Choose names similiar to object command names supported in
   dcecp wherever possible.
   For example, the ACL manager name "principal" refers to
   the object that contains registry information about principals;
   /.:/sec/principal.
   Note that dcecp will allow abbreviations. For example, a user
   can specify "org" for the ACL manager name "organization".
6) Names must be unique within a component's ACL manager but not
   within DCE. 
   For example, "xattrschema" can be used for a DCED Extended
   Attribute Configuration Schema ACL object and for a Security 
   Extended Registry Attribute Schema ACL object.
7) The helpstring for an ACL manager must specify the component
   that owns or manages the objects in questions, since this 
   information cannot always be derived from the ACL manager name.
____________________________________________________________
PROPOSAL:

Below are the current DCE ACL manager names/helpstrings and their 
proposed names/helpstrings following the above guidelines.

  Old names        New names/helpstrings
--------------    ---------------------------
GDA               {gda           Global Directory Agent server}
CDS Server        {cdsserver     Cell Directory Service server}
Directory entry   {entry         CDS namespace entry ACLs}
Directory         {directory     CDS directory ACLs}
Clearinghouse     {clearinghouse CDS clearinghouse ACLs}
CDS Clerk         {cdsclerk      Cell Directory Service clerk}
Sec Principal     {principal     Registry principal object ACLs}
Sec Directory     {secdirectory  Registry directory object ACLs}
Sec Group         {group         Registry group object ACLs}
Sec Org           {organization  Registry organization object ACLs}
Sec Replist       {replist       Registry replica list object ACL}
Sec Policy        {policy        Registry policy object ACL}
Sec Attr_schema   {xattrschema   Registry extended attribute schema object ACLs}
dtsd              {dts           Distributed Time Service server or clerk}
audit             {audit         Audit server}
dced-mgmt         {dced          DCED server}
dced-managers     {container     DCED container ACLs}
srvrconf          {srvrconf      DCED server configuration object ACLs}
srvrexec          {srvrexec      DCED server execution object ACLs}
hostdata          {hostdata      DCED host data object ACLs}
rkeytab           {keytab        DCED key management object ACLs}
attr_schema       {xattrschema   DCED extended attribute schema object ACLs} 
secval            {secval        DCED security validation service}
DFS               {dfs           Distributed File Service server}
general           {generic       Generic ACL server}

[07/29/94 public]
Names changed as requested.



CR Number                     : 11280
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : key mgmt
Short Description             : need access local keytab file
Reported Date                 : 7/13/94
Found in Baseline             : 1.1b11
Found Date                    : 7/13/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : dced/api/*, dcecp/dhd_keytab.c
Sensitivity                   : public

[7/13/94 public]
We need a way to access (create, read, write to) a local keytab file that
does *not* go through dced.  In other words, dcecp needs to do what rgy_edit
now does with its kt* commands, using the -f option.  (eg,
"ktadd -f my_keyfile ...")
(Supposd you needed to look at /krb5/v5srvtab while dced was not running...)

(These should be very easy to implement.)

[7/13/94 public]
Dcecp itself cannot access any local key file, it need to go thr either dced
or secd (i.e sec_key_mgmt interface). The rgy_edit's -f option can be realized
by keytab add/remove command if the file is exist otherwise by keytab create
command. As far as the default key file /krb5/v5srvtab is concerned, it may
be worth to have it listed as a default dced keytab object.  So I'm changing
this ot to dced.

[7/13/94 public]
We could add a -local (or something) option to the keytab commands to
behave as rgy_edit does and not use the dced interface.

[7/13/94 public]
Yes, we could, but why do we want to rename rgy_edit in this case?
will rgy_edit go away? I fell that dced has both local and remote
capabillity and it should be a transparent interface. And also you 
don't want two separate entities virtually handling same operations -):
dcecp keytab -local has local responsibility and dced has remote
responsibility?

[07/14/94 public]
I am not sure I agree with the original premise:  looking at keytabs
without dced is really not that important.  Sure dced may crash on
you, but we write code assuming that servers are up, generally.
Yes rgy_edit has a ktadd, etc., command set, but it is hard for me to see
that duping that code into dced is a worthwhile task for 1.1

[07/15/94 public]
(I think you meant dcecp in your last sentence.)

This was my reason for needing it: I wrote a test server that needed
a key file to run.  rpc_server_register_auth_info() wants a keytab file.
I used rgy_edit to create it.  dcecp could not.  Using dced is complete
overkill, since it was for a test.  (Yes, I could have written a C prog
to do sec_key_memt_add_key().)

I think being able to look at keytabs (without dced) makes some things
easier for program developement.  In a production env, there would be no
such need.

[7/18/94 public]
Reopened and set to D3, if we get to it great, if not, oh well.  Here's
the rationale.  In a normal app dev environment you can assume dced will
be running.  However, admin's could need access to the local keytab file
to fix the machine principal if dced is not running.  Given this, dcecp
should be able to do this.  No dcecp doesn't need to completely replace
rgy_edit in DCE 1.1, but we already do all other keytab stuff and the
only thing dcecp doesn't do is local registry, so this would be nice.

Since you really only need access to the machine principal, you only
need access to the default keytab file.  The UI will be calling keytab
without an argument will perform local access to the default keytab
file.  This follows the model of some other dcecp commands.

[7/19/94 public]
As agreed, John is going to implement local rkytab EPVs, and I am
going to change API to call local rkeytab EPVs if handle is NULL. And
then this OT goes to dcecp, I will implement '-local' of keytab object
option to realize the local bypass functionality. Any doc changes?

[7/28/94 public]
The dcecp host task script (host configure to be exact) is blocked on 
this functionality. I need to create the /krb5/v5svrtab file during
configuration. I will be willing to test any changes when they are
ready.

[7/28/94 public]
Added an EPV for "local" access.  To use it, do this in your code:
    extern rkeytab_v1_0_epv_t  dced_local_rkeytab_1_0_epv;
Ping, in your dcecp code, I guess you decide whether to use
dced_local_rkeytab_1_0_epv or the idl-generated one for communication
with DCED.

The local functions do NOT store dced_entries in a backing store.  Instead,
it keeps what you've "created" in memory.  That way, you can create a keytab
entry, then do a "list" to see if (if you forget the uuid).

Next step: Ping will adjust dcecp.  Should be fairly easy.

[8/4/94 public]
Made changes to dced api library to handle both local and remote
access to keytabs. Also added this functionality to dcecp (dced)
keytab cmds.



CR Number                     : 11215
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : dced
Subcomponent Name             : server
Short Description             : dced core dumps while creating
srvrconf object
Reported Date                 : 7/8/94
Found in Baseline             : 1.1
Found Date                    : 7/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : admin/dced/server/misc.c
Sensitivity                   : public

[7/8/94 public]
When trying to create and delete a server object with TWO services,
dced core dumps. This does not happen all the time. 
Found during the API testing. 
I could create the scenario using dcecp server create and dcecp server
delete commands.

Trace from the core file::
OSF version 1.0 created Mon Dec  7 14:40:14 1992

..
Core was generated by `dced'.
Program terminated with signal 11, Segmentation fault.
#0  0x406459 in hash_table_add (ht=0x430774, up=0x6109c8, value=0x5d8778, 
    st=0x5d8a90)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:815
815         bp->list[bp->count++] = *value;
(gdb) bt
#0  0x406459 in hash_table_add (ht=0x430774, up=0x6109c8, value=0x5d8778, 
    st=0x5d8a90)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:815
#1  0x406562 in srvr_hash_build (t=0x430dcc, ht=0x430774, st=0x5d8a90)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:853
#2  0x4054ec in srvr_add_to_table (t=0x430dcc, new=0x5d87f4, st=0x5d8a90)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:361
#3  0x40acf5 in srvrconf_create (h=0x601d20, server=0x5d8a94, st=0x5d8a90)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/scops.c:151
#4  0x421272 in op2_ssr (h=0x601d20, IDL_call_h=0x584a20,
IDL_elt_p=0x5d8e38, 
    IDL_drep_p=0x5d8e68, IDL_transfer_syntax_p=0xa447d7b8, 
    IDL_mgr_epv=0x42e66c, IDL_status_p=0x5d8e60) at srvrconf_sstub.c:1980
#5  0xa421c51a in acl_db ()
#6  0xa41d4488 in acl_db ()
#7  0xa41ac3db in acl_db ()
#8  0xa41b17cd in acl_db ()
#9  0xa41d42d8 in acl_db ()
#10 0x5f1648 in acl_db ()
Cannot access memory at address 0x2.
I just was creating lots of server objects with TWO services
using dcecp. dced core dumps randomly - some times first time
itself - other times after creating 8 or 9 objects with identical
stack trace.

[07/29/94 public]
Geez, you forget one assignment and the whole world blows up. :-)

[8/25/94 public]
Has worked for a while.  Closing.



CR Number                     : 11214
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : cmd
Short Description             : dced should allow unauthenticated access as default
Reported Date                 : 7/8/94
Found in Baseline             : 1.1
Found Date                    : 7/8/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : acls.c, dcecp/dhd_*.c
Sensitivity                   : public

[7/8/94 public]

Dced should allow unauthenticated access as default and dced cmd
should check user's login context and call dced_binding_set_auth_info
only if the user is dce_login-ed.

[07/08/94 public]
The dced server-side fix is to add an "unauthenticated" mask entry
that gives all rights.  I did this, Ping had tested it, and I'm about
to submit.  Removing my name; Ping can close when he's submitted
his half.

[07/08/94 public]
Submitted cmd part fixes and marked this ot as fix.

[8/9/94 public]
Fixed a while ago.  Closing.



CR Number                     : 11211
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : 'Entry not found' returned for
dcecp operations on dced object (hostdata, ktb)
Reported Date                 : 7/8/94
Found in Baseline             : 1.1
Found Date                    : 7/8/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : admin/dced/server
Sensitivity                   : public

[7/8/94 public]

NB from last couple of nights all exhibited saem behaviour.  Newly configed
cell, default dce_config including dced as EP map.  Using dcecp to access
dced objects results in:

wolfboy 2 --> dcecp
dcecp> hostdata cat
Error: entry not found
dcecp> keytab cat
Error: entry not found

[7/12/94 public]
FYI, On 486, a cell config-ed with rpcd and a dced which started with 
-e have dced bindings exported to namespace, but the same scenario on 
HP didn't have dced bindings exported. Sounds unreasonable.

[7/19/94 public]
In a cell configured with last night build and dced as default EP, 
dcecp hostdata cata works fine if setenv RPC_SUPPORTED_PROTSEQS ncadg_ip_udp
and fails if setenv RPC_SUPPORTED_PROTSEQS ncacn_ip_tcp

However, if I make the dced_binding_create() bypass rpc_binding_reset(),
it has not more dependency on RPC_SUPPORTED_PROTSEQS -) it works.
But dced_binding_from_rpc_binding() will still have the same problem.
Something is still missing.

[7/25/94 public]

This bug is blocking completion of the dced reliability system tests.
I've tried following Ping's suggestion to work around it by
making sure that dced is not running in bootstrap mode, and 
setting RPC_SUPPORTED_PROTSEQS=ncadg_ip_udp, without success.
I tried this on both a BL11 system and a system running last
night's nightly build.  Both return the "entry not found" error
for the "hostdata cat" command.

[7/26/94 public]
checkin-ed the change to not reset (rpc_binding_reset) a binding while 
creating a dced binding. This change should not address this bug, but it 
seems make some difference in some cases, so I just check it in.
.

[7/27/94 public]
This bug is blocking work on the dced system test DCDREL002, so
I'm bumping its priority to 0.

[07/29/94 public]
Fixed with today's submit.

[8/9/94 public]
Fix worked with the past few nightly blds.  Closed.



CR Number                     : 11201
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : keytab
Short Description             : keytab operations need packet privacy
Reported Date                 : 7/7/94
Found in Baseline             : 1.1b9
Found Date                    : 7/7/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : kmops.c,misc.c,main.c,dcedimpl.h
Sensitivity                   : public

[7/7/94 public]
dced's keytab operations should require (by default) packet-level
privacy.  Client sets this with rpc_binding_set_auth_info().
There should be a way to disable it on the command line.

[7/7/94 public]
Added new flag, privacy_required (set in parse_args()), and new function,
dced_privacy_ok(), called from each keytab operation.

[8/9/94 public]
Packet privacty works.  Closing.



CR Number                     : 11174
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11157
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : override
Short Description             : no locking
Reported Date                 : 7/5/94
Found in Baseline             : 1.1b10
Found Date                    : 7/5/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : admin/dced/server/sv_rover.c
Sensitivity                   : public

[7/5/94 public]

There is no locking of the override data strucures maintained by
sv_rover.c.  A recent code drop (OT CR 11157) added locking to
sec_clientd, but equivalent should be in dced.

[07/07/94 public]
Done. Closed.



CR Number                     : 11171
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11726
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server
Short Description             : Dced doesn't export the bindngs to namespace
Reported Date                 : 7/5/94
Found in Baseline             : 1.1
Found Date                    : 7/5/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : admin/dced/server/{acls.c,main.c}
Sensitivity                   : public

[7/5/94 public]

Dced doesn't export the bindngs to namespace (in code later than 6/20/94), 
Rich knows the fix.

[07/06/94 public]
Fix is to move the export_into_namespace call into the background
acl_patcher.  Ping tested, John and I made the patcher more robust.
Fixed.

[7/28/94 public]

As far as I can tell dced does not export its bindings to the namespace
(/.:/hosts/<hostname>/config). I tried with 1.1b13 on a 486. By the way,
can this piece of code mean what it says (in admin/dced/server/main.c
export_to_namespace())? 

->	for (i = 5; --i >= 0; i++) {      <-
	    rpc_ns_binding_export(rpc_c_ns_syntax_default,
		(idl_char *)this_dced, *sp->ifspec, dced_bindings, NULL,
st);
	    if (*st == error_status_ok)
		break;
	    interval.tv_sec = 2;
	    interval.tv_nsec = 0;
	    pthread_delay_np(&interval);
	}

[07/28/94 public]
dced does the export but it requires you do restart your cell after
initial cell config.  If this is not acceptable, please let us know.
(It is only an issue for config'ing the first host in a cell.)

[7/28/94 public]

My above report results from an observation made after our morning
conversation: I did restart the cell after initial cell config still there
was no /.:/hosts/<hostname>/config entry. As to whether the entry should
also be there after initial cell config *I* vote yes (but then it's just me
;) ).  Note that the code I excerpted in the initial report does not behave
in the way I described this morning (i.e. loops 5 times sleeping 2 seconds
between export retries) but instead loops indefinitely until the export
succeeds.

[7/28/94 public]
Please try out the last night build (not bl-13 which is last sunday
night build). And you may want to use CR11211 since this one is fixed.
Can you please also mention how you verify that the bindings are not 
exported?

[7/2/94 public]

O.K., dced from the nightly build did export its binding after stopping and
restarting. How about the other piece:

	for (i = 5; --i >= 0; i++) {      

(see above)? Why not just:

	for (;;)

Also, given that the fact that the export is tried indefinitely why does it
not succeed even on initial config?

[07/29/94 public]
Fix to be submitted tonite that will try indefinitely.
And also try during bootstrap mode.
It did not work on initial config because the thread was hanging trying to
make an unauthenticated call to secd.

[08/27/94 public]
Finally and totally fixed by Rob's work in OT CR 11726.



CR Number                     : 11158
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : 
Short Description             : RIOS build broke
Reported Date                 : 7/1/94
Found in Baseline             : 1.1b10
Found Date                    : 7/1/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/server/sv_clientd.c
Sensitivity                   : public

[7/1/94 public]

A recent porting change added #include <sys/fnctl.h> it should be <fcntl.h>
Broke the RIOS build.

[07/05/94 public]
Clean builds; closed.



CR Number                     : 11027
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server
Short Description             : dced_binding_create returns
with errors.
Reported Date                 : 6/21/94
Found in Baseline             : 1.1
Found Date                    : 6/21/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : server/main.c, api/dced_binding.c
Sensitivity                   : public

[6/21/94 public]

I installed the 'beta' version of DCE and brought up
a simple cell with EPMAP set to dced. - no problems.

killed sec_clientd daemon.

Then ran the dced api tests - all tests fail with
the error 'rpc_s_entry_not_found (382312608)' or 
	  'unknown dced service (289255533)' or
	  'ept_s_not_registered (382312662)'.
during binding_create(). And also I see lots of signal 11s.

And also, I ran dcecp and tried to do catalog operations  on keytab, 
hostdata etc, activate on secval -
dcecp coredumps with signal 11 problem.

[6/30/94 public]
While you config a cell with dced, it'll start dced with bootstrap
mode, this means there is nothing exported to namespace (because
the sec and directory services are not up running yet). All of dced
services need to be exported afterwards and Rich is working on it.
There are two problems here though, 1) the secval export_to_namespace
flag is off, it's needed to be turned on to have secval exported to
NS; 2) dced_binding_create() inquires binding for a dced service you require,
which is ok not unnecessary, if it just inquires for a binding to a requested
dced, even if that required service is not exported, the client rpc call
will still go thr by using the binding to the dced. Fixed these two
problems.

[8/12/94 public]
Works. Closing.



CR Number                     : 11006
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hostdata
Short Description             : dced -di can not create data files
Reported Date                 : 6/20/94
Found in Baseline             : 1.1b9
Found Date                    : 6/20/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : dced/server/init.c
Sensitivity                   : public

[6/20/94 public]
"dced -di" gives these errors:
    warning -- Could not create host name file: No such file or directory
    warning -- Could not create cell name file: No such file or directory
    warning -- Could not create cell aliases file: No such file or directory
    warning -- Could not create post-processor file: No such file or directory

Fix: when calling hostdata_create(), specify import=FALSE since dced
is supposed to be writing these files.

[06/30/94 public]
What he said.  Closed.



CR Number                     : 11005
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ep
Short Description             : dced -e says "Addr already in use"
Reported Date                 : 6/20/94
Found in Baseline             : 1.1b9
Found Date                    : 6/20/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : dced/server/main.c
Sensitivity                   : public

[6/20/94 public]
"dced -e" gives this error:
    Cannot use "*all*" protocol sequence, Address already in use

Fix is something like this, in main.c:

	/* Register protseqs and endpoints. */
    >   if (!endpoints) {
    >       rpc_server_use_all_protseqs(rpc_c_protseq_max_reqs_default, &st);
    >       check_protseq_error(st, "*all*");
    >   }
    >   else if (protseqs)

[06/29/94 public]
Fix made. Closed.



CR Number                     : 11003
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : api
Short Description             : dced free util routines need to be updated to use new sec_attr free routine(s)
Reported Date                 : 6/17/94
Found in Baseline             : 1.1
Found Date                    : 6/17/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : Too many to list
Sensitivity                   : public

[6/17/94 public]
With hp_sec_to_osf_3 drop, there are new sec_attr free routine(s) to
allow you to free it by the memory release routine you choose. Decd
free util routines need to use these new routine so that you can free
the sec_attr by rpc_ss_free or rpc_sm_free ...

[06/20/94 public]
Mostly.  rpc_ss_free rpc_sm_free and rpc_sm_client_free have a different
calling sequence from free.  So you have to write wrappers.  For beta I
took dced_util and rewrote it so every routine takes a "free" parameter.
I will do this integration for post-beta.

[06/20/94 public]
Besides these, you may want to also update dced_objects_release() (actually
dced__object_free()) which calls the sec_attr_util_inst_free_ptrs to free 
the sec_attr pointers, the right free routine in this case should be 
rpc_sm_client_free() to free the memory allocated by client stub, 
rather than free() used by sec_attr_util_inst_free_ptrs(). The new free
routine sec_attr_util_free() in security provides the interface to do
so.

[06/29/94 public]
Ping, you can do this. :-)  Look at server/free.c for some ideas.

[07/06/94 public]
Reorg-ed dced free routines and submitted.

[8/9/94 public]
Fixed a while ago.  Closing.



CR Number                     : 10978
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : srvrconf
Short Description             : srvrconf objects do not allow ACL manipulation.
Reported Date                 : 6/16/94
Found in Baseline             : 1.1
Found Date                    : 6/16/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : scops.c
Sensitivity                   : public

[6/16/94 public]

After creating a server object, I cannot manipulate its ACL.  Note that
the acl show operation below returns 'no acl found':

dcecp> server show /.:/hosts/oscar/config/srvrconf/systest_acl_svr.15203
server show /.:/hosts/oscar/config/srvrconf/systest_acl_svr.15203
{uuid 0019fa64-a822-1dff-acdc-0000c0dc0d4b}
{program /tmp/}
{arguments
 /.:/hosts/oscar/systest/systest_acl_svr.15203}
{prerequisites {}}
{keytabs {}}
{services
 {{ifname  {}}
  {annotation  {}}
  {interface {008bebed-c7c1-1ddc-9cb3-0000c0ba4944 1.0}}
  {bindings}
  {objects
   0073f23a-2e1a-1ddd-b73a-0000c0ba4944}
  {flags {}}
  {entryname /.:/hosts/oscar/systest/systest_acl_svr.15203}}}
{principals {}}
{attributes {}}
{starton {}}
{uid 0}
{gid 0}
{dir {}}

dcecp> acl show /.:/hosts/oscar/config/srvrconf/systest_acl_svr.15203
acl show /.:/hosts/oscar/config/srvrconf/systest_acl_svr.15203
Error: no acl found
dcecp>

[06/20/94 public]
This could be related to some memory-management bugs that were just
fixed on Friday.  Please try again.

[06/21/94 public]

Tried again with NB from 6/20.  Same results.

[6/22/94 public]

Fixed.  scops.c:svrconf_create() was not adding new server objects
to dced name->uuid cache.  Added call to cache_name_add().

[8/12/94 public]
Been fixed a while.  Closing.



CR Number                     : 10974
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : keytab
Short Description             : Keytab ACL's do not contain
valid CELL UUID
Reported Date                 : 6/15/94
Found in Baseline             : 1.1
Found Date                    : 6/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : acls.c
Sensitivity                   : public

[6/15/94 public]

dced keytab ACL's do not contain proper cell UUID, it is NIL.  Is the
acl_patcher()  routine not correcting this cell UUID?

[06/20/94 public]
I hate to say "try it again and see if it works now" but...  the ACL-patcher
does take a bit of time and there were some memory-management bugs.
So try it again but wait, say, 30seconds after secd comes up.

[6/21/94 public]

Tried again with NB from 6/20 (slightly modified to enable dced to start).
dced started 5 minutes after rest of DCE.  acl_edit of keytab attempted at 
least 3 minutes after dced started.  Same result.

[6/22/94 public]

Fixed.  acls.c:acl_patcher() was doing db_store() operatoins within
a db_iterator loop.  this will not work reliabily.  Broke up logic
into 2 loops.

Will open new CR RE: db iterator issue.  may be doc only

[8/9/94 public]
Fixed a while ago.  Closed.



CR Number                     : 10940
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : dced not started with protseqs
Reported Date                 : 6/14/94
Found in Baseline             : 1.1
Found Date                    : 6/14/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/*
Sensitivity                   : public

[6/14/94 public]
When configuring from NB of 6/13:

  S:****** Configuring Security Server...
  S:****** Starting dced...
  S:****** Initializing dced...
  no protocol sequences registered
  dced (pid 28258) exited with status 0177400
  ERROR:   dced -b failed to start.

[6/14/94 ]

Configuring the NB using dced, on a RIOS, gives a different result:


        Press <RETURN> to continue, CTRL-C to exit: 
S:****** Initializing dced...
Unknown message number 0x16c9a024
        Enter keyseed for initial database master key: 


        Enter desired principal name for the Cell Administrator:
(cell_admin) 
        Enter desired password for the Cell Administrator: 
        Re-enter desired password: 

S:****** The current highest UNIX ID for persons on this node is 9449.
        Enter the starting point to be used for UNIX ID's that
        are automatically generated by the Security Service
        when a principal is added using "rgy_edit": (9549) 
S:****** The current highest UNIX ID for groups is 1002.
        Enter the starting point to be used for UNIX ID's that
        are automatically generated by the Security Service
        when a group is added using "rgy_edit": (1102) 
S:****** Starting secd...
S:****** Starting sec_clientd...
S:****** Waiting for node self-identity to be established...
ERROR:   Node identity has not been established.  There may be a problem
with the security server, this node may have stale configuration
information.  If this is a client node, then node may not have been
unconfigured following a previous configuration.
        Press <RETURN> to continue, CTRL-C to exit:

[06/14/94 public]
Martha's addition says
	Unknown message number 0x16c9a024

Which is the same as what Rich saw:
    ; showst 0x16c9a024
    Tech = 1 = 01 = 0x1 = dce
    Comp = 27802 = 066232 = 0x6c9a = rpc
    Mesg = 36 = 044 = 0x24 = no protocol sequences registered

[06/16/94 public]
Finally nailed the use_protseqs calls correctly.  Fix submitted.

[06/17/94 public]

I installed last NB and I got the same errors on the HP and RIOS.
If the fix was not ready to test, please ignore this entry.



CR Number                     : 10931
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : admin/dced/server
Short Description             : Unresolved or undefined symbols detected
Reported Date                 : 6/10/94
Found in Baseline             : 1.1
Found Date                    : 6/10/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : dced/server/Makefile
Sensitivity                   : public

[6/10/94 public]

xlc   -g        -L/u1/devobj/sb/nb_rios/export/rios/usr/lib \
 -L/project/dce/build/dce1.1-snap/export/rios/usr/lib  -o dced.X main.o \
 init.o acls.o lock.o misc.o hdmisc.o asops.o epops.o hdops.o kmops.o \
 scops.o svops.o sxops.o  sv_clientd.o sv_preauth.o sv_rover.o oemisc.o \
 oeops.o dcedhdsvc.o dcedhdmsg.o dced_convert_cstub.o ep_sstub.o \
 hostdata_sstub.o  rdaclif_sstub.o rdaclifv0_sstub.o \
 rkeytab_sstub.o roverride_sstub.o rs_attr_schema_sstub.o \
 rsec_cert_sstub.o rsec_login_sstub.o secval_sstub.o
 srvrconf_sstub.o srvrexec_sstub.o  -ldce
0706-317 ERROR: Unresolved or undefined symbols detected:
                 Symbols in error (followed by references) are
                 dumped to the load map.
                 The -bloadmap:<filename> option will create a load map.
.krb5_cc_resolve
.krb5_parse_name
.krb5_free_cred_contents
.krb5_free_principal
.krb5_get_credentials
.krb5_generate_subkey
.krb5_encode_generic
.krb5_free_keyblock
EncryptedData_free
EncryptedData_cod
krb5_kdc_default_options
EncryptedData_len
EncryptionKey_free
EncryptionKey_cod
EncryptionKey_len
krb5_enc_data2EncryptedData
krb5_keyblock2EncryptionKey
krb5_keytype_array
*** Error code 8
`build_all' not remade because of errors.

[6/10/94 public]
The integration of sec_clientd stuff requires to link with bsd and krb3 
libraries on RIOS.

[8/9/94 public]
Works.  Closed.



CR Number                     : 10913
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : secval
Short Description             : sec_clientd got Assertion warning. attempt to relock a mutex in idle cell
Reported Date                 : 6/9/94
Found in Baseline             : 1.1
Found Date                    : 6/9/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/sv*c
Sensitivity                   : public

[6/9/94 public]

Using the nightly build available 06-08, in an idle cell the sec_clientd
on my AIX client dumped core with the error:

**** Assertion warning. attempt to relock a mutex
     at line 1240 in /project/dce/build/dce1.1-snap/src/threads/cma_mutex.c

[7/15/94 public]
Changed component to 'dced' so it may be fixed/closed.  The dced now
performs the host self mgmt previously performed by sec_clientd.

[07/15/94 public]
Fixed by rewrite & integration of sec_clientd into dced.



CR Number                     : 10912
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : dced/server/sv_rover.c
Short Description             : Identifier update_time cannot be redeclared
Reported Date                 : 6/9/94
Found in Baseline             : 1.1
Found Date                    : 6/9/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/sv_rover.c
Sensitivity                   : public

[6/9/94 public]

xlc -c     -g   -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/admin/dced/server -I/project/dce/build/dce1.1-snap/src/admin/dced/server  -I. -I/u1/devobj/sb/nb_rios/src/admin/dced/server -I/project/dce/build/dce1.1-snap/src/admin/dced/server -I../idl -I/u1/devobj/sb/nb_rios/src/admin/dced/idl -I/project/dce/build/dce1.1-snap/src/admin/dced/idl -I../api -I/u1/devobj/sb/nb_rios/src/admin/dced/api -I/project/dce/build/dce1.1-snap/src/admin/dced/api -I../../../rpc/runtime -I/u1/devobj/sb/nb_rios/src/rpc/runtime -I/project/dce/build/dce1.1-snap/src/rpc/runtime -I../../../rpc/runtime/RIOS -I/u1/devobj/sb/nb_rios/src/rpc/runtime/RIOS -I/project/dce/build/dce1.1-snap/src/rpc/runtime/RIOS -I../../../security/h -I/u1/devobj/sb/nb_rios/src/security/h -I/project/dce/build/dce1.1-snap/src/security/h -I../../../security/idl -I/u1/devobj/sb/nb_rios/src/security/idl -I/project/dce/build/dce1.1-snap/src/security/idl -I/u1/devobj/sb/nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/admin/dced/server/sv_rover.c
"/project/dce/build/dce1.1-snap/src/admin/dced/server/sv_rover.c", line 105.24: 1506-030 (S) Identifier ovrd_status cannot be redeclared.
"/project/dce/build/dce1.1-snap/src/admin/dced/server/sv_rover.c", line 106.17: 1506-030 (S) Identifier update_time cannot be redeclared.
*** Error code 1

[06/09/94 public]
Two variables had an "extern" in svimpl.h, but "static" in sv_rover.c
Remove the static from the sv_rover definitions.

[06/22/94 public]
Did code-cleanup on those files, too.  It's been building for a week now.
Closed.



CR Number                     : 10906
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dced
Subcomponent Name             : server
Short Description             : dced core dumps.
Reported Date                 : 6/8/94
Found in Baseline             : 1.1
Found Date                    : 6/8/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/free.c,etc.
Sensitivity                   : public

[6/8/94 public]
On Hp (with latest nightly build)

When I do the following steps dced core dumps:

create a simple cell.
kill sec_clientd
./dced -di
./dced -def
/etc/dce.clean
/etc/rc.dce
kill sec_clientd
./dced -def
Memory fault - core dumped
# 


trace from the core:


>t
 0 free@libc + 0x00000008 (hp-ux export stub)
 1 TMEM@libdce + 0x001ce5b0 (0x7b033530, 0x7b0332d0, 0x7b0332d0,
0x7b0332d0)
 2 TMEM@libdce + 0x0021e6a0 (0x400afc90, 0x4012fcc8, 0x10, 0x7b0333a8)
 3 TMEM@libdce + 0x002da1d4 (0x7b033434, 0x4012fcc8, 0x7b0333a8,
0x7b0332d0)
 4 name_cache_schema_init (db = 0x400afc90, cache = 0x401286b8, st =
0x7b0332d0)
[691]
 5 init_caches (st = 0x7b0332d0)
[897]
 6 main (ac = 2, av = 0x7b033180)
[226]

[6/8/94 public]
>create a simple cell.
>kill sec_clientd
>./dced -di
>./dced -def
>/etc/dce.clean
>/etc/rc.dce
>kill sec_clientd
>./dced -def

Why did you start dced twice?

[06/08/94 public]
lowered priority -= commented out the offending free call for now.

[6/8/94 public]
I forgot! I killed the dced before doing /etc/dce.clean.

And also -
after the core dump instance, if I try to execute './dced -def'
it succeeds.

This scenario is reproducible.

[06/29/94 public]
Can you try this again?  I think this can be closed with the memory-allocation
fixes of last week.  Tnx.

[6/29/94 public]
I don't know how my previod message disappeared - 

I verified with the latest nightly build - this problem does not
show up - cab be closed.

[06/29/94 public]
This was the fix that did it:
 * HISTORY
 * $Log:	c010906,v $
# Revision 1.8  94/06/29  13:39:34  root
# changed fields: Status  Fixed In Baseline  Affected File(s)   new/changed/deleted note(s) [rsalz 06/29/94 public]
# 
 * Revision 1.1.2.1  1994/06/16  19:35:09  rsalz
 *      New free routines.
 *      [1994/06/16  19:32:02  rsalz]



CR Number                     : 10888
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : dced
Short Description             : ep resolution optimization
Reported Date                 : 6/8/94
Found in Baseline             : 1.1b9
Found Date                    : 6/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : admin/dced/server/epops.c
Sensitivity                   : public

[6/8/94 public]
Seiichi has suggested that dced endpoint resolution could be a bit faster
by not doing through the EP map if we are trying to find one of dced's
own interfaces.  This would mean that hostdata, srvrconf, srvrexec, rkeytab,
secval (and the sec_clientd interfaces!) could only be handled by dced.
This seems like a reasonable trade-off.

[07/12/94 public]
Based on email discussion with RPC folks this is what was done:
        If the desired interface is one of the ones dced has registered
        (the list varies depending on whether it's in bootstrap mode,
        etc) AND the object UUID in the binding handle is NIL, then
        dced will not call the EPT lookup but will instead return a
        "drop" status.  This will cause the RPC runtime to instead
        check to see if the call is being made on a registered interface.

[07/29/94 public]
Had to "finesse" somethings to handle RPC/CN but code submitted.

[08/27/94 public]
And has been working for awhile.  Closed.



CR Number                     : 10883
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : ept stuff
Short Description             : misc cleanup
Reported Date                 : 6/7/94
Found in Baseline             : 1.1b9
Found Date                    : 6/7/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/oemisc.c
Sensitivity                   : public

[6/7/94 public]
While examining an EP-compat bug I saw that I could clean up the code
a bit reducing six compiler warnings to two and removing two local
variables.

[06/08/94 public]
Submitted and build and closed.



CR Number                     : 10875
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server srvrconf
Short Description             : srvrconf_delete() allow unauthenticated user delete the object and then if a server catalog is executed, dced core
dumps.
Reported Date                 : 6/6/94
Found in Baseline             : 1.1
Found Date                    : 6/6/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/misc.c
Sensitivity                   : public

[6/6/94 public]
If I login as notroot, I still can delete a server object which is
created by cell_admin. Here is the acl entries,
#foster#:> acl_edit /.:/hosts/foster/config/srvrconf
sec_acl_edit> l

# SEC_ACL for /.:/hosts/foster/config/srvrconf:
# Default cell = 00000000-0000-0000-0000-000000000000
unauthenticated:-r-
user:00000064-b529-2de3-bf00-0000c0ba4944:cri
any_other:-r-

After I delete the server object, if I do dcecp server catalog, the
dced server will core dump, don't know why. Here is the stack info
but doen't hint much,

Program received signal 11, Segmentation fault
0xa40408d2 in strlen ()
(gdb) bt
#0  0xa40408d2 in strlen ()
#1  0xa428864a in rpc_ss_build_bounds_list
    (5904204, 2, 4868132, 4383288, 1, 5904272, 5905452)
#2  0xa4284d20 in rpc_ss_pointee_desc_from_data
    (4386428, 2, 4868132, 4383288, 5904260, 5905452)
#3  0xa4284030 in rpc_ss_ndr_m_struct_pointees (15, 3028, 4868132, 5905452)
#4  0xa42842e2 in rpc_ss_ndr_m_f_or_c_arr_ptees
    (4868132, 1, 5328764, 4386368, 5905452)
#5  0xa42830ab in rpc_ss_ndr_marsh_pointee
    (4386340, 4868104, 1, 5904596, 5905452)
#6  0xa428404f in rpc_ss_ndr_m_struct_pointees (15, 496, 5905164, 5905452)
#7  0xa42813dc in rpc_ss_ndr_marsh_interp (2, 232, 5905172, 5905452)
#8  0x41ec4e in op0_ssr (h=0x4bd798, IDL_call_h=0x4faf48, IDL_elt_p=0x5a1e38, 
    IDL_drep_p=0x5a1e68, IDL_transfer_syntax_p=0xa446f5d0, 
    IDL_mgr_epv=0x42ef18, IDL_status_p=0x5a1e60) at srvrconf_sstub.c:1768
#9  0xa42195f6 in rpc__dg_execute_call (5222216, 0)
#10 0xa41d3b08 in cthread_call_executor (4998248)
#11 0xa41ac38b in cma__thread_base ()
#12 0xa41b177d in cma__create_thread ()
#13 0xa41d3958 in cthread_call_executor ()
#14 0x57c5d0 in acl_db ()
Cannot access memory at address 0x2.

[06/08/94 public]
I believe you're looking at the wrong ACL.

The core dump was becuase I was setting the "[size_is]" variable
incorrectly.  Fixed.



CR Number                     : 10874
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server srvrconf
Short Description             : srvr_qualify_prin_names() doesn't expand cell_name right
Reported Date                 : 6/6/94
Found in Baseline             : 1.1
Found Date                    : 6/6/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1b10
Affected File(s)              : dced/server/misc.c
Sensitivity                   : public

[6/6/94 public]
In srvr_qualify_prin_names(), after copy this_cell, it should have set 
new[len] = '/', (but the current code is this_cell[len] = '/'; so
that prin_names become cell_name only due to a '\0' in new[len].
Secondly, after strcpy((char *)&new[len + 1], (char *)*p); the *p
should have been freed before *p = new;. Perhaps I'm wrong, the 
memory may not need to be freed after all, it's allocated by runtime
and will be freed by runtime. Rich, is this right?

[06/08/94 public]
The "new[len] = '/'" part is right, thanks.
No memory needs to be free'd since all allocations are using rpc_sm_allocate.

[06/22/94 public]
Closed.



CR Number                     : 10858
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server srvrxxxx and acl
Short Description             : srvrxxxx grants ever perms to any_other and acl_edit on /.:/hosts/foster/config (and /...) shows error message
Reported Date                 : 6/3/94
Found in Baseline             : 1.1
Found Date                    : 6/3/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/{acls.c,main.c}
Sensitivity                   : public

[6/3/94 public]
The following info. says all,

------------------
pwang@foster3 >acl_edit /.:/hosts/foster/config/srvrexec 
Unknown default cell from ACL - ERROR: Cell UUID is not a valid cell name (dce / sec)
INFO: Local cell will be used for operations requiring default cell info.
sec_acl_edit> l

# SEC_ACL for /.:/hosts/foster/config/srvrexec:
# Default cell = 00000000-0000-0000-0000-000000000000
any_other:cri
sec_acl_edit> 
------------------
#foster#:> acl_edit /.:/hosts/foster/config/srvrconf
ERROR: communications failure (dce / rpc)
Unable to bind to object /.:/hosts/foster/config/srvrconf
#foster#:> acl_edit /.../foster_cell/hosts/foster/config/srvrconf
Unknown default cell from ACL - ERROR: Cell UUID is not a valid cell name (dce / sec)
INFO: Local cell will be used for operations requiring default cell info.
sec_acl_edit> l

# SEC_ACL for /.../foster_cell/hosts/foster/config/srvrconf:
# Default cell = 00000000-0000-0000-0000-000000000000
any_other:cri
sec_acl_edit>
-----------------
pwang@foster2 > acl_edit /.:/hosts/foster/config
Unknown default cell from ACL - ERROR: Cell UUID is not a valid cell name (dce / sec)
INFO: Local cell will be used for operations requiring default cell info.
sec_acl_edit>
-----------------
pwang@foster3 >acl_edit /.:/hosts/foster/config/hostdata
Unknown default cell from ACL - ERROR: Cell UUID is not a valid cell name (dce / sec)
INFO: Local cell will be used for operations requiring default cell info.
sec_acl_edit>

[06/06/94 public]
HEre's the situation:  if security isn't set up (e.g., when config'ing
initial host in the cell) dced now sets up any_other with all rights
and NIL cell UUID.  (At some point we were going to add a well-known
"anonymous" cell uuid; if we do, I'll change dced to use it.)  When it
starts up, dced spawns a thread to try to contact secd and, if it
succeeds, it runs around and "patches" all its ACL's.

A bit clunky, but all we can do.



CR Number                     : 10857
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server srvrconf
Short Description             : srvrconf start core dumps
Reported Date                 : 6/3/94
Found in Baseline             : 1.1
Found Date                    : 6/3/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/misc.c
Sensitivity                   : public

[6/3/94 public]
The srvrconf core dumps when string_copy tries to copy from some bogus
address. The structure may need to be initialized.

Here is ths stack trace,
Program received signal 11, Segmentation fault
0x404983 in string_copy (new=0x5bc6a8, old=0x622f2f3d, 
    alloc=0x57bd98 <acl_db+1371864>, st=0x57bd58)
    at ../../../../../src/admin/dced/server/misc.c:397
397         if (*old == NULL)
(gdb) p *old 
$12 = (char_p_t) Cannot access memory at address 0x622f2f3d.
(gdb) bt
#0  0x404983 in string_copy (new=0x5bc6a8, old=0x622f2f3d, 
    alloc=0x57bd98 <acl_db+1371864>, st=0x57bd58)
    at ../../../../../src/admin/dced/server/misc.c:397
#1  0x4051ee in string_list_append (base=0x5bc894, adds=0x4b89b0, 
    alloc=0x57bd98 <acl_db+1371864>, st=0x57bd58)
    at ../../../../../src/admin/dced/server/misc.c:628
#2  0x40a88f in srvrconf_start (h=0x4b8498, id_uuid=0x5bcb50, fixed=0x0, 
    attributes=0x0, instance=0x57b958, st=0x5bcb40)
    at /project/dce/build/dce1.1/src/admin/dced/server/scops.c:468
#3  0x41f7f9 in op6_ssr (h=0x4b8498, IDL_call_h=0x4cc8d0, IDL_elt_p=0x5bce4c, 
    IDL_drep_p=0x4bf728, IDL_transfer_syntax_p=0x4ccacc, IDL_mgr_epv=0x42aec0, 
    IDL_status_p=0x5bce28) at srvrconf_sstub.c:2416
#4  0xa41fc2d4 in rpc__cn_call_executor (5032144, 0)
#5  0xa41d3b08 in cthread_call_executor (5198064)
#6  0xa41ac38b in cma__thread_base ()
#7  0xa41b177d in cma__create_thread ()
#8  0xa41d3958 in cthread_call_executor ()
#9  0x57fdf8 in acl_db ()
Cannot access memory at address 0x2.

[06/06/94 public]
Fixed a few days ago:
 * $Log:	c010857,v $
# Revision 1.2  94/06/06  15:37:53  root
# changed fields: Status  Fixed In Baseline  Affected File(s)   new/changed/deleted note(s) [rsalz 06/06/94 public]
# 
 * Revision 1.1.2.10  1994/06/03  19:17:13  rsalz
 *      string_list_append didn't always allocate new space (OT CR 10857).
 *      [1994/06/03  19:11:09  rsalz]



CR Number                     : 10850
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server srvrconf
Short Description             : srvrconf keeps bogus server info.
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/{server/s[xc]ops.c,idl/dhd.sams}
Sensitivity                   : public

[6/2/94 public]
If the srvrconf create operation fails (e.g core dumps), the incompleted
server object creation is not removed from dced srvrconf, next time when
you call srvrconf_get_list, the bogus information is returned as well.
Optimally, a incomplete created server object should not exist in server
at all (or at least not be visible by external).

[06/30/94 public]
Things are (now) stored in the right order so crashes won't be
inconsistent.  The only additional check is to make sure that the
server name was specified.  Added a new status code, dced_s_name_missing,
to catch this case.

Closed.



CR Number                     : 10838
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server srvrconf
Short Description             : server object create hangs on wrinte block lock
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/misc.c
Sensitivity                   : public

[6/2/94 public]
While creating a srvrconf object sc_table.lock is taken as write lock
before getting into srvr_add_to_table(), however in srvr_add_to_table()
a rw lock is attempted on the same sc_table.lock and then seems blocked 
there forever.

[06/03/94 public]
Right diagnosis, removed the locks and it works.



CR Number                     : 10780
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10757
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dced
Subcomponent Name             : acl
Short Description             : dced core dumps on acl_edit on /.:/hosts/name/config/secval (HP ONLY)
Reported Date                 : 5/25/94
Found in Baseline             : 1.1
Found Date                    : 5/25/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : dbstore.c
Sensitivity                   : public

[5/25/94 public]
Found in nightly build 5/24/94 On HP platform only
To reproduce this, do -):
kill sec_clientd, start dced, dcecp secval activate, 
acl_edit /.:/hosts/name/config/secval -l
acl_edit /.:/hosts/name/config/secval -m user:cell_admin:cuxxx 
			(xxx I forgot exactly, it was all perms)
acl_edit /.:/hosts/name/config/secval -l
acl_edit /.:/hosts/name/config/secval -d user:cell_admin 
repeat these four acl_edits

somewhere during these acl_edits dced will core dumps.

I saved the core file, but the dced has not built with debug on
(I picked it up from nb5/24/94).

[6/8/94 public]
I believe this was fixed with the recent ACL lib / memory allocation changes.

[8/9/94 public]
Works. Closed.



CR Number                     : 10702
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : hostdata
Short Description             : Can create multiple hostdata
objects with the same name and/or UUID.
Reported Date                 : 5/19/94
Found in Baseline             : 1.1
Found Date                    : 5/19/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/{hd,km,as}ops.c
Sensitivity                   : public

[5/19/94 public]

FVT TEST: ./test/admin/dcecp/ts/hostdata/* 

Can create multiple hostdata objects with the same name and UUID.  This 
should not be allowed.

[6/13/94 public]
When creating the objects, where it check if the UUID exists, also
check if the name exists in the cache.  If so, return an error.

[8/12/94 public]
Works.  Closing.



CR Number                     : 10691
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server keytab
Short Description             : rkeytab_get_keys should return all keys
Reported Date                 : 5/18/94
Found in Baseline             : 1.1
Found Date                    : 5/18/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/kmops.c
Sensitivity                   : public

[5/18/94 public]
rkeytab_get_keys() returns only latest key for each principal even thr the
pricipal has multiple keys. It should return all keys and let application 
to decide how to use them.

[5/19/94 public]
rkeytab_get_keys() now returns all keys.

[5/27/94 public]
Fix works.  Closed.



CR Number                     : 10686
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server keytab
Short Description             : keytab uses a hostdata error message
Reported Date                 : 5/18/94
Found in Baseline             : 1.1
Found Date                    : 5/18/94
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/idl/dhd.sams
Sensitivity                   : public

[5/18/94 public]
dcecp> keytab create -attr {{storage /tmp/bowe_tab} {data {pwang des}}} -random keytab-4
Error: Failed to find file on hostdata import attempt

[5/19/94 public]
Changed the error message accordingly.  It says "dced", which is
more general.



CR Number                     : 10622
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : server
Short Description             : srvrconf need to check null fields in server_t object
Reported Date                 : 5/12/94
Found in Baseline             : 1.1
Found Date                    : 5/12/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : admin/dced/server/misc.c
Sensitivity                   : public

[5/12/94 public]
Dced srvrconf need to check the null fields in server_t object
because the dced cmds and api doesn't check them. (after 1.1Beta)

[06/06/94 public]
All copy routines now allow NULL pointers and the other code checks.
So I think this can be closed.

[06/06/94 public]
There is another side of this ot, which is to see if there are any
mandatory fields missing, if there are, creation could reject the
request.



CR Number                     : 10603
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : use of some calls doesn't match prototypes
Reported Date                 : 5/11/94
Found in Baseline             : 1.1b8
Found Date                    : 5/11/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : dced/server/*ops.c
Sensitivity                   : public

[5/11/94 public]
A few instances of bad args being passed in dced (ie, they should match
the prototypes): dce_db_std_header_init() and srvr_add_to_table().
Easy to fix.
(This broke the build.)

[5/11/94 public]
Changed dced code to call dce_db_std_header_init() with correct params.
Same for a call to srvr_add_to_table().

Also, cleaned up the code for dce_db_std_header_init() itself (there was
a never-used arg...).

[5/27/94 public]
Fix works.  Closed.



CR Number                     : 10556
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : /admin/dced/server
Short Description             : unsatisfied sysmbols from ld
Reported Date                 : 5/6/94
Found in Baseline             : 1.1
Found Date                    : 5/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : admin/dced/{acls.c,sv_rover.c}
Sensitivity                   : public

[5/6/94 public]

/admin/dced/server

c89   -g   -z -Wl,-Bimmediate,-Bnonfatal,-a,default,+b,/lib:/usr/lib     -L/u3/devobj/sb/nb_ux/export/hp\
800/usr/shlib -L/project/dce/build/dce1.1-snap/export/hp800/usr/shlib -L/usr/shlib -L/u3/devobj/sb/nb_ux\
/export/hp800/usr/lib     -L/project/dce/build/dce1.1-snap/export/hp800/usr/lib   -o dced.X main.o init.\
o acls.o lock.o misc.o dcedhdsvc.o dcedhdmsg.o  hdops.o kmops.o scops.o svops.o sxops.o asops.o  hdmisc.\
o  dced_convert_cstub.o  hostdata_sstub.o rkeytab_sstub.o secval_sstub.o  srvrconf_sstub.o srvrexec_sstu\
b.o  sv_clientd.o sv_rover.o  roverride_sstub.o rsec_cert_sstub.o  rdaclif_sstub.o rdaclifv0_sstub.o rs_\
attr_schema_sstub.o  ep_sstub.o epops.o  -ldce
/bin/ld: Unsatisfied symbols:
   dce_acl_obj_create (code)
   roverride_get_by_unix_num (code)
   roverride_check_group_passwd (code)
   roverride_is_grp_pwd_overridden (code)
   roverride_get_group_info (code)
   dce_acl_obj_free (code)
*** Error code 1

[05/06/94 public]
The dce_acl_obj_create and dce_acl_obj_free were fixes in a sandbox,
but not submitted.

The roverride_ errors were because there was no DRB request submitting the
sec_clientd changes.  So let's split the blame :-)

[5/6/94 public]
Changed the name of dce_acl_obj_create, dce_acl_obj_free to match new names.

Added stubs for: roverride_get_by_unix_num(), roverride_check_group_passwd(),
roverride_is_grp_pwd_overridden(), roverride_get_group_info()
To be filled (implemented) in later.

[05/11/94 public]
Built; closing this CR.



CR Number                     : 10524
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : Cleanup needed in sams file
Reported Date                 : 5/4/94
Found in Baseline             : 1.1
Found Date                    : 5/4/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : dhd.sams
Sensitivity                   : public

[5/4/94 public]
Some minor cleanup needs to be done in the dhd.sams file.  Harcopy of the
changes has been given to John Bowe.

[5/5/94 public]
Made edits to dhd.sams, as per comments.  (Also, changed a couple error
symbols/codes, for clarity.)

[5/6/94 public]
Reviewer happy with changes.  Closed.



CR Number                     : 10403
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : admin/dced/server
Short Description             : func call arg cannot be assigned to corresponding parameter
Reported Date                 : 4/20/94
Found in Baseline             : 1.1
Found Date                    : 4/20/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b8
Affected File(s)              : admin/dced/serversv_clientd.c
Sensitivity                   : public

[4/20/94 public]

"/project/dce/build/dce1.1-snap/src/admin/dced/server/sv_clientd.c",  \
  line 117.12: 1506-007 (S) Struct or union tm is undefined. \
"/project/dce/build/dce1.1-snap/src/admin/dced/server/sv_clientd.c", line \
  127.5: 1506-045 (S) Undeclared identifier time_info.
"/project/dce/build/dce1.1-snap/src/admin/dced/server/sv_clientd.c", line \
  127.18: 1506-018 (S) Operand of indirection operator must be a pointer \
  expression.
"/project/dce/build/dce1.1-snap/src/admin/dced/server/sv_clientd.c", line \
  406.9: 1506-193 (E) Function call argument cannot be assigned to \
  corresponding parameter.
*** Error code 1

[04/20/94 public]
Adding accidentally elided #include <time.h>

[05/11/94 public]
Fix submitted, it works, closing this CR.



CR Number                     : 10220
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dced
Subcomponent Name             : relnotes
Short Description             : rpcd and sec_clientd are gone
Reported Date                 : 3/23/94
Found in Baseline             : 1.0.3
Found Date                    : 3/23/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : rpcd.8rpc, sec_clientd.8sec
Sensitivity                   : public
Note

[3/23/94 public]
The rpcd and sec_clientd daemons are gone for DCE 1.1.  They are subsummed
into the dced.  This is especially significant for those who upgrade from
earlier versions of DCE to DCE 1.1.  Also, the rpcd and sec_clientd
manpages need to be removed.

[3/29/94 public]

Assigning this CR temporarily to John Shirley (OSF dced writer).
When a DCE 1.1 release notes owner is determined, will assign
this CR to him/her, and open a new CR to defunct the rpcd and
sec_clientd man pages (which will be assigned to the dced writer).

[9/15/94 public]
removed (defuncted) the rpcd and sec_clientd manpages, fixed references,
and verified.

[10/25/94 public]
Closed bug.



CR Number                     : 10158
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : api
Short Description             : libdced.a not getting compiled
into libdce
Reported Date                 : 3/16/94
Found in Baseline             : 1.1
Found Date                    : 3/16/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : src/Makefile
Sensitivity                   : public

[3/16/94 public]
The libdced.a is not getting picked up by libdce.  The error while trying
to collect the libraries for libdce is as follows:
	make: don't know how to make libdced.a (continuing)
	`build_all' not remade because of errors.
	*** Error code 1
This is believed to be caused due to the BUILD_ADMIN variable being placed
after BUILD_DCE (in EXPLIB_SUBDIRS and SUDBIRS) causing libdce to think
that libdced.a isn't available since (I think) it scans the libraries and 
at this time to see if they exist and marks the ones that don't - libdced.a
isn't yet compiled so it doesn't exist (although it gets compiled
later).  This is due to the way the rios compiles the libdce.a (looks for
libraries instead of objects like at386 and hp does).  The fix may be to 
add "admin/dced/api" to the BUILD_DCE list probably at the end so that
libdced.a does get compiled and then when the scan of libraries take place
then it is there.  Note: there may be dependency issues that I am not aware
about.  Mark Hickey can be used as an information source.

[03/16/94 public]
The chnage is to add admin/dced to the end of BUILD_DCE. 
Maryanne and Howard feels more comfortable to have it tested on all
three platforms before checking in. So I backed out the libdced
chnages until a clean build on RIOS and then check them back in along
with this fix. Mark this bug to A 1 since it's not afected anything
now.

[04/17/94 public]
Checked in src/Makefile changes along with the original libdce Makefile
changes. Thanks Mark and Howard for their help.

[05/11/94 public]
Submitted, it builds, closed.



CR Number                     : 10008
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dced
Subcomponent Name             : roverride / secval
Short Description             : bad syntax causes false matches
Reported Date                 : 2/23/94
Found in Baseline             : 1.0.2
Found Date                    : 2/23/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/server/sv_rover.c
Sensitivity                   : public

[2/23/94 public]
  If an otherwise valid password-override entry with an extra ':' on the
end becomes the only entry in a passwd_override file, or if every entry
in the file is discarded for whatever (syntactic) reasons, then the two
roverride code paths that call the file parser wind up leaving the list
empty (they leave ovrd_list == NULL) and yet they leave ovrd_status
cleared.
  The result is that get_login_info lookups (for one) return the
ovrd_status, because they saw the list to be empty and intended
to explain why (no override info, or override failure). Unfortunately the
over_status is still clear, and bad structures get sent back under the
aegis of an 'ok' status.

[07/15/94 public]
Fixed by the rewrite when override was integrated into dced's secval service.



CR Number                     : 10006
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dced
Subcomponent Name             : roverride / secval
Short Description             : sec_clientd verbose mode affects ovrd interface status
Reported Date                 : 2/23/94
Found in Baseline             : 1.0.2
Found Date                    : 2/23/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/server/sv*c
Sensitivity                   : public

[2/23/94 public]
  In check_update_overrides(), the case in which an admin somehow
updates the override file and leaves it inaccessible results in a change
to the interface's global status if and only if sec_clientd is running
in verbose mode.

[07/15/94 public]
Fixed by the parser rewrite of dced's secval service.



CR Number                     : 10005
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dced
Subcomponent Name             : roverride / secval
Short Description             : override list race cases
Reported Date                 : 2/23/94
Found in Baseline             : 1.0.2
Found Date                    : 2/23/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/sv_rover.c
Sensitivity                   : public

[2/23/94 public]
  This is a C3 because it is purely an matter for inspection, right now.
Simply, it appears that the removal of the override file, or any update
to the override file, can trigger some bad race cases in the override
interface, potentially taking sec_clientd down with it. Shouldn't there
be some concurrency control in reading & rebuilding the override list?
What I see about to happen is that, in a heavy traffic period, an
override file gets touched, restored, or removed only to cause the
override list to get freed and/or rebuilt while other threads are
walking it.

[07/15/94 public]
See OT CR 11174.  Fixed by dced's secval.



CR Number                     : 9830
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : app_gd
Short Description             : document new dced functionality for 1.1
Reported Date                 : 1/27/94
Found in Baseline             : 1.1
Found Date                    : 1/27/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : 
		dce_books/app_gd/dce/dced.gpsml
		dce_books/app_gd/style_gd/intro.gpsml
		dce_books/command_ref/man8dce/dce_intro.8dce
		dce_books/command_ref/man8dce/dced.8dce
		dce_books/admin_gd/overview/overview/appa.gpsml
		dce_books/admin_gd/overview/overview/3_cell.gpsml
		dce_books/app_ref/man3dce/dced_*.3dce
		dce_books/app_ref/man3dce/dce_server_*.3dce
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[1/27/94 public]

This CR encompasses all documentation of new dced features for DCE 1.1.

[10/27/94 public]
verified by me and via reviews by John Bowe, Rich Salz, and Ping Wang.

[10/02/95 public]
I am reopening this OT because we never really did have a working
programming example for dced in the 1.1 release.  Before he left
OSF last November, Max Grasso got an example to work; but we didn't
have time to incorporate it into the docset.  This example, plus
accompanying documentation (in ASCII), now sits on Doug Weir's
machine.  

We should decide whether to assign it to HP (who owns dced now),
or have Rosenberry Associates incorporate it (or do nothing with
it).

[10/12/95 public]
I've gotten the little dced-api example Willie mentions above to
build (it didn't before) and run-- almost. I've had to use what I
could still find in the tree as a DCE 1.1 for my 486, and it may be
that the reason why the dce_server_register() call keeps failing
with a "Can't register server with DCE - No permission for name
service operation (dce / rpc)" error, no matter what identity I
run under, has to do with the baseline of DCE 1.1 I'm using, rather
than any fault in the application. I'll try to test this hypothesis
soon by running the program on an HP, if possible. It's hard to see
what could be wrong with the program-- there's so little of it.

[2/27/96 public]
Won't be done for 1.2.1, but still possible for 1.2.2.

[12/14/96 public]

Fixed (with the help of Nick Dokos).



CR Number                     : 9768
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : 
Short Description             : replace/enhance rpcd and sec_clientd with dced
Reported Date                 : 1/18/94
Found in Baseline             : 1.1
Found Date                    : 1/18/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b10
Affected File(s)              : src/admin/dced/*
Sensitivity                   : public

[1/18/94 public]
This is a placeholder for dced development submissions.
As code is developed, update this CR, and use it for mail to "dce-drb".

[1/21/94 public]
I checked these files into ./src/admin/dced/idl/:
    Makefile          dhd.sams          secval.idl        
    dced_base.idl     hostdata.idl      srvrconf.idl      
    dced_convert.idl  rkeytab.idl       srvrexec.idl

[1/27/94 public]
Added secvacl_validate_cert_auth() call.

[2/1/94 public]
(all in ./dced/idl directory)
Got rid of references to "server_fixattr_t".  Should have been
"server_fixedattr_t". (note the "ed")

Use typedef srvrexec_stop_method_t as arg in srvrexec_stop() call.

Added files: hostdata.acf rkeytab.acf secval.acf srvrconf.acf srvrexec.acf

[02/02/94 public]
Added the general section into dhd.sams.

[2/22/94 public]
Added missing operation rkeytab_get_list() to idl/rkeytab.{acf,idl}.

[2/22/94 public]
In idl/rkeytab.{idl,acf} named all functions to the form "rkeytab_xxx()".

Added api/dced_data.[ch] and a Makefile.  These contain string and C
representations of the well-known UUIDs.

Added a ./dced/Makefile

[2/23/94 public]
Renamed dkey_t to dced_key_t and dkey_list_t to dced_key_list_t.

[3/30/94 public]
Added initial implementation of attr_schema operations.
Added ACL on /.:/hosts/xxx/config object (and created that pseudo-obj),
so you can control who can do rpc_mgmt calls to dced.
Added name->uuid caching.

[06/16/94 public]
closing this placeholder.



CR Number                     : 9095
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : secval
Short Description             : redefinition of macro pthread_equal_np prevents compilation
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.3
Found Date                    : 10/13/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/server/sv*c
Sensitivity                   : public

[10/13/93 public]

 In security/server/sec_clientd/scd_thread.c,

 pthread_equal_np  is already defined from inclusion of pthread.h.

 This causes a compilation failure.

Suggested fix: undef pthread_equal_np before redefining it to be the same
as pthread_equal.

[07/15/94 public]
Removed the #define when sec_clientd was integrated into dced's secval.



CR Number                     : 9058
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dced
Subcomponent Name             : secval
Short Description             : sec_clientd spins madly on
self-host client.
Reported Date                 : 10/6/93
Found in Baseline             : 1.0.3
Found Date                    : 10/6/93
Severity                      : A
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b0
Affected File(s)              : don't know
Sensitivity                   : public

[10/6/93 public]

In a self-host cell configuration here with the following configuration
sec_clientd started spinning on an hp client machine without refreshing
the machine tickets. The *fff* creds are still there but it expired last 
Thursday. (HP node was up for about 12+ days in a cell).

	- RIOS has security,cds and dfs servers.
	- HP is a core client as well as a dfs-client.

[10/7/93 public]

Since it's 8 days until the 1.0.3 code freeze, and this bug takes 12+
days to reproduce (about), I'm making it a P2.  If you get it to
happen sooner, with the necessary debug information, we'll change it
back and look at it.  We'll also try to get a cell set up here that
stays up that long in case we can get it to happen as well.  When we
get more information on it, I'll assign it to someone then.

[07/15/94 public]
Does this still happen?

[8/2/94 public]
Does not happen with dced.  Also, Rajendra reports that it no longer
happens.



CR Number                     : 7651
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dced
Subcomponent Name             : 
Short Description             : rpcd chokes on unsupported protseqs in rpcdep.dat
Reported Date                 : 4/5/93
Found in Baseline             : 1.0.2
Found Date                    : 4/5/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : admin/dced/server/oeops.c
Sensitivity                   : public

[4/5/93 public]
When rpcd starts up and reads rpcdep.dat, if it runs into an endpoint that
contains a protocol sequence it doesn't support, it dies with:

(rpcd) Can't initialize ept database: (0x16c9a0d3) invalid endpoint entry (dce /
 rpc)

This can happen if the protseq option is used when starting rpcd.  It would
be better if rpcd just said that it was ignoring an endpoint because of
an unsupported protocol sequence and went on.

[8/19/93 public]
making this as an enhancement for better error processing
capability against the 'dced' in 1.1.

This problem might have happenned when rpcd is restarted with a corrupt
/opt/dcelocal/var/rpcdep.dat file.

[7/20/94 public]
Since rpcd is going to be replaced by dced in DCE R1.1, I am
moving this enhancement over to the dced component and assigning
to the component owner.

[06/21/94 public]
Code added that says "if we could not parse the network address in
the tower and *st == rpc_s_protseq_not_supported" just ignore this.



CR Number                     : 7370
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dced
Subcomponent Name             : secval
Short Description             : Enhance sec_clientd to recreate creds on refresh if they've been blown away
Reported Date                 : 2/26/93
Found in Baseline             : 1.0.2
Found Date                    : 2/26/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : admin/dced/server/sv_clientd.c
Sensitivity                   : public

[2/26/93 public]
When sec_clientd calls sec_login_refresh_identity(), if it gets back the error
"No credentials cache file found (dce / krb)" it should be enhanced to know
that the creds are gone and call sec_login_setup_first() to recreate them,
instead of just waiting 5 minutes and trying again (getting the same error
forever).  This will not do anything to help during the time before the refresh
is called, but if someone does mistakenly delete the hosts creds, and doesn't
notice by the time sec_clientd goes to refresh them, then it will recover at
that point as opposed to doing worthless retries every 5 minutes.

[08/26/94 public]
If this gets done to dced's secval, Rob Baum's the guy to do it.

[9/12/94 public]
Done.  Note that sec_clientd/dced-secval only attempt to refresh the
self credentials ~ 10 minutes before they expire.  On a default policy
system, this is every 9 hours, 50 minutes.  So, the self principal would
be unuseable for up to this period of time.  This makes this enhancement
not very helpful.

If the creds are accidentally deleted, the commands:

  dcecp -c secval deactivate
  dcecp -c secval activate

will bring them back.

[09/26/94 public]
I think the manual commands combined with the longer-term auto fix is
a good mix.  Closed.



CR Number                     : 6362
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : dced
Subcomponent Name             : endpoint mapper
Short Description             : verbiage on error status misdirects the user
Reported Date                 : 12/7/92
Found in Baseline             : 1.0.1
Found Date                    : 12/7/92
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : admin/dced/idl/dhd.sams
Sensitivity                   : public

[12/7/92 public]


The rpcd outputs the following message when the rpc status
rpc_s_cant_bind_sock is returned from the routine
rpc_server_use_all_protseqs_if:

(rpcd) Verify that no other rpcd/llbd is running: (0xe12801a) cannot bind socket
 (dce / rpc)


The fact that another rpcd/llbd is running is only one of the user actions.
This is misleading if the problem is due to the underlying network transport
service not functioning.

The informational message needs to be amended to include this additional
information.  I suggest something on the order of:

(rpcd) Make sure the underlying network transport service is working or verify
that no other rpcd/llbd is running (dce / rpc)

[1/7/93 public]
Promoted to enhancement.

[5/13/94 public]
rpcd will be replaced by dced, which I'm sure will have a pithy
error message for this situation.

Enhancement canceled.

[05/16/94 public]
Unfortunately, the bind call (e.g., in comsoc_bsd.c) has its error status
masked into the more generic "RPC socket error" code in the higher levels.
So there is no real way for dced to find out, from its failure, that the
port is already in-use.

This is one aspect of a generic issue that rolls around in RPC-land:  what
is the best level of error abstraction:  show errno, etc., in all its
glory, or just report an upper-level failure?  I don't know.  Do we have
an OT opened on this generic issue?  I don't think so, although a handful
of CR's skirt about the issue.  It would be great if someone with more
time then I could find all the related CR's and link them into a new,
generic issue, CR.

You could argue, however, that the endpoint mapper is so important that
on bind failure it could try to connect on other protocols and see if
someone is listening on its assigned port.  This would add time to the
failure case, but might be worth doing.  It will not be done in beta,
and may not get done (portably...) in 1.1, but I can see that it would
be worth distinguishing this special condition.

Re-opening and assignin to dced.

[08/28/94 public]
Well, dced does the best that it can.  It reports whatever error the
RPC runtime returns.  We're not going to do any other diagnosis.
I update the sams file:
	start           undocumented intable incatalog
	code            dced_s_cant_use_protseq
	text            "Cannot use '%s' protocol sequence, %s"
	explanation     "Unable to use the specified networking protocol to
			listen for RPC requests."
	action          "Verify that the networking software is working.
			Also verify that no other program is using the endpoint
			map's well-known endpoints."
	attributes      svc_c_sev_fatal
	sub-component	dhd_s_general
	end
Any other work will have to be done when the various RPC issues mentioned
above are fixed.



