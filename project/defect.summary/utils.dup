CR Number                     : 12471
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : acl FVT
Short Description             : acl fvt 'dce_acl_conv_fcns' is core dumping.
Reported Date                 : 10/3/94
Found in Baseline             : 1.1b20
Found Date                    : 10/3/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 12363
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/3/94 public]
acl fvt 'dce_acl_conv_fcns' is core dumping.

[1/3/94 public]
Already reported in CR 12363 (a P1).

Next question: should 12363 be P=0?



CR Number                     : 12100
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : svc
Short Description             : "NL_CAT_LOCALE" undefined.
Reported Date                 : 9/8/94
Found in Baseline             : 1.1
Found Date                    : 9/8/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 12098
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/8/94 public]


hostname zagreb (HPUX)

Here is the extract from the build log build.log.09-07-94 in the
directory /u1/RAT_tools/logs/HPUX

c89 -c    -D_SHARED_LIBRARIES  +z  -DNO_CATALOG_SUFFIX +w1 -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u3/devobj/sb/nb_ux/src/dce/utils/svc -I/project/dce/build/dce1.1-snap/src/dce/utils/svc   -I/u3/devobj/sb/nb_ux/export/hp800/usr/include -I/project/dce/build/dce1.1-snap/export/hp800/usr/include    /project/dce/build/dce1.1-snap/src/dce/utils/svc/msginqcma.c
cc: "/project/dce/build/dce1.1-snap/src/dce/utils/svc/msginqcma.c", line 59: error 1588: "NL_CAT_LOCALE" undefined.
cc: "/project/dce/build/dce1.1-snap/src/dce/utils/svc/msginqcma.c", line 59: warning 563: Argument #2 is not the correct type.
*** Error code 1



CR Number                     : 11881
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : dcecf
Short Description             : getcellname core dumps
Reported Date                 : 8/25/94
Found in Baseline             : 1.1
Found Date                    : 8/25/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 11879
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : dcecf.c
Sensitivity                   : public

[8/25/94 public]

In todays build, getcellname core dumps:
..(no debugging symbols found)...
Core was generated by `getcellname'.
Program terminated with signal 11, Segmentation fault.
(gdb) where
#0  0xa4173357 in dce_cf__load_cache (-1073744884)
#1  0xa4173bcd in dce_cf_get_cell_name ()

[tom public]

This is also where dced dies:
(gdb) kill
Kill the inferior process? (y or n) In Local core dump file,
#0  0xa4173357 in dce_cf__load_cache (-1073744876)
(gdb) where
#0  0xa4173357 in dce_cf__load_cache (-1073744876)
#1  0xa4173bcd in dce_cf_get_cell_name (4406676, -1073744876)
#2  0x405dff in init_global_data (st=0xbffff414)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/misc.c:165
#3  0x4003c9 in main (ac=2, av=0xbffff448)
    at /project/dce/build/dce1.1-snap/src/admin/dced/server/main.c:307



CR Number                     : 11582
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10571,11513
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : svc
Short Description             : routing not validated until usage
Reported Date                 : 8/7/94
Found in Baseline             : 1.1
Found Date                    : 8/7/94
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10571
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/7/94 public]

Routes are not validated until usage. So a bad route is not detected
until it is actually used.  So for e.g. if secd is started as follows

     secd -w ERROR:blah:-- illegal_option

secd does the following :

     dce_svc_routing(...)  /* sets the route - even though illegal */

Next when secd tries to log a ERROR message using dce_svc_printf()
for the illegal option , the ERROR message is never logged.
( because the route for ERROR was changed even though it is illegal).

[08/07/94 public]
This is deliberate and part of the "lazy evaluation" model.
The SVC code cannot verify component names (they get registered at runtime)
I did not want to open files needlessly (too expensive if, say, no
fatal message is ever generated), etc.  While it could verify a simple
"blah" not being a valid routing type, it can't verify the filename
in teh face of chdir's and setuid's.



CR Number                     : 11513
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10571,11582
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : svc
Short Description             : Validation still poor for svc
Reported Date                 : 8/1/94
Found in Baseline             : 1.1
Found Date                    : 8/1/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10571
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/1/94 public]

This don't look right to me:
dcecp> log mod -change {rpc:general.1,xmit.1recv.1,cn_state.1,cn_pkt.1:FILE:/opt/dcelocal/tom.debug.dtscp} /.:/hosts/surf/dts-entity
dcecp> log show /.:/hosts/surf/dts-entity
dcecp> log show -debug /.:/hosts/surf/dts-entity
{rpc {{general 1} {xmit 1recv.1} {cn_state 1} {cn_pkt 1}} FILE /opt/dcelocal/tom.debug.dtscp}


The {xmit 1recv.1} item is suspect....

[8/1/94 public]

You're right, the {xmit 1recv.1} item is the problem. What's happening
is that the sub-component name has a period in it. And dcecp "log show" 
assumes that sub-component names do not have commas, colons, spaces, or
periods.

If this assumption is wrong, then this CR is against "dcecp".

[8/2/94 public]
The problem is the svc code accepted '1recv.1' as a level for the 'xmit'
debug output.  I ment to type 'xmit.1,recv.1'.  I don't believe this
is dcecp's fault.

[08/03/94 public]
The only illegal chars in a subcomponent name are period command and space.
Just FYI, Julie.

[8/3/94 public]
Did you mean "comma" instead of "command"?
Just for my infomation Rich?  :-)



CR Number                     : 11469
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10474
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : svc
Short Description             : multiple routing - GDS purposes
Reported Date                 : 7/28/94
Found in Baseline             : 1.1
Found Date                    : 7/28/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 10474
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/28/94 public]

OT 10476 is fixed now, "dce_svc_printf" is able to use multiple routes for
messages. However the specification of the multiple routes is not sufficient
for our purposes.

Our intention is, that all messages, that are written by "dce_svc_printf"
should be routed as specified in the routing specification string.
But as this information is useful in general only together with the
context, where it was generated, it should be routed additionally to the
logfile, that is specified for debug (or log) messages (if there is any).
The debug level need not to be checked, as we regard these messages as
important, such that they should be written into the logfile in any case.

As is implemented now, the multiple routes have to be specified in the
routing specification string for the severity level. We could realize what
we want by specifying the second route for every severity level equal to the
route for logging. However we regard this as too much specification for
such a simple thing, second it does not work, as till now serviceability is
not able to write messages from different routes into the same physical file.
The messages would overwrite each other (see OT 10474).

This defect is high-prior because we think that no customer accepts
that one gds server process writes 6 logfiles - and we have a lot
of server processes. If 10474 is fixed we can decrease the priority -
we'll have a (ugly) workaround - as described above.

[8/2/94 public]
I need some clarification and details.

First, let's call the 2 kinds of messages "debug" and "production", where
production is FATAL, ERROR, WARNING, etc.
You can specify multiple routes for production messages by:
    ERROR:FILE:/opt/dcelocal/var/some/file.log FILE:/tmp/another.log

Are you unhappy with the syntax of this?

Debug messages can only go one place in the current implementation.  It
would be a lot of work to change that.

Examples of things that do not work would be helpful.

[08/03/94 public]
We don't care about the syntax - we just use whatever you define.
Our problem is:
We have a logfile for debug messages - let's call it debug.log.

We want to put "production messages" to (i.e. ERROR):
1.) error.log
2.) debug.log

That would mean the following specification:

gds:general.1,ipc.2:BINFILE.2.2000:debug.log	for debug messages

ERROR:FILE:error.log BINFILE:/tmp/debug.log	for production messages

Regarding to 10474 we would like to do also:

FATAL:FILE:error.log BINFILE:/tmp/debug.log
WARNING:FILE:error.log BINFILE:/tmp/debug.log
NOTICE:FILE:error.log BINFILE:/tmp/debug.log
NOTICE_VERBOSE:FILE:error.log BINFILE:/tmp/debug.log

What we do now is: (see /opt/dcelocal/var/adm/directory/gds/.profile)

gds:general.1,ipc.2:BINFILE.2.2000:debug.log
ERROR:FILE:error.log 
FATAL:FILE:fatal.log
WARNING:FILE:warning.log
NOTICE:FILE:notice.log
NOTICE_VERBOSE:FILE:notice_verbose.log

What we also do in some components (i.e. gdsdsa) as a workaround is i.e.:

dce_svc_printf(GDS_S_EXITDSA_MSG,d26_dir_id);
DCE_SVC_LOG((DCE_SVC(gds_svc_handle,"%d"),GDS_S_GENERAL,svc_c_debug1,
                 GDS_S_EXITDSA,d26_dir_id));

What we would like to do (and we do it i.e. in gds/ipc) is to put this
into one SVC call:

dce_svc_printf(GDS_S_EXITDSA_MSG,d26_dir_id);

(where GDS_S_EXITDSA is assigned in gds.sams to svc_c_sev_notice -
that means that this message would be in debug.log AND notice.log
(or, in the first step, error.log))

We want to have all messages in debug.log because it's much more easier
to follow the history with reading one file (debug.log) than to
merge the information from 6 logfiles. Additionally we want to have
the production messages in a seperate file (not in debug.log)  because
somtimes it's enough to read the error.log to find the problem.

Do you need more clarification and details, John?
We know that this means some work (with tables of file descriptors, we guess).
But I think it's valid to want all (debug and production) messages
in one logfile. I think it's not acceptable that you always have to do
things like:

dce_svc_printf(GDS_S_EXITDSA_MSG,d26_dir_id);
DCE_SVC_LOG((DCE_SVC(gds_svc_handle,"%d"),GDS_S_GENERAL,svc_c_debug1,
                 GDS_S_EXITDSA,d26_dir_id));

Summary: We would like to specify our routing in the following way:

gds:general.1,ipc.2:BINFILE.2.2000:debug.log	for debug messages
ERROR:FILE:error.log BINFILE:/tmp/debug.log	for production messages
FATAL:FILE:error.log BINFILE:/tmp/debug.log		"
WARNING:FILE:error.log BINFILE:/tmp/debug.log		"
NOTICE:FILE:error.log BINFILE:/tmp/debug.log		"
NOTICE_VERBOSE:FILE:error.log BINFILE:/tmp/debug.log	"

[09/12/94 public]
Using OT CR 10474, is this sufficient?

gds:general.1,ipc.2:BINFILE.2.2000:debug.log	for debug messages
ERROR:FILE:error.log SAMEAS:gds			for production messages
FATAL:SAMEAS:ERROR					"
WARNING:SAMEAS:ERROR					"
NOTICE:SAMEAS:ERROR					"
NOTICE_VERBOSE:SAMEAS:ERROR				"

[09/14/94 public]
Sorry that I'm answering that late:

Sure, it's sufficient. I didn't realize when reading 10474 that it's possible
for SVC to put the same message to a TEXTFILE and to a BINFILE.
OK - once you have submitted the fix for 10474 I will change

gds/.profile.sh 

in the way Rich Salz has proposed.

We should change also the mentioned code segments

dce_svc_printf(GDS_S_EXITDSA_MSG,d26_dir_id);
DCE_SVC_LOG((DCE_SVC(gds_svc_handle,"%d"),GDS_S_GENERAL,svc_c_debug1,
                 GDS_S_EXITDSA,d26_dir_id));

to just

dce_svc_printf(GDS_S_EXITDSA_MSG,d26_dir_id);

This means changes in a lot (about 50, I guess) files.
It's late for such a huge submit - I know. But it's "only"
serviceability changes.
Could you please submit your changes for 10474 some days before
the HARD FREEZE?



CR Number                     : 11161
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : svc
Short Description             : dce_svc_routing doesn't work correctly
Reported Date                 : 7/1/94
Found in Baseline             : 1.1
Found Date                    : 7/1/94
Severity                      : B
Priority                      : 0
Status                        : dup
Duplicate Of                  : 11059
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : svcroute.c
Sensitivity                   : public

[7/1/94 public]

dce_svc_routing doesn't work correctly - we don't get any exception logging
into a file.

In gds/util/d27svc.c, function d27_001_svc_init we do:

dce_svc_routing((unsigned char *)"*:STDERR:-",st);

and, if tracing is switched on, additionally (i.e.):

dce_svc_routing("FATAL:TEXTFILE.1.100:/opt/dcelocal/var/directory/gds/adm/sstub/EXC_F%d",st);
...

The first problem is line 677 of svcroute.c:

It should change from

        else if (strcmp((char *)where, dce_svc_g_code_table[i]) == 0) {
to
        else if (strcmp((char *)where, dce_svc_g_code_table[i]) != 0) {

(We initialize dce_svc_g_code_table[i] with STDERR. When we call dce_svc_routing
the second time we want to overwrite the first call: where is TEXTFILE...
This should be overwritten by calling dce_svc__close_routes and
dce_svc__open_routes with the new route.)

With this change I come to dce_svc__open_routes - but also this doesn't work.
Basicly: dce_svc__open_routes is called by dce_svc_routing with 
":TEXTFILE.1.100:/opt/dcelocal/var/directory/gds/adm/sstub/EXC_F%d".
But it is called by dce_svcdce_svc_debug_routing with
"BINFILE.2.2000:/opt/dcelocal/var/directory/gds/adm/sstub/LOG%d".

The difference is the leading colon.

For TEXTFILE: "where" is overwritten by line 362: *p++ = '\0': after this
line "where" is "". So :

gens = strchr(where, SVC_LEVELSEP_CHAR)) (scanning of generation and count) 
						failes,

if (strcmp(where, ROUTE_TEXTFILE) == 0) failes, and no EXC_F... file is opened.

I tried to correct it: The result was that I got exception logging
but no debug logging.

So: Please give me a note if you can fix this soon. If not 
I will continue with fixing this in my sandbox. But I think 
SVC specialists are much faster than I am - I have to understand every line
first.

[7/8/94 public]
Already reported as CR 11059, but this CR explains it better and
has a fix outlined.  Fix is essentially:
    1. increment "p" to point to right place -- wasn't pointing to right
	part of route string.
    2. fix bad test of strcmp() - should be != instead ==.



CR Number                     : 10894
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : svc
Short Description             : Wildcards in routing specification strings are not recognized
Reported Date                 : 6/8/94
Found in Baseline             : 1.1b9
Found Date                    : 6/8/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 10891
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/8/94 public]

A routing specification string may contain an asterisk in the first
position, if it specifies the routing for all severity levels. They are
not recognized by dce_dvc_routing. The code of line 660:

    all = strcmp((char *)where, "*") == 0;

does never set "all" to TRUE, as "where" does not contain EOS after the
'*' (but ':'), so "where" differs from "*" in all cases. The line should
change to

    all = *where == '*';

[06/08/94 public]
This is a dup of 10891 but thanks for giving me the fix. :-)
	all = where[0] == '*' && where[1] == SVC_SEP_CHAR;

[06/08/94 public]
Also I fixed the parsing to you can put "*:STDERR:" and such in
the default routing file now.



CR Number                     : 10561
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : utils
Subcomponent Name             : sams
Short Description             : problems with format strings
Reported Date                 : 5/6/94
Found in Baseline             : 1.1
Found Date                    : 5/6/94
Severity                      : B
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10544
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/6/94 public]

We have a problem with the SAMS compiler of base-line 8, which has
changed its behaviour compared with base-line 6.

When a message contains more than one format element, e.g.

   "\t%-12.10s%-9d%-9.7s%-9.7s%-9.7s"

the SAMS compiler of base line 6 generates the following message in
dcegds.msg:

    \t%1$-12.10s%2$-9d%3$-9.7s%4$-9.7s%5$-9.7s

while the SAMS compiler of base line 8 generates

    \t%0$-12.10s%1$-9d%2$-9.7s%3$-9.7s%4$-9.7s

The digits between % and $, that indicate the position of the argument to
be substituted count from 0 now, while they have started to count from
1 up so far. When dce_svc_printf (of base line 8) gets such a message
it issues the format string itself rather than the first argument following.

Is this a bug in the SAMS compiler, or are we making something wrong ?

This is very urgent because our next code drop is scheduled for begin
of next week. No real test can work because "gdsdirinfo" which uses
the format string mentioned above.



CR Number                     : 10481
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : utils
Subcomponent Name             : svc
Short Description             : inconsistent log files - dce_svc_log_get
Reported Date                 : 4/28/94
Found in Baseline             : 1.1
Found Date                    : 4/28/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 10467
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/28/94 public]

"dce_svc_log_get" checks too early for an end of file. Due to
an inconsistent logging it may happen, that the end of the file
is reached when a data element is read according to the format
specification of the message found in the message catalog, which
was logged with a different (wrong) format string.
"dce_svc_log_get" should suppress this checking for end of file,
but seek for the next record first and then check for the end of file.

[04/28/94 public]
Reported and fixed yesterday as OT CR 10467.



CR Number                     : 10347
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : utils
Subcomponent Name             : 
Short Description             : dce_config having problem with highUNIX ID
Reported Date                 : 4/13/94
Found in Baseline             : 1.1
Found Date                    : 4/13/94
Severity                      : C
Priority                      : 3
Status                        : dup
Duplicate Of                  : 8856
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/13/94 public]


It seems like most OSF1 systems have a UNIX ID like the following:

nobody:*Nologin:4294967294:4294967294:anonymous NFS user:/:

However when dce_config reads this UNIX ID it complains about it:

S:****** The current highest UNIX ID for persons on this node is 4294967294.
config_sec[186]: 4.29497e+09: Syntax error
        Enter the starting point to be used for UNIX ID's that
        are automatically generated by the Security Service
        when a principal is added using "rgy_edit": (4.29497e+09) 
config_sec[233]: 4.29497e+09: Syntax error
S:****** The current highest UNIX ID for groups is 5000.
        Enter the starting point to be used for UNIX ID's that
        are automatically generated by the Security Service
        when a group is added using "rgy_edit": (5100) 

I think dce_config should handle this UNIX ID more gracefully.

[04/13/94 public]
It does handle it gracefully (for both user and group):

# Revision 1.2.45.2  1993/09/07  17:34:16  tom
#       Bug 8556 - don't include the 'nobody' user or the 'nogroup' group
#       in calculating the highest unix ids.
#       [1993/09/03  21:35:19  tom]

And the code:
        uid_values=`$passwd_file | \
                awk -F ":" -v GAP="$uid_gap" 'BEGIN {HIGHEST=0}
                        {if ( $3 > HIGHEST && $1 != "nobody") HIGHEST = $3}
                        END {print HIGHEST " " HIGHEST+GAP}'`
  
        gid_values=`$group_file | \
                awk -F ":" -v GAP="$gid_gap" 'BEGIN {HIGHEST=0}
                        {if ( $3 > HIGHEST && $1 != "nogroup" && $1 != "nobody")
 HIGHEST = $3}
                        END {print HIGHEST " " HIGHEST+GAP}'`



CR Number                     : 10288
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : utils
Subcomponent Name             : db
Short Description             : The dce_db_std_header_fetch
routine returns with error.
Reported Date                 : 4/4/94
Found in Baseline             : 1.0
Found Date                    : 4/4/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 10000
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : dbheader.c
Sensitivity                   : public

[4/4/94 public]

According to the test spec this is a known problem.  

Verify with TET test acldb/ts/db/dce_db_misc.c[db_header_fetch]

[4/5/94 public]
CR 10000 says that the implementation is not complete, hence the errors.
I'll mention the above test in that CR.



CR Number                     : 9821
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : utils
Subcomponent Name             : src/libdce
Short Description             : Undefined symbol "_dbopen" referenced
Reported Date                 : 1/26/94
Found in Baseline             : 1.1
Found Date                    : 1/26/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 9814
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b2
Affected File(s)              : libdce_1.o
Sensitivity                   : public

[1/26/94 public]

The "libdce/Makefile" had been changed as part of a "dce/utils" fix.

During the compilation of the first piece of library "libdce" the following
error occurred, breaking the build of "libdce":

[ /libdce ]

/project/dce/build/dce1.1-snap/tools/at386/macho/ld -R -export_default \
  libdce: -L/u1/devobj/sb/nb_486/export/at386/usr/shlib \
  -L/project/dce/build/dce1.1-snap/export/at386/usr/shlib \
  -L/usr/shlib -L/u1/devobj/sb/nb_486/export/at386/usr/lib \
  -L/project/dce/build/dce1.1-snap/export/at386/usr/lib \
  -o libdce.so.X libdce_1.o libdce_2.o libdce_3.o libdce_4.o  -lc -lbsd \
  /project/dce/build/dce1.1-snap/tools/at386/macho/gnulib
libdce_1.o: Undefined symbol "_dbopen" referenced

collect: /project/dce/build/dce1.1-snap/tools/at386/macho/real-ld returned \
  1 exit status
*** Error code 1
`build_all' not remade because of errors.

[1/27/94 public]
This was all cause by Makefile and directory shuffling, as outlined
in CR 9814.  It should all be considered one bug.



