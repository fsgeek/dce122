CR Number                     : 13581
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : library/dnscmpsimple.c, cdsd
Short Description             : comparison bug in cds/library/dnscmpsimple.c
Reported Date                 : 7/29/96
Found in Baseline             : 1.2.2b3
Found Date                    : 7/29/96
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : directory/cds/library/dnscmpsimple.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[07/29/96 public]
We found a bug in dnscmpsimple.c:CDScmp() when you compare two names and
one is a prefix of the other.  The routine would only use the length
of the first name when comparing the number of bytes, which isn't good
if the second name contains the same bytes as the first name but is
shorter in length.  The compare will then depend on the garbage bytes
after the second name.

This has ramifications in the server database since this routine is used to
compare keys.  We think this may contribute to placing entries into
the database out of order, which may contribute to looping when
traversing the Btree.  We have no evidence to support this, but keep
it in mind.

I'm checking in the fix to dnscmpsimple.c into R1.2.2 and will change
the status of this OT to fix when it gets in a baselevel.  For those
who can't wait, diffs are below (compared to R1.2.2 baselevel 3):

10,11d9
<  * Fix ambiguity in compare simplename function on comparing names where
one
<  * is a prefix of the other.
158,163d155
<                /*
<                 * Note: the following two lines may look
<                 * like they convert the name to all uppercase, but
<                 * they don't.  This is an old bug and this comparison,
<                 * as a result, is case sensitive.
<                 */
232c224
<         int     len1,
---
>         int     len,
236d227
<     int len;
238,239d228
<     len = (len1<len2) ? len1 : len2;
<
248c237
<     return ( len1 - len2 ); /* strings are equal if adjusted lengths are same */
---
>     return ( len - len2 ); /* strings are equal if adjusted lengths are same */

[10/31/96 public]

Roger,

  I think that this fix still contains a problem.  Inside the for loop the 
value of len2 is adjusted, but len is never reset.  I think that this could
cause problems.  Here's our current version of the function:

static int
CDScmp (byte_t  *name1_p,
        byte_t  *name2_p,
        int     name1_len,
        int     name2_len)
{
    int i, j;
    int shortest;
 
    shortest = ( name1_len < name2_len ) ? name1_len : name2_len;
 
    for ( i=0; i<shortest; i++ ) {
        /* CDS names may contain escaped wildcards */
        if ( *name2_p == '\\') {
            name2_p++;
            --name2_len;
            if (name2_len < shortest) shortest = name2_len;
        }
        if (( j = *name1_p++ - *name2_p++ ) != 0 ) return (j);
    }
    return ( name1_len - name2_len );
    /* strings are equal if adjusted lengths are same */
}

[11/01/96 public]

Good catch.  After looking at this, I also suggest checking
if ( *name1_p == '\\') and potentially updating shortest = name1_len.
The first fix is in R1.2.2b3.5.  These further suggestions won't be
able to get in though.

[12/06/96 public]
verified as fixed in R1.2.2



CR Number                     : 13363
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdsbrowser
Short Description             : ENDGAME: Build based on environment var
Reported Date                 : 2/23/96
Found in Baseline             : 1.2.1
Found Date                    : 2/23/96
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : src/Makeconf, src/directory/cds/Makefile
Sensitivity                   : public

[2/23/96 public]
Building of cdsbrowser is dependent upon Motif and X.
Changed automatic build to be driven by env var.
Turned off build via env var.

[3/20/96 public]
Fixed during endgame.



CR Number                     : 13209
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : failure of dcecdsacl6 test
Reported Date                 : 11/21/95
Found in Baseline             : 1.2.1
Found Date                    : 11/20/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : cdsseacl6
Sensitivity                   : public

[11/21/95 public]

Failure of dcecdsacl6 test.  The applicable section of the journal 
is below.  This is a failure on the DCE version with the first version 
of Xidl and the applicable HP bug fixes.  This OT is opened and assigned as 
advised by Shirley Conley. 

20|0 1 16487 1 513|Authenticated as st_admin5
520|0 1 16487 1 514|blu2_ch.st3: st_admin5 user command list and expected result
s:
520|0 1 16487 1 515|acl_edit $CELL/$CDSSHOST/systest5 -m user:st_p5:rcw pass
520|0 1 16487 1 516|acl_edit $CELL/$CDSSHOST/systest10 -m user:st_p10:rcw pass
520|0 1 16487 1 517|acl_edit $CELL/$CHS -m user:st_p5:w pass
520|0 1 16487 1 518|acl_edit $CELL/$CHS -m user:st_p10:w pass
520|0 1 16487 1 519|acl_edit $CELL/$CDSSHOST/systest5 -l pass
520|0 1 16487 1 520|
520|0 1 16487 1 521|st_admin5 test execution follows...
520|0 1 16487 1 522|acl_edit /.../test/blu2/systest5 -m user:st_p5:rcw
520|0 1 16487 1 523|ERROR:Output from command:
520|0 1 16487 1 524|ERROR: Requested clearinghouse exists but is not available (
dce / cds)
520|0 1 16487 1 525|Unable to bind to object /.../test/blu2/systest5
520|0 1 16487 1 526|st_admin5 cmd return:fail expected:pass
520|0 1 16487 1 527|acl_edit /.../test/blu2/systest10 -m user:st_p10:rcw
520|0 1 16487 1 528|ERROR:Output from command:520|0 1 16487 1 529|ERROR: Request
ed clearinghouse exists but is not available (
dce / cds)
520|0 1 16487 1 530|Unable to bind to object /.../test/blu2/systest10
520|0 1 16487 1 531|st_admin5 cmd return:fail expected:pass
520|0 1 16487 1 532|acl_edit /.../test/blu2_ch -m user:st_p5:w
520|0 1 16487 1 533|ERROR:Output from command:
520|0 1 16487 1 534|ERROR: Not registered in endpoint map (dce / rpc)
520|0 1 16487 1 535|Unable to bind to object /.../test/blu2_ch
520|0 1 16487 1 536|st_admin5 cmd return:fail expected:pass
520|0 1 16487 1 537|acl_edit /.../test/blu2_ch -m user:st_p10:w
520|0 1 16487 1 538|ERROR:Output from command:
520|0 1 16487 1 539|ERROR: Not registered in endpoint map (dce / rpc)
520|0 1 16487 1 540|Unable to bind to object /.../test/blu2_ch
520|0 1 16487 1 541|st_admin5 cmd return:fail expected:pass
520|0 1 16487 1 542|acl_edit /.../test/blu2/systest5 -l
520|0 1 16487 1 543|ERROR:Output from command:
520|0 1 16487 1 544|ERROR: Not registered in endpoint map (dce / rpc)
520|0 1 16487 1 545|Unable to bind to object /.../test/blu2/systest5
520|0 1 16487 1 546|st_admin5 cmd return:fail expected:pass
@520|0 1 16487 1 546|st_admin5 cmd return:fail expected:pass
520|0 1 16487 1 547|st_admin5 failed: 1) acl_edit $CELL/$CDSSHOST/systest5 -m us
er:st_p5:rcw
520|0 1 16487 1 548|st_admin5 failed: 2) acl_edit $CELL/$CDSSHOST/systest10 -m u
ser:st_p10:rcw
520|0 1 16487 1 549|st_admin5 failed: 3) acl_edit $CELL/$CHS -m user:st_p5:w
520|0 1 16487 1 550|st_admin5 failed: 4) acl_edit $CELL/$CHS -m user:st_p10:w
520|0 1 16487 1 551|st_admin5 failed: 5) acl_edit $CELL/$CDSSHOST/systest5 -l
520|0 1 16487 1 552|blu2_ch.st3 st_admin5 Total failures: 5 out of 5 operations

[02/07/96 public]

This problem is not seen in the system testing as of this date.
This OT is closed.
See OT# 13307 for changed problem area.



CR Number                     : 13208
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12932
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : server
Short Description             : unable to delete clearinghouse
Reported Date                 : 11/18/95
Found in Baseline             : 1.1wp
Found Date                    : 11/18/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : directory/cds/server/db_diags.c
>        directory/cds/server/back_ground.c
>        directory/cds/server/ta_cle.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[11/18/95 public]

Even with the proposed fix from Gradient described below
they are still seeing the error "Directory not empty" when 
control programs such as (CDSCP,DCECP) try to delete a freshly 
created clearinghouse.

Repeat By:

        The error was reproduced using the following series of CDSCP (transla-
	table to DCECP) commnads:
	CDSCP> create clearinghouse /.:/test_ch
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP: Directory not empty (dce/cds)
	CDSCP> set dir /.: to skulk
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP>

	Also,
	CDSCP> create clearinghouse /.:/test_ch
	CDSCP> clear clearinghouse /.:/test_ch
	CDSCP> create clearinghouse /.:/test_ch
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP: Directory not empty (dce/cds)
	CDSCP> set dir /.: to skulk
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP>

[ Related OT 12932 may benefit from Gradient's proposed fix ]

================================================================
One Line Description:

	Control programs(CDSCP, DCECP) unable to delete freshly created
	clearinghouse and return the error "Directory not empty".

Full Description:

        When CDSD is requested to delete a freshly created clearinghouse
	through any of the control programs viz., CDSCP or DCECP, it returns
	the error "Directory not empty" implying that the new clearinghouse
	has a directory entry (excluding the root entry)that has to be
	deleted before the clearinghouse is deleted. If the user forces a
	directory skulk on the root, the operation succeeds in deleting
	the clearinghouse. Hence pointing to the fact something was wrong 
	with the creation process of clearinghouse rather than deletion 
        process. The bugfix described below fixes the shortcoming of the
	CDS code that creates a new clearinghouse and enables the deletion
	of clearinghouse without having to do the root skulk.

Repeat By:

        The error was reproduced using the following series of CDSCP (transla-
	table to DCECP) commnads:
	CDSCP> create clearinghouse /.:/test_ch
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP: Directory not empty (dce/cds)
	CDSCP> set dir /.: to skulk
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP>

	Also,
	CDSCP> create clearinghouse /.:/test_ch
	CDSCP> clear clearinghouse /.:/test_ch
	CDSCP> create clearinghouse /.:/test_ch
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP: Directory not empty (dce/cds)
	CDSCP> set dir /.: to skulk
	CDSCP> delete clearinghouse /.:/test_ch
	CDSCP>

Proposed Solution:

	The proposed solution is based on the fact that the creation process
	of clearinghouse is broken rather than the deletion process. The
	creation of clearinghouse basically has to the following 4 operations
	in sequence:

	1) Create the clearinghouse object
	2) Add or attach necessary attributes to the object
	3) Spawn a skulk thread after the new object is created
	4) Poke the advertiser with the new info and export the bindings
	   of the new clearinghouse to namespace.

	Atleast this is what is done when the primary clearinghouse is created
	during the setup of the initial namespace. First, thing we saw in the
	code was the step 4 was altogether missing. The created clearinghouse
	bindings were never exported to name space. So, this functionality
	was included in the function srv_create_clh() in the file
	$src/directory/cds/server/dns_service_rpc.c. In fact the code was
	brought in from the counterpart dns_service_ncl.c residing in the same
	directory. With step 4 taken care of, it was to figure out why the
	deletion was not working. Lets compare the outputs of the CDSCP with
	the fix and the one without the fix.

	Without fix:
	CDSCP> create clearinghouse /.:/test_ch
	CDSCP> show clearinghouse /.:/test_ch
	
                        SHOW
               CLEARINGHOUSE   /.../almond_cell.gradient.com/test_ch
                          AT   1995-10-02-17:21:36
                     CDS_CTS = 1995-10-02-21:20:58.854920100/00-00-1b-4f-cc-f6
                     CDS_UTS = 1995-10-02-21:20:59.754921300/00-00-1b-4f-cc-f6
              CDS_ObjectUUID = 324cdfb0-fd00-11ce-89ea-00001b4fccf6
                 CDS_AllUpTo = 0
        CDS_DirectoryVersion = 4.0
                  CDS_CHName = /.../almond_cell.gradient.com/test_ch
           CDS_CHLastAddress = <empty set>
                 CDS_CHState = on
           CDS_CHDirectories = <empty set>
          CDS_ReplicaVersion = 4.0
              CDS_NSCellname = /.../almond_cell.gradient.com
	Empty set. (dce / cds)
	Empty set. (dce / cds)

	With the fix:
        CDSCP> create clearinghouse /.:/test_ch
        CDSCP> show clearinghouse /.:/test_ch

                        SHOW
               CLEARINGHOUSE   /.../ocean_cell/test_ch
                          AT   1995-10-02-17:37:31
                     CDS_CTS = 1995-10-02-21:37:06.505465100/00-80-29-eb-a0-28
                     CDS_UTS = 1995-10-02-21:37:19.745465300/00-80-29-eb-a0-28
              CDS_ObjectUUID = 769051fa-fd02-11ce-ac0f-008029eba028
                 CDS_AllUpTo = 1995-10-02-21:37:12.835465100/00-80-29-eb-a0-28
        CDS_DirectoryVersion = 4.0
                  CDS_CHName = /.../ocean_cell/test_ch
           CDS_CHLastAddress = :
                       Tower = ncacn_ip_tcp:192.92.110.171[]
           CDS_CHLastAddress = :
                       Tower = ncadg_ip_udp:192.92.110.171[]
                 CDS_CHState = on
           CDS_CHDirectories = :
           UUID of Directory = 09328dbb-fcfa-11ce-ac0f-008029eba028
           Name of Directory = /.../ocean_cell
          CDS_ReplicaVersion = 4.0
              CDS_NSCellname = /.../ocean_cell
               Read Accesses = 15
              Write Accesses = 0
         References Returned = 0
    Root Not Reachable Count = 1
       Data Corruption Count = 0
              Skulk Failures = 0
         Entry Missing Count = 0
       Upgrades Failed Count = 0
                     Enables = 0
                    Disables = 0

	As we can see, the first output had uninitialized fields (or attributes)
	for the clearinghouse object whereas the second output shows everything
	Now, when we did a skulk for the root directory, the CDS_CHDirectories
	attribute used to get filled witht the root entry (/.../cell_name) and
	its UUID. Thereafter the deletion works. Hence, the cause for the error
	as we deduced, is that the deletion code was expecting to see the 
	CDS_CHDirectories attribute of the clearinghouse object which was not
	initialized by the creation code. When it doesnot find it it propagates
	an obscure error messasge to the top that shows up as "Directory not
	empty". Hence we proceeded to fix the clearinghouse creation code to
	include the initialization of CDS_CHDirectories attribute for the
	clearinghouse object. As we suspected there was a piece of code in
	the file db_common.c by name refresh_chdirectories() whose sole purpose
	was to check for CDS_CHDirectories attribute and incorporate it if
	not found. If this check is not done at this step, step 3 which includes
	background skulk usually returns prematurely. (It actually checks for
	CDS_CHDirectories attribute and returns error if not found. The function
	ta_replica_add() conveniently ignores skulk failures.). The 
	refresh_directories() function was including the CDS_CHDirectories
	attribute only to the objects with the type "ET_Directory". The condit-
	ional if statement was fixed to include the objects of type 
	"ET_clearinghouse". As a consequence step3 ran to its completion and
	filling up all the other attributes viz., ALLUPTO, LASTADDRESS etc.

	We reran the clearinghouse functional tests + replica checklist tests
	to make sure the fix didnot disrupt the other functionality of CDS.

DIFFS:

$DCESRC/directory/cds/server/db_common.c:
-----------------------------------------
./directory/cds/server/db_common.c
Comparing revision 2.1.2.1 with the file in your sandbox.
10a11,15
>  * Revision 2.1.2.2  1995/10/02  15:07:49  ramana
>  *    Fixed refresh_chdirectories() function to check for CHDirectories
>  *    attribute for a clearinghouse object also.
>  *    [1995/10/02  14:38:10  ramana]
>  *
14c19
<  *
---
>  *
1992,1993c1994,2018
<                 if ((hash_p->dir_type == ET_directory) &&
<                     (!set_dnstest(stream_p->db_dir.data_p,
---
>
>                 if ((
>                       (hash_p->dir_type == ET_directory)
>                     /*
>                        * The CHDirectories attribute is
>                        * necessary for a clearinghouse. The
>                        * deletion procedure for a clearinghouse
>                        * looks up this attribute to check if the
>                        * clearinghouse is empty or not(excluding
>                        * the root entry). This function is called
>                        * whenever a new clearinghouse is created
>                        * (via db_enable()). Hence, if the CHDirectories
>                        * attribute is not found, it should be added
>                        * here. As a consequence this will enable the
>                        * skulk thread (spawned later in db_enable())
>                        * to run through its completion.
>                        */
> #ifndef GRADIENT_FIX
>                       ||
>
>                       (hash_p->dir_type == ET_clearinghouse)
> #endif
>                      )
>                      &&
>                      (!set_dnstest(stream_p->db_dir.data_p,
----------------------------------------------------------------------------

$DCESRC/directory/cds/server/dns_service_rpc.c
./directory/cds/server/dns_service_rpc.c
Comparing revision 2.1 with the file in your sandbox.
11,12c11,15
<  * Revision 2.1  1994/12/12  23:06:02  devrcs
<  * OSF DCE 1.1 Source
---
>  * Revision 2.1.2.2  1995/10/05  14:23:48  ramana
>  *    Changed srv_create_clh() to include the exporting of the clearinghouse
>  *    bindings to namespace after the advertiser is signalled about the
>  *         new clearinghouse.
>  *    [1995/10/05  14:22:42  ramana]
13a17,19
>  * Revision 2.1  1994/12/12  23:06:02  devrcs
>  *    OSF DCE 1.1 Source
>  *
17c23
<  *
---
>  *
690,691d695
<
<
977a979
>
978a981,1005
>
> #ifndef GRADIENT_FIX
>     /*
>      * Brought in the piece of code from ta_mgmt.c (mgmt_create_namespace)
>      * wherein the clearinghouse bindings are exported after the addition of
>      * a new clearinghouse.
>      */
>
>      if (status == DNS_SUCCESS) {
>       int export_status;
>
>         export_status = (matched_ch_file == DNS_NOTFND) ? net_export_ch (ch_p)
>							:net_re_export_ch(ch_p);
>
>         /* If we can't export our bindings to the clearinghouse,
>          * then acl_edit isn't going to be able to bind to it,
>          * and dce_config won't succeed, so stop now!
>          */
>        if (!export_status)
>             dce_svc_printf(CDS_S_SERVER_EXPORTFAIL_EB_MSG);
>         }
>
>
> #endif /* GRADIENT_FIX */
>

[12/21/95 public]
Sorry I haven't addressed this sooner.  I believe there are two separate
problems here.  First, the clearinghouse is not being exported to the
namespace immediately.  Second, there is a synchronization problem
between the background thread and the ta_replica_add() in
mgmt_create_cle().

For the first problem, see OT 12932 which has a fix in there that
exports the clearinghouse earlier than the above suggested place.

For the second problem, we found that sometimes the background thread
was already running before ta_replica_add() had finished in
mgmt_create_cle().  Some of the actions of the background thread need to
run after the clearinghouse is successfully created.  We have a fix
which uses the file_p->file_back_inhibit flag to synchronize things
between mgmt_create_cle and background.  I'll need a week or so to
verify the fix on a reference platform, and then I'll post the diffs here.

Also, there is a problem with the above proposed solution in modifying
the refresh_chdirectories() routine.  The CDS_CHDirectories
attribute is only supposed to list the directories stored at that
clearinghouse.  With the above modification, the clearinghouse name now
gets added to the CDS_CHDirectories attribute of the clearinghouse.  In
more explicit terms, if you do a "cdscp show clearinghouse /.:/chname",
"/.:/chname" is now in the CDS_CHDirectories list when it shouldn't be.
So, you shouldn't modify refresh_chdirectories().


-------------------------------------------------------------------------------

[12/6/96  public]
verified as fixed in R1.2.2



CR Number                     : 13121
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 13098
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsclerk
Short Description             : acl_edit hang in dceseacl test
Reported Date                 : 9/13/95
Found in Baseline             : 1.2
Found Date                    : 9/13/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : sec
Sensitivity                   : public

[9/13/95 public]

CHO run on latest 1.2 bits: (with Xidl integrated):  IBM AIX DCE server, 
2 HP clients.  In the first run of the test security/ts/dceseacl the 
test hung on the line "Setting up permissions to change acls for 
seacladibm_l3p".  The process table showed a hung acl_edit of 
/.:/sec/principal/seacliibm_l30 -n user:seacladibm_l3p:rc . 
The cdsclerk, had accumulated 905:31 execution time when I looked at 
it this morning.  There didn't look to be any meaningful evidence in 
var logs.  The cdsadv had dumped core about 14 hours later.

The following is a dbx on it, in case this helps: 

/opt/dcelocal/var/adm/directory/cds/cdsadv
(root@ibm_l3) -->dbx /opt/dcelocal/bin/cdsadv core
dbx Version 3.1.
Type 'help' for help.
reading symbolic information ...
[memory image in core]

abort process in cma__abort_process at 0xd078e5f8 ($t24)
0xd078e5f8 (cma__abort_process+0x40) 80410014        lwz   r2,0x14(r1)
(dbx) where
cma__abort_process(0x0) at 0xd078e5f8
exc_raise(0x0) at 0xd078d678
exc_pop_ctx(0x0) at 0xd078d880
cma__thread_base(0x0) at 0xd0794e90

If there is something else that I could look for/add to this OT 
just let me know.

[12/22/95 public]

This problem has not been seen since the merge of the bug fixes from 
HP into the 1.2.1 baseline. 
closed.



CR Number                     : 13098
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdsclerk
Short Description             : cdsclerk dumps core after 2 hours CHO
Reported Date                 : 9/6/95
Found in Baseline             : 1.2
Found Date                    : 9/5/95
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.1
Affected File(s)              : undefined
Sensitivity                   : public

[9/6/95 public]

	The CHO run cdsclerk on the server node dumps core after 
	1 hour and 55 minutes.  Please remember that the reference 
	platform for DCE 1.2 is AIX 3.2.5.  

        This core dump doesn't really trace to anything in particular
        running on the machine.  Journals for tests running when the
        core dump occurs are successful and uncomplaining.  It is almost
        as if cdsclerk will stay up for a limited time, because different
        mixes of tests result in this same core dump around the 2 hour run
        time.

        A dbx of the core looks like this:

abort process in raise at 0xd00c1bc0 ($t3734)
0xd00c1bc0 (raise+0x24) 80410014        lwz   r2,0x14(r1)
(dbx) where
raise(0x0) at 0xd00c1bc0
abort(0x0) at 0xd00c1ad0
dce_svc_printf_withfile(0x20076c60, 0x100451e6, 0x1cf, 0x10045219, 0x6, 0x1010, 0x10d0ab8a
, 0xffffffff) at 0xd0416c30
clerk_client(0x0) at 0x1001339c
th_start(0x0) at 0x10005b1c
cma__thread_base(0x0) at 0xd03f9d60

        In the /opt/dcelocal/var/adm/cds directory the file below
        has the same date stamp as the core.  Logs don't hold anything
        that useful I can see.

        srw-------   1 root     system         0 Aug 31 16:54 cdsclerk_16729_root


        The secd on the server dumps core 2 hours later.  Probably this
        is not particularly interesting due to the cdsclerk failure above.
        It's dbx looks like this:

abort process in cma__abort_process at 0xd03f35f8 ($t7)
0xd03f35f8 (cma__abort_process+0x40) 80410014        lwz   r2,0x14(r1)
(dbx) where
cma__abort_process(0x0) at 0xd03f35f8
exc_raise(0x0) at 0xd03f2678
exc_pop_ctx(0x0) at 0xd03f2880
cma__thread_base(0x0) at 0xd03f9e90

        The daemons on the client node remain running.

[9/23/95 public]

Some further information.  The latest CHO run produced the expected cdsclerk 
core dump within the same time frame, BUT it doesn't appear to be in the 
same place.  

Running when the core dump occurred:  dceseacl on the IBM, dcerpidl test #2 
(pipe_client, pipe_server) on one HP client, the other HP client idle.  The 
following messages appeared with the coredump.  

----- cdsclerk(15913) FATAL cds library threads_lib.c 448 0x204f1960
*********** BUGCHECK **********
1995-09-25-17:38:20.525-04:00I----- cdsclerk(15913) FATAL cds library threads_li
b.c 451 0x204f1960
Threads package has bugchecked.
Bugcheck code is ... -14
Threads bug ref# ... 761
Errno String........ A system call received a parameter that is not valid.
Current thread ..... 0x20658a28

DBX of the core dump: 

(root@ibm_l3) -->dbx /opt/dcelocal/bin/cdsclerk core.1
dbx Version 3.1.
Type 'help' for help.
reading symbolic information ...
[memory image in core.1]

abort process in raise at 0xd00c1bc0 ($t3793)
0xd00c1bc0 (raise+0x24) 80410014        lwz   r2,0x14(r1)
(dbx) where
raise(0x0) at 0xd00c1bc0
abort(0x0) at 0xd00c1ad0
th_bugcheck(0x0, 0xffffffff) at 0x10005444
th_death(0x0) at 0x10005a60
cma__run_down_context(0x0) at 0xd045f800
cma__cleanup_thread(0x0, 0xffffffff, 0xffffffff) at 0xd045e9b4
cma__thread_base(0x0) at 0xd045eeec

[12/11/95 public]

Since this does not happen any more in the new 1.2.1 bits, I'm closing
this defect.



CR Number                     : 13085
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : CDSD memory leaks
Reported Date                 : 8/30/95
Found in Baseline             : 1.1
Found Date                    : 12/9/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint,1.2.2
Affected File(s)              : back_skulk.c, ta_create.c, ta_lookup.c  directory/cds/server/back_skulk.c
>        directory/cds/server/ta_create.c
>        directory/cds/server/ta_lookup.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[8/30/95 public]

(from warnick@hi.com)

Cdsd has some memory leaks.  While running some cds tests the
process size of cdsd grows very large.  We enabled the dns_malloc
wrapper and saved information concerning every malloc() and if
it was freed.  It appears from the debug info that several code paths 
aren't freeing memory that should be freed.  

This is reproducible by running the dcesx system test.
 

Added track back information to the malloc debug code so we could find
the code paths where the mallocs occurred.  Added the calls to the
routines that do the needed free's.

REGRESSION TEST SCENARIO:
 
 Run dcesx, cds abuse and killer tests.
  
RCSDIFFS (either inserted manually or via Fci):
 
     *** /tmp/back_skulk.c.7.1.29112.1	Wed Aug 16 12:29:26 1995
     --- /tmp/back_skulk.c.7.2.29112.2	Wed Aug 16 12:29:26 1995
     ***************
     *** 1604,1613 ****
     --- 1604,1616 ----
           /*
            *  Check the current directory name.  If it isn't in the preferred
            *  cell, change it in the hash table and then update the parentpointer.
            */
       
     + #ifdef hitm
     +     db_dir_release(stream_p);
     + #endif
           status = db_dir_read(stream_p);
           if (status != DNS_SUCCESS) {
               return(status);
           }
       
 
     *** /tmp/ta_create.c.7.1.29180.1	Wed Aug 16 12:56:07 1995
     --- /tmp/ta_create.c.7.2.29180.2	Wed Aug 16 12:56:07 1995 

     ***************
     *** 2272,2281 ****
     --- 2272,2284 ----
       		    
       		    (void)db_dir_update(stream_p, &tlog);
       
       		    /* Get parent acs and convergence */
       		    stream_p->db_function = OP_ModifyAttribute;
     + #ifdef hitm
     + 		    (void)db_dir_release (parent_stream_p);
     + #endif
       		    (void)skulk_sched(stream_p);
       		    } /* End create child success */
       		} /* End create directory success */
       	    } /*End security check successful */
               } /* End pseudo directory read successful */
 
     *** /tmp/ta_lookup.c.7.1.29228.1	Wed Aug 16 13:00:31 1995
     --- /tmp/ta_lookup.c.7.2.29228.2	Wed Aug 16 13:00:31 1995
     ***************
     *** 1297,1306 ****
     --- 1297,1312 ----
       	    {
       	    status = DNS_UNKNOWNENTRY;
       	    db_entry_release(stream_p);
       	    }
       	}
     + #ifdef hitm
     +    else
     +         {
     + 	db_entry_release(stream_p);
     +         }
     + #endif
       
           if (status == DNS_SUCCESS)
       	{
               dns_status_t dir_status    ;        /* Holds directory read status */
       	/* Get CHlist if their is one */
     ***************
     *** 1785,1794 ****
     --- 1791,1803 ----
       	 * to see if the last name is a directory
       	 * Clear out stream, so no hash_p left to mess up what actually
       	 * gets read.
       	 */
       	db_dir_release(stream_p);
     + #ifdef hitm
     + 	db_entry_release(stream_p);
     + #endif
       	data.d_lookingfor = ET_directory;
       	status = lookup_dir(&data);
       	break;
           default:
       	status = lookup_entry(&data);

[11/21/95]

fixed as proposed in OT. 

./directory/cds/server/back_skulk.c
Comparing the file in your sandbox with revision 1.1.7.1.
*** 1.1.7.1     1995/10/24 20:58:22
--- /u0/rcs_trees/dce/rcs/#odexm024417/back_skulk.c     1995/10/31 20:31:24
***************
*** 8,16 ****
  /*
   * HISTORY
   * $Log:	c013085,v $
# Revision 1.3  96/12/06  09:15:56  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [domian 12/6/96 public]
# 
# Revision 1.2  95/11/21  15:13:08  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [dlynch 11/21/95 ]
# 
-  * Revision 1.1.7.1  1995/10/24  20:58:22  dlynch
-  * *** Initial Branch Revision ***
-  *
   * Revision 1.1.6.9  1994/08/26  21:55:24  zee
   *    In skulk_dir, add parameter in call to back_upgrade_directory_actions.
   *    [1994/08/26  21:48:29  zee]
--- 8,13 ----
***************
*** 1597,1602 ****
--- 1594,1600 ----
       *  cell, change it in the hash table and then update the parentpointer.
       */

+     db_dir_release(stream_p);
      status = db_dir_read(stream_p);
      if (status != DNS_SUCCESS) {
          return(status);
./directory/cds/server/ta_create.c
Comparing the file in your sandbox with revision 1.1.12.1.
*** 1.1.12.1    1995/10/24 20:58:27
--- /u0/rcs_trees/dce/rcs/#odexm024417/ta_create.c      1995/10/31 20:31:25
***************
*** 8,16 ****
  /*
   * HISTORY
   * $Log:	c013085,v $
# Revision 1.3  96/12/06  09:15:56  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [domian 12/6/96 public]
# 
# Revision 1.2  95/11/21  15:13:08  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [dlynch 11/21/95 ]
# 
-  * Revision 1.1.12.1  1995/10/24  20:58:27  dlynch
-  * *** Initial Branch Revision ***
-  *
   * Revision 1.1.11.8  1994/08/26  21:55:34  zee
   *    In create_directory_acs, if DirectoryVersion is >=4.0, set default objec
t
   *    acl to the catalog manager.
--- 8,13 ----
***************
*** 2265,2270 ****
--- 2262,2268 ----

                    /* Get parent acs and convergence */
                    stream_p->db_function = OP_ModifyAttribute;
+                   (void)db_dir_release(parent_stream_p);
                    (void)skulk_sched(stream_p);
                    } /* End create child success */
                } /* End create directory success */
./directory/cds/server/ta_lookup.c
Comparing the file in your sandbox with revision 1.1.16.1.
*** 1.1.16.1    1995/10/24 20:58:36
--- /u0/rcs_trees/dce/rcs/#odexm024417/ta_lookup.c      1995/10/31 20:31:26
***************
*** 8,16 ****
  /*
   * HISTORY
   * $Log:	c013085,v $
# Revision 1.3  96/12/06  09:15:56  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [domian 12/6/96 public]
# 
# Revision 1.2  95/11/21  15:13:08  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [dlynch 11/21/95 ]
# 
-  * Revision 1.1.16.1  1995/10/24  20:58:36  dlynch
-  * *** Initial Branch Revision ***
-  *
   * Revision 1.1.13.1  1995/02/16  22:02:10  levy
   *    Submission of 1.1 unintegrated.
   *    [1995/02/16  20:41:31  levy]
--- 8,13 ----
***************
*** 1294,1299 ****
--- 1291,1300 ----
            db_entry_release(stream_p);
            }
        }
+     else
+       {
+       db_entry_release(stream_p);
+       }

      if (status == DNS_SUCCESS)
        {
***************
*** 1782,1787 ****
--- 1783,1789 ----
         * gets read.
         */
        db_dir_release(stream_p);
+       db_entry_release(stream_p);
        data.d_lookingfor = ET_directory;
        status = lookup_dir(&data);
        break;

[12/6/96 public]

fixed in R1.2.2; fixed tested OK.



CR Number                     : 12942
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : core dump of cdsadv possibly related to acl_edits
Reported Date                 : 07/06/1995
Found in Baseline             : 1.1
Found Date                    : 07/06/1995
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[7/7/95 public]
Core dump of cdsadv on AIX one-node cell during continuous hours 
of operation system test run.  This occurred during the eraobj001 
test.  At about the same time period an acl_edit process that had 
been hanging seemed to complete and the test continued.  The acl_edits 
that occur after this fail.  This does not occur during the same 
system test runs on HP node cells. 
 

Below find the dbx of the core:
    

/opt/dcelocal/var/adm/directory/cds/cdsadv
(root@ibm_l3) -->dbx /opt/dcelocal/bin/cdsadv core
dbx Version 3.1.
Type 'help' for help.
reading symbolic information ...
[memory image in core]

abort process in raise at 0xd00c1bc0 ($t3697)
0xd00c1bc0 (raise+0x24) 80410014        lwz   r2,0x14(r1)
(dbx) where
raise(0x0) at 0xd00c1bc0
abort(0x0) at 0xd00c1ad0
th_bugcheck(0x0, 0xffffffff) at 0x100060b0
th_death(0x0) at 0x100066b0
cma__run_down_context(0x0) at 0xd0463800
cma__cleanup_thread(0x0, 0xffffffff, 0xffffffff) at 0xd04629b4
cma__thread_base(0x0) at 0xd0462eec

[12/22/95 public]

This problem is no longer seen on final DCE 1.2.1. 
closed



CR Number                     : 12938
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : messages from cdsclerk during testing
Reported Date                 : 06/26/95
Found in Baseline             : 1.1
Found Date                    : 06/26/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.1
Affected File(s)              : dced
Sensitivity                   : public

[6/27/95 public]
During system test continuous hours of operation the following 
messages appear on the IBM DCE secd/dced server node.  These messages 
have not appeared when system test is run with an hp dced/secd server 
on the same DCE version.

1995-06-26-11:49:02.523-04:00I----- cdsclerk(15526) FATAL cds library threads_li
b.c 448 0x204d55c8
*********** BUGCHECK **********
1995-06-26-11:49:02.558-04:00I----- cdsclerk(15526) FATAL cds library threads_li
b.c 451 0x204d55c8
Threads package has bugchecked.
Bugcheck code is ... -14
Threads bug ref# ... 761
Errno String........ A system call received a parameter that is not valid.
Current thread ..... 0x2036cb40


[1:11pm, 7/11/95]

Are you all running in a pure OSF DCE 1.1 Gold + unintegrated + Warranty Patch 
environment?  If so, we can try to repro the problems here.  If you are
running with some sort of augmented code, do you think we need that to
reproduce the problems?  Also, what thread draft level are you running
on HPUX?  

We are running some tests on pure osf code and are seeing some
core dumps but not exactly what you seem to be seeing.  We are 
investigating (but not in haste) the problems we are seeing.

Gerry

[7/12/95 public]

What level of AIX and DCE are you running?  Also, what level of PTF's have you
applied for both AIX and AIX DCE?  Can you give a better description of how AIX
DCE is being used in this cell config?  Is the AIX DCE used as a client cell
configuration?  I see mention of AIX secd/dced, but there is no dced on DCE
1.3.  Does this occur in a reproducable fashion, and if so, after how long?
In your DCE 1.1 code (on the HP side of things), what level of OSF code are
you running with?

Also, do you have a testcase that causes the problem to happen?  If not, what
was going on in the test that caused the problem?

This information will help us try and reproduce the problem.

[12/22/95 public]

This problem is no longer seen on final DEC 1.2.1 system test. 
closed.



CR Number                     : 12932
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 13208
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : server
Short Description             : Binding information for new clearinghouses not exported
Reported Date                 : 6/23/95
Found in Baseline             : 1.1
Found Date                    : 6/23/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint,1.2.2
Affected File(s)              : directory/cds/server/ta_cle.c 
 directory/cds/server/ta_cle.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[6/23/95 public]

A support customer has reported (and I have confirmed) that when
a new clearinghouse is created (either when configuring an 
additional CDS server via dce_config or directly via dcecp or
cdscp), binding information for the clearinghouse object is not
exported.  The simplest way to demonstrate this behavior is to
use dce_config to create an additional CDS server; during the
course of the configuration, error messages will be displayed:

	Not an RPC entry (dce/rpc)
	Unable to bind to object /.:/foo_ch

Similar messages will be generated if such dcecp operations as
"rpcentry show /.:/foo_ch" or "acl show /.:/foo_ch" are attempted.

As this behavior did _not_ occur with DCE 1.0.3, presumably some
change introduced into DCE 1.1 is the culprit.  Since this problem
does not arise with respect to the initial CDS server, which is
configured by way of the dns_initialize function, a plausible
candidate is the mgmt_create_cle function, which did change between
DCE 1.0.3 and DCE 1.1 and which is invoked by dcecp and cdscp (and,
by extension, dce_config) when creating a new clearinghouse.

An interesting twist is the fact that if one stops and restarts
cdsd, the missing binding information will be created and exported.
The agent for this is the db_enable function, which not only is
invoked by cdsd during startup, but also _may_ be called by
mgmt_create_cle.  One hypothesis, then, is that one of the changes
in mgmt_create_cle is causing db_enable to _not_ be called as it
was in the past.  (There are, of course, a number of more arcane
possibilities.)

[12/6/95 public]

The fix for this is very small, so I'm including it here.

In module ...src/directory/cds/server/ta_cle.c, procedure
mgmt_create_cle(), we want to export the clearinghouse 
towers and advertise it, just before calling ta_replica_add().

Add the following at line 260:
> 
>/*
> * Export clearinghouse and Poke the advertiser
> */
>if (!net_re_export_ch(ch_p)) {
> goto entry_exists;
>}
>adver_signal_new_info(ns_p->ns_advertiser);

We've tested this modification using the killer test suite, and
it eliminates the problem cited above.

[10/8/96 public]

 Fixed in 1.1 maintenance tree.

./directory/cds/server/ta_cle.c
Comparing revision 1.1.16.1 with revision 1.1.16.2.
*** 1.1.16.1    1995/02/16 22:02:09
--- 1.1.16.2    1996/10/08 18:23:00
***************
*** 270,277 ****
            }
  
              /*
!              * Poke the advertiser
               */
              adver_signal_new_info (ns_p->ns_advertiser);
  
            /* add replica */
--- 274,285 ----
            }
  
              /*
!            * OT 12932: Binding info for new clearinghouses not exported
!              * Export clearinghouse and Poke the advertiser
               */
+           if (!net_re_export_ch (ch_p)) {
+               goto entry_exists;
+           }
              adver_signal_new_info (ns_p->ns_advertiser);
  
            /* add replica */

[12/6/96 public]

fixed in R1.2.2; fixed tested OK.



CR Number                     : 12914
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : cdscp should use readline in get_command_line() function
Reported Date                 : 6/14/95
Found in Baseline             : 1.1
Found Date                    : 6/14/95
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : directory/cds/control/get_command.c
 directory/cds/control/get_command.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[6/14/95 public]

However, cdscp is a "unsupported" admin command, customer reported the
following suggestion:

        There is no reason that cdscp couldn't use the readline
library built in to libdce.

*** /animal/build/dce1.1/src/directory/cds/control//get_command.c       Mon Dec 12 17:53:54 1994
--- get_command.c       Tue Jun  6 13:02:41 1995
***************
*** 7,12 ****
--- 7,14 ----
   */
  /*
   * HISTORY
+  * Gradient Enhancement:
+  *  Use readline from libdce to provide command line editing for cdscp.
   * $Log:	c012914,v $
# Revision 1.2  96/12/06  09:21:02  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [domian 12/6/96 public]
# 
# Revision 1.1  95/06/14  14:20:42  root
# new CR
# 
   * Revision 2.1  1994/12/12  22:51:48  devrcs
   * OSF DCE 1.1 Source
***************
*** 90,112 ****
  **
  */
  
  char *
  get_command_line (
      struct cmdblk     *cbp)           /* ptr to command block */
  {
      char              *status;
  
      if (cbp->mode == INTERACTIVE)
      {
        fputs ((cbp->num_lines == 0) ? cbp->pprompt : cbp->sprompt, stdout);
        fflush (stdout);
      }
- 
-     /*
-      * get the command input
-      */
-     cbp->ciplen = MAX_CL_LEN;
-     status = fgets(cbp->cipbuf, cbp->ciplen, cbp->ipfile);
  
      /*
       * echo all commands read in batch mode to standard output
--- 92,129 ----
  **
  */
  
+ char * readline( const char * );
+ void add_history( const char * );
+ 
+ 
  char *
  get_command_line (
      struct cmdblk     *cbp)           /* ptr to command block */
  {
      char              *status;
+     char              *cs;
+     char              *ns = NULL;
  
      if (cbp->mode == INTERACTIVE)
      {
+       /*
        fputs ((cbp->num_lines == 0) ? cbp->pprompt : cbp->sprompt, stdout);
        fflush (stdout);
+       */
+       status = readline((cbp->num_lines == 0) ? cbp->pprompt : cbp->sprompt);
+       if (status) {
+           strncpy(cbp->cipbuf, status, MAX_CL_LEN);
+           add_history(cbp->cipbuf);
+       }
+     } 
+     else
+     {
+         /*
+          * get the command input
+          */
+         cbp->ciplen = MAX_CL_LEN;
+         status = fgets(cbp->cipbuf, cbp->ciplen, cbp->ipfile);
      }
  
      /*
       * echo all commands read in batch mode to standard output

[12/6/96  public]
verified as fixed in R1.2.2



CR Number                     : 12819
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : Accessing NULL ptr in cds code
Reported Date                 : 3/16/95
Found in Baseline             : 1.1
Found Date                    : 3/16/95
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.2.2
Affected File(s)              : directory/cds/control/dnscp_crekid.c
>        directory/cds/control/emit_ref_hdr.c
>        directory/cds/control/visit_cds.c
>        directory/cds/gda/gda_update_parent.c
>        directory/cds/server/unix_stubs.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[3/16/95 public]

cdsGetHandle() in cds/library/dnsgethandle.c can return NULL pointer when
the allocation of memory fails.

But calls of this function do not always check the NULL ptr before using it.
For example, in gda/gda_cell.c, get_cell_info() calls cdsGetHandle(), then 
passes the handle to cdsReadAttrValue() (in cds/library/dnsreadattrvalue.c)
which uses the handle without checking for NULL ptr first.

[12/6/96 public]
verified as fixed in R1.2.2



CR Number                     : 12812
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : 
Short Description             : "dcecp clearinghouse initiate" command doesn't work
Reported Date                 : 3/2/95
Found in Baseline             : 1.1
Found Date                    : 3/2/95
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint,1.2.2
Affected File(s)              : directory/cds/server/dns_service_rpc.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[3/2/95 public]
                          DCE Problem Report
                  =================================

Submitter Information 
----------------------

Submitter Name:           warnick
Organization:             Hitachi Computer Products (America), Inc. 
Email Address:            osd.dce@hi.com warnick@hi.com 
Phone:                    617-890-0444 
DCE License Number:       1616-MDCE-92
Licensee's Defect Number: OSDqa10626


Hardware/Software Configuration
--------------------------------

Offering and Version:   DCE7.1 
Component (Module):     dns_service_rpc.c 
Client Hardware:        see below 
Client Software:        see below 
Server Hardware:        see below 
Server Software:        see below 
Compiler:               n/a

Problem Description
--------------------

Severity Level: Severe

Date of First Occurrence: 02/14/95

One Line Description:
   OSDqa10626 "dcecp clearinghouse initiate" command doesn't work

Full Description:

Related-file:::: Problem
 DESCRIPTION:
 
 The dcecp command "dcecp clearinghouse initiate" with the checkpoint
 option doesn't work.  The checkpoint never finishes because the
 thread trying to perform the checkpoint is stuck in pthread_cond_wait()
 and there doesn't appear to be another thread in a code path to perform
 the broadcast. All updates have completed so the checkpoint should
 continue.  Cdsd gets into a state where it will only perform reads 
 of the database because the file state is now set to the checkpoint
 state.  All writes will also wait on the same condition until the 
 checkpoint has completed.
 
 
 REPRODUCIBLE:
 
 Yes, so far everytime this command has been tried.
 
 
 TEST SOFTWARE DESCRIPTION:
 
 
 DESCRIPTION OF HARDWARE WHERE BUG OCCURRED:
 
 
 DESCRIPTION OF WHERE TEST SUCCESSFULLY RAN:
 
Related-file::Added 950218 by warnick:: /build/hiosfm/RCS/dce1.1/src/directory/cds/server/./dns_service_rpc.c,v 7.4
 /build/hiosfm/RCS/dce1.1/src/directory/cds/server/./dns_service_rpc.c,v 7.4
 warnick 1995/02/19 00:29:41 +12 -2
 Reason:  OSDqa10626 "dcecp clearinghouse initiate" command doesn't work
 Fix for "dcecp clearinghouse initiate" command.
 
     *** /tmp/ci.18469..dns_service_rpc.c.18501.1	Sat Feb 18 19:29:46 1995
     --- /tmp/dns_service_rpc.c.18501.2	Sat Feb 18 19:29:46 1995
     ***************
     *** 18,27 ****
     --- 18,31 ----
        * the full copyright text.
        */
       /*
        * HISTORY
        * $Log:	c012812,v $
# Revision 1.5  96/12/06  09:28:35  root
# changed fields: Status  Fixed In Baseline  Affected File(s)  Responsible Engr.  Resp. Engrs Company   new/changed/deleted note(s) [domian 12/6/96 public]
# 
# Revision 1.4  96/10/08  15:08:51  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [mariko 10/8/96 public]
# 
# Revision 1.3  95/12/04  19:27:04  root
# changed fields: Interest List CC  
# 
# Revision 1.2  95/12/02  19:38:30  root
# changed fields: Interest List CC   new/changed/deleted note(s) [axg 12/02/95 public]
# 
# Revision 1.1  95/03/02  11:49:35  root
# new CR
# 
     +  * Revision 7.4  1995/02/19  00:29:41  warnick
     +  * Reason:  OSDqa10626 "dcecp clearinghouse initiate" command doesn't work
     +  * Fix for "dcecp clearinghouse initiate" command.
     +  *
        * Revision 7.3  1994/11/07  20:05:52  wright
        * Merged in beta3 changes.
        *
        * Revision 1.1.8.11  1994/09/06  17:37:10  proulx
        * 	fix timestamps
     ***************
     *** 2426,2435 ****
     --- 2430,2442 ----
           DEB_ASCII_BUF_dns_status(statusBuf)
           int              thstatus;
           file_info_t     *file_p = NULL;
           db_stream_t     *stream_p = NULL;
           dns_status_t     status = CDS_SUCCESS;
     + #ifdef hitm
     +     int              prev_func;            /* old stream access type */
     + #endif
       
           DCE_SVC_DEBUG((
               cds__svc_handle,
               cds_svc_server,
               svc_c_debug2,
     ***************
     *** 2460,2469 ****
     --- 2467,2480 ----
       	    dce_svc_printf(CDS_S_PTHREADMUTEXUNLOCK_A_MSG, (long)thstatus);
       	}
        	break;
       
             case FORCECHECKCMD:
     + 
     + #ifdef hitm
     +         status = db_modify_stream_function(stream_p, OP_ReadAttribute, &prev_func);
     + #endif
       	db_checkpoint_schedule(file_p);
       
       	if ((thstatus = dthread_lock(&(file_p->file_mutex))) < 0) {
       	    dce_svc_printf(CDS_S_PTHREADMUTEXLOCK_A_MSG, (long)thstatus);
       	}
 
Related-file:::: Resolution 
 DESCRIPTION OF BUG FIX:
  
  
 REGRESSION TEST SCENARIO:
  
  
 RCSDIFFS (either inserted manually or via Fci):

[12/02/95 public]
Build Level: 		DCE 1.1 Warranty Patch

Affected File(s): src/directory/cds/server/dns_service_rpc.c

One Line Description: Deadlock in forced clearinghouse checkpoint

Full Description:

"dcecp clearinghouse initiate -checkpoint" hangs for any clearinghouse
under all circumstances.

Proposed Solution:

The porblem happens because there is a deadlock in the CDS server code.
The db_checkpoint function in db_checkpoint.c file waits for
file_p->file_write_count to become zero before doing the actual
checkpointing. The force_clh funtion in dns_service_rpc.c, which
gets called when the above command is given, opens the clearinghouse
database stream in OP_ModifyAttribute mode which bumps up
file_p->file_write_count. The deadlock occurs when force_clh waits
for the checkpointing to complete after scheduling the checkpointing.
It closes the stream only after the checkpointing is done.
File_p->file_write_count is decremented when the stream is closed.
So db_checkpoint is waiting for file_p->file_write_count to become
zero before doing the checkpointing and force_clh is waiting for
the checkpointing to be over before making file_p->file_write_count zero.

The solution is to close the stream in force_clh before sleeping for
the checkpointing to be done. There is no harm as force_clh does
not use the stream after that point. The code in force_clh
(dns_service_rpc.c) should be modified as follows:

<<<<<<< OLD
      case FORCECHECKCMD:
	db_checkpoint_schedule(file_p);

	if ((thstatus = dthread_lock(&(file_p->file_mutex))) < 0) {
	    dce_svc_printf(CDS_S_PTHREADMUTEXLOCK_A_MSG, (long)thstatus);
	}
=======
      case FORCECHECKCMD:
	db_checkpoint_schedule(file_p);
	if (stream_p)  db_close_stream(stream_p), stream_p = NULL;

	if ((thstatus = dthread_lock(&(file_p->file_mutex))) < 0) {
	    dce_svc_printf(CDS_S_PTHREADMUTEXLOCK_A_MSG, (long)thstatus);
	}
>>>>>>> NEW

[10/8/96 public]

  Fixed in 1.1 maintenance tree.

./directory/cds/server/dns_service_rpc.c
Comparing revision 1.1.8.11 with revision 1.1.15.1.
*** 1.1.8.11    1994/09/06 17:37:10
--- 1.1.15.1    1996/10/08 18:18:52
***************
*** 2448,2453 ****
--- 2452,2459 ----
  
        case FORCECHECKCMD:
        db_checkpoint_schedule(file_p);
+       /* OT 12812: "dcecp clearinghouse initiate" command doesn't work */
+       if (stream_p)  db_close_stream(stream_p), stream_p = NULL;
  
        if ((thstatus = dthread_lock(&(file_p->file_mutex))) < 0) {
            dce_svc_printf(CDS_S_PTHREADMUTEXLOCK_A_MSG, (long)thstatus);

[12/6/96 public]
verified as fixed in R1.2.2.



CR Number                     : 12784
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : command_ref
Short Description             : cdscp_show_clearinghouse.8 man page has error in example & omissions
Reported Date                 : 1/27/95
Found in Baseline             : 1.1
Found Date                    : 1/27/95
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2
Affected File(s)              : src/dce_books/command_ref/man8cds/show_clearinghouse.8cds
Sensitivity                   : public

[1/27/95 public]

                          DCE Problem Report
                  =================================


Submitter Information 
----------------------

Submitter Name:           lconrad
Organization:             Hitachi Computer Products (America), Inc. 
Email Address:            osd.dce@hi.com lconrad@hi.com 
Phone:                    617-890-0444 
DCE License Number:       1616-MDCE-92
Licensee's Defect Number: OSDqa10204


Hardware/Software Configuration
--------------------------------

Offering and Version:   DCER1.0 
Component (Module):      
Client Hardware:        see below 
Client Software:        see below 
Server Hardware:        see below 
Server Software:        see below 
Compiler:               n/a

Problem Description
--------------------

Severity Level: Minor

Date of First Occurrence: 12/20/94

One Line Description:
   OSDqa10204 The cdscp_show_clearinghouse.8 man page has error in example & omissions

Full Description:

Related-file:::: Problem
 DESCRIPTION:
 The cdscp_show_clearinghouse.8 man page has an error in the example (typo)
 and some of the attribute summaries don't end with a ".".
 
 See "NOTE:"s below (there are 4 of them).
 REPRODUCIBLE: Yes
 
 TEST SOFTWARE DESCRIPTION: man page review
 % man cdscp_show_clearinghouse.8
 cdscp show clearinghouseHitachi DCEcdscp-show clearinghouse(8cds)
 
 NAME
      cdscp show clearinghouse - Displays attribute information
      about the specified clearinghouse
 
 SYNOPSIS
      cdscp show clearinghouse clearinghouse-name [attribute-name]
       [with attribute-name = attribute-value]
 
 ARGUMENTS
      clearinghouse-name
                The full name of a specific clearinghouse.  The
                last simple name can contain wildcard characters.
 
      attribute-name
                The name of a particular attribute (see below)
 NOTE: Missing "." -------------------------------------------^
 
      attribute-value
                The value of a particular attribute.
 
 DESCRIPTION
 [...] NOTE: None of the following descriptions are terminated with a ".".
      The following counters and their values are displayed only
      when you use this command to display all attributes and
      their values:
 
      Data Corruption Count
                Specifies the number of times that the data corr-
                uption event was generated
 
      Enables   Specifies the number of times that the clearing-
                house was enabled since it was last started
 
      Read Accesses
                Specifies the number of read operations directed
                to this clearinghouse
 
      References Returned
                Specifies the number of requests directed to this
                clearinghouse that resulted in the return of a
                partial answer instead of satisfying the client's
                request
 
      Skulk Failures
                Specifies the number of times that a skulk of a
                directory, initiated from this clearinghouse,
                failed to complete- usually because one of the
                replicas in the replica set was unreachable
 
      Entry Missing Count
                Specifies the number of times the clearinghouse
                entry missing event was generated
 
      Root Not Reachable Count
                Specifies the number of times the root lost event
                was generated
 
      Upgrades Failed Counts
                Specifies the number of times that upgrades failed
 
      Write Accesses
                Specifies the number of write operations directed
                to this clearinghouse
 
      Disables  Specifies the number of times that the clearing-
                house was disabled since it wsa last started
                                             ^^
 NOTE: typo ---------------------------------||
 
 [...]
 EXAMPLE
      The following command displays the current values of the
      CDS_UTS and CDS_ObjectUUID attributes associated with the
      /.:/Chicago1_CH clearinghouse:
      cdscp> show clearinghouse /.:/Chicago1_CH CDS_UTS CDS-ObjectUUID
                                                           ^
 NOTE: This dash should be an underscore ------------------|
 
 [...]
 
 DESCRIPTION OF HARDWARE WHERE BUG OCCURRED: Hitachi Mainframe VM - sybil
 
 DESCRIPTION OF WHERE TEST SUCCESSFULLY RAN: n/a
Related-file::Modified 941222 by nancy:: remove the periods, don't add more
 The Chicago Manual of Style says that lists in which the items do not make
 up complete sentences are not to be ended with periods. Other style manuals
 do allow periods at the end of such lists. So there's no one right way to do 
 this. And given that the OSF DCE documentation came from a large number of 
 different sources, it's not surprising that different conventions were used
 in different places. In this case, after fixing the typos, I think the right fix
 is actually to remove the periods that are there, rather than adding periods to
 the rest of the phrases.
Related-file::Added 950118 by lconrad:: /build/hiosfm/RCS/dce/doc/admin.rf/man8cds/./cdscp_show_clearinghouse.8cds,v 7.4
 /build/hiosfm/RCS/dce/doc/admin.rf/man8cds/./cdscp_show_clearinghouse.8cds,v 7.4
 lconrad 1995/01/18 16:29:13 +5 -9
 Reason:  OSDqa10204 The cdscp_show_clearinghouse.8 man page has error in example & omissions
 Corrected spelling error and punctuation error.
 
     *** /tmp/ci.3225..cdscp_show_clearinghouse.8cds.3256.1	Wed Jan 18 11:29:15 1995
     --- /tmp/cdscp_show_clearinghouse.8cds.3256.2	Wed Jan 18 11:29:15 1995
     ***************
     *** 57,67 ****
       .VL
       .LI "\fIclearinghouse-name\fR"
       The full name of a specific clearinghouse.  The last simple name can contain 
       wildcard characters.
       .LI "\fIattribute-name\fR"
     ! The name of a particular attribute (see below)
       .LI "\fIattribute-value\fR"
       The value of a particular attribute.
       .LE
       .wH "<endargdeflist>"
       .SH "DESCRIPTION"
     --- 57,67 ----
       .VL
       .LI "\fIclearinghouse-name\fR"
       The full name of a specific clearinghouse.  The last simple name can contain 
       wildcard characters.
       .LI "\fIattribute-name\fR"
     ! The name of a particular attribute (see below).
       .LI "\fIattribute-value\fR"
       The value of a particular attribute.
       .LE
       .wH "<endargdeflist>"
       .SH "DESCRIPTION"
     ***************
     *** 90,103 ****
       .LI "\fBCDS_CHName\fR"
       Specifies the full name of the clearinghouse.
       .LI "\fBCDS_CHState\fR"
       Specifies the state of the clearinghouse.  The state \fIon\fR indicates the 
       clearinghouse is running and available.
     - .zA "def,CR 8033,R1.0.3,CDS_CellnametoCDS_NSCellname "
       .LI "\fBCDS_NSCellname\fR"
       Specifies the name of the cell in which the clearinghouse resides.
     - .zZ "def,CR 8033,R1.0.3,CDS_CellnametoCDS_NSCellname"
       .LI "\fBCDS_CTS\fR"
       Specifies the creation timestamp (CTS) of the clearinghouse.
       .LI "\fBCDS_DirectoryVersion\fR"
       Specifies the current version of the directory in the clearinghouse in which 
       the directory was created.
     --- 90,101 ----
     ***************
     *** 108,118 ****
       the directory was created.
       .LI "\fBCDS_UTS\fR"
       Specifies the timestamp of the most recent update to an attribute
       of the clearinghouse.
       .LE
     - .zA "def,8031,R1.0.3,'attribs'->'counters' & correct wording"
       .PP
       The following counters and their values are displayed only when you use this 
       command to display all attributes and their values:
       .VL
       .LI "\fBData Corruption Count\fR"
     --- 106,115 ----
     ***************
     *** 143,155 ****
       .LI "\fBWrite Accesses\fR"
       Specifies the number of write operations directed to this
       clearinghouse
       .LI "\fBDisables\fR"
       Specifies the number of times that the clearinghouse was disabled since
     ! it wsa last started
       .LE
     - .zZ "def,8031,R1.0.3,'attribs'->'counters' & correct wording"
       .SS "Privilege Required"
       .PP
       You must have read permission to the clearinghouse.  If you specify a wildcard 
       clearinghouse name, you also need read permission to the cell root directory.
       .SH "EXAMPLE"
     --- 140,151 ----
       .LI "\fBWrite Accesses\fR"
       Specifies the number of write operations directed to this
       clearinghouse
       .LI "\fBDisables\fR"
       Specifies the number of times that the clearinghouse was disabled since
     ! it was last started
       .LE
       .SS "Privilege Required"
       .PP
       You must have read permission to the clearinghouse.  If you specify a wildcard 
       clearinghouse name, you also need read permission to the cell root directory.
       .SH "EXAMPLE"
     ***************
     *** 156,166 ****
       .PP
       The following command displays the current values of the \fBCDS_UTS\fR 
       and \fBCDS_ObjectUUID\fR attributes associated with the 
       \fB/.:/Chicago1_CH\fR clearinghouse:
       .iS
     ! \f(CWcdscp> \fBshow clearinghouse /.:/Chicago1_CH CDS_UTS CDS-ObjectUUID
       \f(CW
                               SHOW
                      CLEARINGHOUSE   /.../abc.com/Chicago1_CH
                                 AT   1991-10-21-13:12:30
                            CDS_UTS = 1991-10-21-13:04:04.000000009/08-00-2b-1c-8f-1f
     --- 152,162 ----
       .PP
       The following command displays the current values of the \fBCDS_UTS\fR 
       and \fBCDS_ObjectUUID\fR attributes associated with the 
       \fB/.:/Chicago1_CH\fR clearinghouse:
       .iS
     ! \f(CWcdscp> \fBshow clearinghouse /.:/Chicago1_CH CDS_UTS CDS_ObjectUUID
       \f(CW
                               SHOW
                      CLEARINGHOUSE   /.../abc.com/Chicago1_CH
                                 AT   1991-10-21-13:12:30
                            CDS_UTS = 1991-10-21-13:04:04.000000009/08-00-2b-1c-8f-1f
 
Related-file::Added 950118 by lconrad:: doc workaround
 Corrected two typos: wsa=> was
 		     CDS-ObjectUUID => CDS_ObjectUUID
 Added one missing period.

[11/2/95 public]
Assigned to Bob Binstock, who's doing editorial work on this
book.

[11/03/95 public]

Fixed typos: 'wsa' became 'was' and, in EXAMPLES, 'CDS-ObjectUUID'
became 'CDS_ObjectUUID'.

The missing period in the ARGUMENTS list had already been added.

Periods had been added to all items in the DESCRIPTION list.  This is
consistent with editorial practice within the doc set.  (Which is not to
say that this practice has been thoroughly implemented in all books,
yet.)



CR Number                     : 12782
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : command_ref
Short Description             : formating problem for
clear_cached_server and clear_clearinghouse and add_directory
Reported Date                 : 1/26/95
Found in Baseline             : 1.1
Found Date                    : 1/26/95
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1PH
Affected File(s)              : clear_cached_server.8cds,clear_clearinghouse.8cds,add_directory.8cds
Sensitivity                   : public

[1/26/95 public]

 The cdscp_clear_cached_server.8 man page ARGUMENTS section has the "name"
 argument indented into the explanation.

  The same problem is true for the arguments to cdscp_clear_clearinghouse(8cds)
 man page.

 The attribute-value summary in the arguments section of cdscp's
add_directory  man page is not formatted properly, the indent is not right.

[7/5/95 public]

Assigned this to Digital for DCE 1.2, though perhaps
the right thing to do is simply cancel the bug, since
the command program manpages are obsolescent now.

[9/19/95 public]

Well, I needed to fix them for 1.1PH, so I did.  Corrected as above.
One less burden for the designated DEC individual, whomever she may be ...



CR Number                     : 12767
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : large ckpt file size growth by new epoch command ensure linked list integrity
Reported Date                 : 12/9/94
Found in Baseline             : 1.1
Found Date                    : 11/28/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1maint,1.2.2
Affected File(s)              : dnscp_credir.c, dnsnewepoch.c
directory/cds/server/sets_lib.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[12/15/94 public]

A support customer reported the following:

> CDS checkpoint file gets dramatic size increase when the command
> 
>     cdscp set directory <foo> to new epoch master <ch1> readonly <ch2>
> 
> is used.  The more objects there are in the directory <foo>, the more
> significant the size growth will be.  Once the checkpoint file size is
> increased, there is no existing tool to reduce the size down to its
> original.
> 
> The following test was performed in our lab:
> 
> An initial cell was configured with one test directory "cds_test" added
> to the cell root directory (/.:/cds_test).  100 objects were created in
> the directory /.:/cds_test.  All the directories in the cell were
> replicated from the clearinghouse /.:/batman_ch, where master replicas
> were kept, to the clearinghouse /.:/sisko_ch, where readonly replicas
> were kept.
> 
> After all the directories were skulked, cdsd was shut down by the
> command
> 
>     cdscp disable server
> 
> which forced checkpointing the CDS database.  The checkpoint file
> was measured to be about 300KB.
> 
> Then the new epoch commands were performed:
> 
>     cdscp set directory /.:/cds_test master /.:/batman_ch readonly /.:/sisko_ch
>     <so did the other directories...>
> 
> Note that the master replica and the readonly replica were kept unchanged.
> After all the directories were skulked and cdsd was brought down (by
> cdscp disable server), the checkpoint file was measured to be about
> 600KB -- almost doubled.
> 
> The checkpoint file got consistent increase when the new epoch command
> was used repeatedly.

I tried this test on one of our HP machines running the reference port of
DCE 1.1, and can confirm the phenomenon described.  I only created ten 
objects, but setting the test directory to a new epoch and disabling cdsd 
immediately caused the checkpoint files to grow by about 12Kb.  Just to 
check whether this was a new phenomenon introduced in DCE 1.1, I ran the 
same tests on an HP machine running the reference port of DCE 1.0.3.  The 
results were the same.

I did point out to the submitter of this report that this _is_ an unusual 
use of "set to new epoch" and that, in general, the only times this command
would normally be invoked would be to designate a new master clearinghouse
for a directory, or else to temporarily exclude an inaccessible replica so
a skulk can complete.

I've also looked at the source for "set to new epoch", but cannot find any
comments which provide any particular rationale for allowing the checkpoint
file to grow apparently without bounds.  Since no one has ever submitted a
bug report dealing with this particular (and unusual) use of "set to new
epoch", I can't determine at this point whether this is actually a bug or 
simply a design decision.  The customer regards this as a serious defect;
please advise.

				--Jim

[1/18/95 public]

Janet McCann looked into this and found the problem.  ACLs kept getting
inserted into the set because they didn't match existing ones (when they
should have) because of a padding and alignment problem.  The easiest and
quickest fix is the following diff to src/directory/cds/server/sets_lib.c
in the routine set_insert_member:

% diff sets_lib_r11.c sets_lib_fixed.c
815a816,828
>       if (dns_p) {
>           /* this is a hack to fix the problem where
>            * acls aren't matching cause of padding.
>            * without writable copies, we don't need all the history
>            * associated with single_valued attributes anyway.
>            */
>           if ((dns_p->vtype == VT_DACL) && newindex > 0) {
>             value_p = (DBSetMember_t *)INDEX_DBSet(set_p, newindex-1);
>             if (EQ_Timestamp(value_p->dm_ts, upd_p->ud_timestamp))
>                 return(DNS_SUCCESS);
>           }
>         }
>
1126c1139
<                       (dns_cts *)upd_p->ud_timestamp) > AFTER)
---
>                       (dns_cts *)upd_p->ud_timestamp) >= 0)

There is another associated fix to help shrink the directory buckets,
but the fix hasn't been verified yet.  When it is, I'll add the diff
here.  Janet has been in touch with Paul Smythe and Dean Hsu @ HP.

--Roger

[11/14/95]

Fixed as proposed above by Zee for 11maint.

./directory/cds/server/sets_lib.c
Comparing the file in your sandbox with revision 1.1.7.1.
*** 1.1.7.1     1995/10/10 18:47:35
--- /u0/rcs_trees/dce/rcs/#odexm004299/sets_lib.c       1995/10/17 19:46:14
***************
*** 8,16 ****
  /*
   * HISTORY
   * $Log:	c012767,v $
# Revision 1.4  96/12/06  09:26:29  root
# changed fields: Status  Fixed In Baseline  Affected File(s)   new/changed/deleted note(s) [domian 12/6/96 public]
# 
# Revision 1.3  95/11/15  14:58:53  root
# changed fields: Fixed In Baseline   new/changed/deleted note(s) [dlynch 11/14/95 ]
# 
-  * Revision 1.1.7.1  1995/10/10  18:47:35  dlynch
-  * *** Initial Branch Revision ***
-  *
   * Revision 1.1.6.4  1994/08/16  18:28:04  jd
   *    drop from janet
   *    [1994/08/13  16:06:58  jd]
--- 8,13 ----
***************
*** 816,821 ****
--- 813,831 ----
        &oldvalue_p, &newindex);
      if (valuePresent)
          {
+       if (dns_p) {
+           /* this is a hack to fix the problem where
+            * acls aren't matching cause of padding.
+              * without writable copies, we don't need all the history
+              * associated with single_valued attributes anyway.
+              */
+             if ((dns_p->vtype == VT_DACL) && newindex > 0) {
+               value_p = (DBSetMember_t *)INDEX_DBSet(set_p, newindex-1);
+               if (EQ_Timestamp(value_p->dm_ts, upd_p->ud_timestamp))
+                   return(DNS_SUCCESS);
+             }
+         }
+
          /* See if this overwrites a previous value */
          for (idx = 0; ; idx++)
              {
***************
*** 1126,1132 ****

      if (!dns_p->rep_rec) /* Always replace pre replicas */
        {
          if (dnsCmpCTS((dns_cts *)set_p->ds_ts,
!                       (dns_cts *)upd_p->ud_timestamp) > AFTER)
              return(DNS_SUCCESS);
        }
      else if (dns_p->atype == DNS_LASTUPDATE)
--- 1136,1142 ----
      if (!dns_p->rep_rec) /* Always replace pre replicas */
        {
          if (dnsCmpCTS((dns_cts *)set_p->ds_ts,
!                       (dns_cts *)upd_p->ud_timestamp) >= 0)
              return(DNS_SUCCESS);
        }
      else if (dns_p->atype == DNS_LASTUPDATE)

[12/6/96 public]
verified as fixed in R1.2.2



CR Number                     : 12515
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : HYP: outdate 1.0.3 cds test README
Reported Date                 : 10/5/94
Found in Baseline             : 1.1
Found Date                    : 10/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : test/directory/cds/README
Sensitivity                   : public

[10/5/94 public]
The README describing the functional tests and what the various logs
in the log directory are for is going to be in the test log directory 
with the logs in theis release. I will outdate the old one in the 
src/test/directory/cds directory. This will be done as soon as I can 
get hold of a rat to jog my memory on the correct method to outdate
a file.

Has been ok'd for the HYP list by Susan. The file doesn't get built or 
installed  so its zero risk assuming I don't screw up the outdate which
is why I'm looking for a rat.........

[10/5/94 public]
File defuncted.



CR Number                     : 12482
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : HYP: Need CDS h-cell FVTs
Reported Date                 : 10/4/94
Found in Baseline             : 1.1
Found Date                    : 10/4/94
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b21
Affected File(s)              : admin/dcecp/ts/*
Sensitivity                   : public

[10/4/94 public]

CDS h-cell FVTs that are available need to be dropped.  My understanding
is that some of this work is TETified and some isn't.  Whatever exists
that can be run needs to be dropped - TETified or not TETified.

[10/5/94 public]
Updated Roger's tests to use the same format as the other dcecp tests.
Submitted.



CR Number                     : 12465
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : cdscp status error "^" no longer printed
Reported Date                 : 10/3/94
Found in Baseline             : 1.1b18
Found Date                    : 10/3/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.2.2
Affected File(s)              : directory/cds/includes/cds.sams
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[10/3/94 public]

The cdscp status error position indicator, "^", is no longer printed.
In 1.0.3 code, output looked like the following example:

   $ cdscp show object /.../TESTCELL/TESTDIR/a/b/c/d/e/obj07 Test_Attribute
   syntax error
   show object /.../TESTCELL/TESTDIR/a/b/c/d/e/obj07 Test_Attribute
                                                   ^

Now, it looks like the following:

   $ cdscp show object /.../TESTCELL/TESTDIR/a/b/c/d/e/obj07 Test_Attribute
   Syntax error
   show object /.../TESTCELL/TESTDIR/a/b/c/d/e/obj07 Test_Attribute
                                                   

The final line of output consists of spaces to the appropriate place for
the position indicator, and a space, " ", in place of the position indicator,
"^", itself.

This problem was found by the failures it causes in HP's cdscp-based,
cds functional test suite.  Although this is not a critical bug for the
1.1 release, customers will need to use cdscp for some cds administrative
tasks.  Lack of the syntax error position indicator will make these uses
more difficult.  If the fix is trivial, it should go into the release.

[112/6/96  public]
verified as fixed in R1.2.2.



CR Number                     : 12453
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12879,12987
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : cdsd(30115) ERROR cds server db_btree.c
Reported Date                 : 9/30/94
Found in Baseline             : 1.1b20
Found Date                    : 9/30/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint,1.2
Affected File(s)              : db_btree.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[9/30/94 public]

I had a cell of 5 machines running, 2 HPUX and 2 OSF1 machines.
One of the OSF1 machines crashed. Then I brought down the cell,
restarted everything, and started the tests again. After about
an hour, the machine running the CDS replica printed the following
error:

root@alan> 1994-09-30-16:50:17.974-04:00I0.527 cdsd(30115) ERROR cds server
db_btree.c 2890 0x005d4cb8
Database index maintenance routines have detected a corruption.

[9/30/94 public]
John - you mentioned that cache problems had been discoverd with
global dts servers (by HP was it?) - could this be related (ie.
corrupt cache(s) caused by crashes?)? Did we ever get those fixes?

[10/3/94 public]
I think it more likely that 12333 is the culptrit.

[10/6/94 public]
I'm not convinced 12333 caused this because 12333 always only corrupted the
directory hash table.  If this happens again (or if you still have it),
we should take a look at the checkpoint file for hints of corruption if
they got checkpointed to disk.

[08/20/96 public]
I'm closing this OT because:

1) The fix to OTs 12879 and 12987 deals with database index corruption
   and most likely fixes this OT as well.

2) It is highly unlikely (at least by us) to reproduce the above problem
   since we don't have those machines available and it wasn't very
   reproducible then.



CR Number                     : 12389
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12373
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : x500_name_utils
Short Description             : x500_str_to_cell doesn't work
Reported Date                 : 9/28/94
Found in Baseline             : 1.1
Found Date                    : 9/28/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint,1.2.2
Affected File(s)              : directory/cds/library/x500_name_utils.c, directory/cds/library/x500_name_utils.c
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[9/28/94 public]

When displaying gds objects with CDS attributes (CDS-Cell and
CDS-Replica) we use x500_str_to_cell and x500_str_to_replica.

x500_str_to_cell doesn't work: It doesn't return the correct
root_uuid and root_name.
Actually, the whole code is:

int
x500_str_to_cell (unsigned char    *str,        /* IN:  Attribute value */
                  int              str_len,     /* IN:  Attr. value length */
                  x500_dns_cell_t  *cell)       /* OUT: Structure with fields*/
                                                /*      in printable format */
{
  if ((str == NULL)
      || (str_len <= 0)
      || (cell == NULL))
      {
        DCE_SVC_DEBUG((cds__svc_handle, cds_svc_gda, svc_c_debug2,
                       " <x500_str_to_cell null string passed in"));

        return(0);
    }
  cell->nsp_uuid = (char *)str;
  cell->root_uuid = NULL;
  cell->root_name = NULL;

  return (1);
}                                  /* x500_str_to_cell() */

So root_uuid and root_name is always NULL.
I don't know enough about intercell via gds - but
how does it work if root_uuid and root_name are not right?

[10/21/94 public]
I changed x500_xtr_to_cell in the following way:

int x500_str_to_cell (
  unsigned char    *str,        /* IN:  Attribute value         */
  int              str_len,     /* IN:  Attribute value length  */
  x500_dns_cell_t  *cell)       /* OUT: Structure with fields   */
                                /*      in printable format     */
{
if ((str == NULL) || (str_len <= 0) || (cell == NULL))
  {
  return(0);
  }

cell->nsp_uuid = (char *)str;
str += strlen((char *)str) + 1;

if (*str == '\0')
  {
  cell->root_uuid = NULL;
  str += 1;
  }
else
  {
  cell->root_uuid = (char *)str;
  str += strlen((char *)str) + 1;
  }

if (*str == '\0')
  {
  cell->root_name = NULL;
  }
else
  {
  cell->root_name = (char *)str;
  }

return (1);
} /* end of x500_str_to_cell */

This works.

[10/8/96 public]

  Fix was submitted to 1.1 maintenance tree.
./directory/cds/library/x500_name_utils.c
Comparing revision 1.1.3.2 with revision 1.1.9.1.
*** 1.1.3.2     1994/10/06 20:25:45
--- 1.1.9.1     1996/10/08 18:05:34
***************
*** 82,89 ****
          return(0);
      }
    cell->nsp_uuid = (char *)str;
!   cell->root_uuid = NULL;
!   cell->root_name = NULL;
  
    return (1);
  }                                  /* x500_str_to_cell() */
--- 86,115 ----
          return(0);
      }
    cell->nsp_uuid = (char *)str;
! 
!   /* OT 12389 x500_str_to_cell doesn't work */
!   str += strlen((char *)str) + 1;
! 
!   if (*str == '\0')
!     {
!       cell->root_uuid = NULL;
!       str += 1;
!     }
!   else
!     {
!       cell->root_uuid = (char *)str;
!       str += strlen((char *)str) + 1;
!     }
! 
!   if (*str == '\0')
!     {
!       cell->root_name = NULL;
!     }
!   else
!     {
!       cell->root_name = (char *)str;
!     }
!   /* end of OT 12389 */
  
    return (1);
  }                                  /* x500_str_to_cell() */

[12/6/96 public]
verified as fixed in R1.2.2



CR Number                     : 12345
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : hcells
Short Description             : connecting parent and child
should not require the use of the primary name
Reported Date                 : 9/26/94
Found in Baseline             : 1.1b18
Found Date                    : 9/26/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b22
Affected File(s)              : dcecp, cdsd
Sensitivity                   : public

[9/26/94 public]
Two things:
 * The dcecp cdsalias connect command should not create a child name if the
   child name does not exist.  The problem is that if the name is created,
   it is not told to security or the various hosts.  The simpliest check is
   to see if the name passed into connect exists and if not fail.  The
   check should be in the server but could be dcecp if time constraints
   force. 
 * The cdsalias connect command should not require the use of the primary
   name of the cell.  That is you should be able to connect a parent and
   child if their heirarchical relationship is represented by alias (i.e.,
   not primary) names of the cell.

this is pretty important as some of Rick Fadden's testing will require
this, but I don't think it's actually blocked right now.   But it probably
will be in a day or two :-)

[9/29/94 public]
Two fixes:
 * When setting the primary name with "dcecp cdsalias set /.../xxx/y", the
   specified name must now already exist in the alias list.
 * We discussed Howard's second point during the week over the phone and
   mail messages.  The result is on a "dcecp cdsalias connect", this
   command no longer takes an argument.  Now CDS will use the existing
   primary name in creating the child pointer in the parent directory.
   Obviously, we need to document this change.



CR Number                     : 12333
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : HYP: cdsd coredumps in idle cell with cellname alias
Reported Date                 : 9/25/94
Found in Baseline             : 1.1b18
Found Date                    : 9/25/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b21
Affected File(s)              : cdsd
Sensitivity                   : public

[9/25/94 public]

I setup two single node cells (1 OSF, 1 HP) using bl18.2 on 9/23, 
established intercell authentication between them, and added an 
alias for the hp cell. I ran HCLREL001 from the OSF cell to 
each of the three resulting cell names (1 OSF, 2 HP). This testing
finished before going home Friday. 

Cdsd is no longer running on the HP cell, leaving a core dump in
/opt/dcelocal/var/directory/cds/adm/cdsd/core. "xdb <corefile>" gives
"xdb panic: Bad magic number 0.2(UE375)". "gdb <corefile>" cause 
gdb to coredump.

I don't know whether the fact that the cell had an alias is
relevant or not, but don't see other recent open CR's about cdsd
coredumping, so it may be.

[9/26/94 public]
Do the following

$ cd /opt/dcelocal/var/directory/cds/adm/cdsd/core
$ xdb -l /usr/lib/libdce.sl /opt/dcelocal/bin/cdsd core

At the debugger prompt type trace. This should give us a backtrace.

Assigning this to Roger in case he has any ideas. I'll set up a couple of cells
to see if I can replicate it here.

[9/29/94 public]

I'm pretty sure I found the problem.

In testing my OT 12345 fix, my cdsd dumped core.  I found an anomaly in
a cds server data structure.  The directory uid hash table was being
corrupted with every "dcecp cdsalias" command.  Typically, this would cause
cdsd to dump core when checkpointing to disk as it goes through this table.
So, if you get a good core file, if the offending pc is around line 317 in
db_checkpoint.c, this is it.  This is a day one cdsalias bug from around
March.

After stepping through a cdsalias command and watching this table, I found
the problem - unexpected use of an internal opcode which indexed into an
array way past the end into the directory uid hash table.  I think the
fix is somewhat trivial (change some defs in various .h files), but it'll
take a day or two to shake it all out.

[10/4/94 public]
Changing defs in .h files was too many changes.  Fixed by removing the call
that corrupts the hash table as a side effect.  This call is unnecessary
for cdsalias commands.



CR Number                     : 12258
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : api
Short Description             : Length of attribute name strings is to small
Reported Date                 : 9/20/94
Found in Baseline             : 1.1b17
Found Date                    : 9/20/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : cdsclerk.h,dnscvtobjid.c
Sensitivity                   : public

[9/20/94 public]
The constant CDS_STR_ANAME_MAX is set to 31 which is not big
enough to hold the string format of longest OID that can be
encoded in CDS_OPQ_ANAME_MAX.

[9/22/94 public]
fixed now set to 120



CR Number                     : 12211
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : incorrect length passed to 
dce_acl_register_object_type
Reported Date                 : 9/15/94
Found in Baseline             : 1.1b17
Found Date                    : 9/15/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : cds_dacl.c,gda_dacl.c,adver_dacl.c
Sensitivity                   : public

[9/15/94 public]
The call to dce_acl_register_object_type passes the size of the permission
string array instead of number of entries.  Causes stomping on stack
and sometimes crashes.

[9/21/94 public]
This fix was submitted last week.



CR Number                     : 12193
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : two errors say version 3.1 not 4.0
Reported Date                 : 9/14/94
Found in Baseline             : 1.1b17
Found Date                    : 9/14/94
Severity                      : E
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : directory/cds/includes/cds.sams
Sensitivity                   : public

[9/14/94 public]
I know you care about fixing the little things Janet :-)

There are two errors in cds.sams that say that the directory version number
required is 3.1 when they should now say 4.0:

start
code	CDS_LOWDIRVERSION
tables	(cds_msg_table)
text	"For cellname commands, the CDS_DirectoryVersion attribute is required to be 3.1 or greater."
explanation	"Directory version does not support this feature."
action	"See the documentation on how to upgrade the directory version of a directory."
end

start
code	cds_s_delegdirversion
sub-component	cds_svc_server
attributes	"svc_c_sev_error"
tables	(cds_msg_table)
text	"For delegation support, the CDS_DirectoryVersion attribute is required to be 3.1 or greater."
explanation	"Directory version does not support ACL entries with delegation."
action	"See the documentation on how to upgrade the directory version of a directory."
end

[9/21/94 public]
this was fixed last week.



CR Number                     : 12161
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : need switch to control default directory version
Reported Date                 : 9/13/94
Found in Baseline             : 1.1b17
Found Date                    : 9/13/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : server_main.c,server_globals.c,server.h
Sensitivity                   : public

[9/13/94 public]
need a switch on cdsd to control the default clearinghouse version.
For new 1.1 cells this prevents having to upgrade the directory versions
immediatly.

[9/21/94 public]
cdsd -v {3.0, 4,0} will set default for new clearinghouses.
This in turn controls the directory version on new directories.



CR Number                     : 12148
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : names of CDS_Aliases attr bad
Reported Date                 : 9/12/94
Found in Baseline             : 1.1b17
Found Date                    : 9/12/94
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : dcecp
Sensitivity                   : public

[9/12/94 public]

dcecp> dir show /.:
{RPC_ClassVersion {01 00}}
{CDS_CTS 1994-09-12-18:48:30.963309100/08-00-09-25-13-52}
{CDS_UTS 1994-09-12-20:19:29.862479100/08-00-09-25-13-52}
{CDS_ObjectUUID 206b67bc-ce62-11cd-b67f-080009251352}
{CDS_Replicas
 {{CH_UUID 1f90e0b0-ce62-11cd-b67f-080009251352}
  {CH_Name /.../absolut_cell/absolut_ch}
  {Replica_Type Master}  
  {Tower {ncacn_ip_tcp 130.105.5.93}}
  {Tower {ncadg_ip_udp 130.105.5.93}}}}
{CDS_AllUpTo 1994-09-12-20:35:00.062629100/08-00-09-25-13-52}
{CDS_Convergence medium}
{CDS_InCHName new_dir}
{CDS_DirectoryVersion 4.0}
{CDS_ReplicaState on}
{CDS_ReplicaType Master}
{CDS_LastSkulk 1994-09-12-20:35:00.062629100/08-00-09-25-13-52}
{CDS_LastUpdate 1994-09-12-20:31:05.665890100/08-00-09-25-13-52}
{CDS_Epoch 206b638e-ce62-11cd-b67f-080009251352}
{CDS_ReplicaVersion 4.0}
{CDS_CellAliases 
 {Member /.../absolut_alias}
 {Group /.../absolut_cell}}

the display of CDS_CellAliases "stinks" (to me and others).  It should be
called: 

{CDS_CellAliases 
 {Aliaes /.../absolut_alias}
 {Primary /.../absolut_cell}}

[9/22/94 public]

Fixed to output "Alias" or "Primary".



CR Number                     : 12144
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : attribute values cannot be supplied n quotes
Reported Date                 : 9/12/94
Found in Baseline             : 1.1b17
Found Date                    : 9/12/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : control/attrname_actions_cds.c
Sensitivity                   : public

[9/12/94 public]
set/add attributes no longer takes quoted strings.

[9/13/94 public]
it does now, fixed add CDS_Towers to work again also.



CR Number                     : 12143
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : annotation string wrong on hcel
Reported Date                 : 9/12/94
Found in Baseline             : 1.1b17
Found Date                    : 9/12/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : server/unix_cds_net.c
Sensitivity                   : public

[9/12/94 public]
annotation string for hcell interface is wrong.  Uses clerkserver string

[9/13/94 public]
fixed to user correct string.



CR Number                     : 12086
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : cdsd dumps core while coming up for the first time
Reported Date                 : 9/7/94
Found in Baseline             : 1.1
Found Date                    : 9/7/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : src/directory/cds/serve/cds_dacl.c
Sensitivity                   : public

[9/7/94 public]

The cdsd dumps core during dce_config when it is brought up. The stack
trace looks like this:

(gdb) bt
#0  0x80b1ffc in __nr_malloc ()
#1  0x80b1b39 in malloc ()
#2  0x80014e90 in _findbuf ()
#3  0x8001aff8 in _doprnt ()
#4  0x80047cbc in __nr_vprintf ()
#5  0x80047e36 in vprintf ()
#6  0x80034d08 in printf ()
#7  0x80132f98 in dbopen (
    fname=0x84c5fdc "/opt/dcelocal/var/directory/cds/server_mgmt_acl_v1.dat", 
    flags=1282, mode=438, type=DB_HASH, openinfo=0x0)
    at ../../../../../src/dce/utils/db44/db.c:87
#8  0x80126606 in dce_db_open (
    filename=0x84c5fdc "/opt/dcelocal/var/directory/cds/server_mgmt_acl_v1.dat", backend_type=0x0, flags=40, convert=0x80129654 <dce_rdacl_convert>, 
    h=0x80dddd4, st=0x840ec10)
    at ../../../../../src/dce/utils/acldb/dbopen.c:181
#9  0x80a16ca in server_mgmt_acl_init ()
    at ../../../../../src/directory/cds/server/cds_dacl.c:2482
#10 0x8091b37 in sec_init_thread ()
    at ../../../../../src/directory/cds/server/unix_cds_net.c:1341
#11 0x80ae4b2 in th_start (th_p=0x81c06d8)
    at ../../../../../src/directory/cds/library/threads_lib.c:789
#12 0x8010971b in cma__thread_base ()

Please note that this stack trace shows any malloc done after dbopen()
would dump core. Since my debugger can't show the correct line in source
or can't break at a particular line (only related to this problem), I
put some printf's to see if it got there or not.  Now even printf() dumps 
core. Previously core dump was showing the calling sequence 
dbopen()->__hash_open()->calloc()->malloc()->... 

So my assumption is that cdsd is corrupting memory severly by the time it
gets to dbopen() call. My code is based on bl14.

[9/7/94 public]

Some update/findings on the cdsd core dump; the file directory/cds/
server/cds_dacl.c has following code:

  2404     /*
  2405      * Use old file name to build new file name
  2406      */
  2407     sprintf (mgt_acl_filename, CDS_SERVER_MGMT_ACL_FILENAME, dcelocal_path);
  2408
  2409     new_acl_filename_p = strdup( mgt_acl_filename ) ;
  2410     if((lastchp = strrchr( new_acl_filename_p,  '/')) != 0)
  2411       lastchp++;
  2412     strcpy( lastchp, CDS_SERVER_MGMT_V1_ACL_FILENAME);

Now remember that lastchp before strcpy was "server_mgmt_acl.dat" and then
it was being overwritten by a larger string 
"/opt/dcelocal/var/directory/cds/server_mgmt_acl_v1.dat" for some reason ;-)

This will certainly cause problems if strdup allocates memory by doing
strlen like what dce_strdup does:

char * dce_strdup(char *p)
{
    char        *new;
    if ((new = malloc(strlen(p) + 1)) != NULL)
        strcpy(new, p);
    return new;
}

Was there an assumption in CDS code that strdup will do sizeof instead of
strlen on the source string when allocating memory for new string?

I am convinced that this is the source of my problem as shown by the truss
output below on SVR4:

access("/opt/dcelocal/var/directory/cds/server_mgmt_acl_v1.dat", 4) Err#2  ENOENT
access("/opt/dcelocal/var/directory/cds/server_mgmt_acl.dat", 4) Err#2  ENOENT
fstatvfs(1, 0x083D8F4C)                         = 0
    Incurred fault #6, FLTBOUNDS  %pc = 0x080B1FFC
      siginfo: SIGSEGV SEGV_MAPERR addr=0x08007461
    Received signal #11, SIGSEGV [caught]
      siginfo: SIGSEGV SEGV_MAPERR addr=0x08007461
mprotect(0x08104000, 8192, PROT_READ|PROT_WRITE|PROT_EXEC) = 0
mprotect(0x08111000, 8192, PROT_READ|PROT_WRITE|PROT_EXEC) = 0

And the access() is the next call after strcpy().

[09/08/94 public]
By the by, using strdup() is a bad thing since it almost definitely
ends up calling the non-threads-wrapped malloc.  dce_strdup was created
for just this purpose.

[9/8/94 public]
The problem I described above is the source of cdsd segmentation fault
on SVR4. For my nightly build I changed the follwing in cds_dacl.c:

Old:
  2409     new_acl_filename_p = strdup( mgt_acl_filename ) ;
New:
  2409     new_acl_filename_p = malloc( sizeof mgt_acl_filename ) ;
           strcpy(new_acl_filename_p, mgt_acl_filename);

After this change the core dump is gone and my cell on SVR4 is up!!!
John is going to try this on reference platforms for me. Thanks John!

[9/14/94 public]
The fix is in.



CR Number                     : 12059
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test
Short Description             : Drop the 'do' test from cp_misc.test.
Reported Date                 : 9/6/94
Found in Baseline             : 1.1
Found Date                    : 9/6/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : test/directory/cds/cp_misc.tests
Sensitivity                   : public

[9/6/94 public]
Drop the 'do' test from cp_misc.test. Its no longer supported.

[9/6/94 public]
Droped.



CR Number                     : 12013
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : When checking ACL permissions of invoker on CDS objects only, a permission set of all dashes is returned.
Reported Date                 : 9/1/94
Found in Baseline             : 1.1b16
Found Date                    : 9/1/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b17
Affected File(s)              : directory/cds/server/cds_dacl.c
Sensitivity                   : public

[9/1/94 public]

Note that using acl_edit produces the same results.

Using dcecp and logged in as cell_admin:

dcecp> acl check /.:/hosts
-------
dcecp> acl show /.:/hosts
{unauthenticated r--t---}
{user cell_admin rwdtcia}
{user hosts/frick/cds-server rwdtcia}
{user hosts/frick/self rwdtcia}
{user jas r------}
{group subsys/dce/cds-admin rwdtcia}
{group subsys/dce/cds-server rwdtcia}
{any_other r--t---}

dcecp> object create /.:/jas 
dcecp> acl show /.:/jas -entry
{unauthenticated r--t-}
{user cell_admin rwdtc}
{group subsys/dce/cds-admin rwdtc}
{group subsys/dce/cds-server rwdtc}
{any_other r--t-}
dcecp> acl check /.:/jas -entry
dcecp> acl check /.:/jas -entry
-----

For example, using dcecp on a principal, it's OK:
dcecp> acl check /.:/sec/principal/jas
rcDnfmaug
dcecp> acl show /.:/sec/principal/jas
{unauthenticated r-------g}
{user_obj r---f--ug}
{user cell_admin rcDnfmaug}
{group acct-admin rcDnfmaug}
{other_obj r-------g}
{any_other r--------}

[9/1/94 public]

Also, the following dcecp acl check FVT tests fail:
src/test/admin/dcecp/ts/acl/acl_check_P.tcl

acl_check_013_P 
acl_check_014_P 
acl_check_015_P 
acl_check_016_P 
acl_check_017_P 
acl_check_018_P
acl_check_023_P

[9/2/94 public]

As do most of the directory merge tests.

[9/6/94 public]

Corrected return status check in rdacl_get_access().

[9/7/94 public]
I just verified and everything looks great.



CR Number                     : 12004
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : secondary cds server hangs
Reported Date                 : 9/1/94
Found in Baseline             : 1.1
Found Date                    : 9/1/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : cds_dacl.c,back_ground.c,back_upgrade.c,db_directory.c,back_spread.c,security.h
Sensitivity                   : public

[9/1/94 public]
A secondary cdsd on an hp hangs during the fork. It get no cpu time at all
and seems to be in a loop doing reading an attribute. The cds_send and read
are failing each time. I'll assign this to Roger Zee and he has a debug output
file. I'm gathering more information on this.

[9/2/94 public]
I just caught a single cell 486 doing something similar. The configuration
is hung bringing up cdsd.

$ date
Fri Sep  2 10:04:19 EDT 1994
$ ./chkdceproc
root     14603     1  0.3 15:15:58 ??           5:24.12 cdsadv
root     15793 15175  0.0 09:23:50 pts/5        0:00.21 cdsd -a
root     15797 15793  0.8 09:23:51 pts/5        0:17.72 cdsd -a
root     15759     1  0.0 09:22:58 ??           0:09.37 secd -bootstrap
root     15718     1  0.1 09:22:41 ??           0:12.61 dced -b
$ date
Fri Sep  2 10:04:44 EDT 1994
$ ./chkdceproc
root     14603     1  0.0 15:15:58 ??           5:24.13 cdsadv
root     15793 15175  0.0 09:23:50 pts/5        0:00.21 cdsd -a
root     15797 15793  0.6 09:23:51 pts/5        0:17.85 cdsd -a
root     15759     1  0.0 09:22:58 ??           0:09.39 secd -bootstrap
root     15718     1  0.1 09:22:41 ??           0:12.68 dced -b
$ 

Note cdsd seems to be spinning a bit as well and we don't see that when its
a secondary server. In the later case cdsd gets no cpu time at all.

[9/2/94 public]
When I reconfigured the single macchine cell it worked fine. I configured both
my 486 as a single machine cell several times yesterday with no problem. 
Apparently, while its possible for a single machine cell to get itself into
this state it far less likely than the case os a secondary server.

[8/6/94 public]

So far.....

A week or so ago Bill Sommerfeld pointed out that some server registry
entries were being created during client configuration and they shouldn't
be. We removed the code from dce_config that was doing it. Problem is
that the entries don't get made during secondary server configuration
either and cdsd of coourse needs them when it comes up. I put the lines back
in and cdsd got further but not all the way.  I'll figure out where the
registry entry creation for the server really needs to be in dce_config
later but leave it for now. 

Next Jackie and I talked and she mentioned a possible problem with the
server exporting the /.:/hosts/${HOSTNAME}/cds-server entry so I pulled
the rpccp and acl_edit commands that do this up to just before starting
the server and it got farther.

Now its taking an assertion failure in db_directory.c line 1347 while creating
the secondary clearinghouse.  It appears to be looking for the 
CDS_DirectoryVersion attribute through find_attribute. 

I put some servicability debug statements in find_attribute and created 
a flag to trigger the output for the offending call only. The call is
being made is db_directory.c:refresh_fastpaths.

On snoopy in notuser/jd/12004 you will find a debug trace for the 486 
primary, debug.486, and the hp secondary, debug.hp. You will also  find
the db_direcory.c and library_find.c that were used to generate it.

It looks like the attribute does in fact exist but the client machine
is comming up empty handed when it looks for it.

[9/8/94 public]
This has been fixed.  Expected version to be present, when hadn't 
propagated yet.



CR Number                     : 11934
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : cdsd core dumps
Reported Date                 : 8/29/94
Found in Baseline             : 1.1
Found Date                    : 8/29/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : cdsd
Sensitivity                   : public

[8/29/94 public]

cdsd core dumps 


DEBUG:     Executing: err_exit(acl_edit - setting ACLs on new namespace
           entries.
             Message from acl_edit:
             ERROR: Connection closed (dce / rpc)
           Unable to bind to object /.:/cell-profile
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/lan-profile
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/budapest_ch
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/budapest_ch
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/hosts
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/hosts/budapest
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/sec
           ERROR: Connection request rejected (dce / rpc)
   ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/hosts/budapest/self
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/hosts/budapest/cds-clerk
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/hosts/budapest/cds-server
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/hosts/budapest/cds-gda
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/hosts/budapest/profile
           ERROR: Connection request rejected (dce / rpc)
           Unable to bind to object /.:/subsys/HP/sample-apps)
ERROR:   acl_edit - setting ACLs on new namespace entries.
           Message from acl_edit:
           ERROR: Connection closed (dce / rpc)
         Unable to bind to object /.:/cell-profile
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/lan-profile
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/budapest_ch
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/budapest_ch
         ERROR: Connection request rejected (dce / rpc)
 ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/hosts
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/hosts/budapest
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/sec
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/hosts/budapest/self
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/hosts/budapest/cds-clerk
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/hosts/budapest/cds-server
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/hosts/budapest/cds-gda
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/hosts/budapest/profile
         ERROR: Connection request rejected (dce / rpc)
         Unable to bind to object /.:/subsys/HP/sample-apps

[8/29/94 public]
I got a trace for cdsd .....

>t
 0 db_dir_get_version + 0x0000005c (0x403c3b84, 0x403c3b80, 0x6c650009, 0)
 1 rpc_ss_type_size@libdce + 0x7eba41c0 (Address not found (UE302)

[8/29/94]
I bsubmitted a fix for this specific crash (it occurred on the 486 as well).
It should get beyond a dce_config.  However, I can't seem to acl_edit
an object.  I don't know if it's related, but I'm keeping this OT open
until it is resolved.

[8/31/94]
Changed status to fix since John called and the smoketest got past this.
If you still can't acl_edit an object, please submit another OT.



CR Number                     : 11766
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : annotations in ep_map need help
Reported Date                 : 8/18/94
Found in Baseline             : 1.1
Found Date                    : 8/18/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : cds.sams,unix_cds_net.c,gda_rpcint.c,cds_adver_event.c
Sensitivity                   : public

[8/18/94 public]
The annotation strings for cds endpoints are worthless.  
Fix them=> Okay I think I will.

[8/25/94 public]
fixed.



CR Number                     : 11746
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : directory/cds/control/attrname_actions_cds.c doesn't compile
Reported Date                 : 8/18/94
Found in Baseline             : 1.1
Found Date                    : 8/18/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : directory/cds/control/attrname_actions_cds.c
Sensitivity                   : public

[8/18/94 public]
I have a fix and am about to send out the request.

{jd 8/18/94 public]
It just needed a cast.

[8/18/94 public]
Replace this fix with another.



CR Number                     : 11735
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : gdad
Short Description             : Memory leak in send_recv_vc
Reported Date                 : 8/17/94
Found in Baseline             : 1.1
Found Date                    : 8/17/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : gda_bind.c
Sensitivity                   : public

[8/17/94 public]

send_recv_vc() allocates a sendbuf buffer to use sending
and receiving from the name server.  It frees the buffer
on the first few error paths, but not subsequent error
paths, nor does it free the buffer when it returns 
successfully.

[9/7/94 public]

Fixed bug by freeing sendbuf on success, and on the
error paths that were previously returning without
freeing the buffer.



CR Number                     : 11685
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : cdscp syntax error, new in DCE1.1
Reported Date                 : 8/15/94
Found in Baseline             : 1.1
Found Date                    : 8/15/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : cds.sams, attrname_actions_cds.c
Sensitivity                   : public

[8/15/94 public]

There are two new problems found in the DCE1.1.beta cdscp:

(1)
osf dce 1.1 beta code
incorrect cdscp syntax error for attribute arguments in a certain order
this worked in 1.0.3 code

cdscp> create obj /.:/obj CDS_Class = printer CDS_ClassVersion = 1.0
cdscp> add obj /.:/obj 1.21.22.23.24.25 = 30
cdscp> show obj /.:/obj

                        SHOW
                      OBJECT   /.../ste_90/obj
                          AT   1994-08-01-21:32:53
                     CDS_CTS = 1994-08-01-21:32:18.805789100/08-00-09-27-84-e9
                     CDS_UTS = 1994-08-01-21:32:25.627723100/08-00-09-27-84-e9
                   CDS_Class = printer
            CDS_ClassVersion = 1.0
            1.21.22.23.24.25 = 30

cdscp> list obj /.:/obj with CDS_Class = printer 1.21.22.23.24.25 = 30
                        LIST
                      OBJECT   /.../ste_90/obj
                          AT   1994-08-01-21:35:15
obj

cdscp> list obj /.:/obj with 1.21.22.23.24.25 = 30 CDS_Class = printer
syntax error
list obj /.:/obj with 1.21.22.23.24.25 = 30 CDS_Class = printer
                                          ^

(2)
osf dce 1.1 beta code
missing <CR> after show cdscp preferred clearinghouse output
this worked in 1.0.3 code

cdscp> show cdscp preferred clearinghouse
no preferred clearinghousecdscp>

[8/18/94 public]
added \n to sams file for multiple messages.  Fixed processing of
VT_byte so this works again.



CR Number                     : 11680
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : thread error when stopping cdsadv
Reported Date                 : 8/12/94
Found in Baseline             : 1.1b12
Found Date                    : 8/12/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : adver_server.c
Sensitivity                   : public

[8/12/94 public]
This is with Monday (8/8) night's build.  When I do /etc/dce_shutdown, I get
what's below (formatted for easier reading).

  Routine rpc_ep_unregister(3rpc) failed: status = 382312662.
  1994-08-12-09:48:24.246-04:00I----- cdsadv(24520) WARNING cds library
     threads_lib.c 1593 0x40037160
  Thread routine error (at line 1593) : 22.
  1994-08-12-09:48:24.291-04:00I----- cdsadv(24520) FATAL cds general
     adver_server.c 387 0x40037160
  Routine pthread_mutex_lock failed : status = -1.
[JD says it *may* be fixed or caused by a recent DEC submission. Someone who
knows better should check to be sure.]

[8/17/94 public]
This was caused by threads that were half synchronized.  One thread was 
trying to use a mutex that had been deleted by another. 
The code was removed to do the synchronization.  
This was a shutdown problem, and the right things
will happen anyway.



CR Number                     : 11676
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : cdsd crashes when do_skulk()
Reported Date                 : 8/12/94
Found in Baseline             : 1.1
Found Date                    : 8/12/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : directory/cds/server/back_ground.c
Sensitivity                   : public

[8/12/94 public]

The routine do_skulk() needs to be skipped when the associated
directory data has been released, i.e., when the internal pointer
associated with a directory stream_p->db_dir.data_p is NULL.
A segmentation violation would occur if the routine do_skulk()
is performed with stream_p->db_dir.data_p == NULL.

The following are the diff's of the recommended fixes in the file
    directory/cds/server/back_ground.c :
1168a1183,1190
>           {
>             /* Skip do_skulk() if the associated directory data
>               has been released for any reason.  Otherwise
>               function do_skulk() may cause a segmentation
>               violation due to invalid null pointer data_p */
>             if (!stream_p->db_dir.data_p)
>                 continue;
>
1169a1192
>           }

[8/15/94 public]
I merged this fix in, buildt all of cds and tested it. I'll be submitting
this within a day or so.

[8/16/94 public]
Submitted above.



CR Number                     : 11674
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds library
Short Description             : NULL check needed for SecondaryCH_p and ReadOnlyCH_p
Reported Date                 : 8/12/94
Found in Baseline             : 1.1
Found Date                    : 8/12/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : directory/cds/library/dnsnewepoch.c
Sensitivity                   : public

[8/12/94 public]

Special NULL check is need in the routine cdsNewEpoch() when the
optional parameters SecondaryCH_p or ReadOnlyCH_p is passed in as
NULL.  The document says these two parameters are optional and
NULL can be passed in.  Without the special NULL check a segmentation
violation could occur.

The following are the diff's of the changes:

180,181c190,192
<       for (fnm_pp = &SecondaryCH_p[0]; *fnm_pp;) {
<         register cds_full_name_t *fnm_p = *fnm_pp++;
---
>       if (SecondaryCH_p) {
>         for (fnm_pp = &SecondaryCH_p[0]; *fnm_pp;) {
>           register cds_full_name_t *fnm_p = *fnm_pp++;
183,188c194,200
<         PRM_Set_member(1, NullTimestamp); /* present */
<         /* AtomicValue record */
<         PRM_word(LEN_FullName(fnm_p));
<         PRM_byte(VT_FullName);
<           PRM_FullName(fnm_p);
<         }
---
>           PRM_Set_member(1, NullTimestamp); /* present */
>           /* AtomicValue record */
>           PRM_word(LEN_FullName(fnm_p));
>           PRM_byte(VT_FullName);
>             PRM_FullName(fnm_p);
>           }
>       }
194,195c206,208
<       for (fnm_pp = &ReadOnlyCH_p[0]; *fnm_pp;) {
<         register cds_full_name_t *fnm_p = *fnm_pp++;
---
>       if (ReadOnlyCH_p) {
>         for (fnm_pp = &ReadOnlyCH_p[0]; *fnm_pp;) {
>           register cds_full_name_t *fnm_p = *fnm_pp++;
197,202c210,216
<         PRM_Set_member(1, NullTimestamp); /* present */
<         /* AtomicValue record */
<         PRM_word(LEN_FullName(fnm_p));
<         PRM_byte(VT_FullName);
<           PRM_FullName(fnm_p);
<         }
---
>           PRM_Set_member(1, NullTimestamp); /* present */
>           /* AtomicValue record */
>           PRM_word(LEN_FullName(fnm_p));
>           PRM_byte(VT_FullName);
>             PRM_FullName(fnm_p);
>           }
>       }
210c224,225
<       for (fnm_pp = &SecondaryCH_p[0]; *fnm_pp; ++fnm_pp)
---
>       if (SecondaryCH_p)
>         for (fnm_pp = &SecondaryCH_p[0]; *fnm_pp; ++fnm_pp)
212c227,228
<       for (fnm_pp = &ReadOnlyCH_p[0]; *fnm_pp; ++fnm_pp)
---
>       if (ReadOnlyCH_p)
>         for (fnm_pp = &ReadOnlyCH_p[0]; *fnm_pp; ++fnm_pp)

[8/15/94 public]
I merged this fix in, buildt all of cds and tested it. I'll be submitting 
this within a day or so.

[8/16/94 public]
Submitted above.



CR Number                     : 11673
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds library
Short Description             : fix a typo in cds library
Reported Date                 : 8/12/94
Found in Baseline             : 1.1
Found Date                    : 8/12/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : /directory/cds/library/dnscreatechild.c
Sensitivity                   : public

[8/12/94 public]

fix typo brought to light by macro fixes in includes/uc_parse.h
which better check server database write lengths

The following is the diff of the change, the file is
    directory/cds/library/dnscreatechild.c
97c109
<                sizeof(OnBehalfOf_p->id_uuid));
---
>                sizeof(OnBehalfOf_p->id.uuid));

[8/15/94 public]
I merged this fix in, buildt all of cds and tested it. I'll be submitting 
this within a day.

[8/16/94 public]
Submitted above.



CR Number                     : 11640
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cache
Short Description             : potential cache corruption and component crashes due to bad fix for CR#10570
Reported Date                 : 8/10/94
Found in Baseline             : 1.1
Found Date                    : 8/10/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : ./directory/cds/adver/adver_service_rpc.c
					./directory/cds/cache/caattributes.c
					./directory/cds/cache/cacle.c
					./directory/cds/cache/cadir.c
					./directory/cds/cache/cadump.c
					./directory/cds/cache/cafreelist.c
					./directory/cds/cache/cagroup.c
					./directory/cds/cache/cainsertatt.c
					./directory/cds/cache/calink.c
					./directory/cds/cache/calock.c
					./directory/cds/cache/caname.c
					./directory/cds/cache/caremoveatt.c
					./directory/cds/child/clerk_choose_ch.c
					./directory/cds/includes/cache.h
Sensitivity                   : public

[8/10/94 public]
The quick fix for CR#10570 was too quick. By allowing a thread to lock
the same lock multiple times, it also allows another thread to interrupt
and also think it is successful in getting a lock, allowing it to modify
data being used by the first thread. This was discovered while testing
a fix for CR#9765.

[8/18/94 public]
The formal way to do this was to eliminate
the three locks (and associated routines) and replace
them with a single lock (with new routines).



CR Number                     : 11637
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : deleting a clearinghouse produces errors
Reported Date                 : 8/10/94
Found in Baseline             : 1.1
Found Date                    : 8/10/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b16
Affected File(s)              : ta_replica.c,back_spread.c
Sensitivity                   : public

[8/10/94 public]

Trying to delete a newly created clearinghouse produces errors.
The errors come from the function rpc_unregister_ch() in 
cds/server/unix_cds_net.c. This functions tries to unregister the endpoints
for the clearinghouse being deleted for its interface with cdsclerk and acl 
manager. I checked the endpoints after creating the new clearinghouse, they
are there. So I don't understand why it could encounter failures when trying
to unregister them.

First, I was using 1.1 BL 11:

dcecp> clearinghouse create /.:/boston_ch
dcecp> cdscp show cell
                        SHOW
                        CELL   /.../maid_cell
                          AT   1994-08-09-15:58:45
              Namespace Uuid = 92ffaf11-aed0-11cd-b3e0-0000c041d04c
          Clearinghouse Uuid = 914e5b6c-aed0-11cd-b3e0-0000c041d04c
          Clearinghouse Name = /.../maid_cell/maid_ch
                Replica Type =   Master  
                       Tower = ncacn_ip_tcp:130.105.1.67[]
                       Tower = ncadg_ip_udp:130.105.1.67[]

              Namespace Uuid = 92ffaf11-aed0-11cd-b3e0-0000c041d04c
          Clearinghouse Uuid = 8be9a29a-b3ac-11cd-98a4-0000c041d04c
          Clearinghouse Name = /.../maid_cell/boston_ch
                Replica Type =  Readonly 
                       Tower = ncacn_ip_tcp:130.105.1.67[]
                       Tower = ncadg_ip_udp:130.105.1.67[]
dcecp> clearinghouse del /.:/boston_ch
1994-08-09-15:59:21.086-04:00I----- cdsd(17297) ERROR cds server unix_cds_net.c 1498 0x0061cdf0
Attempt to unregister the clerk/server RPC endpoint has failed with status = not registered in endpoint map (dce / rpc)
1994-08-09-15:59:21.365-04:00I----- cdsd(17297) ERROR cds server unix_cds_net.c 1516 0x0061cdf0
Attempt to unregister the dacl RPC endpoint has failed with status = not registered in endpoint map (dce / rpc)
dcecp> cdscp show cell
                        SHOW
                        CELL   /.../maid_cell
                          AT   1994-08-09-15:59:46
              Namespace Uuid = 92ffaf11-aed0-11cd-b3e0-0000c041d04c
          Clearinghouse Uuid = 914e5b6c-aed0-11cd-b3e0-0000c041d04c
          Clearinghouse Name = /.../maid_cell/maid_ch
                Replica Type =   Master  
                       Tower = ncacn_ip_tcp:130.105.1.67[]
                       Tower = ncadg_ip_udp:130.105.1.67[]
dcecp>

After that, everything seems ok, the clearinghouse is indeed removed.
And the extra endpoints for the clearinghouse are gone too.

I then installed last night's build (8/9/94 NB) since I noticed that the file
unix_cds_net.c has changed since. It is not even worse:

dcecp> clearinghouse create /.:/boston_ch
dcecp> cdscp show cell
                        SHOW
                        CELL   /.../maid_cell
                          AT   1994-08-10-10:51:32
              Namespace Uuid = 446b17ed-b450-11cd-a28b-0000c041d04c
          Clearinghouse Uuid = 429fd2a4-b450-11cd-a28b-0000c041d04c
          Clearinghouse Name = /.../maid_cell/maid_ch
                Replica Type =   Master  
                       Tower = ncacn_ip_tcp:130.105.1.67[]
                       Tower = ncadg_ip_udp:130.105.1.67[]

              Namespace Uuid = 446b17ed-b450-11cd-a28b-0000c041d04c
          Clearinghouse Uuid = 80f110f2-b452-11cd-a28b-0000c041d04c
          Clearinghouse Name = /.../maid_cell/boston_ch
                Replica Type =  Readonly 
                       Tower = ncacn_ip_tcp:130.105.1.67[]
                       Tower = ncadg_ip_udp:130.105.1.67[]
dcecp> clearinghouse del /.:/boston_ch    
1994-08-10-10:51:46.699-04:00I----- cdsd(20056) ERROR cds general unix_cds_net.c 1028 0x0054a388
Routine rpc_ep_unregister(3rpc) failed: status = 382312662.
1994-08-10-10:51:46.929-04:00I----- cdsd(20056) ERROR cds general unix_cds_net.c 1038 0x0054a388
Routine rpc_ep_unregister(3rpc) failed: status = 382312662.
Error: Directory must be empty to be deleted
dcecp> cdscp show cell
                        SHOW
                        CELL   /.../maid_cell
                          AT   1994-08-10-10:55:29
              Namespace Uuid = 446b17ed-b450-11cd-a28b-0000c041d04c
          Clearinghouse Uuid = 429fd2a4-b450-11cd-a28b-0000c041d04c
          Clearinghouse Name = /.../maid_cell/maid_ch
                Replica Type =   Master  
                       Tower = ncacn_ip_tcp:130.105.1.67[]
                       Tower = ncadg_ip_udp:130.105.1.67[]

              Namespace Uuid = 446b17ed-b450-11cd-a28b-0000c041d04c
          Clearinghouse Uuid = 80f110f2-b452-11cd-a28b-0000c041d04c
          Clearinghouse Name = /.../maid_cell/boston_ch
                Replica Type =  Readonly 
                       Tower = ncacn_ip_tcp:130.105.1.67[]
                       Tower = ncadg_ip_udp:130.105.1.67[]
dcecp> cdscp list clearinghouse /.:/*
                        LIST
               CLEARINGHOUSE   /.../maid_cell
                          AT   1994-08-10-10:58:33
boston_ch
maid_ch

As can be seen, now the clearinghouse is NOT deleted. And the endpoints
for the clearinghouse are NOT removed.

[8/24/94 public]
delete clearinghouse is fixed.  The ep_unregister is bing handled in 11239



CR Number                     : 11481
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : cds_attributes file needs RPC_Codesets entry
Reported Date                 : 7/28/94
Found in Baseline             : 1.1b13
Found Date                    : 7/28/94
Severity                      : B
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b14
Affected File(s)              : includes/cds_attributes.txt
Sensitivity                   : public

[7/28/94 public]

While mucking about the with the nsi layer, I noticed that Mariko
has added a new attribute type

rpc/runtime/nsp.h:
#define RPC_C_NS_CODESETS           ((unsigned_char_p_t) "1.3.22.1.1.5")

Which should probably get an entry in the cds_attributes file
(which gets install in /opt/dcelocal/etc).

Something like:
1.3.22.1.1.5    RPC_Codesets            byte

[8/17/94 public]
added.



CR Number                     : 11445
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : cdsadv goes away
Reported Date                 : 7/26/94
Found in Baseline             : 1.1b13
Found Date                    : 7/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : directory/cds/library/cds_rpcserver.c
Sensitivity                   : public

[7/26/94 public]
The cds advertiser is going away as soon as (or soon after) it spawns
a clerk. This is seen on a 486 client configuring into an HP cell.
Other configurations have not been tested yet.

This is only seen so far with the nightly build from 7/25. No core file
seems to have been left around.

[7/26/94 public]
This is a general cdsadv problem. The smoketests failed with this error 
on all platforms too.

[7/26/94 public]
Additional information about the cds problem.

I reran dce_config on the core smoke test on sif (at386) after
the failure seen earlier this morning.  The test failed at the
same location in dce_config as such:

...
...
S:****** Configuring CDS Server...
S:****** Starting cdsadv...
S:****** Starting cdsd...
ERROR:   cdsd failed to start

Then, the machine hung.  After a while, the machine crashed.

thanks
annie

[7/26/94 public]
We believe we may have a fix for this. Its already too late to get
it into tonights build so we will do a bit more testing on it in the
AM and hopefully submit it.

[jd 7/28/94 public] 
Fixed up some initialization in the cds_export_replace routine.
This was fixed yesterday and has already made it through the smoke
test this AM. Closing it.



CR Number                     : 11441
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : directory/cds/server/unix_cds_net.c
Short Description             : Function call argument failed
Reported Date                 : 7/26/94
Found in Baseline             : 1.1
Found Date                    : 7/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : 
directory/cds/library/cds_rpcserver.c
directory/cds/server/unix_cds_net.c
Sensitivity                   : public

[7/26/94 public]

xlc -c       -Dunix  -D_ALL_SOURCE -DDCE_SEC -DINSTRUMENT -DDNS_DFS -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/directory/cds/server -I/project/dce/build/dce1.1-snap/src/directory/cds/server  -I../stubs -I/u1/devobj/sb/nb_rios/src/directory/cds/stubs -I/project/dce/build/dce1.1-snap/src/directory/cds/stubs -I../includes -I/u1/devobj/sb/nb_rios/src/directory/cds/includes -I/project/dce/build/dce1.1-snap/src/directory/cds/includes -I/u1/devobj/sb/nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/directory/cds/server/unix_cds_net.c
"/project/dce/build/dce1.1-snap/src/directory/cds/server/unix_cds_net.c", line 236.1: 1506-103 (S) Tag evtblk requires a complete definition before it is used.
"/project/dce/build/dce1.1-snap/src/directory/cds/server/unix_cds_net.c", line 903.6: 1506-193 (E) Function call argument cannot be assigned to corresponding parameter.
*** Error code 1

[7/28/94 public]
Fixed this yesterday. The rios has already successfuly built as has the
486 and hp. Closing it.
THe fix was some casts for things the rios was unhappy with.



CR Number                     : 11439
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cprpc_hcell.idl
Short Description             : failed to make cprpc_hcell.idl
Reported Date                 : 7/26/94
Found in Baseline             : 1.1
Found Date                    : 7/26/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : directory/cds/stubs/Makefile
Sensitivity                   : public

[7/26/94 public]

There are no other errors to help except don't
know how to make

[ /admin/dcecp/scripts at 22:49 (PM) Monday ]
makepath scripts/. && cd scripts &&  exec make MAKEFILE_PASS=BASIC     build_all
scripts: created directory
make: don't know how to make cprpc_hcell.idl (continuing)

[kevins 7/26/94 public] 

Actually a submit by DEC(proulx) of cds removed some idl files that 
need to be exported. The offending Makefile is in ./directory/cds/stubs

[7/26/94 public]
Fixed the INCLUDES line in the stubs Makefile.



CR Number                     : 11401
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : server
Short Description             : server/Makefile links with extra library dceutils which is in libdce.so
Reported Date                 : 7/23/94
Found in Baseline             : 1.1
Found Date                    : 7/23/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b14
Affected File(s)              : Makefile
Sensitivity                   : public

[7/23/94 public]
cds/server/Makefile has extra link to libdceutils which is in libdce.
I made change to dce/utils not to build libutils.a but cds/server
is certainly unhappy about. However cds/server is wrong to link
with both libdce and libdceutils. I'm going to change backe to build 
libdceutils.a since it'll break the nightly build if you don't remove 
this extra and unuseful link to libdceutils.a.

[8/17/94 public]
removed libdceutils.a



CR Number                     : 11392
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : adver,server,gda
Short Description             : cds mgmt ACLs should use the common ACL manager for support of delegation
Reported Date                 : 7/22/94
Found in Baseline             : 1.1b12
Found Date                    : 7/22/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : directory/cds/config/dce_config
						directory/cds/adver/Makefile
						directory/cds/adver/adver_dacl.c
						directory/cds/adver/adver_cds_event.c
						directory/cds/adver/adver_service_rpc.c
						directory/cds/server/Makefile
						directory/cds/server/cds_dacl.c
						directory/cds/server/dns_service_rpc.c
						directory/cds/server/unix_cds_net.c
						directory/cds/gda/Makefile
						directory/cds/gda/gda_dacl.c
						directory/cds/gda/gda_main.c
						directory/cds/gda/gda_rpcint.c
						directory/cds/gda/gda_svc.c
						directory/cds/includes/cds.sams
						directory/cds/includes/dns_strings.h
						directory/cds/includes/gda_main.h
						directory/cds/includes/rpc_server.h
						directory/cds/stubs/Makefile
						directory/cds/stubs/cds_old.idl
						directory/cds/library/Makefile
						directory/cds/library/cds_rpcserver.c
Sensitivity                   : public

[7/22/94 public]

The management ACLs for the CDS server, advertiser, and GDA must support delegation acl entries.
The common ACL manager should be used to do this.

[7/25/94 public]

CDS server, advertiser, and GDA now use the common ACL manager.



CR Number                     : 11348
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : command_ref
Short Description             : describe cdsd -l option
Reported Date                 : 7/18/94
Found in Baseline             : 1.1b12
Found Date                    : 7/18/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : command_ref/man8cds/cdsd.8cds
Sensitivity                   : public

[7/18/94 public]
cdsd now runs in locksmith mode.  Starting cdsd with -l <princ name>
give that principal all access rights.  This should be documented in the
man page cdsd.8cds and someplace in the admin guide.

[7/25/94 public]

Assigned this CR to Ron Johnson (Digital's DCE 1.1 writer).

[09/29/94 public]
Closed bug. 

Ron Johnson at DEC did this work.  He did not make any changes
to the Admin Guide.  He added the necessary information to the
following file:

command_ref/man8cds/cdsd.8cds



CR Number                     : 11302
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : acl manager support
Short Description             : Modify all CDS ACL manager
names and helpstrings as described below.
Reported Date                 : 7/14/94
Found in Baseline             : 1.1b11
Found Date                    : 7/14/94
Severity                      : E
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 1.1b17
Affected File(s)              : 
directory/cds/library/dpeacl.c
directory/cds/library/dpeaclaccess.c
directory/cds/library/dpeaclconvert.c
directory/cds/library/dpeaclstore.c
directory/cds/server/cds_dacl.c
directory/cds/server/rpc_dispatch.c
directory/cds/server/security_lib.c
directory/cds/server/dns_service_rpc.c
directory/cds/server/ta_create.c
directory/cds/includes/dpeacl.h
directory/cds/includes/server.h
directory/cds/includes/security.h
directory/cds/includes/cds.sams
directory/cds/adver/adver_cds_event.c
directory/cds/adver/adver_dacl.c
directory/cds/gda/gda_dacl.c
Sensitivity                   : public

[7/14/94 public]

BACKGROUND:
 A polymorphic object, as in DCE 1.1, can be a principal name and a 
 principal directory and therefore have 2 ACL managers. 

 In "dcecp", the ACL manager name can be obtained by invoking the
 "acl show -managers" command.  The other "acl" commands can
 accept a -type option to specify the manager name.  Previously, 
 this ACL manager name was really only informational and not visible
 to the end user, but now it is.

 Below, I have compiled a list of the ACL manager names and their 
 "helpstrings" that will be displayed to the user.

CDS ACL Managers:
    GDA managment ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-gda -managers
        {GDA              Change ACL for gda management}

    CDS Server Management ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-server -managers
        {CDS Server       Change ACL for server management}

    CDS Directory entry ACL manager:
        dcecp> acl show /.:/cell-profile -managers -entry
        {Directory entry  Change ACL for CDS directory entry}

    CDS Directory ACL manager:
        dcecp> acl show /.:/hosts -managers
        {Directory        Change ACL for CDS directory}

    CDS Clearinghouse ACL manager:
        dcecp> acl show /.:/<hostname>_ch -managers
        {Clearinghouse    Change ACL for CDS clearinghouse}

    CDS Clerk management ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/cds-clerk -managers
        {CDS Clerk        Change ACL for clerk management}


Security ACL Managers:
    Security Directory ACL manager:
	dcecp> acl show /.:/sec/principal -managers
	dcecp> acl show /.:/sec/group -managers
	dcecp> acl show /.:/sec/org -managers
        {Sec Directory    Manage directory object acls.}

    Security Principal ACL manager:
        dcecp> acl show /.:/sec/principal/<name> -managers
        {Sec Principal    Manage principal object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/principal/<princ-dir-name> -managers
	{Sec Principal    Manage principal object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Group ACL manager:
        dcecp> acl show /.:/sec/group/<name> -managers
        {Sec Group        Manage group object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/group/<group-dir-name> -managers
	{Sec Group        Manage group object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Organization ACL manager:
        dcecp> acl show /.:/sec/org/<name> -managers
        {Sec Org          Manage org object acls.}

        A polymorphic object will look like this:
	dcecp> acl show /.:/sec/org/<org-dir-name> -managers
	{Sec Org          Manage org object acls.}
	{Sec Directory    Manage directory object acls.}

    Security Replica List ACL manager:
        dcecp> acl show /.:/sec/replist -managers
        {Sec Replist      Manage the replist object acl.}

    Security Policy ACL manager:
        dcecp> acl show /.:/sec/policy -managers
        {Sec Policy       Manage the policy object acl.}

    Security Extended Attribute Schema ACL manager:
        dcecp> acl show /.:/sec/xattrschema/<name> -managers
        {Sec Attr_schema  Manage the attr_schema object acl.}


DTS ACL manager:
    dcecp> acl show /.:/hosts/<hostname>/dts-entity -managers
    {dtsd             DTSD DCE Time Service daemon}


Auditing ACL manager:
    dcecp> acl show /.:/hosts/<hostname>/aud-acl -managers
    {audit            Audit daemon ACL manager}


DCED ACL managers:

    Generic ACL managers for DCED:
	dcecp> acl sh /.:/hosts/<hostname>/self -m
	dcecp> acl sh /.:/hosts/<hostname>/config -m
        {dced-mgmt        DCED manager}

        dcecp> acl show /.:/hosts/<hostname>/config/srvrconf -managers
        dcecp> acl show /.:/hosts/<hostname>/config/srvrexec -managers
	dcecp> acl show /.:/hosts/<hostname>/config/hostdata -managers
        dcecp> acl show /.:/hosts/<hostname>/config/keytab -managers
        dcecp> acl sh /.:/hosts/<hostname>/config/attr_schema -managers
        dcecp> acl show /.:/hosts/<hostname>/config/secval -managers
        {dced-managers    DCED manager Pseudo-object}

    Server configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/srvrconf/<name> -managers
        {srvrconf         Server Configuration}

    Server execution ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/srvrexec/<name> -managers
        {srvrexec         Server Execution}
    
    Hostdata configuration ACL managers:
        dcecp> acl show /.:/hosts/<hostname>/config/hostdata/<name> -managers
        {hostdata         Host Data}

    Keytab configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/keytab/<name> -managers
        {rkeytab          Key Management}

    Extended Attribute Schema configuration ACL manager:
        dcecp> acl sh /.:/hosts/<hostname>/config/xattrschema/<name> -managers
        {attr_schema      Attribute Schema}

    Secval configuration ACL manager:
        dcecp> acl show /.:/hosts/<hostname>/config/secval/<name> -managers
        {secval           Security Validation}


DFS ACL manager:
    dcecp> acl show /.:/fs/<name> -managers
    {DFS              DFS ACL manager}


Misc:
    dcecp> acl show <application-specific ACL object>  -managers
    {general          General ACL Manager}
    Note that there is nothing DCE ships that uses this ACL manager.
    This is part of the ACL manager library for application
    developers.

____________________________________________________________
NEW GUIDELINES FOR ACL MANAGER NAMES:

We would like to enforce guidelines for all DCE ACL
managers.  These are not architectural and dcecp will accept 
any valid ACL manager names, but we would like DCE-named ACL 
managers to be named consistently and in an easily
usable manner.  Since dcecp is what will make these names
visible to a user, we are using dcecp attribute naming
conventions:

ACL manager names for all of DCE must be:
1) lowercase
2) no underscores
3) no spaces
4) 16 bytes (sizeof "sec_acl_printstring_len").
5) Choose names similiar to object command names supported in
   dcecp wherever possible.
   For example, the ACL manager name "principal" refers to
   the object that contains registry information about principals;
   /.:/sec/principal.
   Note that dcecp will allow abbreviations. For example, a user
   can specify "org" for the ACL manager name "organization".
6) Names must be unique within a component's ACL manager but not
   within DCE. 
   For example, "xattrschema" can be used for a DCED Extended
   Attribute Configuration Schema ACL object and for a Security 
   Extended Registry Attribute Schema ACL object.
7) The helpstring for an ACL manager must specify the component
   that owns or manages the objects in questions, since this 
   information cannot always be derived from the ACL manager name.
____________________________________________________________
PROPOSAL:

Below are the current DCE ACL manager names/helpstrings and their 
proposed names/helpstrings following the above guidelines.

  Old names        New names/helpstrings
--------------    ---------------------------
GDA               {gda           Global Directory Agent server}
CDS Server        {cdsserver     Cell Directory Service server}
Directory entry   {entry         CDS namespace entry ACLs}
Directory         {directory     CDS directory ACLs}
Clearinghouse     {clearinghouse CDS clearinghouse ACLs}
CDS Clerk         {cdsclerk      Cell Directory Service clerk}
Sec Principal     {principal     Registry principal object ACLs}
Sec Directory     {secdirectory  Registry directory object ACLs}
Sec Group         {group         Registry group object ACLs}
Sec Org           {organization  Registry organization object ACLs}
Sec Replist       {replist       Registry replica list object ACL}
Sec Policy        {policy        Registry policy object ACL}
Sec Attr_schema   {xattrschema   Registry extended attribute schema object ACLs}
dtsd              {dts           Distributed Time Service server or clerk}
audit             {audit         Audit server}
dced-mgmt         {dced          DCED server}
dced-managers     {container     DCED container ACLs}
srvrconf          {srvrconf      DCED server configuration object ACLs}
srvrexec          {srvrexec      DCED server execution object ACLs}
hostdata          {hostdata      DCED host data object ACLs}
rkeytab           {keytab        DCED key management object ACLs}
attr_schema       {xattrschema   DCED extended attribute schema object ACLs} 
secval            {secval        DCED security validation service}
DFS               {dfs           Distributed File Service server}
general           {generic       Generic ACL server}

[farrell]

fixed



CR Number                     : 11245
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : svc
Short Description             : cdsd -w and cdsadv -w don't route messages as specified
Reported Date                 : 7/11/94
Found in Baseline             : 1.1b11
Found Date                    : 7/11/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : server_main,gda_main,advre_main
Sensitivity                   : public

[7/11/94 public]

Found in b11 and nightly from 7/11 am.
Starting up cdsd and cdsadv with the -w flag has no effect on
message routing, except that empty file gets created.  Found
with systest svccfg003 and manually by:

contents of default routing file (/opt/dcelocal/var/svc/routing):
NOTICE:FILE:/tmp/notice.rfile
NOTICE_VERBOSE:FILE:/tmp/notice_v.rfile
WARNING:FILE:/tmp/warning.rfile
ERROR:FILE:/tmp/error.rfile
 
/opt/dcelocal/bin/cdsd -w NOTICE:FILE:/tmp/cdsd.notice 

followed by a few simple cdscp commands and then a 'disable server' cmd.
The startup and exit messages get recorded in the log specified in the 
default routing file, not the ones specified by the -w.

pomerol /tmp 183 > ls -lt *rfile 
-rw-r--r--   1 root     system              400 Jul 11 17:48 notice.rfile
-rw-r--r--   1 root     system              424 Jul 11 17:48 error.rfile
-rw-r--r--   1 root     system             1776 Jul 11 17:47 notice_v.rfile
pomerol /tmp 184 > ls -lt cds*
-rw-r--r--   1 root     system                0 Jul 11 17:47 cdsd.notice

[8/25/94 public]
The problem was startup messages where displayed before command line
options where processed.  Moved startup message display so options
can take effect.

[8/26/94 public]
Verified with svccfg003 running 8/25 NB.



CR Number                     : 11239
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : cdsd and cdsadv don't shutdown
Reported Date                 : 7/11/94
Found in Baseline             : 1.1b11
Found Date                    : 7/11/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : dns_service_prc.c,server_main.c,..
Sensitivity                   : public

[7/11/94 public]

When running dce_shutdown, cdsd and cdsadv don't respond to the commands
	cdscp disable clerk
	cdscp disable server

The script waits for 20 seconds for these to shutdown gracefully and they
consistantly fail to go away.

[7/13/94 public]

The following messages sometimes show up during cds shutdown. They are
emmitted by cdsd as a result of rpc_ep_unregister failures. I cooked up
some debug code to print the interface uuid, interface version, uuid vector,
and binding vector and the are all correct for the operation  being 
performed. Since the errors are more or less harmless I'm not persueing
it any further at this time but I want to revisit it when we look at
the shutdown problem. It may be related in some way. 
1994-07-13-14:52:39.612-04:00I----- cdsd(19237) ERROR cds server unix_cds_net.c
1523 0x007a3528 Attempt to unregister the clerk/server RPC endpoint has failed w
ith status = not registered in endpoint map (dce / rpc)
1994-07-13-14:52:39.852-04:00I----- cdsd(19237) ERROR cds server unix_cds_net.c
1563 0x007a3528 Attempt to unregister the dacl RPC endpoint has failed with stat
us = not registered in endpoint map (dce / rpc)

[8/25/94 public]
First the ep_unregi problem is fixed.
The advertiser does come down but it returns from the disable call
before it is ready to exit cause it has to get the rpc thread off
the books before rpc_server_listen will exit.  Once that happens the cache
is dumped to disk so the
delay depends on how big the cache is.
The server code was changed so that it dumps the clearinghouses to disk then returns from the disable call
there is still a small delay while it shuts down everything else.



CR Number                     : 11106
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : app_gd
Short Description             : App Dev Guide says \\ is allowed in directory names.
Reported Date                 : 6/27/94
Found in Baseline             : 1.1
Found Date                    : 6/27/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : app_gd/xds_cds/2_name_concepts.gpsml
Sensitivity                   : public

[6/27/94 public]
Table 23-1 in the App Dev Guide contains

   \   Used where necessary in front of a \ (backslash), an * (asterik), or
       a ? (question mark).........

The Directory Service AES contains instead

   \   Used where necessary in front of an * (asterik), or a ? 
       (question mark).........

Note that a \ (backslash) is not included in the later. THe code, at least
for 1.0.3 and 1.1 reflects the later. So should the guide.

[6/29/94 public]

Assigned this CR to Ron Johnson (Digital DCE 1.1 writer).

[08/16/94 public]
Changed status from "closed" to "verified".  This CR fix has
been made by the writer, but the OSF doc "bugmeister" 
(that's me!) has to review the changes in the build output
before the bug can be officially considered "closed".

[08/30/94 public]
Closed bug.



CR Number                     : 11086
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : dce / rpc
Short Description             : RIOS coretest failed
Reported Date                 : 6/27/94
Found in Baseline             : 1.1
Found Date                    : 6/27/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : do_automatic_tests
Sensitivity                   : public

[6/27/94 public]

cdscp show server
binding incomplete (no object ID and no endpoint) (dce / rpc)
binding incomplete (no object ID and no endpoint) (dce / rpc)
binding incomplete (no object ID and no endpoint) (dce / rpc)
binding incomplete (no object ID and no endpoint) (dce / rpc)
cdscp show dir /.:

                        SHOW
                   DIRECTORY   /.../mudslide_cell
                          AT   1994-06-27-09:33:22
Error on entity: /.../mudslide_cell
Error with socket
Function: dnsEnumAttr

cdscp list dir /.:
                        LIST
                   DIRECTORY   /.../mudslide_cell
                          AT   1994-06-27-09:33:23
cdscp show clearinghouse /.:/mudslide_ch

                        SHOW
               CLEARINGHOUSE   /.../mudslide_cell/mudslide_ch
                          AT   1994-06-27-09:33:24
Error on entity: /.../mudslide_cell/mudslide_ch
Error with socket
Function: dnsEnumAttr

invoking dcecp smoke test
dcecp returned value is: 
DONE

[6/27/94 public]
I've tried this once and had no problem. I'll do it a few more
time but I'm suspecting a problem with the new smoketesting......



Reran core tests after rebooting mudslide. Appears mudslide
may have been timing out which may have caused the failures
in the earlier core tests. However these tests ran fine.
Closing the ot.



CR Number                     : 11002
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : cdsclerk args are munged in ps output.
Reported Date                 : 6/17/94
Found in Baseline             : 1.1
Found Date                    : 6/17/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : ./directory/cds/adver/adver_clerk.c
Sensitivity                   : public

[6/17/94 public]
On the 486 and th hp platforms and probably the rios the arguments
that are presented as output for th eps command are munged. Alan Peckham
has a fix for this in his sandbox and it will be submitted when the tree
opens.

[7/8/94 public]
Remove an extra load of the argv[] vector which pointed
to uninitialized stack space. This looks to have been accidentally
left by the aussies during code cleanup/servicability.



CR Number                     : 10975
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10016, 10918, 10919, 11821
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : gda
Short Description             : gds needs x500_cell_to_str, ....
Reported Date                 : 6/16/94
Found in Baseline             : 1.1
Found Date                    : 6/16/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : x500_name_utils.h,x500_name_utils.c
Sensitivity                   : public

[6/16/94 public]

gds uses for the administration of objects with attributes CDS-Cell
and CDS-Replica the following functions:

x500_str_to_cell
x500_cell_to_str
x500_str_to_replica
x500_replica_to_str

These functions are located in directory/gds/gda/gda_util.c.
We got them years ago from DEC.

Now I have seen that in directory/cds/gda/x500_xdsint.c new implementations
of x500_str_to_cell and x500_str_to_replica are defined and used. I guess this
came in together with the change from using gda_child to use XDS.

Unfortunately these functions are static - so they can't be used by
gdsditadm. Also there are not the other two functions:
x500_cell_to_str and x500_replica_to_str.

I think it's possible that our old implementations of x500_str_to_cell and
x500_str_to_replica don't work any more - may be CDS has changed some
internal format of the octet string. But even if they still work:
It's much better to use the same functions in gda and gds.

My change request is the following:

- DEC should provide also x500_cell_to_str and x500_replica_to_str
- All 4 functions should go into libdce - so they can be used by gds
- gdsditadm doesn't link libgda_util any more
- DEC should check directory/gds/gda/h/gda_x500.h: We don't want to have
  responsibility for a file which holds only gda information. Until
  now this file is included by directory/cds/gda/includes/gda.h
  and directory/gds/adm/admin/d20spec_msk.c
  and exported from directory/gds/gda/h to export/..../usr/include/dce.
  The file should move to directory/cds and hold the newest prototypes for
  x500_str_to_cell, x500_str_to_replica, x500_cell_to_str, x500_replica_to_str.

If this is done and gda is succesfully tested (using XDS) we can really 
outdate all in directory/gds/gda.

[8/17/94 public]

I added the 2 routines you mentioned and moved all 4 to libdceutil.a  This
is currently exported so you should be able to get it.  I didn't want to add
more stuff to libdce cause I don't want users getting at it.  The return
values are 0 or 1 (use to be -1), I changed it to be consistant.
After you have verified that this works, let us know so this ot can be closed.
There is a new include file dce/x500_name_utils.h  Do you need gda_common anymore?

[08/23/94 public]
Reopened because:

In these functions there are DCE_SVC_DEBUG calls using
cds__svc_handle.
So we need a function which initializes the CDS serviceability
and specifies the routing (if not done by /opt/dcelocal/var/svc/routing).
This function is also necessary for the switch to CDS via XDS.

(This function should do - as far as I know:

cds_svc_handle = dce_svc_register(cds_svc_table,(idl_char *)"cds",st);

I guess that the first SVC call in CDS without having called this
function before would give a core dump - the handle is not initialized.
I get this core dump if I run a XDS application using CDS.)

Also: Do you really want that these functions return 0 if an error
occurs and 1 if successful??

[08/23/94 public]
Sorry - forgot to set status to "open".

[08/23/94 public]
Another open issue: We used until now

X500_TOWER_LEN_MAX what doesn't exist any more.

What should we use instead? DNS_STR_FNAME_MAX+1 ??

[08/23/94 public]
The dce_svc_register() isn't needed since cds/library/library_svc.c uses
DCE_SVC_DEFINE_HANDLE to define cds__svc_handle.

[08/23/94 public]
OK. library_svc.c is in libdce - right? 
So: if you think that it's OK to return 0 if an error occurs
and 1 if successful you can close this OT.

I changed X500_TOWER_LEN_MAX to "DNS_STR_FNAME_MAX+1" in 
gds/adm/admin/d20spec_msk.c. Was this OK?

[8/24/94 public]
X500_TOWER_LEN_MAX was defined in gda_x500.h  That was in gds/gda/h
The value was 500.  I don't know what it is being used for.
We don't use it.



CR Number                     : 10935
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : Ugly error message for non-root 'cdscp dump clerk cache'
Reported Date                 : 6/12/94
Found in Baseline             : 1.0.3
Found Date                    : 6/12/94
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : ./directory/cds/control/mgmt_main.c
					     ./directory/cds/control/dumpclerkcachecmd.c
Sensitivity                   : public

[6/12/94 public]
If a non-root user attempts a cdscp dump clerk cache command, several "ugly"
messages are displayed:

>cdscp dump clerk cache
Warning: you have no network credentials. All requests will be unauthenticated.
Access denied
Failure in routine: cadump
DCE text not found, dce code = 804779212, dce status = -1
>

Even if the user has dce_login'd as cell_admin but is non-root, these messages
are presented.

Users who see these messages have indicated concern that a serious problem with
DCE has been found.
More user friendly meaningful messages should be presented.

[7/8/94 public]
A return code was not initialized.
Also change to use dce_priv_proc_is_appropriate().



CR Number                     : 10899
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : command_ref
Short Description             : CDS error messages need to be removed
Reported Date                 : 6/8/94
Found in Baseline             : 1.1
Found Date                    : 6/8/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : .../command_ref/man7cds/cds_event_codes.7cds and cds_status_codes.7cds
Sensitivity                   : public

[6/8/94 public]

Kathy Digan has identified the following directories and files
that need to be removed from the DCE Command Reference, now that
the Problem Determination Guide exists:

/command_ref/man7cds/
                    cds_event_codes.7cds
                    cds_status_codes.7cds

pages references are 2-2 through 2-11 in the 1.0.3 Admin Ref.

I'm assigning this CR to Susan Teto, who is the book owner
of the DCE Command Reference.

[10/4/94 public]
I have removed the above files and Annie Poh has deleted the man7cds
subdirectory, which was emptied by the removal of the files.

[10/27/94 public]
Closed bug.



CR Number                     : 10884
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : namespace problem
Reported Date                 : 6/7/94
Found in Baseline             : 1.1
Found Date                    : 6/7/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
test/directory/cds/dacl_replicas.sh
Sensitivity                   : public

[6/7/94 public]

While running the dacl tests on a single cell machine, I
encountered the following problem with the namespace:

> [octagon:root] pts/5 /opt/test/directory/cds
> 757 ->cdscp list dir /.:/dacl_replicas
>                         LIST
>                    DIRECTORY   /.../oct.cell/dacl_replicas
>                           AT   1994-06-07-12:01:23
> dacl_replicas
> [octagon:root] pts/5 /opt/test/directory/cds
> 758 ->cdscp show dir /.:/dacl_replicas
> 
>                         SHOW
>                    DIRECTORY   /.../oct.cell/dacl_replicas
>                           AT   1994-06-07-12:01:43
> Error on entity: /.../oct.cell/dacl_replicas
> Requested entry does not exist (dce / cds)
> Function: dnsEnumAttr
> dnsEnumAttr: partial results = /
> 
> [octagon:root] pts/5 /opt/test/directory/cds
> 759 ->cdscp create dir /.:/dacl_replicas
> Error on entity: /.../oct.cell/dacl_replicas
> Specified full name already exists (dce / cds)
> Function: dnsCreateDir
> 
> [octagon:root] pts/5 /opt/test/directory/cds
> 760 ->cdscp del dir /.:/dacl_replicas   
> Error on entity: /.../oct.cell/dacl_replicas
> Requested entry does not exist (dce / cds)
> Function: dnsDelDir
> dnsDelDir: partial results = /
> 
>

[6/10/94 public]
The problem was that the test didn't clean up after itsself on the way out.
It now sets the acls to allow the test directory dacl_replicas to be removed
and removes it.



CR Number                     : 10851
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test/directory/cds/*.tests
Short Description             : incorrect comment leader
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : ./test/directory/cds/cp_foreign.tests and ./test/directory/cds/cp_subtree.tests
Sensitivity                   : public

[6/2/94 public]

The files ./test/directory/cds/cp_foreign.tests and
./test/directory/cds/cp_subtree.tests have their comment
leader set to NONE.  This should be changed to '# ' 
(without the quotes) so that DCE copyright can be added
to these files.

To fix this:

    bcs -c "# " <filename>
~
~

[06/09/94 public]

fixed comment leader and add copyright



CR Number                     : 10841
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : server
Short Description             : adding cellname as preferred gets added as normal
Reported Date                 : 6/2/94
Found in Baseline             : 1.1b9
Found Date                    : 6/2/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : cdsd
Sensitivity                   : public

[6/2/94 public]
When adding a preferred cell alias in cdscp, it inadvertently gets
added as a normal alias.  This broke with the hierarchical cell code
drop that got into 1.1b9.  Fix should be in later today.

--Roger Zee (using Janet McCann's username)



CR Number                     : 10837
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : define cached server
Short Description             : invalid string binding (dce / rpc) doing define cached server
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : cds.cdt, cprpc_clerk.c
Sensitivity                   : public

[6/2/94 public]

During dce_config I sometimes get the following error message when
configuring a CDS client:

S:****** Starting cdsadv...
S:****** soldier cdsadv daemon has not received any responses to its broadcast
for CDS servers.  Executing a "cdscp define cached server" command...
ERROR:   cdscp error during "define cached server" command.
Message from cdscp:
invalid string binding (dce / rpc)

[06/03/94 public]

Using the 0603 nightly build I reproduced this problem on an AIX machine.
I got the error during dce_config and then I tried the cdscp define
cached server command by hand and it also failed.  The third time I
tried it worked ok.

DCE_CONFIG:

S:****** soldier cdsadv daemon has not received any responses to its broadcast for CDS servers.  Executing a "cdscp define cached server" command...
ERROR:   cdscp error during "define cached server" command.
  Message from cdscp:
  invalid string binding (dce / rpc)
        Press <RETURN> to continue, CTRL-C to exit: 

FIRST and SECOND RETRIES:

root@soldier> ple_def_cache_srv west
cdscp define cached server west tower ncadg_ip_udp:130.105.201.10
invalid string binding (dce / rpc)
root@soldier> ple_def_cache_srv west
cdscp define cached server west tower ncadg_ip_udp:130.105.201.10
root@soldier> 

CONTENT OF ple_def_cache_srv SCRIPT:

root@venus> cat ple_def_cache_srv
#!/bin/sh
#
SERVER=${1}
IP=`getip ${SERVER}`
echo "cdscp define cached server ${SERVER} tower ncadg_ip_udp:${IP}"
cdscp define cached server ${SERVER} tower ncadg_ip_udp:${IP}

[06/20/94 public]

This bug can be reproduced when configuring a split server cell with
the CDS and SEC servers on different subnets. I tried this config 4 times,
with the Beta code, and failed everytime.

[7/6/94 public]
Yup - this is still a problem ... timing seems to be the key - if you
wait long enough, the define cached server command works. I also get
the error message:

invalid RPC protocol sequence (dce / rpc)

on some of the attempts to do a define cached server. My security server
is a RIOS on subnet 201, my cds server is an HP on subnet 202, if that's
of any interest ...

[7/14/94]

Well, this is a real problem and a very annoying one. For one
has to be ready to reconfigure as many times is necessary, 
until "cdscp cache server" gets it right.

I am trying to configure a split server: secd on a HPUX and
cdsd on a RIOS. 

HPUX  subnet 202
RIOS  subnet 201

gmd mentioned that time seemed to be the key. I waited
1, 2, and 5 minutes and I got the same results.


P.D. If the HPUX (in my case) is rebooted, the configuration succeeds.

[07/14/94 public]

Here is a workaround for this problem:

After the error is reported, suspend dce_config (do not get out of
it), keep repeating the "define cache server" command until one
succeeds, then foreground dce_config and the rest should work as
if the error never happened.

jd will look at the problem next week.

[8/22/94 public]
This was caused by a non-terminated string.  Fixed



CR Number                     : 10835
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : tests
Short Description             : negative cds tests should be
separate from killer
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : cp_killer.sh,cp_test.sh,cp_negative.tests
Sensitivity                   : public
With the inclusion of the subtree and foreign tests, killer was no
longer strictly a positive test suite.  Thus the completion status of
killer became meaningless, forcing the tester to review the entire
killer.log on completion (no small task).
The subtree, foreign & negative tests should be taken out of killer, and 
the completion status reported to the user as it had been previously. 
Also, cp_test.sh should use somewhat intelligent defaults for the 
clearinghouse names.
In addition, the cp_negative.tests file should be created in the 
test tree, although it will not be part of killer.  (batteries sold
separately)
6/10/94
All negative tests are pulled out of killer.  "Subtree" and "foreign"
tests must be run separately.
cp_negative.tests is provided, also to be run separately.

[6/2/94 public]



CR Number                     : 10830
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : cp_killer test fails
Reported Date                 : 6/1/94
Found in Baseline             : 1.1
Found Date                    : 6/1/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : test/directory/cds/Makefile
Sensitivity                   : public

[6/1/94 public]

Tests have been added to cp_killer but the Makefile has not been modified
to place the tests in the install tree.

[6/10/94 public]
Added test scripts to install list.



CR Number                     : 10759
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds/adver
Short Description             : src/directory/cds/adver/adver_clerk.c is broken on the RIOS
Reported Date                 : 5/24/94
Found in Baseline             : 1.1
Found Date                    : 5/24/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/adver/Makefile
Sensitivity                   : public

[5/24/94 public]

We got the following error:

"/project/dce/build/dce1.1-snap/src/directory/cds/adver/adver_clerk.c", line 220
.21: 1506-021 (S) Expecting struct or union.
"/project/dce/build/dce1.1-snap/src/directory/cds/adver/adver_clerk.c", line 220
.60: 1506-021 (S) Expecting struct or union.
"/project/dce/build/dce1.1-snap/src/directory/cds/adver/adver_clerk.c", line 220
.94: 1506-021 (S) Expecting struct or union.
*** Error code 1

John Dugas is looking into this.

[5/31/94 public]
Undefined _BSD during build of this module. Its definition caused WIFEXIT to be
difined incorrectly.

It was fixed on the day following its discovery.



CR Number                     : 10744
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds/library/dnsmalloc.c
Short Description             : Uninitialized lock in dnsmalloc.c
Reported Date                 : 5/24/94
Found in Baseline             : 1.0.3
Found Date                    : 5/24/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/library/dnsmalloc.c
Sensitivity                   : public

[5/24/94 public]

	The dns_get_buffer routine does not have a call to
 DNS_INIT as one of its actions.  This means that the mutex used
 to serialize access to the storage pools is never initialized, so
 none of the pthread_mutex_lock operations actually do anything.
 This error wasn't caught earlier because the lock/unlock ops in
 this routine don't check their status returns.  Eventually, you
 get two threads using the same buffer at the same time; when the
 second one goes to release it, it aborts.

	1.1 code has the same problem.

	Suggested fix: add DNS_INIT at the beginnin gof dns_get_buffer()
routine.

[5/31/94 public]
Yep its true. I'll build the fix in my sandbox and test it while looking at the 
intercell problem.

[6/3/94 public]
Added call to DNS_INIT.



CR Number                     : 10729
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds broadcast
Short Description             : CDS broadcast fails on same subnet
Reported Date                 : 5/23/94
Found in Baseline             : 1.1
Found Date                    : 5/23/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/adver/adver_cache.c
Sensitivity                   : public

[5/23/94 public]

Using BL-9 it appears that CDS broadcast on the same subnet is failing.
During dce_config of a CDS client on the same subnet as the CDS server
you get the following message:

S:****** This node is now a security client.
S:****** Starting cdsadv...
        What is the name of a CDS server in this cell
        (if there is more than one, enter the name of
        the server to be cached if necessary)? sunrise

        Create LAN profile so clients and servers can be divided
        into profile groups for higher performance in a multi-lan cell ? (n) 

##############################################################################
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/

S:****** spring cdsadv daemon has not received any responses to its broadcast 
         for CDS servers.  Executing a "cdscp define cached server" command...

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
##############################################################################

S:****** This node is now a CDS client.

I also noticed that my corrupted CDS cache workaround wasn't working on a
same subnet client unless I did a define cached server command, I never
had to do this before.  I always was able to remove the bad CDS cache and
restart CDS and everything would be ok.

[05/23/94 public]
I just saw broadcast work on the same subnet so this might be an intermittent
problem, I'm still looking at it.

[05/25/94 public]
Raised priority because I just saw this problem again using NB0525.

[6/8/94 public]
Fixed. When I rewrote part of the advertise code, I didn't get the
solicit holddown time computation right. It is supposed to be a
random number hovering around 15 seconds.



CR Number                     : 10716
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : directory/cds
Short Description             : undefined variables
Reported Date                 : 5/20/94
Found in Baseline             : 1.1
Found Date                    : 5/20/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/child/clerk_miscel.c
Sensitivity                   : public

[5/20/94 public]

c89 -c    -D_SHARED_LIBRARIES   -Dunix -DDNS_CMA -DDNS_CDS -DDNS_V3API -DDCE_SEC -DDNS_DFS -DDEBUG  -D__hppa -Dhp9000s800 -Dhp9000s700\
 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u3/devobj/sb/nb_ux/src/directory/cds/child -I/pr\
oject/dce/build/dce1.1-snap/src/directory/cds/child  -I../stubs -I/u3/devobj/sb/nb_ux/src/directory/cds/stubs -I/project/dce/build/dce\
1.1-snap/src/directory/cds/stubs -I../includes -I/u3/devobj/sb/nb_ux/src/directory/cds/includes -I/project/dce/build/dce1.1-snap/src/d\
irectory/cds/includes -I/u3/devobj/sb/nb_ux/export/hp800/usr/include -I/project/dce/build/dce1.1-snap/export/hp800/usr/include    /pro\
ject/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 224: error 1588: "ept_s_server_unavailable" undefine\
d.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 224: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 226: error 1588: "rpc_s_addr_in_use" undefined.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 226: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 227: error 1588: "rpc_s_assoc_req_rejected" undefine\
d.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 227: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 230: error 1588: "rpc_s_bad_pkt" undefined.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 230: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 246: error 1588: "rpc_s_cant_recv" undefined.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 246: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 247: error 1588: "rpc_s_cant_recvmsg" undefined.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 247: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 255: error 1588: "rpc_s_database_busy" undefined.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 255: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 256: error 1588: "rpc_s_different_server_instance" u\
ndefined.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 256: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 268: error 1588: "rpc_s_unknown_ns_error" undefined.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 268: error 1725: Case label expressions must be inte\
ger constants.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 270: error 1588: "rpc_s_unknown_status_code" undefin\
ed.
cc: "/project/dce/build/dce1.1-snap/src/directory/cds/child/clerk_miscel.c", line 270: error 1725: Case label expressions must be inte\
ger constants.
*** Error code 1

[5/20/94 public]
There were no submissions to cds yesterday.  The errors seem to be looking
for something in rpc that is no longer there. I'm putting rpc on the interested
list in the hope that someone in rpc can either put whatever cds needs back or
tell me what I need to do to cds to fix this........

The 486 is broken for the same reasons.


[ Peter Holmes ]

Fix was verified in nightly build.



CR Number                     : 10701
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsadv memory leak
Short Description             : dce_login causes cdsadv to grow ~60K per login
Reported Date                 : 5/19/94
Found in Baseline             : 1.1
Found Date                    : 5/19/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : adver_clerk.c adver_server.c
Sensitivity                   : public

[5/19/94 public]

The cdsadv on my HP client grew to 26676 blocks, 113m on my 486 and
8080 blocks on my AIX during the system test smoketests, this is way too
large and caused my tests to hang when all my machines ran out of swap
space.  I am using BL-9 for my testing.

[5/19/94 public]
cdsadv comes up at 14.8M and I had an idl cell up overnight on my 486 and 
it grew to 18.6M. Paul is doing lots of things in the cell and therefore 
discovered a big leak. Alan Peckham is looking at it. In the meantime I'm 
running killer to see how it grows with that. For now unless your testing 
something that does a lot of things with the name space I wouldn't back off 
the install.

[05/19/94 public]
I executed a script which did 1,439 dce_logins, the cdsadv grew 82.9mb
(12.1mb to 95mb) which works out to 57,609 bytes per login.

[05/23/94 public]
One quick test indicated that the leaking might be in the advertiser
itself.

The test is a loop of 10 dce_login/klist command pairs. On a 
1.1a/HP cell, after two executions of such test loop the advertiser's size 
remained at 3204 KB. But, with bl-9's cdsadv, it grew from 3700 KB to 6552 KB
after a single execution, or 285.2 KB per dce_login+klist.

The bl-9's cdsadv is about 135 KB bigger than bl-8's. The text size diff is about 
96 KB.

[5/26/94 public]
Fixed in 5/25/94 drop:
During the threading of the advertiser, I obmitted
the necessary thread_detach() requests, with the result
that the advertiser would grow by leaps and bounds
during repeated requests for clerks.



CR Number                     : 10671
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : /directory/cds/adver
Short Description             : `build_all' not remade because of errors
Reported Date                 : 5/17/94
Found in Baseline             : 1.1
Found Date                    : 5/17/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : /directory/cds/adver/adver_clerk.c
Sensitivity                   : public

[5/17/94 public]

[ /directory/cds/adver at 05:55 (AM) Tuesday ]
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1
[ /directory/cds/gda at 06:00 (AM) Tuesday ]
[ /directory/cds/control at 06:07 (AM) Tuesday ]
[ /directory/cds/cdsbrowser at 06:35 (AM) Tuesday ]
`build_all' not remade because of errors.
*** Error code 1

[5/17/94 public]

Provided additional error info on /directory/cds/adver
Ignore errors in directories /directory/cds/gda and /directory/cds/control and /directory/cds/cdsbrowser

xlc -c       -Dunix -DDNS_CMA -DDNS_CDS -DDNS_V3API -D_ALL_SOURCE -DDCE_SEC -DDNS_DFS -DDEBUG -D_BSD -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/directo\
ry/cds/adver -I/project/dce/build/dce1.1-snap/src/directory/cds/adver  -I../stubs -I/u1/devobj/sb/nb_rios/src/directory/cds/stubs -I/project/dce/build/dce1.1-snap/s\
rc/directory/cds/stubs -I../includes -I/u1/devobj/sb/nb_rios/src/directory/cds/includes -I/project/dce/build/dce1.1-snap/src/directory/cds/includes -I/u1/devobj/sb/\
nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/directory/cds/adver/adver_clerk.c
"/project/dce/build/dce1.1-snap/src/directory/cds/adver/adver_clerk.c", line 220.21: 1506-021 (S) Expecting struct or union.
"/project/dce/build/dce1.1-snap/src/directory/cds/adver/adver_clerk.c", line 220.60: 1506-021 (S) Expecting struct or union.
"/project/dce/build/dce1.1-snap/src/directory/cds/adver/adver_clerk.c", line 220.94: 1506-021 (S) Expecting struct or union.
*** Error code 1

[5/19/94 public]
Removed -D_BSD from compile for adver_clerk.c. It causes problems with WIFEXIT on the RIOS.



CR Number                     : 10629
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : includes
Short Description             : cds/includes didn't build
Reported Date                 : 5/13/94
Found in Baseline             : 1.1
Found Date                    : 5/13/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/includes/Makefile
Sensitivity                   : public

[5/13/94 public]
includes Makefile is referencing include file outdated by drop

[5/13/94 public]
Removed referenc from Makefile



CR Number                     : 10606
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : subtree
Short Description             : Add subtree docs to Administration Guide (Core Components) and the Administration Reference.
Reported Date                 : 5/11/94
Found in Baseline             : 1.0.3
Found Date                    : 5/11/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : admin_gd/directory/cds/subtree.gpsml
Sensitivity                   : public

[5/11/94 public]

Created a new chapter describing how to use subtree commands to restructure
CDS directories: subtree.gpsml, Using the CDS Subtree Commands to Restructure
CDS Directories.  This chapter will replace the current Chapter 11 in the
Administration Guide. The current Chapter 11, Restructuring a Namespace,
will become Chapter 12.

Also created 10 reference pages for the subtree commands. The reference
pages will be incorporated into the Administration Reference manual. They
are: delete_subtree.8cds, dump_subtree.8cds, merge_file.8cds,
merge_subtree.8cds, recreate_directory.8cds, recreate_link.8cds,
recreate_object.8cds, replace_link.8cds, replace_object.8cds,
replace_subtree.8cds.OA

[5/20/94 public]

DEC has delivered submitted Ch 11 to the doc tree and put the ref pages in
an invalid location (in the obsoleted admin_gd).  We will remove the ref
pages to the code tree nosupport tree and will move them to the command_ref
directory in the doc tree only if OSF supports this functionality in cdscp.
OSF is writing dcecp documentation for the equivalent functionality.

[5/23 public]
Ch 11 has now been added to the Description file fore book.core.

[09/08/93 public]
Note the following statement from Hal Lichtin on 9/7/94:

"The DEC subtree pages are obsolete.  The subtree operations have been
subsumed in the dcecp reference pages.  OSF did the coding, and Ward put
the information in the relevant page (directory.8dce, I believe is the only
page affected.  So the Admin part can be "closed" or "canceled" as being
subsumed by the standard dcecp CR."

This CR can be closed as soon as Howard Melman reviews the Subtree
chapter for the Admin Guide.

[10/27/94 public]
Closed bug.



CR Number                     : 10580
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : create clearinghouse fails
Reported Date                 : 5/9/94
Found in Baseline             : 1.1
Found Date                    : 5/9/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : ./directory/cds/server/unix_cds_net.c
Sensitivity                   : public

[5/9/94 public]

cdscp create clearinghouse /.:/abc 

fails with "Insufficient rights to perform requested operation (dce / cds)"
even after a dce_login.  This is due to code changes submitted May 6 since
it worked on May 5.  This is a problem on SVR4 and HP.  It may be broken
on other platforms as well.



CR Number                     : 10578
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : Hierarchial cells
Short Description             : Add Hierarchical Cell
documentation to several chapters in the Administration Guide..
Reported Date                 : 5/9/94
Found in Baseline             : 1.0.3
Found Date                    : 5/9/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
1_dir_overview.gpsml, 2_cds_concepts.gpsml, 3_cds_resolve.gpsml, 4_cds_update.gpsml, 5_cds_cp.gpsml, 6_cds_access.gpsml, 7_cds_clerkservch.gpsml
Sensitivity                   : public

[5/9/94 public]

Updated Chapters 2 through 8 in the Administration Guide (Core Components)
to include information on hierarchial cells support.

[10/27/94 public]
Closed bug.



CR Number                     : 10570
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 7647
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cache/cache.c
Short Description             : locking is inadequate to
ensure linked list integrity
Reported Date                 : 5/6/94
Found in Baseline             : 1.0.3
Found Date                    : 5/6/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : calock.c,cache.h,cafreelist.c
Sensitivity                   : public

[5/6/94 public]

Customer reported:

 The locking in directory/cds/cache.c is not sufficient to
 ensure the integrity of the linked lists (freelist and collision
 list).  Different callers have different ideas of what lock should be
 taken.  Some use the global lock, some use the client lock, a couple
 use the list lock.  This can result in list corruption if two callers
 with different locks go after the same (or adjacent) items.
 
The problem was found when running cp_killer.sh, but reproducing of it is
said to be not easily.

Suggested fix (not necessary complete):

     *** /tmp/ci.1739..cache.c.1771.1   Wed Apr  6 13:23:37 1994
     --- /tmp/cache.c.1771.2    Wed Apr  6 13:23:37 1994
     ***************
     *** 76,93 ****
     --- 76,100 ----
            CacheLinkedList_t *hdr_p;   /* Linked list header */
            CacheLinkedList_t *element_p; /* item to add to list */
       {
         CacheLinkedList_t *ll_p;
       
     + #ifdef HITM
     +   CAListLock();
     + #endif
     + 
         element_p->ll_blink = CA_GET_OFFSET(hdr_p);
         element_p->ll_flink = hdr_p->ll_flink;
       
         ll_p = CA_GET_LLPOINTER(hdr_p->ll_flink);
         ll_p->ll_blink = CA_GET_OFFSET(element_p);
       
         hdr_p->ll_flink = CA_GET_OFFSET(element_p);
       
     + #ifdef HITM
     +   CAListUnlock();
     + #endif
       }
       ^L                                                                     
     /* */
       /*
        * Remove an element from the collision list
        * Hash table is assumed to be locked by caller.
     ***************
     *** 95,130 ****
       void CACollisionRemove(element_p)
            CacheLinkedList_t *element_p;
       {
         CacheLinkedList_t *ll_p;
       
         /* Convert cache offset into address */
         ll_p = CA_GET_LLPOINTER(element_p->ll_flink);
         ll_p->ll_blink = element_p->ll_blink;
       
         ll_p = CA_GET_LLPOINTER(element_p->ll_blink);
         ll_p->ll_flink = element_p->ll_flink;
       
         element_p->ll_flink = 0;
         element_p->ll_blink = 0;
       }
       ^L                                                                     
     /* */
       /*
        *   Insert a cache element at the beginning of the LRU list.
     !  *   List is locked by cache lock held by caller.
        */
       void CALruInsert(element_p)
            void_ptr element_p;  /* buffer returned by CAFreeListAlloc */
       {
         CacheHeader_t *hdr_p;
         CacheHeader_t *cache_p,*next_p;
       
         if (0 < CA_refs(element_p)) return;
       
     !   /* Get address of header.  It proceeds the allocated element */
         cache_p = (CacheHeader_t *)element_p - 1;
       
         /* Determine appropriate LRU list */
         if ((cache_p->hdr.type == CHEntry) || (cache_p->hdr.type == DHEntry))
          hdr_p = &CAfixed_p->ca_Glru;
         else
           hdr_p = &CAfixed_p->ca_Clru;
     --- 102,150 ----
       void CACollisionRemove(element_p)
            CacheLinkedList_t *element_p;
       {
         CacheLinkedList_t *ll_p;
       
     + #ifdef HITM
     +   CAListLock();
     + #endif
     + 
         /* Convert cache offset into address */
         ll_p = CA_GET_LLPOINTER(element_p->ll_flink);
         ll_p->ll_blink = element_p->ll_blink;
       
         ll_p = CA_GET_LLPOINTER(element_p->ll_blink);
         ll_p->ll_flink = element_p->ll_flink;
       
     + #ifdef HITM
     +   CAListUnlock();
     + #endif
     + 
         element_p->ll_flink = 0;
         element_p->ll_blink = 0;
       }
       ^L                                                                     
     /* */
       /*
        *   Insert a cache element at the beginning of the LRU list.
     !  *   The cache lock is held by caller; however, the list lock must be
     !  *   taken to avoid interference by the FreeList routines.
        */
       void CALruInsert(element_p)
            void_ptr element_p;  /* buffer returned by CAFreeListAlloc */
       {
         CacheHeader_t *hdr_p;
         CacheHeader_t *cache_p,*next_p;
       
         if (0 < CA_refs(element_p)) return;
       
     !   /* Get address of header.  It precedes the allocated element */
         cache_p = (CacheHeader_t *)element_p - 1;
       
     + #ifdef HITM
     +   CAListLock();
     + #endif
     + 
         /* Determine appropriate LRU list */
         if ((cache_p->hdr.type == CHEntry) || (cache_p->hdr.type == DHEntry))
          hdr_p = &CAfixed_p->ca_Glru;
         else
           hdr_p = &CAfixed_p->ca_Clru;
     ***************
     *** 133,164 ****
         cache_p->hdr.list.ll_flink = hdr_p->hdr.list.ll_flink;
       
         next_p = CA_GET_CAPOINTER(hdr_p->hdr.list.ll_flink);
         next_p->hdr.list.ll_blink = CA_GET_OFFSET(cache_p);
         hdr_p->hdr.list.ll_flink = CA_GET_OFFSET(cache_p);
         cache_p->hdr.refs = -1;
       }
       ^L                                                                     
     /* */
       /*
        *   Remove a cache element from the LRU list.
        */
       void CALruRemove(element_p)
            void_ptr element_p;       /* buffer returned by CAFreeListAlloc */
       {
       
         CacheHeader_t *cache_p,*next_p,*prev_p;
       
         if (0 < CA_refs(element_p)) return;
       
     !   /* Get address of header.  It proceeds the allocated element */
         cache_p = (CacheHeader_t *)element_p - 1;
       
         next_p = CA_GET_CAPOINTER(cache_p->hdr.list.ll_flink);
         next_p->hdr.list.ll_blink = cache_p->hdr.list.ll_blink;
       
         prev_p = CA_GET_CAPOINTER(cache_p->hdr.list.ll_blink);
         prev_p->hdr.list.ll_flink = cache_p->hdr.list.ll_flink;
       
         cache_p->hdr.list.ll_flink = 0;
         cache_p->hdr.list.ll_blink = 0;
         cache_p->hdr.refs = 0;
       }
     --- 153,199 ----
         cache_p->hdr.list.ll_flink = hdr_p->hdr.list.ll_flink;
       
         next_p = CA_GET_CAPOINTER(hdr_p->hdr.list.ll_flink);
         next_p->hdr.list.ll_blink = CA_GET_OFFSET(cache_p);
         hdr_p->hdr.list.ll_flink = CA_GET_OFFSET(cache_p);
     + 
     + #ifdef HITM
     +   CAListUnlock();
     + #endif
     + 
         cache_p->hdr.refs = -1;
       }
       ^L                                                                     
     /* */
       /*
        *   Remove a cache element from the LRU list.
     +  *   The cache lock is held by caller; however, the list lock must be
     +  *   taken to avoid interference by the FreeList routines.
        */
       void CALruRemove(element_p)
            void_ptr element_p;       /* buffer returned by CAFreeListAlloc */
       {
       
         CacheHeader_t *cache_p,*next_p,*prev_p;
       
         if (0 < CA_refs(element_p)) return;
       
     !   /* Get address of header.  It precedes the allocated element */
         cache_p = (CacheHeader_t *)element_p - 1;
       
     + #ifdef HITM
     +   CAListLock();
     + #endif
     + 
         next_p = CA_GET_CAPOINTER(cache_p->hdr.list.ll_flink);
         next_p->hdr.list.ll_blink = cache_p->hdr.list.ll_blink;
       
         prev_p = CA_GET_CAPOINTER(cache_p->hdr.list.ll_blink);
         prev_p->hdr.list.ll_flink = cache_p->hdr.list.ll_flink;
     + 
     + #ifdef HITM
     +   CAListUnlock();
     + #endif
       
         cache_p->hdr.list.ll_flink = 0;
         cache_p->hdr.list.ll_blink = 0;
         cache_p->hdr.refs = 0;
       }

[5/6/94 public]
I need something more specific than 'This can result in list corruption if 
two callers with different locks go after the same (or adjacent) items' to
initiate a rewrite of the cache module. Can you point to something specific
in the code that leads you to believe the client and global locks are being
misused or abused.

[5/9/94 public]
Here is an example where the list may be coorrupted becasue of the
inconsistent use of locks:

In CALruInsert() (cache.c), it is said that the cache lock is held by the
caller. But the operation is done on element_p, which is returned from a
free list. If at this time, someone else tries to free this block by
calling CAFreeListFree(), what will happen? In CAFreeListFree(), the free
list is guarded by list lock by calling CAListLock(), but that has nothing
to do with the cache lock. So the free operation may succeed.

I believe that the similar scenario holds true for CACollisionInsert() and
CACollisionRemove() opersations. They assume that the hash table is locked
by the caller, but they are also operating on the linked list element. If
another thread is also trying to operating the same linked list element,
you end up with an inconsistent state.

[5/9/94]
I don't think there is a problem.  First lets make sure we all understand how it is
suppose to work.

There are 4 sections to the cache.  Header, freelist, client and global caches.  The 
freelist is shared between the client and global caches.  When it is manipulated it is
assumed that either the client or global or both are locked.

Now there are 2 LRU lists, one for global and one for client.  They are controlled by
the client and global locks, not the list lock.  So in calruinsert, the appropriate lock
is held.  The element has already been removed from the freelist, and is know being added
to the client/global LRU list.  I don't see how freelistfree gets in here.  
The element is actually not on any list at this point (or if it is it is the collistion list
which is controlled by the same client/global lock held before calling lruinsert) 

There are lots of possible linked lists.  Not all are controlled by the listlock, in fact
I think only the freelist is.  An element is either on the freelist or in a hash table 
and on an LRU list.  There are cases where blocks of memory are no-where, but this if 
for permanent things.

I don't see the problem!!

[5/10/94 public]
With mccann's comments in mind, I looked at the source again. The cache 
structure is clearer to me now. I was almost convined that there is no
problem here, when I got the following email from the customer. As can 
be seen, he works with KERNEL threads:

------Start quoting
"Thanks for your reply.  Clearly, I didn't understand the workings of
the cache well enough, so I arrived at the wrong conclusion as to the
source of the problem.

The problem I was seeing was corruption of the freelist.  I'm in a
unique (I think) position to see timing problems since I'm using
kernel pthreads and I don't think anyone else is, at least not yet.

I eventually discovered that the true source of the problem I was
seeing was that CALruInsert does not check whether the element being
inserted is already on the freelist.  Usually it isn't.  Very
occasionally, it is.  I solved the problem for now by testing for a
nonzero free link and not changing the element if I get one.  Now, you
might well ask how this is happening, and frankly, I don't know.

Today, I ran into yet another freelist corruption problem, but this is
a different one.  This time the freelinks were simply overwritten by
data (I think).  I only saw this after the fact, so I don't know what
code did it.

Thanks for taking the time on this one.  I know for a fact that kernel
pthreads allow timing problems that DCE threads never see, and I'm
still looking for these latest ones."
--------End quoting-----

So I focused on the freelist allocation part. At last, I saw where the 
problem reported by the cusotmer (an element being inserted to the LRU 
list is also on the freelist) could happen.

The problem is in the CAClientAlloc(). This routine is called with the
assumption that the caller holds the client lock. Fine. But if the call to
CAFreeListAlloc() fails, it tries to reclaim memory. To do so, it needs to
do a total lock by acquiring both the global and client locks. But there is
a potential of deadlock if the order is not right, so it makes sure that it
always locks the global lock first then the client lock. No deadlock. But
before locking the global lock, it needs to unlock the client lock. At this
moment, the assumption that this routine is called with client lock locked
is no longer true! There is a window of time (either this thread runs up
its time share right after the call of CAUnlockClient, or when it tries to
lock the global lock, but the global lock is held by someone else) that
someone else can acqurie the client lock and do something.

Took me a while to find exactly where this scenario can cause damage: in
CAInsertAccess() and CAGInsert(). To have CAClientAlloc() do the damage, it
has to be called to operate on some shared variables and they get
corrupted.  InsertAttr(), CAInsertLink(), CA_InsertName(), and
CAInsertUser() also call CAClientAlloc(), but since the return value of
CAClientAlloc() is always stored in an automatic variable (stack
variable), then inserted onto lru and collision lists, no shared variables
involved, no damage there.

Now let me take CAGInsert() as an example to show how it can corrupt the
cache. CAGinsert() is called with the assumption that the caller holds the
client lock. The first time it is called, it checks to see if
user_p->uh_group (a possible shared variable. user_p is passed in as an
input parameter) exist. If not, it will call CAClientAlloc() to create it.
Then it checks to see if the item is in the cache. If not, it calls
CAClientAlloc() to create.

Suppose during the first time CAGinsert() is called for user_p by thread A,
CAClientAlloc could not get from free list and it loses its running time right
after unlocking the clien tlock. Now thread B, also operating for user_p,
calls CAGinsert(). For some timing reason, thread B succeeds in
CAClientAlloc() for the list header. So now user_p->uh_group is set. Then
thread B goes on to call CAClientAlloc() for creating the cache entry. This
time it fails to get from free list. It loses its turn after unlocking the
client lock. Thread A comes back now. After CAReclaim(), CAClientAlloc()
now succeeds. It rewrites user_p->uh_group! Damage made. Then it goes on to
CAClientAlloc() the cache entry, loses its turn after unlocking the client
lock. Thread B comes back, now it uses a bogus user_p->uh_group value,
calls CALruInsert(), then CACollisionInsert() with user_h->uh_group. This
updates some pieces of memory that does not belong to it (possible free
list items). From now on, anything is possible. 

I guess this problem is not so obvious to see from a user, since it may
only mean that next time you search for cache, you won't find anything and 
you have to recache. Possilly running out of memory, perhaps? I mean this 
could be a hard to notice problem.

Same thing for CaInsertAccess().

What is the fix? Breaking the CAGinsert() into two pieces (one
initialization, one actual insert) does not help, since the same scenario
can happen. One way is to introduce another lock which is used exclusive
for CAReeclaim(). Another working fix is not to have CAClientAlloc() do the
CAReclaim() call. Instead, when it fails in CAFreeListAlloc(), sleep for a
while (but don't give up the client lock, for god's sake). It will give
time to CAGlocalAlloc() to call CAReclam(). Since the free list is shared 
by both the global and client caches, after CAGlobalAlloc calls CAReclam, 
it helps CACleintAlloc too. This way, we can assure that the client lock 
is always held and no deadlock would happen.

[5/18/94 public]
The customer reported implementing yet another fix: do not call CAReclaim
in CAClientAlloc if CAFreeListAlloc() fails. Insteadof sleeping, it simply 
returns. The customer reported that the fix so far works well.

[5/18/94 public]
The customer pointed out to me that the spinning problem reported in OT
7647 is most likely due to this locking problem.

When the free list is corrupted, it is possible to develop a loop somewhere
midway down its length, so code that blindly follows the list (with the
assumption that it will return to the start) gets stuck there.

This explains the behavior OT 7647 reports. From the experience, if the
cache is removed (the corrupted free list is gone), the cdsclerk stops 
spinning.

The customer also told me that he used to see the cdsclerk spinning often, 
sometimes even in less than an hour. Since he applied fix to the cache lock 
problem (see above), he has not seen this spinning problem.

I am raising this one to B 1. Hopefully we can fix it for beta.

[7/21/94 public]
The fix for this was submitted last week.  We collapses the locks
into one.  Didn't feel comfortable about not freeing space for
the client side.



CR Number                     : 10566
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : help line in cds.sams too big
Reported Date                 : 5/6/94
Found in Baseline             : 1.1
Found Date                    : 5/6/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/includes/cds.sams
                                             directory/cds/control/cdscp_help.c
Sensitivity                   : public

[5/6/94 public]
The help string in CDSCP_HELP_TEXT is too long. It blows the lex buffer
on the hp platform. I will break it up into two strings and submit the
fix shortly.

[5/6/94 public]
Broken in two.



CR Number                     : 10550
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cache/calock.c
Short Description             : locking does not always work correctly
Reported Date                 : 5/5/94
Found in Baseline             : 1.0.3
Found Date                    : 5/5/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/cache/calock.c
Sensitivity                   : public

[5/5/94 public]

Customer reported:

 The locking supported in calock.c is not done
 satisfactorily for all conditions.  The preservation of the caller's
 cancellability state is not done while the lock is held, and thus
 could be overwritten by a second caller.  Also, the comment that the
 semop operation is not thread-safe is wrong on a kernel threads
 implementation (on our OSF/1 platform, semop is thread-safe, so the
 mutex operations are a waste of time).

The problem was found when running cp_killer.sh, but it is said that the
problem is hard to reproduce.

Suggested fix:

     *** /tmp/ci.1821..calock.c.1853.1  Wed Apr  6 13:28:07 1994
     --- /tmp/calock.c.1853.2   Wed Apr  6 13:28:07 1994
     ***************
     *** 125,142 ****
       # endif
       
       # define CACHE_INIT              { pthread_once(&cache_once, cache_init); }
       # define CACHE_LOCK              { pthread_mutex_lock(&cache_mutex); }
       # define CACHE_END_LOCK          { pthread_mutex_unlock(&cache_mutex); }
     - # define CACHE_SEM_LOCK(n) \
     -  { (void)pthread_mutex_lock(&CA_lock_mutex[n]); \
     -            CA_cancel_state[n] = pthread_setcancel(CANCEL_OFF); }
     - # define CACHE_SEM_END_LOCK(n) \
     -  { (void)pthread_mutex_unlock(&CA_lock_mutex[n]); \
     -    (void)pthread_setcancel(CA_cancel_state[n]); \
     -    CA_cancel_state[n] = CA_CANCEL_NONE; }
       
       /*
        * Initialize this module's statics
        */
       static void
       cache_init ()
     --- 125,196 ----
       # endif
       
       # define CACHE_INIT              { pthread_once(&cache_once, cache_init); }
       # define CACHE_LOCK              { pthread_mutex_lock(&cache_mutex); }
       # define CACHE_END_LOCK          { pthread_mutex_unlock(&cache_mutex); }
       
     + # define FULL_LOCK(_op, _nm)     \
     +    CACHE_SEM_LOCK(_nm);          \
     +    CACHE_SEMOP_LOCK(_op, _nm);
     + 
     + # define FULL_UNLOCK(_op, _nm)           \
     +    CACHE_SEMOP_END_LOCK(_op, _nm);       \
     +    CACHE_SEM_END_LOCK(_nm);
     + 
     + # ifndef HITM
     + #  define CACHE_MUTEX_LOCK(x)    (void)pthread_mutex_lock(&CA_lock_mutex[x])
     + #  define CACHE_MUTEX_UNLOCK(x)  (void)pthread_mutex_unlock(&CA_lock_mutex[x])
     + #  define CACHE_SEM_LOCK(n) \
     +  { int __nn; \
     +    __nn = pthread_setcancel(CANCEL_OFF); \
     +    CACHE_MUTEX_LOCK(n); \
     +    CA_cancel_state[n] = __nn; }
     + 
     + #  define CACHE_SEM_END_LOCK(n) \
     +  { int __nn;             \
     +    __nn = CA_cancel_state[n]; \
     +    CA_cancel_state[n] = CA_CANCEL_NONE; \
     +    CACHE_MUTEX_UNLOCK(n); \
     +    (void)pthread_setcancel(__nn); }
     + 
     + #  define CACHE_SEMOP_LOCK(_z)                    \
     +     while (semop(CAfixed_p->ca_lock, _z, 1) < 0) \
     +        if (errno != EINTR)                        \
     +           /* Gross failure - what to do ? */      \
     +           break;                          \
     + 
     + #  define CACHE_SEMOP_END_LOCK(_z)                \
     +     while (semop(CAfixed_p->ca_lock, _z, 1) < 0) \
     +        if (errno != EINTR)                        \
     +            /* Gross failure - what to do ? */     \
     +            break;
     + 
     + # else
     + #  define CACHE_SEM_LOCK(n)
     + #  define CACHE_SEM_END_LOCK(n)
     + 
     + #  define CACHE_SEMOP_LOCK(_z, _num)              \
     +     { int __nn;                           \
     +       __nn = pthread_setcancel(CANCEL_OFF);       \
     +       while (semop(CAfixed_p->ca_lock, _z, 1) < 0) \
     +          if (errno != EINTR)                      \
     +             /* Gross failure - what to do ? */    \
     +             break;                                \
     +       CA_cancel_state[_num] = __nn; }
     + 
     + #  define CACHE_SEMOP_END_LOCK(_z, _num)   \
     +    { int __nn;                                     \
     +      __nn = CA_cancel_state[_num];                 \
     +      CA_cancel_state[_num] = CA_CANCEL_NONE;       \
     +      while (semop(CAfixed_p->ca_lock, _z, 1) < 0) \
     +          if (errno != EINTR)                       \
     +              /* Gross failure - what to do ? */    \
     +              break;                                \
     +      (void)pthread_setcancel(__nn); }
     + 
     + # endif
     + 
       /*
        * Initialize this module's statics
        */
       static void
       cache_init ()
     ***************
     *** 347,368 ****
         DEBUG_EVENT(enter_CALock, (" >CALock\n"));
       
         CACHE_INIT;
       
         /* Protect threads from each other.
     !    * Semaphores only help between processes
          */
       
     -   CACHE_SEM_LOCK(num);
         sops[0].sem_num = num;
         sops[0].sem_op = -1;
         sops[0].sem_flg = SEM_UNDO;
       
     !   while (semop(CAfixed_p->ca_lock, sops, 1) < 0)
     !     if (errno != EINTR)
     !       /* Gross failure - what to do ? */
     !       break;
       
         /* Block signals while manipulating cache */
         CABlock();
       
         DEBUG_EVENT(exit_CALock, (" <CALock\n"));
     --- 401,418 ----
         DEBUG_EVENT(enter_CALock, (" >CALock\n"));
       
         CACHE_INIT;
       
         /* Protect threads from each other.
     !    * Semaphores only help between processes [not true on HITM]
          */
       
         sops[0].sem_num = num;
         sops[0].sem_op = -1;
         sops[0].sem_flg = SEM_UNDO;
       
     !   FULL_LOCK(sops, num);
       
         /* Block signals while manipulating cache */
         CABlock();
       
         DEBUG_EVENT(exit_CALock, (" <CALock\n"));
     ***************
     *** 373,405 ****
        */
       void
       CAUnlock (num)
            int num;
       {
     - 
         struct sembuf sops[1];
       
         DEBUG_EVENT(enter_CAUnlock, (" >CAUnlock\n"));
       
     !   /* Allow signals */
         CAUnBlock();
       
         /* Release lock by setting value back to 1 */
         sops[0].sem_num = num;
         sops[0].sem_op = 1;
         sops[0].sem_flg = SEM_UNDO;
       
     !   while (semop(CAfixed_p->ca_lock, sops, 1) < 0)
     !     if (errno != EINTR)
     !       /* Gross failure - what to do ? */
     !       break;
       
     -   /* Release semaphore for other threads */
     -   CACHE_SEM_END_LOCK(num);
     - 
         DEBUG_EVENT(exit_CAUnlock, (" <CAUnlock\n"));
       }
     - 
     - 
     - 
     - 
     - 
     --- 423,443 ----
        */
       void
       CAUnlock (num)
            int num;
       {
         struct sembuf sops[1];
       
         DEBUG_EVENT(enter_CAUnlock, (" >CAUnlock\n"));
       
     !   /* Allow signals -- this is a window, but must be done under the lock */
         CAUnBlock();
       
         /* Release lock by setting value back to 1 */
         sops[0].sem_num = num;
         sops[0].sem_op = 1;
         sops[0].sem_flg = SEM_UNDO;
       
     !   FULL_UNLOCK(sops, num);
       
         DEBUG_EVENT(exit_CAUnlock, (" <CAUnlock\n"));
       }

[5/6/94 public]
None of our reference platforms run on kernel threads. While it may
be nice to make these lock macros more generic so they can be set to
things other than pthread_mutex_lock this would be an enhancement request 
not a bug.

The cancel state maintained per semaphore is set to off only by the
CACHE_SEM_LOCK macro after taking the mutext and set to none only by 
CACHE_SEM_END_LOCK after releasing the mutex. It is ot referenced anywhere
else in all of cds. Since the mutex prevents anyone else from changing the
cacelation state there can be no ambiguity in its value. If they are
having problems with killer failures I maintain this is not the cause.

I'll leave this ot open for comment for a few days but I have no plans
for making any changes specific to this ot at this time. If they can't 
give me more information on why they think these two macros are a problem
I'll cancel this in a few days.

[5/6/94 public]

Let us look at the current macros now:

      # define CACHE_SEM_LOCK(n) \
       { (void)pthread_mutex_lock(&CA_lock_mutex[n]); \
                 CA_cancel_state[n] = pthread_setcancel(CANCEL_OFF); }
      # define CACHE_SEM_END_LOCK(n) \
       { (void)pthread_mutex_unlock(&CA_lock_mutex[n]); \
         (void)pthread_setcancel(CA_cancel_state[n]); \
         CA_cancel_state[n] = CA_CANCEL_NONE; }
       
The CACHE_SEM_LOCK() is fine, the original cancel state is saved after the
mutex lock. But at the CACHE_SEM_END_LOCK() time, the original cancel state
is restored after the mutex is unlocked. This leaves a window of time that
another thread, waiting on CA_lock_mutex[n], may get in and save its old
cancel state to CA_cancel_state[n]. Now when you restore, you restore sb
else's old cancel state.

So if we don't want to do anything for kernel threads, I think we need to
reverse the order in the macro for CACHE_SEM_END_LOCK.

[6/7/94 public]
Fixed. In CACHE_SEM_END_LOCK(), I changed to retrieve the old cancel state
*before* unlocking.



CR Number                     : 10548
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : Addition of test scripts for
subtree operations.
Reported Date                 : 5/5/94
Found in Baseline             : 1.1
Found Date                    : 5/5/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
cp_test.sh, cp_killer.sh, cp_subtree.tests, cp_foreign.tests, foreign_dump.dat
Sensitivity                   : private

[5/5/94 public]
The files cp_test.sh and cp_killer.sh need updating to support the 
new tests for the new subtree functions.  

The files cp_subtree.tests adn cp_foreign.tests are scripts for cdscp
which exercise subtree commands.  The file foreign_dump.dat is used to 
test the merge of a subtree from a foreign cell.



CR Number                     : 10494
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : The advertizer is closing files that for which there are threads sitting in read.
Reported Date                 : 5/1/94
Found in Baseline             : 1.1
Found Date                    : 5/1/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/adver/*
Sensitivity                   : public

[5/1/94 public]
The advertizer is closing files for which one or more threads are waiting
for IO. The cma package puts out a warning for this condition during the
close. When cma__io_available detects the condition after a select on the
closed file it treats it as a fatal inconsistancy. There is currently 
a cma bug open,6886 , to do something better than this put the solution is 
involved. cds was not hitting this untill Janet's drop on 4/19. Untill we can
make cma do the right thing it would be nice to have cds terminate the
reads prior to closing the files.

[5/26/94 public]
Thanks, John, for providing the impulse for an advertiser rewrite.
The advertiser, as it stood, was a strange mix of threaded and non-threaded
code that was at best difficult to understand. The file closing problems
were probably due to shutdown while a thread was still using the select()
call. I reorganized the code to allow threading, creating seperate modules
for the cache support, clerk spawning, and server activities. They each
have startup and shutdown calls, and now everything is orderly.



CR Number                     : 10452
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : admin_ref
Short Description             : set dir to new epoch descrip wrong
Reported Date                 : 4/25/94
Found in Baseline             : 1.0.3
Found Date                    : 4/25/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : command_ref/man8cds/set_directory_epoch.8cds
Sensitivity                   : public

[4/25/94 public]
I spoke with Dave Griffith at DEC and it turns out the 2nd paragraph in the
description of set_directory_to_new_epoch.8cds is incorrect

  .PP
  .zA "defect,6045,R1.0.2, "Added description"
  When you set a new epoch on a directory, you must disable the clearinghouse
  containing the replica that is being excluded.  To do this, use the 
  \*Ldisable server\*O command (if  the server has more than one 
  clearinghouse, all its clearinghouses will be disabled).  If you are 
  assigning a new 
  master, both the clearinghouse that contains the current master and the one
  to contain the new master must be enabled and accessible before you 
  issue this command.
  .zZ "defect,6045,R1.0.2, "Added description"

The clearinghouse that contains the current master does not have to be
reachable.  That would defeat most of the purpose of this command.  Dave
had many problems with this paragraph, please see him or someone else at
DEC for more details.

[5/13/94 public]

Assigned this CR to Ron Johnson (DEC's DCE 1.1 writer).

[09/29/94 public]
Closed bug.



CR Number                     : 10447
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : show cdscp conf fails
Reported Date                 : 4/22/94
Found in Baseline             : 1.1
Found Date                    : 4/22/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/includes/cds.sams
Sensitivity                   : public

[4/22/94 public]

cdscp <rtn>
cdscp> set cdscp conf high
cdscp> show cdscp conf

Unknown message number 0x10d0a099

is returned.  To recreate run killer.  This also fails on SVR4 as
well has OSF1.  It has not been tested on the other platforms.

[4/29/94 public]
On OSF/1 it doesn't even have a newline.
This looks like a message catalog problem:
% stcode -h 0x10d0a099
Tech = 1 = 01 = 0x1 = dce
Comp = 3338 = 06412 = 0xd0a = cds
Mesg = 153 = 0231 = 0x99 = not in catalog

And looking at dcecds.cat, there is message 153:
% dspcat dcecds.cat

...

1 : 149 Clearinghouse %s exclusion argument missing

1 : 150 No replica of specified directory exists at clearinghouse %s

1 : 154 Cannot open file %s

...

[05/02/94 public]
The message in the sams file:
        start   undocumented
        severity        error
        code    CDSCP_SHO_CONF
        tables  (cdscp_msg_table)
        text    "Confidence used is %s\n"
        end

Needs to say 
	start undocumented incatalog

[5/9/94 public]
Several messages in the cds.sams file needed intable and incatalog added.
Added same.



CR Number                     : 10409
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : directory/cds/adver
Short Description             : "cdscp dump cache server"
fails in dce_config
Reported Date                 : 4/20/94
Found in Baseline             : 1.1
Found Date                    : 4/20/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : 
directory/cds/control/dumpclerkcachecmd.c
Sensitivity                   : public

[4/20/94 public]

Found in RaT multi-machine smoketest: when running dce_config on the
HP, "dce_config" hangs when trying to start the CDS advertiser.  

Specifically, "cdscp dump cache server" in "dce_config" hangs.

[4/20/94 public]
Changed dump clerk cache to show dir /.:. This will work until
the dump clerk cache works and maybe permanently. In the meantime 
make the priority A1.

[6/27/94 public]
This was fixed a few weeksa ago. It was a problem using a thread before
it was properly initialized.



CR Number                     : 10405
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : admin_gd
Short Description             : no section on manipulating attrs
Reported Date                 : 4/20/94
Found in Baseline             : 1.0.3
Found Date                    : 4/20/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : 2_cds_concepts.gpsml,b_cds_files_app.gpsml
Sensitivity                   : public

[4/20/94 public]
There is no section in the admin guide that describes adding or changing
attributes in CDS entries (objects, directories, etc.).  Chapter 10 is
"Viewing the Structure and Contents of a Namespace" which is great.
Chapter 11 is "Restructuring a Namespace" which talks about softlinks,
replications, deleting a directory or clearinghouse and moving
clearinghouses.  There is nothing that talks about:

  what an attribute is (not even in the opening chapters!!)
  attribute syntaxes
  attributes used internally by CDS
  adding user defined attributes 
  The cds_attributes file
  single vs multi-valued attributes
  using the "add" or "remove" commands in cdscp (modify in dcecp)

CDS is meant to store data and we don't describe how to do this.  Only how
to replicate and move data that is already in there.  There should be a new
chapter between the existing Chapters 10 and 11.

[5/13/94 public]

Assigned this CR to Ron Johnson (Digital's DCE 1.1 writer)

[10/4/94]
Added expaned definition of attributes to concepts chapter. Added new section
on modifying CDS attributes to appendix b.

[10/25/94 public]
Closed bug.



CR Number                     : 10387
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 10340
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : app_gd
Short Description             : tables in "XDS and the DCE
Cell Namespace" chapter need revision
Reported Date                 : 4/18/94
Found in Baseline             : 1.0.3
Found Date                    : 4/18/94
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : app_gd/*
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[4/18/94 public]

According to CR10340, filed under the GDS component, several
tables in the chapter "XDS and the DCE Cell Namespace" within
Part 4A, "CDS Application Programming" of the Application Development
Guide need to be corrected. See CR10340 for the details
and background information. It is my understanding that Digital
owns this section of the Application Development Guide, so I'm
assigning this CR to Ron Johnson (DEC DCE 1.1 writer).

[4/18/94 public]

Modfied severity/priority to match CR10340.

[10/25/94]

Never Adressed by DEC.  Deferred to 1.2

[9/14/95 public]

Reopening this bug and assigning it, at least temporarily, to
myself. Despite what Hal thought (see immediately above), I'm
pretty sure this bug was all fixed. No time to check at the
moment though.

[2/27/96 public]

Reduced the severity and deferred to 1.2.2.

[12/14/96 public]

Fixed in 1.2.2.



CR Number                     : 10380
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : byte attribute values must be 
even number of characters
Reported Date                 : 4/18/94
Found in Baseline             : 1.1
Found Date                    : 4/18/94
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : attrname_actions_cds.c
Sensitivity                   : public

[4/18/94 public]

When entering a CDS attribute of type 'byte' the control program 
modifies odd length attribute values to be even length values.
That is if I entry a value for RPC_ClassVersion of '123' when I 
review the attribute I see '1203' this is true for all byte syntax
attributes that are handled generically.

[8/17/94 public]
Added a check to make sure length of data is even length.



CR Number                     : 10375
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : sams file needs cleanup
Reported Date                 : 4/18/94
Found in Baseline             : 1.1
Found Date                    : 4/18/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : cds.sams
Sensitivity                   : public

[4/18/94 public]

There are a number of problems with the cds sams file.  These include
editorial issues as well as insufficient detail for explanations and
recovery.  A full, detailed review has been sent to Bob Cuneo.

[8/3/94 public]
the last drop has been made.



CR Number                     : 10319
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : parent child uid,gid copy got reversed during code cleanup.
Reported Date                 : 4/9/94
Found in Baseline             : 1.1
Found Date                    : 4/9/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/child/clerk_listener.c
Sensitivity                   : public

[4/9/94 public]
In alloc_child the copy of the parent's gid and uid into the child
gid and uid gor reversed during the code cleanup.

[4/9/94 public]
The obvious fix.



CR Number                     : 10309
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : RPC_ClassVersion not documented
Reported Date                 : 4/6/94
Found in Baseline             : 1.0.3
Found Date                    : 4/6/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : command_ref/man8cds/show_directory.8cds command_ref/man8cds/show_replica.8cds
Sensitivity                   : public

[4/6/94 public]

When Show Directory or Show Replica are done using CDSCP, after the SHOW 
DIRECTORY AT lines appears RPC_ClassVersion = 0100.  The DCE Administration
Reference does not show this attribute for either Show Directory or Show
Replica, and the examples of the output do not show this attribute.  Is it 
an error in the code that it displays, or is it an error in the 
documentation that it is not described?

[8/3/94 public]
The attribute should be displayed, it represents the rpc runtime software
version that can be used to import on the directory.  This is done by acl_edit.
the other import attributes are made up on the fly.  I have changed this
to a documentation bug. Since it is old control program stuff I lower it to a 4.

[08/09/94 public]
Assigned to myself.

[08/23/94 public]
Changed priority to "2" and severity to "C".

[09/04/94 public]
Added the RPC_ClassVersion attribute to the list of
attributes and descriptions and to the sample displays
for the following two ref pages:

	command_ref/man8cds/show_directory.8cds
	command_ref/man8cds/show_replica.8cds

Also described the CDS_RingPointer attribute, which showed up 
in the sample display for show_directory.8cds, on both of
these ref pages.

Verified by Howard Melman.

[10/25/94 public]
Closed bug.



CR Number                     : 10301
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : gda
Short Description             : gdad and x500_addcell don't
need -lxti
Reported Date                 : 4/6/94
Found in Baseline             : 1.1
Found Date                    : 4/6/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : directory/cds/gda/Makefile
Sensitivity                   : public

[4/6/94 public]
You don't need -lxti on your LIBS line.  These are the libxti symbols:

t_errno
t_accept
t_alloc
t_bind 
t_close
t_connect
t_error 
t_free
t_listen
t_look
t_open
t_rcv
t_rcvconnect 
t_rcvdis
t_rcvrel
t_snd
t_snddis
t_sndrel
t_sync
t_unbind 
t_getstate 

You don't use any of them.

[6/26/94 public]
fixed in 6/23/94 drop.



CR Number                     : 10292
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : includes
Short Description             : cds.sams has "sub_component" but not "attributes" field
Reported Date                 : 4/5/94
Found in Baseline             : 1.1
Found Date                    : 4/5/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : cds.sams
Sensitivity                   : public

[4/5/94 public]
Error reads
/project/dce/build/dce1.1-snap/src/directory/cds/includes/cds.sams:9823:Have
"sub-component" but not "attributes" field (near "end")
No output generated

[4/5/94 public]
Other "cds" related header files were not in the export includes dir.  Here
are some examples:

In file included from
/u1/devobj/sb/nb_486/export/at386/usr/include/dce/dnsclerk
.h:70, from /project/dce/build/dce1.1-snap/src/rpc/runtime/nsp.h:84, from
/project/dce/build/dce1.1-snap/src/rpc/runtime/nsp.c:61:
/u1/devobj/sb/nb_486/export/at386/usr/include/dce/cdsclerk.h:76:
dce/dcecdsmsg.h
: No such file or directory
*** Error code 1
`export_all_EXPSHLIB' not remade because of errors.
*** Error code 1

/project/dce/build/dce1.1-snap/src/directory/cds/library/library_svc.c:42:
dcecdssvc.h: No such file or directory
*** Error code 1

/project/dce/build/dce1.1-snap/src/directory/cds/library/dnscmpcts.c:43:
dcecdsmac.h: No such file or directory
*** Error code 1

/u1/devobj/sb/nb_486/export/at386/usr/include/dce/cdsclerk.h:76:
dce/dcecdsmsg.h: No such file or directory
In file included from
/project/dce/build/dce1.1-snap/src/directory/cds/cache/cas
ys.c:188:
/usr/include/sys/param.h:621: warning: `MIN' redefined
/u1/devobj/sb/nb_486/export/at386/usr/include/dce/dce.h:43: warning: this
is the location of the previous definition
/usr/include/sys/param.h:622: warning: `MAX' redefined
/u1/devobj/sb/nb_486/export/at386/usr/include/dce/dce.h:47: warning: this
is the location of the previous definition
*** Error code 1

Note: libdce was not generated

[4/5/94 public]
Oh, just one more edit won't hurt...
With everyone waiting to get in their own additions into the file
I obviously missed another compile just to make sure.
The spider mafia is after me for sure.

[6/5/94 public]
This was fixed by Alan Peckham on 4/6/94. I'll have hime update this
ot with the fix while he closes it. Marked as fixed for now.



CR Number                     : 10285
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cdsclerk
Short Description             : cdsclerk dumps core when cdsd starts.
Reported Date                 : 4/4/94
Found in Baseline             : 1.1
Found Date                    : 4/4/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1beta
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/cache/catime.c
Sensitivity                   : public

[4/4/94 public]

Using- BL.6

On an HP only, the following routine makes the cdsclerk dump 
4 core dumps.

1. dce_login as cell_admin
2. cdscp disable server
3. make sure cdsd is gone
4. cdsd

Check for coredumps in
  /opt/dcelocal/var/adm/directory/cds/cdsclerk

You will find in this directory the following core files:
core    core.1  core.2  core.3

At the time, there were 2 cdsclerks running.

[5/26/94 public]
Fixed in 5/25/94 drop:
An outstanding bug on HP is the clerk dropping core four times
while the server starts up. This was caused by unaligned quad
arithmetic used in timestamp generation by cache code.



CR Number                     : 10275
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : cdscp add cellname with no arguments messes up the cell
Reported Date                 : 4/1/94
Found in Baseline             : 1.1b6
Found Date                    : 4/1/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : ./directory/cds/control/cds.cdt
Sensitivity                   : public

[4/1/94 public]

on HPUX:

issued cdscp add cell  without any arguments, which did not flag
an error but managed to cause cdsd to core dump on one occasion and
on another somehow damaged the cell:

cdscp> add cellname
cdscp> show dir /.:

                        SHOW
                   DIRECTORY   /.../fools_cell.osf.org
                          AT   1994-04-01-15:59:58
Error on entity: /.../fools_cell.osf.org
Requested operation would result in lost connectivity to root directory (dce / cds)
Function: dnsEnumAttr

cdscp> add cellname /.../new as alias
Error on entity: /.../new
Requested operation would result in lost connectivity to root directory (dce / cds)
Function:

cdscp>


--------
Here is the stack trace from the core dump:

>t
 0 modify_cell_alias + 0x0000040c (0x40122fd0, 0x40122fcc, 0x40122fcc, 0x40021bec)
 1 TMEM + 0x90b0c000 (0x1a, 0x33, 0x40109fff, 0x40106000)
 2 TMEM + 0x90b0c000 (Address not found (UE302)



CR Number                     : 10219
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : the call to prs should be $PRS
Reported Date                 : 3/23/94
Found in Baseline             : 1.1
Found Date                    : 3/23/94
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/control/Makefile
Sensitivity                   : public

[3/23/94 public]
$(PRS) picks becomes ${DEFTOOLBASE)/prs in the common makefiles. If
prs doesn't in the tools directory some platforms will find a prs
in /bin or /usr/bin which will most assuredly not do the intended
operation. I'll submit a fix for this today.

[3/23/94 public]
Changed call to prs to call to $(PRS)



CR Number                     : 10216
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : directory/cds/control
Short Description             : assorted compile errors
Reported Date                 : 3/23/94
Found in Baseline             : 1.1
Found Date                    : 3/23/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/control/Makefile
Sensitivity                   : public

[3/23/94 public]

[ /directory/cds/control at 05:19 (AM) Wednesday ]

parser_aid mgmt_com_act_decl.h mgmt_com_act_init.h cds.i
make: parser_aid: No such file or directory
*** Error code 1
parser_aid mgmt_com_act_decl.h mgmt_com_act_init.h cds.i
make: parser_aid: No such file or directory
*** Error code 1
cdsprs cds.i
make: cdsprs: No such file or directory
*** Error code 1

[3/23/94 public]

I removed the "(E)" compiler messages since they don't indicate problems
that break anything in the build and the exact meaning of these messages
is not understood.

[3/23/94 public]
I could build parser_aid. It also got built successfully during the nightly
build. It doesn't get put in the tools directory so it wasn't affected
by the other problem. I don't know why the build couldn't find something
it did build. I built cdscp in my sandbox fine.

[3/24/94 public]
It showed up again. I'm going to have to look at this on the build
machine.

[3/24/94 public]
I had a scratch build for threads running on rios wolfboy last night 
and it built found parser_aid and built cdscp just fine.

[3/24/94 public]
changed the invocation of parser_aid from parser_aid back to $(PARSER_AID)
which gets set to ./parser_aid by the common makefiles. I don't think
the common makefiles should have to set a value for this. The PATH set
by build should just include dot but.......



CR Number                     : 10215
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : directory/cds/server
Short Description             : server_hcell_support.c compile errors
Reported Date                 : 3/23/94
Found in Baseline             : 1.1
Found Date                    : 3/23/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/server/server_hcell_support.c
Sensitivity                   : public

[3/23/94 public]

[ /directory/cds/server at 04:35 (AM) Wednesday ]

xlc -c -Dunix -DDNS_CMA -DDNS_CDS -DDNS_V3API -D_ALL_SOURCE -DDCE_SEC \
 -DDNS_DFS -DDEBUG -D_ALL_SOURCE -DAIX32   -I. \
 -I/u1/devobj/sb/nb_rios/src/directory/cds/server \
 -I/project/dce/build/dce1.1-snap/src/directory/cds/server \
 -I../stubs -I/u1/devobj/sb/nb_rios/src/directory/cds/stubs \
 -I/project/dce/build/dce1.1-snap/src/directory/cds/stubs -I../includes \
 -I/u1/devobj/sb/nb_rios/src/directory/cds/includes \
 -I/project/dce/build/dce1.1-snap/src/directory/cds/includes \
 -I/u1/devobj/sb/nb_rios/export/rios/usr/include \
 -I/project/dce/build/dce1.1-snap/export/rios/usr/include \
 /project/dce/build/dce1.1-snap/src/directory/cds/server/server_hcell_support.c

"/project/dce/build/dce1.1-snap/\
 src/directory/cds/server/server_hcell_support.c", line 812.33: 1506-068 (S) \
 Operation between types integer and pointer to  void is not allowed.
"/project/dce/build/dce1.1-snap/\
 src/directory/cds/server/server_hcell_support.c", line 821.29: 1506-068 (S) \
 Operation between types integer and pointer to void is not allowed.
"/project/dce/build/dce1.1-snap/\
 src/directory/cds/server/server_hcell_support.c", line 831.21: 1506-068 (S) \
 Operation between types integer and pointer to void is not allowed.
"/project/dce/build/dce1.1-snap/\
 src/directory/cds/server/server_hcell_support.c", line 943.33: 1506-068 (S) \
 Operation between types long unsigned and pointer to void is not allowed.
*** Error code 1

[3/23/94 public]
Changed four NULL's to 0. NULL is void * on the RIOS and can't be
compared against an int.



CR Number                     : 10212
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : prs not created breaking dtscp build
Reported Date                 : 3/23/94
Found in Baseline             : 1.1
Found Date                    : 3/23/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/control/Makefile
Sensitivity                   : public

[3/23/94 public]
The cdsprs back to prs change was overwritten by the H-cell drop.

[3/23/94 public]
cdsprs -> prs.

[3/23/94 public]
Silly me. It now builds prs correctky but doesn;t put it in the tools
directory. Apparently the SETUP_PROGRAMS line was dropped from the 
Makefile as well. I've put it back and runt the setup pass with 
DEFTOOLBASE pointing to my sandbox tools directory. It now  installs 
prs in the tools directory and dtscp builds. I'll diff the Makefile
with old version before clearing this however.

[3/23/94 public]
Don't see anything else amiss.



CR Number                     : 10196
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : bl3 of hcells
Reported Date                 : 3/21/94
Found in Baseline             : 1.1b04
Found Date                    : 3/21/94
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : server/*
Sensitivity                   : public

[3/21/94 public]
Bl3 of cell alias/hcells:



CR Number                     : 10193
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : The generated values of
DNS_ERROR and CDS_ERROR are wrong.
Reported Date                 : 3/21/94
Found in Baseline             : 1.1
Found Date                    : 3/21/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : includes/cds.sams
Sensitivity                   : public

[3/21/94 public]
The values generated for DNS_ERROR and CDS_ERROR are different and both
differ from pre-drop values. I made this an A0 because this will in all
likelyhood not work with pre cleanup drop code. The fix is known, simple
and will be done today so that it will get in the baseline for tomorrow.

[5/6/94 public]
This has been fixed. I'll let Alan Peckham update this ot with the
fix specifics before we close ot. Marked as fix until then.



CR Number                     : 10171
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp define cached server
Short Description             : cdscp define cached server hangs
Reported Date                 : 3/17/94
Found in Baseline             : 1.1
Found Date                    : 3/17/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/adver/adver_cds_event.c
Sensitivity                   : public

[03/17/94 public]

The command "cdscp define cached server west tower ncadg_ip_udp:<IP_ADDRESS>"
hangs when trying to configure a CDS client on one subnet to a CDS Server
on a different subnet.  My HP-UX CDS server is on subnet 201 and my AIX CDS
client is on subnet 202.  I also tried the the opposite configuration and
cdscp define cached server hung.  A CDS client on the same subnet, using
broadcasts, works fine.  I tried:

  HP-UX CDS SERVER on subnet 201 with HP-UX CDS CLIENT on subnet 5 = HANG
  HP-UX CDS SERVER on subnet 201 with AIX CDS CLIENT on subnet 202 = HANG
  HP-UX CDS SERVER on subnet 201 with OSF/1 CDS CLIENT on subnet 201 = OK
  HP-UX CDS SERVER on subnet 201 with OSF/1 CDS CLIENT on subnet 5 = HANG
  AIX CDS SERVER on subnet 202 with OSF/1 CDS CLIENT on subnet 201 = HANG
  AIX CDS SERVER on subnet 202 with HP-UX CDS CLIENT on subnet 201 = HANG

The cdsadv on the CDS Server is dumping core, it appears as though the cdscp
define cached server command on the client is just a victim.

[3/18/94 public]
I'm  working this to get more information. When I do I'll get DEC
involved.

[3/18/94 public]
As a note. This doesn't occurr all the time. Rajendra configured
an hp client from subnet 4 to an hp server on subnet 5 yesterday.
Investigating.....

[3/18/94 public]
What I have so far is the cdsadv is seg faulting on the server side
while attempting to execute address 0 during the cdscp define cache
server from the client. I generated deb$ logs at level 9 on both 
machines and did some processing to reduce the date. THe result
is some compressed files out in out on afs in directory
/afs/dce/project/dce/osf/jd.

The names....

client.*.debug  from client log
server.*.debug  fromserver log
*.clerk.debug   clerk entries grep'd from log
*.clerk.lib.debug library entries for all clerk PID# grep'd from log
etc....

The sever was an HP and the client a 486.

I'm building debug versions of the library, clerk and adver on both the
486 and the hp. In the mean time could someone at DEC look at the 
logs.....

[3/19/94 public]

Paul Ellis was seeing define cache server hang and while configuring
a client with a server on another subnet. Investigation showed
that cdsadv on the server was crashing with a seg fault. I turned
on serviceability debgging and found that the one of the cds
functions that processes a string for serviceability was causing
the advertiser to crash at just about the place that Paul was seeing
the problem. cds_SolicitService_s was printing out its cellname
argument on input when this argument and the uuid that it was also
printing are output only arguments. On input the fnlength field
of the cell name could be arbitrarily large causing deb_ascii_cds_Fillname
to crash while doing the memcpy of the name. The problem here is that
this change only affects a call to serviceability with debug level
2 or greater. However, I can't make the problem happen with or without
debug after installing a fix. I can see the problem without
debug but with other serviceability levels turned on without the change.
At any rate this change won't break anything else so I'll submit it
and look further on Monday. If the problem goes completly away I'll
be puzzled. I'm also dropping the priority.

[3/19/94 public]
If DEBUG is turned on the DCE_SVC_DEBUG macro expands to a call to
dce_svc_debg regardless of servicability level and the arguments
therefore get parsed with the resulultant fatal call to the deb_ascii....
routine. The fix I made will in fact fix the problem. I'm marking it
as fixed pending testing Monday

[03/24/94 public]
Fixed in bl5.



CR Number                     : 10159
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : admin_gd
Short Description             : description on how to backup a
clearinghouse needs to be rewritten (or improved).
Reported Date                 : 3/16/94
Found in Baseline             : 1.1
Found Date                    : 3/16/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : admin_gd/directory/cds/7_cds_clerkservch.gpsml
Sensitivity                   : public

[3/16/94 public]

In Chapter 8 of the administration guide, section 8.7 describes the
proper way to backup the CDS files when doing a OS upgrade. 
This section lacks completeness and clarity. There are considerations 
and steps that the user (reader) needs to be aware of and have been
left out or not properly referenced.

Missing considerations:

1. Preserving a clearinghouse across DCE upgrades. In this case,
   is the procedure to preserve a clearinghouse the same as when
   doing an OS upgrade? 

2. What happens to the name space (CDS server and clerk) while the
   the backup is being performed?  The CDS server and clerk must be 
   disable. Here, the term disable means that cdsd is stopped, 
   and subsequently all requests to CDS will fail. The user should 
   be made aware of the fact that CDS cannot be placed in maintenance 
   mode. 

3. If the cell happens to have only one cdsd - one clearinghouse,
   the cell principals will experience operational difficulties
   while the CDS servers are down. If one is doing a backup and
   restore of a large namespace, this could take a long time.

4. What are additional considerations a DCE administrator should
   keep in mind when backing up the cell CDS namespace as suppossed 
   to just a clearinghouse?

5. Where is the restore procedure defined? Are there required 
   steps the administrator should follow before and after 
   restoring the cell master clearinghouse? 

Missing steps:

. Step 1. should be disable clerk and server.

. additional steps should be added if one needs to backup more
  that one clearignhouse or a cell CDS namespace.

. how to restore a clearinghouse after having upgraded the OS and/or
  DCE.

Sections 8.8.1 and 8.8.2 should also be revised. These sections are too
general.

[3/24/94 public]

Assigned this CR to Ron Johnson (DEC's DCE 1.1 writer).

[10/25/94 public]
Closed bug.



CR Number                     : 10157
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : control Makefile has two $Logs$
Reported Date                 : 3/16/94
Found in Baseline             : 1.1
Found Date                    : 3/16/94
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/control/Makefile
Sensitivity                   : public

[3/16/94 public]
There are two <DOLLAR>Log<DOLLAR> in the Makefile so that all entries are
listed twice.

[3/16/94 public]
hey if you put the log keyword in here RCS will expand it!  Change the $'s
in the above note to <DOLLAR> so OT's RCS doesn't get confused.



CR Number                     : 10150
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : directory/cds/control
Short Description             : parser_aid_2.c pointer/int op
Reported Date                 : 3/16/94
Found in Baseline             : 1.1
Found Date                    : 3/16/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
directory/control/parser_adid_2.c
directory/adver/Makefile
directory/library/tower_lib.c
directory/gda/gda_bind.c
directory/gda/x500_utils.c
directory/includes/dtssdef.h
Sensitivity                   : public

[3/16/94 public]

xlc -c -Dunix -DDNS_CMA -DDNS_CDS -DDNS_V3API -D_ALL_SOURCE -DDCE_SEC -DD \
  NS_DFS -DDEBUG -D_ALL_SOURCE -DAIX32 -I. \
  -I/u1/devobj/sb/nb_rios/src/directory/cds/control \
  -I/project/dce/build/dce1.1-snap/src/directory/cds/control \
  -I../stubs -I/u1/devobj/sb/nb_rios/src/directory/cds/stubs \
  -I/project/dce/build/dce1.1-snap/src/directory/cds/stubs -I../includes \
  -I/u1/devobj/sb/nb_rios/src/directory/cds/includes \
  -I/project/dce/build/dce1.1-snap/src/directory/cds/includes \
  -I/u1/devobj/sb/nb_rios/export/rios/usr/include \
  -I/project/dce/build/dce1.1-snap/export/rios/usr/include \
  /project/dce/build/dce1.1-snap/src/directory/cds/control/parser_aid_2.c
"/project/dce/build/dce1.1-snap/src/directory/cds/control/parser_aid_2.c", \
  line 142.12: 1506-068 (S) Operation between types pointer and integer is \
  not allowed.
"/project/dce/build/dce1.1-snap/src/directory/cds/control/parser_aid_2.c", \
  line is not allowed.
*** Error code 1

[3/1694  public]
Fixed several minor compile problems.

[3/17/94 public]
smoked against 3/16.



CR Number                     : 10149
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test/directory/cds/dcesx
Short Description             : cdstest.c can't find rpc.h
Reported Date                 : 3/16/94
Found in Baseline             : 1.1
Found Date                    : 3/16/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : cdstest.c
Sensitivity                   : public

[3/16/94 public]

[ /test/directory/cds/dcesx ]

c89 -c    -D_SHARED_LIBRARIES   -Dunix -DDEBUG -DDNS_RPC -DDNS_V3API \
  -DDNS_CDS -DDCE_SEC -DDNS_CMA -D__hppa -Dhp9000s800 -Dhp9000s700 \
  -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE\
  -I. -I/u3/devobj/sb/nb_ux/src/test/directory/cds \
  -I/project/dce/build/dce1.1-snap/src/test/directory/cds \
  -I../../../directory/cds/includes \
  -I/u3/devobj/sb/nb_ux/src/directory/cds/includes \
  -I/project/dce/build/dce1.1-snap/src/directory/cds/includes \
  -I/u3/devobj/sb/nb_ux/export/hp800/usr/include \
  -I/project/dce/build/dce1.1-snap/export/hp800/usr/include \
  /project/dce/build/dce1.1-snap/src/test/directory/cds/cdstest.c
param.h: 391: warning- Redefinition of macro MIN.
param.h: 392: warning- Redefinition of macro MAX.
cdstest.c: 108: Unable to find include file 'rpc.h'.
*** Error code 1

[3/17/94 public]
include <rpc.h> -> include <dce/rpc.h>



CR Number                     : 10139
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : directory/cds/gda
Short Description             : cannot find library for -lxds
Reported Date                 : 3/15/94
Found in Baseline             : 1.1
Found Date                    : 3/15/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/gda/Makefile
Sensitivity                   : public

[3/15/94 public]

The errors below may be caused by CDS bugs already logged in earlier OTs,
but for the sake of completeness, I'm filing this OT:

[ /directory/cds/gda ]

Creating include file /tmp/rdaclifv0.h
Creating stub module rdaclifv0_sstub.c
rm -f /tmp/rdaclifv0.h
c89 -L../stubs  -z -Wl,-Bimmediate,-Bnonfatal,-a,default,+b,/lib:/usr/lib \
  -L/u3/devobj/sb/nb_ux/export/hp800/usr/shlib \
  -L/project/dce/build/dce1.1-snap/export/hp800/usr/shlib -L/usr/shlib \
  -L/u3/devobj/sb/nb_ux/export/hp800/usr/lib \
  -L/project/dce/build/dce1.1-snap/export/hp800/usr/lib -o x500_addcell.X \
  x500_addcell.o gda_cell.o x500_utils.o dcecdssvc.o dcecdsmsg.o -ldce -ldbm \
  -lM -lxds -losak -lxti -ldceutils
/bin/ld: Can't find library for -lxds
*** Error code 1

....

c89     -L../stubs  -z -Wl,-Bimmediate,-Bnonfatal,-a,default,+b,/lib:/usr/lib \
  -L/u3/devobj/sb/nb_ux/export/hp800/usr/shlib \
  -L/project/dce/build/dce1.1-snap/export/hp800/usr/shlib -L/usr/shlib \
  -L/u3/devobj/sb/nb_ux/export/hp800/usr/lib \
  -L/project/dce/build/dce1.1-snap/export/hp800/usr/lib -o x500_addcell.X \
  x500_addcell.o gda_cell.o x500_utils.o  dcecdssvc.o dcecdsmsg.o -ldce -ldbm \
  -lM -lxds -losak -lxti -ldceutils
/bin/ld: Can't find library for -lxds
*** Error code 1

[3/15/94 public]
Removed -lxds from load line.

[3/17/94 public]
smoked against 3/16.



CR Number                     : 10137
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : directory/cds/gda
Short Description             : compile errors in x500_utils.c
Reported Date                 : 3/15/94
Found in Baseline             : 1.1
Found Date                    : 3/15/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/gda/x500_utils.c
Sensitivity                   : public

[3/15/94 public]

[ /directory/cds/gda]

"/project/dce/build/dce1.1-snap/src/directory/cds/gda/x500_utils.c", line \
  161.22: 1506-068 (S) Operation between types char and pointer to void is \
  not allowed.
"/project/dce/build/dce1.1-snap/src/directory/cds/gda/x500_utils.c", line \
  203.6: 1506-056 (S) Break statement cannot be placed outside a while, do, \
  for, or switch statement.
"/project/dce/build/dce1.1-snap/src/directory/cds/gda/x500_utils.c", line \
  211.31: 1506-068 (S) Operation between types char and pointer to void is \
  not allowed.
*** Error code 1

[3/16/94 public]
Fixed compile problem.

[3/17/94 public]
smoked against 3/16.



CR Number                     : 10135
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/library
Short Description             : Makefile could not find machdep.mk
Reported Date                 : 3/15/94
Found in Baseline             : 1.1
Found Date                    : 3/15/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : cds/library/Makefile
Sensitivity                   : public

[3/15/94 public]

"directory/cds/library" failed because it couldn't find "machdep.mk"
which in turn caused the build of "libdced.a" and thus "libdce.a" to
fail on the RIOS. 

[ /directory/cds/library at 20:25 (PM) Monday ]

makepath library/. && cd library &&  exec make MAKEFILE_PASS=FIRST build_all
library: created directory
"/project/dce/build/dce1.1-snap/src/directory/cds/library/Makefile", line 270:
  Could not find RIOS/machdep.mk
Fatal errors encountered -- cannot continue
*** Error code 1

[ /libdce ]

cd ../../../../obj/rios/directory/cds/library
"/project/dce/build/dce1.1-snap/src/directory/cds/library/Makefile", line
270: \
Could not find RIOS/machdep.mk
Fatal errors encountered -- cannot continue
*** Error code 1
....
make: don't know how to make libdced.a (continuing)
`build_all' not remade because of errors.
*** Error code 1

[3/15/94 public]

The failure of the Makefile to find "machdep.mk" was caused by the fact
that square brackets do not work on the RIOS which still must use double
quotes.

[3/15/94 public]
The rios for some reason won;t take the angle bracket syntax on .includes.
Replaced the angle brackets with double quotes.

[3/17/94 public]
smoked against 3/16.



CR Number                     : 10133
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : cds/control/Makefile failed
					     causing cdscp to fail
Reported Date                 : 3/15/94
Found in Baseline             : 1.1
Found Date                    : 3/15/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/control/Makefile
Sensitivity                   : public

[3/15/94 public]

cdscp failed to build because the "cds/control/Makefile" failed.  Eg, HP: 

[ /directory/cds/control at 22:16 (PM) Monday ]

cp: cds.c: No such file or directory
*** Error code 1
make: /u3/devobj/sb/nb_ux/tools/hp800/bin/prs: No such file or directory
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1

[3/15/94 public]

Corrected affected platforms to "all."

[03/15/94  public]
Removed redundant rule for build of cds.i.

[3/17/94 public]
smoked against 3/16.



CR Number                     : 10130
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : directory/cds/includes
Short Description             : cds.sams breaks libdce build
Reported Date                 : 3/14/94
Found in Baseline             : 1.1
Found Date                    : 3/14/94
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/includes/Makefile
                                             directory/cds/adver/Makefile
                                             directory/cds/child/Makefile
                                             directory/cds/gds/Makefile
                                             directory/cds/libdce/Makefile
Sensitivity                   : public

[3/14/94 public]

A compile-time error in "directory/cds/includes/cds.sams" breaks
build of "directory/cds/includes" and the buid of libdce.  Here
are sample error messages:

[ /directory/cds/includes ]

/project/dce/build/dce1.1-snap/src/directory/cds/includes/cds.sams:2706: \
  Missing | in <a|b> construct (near "end")
/project/dce/build/dce1.1-snap/src/directory/cds/includes/cds.sams:2713: \
  Missing | in <a|b> construct (near "end")
/project/dce/build/dce1.1-snap/src/directory/cds/includes/cds.sams:2713: \
  Missing | in <a|b> construct (near "end")
No output generated.
*** Error code 1

This error is similar to one seen in a "gds.sams" submission last Thursday.
For its diagnosis and fix please see OTs 10122 and 9687.

[3/14/94 public]

Added component champion to interest list.

[03/15/94 public]
Added -f option to sams invocation



CR Number                     : 10088
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : cdsadv dies when cdsd comes up on a multi-home machine with more than 5 network interfaces.
Reported Date                 : 3/8/94
Found in Baseline             : 1.0.2
Found Date                    : 3/8/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : ./directory/cds/adver/adver_cds_event.c
Sensitivity                   : public

[3/8/94 public]

On a multi-homed machine with more than 5 network interfaces cdsadv aborts
when cdsd comes up. Here is a stack trace of the core dump:

debug> stack
Stack Trace for p1, Program cdsadv

[_kill()     [0x1803db34]

[cma__abort_process()        [0x18210388]

[exc_raise() [0x181fdf20]

[exc_pop_ctx()       [0x181fe0e8]

[cds_SendAdvertisements()    [adver_clerk_event.c@4135]

[dnsAdvertise(eblkptr=0x4d7c20)      [adver_clerk_event.c@2374]

[ProcessEvent()      [0x406044]

[main()      [0x405e5c]

[__start()   [0x405708]

Further exploration established that the exception is raised by the RPC
runtime in the cds_Advertise call in cds_SendAdvertisements
(adver/adver_clerk_event.c).

Note however that when cdsd is brought up on a machine with 6 network
interfaces and with the environment var RPC_USE_PROTSEQS set to
ncadg_ip_udp the advertiser does not die. This along with the fact that the
problem is clearly related to the number of interfaces on the host seems to
indicate a problem with the size of the tower set that cdsd sends to cdsadv
along with other clearinghouse information for advertisement (since when we
restrict the protocol sequences the length of the tower set is essentially
halved).

While investigating this problem I noticed that the size of an
advertisement msg seems arbitrarily set to 1479 (MsgMax = 1492 - 1 - 12 in
includes/dnsadverdef.h). This is not the cause of this problem on a host
with 6 network interfaces where I observed the size of the message to be
less than that (and where upping that size did not make the problem go
away) but it is definitely a problem on a host with more than 6 network
interfaces.

Even though this problem occurs on a non reference platform and I am not
able to verify that this problem occurs in post 1.0.2 DCE I do think that
it deserves immediate attention because of the unusual testing
configuration (i.e. > 5 network interfaces). This makes it very likely that
the problem has not been observed on a reference platform and against the
current code base because DCE has not been tested on such configurations.

[3/8/94 public]

The failure comes from rpc__dg_call_transmit_int routine which returns the
error status rpc_s_in_args_too_big. The problem is that a broadcast request
must fit in one PDU which is less than or equal to 1024 - 80 = 944 for dg.
In the case of cdsd running on the host with 6 network interfaces the size
of the rp_towers alone was 926. Adding to this the size of the other fields
of the structure cds_ReplicatPointer_t and the other parameters to
cds_Advertise obviously gets us above the PDU size limit.

I am raising the priority to 0 because a fix to this problem will require
some very careful consideration to maintain backward compatibility (since
the only fixes I can see -- eventhough I'm no CDS expert -- seem to involve
protocol changes).

[3/11/94 public]
Assigned to Janet Mccan.

[3/11/94 public]
OK, I'm downgradeing this to a 1. We need to fix the core dump
problem and we might give more thought to how to handle the deeper problem
but the bottom line is this is just a limitation of broadcast. You
have the same problem if your server and clients are on opposite
sides of a gateway. The clients won't see the broadcast and will have
to do a define cached server. Again the advertizer in this case should 
do something other than dump core. We'll fix that.

[3/11/94]

The problem with this solution is that it breaks the user model: it is no
longer because a host can not broadcast to a server that one needs to do a
"define cached server" but because the host on which cdsd is running can't
advertise because it has 6 or more network interfaces! Can you say ugly?
;) I can! I also can see that this issue has two parts: the core dump
problem and the underlying protocol problem. I suggest that we do not give
up (yet) trying to solve the second problem.

[7/8/94 public]
An rpc_s_in_args_too_big exception needed to be caught to solve the crash.
John said this would be adaquate to close this CR. I left a hook in
to address the enhancement part of this report, which is to remove
towers until the broadcast does fit (e.g. remove tcp when udp will do).
All you need is one hit on the clearinghouse to replace this tower
subset with the full set returned by a clerk call to the server.



CR Number                     : 10051
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : Bugs in "add directory" subcommand
Reported Date                 : 3/2/94
Found in Baseline             : 1.1b3
Found Date                    : 3/2/94
Severity                      : A
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : control/attrname_actions_cds.c
Sensitivity                   : public

[3/2/94 public]
I have bl-3 running on my machine (lobster).  When I type
"cdscp add directory /.:/foo Tower=ncacn_ip_tcp:12.34.56.78[]"
from a shell prompt (where /.:/foo is non-existent),
then all I get is a cdscp> prompt.
On the other hand, if I'm in cdscp and I type
"add directory /.:/foo Tower=ncacn_ip_tcp:12.34.56.78[]",
then I get a Memory fault (coredump).

[9/14/94 public]
I was looking for this.  Fixed this week.



CR Number                     : 10016
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : gda_child
Short Description             : gda_child needs no longer to be a seperate process
Reported Date                 : 2/25/94
Found in Baseline             : 1.1
Found Date                    : 2/25/94
Severity                      : B
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : x500parent.c
Sensitivity                   : public

[2/25/94 public]
Because the XDS library is thread-safe in the actual DCE Version,
it is not longer necessary that the gda_child is a seperate process.
The gda_child can be linked to the gda daemon as one process.
This is not a bug , but a better architecture.

[3/14/94 public]
Changing this enhancement request to CDS.  Despite gda_child being built
out of directory/gds/gda this is a CDS issue because the point of the
enhancement is to merge the gda_child code into gdad (in
directory/cds/gda).

One probable outcome of this is moving the directory/gds/gda code to
directory/cds/gda.

[5/18/94]
We added XDS calls directory to the gda.  This was in first code cleanup drop.

[05/24/94 public]
Does this mean that you don't need the gda_child process anymore? If yes:
I will outdate all in gds/gda. I really would like to do this.
Have you tested intercell stuff with gda?



CR Number                     : 10002
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test/directory/cds/dcesx
Short Description             : cannot "build_all", possibly because of other test build failures resulting from inability to find "dce/std.h"
Reported Date                 : 2/23/94
Found in Baseline             : 1.1
Found Date                    : 2/23/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : test/tet/src/dtet/tcm/Makefile,
test/directory/cds/dcesx/Makefile
Sensitivity                   : public

[2/23/94 public]

Broken out from OT 9998 (please see its updated description):

The following modules complained "'build_all' not remade because of errors":

[ /test/tet/src/dtet/tcm at 22:58 (PM) Tuesday ]
[ /test/directory/cds/dcesx at 23:40 (PM) Tuesday ]

The problem may be related to the failure of other test modules to find
the include file "dce/std.h".

[2/23/94 public]

Corrected a module name in full description - had GDS, should have been
CDS, directory.

[2/23/94 public]
We can't seem to make this failure happen in a sandbox backed by 
dce1.1. It could be a side affect of the gds. We're going to let
it go again tonight. Niether of these will affect core functionality
if it fails again. Downgrading it to a 1 until we see if it breaks again.

[2/23/94 public]

I'm adding one more module that was in the GDS OT 9998.  The only complaint
is as above, "'build_all' not remade because of errors'":

[ test/tet/src/dtet/xresd at 23:51 (PM) Tuesday ]

[03/07/94 public]
Closed



CR Number                     : 9929
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : IDL files
Short Description             : Need fault_status comm_status
Reported Date                 : 2/10/94
Found in Baseline             : 1.1
Found Date                    : 2/10/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : none
Sensitivity                   : public

[2/10/94 public]
All IDL files that are part of libdce should be compiled with ACF files
that have the [fault_status,comm_status] attributes.  Without this, a
failing RPC could cause client code to core dump when there is a perfectly
good error_status_t parameter available.  When adding the ACF files, it is
important to make sure that no API changes.  As most routines probably
already have an "error_status_t *st" parameter this will probably not be
an issue; routines that don't will have to be handled on a case-by-case,
probably by adding a new routine that DOES have the status param and
changing our existing code to call that routine.

[6/13/94 public]
As far as I can see, all CDS .idl that contain calls have .acf files with the proper
attributes.



CR Number                     : 9865
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : cprpcp.h needs to be exported,
and to prefix the include of cprpc.h with "dce/"
Reported Date                 : 1/31/94
Found in Baseline             : 1.1
Found Date                    : 1/31/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/includes/Makefile
                                                                   /cprpcp.h
Sensitivity                   : public

[1/31/94 public]
The Makefile for directory/cds/includes should be changed to export
cprpcp.h. It is needed for dcecp. The reference in cprpcp.h to cprpc.h
needs to be prefixed with "dce/".

I will make these changes if nobody has any problems with it.

[2/3/94 public]
The changes listed above were submitted and built on three platforms.



CR Number                     : 9864
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : cprpc.idl needs to be
exported, and "import" changed in cprpc_clerk.idl and cprpc_server.idl.
Reported Date                 : 1/31/94
Found in Baseline             : 1.1
Found Date                    : 1/31/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : src/directory/stubs/Makefile
                                                                /cprpc_clerk.idl
                                                                /cprpc_server.idl
Sensitivity                   : public

[1/31/94 public]
dcecp needs to include cprpc_clerk.h and cprpc_server.h. These idl
generated header files include cprpc.h (via "import" in the idl file). 
This causes cprpc_*.h to fail trying to find cprpc.h. cprpc.idl needs to be
exported to usr/include/dce, and cprpc_clerk.idl and cprpc_server.idl need
to be changed to prefix the reference to cprpc.idl with dce/ .

I will do the work for these changes if the powers that be do not see any
problem with them.

[2/3/94 public]
The changes listed above were submitted and built on 3 platforms.



CR Number                     : 9857
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : cdscp / NLSPATH
Short Description             : cdscp fails on OSF/1 when NLSPATH is defined
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : mgmt_main.c
Sensitivity                   : public

[01/28/94 public]

On OSF/1, I cannot execute any cdscp command line functions if NLSPATH is
defined.  If I try to execute a cdscp command line function I just drop
into cdscp:

root@tahiti> echo $NLSPATH
/usr/lib/nls/%L/%N
root@tahiti> cdscp show cell /.:
cdscp> 
cdscp> quit
root@tahiti> unset NLSPATH
root@tahiti> cdscp show cell /.:
                        SHOW
                        CELL   /.../west_cell.qadce.osf.org
                          AT   1994-01-28-18:01:21
              Namespace Uuid = 0d7add36-1c1a-11cd-9bc7-080009257d69
          Clearinghouse Uuid = 0b3f2c8e-1c1a-11cd-9bc7-080009257d69
          Clearinghouse Name = /.../west_cell.qadce.osf.org/west_ch
                Replica Type =   Master  
                       Tower = ncacn_ip_tcp:130.105.201.10[]
                       Tower = ncadg_ip_udp:130.105.201.10[]
root@tahiti> export NLSPATH=/usr/lib/nls/%L/%N
root@tahiti> cdscp show cell /.:
cdscp> 
cdscp> quit
root@tahiti> cdscp show cell /.:
cdscp> show cell /.:
                        SHOW
                        CELL   /.../west_cell.qadce.osf.org
                          AT   1994-01-28-18:02:00
              Namespace Uuid = 0d7add36-1c1a-11cd-9bc7-080009257d69
          Clearinghouse Uuid = 0b3f2c8e-1c1a-11cd-9bc7-080009257d69
          Clearinghouse Name = /.../west_cell.qadce.osf.org/west_ch
                Replica Type =   Master  
                       Tower = ncacn_ip_tcp:130.105.201.10[]
                       Tower = ncadg_ip_udp:130.105.201.10[]
cdscp> quit
root@tahiti>

[04/29/94 public]
Note: Paul had set his NLSPATH incorrectly for OSF/1.
It should have been '/usr/lib/nls/msg/%L/%N'.

However, there is still a huge bug here in that cdscp drops you
in to interactive mode if it can't find its message catalog.

1. CDS programs should not depend on message catalogs.
   Please see my comments in OT #9640 about how this must be fixed (and soon!).
   The quick summary is cdscp (and all cds programs) must register their
   default message table with the serviceability library on startup.

2. Just because it couldn't find its message catalog, it shouldn't drop
   you in to interactive mode.

[6/13/94 public]
fixed in drop last week



CR Number                     : 9836
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : missing dce component in includes
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : directory/cds/includes/dns_record.h
					     directory/cds/includes/uc_child.h
					     directory/cds/includes/tower.h
					     directory/cds/ilibrary/tower_lib.c
Sensitivity                   : public

[1/28/94 public]
The dns_record.h must include <dce/cds_types.h> and not <cds_types.h> .
In uc_child.h it must be <dce/cds_clerkserver.h> .

[1/28/94 public]
Sorry. Found more:
tower.h :	should use #include <dce/cds_clerkserver.h>
tower_lib.c :	should use #include <dce/cds_clerkserver.h>

[1/28/93 publib]
I don't know why this was made a priority 0. This will presumably be fixed 
by code cleanup. Changed to B1.

[2/3/94 public]
Submitted the change to directory/cds/includes/dns_record.h because dcecp
needed this fix to build. The other files were not changed.

[8/24/94 public]
All of the requested changes have been made along the way. Closing.



CR Number                     : 9813
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : 
Short Description             : cds may core dump in cache routines if DCE_SEC is not defined
Reported Date                 : 1/25/94
Found in Baseline             : 1.0.3
Found Date                    : 1/25/94
Severity                      : A
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/cache/causer.c
Sensitivity                   : public

[1/25/94 public]

In the module directory/cds/cache/causer.c in the functions 
CAInsertUser() and CALookupUser() the following code is only done
if DCE_SEC is defined:

  if (user_p == NULL)   /* unauthenticated access */
      user_p = nouser;

but it is needed even if DCE_SEC is not defined.  Routines like
CAHAshUser() don't like a null pointer.

[6/8/94 public]
Pull out conditionals and set right default null pointer.



CR Number                     : 9806
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : cdscp core dumps when input contains a control char
Reported Date                 : 1/24/94
Found in Baseline             : 1.0.3
Found Date                    : 1/24/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : control/accum_cmd.c
Sensitivity                   : public

[1/24/94 public]

If I type the following at the cdscp prompt:

	show murks <CTRL-R><RETURN>

(note:  there is one blank between "murks" and <CTRL-R>) I get a
core dump.

The reason for this is in directory/cds/control/accum_cmd.c in the
case statement for 'CTL:'.  If the input buffer contains a 
control character, one blank is stored to the output buffer, but the
input pointer is not advanced beyond the control character, which 
repeats endlessly, thus causing a core dump.

[6/15/94 public]
fixed in previous code cleanup drops.



CR Number                     : 9789
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds ACLs
Short Description             : incorrect acl manager returned
Reported Date                 : 1/20/94
Found in Baseline             : 1.0.1
Found Date                    : 1/20/94
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : cds_dacl.c,ta_create.c
Sensitivity                   : public

[1/20/94 public]

The acl manager type provided in the acl structure returned by
the sec_acl_lookup call returns the incorrect acl manager when
bind_to_entry is true.

I have the following code stream:

    /*
     * bind to the acl object
     */
    sec_acl_bind (acl_r->object.name, acl_r->is_entry, &acl_handle, status);
    if (*status != error_status_ok)
    {
        return;
    }

    /*
     * get a manager type protecting this object
     */
   sec_acl_get_manager_types (acl_handle, acl_r->acl_type, 1,
        &size_used, &num_types, &manager_type, status);
    if (*status != error_status_ok)
    {
        dom__acl_close (acl_handle, sec_acl);
        return;
    }

    /*
     * retrieve the list of acl information
     */
    sec_acl_lookup (acl_handle, &manager_type,
        acl_r->acl_type, &sec_acl_list, status);
    if (*status != error_status_ok)
    {
        dom__acl_close (acl_handle, sec_acl);
        return;
    }

    sec_acl = sec_acl_list.sec_acls[0];
    acl_r->default_realm = sec_acl->default_realm;
    acl_r->manager_type = sec_acl->sec_acl_manager_type;
              
When bind_to_entry is false, both variables manager_type and 
sec_acl->sec_acl_manager_type are identical as one would expect.
However, when bind_to_entry is true, the variable manager_type
as suspected is the cds acl manager uuid, while the uuid returned in 
sec_acl->sec_acl_manager_type is something different.
It matches the uuid returned when bind_to_entry is false - the rpc objects
acl manager uuid, presumably.

This bug was discovered due to the fact that I save the acl manager type 
returned in the acl.  And when later
doing edits on that same entry, I received the invalid acl manager error.

The workaround is simple enough, save the uuid that gets returned on the 
acl_get_manager_types, however, it is still a bug.

[5/3/94 public]
Having just had time to look through some OT CRs, I noticed this one for
the first time...  The sec_acl api does not fill in this information, as the
CR originally stated.  The ACL manager (in this case, cdsd's ACL manager) is
passing back the information, so if that information is wrong, then it is a bug
in the CDS ACL manager.  Reassigned to cds.

[8/29/94 public]
We have fixed this for directories of version 4.0 or greater.  WE
cannot do anything about 3.0 directories cause servers expect what
it is doing here.



CR Number                     : 9765
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : clerk
Short Description             : cds client better disaster recovery.
Reported Date                 : 1/18/94
Found in Baseline             : 1.0.3
Found Date                    : 1/18/94
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : ./directory/cds/adver/adver_cache.c
					./directory/cds/adver/adver_cds_event.c
					./directory/cds/cache/Makefile
					./directory/cds/cache/cacle.c
					./directory/cds/cache/casrv.c
					./directory/cds/cache/casys.c
					./directory/cds/includes/cache.h
					./directory/cds/includes/dns_strings.h
Sensitivity                   : public

[1/18/94 public]

My rios took a power hit last night, which means that DCE did not
get shutdown gracefully.  So upon reboot, I ran dce.clean
to clean out the old dce cruft.  This machine is a security
server and a cds client.  After running rc.dce, sec and cds
appear to restart correctly.   However, dts gets errors because
it can't find /.:/hosts/<hostsname>/dts-entity in the cds
namespace. I shutdown dce with dce.clean, and tried removing
the clerk cache, and restarted dce.  Still the same problem
Infact cdscp show dir /.: does not ever work (entity not found).
So apparently, rc.dce or dce.clean is not removing something
or we need to sanity check something else besides the clerk
cache.  What ever it is cds is not telling me what's wrong.
The workaround for this is to re-configure, which is UNACCEPTABLE.

DCE should be able to recover after a powerfail, or at least we
should have adqueate mechanisms in place to ensure that we
have a good chance of recovery after such disasters.

So I'd like to see:
   cds clerk print some error message to the console or user's terminal
   if it can't start properly.

   Better error checking and recovery mechanisms to increase the chances
   that we can recover from such disasters. 

   Someone determine if there is something else which rc.dce and
   dce.clean need to check and/or remove in the cds config process.



Here's the out put from the session in case anyone wants to see it
Note that there are no useful errors reported.


# pwd
/opt/dcelocal
# cd var/adm/directory
# cd cds
# ls
cdsAdver              cds_cache.0000000001  cdsclerk
cdsDiag               cds_cache.version     cdsclerk_6664_root
cdsLib                cdsadv                clerk_mgmt_acl.dat
# fgrep cache /etc/rc.dce
rm /opt/dcelocal/var/adm/directory/cds/*cache*
# pwd
/opt/dcelocal/var/adm/directory/cds
# rm *cache*
# sh /etc/dce.clean
# sh /etc/rc.dce
rm: /opt/dcelocal/var/adm/directory/cds/*cache*: No such file or directory
        /opt/dcelocal/bin/rpcd
        /opt/dcelocal/bin/secd
        /opt/dcelocal/bin/sec_clientd
        /opt/dcelocal/bin/cdsadv
        /opt/dcelocal/bin/dtsd
error executing command:
        entry not found (dce / rpc)
S:****** rc.dfs: Loading kernel extensions (export.ext dfscore.ext dfscmfx.ext dcelfs.ext)
S:****** rc.dfs: Starting daemon "bosserver"
^C
# dce_login cell_admin -dce-
#
# cdscp show object /.:/hosts/singsing/dts-entity

                        SHOW
                      OBJECT   /.../headache.qadce.osf.org/hosts/singsing/dts-entity
                          AT   1994-01-18-12:31:17
Error on entity: /.../headache.qadce.osf.org/hosts/singsing/dts-entity
Requested entry does not exist (dce / cds)
Function: dnsEnumAttr
dnsEnumAttr: partial results = %x000000000000000000000000000000000000

# cdscp show dir /.:

                        SHOW
                   DIRECTORY   /.../headache.qadce.osf.org
                          AT   1994-01-18-12:31:23
Error on entity: /.../headache.qadce.osf.org
Requested entry does not exist (dc / cds)
Function: dnsEnumAttr
dnsEnumAttr: partial results = %x000000000000]

[mccann]
I suspect the cache is empty and does not know about any servers.
If you are not on a lan with a running server, you need to issue a define
cached server.  If a server is running and on the lan, you'll have to 
wait until the advertiser gets the advertisement.

Clean wipes out the cache leaving cds unreachable until it can
re-initialize.  That is why re-config works.  There is a cadump and
catravers
program.  Why don't you try them next time.  Lets prove the cache is bad
first.

janet mccann

[1/18/93 public]

Yes, define cached server fixes the problem.  I forgot
that because I experince ot 9730 too often (clerk spins
when cache is 'bad'), I have to remove the cache on reboot.  

However, my cell does not cross a subnet boundary
and neither is it on a wan.  It is a split server configuration
(cds and security on different machines), though.
Is defined cached server required for a split server configration?
I didn't see anything in the documents saying that it is.

[04/04/94 public]

We have observed this problem several times on the HP machines.
The problem usually occurs during dce startup after a machine
reboot.  In all the cases that we have seen, the caches were
empty (not cleaned by the users), and the restarted cdsadv somehow
didn't receive the advertisement from the running server.  The
only workaround is to define cached server.

Due to the high frequency of this problem, I'd suggest to add the
logic of defining cached server into cdsadv.  In other word, if
cdsadv starts for xxx seconds and still receives no advertisement,
it will automatically does the define cached server for that client
machine.  The server information, which includes server machine name,
and tower information which are required by the define cached server
command, is to be stored at /opt/dcelocal/etc/cds_server_cache .
This little cache file is updated whenever a client machine is
properly configured through dce_config.  With this additional function
in cdsadv, we can actually strip off the logic of define cached server
from dce_config.

Anyone has other ideas?

[8/12/94 public]
What we implemented was another (ascii) file
  $DCELOCAL/var/adm/directory/cds/cds_cache.wan
which tracks all the defined cached servers (updating tower sets)
and is read by advertiser startup to re-define the cached servers.
An entry is removed only if "clear cached server" is used.

[8/25/94 public]
During testing, I discovered that the cache remained empty
after deleting cache files and restarting the advertiser.
This turned out to be due to an uninitialized structure
which should have been zeroed after malloc()ed.
Thus a flag which should have caused the wan file
to be accessed was non-zero.



CR Number                     : 9730
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : clerk
Short Description             : clerk needs to recognize an inconsistent cache
Reported Date                 : 1/12/94
Found in Baseline             : 1.0.3
Found Date                    : 1/12/94
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : cache*
Sensitivity                   : public

[1/12/94 public]


There are times when DCE does not shutdown cleanly with dce.clean such as
dtsd can't be killed or dce.clean can't kill the clerk for
some reason or other.  After this, when DCE is restarted with
rc.dce, the clerk will either spin and/or dts will get errors
because there is something inconsistent in the cds cache which
makes it very unhappy.

Removeing the cache mostly makes the problem go away.  It would be nice
if either the clerk could figure out that the cache is bad
and flush it (rather than spin forever) or if that isn't
possible, have some cdsck (a fsck-like utility for cds cache)
which could validate the cache prior to cds startup.


I am very tired of having to stop dce when dts starts complaining
and having to remove the cache by hand.  This problem happens 
frequently enough that I have had to put a line in rc.dce to
remove the cache before starting up cds.

[8/29/94 public]
We believe the cache to be 'okay'.  You should not be seeing 
corruption anymore.  You can build the cache with CACHE_PARANOID
defined if you want extensive cache checking, but it is expensive.
It will write out the cache if it detects corruption.



CR Number                     : 9721
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : Makefiles
Short Description             : Makefiles need to propagate SAMIDL_SUBDIRS to ./directory/cds
Reported Date                 : 1/11/94
Found in Baseline             : 1.1
Found Date                    : 1/11/94
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b13
Affected File(s)              : Makefile
Sensitivity                   : public

[1/11/94 public]
In preparation for testing of clean cds code, I need to have
the SAMIDL pass propagated to the appropriate cds directories.

[8/2/94 public]
This was fixed somewhere along the way.



CR Number                     : 9640
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : Can't start cdsd, cdsadv
Reported Date                 : 12/21/93
Found in Baseline             : 1.1
Found Date                    : 12/21/93
Severity                      : A
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/adver/adver_main.c
					./directory/cds/cache/cadumpmain.c
					./directory/cds/cache/catraverse.c
					./directory/cds/child/clerk_main.c
					./directory/cds/control/mgmt_main.c
					./directory/cds/gda/gda_clerk.c
					./directory/cds/gda/gda_main.c
					./directory/cds/gda/x500_addcell.c
					./directory/cds/includes/rpcserver.h
					./directory/cds/library/cds_rpcserver.c
					./directory/cds/server/dump_files.c
					./directory/cds/server/sdi_ui.c
					./directory/cds/server/server_main.c
Sensitivity                   : public

[12/21/93 public]
CDS will not start on 486.  I re-installed DCE from nb_486 (date on
binaries: 12/17) and reconfigured my cell:


         Initial Cell Configuration ( on gemini )


         1. Initial Security Server
         2. Initial CDS Server
         3. Initial DTS Server


        98. Return to previous menu
        99. Exit



        selection:  2
S:****** Configuring initial CDS Server...
S:****** Please wait for user authentication and authorization...



        Is this cell using multiple LANs?
        Specifically, are clients and servers divided into profile
        groups to facilitate performance? Most cells will not require
        this feature.
 
        Are you using multiple LAN's within this cell? (n)   
S:****** Starting cdsadv...
Cannot access message catalog files, exiting
ERROR:   cdsadv failed to start
        Press <RETURN> to continue, CTRL-C to exit:   
S:****** Starting cdsd...
Cannot access message catalog files, exiting
ERROR:   cdsd failed to start
        Press <RETURN> to continue, CTRL-C to exit:

[12/22/93 public]
More info:
NLSPATH=/usr/lib/nls/msg/%L/%N
LANG=en_US.ISO8859-1

root@gemini dcelocal/etc$ dspcat dcecds.cat
1 : 1000 Internal: Base status code
1 : 1001 Invalid argument
1 : 1002 Invalid name
1 : 1003 Insufficient local resources
1 : 1004 Unable to communicate with any CDS server
1 : 1005 Insufficient rights to perform requested operation
1 : 1006 Requesting principal could not be authenticated to the
clearinghouse
1 : 1007 Conflicting arguments specified
1 : 1008 Timeout occurred, operation not performed
1 : 1009 Timeout occurred, operation may have completed
1 : 1011 Specified full name already exists
1 : 1012 Requested entry does not exist
1 : 1013 Requested function not supported by this version of architecture
1 : 1014 Requested optional function is not implemented in this release
1 : 1015 Specified attribute cannot be modified
1 : 1016 Specified clearinghouse does not exist

dspcat seems to work either with NLSPATH set or unset.  dce_config doesn't
work with NLSPATH set or unset.

[12/30/93 public]
This is a problem with either gcc or the OSF libraries. Basically
the code thinks it opens the catalog successfully but its got the 
wrong catalog. When it then tries to get a specified message it can;t
find it. For now the work around on the OSF/1 486 platform oply is

ln -s /usr/lib/nls/msg/en_US.ISO8859-1 /usr/lib/nls/msg/C

I successfully configured after doing this. I'm going to lower the
priority but leave the this open as a reminder to check with the 
osf1 folk next week to see what we need to do to fix this.

[1/5/94 public]
Here's an elaboration on the problem/situation:

From: tom
Subject: Message catalog problems on OSF/1
To: dce-tech, dce-team
Date: Wed, 5 Jan 1994 12:07:06 -0500 (EST)
 
This is a explaination of why you might have message catalog problems
on OSF/1.  The short solution is if you have a 386, you should run
the following commands as root:

	rm -f /usr/lib/nls/msg/C
	cd /usr/lib/nls/loc
	make -f Mkf.native en_US.ISO8859-1

A more intersting explanation follows.

jd@osf.org writes:
> We have discovered a problem when configuring dce1.1 on the OSF/1 486 
> platform. During the configuration of CDS the various cds components fail 
> because they can't seem to locate the message catalogs. The error message 
> you get during cds configuration when cdsadv attempts to start is
> 
>  "Cannot access message catalog files, exitind"
> 
> We tracked it to an apparent problem with either gcc or an OSF/1 library. 
> Basically the code thinks it has the correct catalog open but but it doesn't. 
> When it attempts to extract a specified message it can't find it. The work 
> around for the time being is
> 
> ln -s /usr/lib/nls/msg/en_US.ISO8859-1 /usr/lib/nls/msg/C
> 
> I successfully configured after making this link and correct error 
> messages seem to get generated by cdscp.

Ok, here is the scoop.  Several things happened (some not recently)
that caused this problem.

For DCE 1.1, Rich rewrote the dce_error_inq_text() so it doesn't fall
back to a hard coded path if the catgets() 'fails'.  This is a good
thing.  A application should never 'notice' that catgets returns
the default messages.  This is a purpose behind *default* messages.

The OSF/1 team (and HP/UX I guess) noticed that it is a big lose to 
go and do work on a catopen when you don't need to.  Since *every*
command in the command set does a catopen(), we optimised things
in a lazy evaluation type of way.  Works great.  Some people grump
about catopen not returning errors when it should.  Fine.

The next thing we (OSF/1) did was figure out that its was a big lose
to go and get messages in general.  We also noticed that lots of people
in the US of A would want to run in the 'C' locale (the default),
and they would want two things:
	1) It shouldn't slow *them* down just because OSf/1 had i18n.
	2) They wanted their good old Unix "english" messages, not the
           "full sentence, translatable" messages we got from IBM.

So, we optimised again, if you are running the "C" locale, catgets()
will return the default message.  This makes everything work spiffy
for traditional Unix users (those that chose to run in the C locale).

For OSF/1 R1.2 (the current DCE reference platform), POSIX added the 
LC_MESSAGES catagory to control what locale the messages should come from.
This, naturally, is what catgets() checks when it is deciding to do
all the work of file I/O, or if it should just return the default string.

In order to get this catagory set to something *other* than 'C', you
have to actually have called setlocale() succesfully.  In order to do
this on OSF/1, you **must have the locales installed**.  99% of DCE
486's don't.




The Solution:

% setenv LANG en_US.ISO8859-1
% locale
LANG=en_US.ISO8859-1
LC_COLLATE="C"
LC_CTYPE="C"
LC_MONETARY="C"
LC_NUMERIC="C"
LC_TIME="C"
LC_MESSAGES="C"
LC_ALL=
% su
Password:
# rm -f /usr/lib/nls/msg/C
# cd /usr/lib/nls/loc
# make -f Mkf.native en_US.ISO8859-1 
/usr/bin/localedef -c -f charmaps/ISO8859-1.cm -i src/en_US.src en_US.ISO8859-1
localedef [WARNING]: FILE: src/en_US.src, LINE: 455, CHAR: 1
There are characters in the codeset which are unspecified in the collation order.

*** Error code 1 (ignored)
# locale
LANG=en_US.ISO8859-1
LC_COLLATE="en_US.ISO8859-1"
LC_CTYPE="en_US.ISO8859-1"
LC_MONETARY="en_US.ISO8859-1"
LC_NUMERIC="en_US.ISO8859-1"
LC_TIME="en_US.ISO8859-1"
LC_MESSAGES="en_US.ISO8859-1"
LC_ALL=


Now cdsadv will be able to find its message catalogs correctly.
And now someone (for code cleanup) will go and make CDS not depend
on message catalogs to function.  (yea!)

-- 
Tom Jordahl                                       Internet: tom@osf.org
Open Software Foundation                          UUCP:   ..!uunet!osf!tom

[04/29/94 public]
All of the above is still true, and I guess Rich had not built the
locales on his 486 before trying to configure his machine.

CDS has always been a real problem when it comes to message files
and NLSPATH and LANG.  With the 1.1 serviceability, and many code
clean-up drops already in, we should have this fixed by now.

All of the cds programs should register their default message tables
with the serviceability library.  The API to do this is 
dce_msg_define_msg_table().  For an example on how to do this
please see src/time/service/dtss_service_main.c:dts_svc_init().

If we could just make this simple fix, 99% of the NLSPATH and LANG
problems (on all platforms!) would be fixed, and there would
be a huge sigh of relief.

Please contact myself (Tom Jordahl, tom@osf.org) 
for any questions on how this should all work. I will be happy to help.

[6/8/94 public]
The squeeky wheel... Thanks for bringing this problem to my attention, Tom.
Okay, now all components set default tables. Also set serviceability
prognames.



CR Number                     : 9617
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : Abruptly changing the system
clock forward and backward causes cds problems
Reported Date                 : 12/14/93
Found in Baseline             : 1.0.3
Found Date                    : 12/14/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b16
Affected File(s)              : db_common.c,dns_service_rpc.c,server_badclock.
Sensitivity                   : public

[12/14/93 public]
Abruptly setting the system clock time forward (say a year) and then back
to the current time causes cds to thrash. Is this expected behavior or
should cds be able to recover from this?

[12/14/93 public]
Setting the time backwards is not supported.  It usually causes threads
to die, killing all your DCE servers.  Playing with the system clock
(rather then, say, letting dtsd slow down or speed up your local time
until it's correct) is also not supported.

[12/14/93 public]
I came up during testing of dts commands.  One of the dtscp (and dcecp)
commands let you abruptly set the system clock.  I know that it is "not
supported" but does that mean that we allow servers should core dump?  I
had thought that John had said "crashed" but he wrote "thrash" above.  I'm
just trying to see where the line is and what if anything we should
document.  Also it would be nice if we could fix or rig up something so
that testing can happen.

[12/14/93 public]
I agree with Howard that it shouldn't dump core. The last time I checked
this, it was quite a while ago, I believe I got a time skew error. I just
tried it on both hp_ux and osf1 and got Registry unavailable on both. This
was after doing a dce_login, pushing the clock back 1 day, and doing a 
cdscp show dir /.: 
This ot will remain open until we understand what's happening.

[12/14/93 public]
cdsd did not core dump on me, although it became unusable. After
setting the system clock forward 1 year and then back, cdsd thrashed
for about 8+ minutes and then stopped answering requests. cdscp would
hang on any command.

[8/29/94 public]
We have added a dcecp command to repair timestamps when the clock is
set incorrectly.  The timestamp must be removed from all databases it
has gotten itself into.  This new command will do that.



CR Number                     : 9561
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : can't do cdscp define cached server without ncadg_ip_udp.can't do cdscp define cached server without ncadg_ip_udp.
Reported Date                 : 11/30/93
Found in Baseline             : 1.0.2a
Found Date                    : 11/30/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : adver_cds_event.c
Sensitivity                   : public

[11/30/93 public]

There is a limitation in the cds advertizer that prevents doing the "cdscp
define cached server" command without ncadg_ip_udp. Issuing this command
eventually results in a call to cds_bind() (in adver_clerk_event.c) which
fails (if ncadg_ip_udp is not available) trying to compose an rpc binding
using one protocol sequence out of the list:

	static char *protseq[] = {"ncadg_ip_udp"}

One way to reproduce this problem is by setting RPC_SUPPORTED_PROTSEQS to
ncacn_ip_tcp and issuing the define cached server command.

It seems that just appending "ncacn_ip_tcp" to protseq[]:

	static char *protseq[] = {"ncadg_ip_udp", "ncacn_ip_tcp"}

would fix the problem without any undesirable effects since when
ncadg_ip_udp is available that would be the protocol sequence that would be
used (i.e.  reducing to the current behavior). Whether this is all that is
required or whether this is the right way to fix this problem is another
matter of course.

By the way there is a small problem in the cds_bind() routine: when the
call to rpc_binding_from_string_binding() fails, DEBUG_EVENT attempts to
print out the string binding (string_binding_p) after it has been freed.

[12/06/93 public]

Appending tcp to the protseq list as suggested above will only fix this
problem when the udp protocol is not available.  It will not fix the
problem if both udp and tcp are generally available, but a specific server
can only be reached using tcp.  The cds_bind routine always returns the
first available protocol in the list, so if both udp and tcp were available,
tcp will never be returned.

Use of cds_bind for "define cached server" is probably a bad choice in
the first place.  All other callers to cds_bind are looking for the
broadcast service for the local advertise/solicit protocol.  "Define
cached server" is used when this has not succeeded, and relies on an
explicit rpc address and hence a different list of possible protocols.

The adv_define_cached_server routine in cds/adver/adver_service_rpc.c
actually strips off the protocol choice specified in the cdscp "define
cached server" command.  Instead, it should preserve this specification
and pass it to cds_SendSolicit in cds/adver/adver_clerk_event.c
(adv_define_cached_server is the only caller of cds_SendSolicit so the
addition of this parameter should not be a problem).  The cds_SendSolicit
routine would then avoid the call to cds_bind and itself do the necessary
address composition using the requested protocol sequence.

This would fix two bugs: "define cached server" ignores the requested
protocol sequence, and the inability to do "define cached server" when
only tcp is available.

We have a customer with a router that forwards only tcp packets and not
udp packets.  That customer cannot successfully configure a DCE cell
because of this problem.  Raising severity/priority to A1.

[5/18/94]
This is fixed.



CR Number                     : 9486
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds/library/dnscvtobjid.c
Short Description             : Illegal member access in objid_file_lock()
Reported Date                 : 11/12/93
Found in Baseline             : 1.0.3
Found Date                    : 11/12/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : dnscvtobjid.c
Sensitivity                   : public

[11/12/93 public]

Full Description:
         dnscvtobjid.c:objid_file_lock() accesses file_p->f_mtime
         without checking if stat(2) earlier failed. In fact
         stat(2) can return EINTR. Code below from dnscvtobjid.c
         will clarify

    if (file_p = objid_file_p) {
        struct stat filestat;

        if (stat(DNS_CDS_ATTR_FILE, &filestat) < 0)
            file_p = NULL_file;

        if (file_p->f_mtime != filestat.st_mtime)
            file_p = NULL_file;
        }


Repeat By:
        Temporarily remove cds_attributes file and
        execute 'cdscp create clear /.:/foo_ch'

Proposed Solution:
        Use the old file that was open for now. The failure
        is hopefully temporary. The following code would
        accomplish that


    if (file_p = objid_file_p) {
         struct stat filestat;

         if (stat(DNS_CDS_ATTR_FILE, &filestat) == 0 &&
           file_p->f_mtime != filestat.st_mtime )
            file_p = NULL_file;
    }

[5/18/94 public]
This was fixed in an earlier 1.1 code drop.



CR Number                     : 9394
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 3442
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : 
Short Description             : CDS ANSI copilation problems.
Reported Date                 : 11/8/93
Found in Baseline             : 1.0.3
Found Date                    : 11/8/93
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : db_common.c
Sensitivity                   : public

[11/8/93 public]

Description of problem:

 Customer reported that

 "CDS's usage of threads-specific data structures is way too oriented
 towards CMA threads (vs, say, OSF/1 pthreads).  In particular, the CMA
 version has mutexes, conditions, snd threads all implemented as an
 underlying type "handle."  In other implementations this may not be
 true; and some additional types need to be defined." 

 This issue had previously been addressed in OT 3442 (which has since
 been cancelled) so the details have not been included here.

 In addition, Customer noted some problems which prevented ANSI compilation
 these problems are listed below.

     *** /directory/cds/gda/gda_list.c
     --- /new/gda_list.c
     ***************
     *** 831,841 ****

                PRINT(L_DELETE_FUNC, SEV_DEBUG_5,NO_ERR_ST, NO_ERRNUM,
                      "after el->rwl_data write lock");


     !          if(el->next_el != NULL)
                {
                        if((status = write_lock(&el->next_el->rwl_link)) != OK)
                        {
                                ERROR_PRINT(L_DELETE_FUNC, SEV_DEBUG_1,
                                        WRITE_LOCK_ERR_ST, status,
     --- 831,841 ----

                PRINT(L_DELETE_FUNC, SEV_DEBUG_5,NO_ERR_ST, NO_ERRNUM,
                      "after el->rwl_data write lock");


     !          if(el->next_el != (element_t *)NULL)
                {
                        if((status = write_lock(&el->next_el->rwl_link)) != OK)
                        {
                                ERROR_PRINT(L_DELETE_FUNC, SEV_DEBUG_1,
                                        WRITE_LOCK_ERR_ST, status,
     ***************
     *** 1215,1225 ****
        int             status;

        PRINT(L_INSERT_FUNC, SEV_DEBUG_5,  NO_ERR_ST, NO_ERRNUM,
              "begin l_insert");

     !  if(el_place == NULL)
        {
                status = l_insert_head(user_el, list);

                if(status == L_INSERT_HEAD_MALLOC)
                {
     --- 1215,1225 ----
        int             status;

        PRINT(L_INSERT_FUNC, SEV_DEBUG_5,  NO_ERR_ST, NO_ERRNUM,
              "begin l_insert");

     !  if(el_place == (element_t *)NULL)
        {
                status = l_insert_head(user_el, list);

                if(status == L_INSERT_HEAD_MALLOC)
                {
     ***************
     *** 1292,1302 ****
                {
                        return(L_INSERT_FAIL);
                }
        }

     !  if(el_place->next_el != NULL)
        {
                PRINT(L_INSERT_FUNC, SEV_DEBUG_5,NO_ERR_ST, NO_ERRNUM,
                      "next_el non-null");

                if((status = write_lock(&el_place->next_el->rwl_link)) != OK)
     --- 1292,1302 ----
                {
                        return(L_INSERT_FAIL);
                }
        }

     !  if(el_place->next_el != (element_t *)NULL)
        {
                PRINT(L_INSERT_FUNC, SEV_DEBUG_5,NO_ERR_ST, NO_ERRNUM,
                      "next_el non-null");

                if((status = write_lock(&el_place->next_el->rwl_link)) != OK)
     ***************
     *** 1544,1554 ****
                      "el_place non-null");

                el->next_el = el_place->next_el;
                el->prev_el = el_place;

     !          if(el_place->next_el != NULL)
                        el_place->next_el->prev_el = el;

                el_place->next_el = el;
        }

     --- 1544,1554 ----
                      "el_place non-null");

                el->next_el = el_place->next_el;
                el->prev_el = el_place;

     !          if(el_place->next_el != (element_t *)NULL)
                        el_place->next_el->prev_el = el;

                el_place->next_el = el;
        }

     *** /directory/cds/server/db_common.c
     --- /new/db_common.c

     ***************
     *** 2067,2077 ****
           DEBUG_EVENT(entry_db_begin_operation,
               (" >db_begin_operation(%p->(%s,%d))\n", user_p,
                deb_ascii_ObjUID(chidBuf,chid_p), operation));

           /* If match was not found, clearinghouse doesn't exist */
     !     file_p = db_find_file(chid_p);
           if (file_p == NULL_file_info) {
               status = DNS_UNKNOWNCLEARINGHOUSE;
               goto leave_db_begin_operation;
           }

     --- 2069,2079 ----
           DEBUG_EVENT(entry_db_begin_operation,
               (" >db_begin_operation(%p->(%s,%d))\n", user_p,
                deb_ascii_ObjUID(chidBuf,chid_p), operation));

           /* If match was not found, clearinghouse doesn't exist */
     !     file_p = db_find_file((ObjUID_t *)chid_p);
           if (file_p == NULL_file_info) {
               status = DNS_UNKNOWNCLEARINGHOUSE;
               goto leave_db_begin_operation;
           }

     ***************
     *** 2129,2139 ****
           DEBUG_EVENT(entry_db_end_operation,
               (" >db_end_operation(%p->(%s,%d))\n", user_p,
                deb_ascii_ObjUID(chidBuf,chid_p), operation));

           /* If match was not found, clearinghouse doesn't exist */
     !     file_p = db_find_file(chid_p);
           if (file_p == NULL_file_info) {
               status = DNS_UNKNOWNCLEARINGHOUSE;
               goto leave_db_end_operation;
           }

     --- 2131,2141 ----
           DEBUG_EVENT(entry_db_end_operation,
               (" >db_end_operation(%p->(%s,%d))\n", user_p,
                deb_ascii_ObjUID(chidBuf,chid_p), operation));

           /* If match was not found, clearinghouse doesn't exist */
     !     file_p = db_find_file((ObjUID_t *)chid_p);
           if (file_p == NULL_file_info) {
               status = DNS_UNKNOWNCLEARINGHOUSE;
               goto leave_db_end_operation;
           }

[6/15/94 public]
The 1.1 code uses pthreads and has removed CMA references.   If dthreads are a problem they can be removed.  

The code cleanup guide for 1.1 sys NULL doesn't have to be cast for ANSI C.
So gda_list.c remains as is.  

The change in db_common is not needed cause chid_p is of type OBJUID_T * already.



CR Number                     : 9361
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : intercell on an isolated client fails
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : B
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/adver/adver_clerk_event.c
Sensitivity                   : public

[11/4/93 public]
Create an isolated client node. Use define cached server to connect
it to a server in its cell. Then try to access another cell.
This fails. Why? The clerk is supposed to find a gda by querying a
server within its cell. It find this server by marking the cache
entry for the cell root directory and locking it down. It is marked
when an advertisement is accepted for the local cell, but the
defined cached server code does not check for local cell so it
can also mark the directory entry. The clerk cannot find it,
and thus fails the intercell requests.

[11/4/93 public]
If the clearinghouse to add is from the defined cached server,
and the directory is the local cell root, tell CAAddReplicas()
to remember the directory for future clerk queries.
Simple fix...

[11/11/93 public]
fixed->closed.



CR Number                     : 9357
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : Unnecessary/misleading childpointer update
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : back_parentpointer.c
Sensitivity                   : public

[11/4/93 public]
While perusing a server log, I discovered that during directory replica
creation, the server was trying to modify CDS_Replicas on the root's
childPointer... obviously unnecessary (from ta_replica.c/ta_replica_add()):

            if (!EMPTY_FullName(dirname_p))
                /* Root doesn't have a child */
                /* Ignore errors, check_parentpointer will fix it */
                clerk_modify_attribute(dirname_p, ET_childPointer,
                        update_p, updateLen);

The old DECdns test of !EMPTY_FullName(dirname_p) is not valid with cells.
Other places where this occurs is ta_create.c/resolve_dirname(), and
ta_mgmt.c/mgmt_check_linked(), which I would merge into one routine.
This would eliminate the ResolveName(/...)s during clearinghouse creation.

[8/17/94 public]
Changed to user absense of parentpointer or cellname match to determine if
a directory is the root.



CR Number                     : 9350
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : Cannot create a directory if a
soft link is referenced in the path
Reported Date                 : 11/3/93
Found in Baseline             : 1.0.3
Found Date                    : 11/3/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : ta_create.c
Sensitivity                   : public

[11/3/93 public]

The following problem also exists in current 1.0.3 code base.

        The following CDSCP command was issued :

        create directory /.:/DIR2/DIR4/SL1/TEMPDIR
         where SL1 is a soft link referencing /.:/DIR2/DIR4.

        Therefore, TEMPDIR should have been created under the
        /.:/DIR2/DIR4 directory.

        CDSCP returns message stating "specified name already
        exists". Although the entry is not present in the directory
        before the command is issued.

        I deleted the directory and attempted to create the directory
        without specifing SL1 in the path. This attempt was successful.

        I then created an object in the TEMPDIR directory using the
        SL1 soft link. I could also delete the object and the TEMPDIR
        directory using the soft link.

        Therefore, the only command which seems to have this problem
        is the create directory command.

[7/28/94 public]
The customer asked for the status of this one. In responding, I tried it
with 1.1. 1.1 does not have the problem reported.

I further tried with 1.0.3 release (the problem was reported against the
post-102,pre-103 code), 1.03 works fine too.

I think this one can be cancelled.

[8/4/94 public]
Well I can recreate it on 1.1  You have to use the exact name specifed.
TEMPDIR can be replaced with an 7 char. name and you get entry_exists.
If you use an 8 char. name it works.

The entry actually gets created but the success return from cdsd gets
turned into  rpc_invalid_tag.  The clerk then tries again  and sees the entry
exists.

So, something is definetly broken at the server.  Change to A1.

[8/24/94 public]
A buffer wasn't gettnig initialized to empty set.  Fixed.



CR Number                     : 9339
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : use of sys_nerr is not portable
Reported Date                 : 11/3/93
Found in Baseline             : 1.0.2a
Found Date                    : 11/3/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : adver/adver_sysdep_unix.c library/deb_event_mgr.c
Sensitivity                   : public

[11/3/93 public]

sys_nerr is a global variable which is used on some UNIX systems to
determine the maximum errno value. It is not supported by POSIX or XOPEN
(in fact XOPEN withdrew its support for it). For portability, the use of
sys_nerr should be removed.

The use of sys_nerr are in GetOsMsg() in adver/adver_sysdep_unix.c and
deb_ascii_errno() in library/deb_event_mgr.c. In both cases the functions
duplicate strerror() (which is ANSI C) functionality with use of sys_nerr
and sys_errlist (which are not ANSI C) so substitute the former for the
latter.

[6/26/94 public]
Fixed in 6/23 drop



CR Number                     : 9288
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : dacl test
Short Description             : dacl test scripts should have backed out the temporary work around of OT#7759 after OT#7759 got fixed
Reported Date                 : 10/28/93
Found in Baseline             : 1.0.3
Found Date                    : 10/28/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : dacl_setup.sh and dacl_testing.sh
Sensitivity                   : public

[10/28/93 public]
dacl test scripts have some work around of OT#7759 put in by sommerfeld
which is no longer needed after the OT is fixed.

[10/28/93 public]
Backed out the work around and also fixed a small problem which should
had used -o instead of -or for logical OR

[11/11/93 public]
fixed->closed.



CR Number                     : 9238
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : Intercell configuration for
bind needs work.
Reported Date                 : 10/22/93
Found in Baseline             : 1.0.3
Found Date                    : 10/22/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b11
Affected File(s)              : gda/*
Sensitivity                   : public

[10/22/93 public]
We need to visit the complexity of the bind intercell configuration. Most
people here that do this on a regular basis usually screw something up on 
the first try. We need to make the process simpler or at least have gdad 
give more information on what's wrong.

[8/4/94 public]
I believe this is addressed in servicablity.  We report errors now.
The process remains the same, we just let you now what is wrong.



CR Number                     : 9224
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : cdscp show cell core dump
Reported Date                 : 10/21/93
Found in Baseline             : 1.0.3
Found Date                    : 10/21/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/dnscvtcdsfull.c
					     directory/cds/control/names_actions_cds.c
Sensitivity                   : public

[10/21/93 public]
cdscp show cell cores dump if nothing follows, i.e.,

# cdscp show cell
                        SHOW
                        CELL   /
                          AT   1993-10-21-14:34:41
Requested entry does not exist (dce / cds)
Segmentation fault (core dumped)

[10/21/93 public]
Reassign to Alan since he has known where the problem is.

[10/22/93 public]
This is considered a bit more than originally thought. We are going to
get this in at the same time as 8176.

[10/25/93 public]
This rather simple bug showed a bug in the rewrite of dnscvtcdsfull.c
which I raised a red flag over. This bug happened because my new version
of said module allowed the name "/", which wasn't allowed before.
cdscp unfortunately was still trying to get the local cell name by
converting "/", which I have now changed to "/.:".
To get the new conversion code to reject "/" while still
maintaining freeze paranoia was the challenge.
Fixed.

[11/11/93 public]
fixed->closed.



CR Number                     : 9214
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : backup and restore CDS system test
Short Description             : hostname not extracted correctly
Reported Date                 : 10/20/93
Found in Baseline             : 1.0.3
Found Date                    : 10/20/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
			src/test/systest/admin/cds/tests/backup_ch.ksh
			src/test/systest/admin/cds/tests/backup_restore_ch.ksh
			src/test/systest/admin/cds/tests/restore_ch.ksh
Sensitivity                   : public

[10/20/93 public]
The "Backup and Restore Automated Test" fails because of two problems:

   1) The variable HOSTNAME is used for creation of file names.
	However, when hostname returns the full domain (e.g.
	name.osf.org) it uses this name to create files names that
	are used by CDS. However, CDS strips the damin off of the
	hostname (e.g. name.osf.org is stripped to name).
	Therefore the following line should be changed:

		existing:	HOSTNAME=`hostname`

		change to:	HOSTNAME=`hostname|awk -F"." '{print \$1}'`

	This will allow the file names to be created with the
	correct name.

   2) The first test that is performed is expected to fail but will
	always pass. The command is

		cdscp list dir /.:/${TESTDIR}

	where TESTDIR = "bkrsch_${HOSTNAME}. This command always
	passes because the cell_admin has read permission to /.:/.
	Therefore the expected status for this command should be 0.

I have made these changes and run this test on AIX.

[10/22/93 public]
The "Restore Clearinghouse Automated Test" and the "Backup Clearinghouse
Automated Test" also do not extract the hostname correctly. I have
changed these files and run the test successfully.

I have seem the same behavior on the setup.ksh script that is used
to setup cds.acl.6 system test.  This defect may affect more than 
just these two tests.  Can someone at OSF do some analysis on this
defect?  Are these problems only showing up on RIOS for some reason ?

[11/11/93 public]
fixed->closed.



CR Number                     : 9207
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : library
Short Description             : Errors compiling and running cds when preprocessor symbol DEBUG is not defined
Reported Date                 : 10/20/93
Found in Baseline             : 1.0.2
Found Date                    : 10/20/93
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b18
Affected File(s)              : cds.mk,dns_config.h,threads_lib.h,dns_malloc.c
Sensitivity                   : public

[10/20/93 public]

If we try to compile the file src/directory/cds/library/dnsgetmsg.c when the
preprocessor symbol DEBUG is not defined, we get:

	"/usr/dsg17/dce/builds/sinixbs/src/directory/cds/includes/msgblk.h", line 84: syntax error before or at: FILE
	"/usr/dsg17/dce/builds/sinixbs/src/directory/cds/includes/msgblk.h", line 84: cannot recover from previous errors
	*** Error code 1

This is because stdio.h is not included to define 'FILE'.  When the preprocessor
symbol DEBUG is defined, stdio.h is included in dns_record.h.  I don't know
if the correct thing to do is to unconditionally include stdio.h from 
dns_record.h, or to have dnsgetmsg.c include it.

[Wed Oct 20 10:28:41 EDT 1993 public]

More problem areas.  In src/directory/cds/server/db_common.c:

	
	"../../../../../src/directory/cds/server/db_common.c", line 1901: warning: semantics of "<=" change in ANSI C; use explicit cast
	"../../../../../src/directory/cds/server/db_common.c", line 1999: undefined symbol: diridBuf
	"../../../../../src/directory/cds/server/db_common.c", line 2007: undefined symbol: diridBuf
	"../../../../../src/directory/cds/server/db_common.c", line 2073: warning: argument is incompatible with prototype: arg #1
	"../../../../../src/directory/cds/server/db_common.c", line 2135: warning: argument is incompatible with prototype: arg #1
	*** Error code 1
	1 error


The reason for this is because in the routine refresh_chdirectories(), 
there is a LOG_EVENT() which uses diridBuf, which has the following definition:

	    DEB_ASCII_BUF_ObjUID(diridBuf)

which means it is only defined if -DDEBUG is on the compile line.

In addition, a host of other files in the server directory will not compile.

[Thu Oct 21 10:46:57 EDT 1993 public]

After having gotten the CDS files to compile without the DEBUG preprocessor
symbol, I tried to run the cell.  Well it turns out that the cdsclerk core
dumps.  If I compile the CDS files with the DEBUG preprocessor symbol, 
the cell will function fine.

I have found that by compiling threads with the NDEBUG preprocessor symbol,
that DCE performance is speeded up by 7-15%.  I would like to be able
to do the same for CDS and see if we get a significant increase in DCE
speed.

[9/28/94 public]
You can not would without dce_debug defined.



CR Number                     : 9195
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test
Short Description             : LOGNAME used for file name
Reported Date                 : 10/19/93
Found in Baseline             : 1.0.3
Found Date                    : 10/19/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : test/systest/admin/cds/tests/functions
Sensitivity                   : public

[10/19/93 public]
The test uses the environmental variable LOGNAME as part of the name
for the log files which are created for the test. However, LOGNAME
is a readonly variable on AIX. Regargless it is a not a good choice
for naming this environmental variable. The variable is only used
in one fuction and I will change "LOGNAME" to "LOGFILE".

[11/11/93 public]
fixed->closed.



CR Number                     : 9193
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : libdce
Short Description             : rpc_ns_entry_expand_name erroneously returns rpc_s_incomplete_name
Reported Date                 : 10/19/93
Found in Baseline             : 1.0.3
Found Date                    : 10/19/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/dnscvtcdsfull.c
Sensitivity                   : public

[10/19/93 public]

This has only been seen on a RIOS so far.  We tried restarting
the core components, but the problem still persists.  The 
problem is that dfsbind, during its attempt to resolve the
"/.:/fs" name consistently is getting errors from the sec_id_parse_name
call.  Here is a log from dfsbind:

DFS Trace Dump -

   Date: Tue Oct 19 10:32:55 1993

Contents of log bind:
time 144.787229, pid 0: Current time: Tue Oct 19 10:32:32 1993
time 144.787229, pid 1: helper read: entry
time 148.981280, pid 1: helper read: exit code:35
time 148.981810, pid 1: helper read: entry
time 148.983503, pid 9: ProcessRequest: entry
time 148.984318, pid 9: sec_id_parse_name: entry name=/.../headache.qadce.osf.org
time 148.987700, pid 9: sec_id_parse_name: exit code:382312596
time 153.195138, pid 9: principal: hosts/alcatraz/self expires: Fri Oct 22 14:49:23
 1993

time 153.195597, pid 9: cred file: FILE:/opt/dcelocal/var/security/creds/dcecred_ff
ffffff
time 153.196629, pid 9: ProcessRequest: exit code:22
time 153.196963, pid 9: helper write: entry
time 153.206886, pid 9: helper write: exit code:12


$ fgrep 382312596 *
rpcsts.h:#define rpc_s_incomplete_name (382312596)


# cdscp show obj /.:/fs

                        SHOW
                      OBJECT   /.../headache.qadce.osf.org/fs
                          AT   1993-10-19-10:37:02
            RPC_ClassVersion = 0100
             RPC_ObjectUUIDs = 26242e0067eb951cbc5502608c2f6c55
                   RPC_Group = 2f2e2e2e2f68656164616368652e71616463652e6f73662e6f72
672f686f7374732f616c63617472617a2f73656c6600
                   RPC_Group = 2f2e2e2e2f68656164616368652e71616463652e6f73662e6f72
672f686f7374732f73686f747a2f73656c6600
                   RPC_Group = 2f2e2e2e2f68656164616368652e71616463652e6f73662e6f72
672f686f7374732f6578706c6f7265722f73656c6600
                     CDS_CTS = 1993-09-14-16:04:00.751055100/02-60-8c-2f-6c-55
                     CDS_UTS = 1993-10-05-19:41:14.277336100/02-60-8c-2f-6c-55
                   CDS_Class = RPC_Entry
            CDS_ClassVersion = 1.0
# rpccp show group /.:/fs

group members:

  /.../headache.qadce.osf.org/hosts/alcatraz/self
  /.../headache.qadce.osf.org/hosts/shotz/self
  /.../headache.qadce.osf.org/hosts/explorer/self



Because of this we are unable to access DFS. Note that the cell
was happy for a few days and then suddenly this persistent problem
manifested itself. 

Please let us know soon what other information we can get while
the cell is still in this state.

[10/19/93 public]
Added gmd and rsarbo to CC list, since 9186 was dup'd to this one.
Note: The error above is from a sec_id_parse_name() to resolve
/.../headache.qadce.osf.org, not the higher level resolve of /.:/fs,
so the fact that cdscp and rpccp can see /.:/fs doesn't mean much...
First, make sure "headache.qadce.osf.org" is the name of the cell (exactly,
not just "headache"), then make sure rgy_edit can see the cell principal
krbtgt/headache.qadce.osf.org
Actually, the call to sec_id_parse_name() is asking for both a cellname and
principal name back, and only passing in a cellname.  I can't remember what's
supposed to happen in that case, but it does look suspicious.
Neither the client side code for sec_id_parse_name, not the manager routine
rsec_id_parse_name() set this particular status...
You could try setting the env variable DEBUG_SEC to 10 and restart dfsbind,
then attach email relevant output to dce_sec_dev:@apollo.hp.com
Is this reproducible in general or just on the particular machine with the
particular cell you have set up now? (ie: if we found someone here that had
the same bits, would they be having the same problem?).

[10/19/93 public]


I have the dfsbind program in the debugger on the RIOS

What I am seeing is:

  sec__id_parse_name
        |
        -----> rca_expland_default_handle
                 |
                 ------> rca_create_default_context
                           |
                           ---->rca_site_bind
                                  |
                                  -----> rca_get_cell_name

It seems that after rca_site_bind makes the call to rca_get_cell_name
it thinks that rca_get_cell_name has failed.  I looked at rca_get_cell_name
and it seems to call dce_cf_get_cellname which just reads in the cell
name from the dce_cf.db file, which appears to be successfull.

 I am questioning whether this sounds reasonable because I have to
debug with RIOS assembler and I have no idea what the calling
conventions and register usage is.  It appears that rca_site_bind,
after making the rca_get_cell_name call does a few checks on
some register r3, which has a status code the same as rpc_s_incomplete_name.
It then takes a branch and appears to do some clean up and exits.
It does not make any of the remaining calls in rca_site_bind.

I don't know how reproducible the problem is. however, it is still in
the cell that I have now, so If you'd like to login and look at it
That would help alot.  Call me at 621-7283 if you want to try it out. 
If you can do that *real* soon that would be great (like I'm here late
tonight).

I'll try the DEBUG_SEC thing in a minute and let you know.

[10/19/93 public]

Turning on deubg does not seem to give any more information.

I've included the dbx session output for you to examine.
It looks like rpc_nsentry_expand_name returns an error code
and then the call to rca_get_cell_name succeeds. However,
rca_site_bind still thinks that there is an error after the
successful rca_get_cell_name call.  I don't know if this is
the way things are supposed to work, since I am not familiar
at all with this code.

This starts at the rca_site_bind called from the sec__id_parse_name
call path which was mentioned in the previous comment. 


stopped in rca_site_bind at 0xd0c61fd8 ($t589828)
0xd0c61fd8 (rca_site_bind+0x104) 480ca0ad         bl   0xd0d2c084 (rpc_ns_entry_expan
d_name)
(dbx) nexti
stopped in rca_site_bind at 0xd0c61fdc ($t589828)
0xd0c61fdc (rca_site_bind+0x108) 4ffffb82       cror   0x1f,0x1f,0x1f
(dbx) stepi
stopped in rca_site_bind at 0xd0c61fe0 ($t589828)
0xd0c61fe0 (rca_site_bind+0x10c) 80610aa4          l   r3,0xaa4(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c61fe4 ($t589828)
0xd0c61fe4 (rca_site_bind+0x110) 28830000      cmpli   cr1,r3,0x0
(dbx) registers
  $r0: 0xd0c61fdc  $stkp: 0x201d7a9c   $toc: 0x2007c68c    $r3: 0x201d915c
  $r4: 0x201d7ae4    $r5: 0x00000340    $r6: 0x00000001    $r7: 0x201d78c4
  $r8: 0x2012dbc0    $r9: 0x6463652e   $r10: 0x00002b80   $r11: 0x2018a490
 $r12: 0x00003818   $r13: 0xdeadbeef   $r14: 0xdeadbeef   $r15: 0xdeadbeef
 $r16: 0xdeadbeef   $r17: 0xdeadbeef   $r18: 0x2009ca00   $r19: 0xdeadbeef
 $r20: 0xdeadbeef   $r21: 0xdeadbeef   $r22: 0xdeadbeef   $r23: 0xdeadbeef
 $r24: 0xdeadbeef   $r25: 0xdeadbeef   $r26: 0x200a6250   $r27: 0x200a0de4
 $r28: 0x2009ca6c   $r29: 0x20169f53   $r30: 0x10047f48   $r31: 0x20055610
 $iar: 0xd0c61fe4   $msr: 0x0002d0b0    $cr: 0x82000040  $link: 0xd0c61fdc
 $ctr: 0x0020f0b0   $xer: 0x00000002    $mq: 0x00002f90   $tid: 0x00000000
          Condition status = 0:l 1:e 6:g
        [unset $noflregs to view floating point registers]
in rca_site_bind at 0xd0c61fe4 ($t589828)
0xd0c61fe4 (rca_site_bind+0x110) 28830000      cmpli   cr1,r3,0x0
(dbx)

stopped in rca_site_bind at 0xd0c61fe8 ($t589828)
0xd0c61fe8 (rca_site_bind+0x114) 41860014        beq   1,0xd0c61ffc (rca_site_bind+0x
128)
(dbx) stepi
stopped in rca_site_bind at 0xd0c61fec ($t589828)
0xd0c61fec (rca_site_bind+0x118) 80610aa4          l   r3,0xaa4(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c61ff0 ($t589828)
0xd0c61ff0 (rca_site_bind+0x11c) 80630000          l   r3,0x0(r3)
(dbx) stepi
stopped in rca_site_bind at 0xd0c61ff4 ($t589828)
0xd0c61ff4 (rca_site_bind+0x120) 28830000      cmpli   cr1,r3,0x0
(dbx) $r
$r
^ unrecognized command
(dbx) registers
  $r0: 0xd0c61fdc  $stkp: 0x201d7a9c   $toc: 0x2007c68c    $r3: 0x16c9a094
  $r4: 0x201d7ae4    $r5: 0x00000340    $r6: 0x00000001    $r7: 0x201d78c4
  $r8: 0x2012dbc0    $r9: 0x6463652e   $r10: 0x00002b80   $r11: 0x2018a490
 $r12: 0x00003818   $r13: 0xdeadbeef   $r14: 0xdeadbeef   $r15: 0xdeadbeef
 $r16: 0xdeadbeef   $r17: 0xdeadbeef   $r18: 0x2009ca00   $r19: 0xdeadbeef
 $r20: 0xdeadbeef   $r21: 0xdeadbeef   $r22: 0xdeadbeef   $r23: 0xdeadbeef
 $r24: 0xdeadbeef   $r25: 0xdeadbeef   $r26: 0x200a6250   $r27: 0x200a0de4
 $r28: 0x2009ca6c   $r29: 0x20169f53   $r30: 0x10047f48   $r31: 0x20055610
 $iar: 0xd0c61ff4   $msr: 0x0002d0b0    $cr: 0x84000040  $link: 0xd0c61fdc
 $ctr: 0x0020f0b0   $xer: 0x00000002    $mq: 0x00002f90   $tid: 0x00000000
          Condition status = 0:l 1:g 6:g
        [unset $noflregs to view floating point registers]
in rca_site_bind at 0xd0c61ff4 ($t589828)
0xd0c61ff4 (rca_site_bind+0x120) 28830000      cmpli   cr1,r3,0x0
(dbx)stopped in rca_site_bind at 0xd0c61ff8 ($t589828)
0xd0c61ff8 (rca_site_bind+0x124) 40860058        bne   1,0xd0c62050 (rca_site_bind+0x
17c)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62050 ($t589828)
0xd0c62050 (rca_site_bind+0x17c) 80610a88          l   r3,0xa88(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62054 ($t589828)
0xd0c62054 (rca_site_bind+0x180) 28830000      cmpli   cr1,r3,0x0
(dbx) stepi
stopped in rca_site_bind at 0xd0c62058 ($t589828)
0xd0c62058 (rca_site_bind+0x184) 41860014        beq   1,0xd0c6206c (rca_site_bind+0x
198)
(dbx) stepi
stopped in rca_site_bind at 0xd0c6205c ($t589828)
0xd0c6205c (rca_site_bind+0x188) 80610a88          l   r3,0xa88(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62060 ($t589828)
0xd0c62060 (rca_site_bind+0x18c) 88630000        lbz   r3,0x0(r3)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62064 ($t589828)
0xd0c62064 (rca_site_bind+0x190) 28830000      cmpli   cr1,r3,0x0
(dbx) stepi
stopped in rca_site_bind at 0xd0c62068 ($t589828)
0xd0c62068 (rca_site_bind+0x194) 40860018        bne   1,0xd0c62080 (rca_site_bind+0x
1ac)
(dbx) stepi
stopped in rca_site_bind at 0xd0c6206c ($t589828)
0xd0c6206c (rca_site_bind+0x198) 30610480         ai   r3,r1,0x480(dbx) stepi



....
The results for dce_cf_get_cell_name

stopped in rca_get_cell_name at 0xd0c5f1d0 ($t589828)
0xd0c5f1d0 (rca_get_cell_name+0x18) 4803c1d5         bl   0xd0c9b3a4 (dce_cf_get_cell
_name)
(dbx) nexti
stopped in rca_get_cell_name at 0xd0c5f1d4 ($t589828)
0xd0c5f1d4 (rca_get_cell_name+0x1c) 4ffffb82       cror   0x1f,0x1f,0x1f
(dbx) stepi
stopped in rca_get_cell_name at 0xd0c5f1d8 ($t589828)
0xd0c5f1d8 (rca_get_cell_name+0x20) 8061003c          l   r3,0x3c(r1)
(dbx) stepi
stopped in rca_get_cell_name at 0xd0c5f1dc ($t589828)
0xd0c5f1dc (rca_get_cell_name+0x24) 28830000      cmpli   cr1,r3,0x0
(dbx) registers
  $r0: 0xd0c5f1d4  $stkp: 0x201d7a5c   $toc: 0x2007c68c    $r3: 0x00000000
  $r4: 0x20082eb0    $r5: 0x2f2e2e2e    $r6: 0x2f686561    $r7: 0x64616368
  $r8: 0x652e7161    $r9: 0x6463652e   $r10: 0x6f73662e   $r11: 0x6f726700
 $r12: 0x00000000   $r13: 0xdeadbeef   $r14: 0xdeadbeef   $r15: 0xdeadbeef
 $r16: 0xdeadbeef   $r17: 0xdeadbeef   $r18: 0x2009ca00   $r19: 0xdeadbeef
 $r20: 0xdeadbeef   $r21: 0xdeadbeef   $r22: 0xdeadbeef   $r23: 0xdeadbeef
 $r24: 0xdeadbeef   $r25: 0xdeadbeef   $r26: 0x200a6250   $r27: 0x200a0de4
 $r28: 0x2009ca6c   $r29: 0x20169f53   $r30: 0x10047f48   $r31: 0x20055610
 $iar: 0xd0c5f1dc   $msr: 0x0002d0b0    $cr: 0x24000020  $link: 0xd0c5f1d4
 $ctr: 0x0020d0b0   $xer: 0x0000001c    $mq: 0x6f726700   $tid: 0x00000000
          Condition status = 0:e 1:g 6:e
        [unset $noflregs to view floating point registers]
in rca_get_cell_name at 0xd0c5f1dc ($t589828)
0xd0c5f1dc (rca_get_cell_name+0x24) 28830000      cmpli   cr1,r3,0x0
(dbx)


---- returning from rca_get_cell_name

stopped in rca_get_cell_name at 0xd0c5f21c ($t589828)
0xd0c5f21c (rca_get_cell_name+0x64) 4e800020         br
(dbx) stepi
stopped in rca_site_bind at 0xd0c62074 ($t589828)
0xd0c62074 (rca_site_bind+0x1a0) 30610480         ai   r3,r1,0x480
(dbx) stepi
stopped in rca_site_bind at 0xd0c62078 ($t589828)
0xd0c62078 (rca_site_bind+0x1a4) 90610a88         st   r3,0xa88(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c6207c ($t589828)
0xd0c6207c (rca_site_bind+0x1a8) 4800009c          b   0xd0c62118 (rca_site_bind+0x24
4)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62118 ($t589828)
0xd0c62118 (rca_site_bind+0x244) 80610aa4          l   r3,0xaa4(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c6211c ($t589828)
0xd0c6211c (rca_site_bind+0x248) 80630000          l   r3,0x0(r3)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62120 ($t589828)
0xd0c62120 (rca_site_bind+0x24c) 28830000      cmpli   cr1,r3,0x0
(dbx)(dbx) registers
  $r0: 0xd0c62074  $stkp: 0x201d7a9c   $toc: 0x2007c68c    $r3: 0x16c9a094
  $r4: 0x177db009    $r5: 0x00000001    $r6: 0x00000001    $r7: 0x201d7934
  $r8: 0x2012ced0    $r9: 0x6463652e   $r10: 0x20002314   $r11: 0x2012ca70
 $r12: 0x00003818   $r13: 0xdeadbeef   $r14: 0xdeadbeef   $r15: 0xdeadbeef
 $r16: 0xdeadbeef   $r17: 0xdeadbeef   $r18: 0x2009ca00   $r19: 0xdeadbeef
 $r20: 0xdeadbeef   $r21: 0xdeadbeef   $r22: 0xdeadbeef   $r23: 0xdeadbeef
 $r24: 0xdeadbeef   $r25: 0xdeadbeef   $r26: 0x200a6250   $r27: 0x200a0de4
 $r28: 0x2009ca6c   $r29: 0x20169f53   $r30: 0x10047f48   $r31: 0x20055610
 $iar: 0xd0c62120   $msr: 0x0002d0b0    $cr: 0x82000020  $link: 0xd0c62074
 $ctr: 0x0020d0b0   $xer: 0x0000001c    $mq: 0x00000000   $tid: 0x00000000
          Condition status = 0:l 1:e 6:e
        [unset $noflregs to view floating point registers]
in rca_site_bind at 0xd0c62120 ($t589828)
0xd0c62120 (rca_site_bind+0x24c) 28830000      cmpli   cr1,r3,0x0
(dbx) stepi
stopped in rca_site_bind at 0xd0c62124 ($t589828)
0xd0c62124 (rca_site_bind+0x250) 41860008        beq   1,0xd0c6212c (rca_site_bind+0x
258)
(dbx) stepistopped in rca_site_bind at 0xd0c62128 ($t589828)
0xd0c62128 (rca_site_bind+0x254) 48000458          b   0xd0c62580 (rca_site_bind+0x6a
c)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62580 ($t589828)
0xd0c62580 (rca_site_bind+0x6ac) 83e10a6c          l   r31,0xa6c(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62584 ($t589828)
0xd0c62584 (rca_site_bind+0x6b0) 80010a78          l   r0,0xa78(r1)
(dbx) stepi
stopped in rca_site_bind at 0xd0c62588 ($t589828)
0xd0c62588 (rca_site_bind+0x6b4) 7c0803a6       mtlr   r0
(dbx) stepi
stopped in rca_site_bind at 0xd0c6258c ($t589828)
0xd0c6258c (rca_site_bind+0x6b8) 30210a70         ai   r1,r1,0xa70
(dbx) stepi
stopped in rca_site_bind at 0xd0c62590 ($t589828)
0xd0c62590 (rca_site_bind+0x6bc) 4e800020         br
(dbx)(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7a0 ($t589828)
0xd0c5f7a0 (rca_create_default_context+0x58) 80610078          l   r3,0x78(r1)
(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7a4 ($t589828)
0xd0c5f7a4 (rca_create_default_context+0x5c) 28830000      cmpli   cr1,r3,0x0
(dbx)0xd0c5f7a4 (rca_create_default_context+0x5c) 28830000      cmpli   cr1,r3,0x0
(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7a8 ($t589828)
0xd0c5f7a8 (rca_create_default_context+0x60) 41860014        beq   1,0xd0c5f7bc (rca_
create_default_context+0x74)
(dbx) registers
  $r0: 0xd0c5f7a0  $stkp: 0x201d850c   $toc: 0x2007c68c    $r3: 0x201d915c
  $r4: 0x177db009    $r5: 0x00000001    $r6: 0x00000001    $r7: 0x201d7934
  $r8: 0x2012ced0    $r9: 0x6463652e   $r10: 0x20002314   $r11: 0x2012ca70
4)
(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7ac ($t589828)
0xd0c5f7ac (rca_create_default_context+0x64) 80610078          l   r3,0x78(r1)
(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7b0 ($t589828)
0xd0c5f7b0 (rca_create_default_context+0x68) 80630000          l   r3,0x0(r3)
(dbx)0xd0c5f7b0 (rca_create_default_context+0x68) 80630000          l   r3,0x0(r3)
(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7b4 ($t589828)
0xd0c5f7b4 (rca_create_default_context+0x6c) 28830000      cmpli   cr1,r3,0x0
(dbx) registers
  $r0: 0xd0c5f7a0  $stkp: 0x201d850c   $toc: 0x2007c68c    $r3: 0x16c9a094
  $r4: 0x177db009    $r5: 0x00000001    $r6: 0x00000001    $r7: 0x201d7934
ault_context+0x6c) 28830000      cmpli   cr1,r3,0x0
(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7b8 ($t589828)
0xd0c5f7b8 (rca_create_default_context+0x70) 40860030        bne   1,0xd0c5f7e8 (rca_
create_default_context+0xa0)
(dbx)(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f7e8 ($t589828)
0xd0c5f7e8 (rca_create_default_context+0xa0) 8082095c          l   r4,0x95c(r2)
(dbx) stepi
ult_context at 0xd0c5f800 ($t589828)
0xd0c5f800 (rca_create_default_context+0xb8) 30210060         ai   r1,r1,0x60
(dbx) stepi
stopped in rca_create_default_context at 0xd0c5f804 ($t589828)
0xd0c5f804 (rca_create_default_context+0xbc) 4e800020         br
(dbx) stepi
stopped in rca_expand_default_handle at 0xd0c5f8d0 ($t589828)
0xd0c5f8d0 (rca_expand_default_handle+0x98) 307f0014         ai   r3,r31,0x14
(dbx)(dbx) stepi
stopped in rca_expand_default_handle at 0xd0c5f8d4 ($t589828)
0xd0c5f8d4 (rca_expand_default_handle+0x9c) 4bfb2161         bl   0xd0c11a34 (pthread
_mutex_unlock)
(dbx) nexti
001    $r7: 0x201d7934
  $r8: 0x2012ced0    $r9: 0x6463652e   $r10: 0x20002314   $r11: 0x2012ca70
 $r12: 0x00003818   $r13: 0xdeadbeef   $r14: 0xdeadbeef   $r15: 0xdeadbeef
 $r16: 0xdeadbeef   $r17: 0xdeadbeef   $r18: 0x2009ca00   $r19: 0xdeadbeef
 $r20: 0xdeadbeef   $r21: 0xdeadbeef   $r22: 0xdeadbeef   $r23: 0xdeadbeef
 $r24: 0xdeadbeef   $r25: 0xdeadbeef   $r26: 0x200a6250   $r27: 0x200a0de4
 $r28: 0x2009ca6c   $r29: 0x20169f53   $r30: 0x10047f48   $r31: 0x20055610
 $iar: 0xd0c5f8e4   $msr: 0x0002d0b0    $cr: 0x84000020  $link: 0xd0c5f8d8
 $ctr: 0x0020d0b0   $xer: 0x0000001c    $mq: 0x00000000   $tid: 0x00000000
          Condition status = 0:l 1:g 6:e
        [unset $noflregs to view floating point registers]
in rca_expand_default_handle at 0xd0c5f8e4 ($t589828)
0xd0c5f8e4 (rca_expand_default_handle+0xac) 41860014        beq   1,0xd0c5f8f8 (rca_e
xpand_default_handle+0xc0)
(dbx)(dbx) stepi
001    $r7: 0x201d7934
  $r8: 0x2012ced0    $r9: 0x6463652e   $r10: 0x20002314   $r11: 0x2012ca70
 $r12: 0x00003818   $r13: 0xdeadbeef   $r14: 0xdeadbeef   $r15: 0xdeadbeef
 $r16: 0xdeadbeef   $r17: 0xdeadbeef   $r18: 0x2009ca00   $r19: 0xdeadbeef
 $r20: 0xdeadbeef   $r21: 0xdeadbeef   $r22: 0xdeadbeef   $r23: 0xdeadbeef
 $r24: 0xdeadbeef   $r25: 0xdeadbeef   $r26: 0x200a6250   $r27: 0x200a0de4
 $r28: 0x2009ca6c   $r29: 0x20169f53   $r30: 0x10047f48   $r31: 0x20055610
 $iar: 0xd0c5f8f4   $msr: 0x0002d0b0    $cr: 0x84000020  $link: 0xd0c5f8d8
 $ctr: 0x0020d0b0   $xer: 0x0000001c    $mq: 0x00000000   $tid: 0x00000000
          Condition status = 0:l 1:g 6:e
        [unset $noflregs to view floating point registers]
in rca_expand_default_handle at 0xd0c5f8f4 ($t589828)
0xd0c5f8f4 (rca_expand_default_handle+0xbc) 40860018        bne   1,0xd0c5f90c (rca_e
xpand_default_handle+0xd4)
(dbx)(dbx) stepi
stopped in rca_expand_default_handle at 0xd0c5f90c ($t589828)
0xd0c5f90c (rca_expand_default_handle+0xd4) 80810068          l   r4,0x68(r1)
(dbx) stepi
ult_handle at 0xd0c5f924 ($t589828)
0xd0c5f924 (rca_expand_default_handle+0xec) 30210050         ai   r1,r1,0x50
(dbx) stepi
stopped in rca_expand_default_handle at 0xd0c5f928 ($t589828)
0xd0c5f928 (rca_expand_default_handle+0xf0) 4e800020         br
(dbx) stepi
stopped in sec__id_parse_name at 0xd0c993ac ($t589828)
0xd0c993ac (sec__id_parse_name+0x17c) 4ffffb82       cror   0x1f,0x1f,0x1f
(dbx)(dbx) stepi
stopped in sec__id_parse_name at 0xd0c993ac ($t589828)
0xd0c993ac (sec__id_parse_name+0x17c) 4ffffb82       cror   0x1f,0x1f,0x1f
(dbx) stepi
a00   $r19: 0xdeadbeef
 $r20: 0xdeadbeef   $r21: 0xdeadbeef   $r22: 0xdeadbeef   $r23: 0xdeadbeef
 $r24: 0xdeadbeef   $r25: 0xdeadbeef   $r26: 0x200a6250   $r27: 0x200a0de4
 $r28: 0x2009ca6c   $r29: 0x20169f53   $r30: 0x10047f48   $r31: 0x20057b90
 $iar: 0xd0c993b8   $msr: 0x0002d0b0    $cr: 0x84000020  $link: 0xd0c993ac
 $ctr: 0x0020d0b0   $xer: 0x0000001c    $mq: 0x00000000   $tid: 0x00000000
          Condition status = 0:l 1:g 6:e
        [unset $noflregs to view floating point registers]
in sec__id_parse_name at 0xd0c993b8 ($t589828)
0xd0c993b8 (sec__id_parse_name+0x188) 28830000      cmpli   cr1,r3,0x0
(dbx)0xd0c993bc (sec__id_parse_name+0x18c) 41860008        beq   1,0xd0c993c4 (sec__id_par
se_name+0x194)
(dbx) stepi
stopped in sec__id_parse_name at 0xd0c993c0 ($t589828)
0xd0c993c0 (sec__id_parse_name+0x190) 480009f0          b   0xd0c99db0 (sec__id_parse
_name+0xb80)
(dbx) stepi
stopped in sec__id_parse_name at 0xd0c99db0 ($t589828)
0xd0c99db0 (sec__id_parse_name+0xb80) 80010b28          l   r0,0xb28(r1)
(dbx) stepi
stopped in sec__id_parse_name at 0xd0c99db4 ($t589828)
0xd0c99db4 (sec__id_parse_name+0xb84) 7c0803a6       mtlr   r0
(dbx) stepi
stopped in sec__id_parse_name at 0xd0c99db8 ($t589828)
0xd0c99db8 (sec__id_parse_name+0xb88) 30210b20         ai   r1,r1,0xb20
(dbx) stepi
stopped in sec__id_parse_name at 0xd0c99dbc ($t589828)
0xd0c99dbc (sec__id_parse_name+0xb8c) bbc1fff8         lm   r30,-8(r1)(dbx) stepi
stopped in sec__id_parse_name at 0xd0c99dc0 ($t589828)
0xd0c99dc0 (sec__id_parse_name+0xb90) 4e800020         br
(dbx) stepi
stopped in sec_id_parse_name at 0xd0c99e38 ($t589828)
0xd0c99e38 (sec_id_parse_name+0x4c) 80010048          l   r0,0x48(r1)
(dbx) stepi
stopped in sec_id_parse_name at 0xd0c99e3c ($t589828)
0xd0c99e3c (sec_id_parse_name+0x50) 7c0803a6       mtlr   r0
(dbx) stepi
stopped in sec_id_parse_name at 0xd0c99e40 ($t589828)
0xd0c99e40 (sec_id_parse_name+0x54) 30210040         ai   r1,r1,0x40
(dbx) stepi
stopped in sec_id_parse_name at 0xd0c99e44 ($t589828)
0xd0c99e44 (sec_id_parse_name+0x58) 4e800020         br
(dbx) stepi
stopped in do_GetBind at 0x100086a8 ($t589828)
0x100086a8 (do_GetBind+0x248) 80410014          l   r2,0x14(r1)
(dbx)

[10/20/93 public]

Mike Burati was able to reproduce the sec_id_parse_name failure in a
non-DFS program on HP-UX.

The problem appears to be due to rpc_ns_entry_expand_name() failing when
asked to expand "/.:/"; a recent change to the CDS library by Alan Peckham
appears to be responsible.

[10/20/93 public]
Alan has agreed to attempt to fix this tomorrow.  Since the erroneous return
reported is actually coming from the DNS restriction change and that is where
the fix will be made, I've reassigned this to Alan and CDS.

[10/21/93 public]
This is what I get for conforming to spec...
fixed. :^)

[11/11/93 public]
fixed->closed.



CR Number                     : 9124
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : Fix previous submit error
Reported Date                 : 10/14/93
Found in Baseline             : 1.0.3
Found Date                    : 10/14/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/cdsstrtosimple.c
Sensitivity                   : public

[10/14/93 public]
Yesterday I  tested on the hp one of the fixes Alan did submited today.
To get it to work I had to add a typedef to one of the file and forgot
to tell Alan before telling him to submit. I'll make the same temporary
fix in the build tree now so as not to brteak the build tonight and talk
to Alan about where it is supposed to pick up the typedef tomorrow.

[10/15/93 public]
Above fix ok.



CR Number                     : 9115
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : 
Short Description             : delete child /testchild in
killer fails
Reported Date                 : 10/14/93
Found in Baseline             : 1.0.3
Found Date                    : 10/14/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : test/directory/cds/cp_childpointer.tests
Sensitivity                   : public

[10/14/93 public]
This was likely caused during a fix to a previous bug that had to do
with test operations on childpointers. The line

delete child /testchild 

failes because the line

create child /testchild clearinghouse /clearinghouse1

gets removed if no clearinghouse1 is specified on the command line.

[10/14/93 public]
There are actually two bugs against create/delete child tests here
(1) The delete is not stripped together as create by -noch
    Fixed by assocating the testdirectory name with clearinghouse
(2) The childpoint (parent directory) is not in same directory
    as the subdirectory pointed by the childpoint so that delete child
    will delete the childpoint in default/primary clh and the create 
    child will try to create childpoint in clh2 if there is -ch1 clh1
    -> test failed
    Fixed by creating the secondary directory in clh1 to make sure
    both childpoint and its subdirectory be created in same clh.

[11/11/93 public]
fixed->closed.



CR Number                     : 9107
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test
Short Description             : dacl tests use linktarget as attribute name of CDS_LinkTarget
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.3
Found Date                    : 10/13/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : dacl_reads.sh, dacl_creates.sh,
dacl_deletes.sh, dacl_modifies.sh
Sensitivity                   : public

[10/13/93 public]
ohara@sni-usa.com reports that SNI burlington needs this. so I make
it priority 1 in order to fix asap.

[10/13/93 public]
Fixed and closed



CR Number                     : 9105
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test/directory/cds/cdstest.c
Short Description             : cdstest.c will not compile
because of type mismatch.
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.3
Found Date                    : 10/13/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : cdstest.c
Sensitivity                   : public

[10/13/93 public]

In cdsCvtTsToStr, the second parameter is expected to be of unsigned char *.

In function getopqsimplelen(), the return from cds_simpletoopq() is
assigned to a var of type char *. cds_simpletoopq() actually return
unsigned char *.

In function strtots, cdsCvtTsToStr() is passed with second parameter of
type char *. cdsCvtTsToStr() actually expects the 2nd parameter of type
unsigned char *.

Suggested fix is to declare the vars as unsigned char * in both cases.

[10/27/94 public]
This got fixed during code cleanup.



CR Number                     : 9091
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : Target machine specific file in common src directory
Reported Date                 : 10/12/93
Found in Baseline             : 1.0.3
Found Date                    : 10/12/93
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : unix_qarith.c
Sensitivity                   : public

[10/12/93 public]

The unix_qarith.c file is located in two locations in the src tree, it is 
located in the common location: src/directory/cds/library and is also located
in the target machine specific location: src/directory/cds/library/RIOS.

It should probably only be located in the target machine specific leg
since the two files are virtually identical.

[7/11/94 public]
Fixed in 7/7/94 drop.  Removed from library, only in target_machine.



CR Number                     : 9054
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : ChooseCh
Short Description             : part of a fix was abandoned for choosing ch with confidence high
Reported Date                 : 10/6/93
Found in Baseline             : 1.0.3
Found Date                    : 10/6/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : src/directory/cds/child/clerk_choose_ch.c
Sensitivity                   : public

[10/6/93 public]

A part of the original IBM fix to choose the correct clearinghouse
when cds confidence is set to high never made it into the OSF source.

The comment in the HP src/directory/cds/child/clerk_choose_ch.c is:

* Revision 1.1.3.2  1992/12/08  16:49:35  grober_j
* 	Apply a fix made by IBM to cause the cds confidence to work
* 	correctly.  Otherwise, the clearinghouse used was always the
* 	one last set by the "set preferred clearinghouse" command.

The abandoned part of the fix is in the "new" code in ChooseCh():

	  /*
	   * This first time through, see if the last clearinghouse we contacted
	   * is on the list and if so use it.  This is a hack at an attempt to
	   * get applciations that do creates/updates to contact the same
	   * replica
	   */
new>	  /* BUG FIX - If the confidence is high, do not use the last clearinghouse. */
new>	  if (cnt == 0 && EXT8(th_p->clerkConf) != CO_high) {
old<	  if (cnt == 0) {
	    for (best_p = *list_pp; best_p != NULL_CHlist; best_p = best_p->ch_next)
	      if (EQ_ObjUID(th_p->lastch, best_p->ch_id))
		goto foundit;
	  }

The rest of the clearinghouse selection code does not explicitly test
for confidence set to high, so I am uncertain whether this part of the
fix is essential.  But it deserves a careful review.

[6/26/94 public]
fixed in 6/23 drop



CR Number                     : 9053
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : includes/Makefile
Short Description             : cds text files do not properly overwrite existing objects
Reported Date                 : 10/6/93
Found in Baseline             : 1.0.3
Found Date                    : 10/6/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : src/directory/includes/Makefile
Sensitivity                   : public

[10/6/93 public]

The files cds_attributes, cds_globalnames, and dnsclerk.h
are not properly overwritten in the object tree when rebuilt
into an existing tree.  The copy fails with a permission
error.  Adding removes in src/directory/cds/includes/Makefile
fixes the problem and has been tested on hppa/hpux:

	# Rules for building ?ds_attributes

	cds_attributes : cds_attributes.txt
new>		${RM} ${_RMFLAGS_} $@
		$(CP) ${cds_attributes.txt:P} $@

	cds_globalnames : cds_globalnames.txt
new>		${RM} ${_RMFLAGS_} $@
		$(CP) ${cds_globalnames.txt:P} $@

	dnsclerk.h : dnsclerk_cds.h
new>		${RM} ${_RMFLAGS_} $@
		$(CP) ${dnsclerk_cds.h:P} $@

[10/07/93 public]
Fixed and closed.



CR Number                     : 9045
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cds.mk
Short Description             : cdsbrowser won't build in normally installed hpux environment
Reported Date                 : 10/5/93
Found in Baseline             : 1.0.3
Found Date                    : 10/5/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : src/directory/cds/cds.mk
Sensitivity                   : public

[10/5/93 public]

The cdsbrowser won't build in a normally installed hpux environment.
The current osf environment allows it to build with the addition of
links in the environment for include files and libraries.  Trivial
additions to cds.mk would fix this problem and make these custom links
in the environment unnecessary.

A suggested changes to HP800_INCFLAGS and HP800_LIBFLAGS in the
cdsbrowser part of cds.mk are included below:

.if ${MAKESUB}=="directory/cds/cdsbrowser/"

old< HP800_LIBFLAGS  ?= -L/usr/lib/X11R5
new> HP800_INCFLAGS  ?= -I/usr/include/Motif1.2 -I/usr/include/X11R5
new> HP800_LIBFLAGS  ?= -L/usr/lib/Motif1.2 -L/usr/lib/X11R5

HP800_LIBS      ?= ${HP_LIB_DCE} -lMrm -lXm -lXt -lX11 ${HP_LIB_COM}

[10/07/93 public]
Fixed and closed.



CR Number                     : 8694
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa,i486,rs6000
S/W Ref Platform              : hpux,osf1,aix
Component Name                : cds
Subcomponent Name             : src/directory/cds/control
Short Description             : dce_config failed to set ACLs
Reported Date                 : 9/27/93
Found in Baseline             : 1.0.3
Found Date                    : 9/27/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : config/dce_config
Sensitivity                   : public

[9/27/93 public]

Output from dce_config:

	S:****** Setting ACLs for all new namespace entries...
	ERROR: acl object not found (dce / sec)
	Unable to bind to object /.:/sec-v1
	ERROR:   Error while setting ACLs on new namespace entries.
	  Message from acl_edit:
	  ERROR: acl object not found (dce / sec)
	Unable to bind to object /.:/lan-profile
	ERROR: acl object not found (dce / sec)
	Unable to bind to object /.:/sec

[10/4/93 public]
I fixed this last week and somehow forgot to close ot report. 
The cdscp program isn't as forgiving as it used to be on attribute
names. Changed all instances of class-> CDS_Class and 
classversion-> CDS_ClassVersion.



CR Number                     : 8689
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 8524
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : examples
Short Description             : Functional test files
installed in wrong place
Reported Date                 : 9/24/93
Found in Baseline             : 1.0.3
Found Date                    : 9/24/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : test/directory/cds/dcesx/Makefile
Sensitivity                   : public

[9/24/93 public]
The following files are installed in
install/<target_machine>/dcetest/dce1.0 instead of
install/<target_machine>/dcetest/dce1.0/test/...  This is probably a
problem with the value of IDIR in the makefile

examples/dcesx
examples/dcesx/dcesx0.idl
examples/dcesx/dcesx1.idl
examples/dcesx/dcesx2.idl
examples/dcesx/dcesx3.idl
examples/dcesx/dcesx4.idl
examples/dcesx/dcesx5.idl
examples/dcesx/dcesx6.idl
examples/dcesx/dcesx7.idl
examples/dcesx/dcesx8.idl
examples/dcesx/dcesx9.idl
examples/dcesx/dcesx0.acf
examples/dcesx/dcesx1.acf
examples/dcesx/dcesx2.acf
examples/dcesx/dcesx3.acf
examples/dcesx/dcesx4.acf
examples/dcesx/dcesx5.acf
examples/dcesx/dcesx6.acf
examples/dcesx/dcesx7.acf
examples/dcesx/dcesx8.acf
examples/dcesx/dcesx9.acf
examples/dcesx/dcesx.c
examples/dcesx/dcesx

[9/24/93 public]
Fixed by removing the IDIR in the Makefile so that it can be installed
in the corresponding position of install tree. Closed



CR Number                     : 8668
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : Should abbreviations be
allowed while inputing attribute names
Reported Date                 : 9/23/93
Found in Baseline             : 1.0.3
Found Date                    : 9/23/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/control/cds.cdt
Sensitivity                   : public

[9/23/93 public]
Some commands allow abbreviation of attribute names during entity creation. 
Create link  for example,allows abbreviation of CDS_LinkTarget and 
CDS_LinkTimout to CDS_LinkTa and CDS_LinkTi respectively. This is 
documented behavior. The problem is that cdscp soes this by making both 
attribute names keywords for the create link command and keywords are case 
insensitive. As a result cds_linktar and cds_linktim will work just as
well. CDS stores them correctly as case sensitive CDS_LinkTarget and 
CDS_LinkTimeout The show link command does not allow abbreviations and 
it enforces case sensitivity, therefore the same names to this command will
fail. I believe being allowed to input the attribute name in a case 
insensitive manner is no different than being allowed to misspell them and is 
just plain wrong. I don't believe that allowing abbreviations of these 
name is necessarily wrong, as long as case sensitivity is maintained, but 
I'm uncomfortable with it. We need to look at this behavior more closely 
in the 1.1 timeframe.

[9/23/93 public]
This might be a no-op as these issues are addressed in dcecp.

[9/24/93 public]
This problem can be solved by making the attribute names in question to be
case sensitive and also keep the abbreviation feature. This fix is actually
a side effect of fix of OT#7558. Closed.



CR Number                     : 8658
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : Allow cdsadv restart w/o having to restart server
Reported Date                 : 9/22/93
Found in Baseline             : 1.0.3
Found Date                    : 9/22/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/server/ta_adver.c
					     ./directory/cds/library/*/cds_mbx.c
Sensitivity                   : public

[9/22/93 public]
In CR#6698, this reasonable enhancement was requested. I have broken
it out here to avoid holding up the advertiser bug mentioned therein.

The problem is that the server has no way to know when its connection
with the advertiser has been lost. In order to fix this, the mailbox
routines have to be altered so that the server can be notified when
the connection drops, and the server should try to re-establish
the connection when this happens.

[5/26/94 public]
Fixed in my 5/25/94 drop:
Rework server code to recognize when the advertiser has gone
and initiate polling. This is done by putting up a read in a
seperate thread which will fail when the socket peer has gone.
The sys_openmbx() routine was changed to try the connection immediately
instead of waiting for the first write so that the ta_ping_advertiser()
loop can learn if the peer is there immediately.



CR Number                     : 8653
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/includes
Short Description             : Compiler warnings
Reported Date                 : 9/22/93
Found in Baseline             : 1.0.2
Found Date                    : 9/22/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : decnet_types.h cds_basic_types.h
Sensitivity                   : public

[9/22/93 public]

The licensees reported:

     decnet_types.h
     --------------
     At line 162:

     *q++ = (w & 0xFF00) >> 8; \
          SHOULD BE REPLACED WITH
     *q++ = (field8)((int)(w & 0xFF00) >> 8); \


     At line 175:

     *(field16 *)q = (w & 0xFFFF0000) >>16; \
          SHOULD BE REPLACED WITH
     *(field16 *)q = (field16)((int)(w & 0xFFFF0000) >> 16); \


     At lines 180 and 181:

     *q++ = (w & 0xFF000000) >>24; \
     *(field16 *)q = (w & 0x00FFFF00) >> 8; \
          SHOULD BE REPLACED WITH
     *q++ = (field16)((int)(w & 0xFF000000) >> 24); \
     *(field16 *)q = (field16)((int)(w & 0x00FFFF00) >> 8); \

I think the right fix for the above problem (warning indicating possible
complication when converting an int to an unsigned) is to declare w as
unsigned entity.

[09/22/93 public]

Without seeing the actual text of the compiler error messag, OSF should be
*extremeley* reluctant to insert semi-random casts in the existing code.
It does seem, however, that adding "(int)" is almost definitely the wrong
thing to do -- look at the masks and shifts being done to see that it
is unnecessary on all architectures -- and that perhaps making w some
form of unsigned is the right thing to do.

[6/16/94 public]
decnet_types.h has been renamed to moved to TARGET_MACHINE subdirectores.
We have supplied working code for the reference platforms.



CR Number                     : 8598
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : admin_gd
Short Description             : section 8.8 omits info on files to be backed up
Reported Date                 : 9/14/93
Found in Baseline             : 1.0.2
Found Date                    : 9/14/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 7_cds_clerkservch.gpsml
Sensitivity                   : public

[9/14/93 public]

Section 8.8 of the Administration Guide, entitled "Backing Up
Namespace Information", omits to mention the actual files that
should be saved in order to back up the CDS namespace. This
information should be added to this section.

[9/16/93 public]

Note that information about the specific files that should be
saved in order to back up CDS clearinghouses and the Security
registry can be found in Section 11.5 (i.e., section 5 of Chapter 11)
of the Porting Guide. This begins on page 11-76 of the 1.0.2 edition.

[9/17/93 public]

Oops, sorry. What I should have said is that information about what
to back up can be found in the source (shell scripts and checklists)
which Section 11.5 of the Porting Guide documents. So, in order to
learn which files actually have to be saved, you should go to

    <dce-root-dir>/src/test/systest/admin/cds

or

    <dce-root-dir>/src/test/systest/admin/sec

and examine the relevant file(s) there.

[9/24/93 public]

Assigned to Diana Goldfarb (Digital's CDS writer).

[11/8/93 -- verified by Alan Peckham]

There was no simple way to list all the filenames so we added the information 
that the backup needs to include files in DCELOCAL/var/directory/cds.

[11/15/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 8479
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : Administration Reference
Short Description             : OT/ODE training test
Reported Date                 : 8/18/93
Found in Baseline             : 1.0.3
Found Date                    : 8/18/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : admin_ref/man8cds/list_link.8cds
Sensitivity                   : public

[8/18/93 public]

As the beginning of an OT/ODE training exercise for Digital writers,
I (Marll McDonald) changed the line in the description section that begins with

"values equal to the ..."  to  "value equal to the ...".

A Digital writer will soon change this phrase back to its
original and correct value.

[10/14/93 public]

The training exercise did not take place.
The change to the description section was not made.
The file is correct.

[11/11/93 public]

Verified that this change was not made
and closed this bug.



CR Number                     : 8478
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : Administration Reference
Short Description             : OT/ODE training test
Reported Date                 : 8/18/93
Found in Baseline             : 1.0.3
Found Date                    : 8/18/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : admin_ref/man8cds/list_directory.8cds
Sensitivity                   : public

[8/18/93 public]

As the beginning of an OT/ODE training exercise for Digital writers,
I (Marll McDonald) changed the line in the description section that begins with

"the specified values.  A ..."  to  "the specified alues.  A ...".

A Digital writer will soon change this phrase back to its original
and correct value.

 [grinham 10/14/93 public]

  The training exercise did not take place.
  The change to the description section was not made.
  The file is correct.

[11/11/93 public]

Verified that this change was not made
and closed this bug.



CR Number                     : 8474
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : Administration Reference
Short Description             : OT/ODE training test
Reported Date                 : 8/18/93
Found in Baseline             : 1.0.3
Found Date                    : 8/18/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : admin_ref/man8cds/list_clearinghouse.8cds
Sensitivity                   : public

[8/18/93 public]

As the beginning of an OT/ODE training exercise for Digital writers,
I (Marll McDonald) changed the line in the description section that begins with

"equal to the specified ..."  to  "equals to the specified ...".

A Digital writer will soon change this phrase back to its
original and correct value.

[10/14/93 public]

  The training exercise did not take place.
  The change to the description section was not made.
  The file is correct.

[11/11/93 public]

Verified that this change was not made
and closed this bug.



CR Number                     : 8472
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : Administration Reference
Short Description             : OT/ODE training test
Reported Date                 : 8/18/93
Found in Baseline             : 1.0.3
Found Date                    : 8/18/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : admin_ref/man8cds/list_child.8cds
Sensitivity                   : public

[8/18/93 public]

As the beginning of an OT/ODE training exercise for Digital writers,
I (Marll McDonald) changed the line in the description section that begins with

"have values equal to ..."  to  "have value equal to ...".

A Digital writer will soon change this phrase back to its
original and correct value.

[10/14/93 public]

The training exercise did not take place.
The change to the description section was not made.
The file is correct.

[11/11/93 public]

Verified that change did not take place
and closed this bug.



CR Number                     : 8456
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : DceError message should put
out both code and message.
Reported Date                 : 8/16/93
Found in Baseline             : 1.0.3
Found Date                    : 8/16/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/cds_text.c
Sensitivity                   : public

[8/16/93 public]
When the error status code message is successfully looked up in the
message catalogue the numeric code should not be put out as part of
the error message.

[8/20/93 public]
cds_event_log_private should not tack on the numeric value of the status 
code to the error message. If the call to get_dce_text can't find the 
correct message in the catalogue it formats the unknown text message with 
numeric status code.

[11/11/93 public]
fixed->closed.



CR Number                     : 8432
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : parser_aid
Short Description             : parser_aid cc line not linking libs
Reported Date                 : 8/11/93
Found in Baseline             : 1.0.3
Found Date                    : 8/11/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/cds.mk
Sensitivity                   : public

[8/11/93 public]
The parser_aid_LIBS definition was recently removed from
src/directory/cds/control/Makefile.  This breaks the
build of parser_aid and cdscp on at least the RIOS platform.

[8/11/93 public]
Made parser_aid_LIB depend on building control as well as building
HP800. Also supplied defaults for othe platforms since the setting
had to be removed from the control Makefile

[11/11/93 public]
fixed->closed.



CR Number                     : 8425
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : message files
Short Description             : typo in message file
Reported Date                 : 8/9/93
Found in Baseline             : 1.0.2
Found Date                    : 8/9/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : cds.sams
Sensitivity                   : public

[8/9/93 public]
 In the followinf CDS message indceevt.cat, the first 'to' should be
'too'.
		   ----  ----  ----  ----  ----  ----
Cache size is to small to continue
		   ----  ----  ----  ----  ----  ----

[6/26/94 public]
fixed in 6/23 sams cleanup drop



CR Number                     : 8405
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : string copy can sometimes overwrite end of allocated buffer
Reported Date                 : 8/3/93
Found in Baseline             : 1.0.2
Found Date                    : 8/3/93
Severity                      : A
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/control/cprpc_clerk.c
Sensitivity                   : public

[8/3/93 public]
This problem only happens on a platform which packs structures
(no alignment restrictions). The cds_OpenChar_t structure
contains counted text with no null terminator, but
cp_define_cached_server() in cprpc_clerk.c allocates the
structure and then copies the string in WITH the null,
thus possibly overrunning the allocated structure and
corrupting memory.

[9/24/93 public]
Fixed.

[11/11/93 public]
fixed->closed.



CR Number                     : 8390
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : all
Short Description             : Purge unused status codes
Reported Date                 : 7/30/93
Found in Baseline             : 1.0.3
Found Date                    : 7/30/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : (below)
			directory/cds/adver/adver_transport.c
			directory/cds/control/report_parse_error.c
			directory/cds/includes/cdsmsg.awk
			directory/cds/includes/cdsmsg.msg
			directory/cds/includes/uc_parse.h
			directory/cds/library/dnsgetmsg.c
			directory/cds/server/dns_service_ncl.c
Sensitivity                   : public

[7/30/93 public]
The cds status code set includes 98 unused codes which should
be purged to insure sufficient space for future codes. These
codes are dinosaurs from previous DECdns implementations. I have
verified that they are not sent over the wire by any versions
of cds. I have suggested that we remove them now to insure
that no-one produces a zombie for us before 1.1 recycles them.

Files which would be affected:
 adver_transport.c	remove internal to external code mappings
 uc_parse.h		remove dead conditionals which reference dead status
 dns_service_ncl.c	remove internal to external code mappings
 dnsgetmsg.c		remove dead conditionals which reference dead status
 report_parse_error.c	remove dead conditionals which reference dead status

The codes to be removed:
 DNS_ADFORMAT
 DNS_ADVADVCOMP
 DNS_ADVADVERSEND
 DNS_ADVALLOC
 DNS_ADVBADFORMAT
 DNS_ADVBTIM
 DNS_ADVCACHEINIT
 DNS_ADVCANTIM
 DNS_ADVCHUID
 DNS_ADVCLIDUMPFAIL
 DNS_ADVCLILOADFAIL
 DNS_ADVDEFCONN
 DNS_ADVDEFLOAD
 DNS_ADVDEFOPEN
 DNS_ADVDEFPARSE
 DNS_ADVDESAGN
 DNS_ADVDEVCHECK
 DNS_ADVDUMPFAIL
 DNS_ADVETHERMEM
 DNS_ADVINVREQ
 DNS_ADVMBX
 DNS_ADVNICKUID
 DNS_ADVPRIV
 DNS_ADVRANDOM
 DNS_ADVRECBUF
 DNS_ADVRECREATE
 DNS_ADVREREAD
 DNS_ADVSETIMR
 DNS_ADVSOLCOMP
 DNS_ADVTIMERR
 DNS_ADVUIDNICK
 DNS_ADVWRITETHER
 DNS_AMBIGUOUSNICKNAME
 DNS_BADCHILD
 DNS_BADCLEARINGHOUSE
 DNS_BADDIR
 DNS_BADENTRY
 DNS_BADITEMBUFFER
 DNS_BADNICKNAME
 DNS_BAD_PACKET
 DNS_CACHELOCKED
 DNS_CANCELLED
 DNS_CANTADDTS
 DNS_CANTCOMMADVER
 DNS_CANTREADUIC
 DNS_CANTSTARTBACK
 DNS_CANTSTARTTA
 DNS_CL_OPEN
 DNS_DEFAULTFORMAT
 DNS_GBLSECERROR
 DNS_INVALIDFUNCTION
 DNS_INVALIDITEM
 DNS_INVALID_ATTRIBUTENAME
 DNS_INVALID_CLASSNAME
 DNS_INVALID_CLEARINGHOUSENAME
 DNS_INVALID_CONFIDENCE
 DNS_INVALID_CONTEXTNAME
 DNS_INVALID_DIRECTORYNAME
 DNS_INVALID_ENTRYNAME
 DNS_INVALID_GROUPNAME
 DNS_INVALID_LINKNAME
 DNS_INVALID_MEMBERNAME
 DNS_INVALID_NSNAME
 DNS_INVALID_OBJECTNAME
 DNS_INVALID_REPLICATYPE
 DNS_INVALID_TARGETNAME
 DNS_INVALID_WILDCARDNAME
 DNS_LINKED
 DNS_LOCALONLY
 DNS_MISSINGITEM
 DNS_MISSINGREPLICA
 DNS_NOCACHE
 DNS_NOCREATEDIR
 DNS_NOCREATEENTRY
 DNS_NOCREATEPSEUDO
 DNS_NOETHERNET
 DNS_NOINSERT
 DNS_NOMAPPING
 DNS_NOMEM
 DNS_NOMOREDATA
 DNS_NONSNAME
 DNS_NSRUNNING
 DNS_OPENNEWCLEARINGHOUSE
 DNS_OPENOLDCLEARINGHOUSE
 DNS_READCHILDREN
 DNS_READLINKS
 DNS_READOBJECTS
 DNS_READPSEUDO
 DNS_RESERVED
 DNS_SOLCONNECT
 DNS_SOLICITMBXFORMAT
 DNS_SOLOPEN
 DNS_SOLREADLINE
 DNS_SOLTIMEOUT
 DNS_SOLWAITING
 DNS_TESTFOUND
 DNS_TESTNOTFOUND
 DNS_UNKNOWNNICKNAME

[08/02/93 public]
This is a good thing, but I want to point out that you must be careful
how you do this.  You want to "free" the status codes in such a way that
you don't cause the remaining ones to get new values.  I know this isn't
a concern here -- you have the ".BASE" construct for just this kind of
thing -- but I want to call it out as a concern for all providers.

[9/24/93 public]
Fixed.

[11/11/93 public]
fixed->closed.



CR Number                     : 8350
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : provide locksmith mode for cds servers.
Reported Date                 : 7/22/93
Found in Baseline             : 1.0.3
Found Date                    : 7/22/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : security_lib.c
Sensitivity                   : public

[7/22/93 public]
The request is to provide a locksmith mode for cds servers to allow 
administrators to repair unusable acls.

[5/14/94 public]
done.



CR Number                     : 8338
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cdsbrowser
Short Description             : cdsbrowser doesn't compile
Reported Date                 : 7/22/93
Found in Baseline             : 1.0.1
Found Date                    : 7/22/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/cds.mk
Sensitivity                   : public

[7/22/93 public]
CDSbrowser does not compile.

[7/26/93 public]
Backed out Rich's changes. THey arn't needed if motif 1.2
is installed. Told build where to find Xt lib though.

[11/11/93 public]
fixed->closed.



CR Number                     : 8321
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : cannot find mgmt_com_act_decl.h & mgmt_com_act_init.h
Reported Date                 : 7/20/93
Found in Baseline             : 1.0.3
Found Date                    : 7/20/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/cds.mk
                                             dierctory/cds/control/Makefile
Sensitivity                   : public

[7/20/93 public]
/project/dce/build/dce1.0.3i/tools/at386/macho/gcc -B/project/dce/build/dce1.0.3i/tools/at386/macho/  -c    -D_SHARED_LIBRARIES j/sb/nb_486/src/directory/cds/cache -L/project/dce/build/dce1.0.3i/src/directory/cds/cache -L/project/dce/build/dce1.0.2a/src/directory/cds/cache -L/u1/devobj/sb/nb_486/export/at386/usr/shlib   -L/project/dce/build/dce1.0.3i/export/at386/usr/shlib   -L/project/dce/build/dce1.0.2a/export/at386/usr/shlib -L/usr/shlib -L/u1/devobj/sb/nb_486/export/at386/usr/lib     -L/project/dce/build/dce1.0.3i/export/at386/usr/ccs/lib -L/project/dce/build/dce1.0.2a/export/at386/usr/lib    -ldce   ../../../../../src/directory/cds/control/parse_command.c
../../../../../src/directory/cds/control/parse_command.c:52: mgmt_com_act_decl.h: No such file or directory
../../../../../src/directory/cds/control/parse_command.c:70: mgmt_com_act_init.h: No such file or directory
*** Error code 1 (continuing)

[07/19/93 public]
Moved parser_aid_LIBS definition for hp800 from control/Makefile to
cds/cds.mk makeing it dependent on TARGET_MACHINE==HP800. The OSF1
ld didn't know about -a.

[11/11/93 public]
fixed->closed.



CR Number                     : 8297
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cdsbrowser
Short Description             : Port cdsbrowser to Motif 1.2
Reported Date                 : 7/16/93
Found in Baseline             : 1.0.3
Found Date                    : 7/16/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/cdsbrowser/cds.c
Sensitivity                   : public

[7/16/93 public]
cdsbrowser builds against Motif 1.2 but does not work.  Well, okay, it core
dumps.  However, since this isn't really used for anything this is a
low-priority defect.

[7/16/93 public]
Core dump mean severity A.  Priority can stay the same.

[8/3/93 public]
This is related to OT 7974. The first part in OT 7974 about one translation
table being used for two widgets has actually been fixed in the new code.

The second part of OT 7974 is about the core dump, that is why it relates 
to this one.

Motif OT 5700 fixed (just today) two problems in Traversal.c and
TraversalI.c, but there is another problem is BaseClassP.h (motif header).

Here is the diff for BaseClassP.h fix:

*** /project/motif/build/motif1.2.1-i386/src/lib/Xm/BaseClassP.h        Sat
Mar 14 14:34:45 1992
--- BaseClassP.h        Tue Aug  3 12:46:47 1993
***************
*** 54,61 ****
                _XmSetFlagsBit((*_Xm_fastPtr)->flags, bit_field) ; \
            }
  #define _XmIsFastSubclass(wc, bit) \
        (_XmGetFlagsBit( ((*_XmGetBaseClassExtPtr((wc),XmQmotif))->flags), bit) \
!                                                         ? TRUE : FALSE)
  
  #define XmBaseClassExtVersion 2L
  
--- 54,62 ----
                _XmSetFlagsBit((*_Xm_fastPtr)->flags, bit_field) ; \
            }
  #define _XmIsFastSubclass(wc, bit) \
+     ( ( (*_XmGetBaseClassExtPtr((wc),XmQmotif)) ) ? \
        (_XmGetFlagsBit( ((*_XmGetBaseClassExtPtr((wc),XmQmotif))->flags), bit) \
!               ? TRUE : FALSE) : FALSE )
  
  #define XmBaseClassExtVersion 2L
  
--------------end of diff----------------------

Since this header file is used by many Motif .c files, essentially the
whole Motif library (libXm.a) should be rebuilt.

[8/9/93 public]
Raise the priority because several bugs(include A0) are blocked by this one.

[8/18/93 public]
The core dump is partly due to the bug#7974 translation table collision
and partly due to the NULL pointers reference bug in Motif 1.2 which
has been fixed in Motif 1.2.3.  Thanks Gary S. Pulsinelli at HP's hard
work to introduce a workaround for Motif 1.2 users in cdsbrowser code. 
The workaround is to initialize the base class extention record in cdsbrowser
code so that the pointers referenced by motif macros will not be NULLs.



CR Number                     : 8296
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : cds
Subcomponent Name             : cdsbrowser
Short Description             : Can't find Motif header files
on HP/UX
Reported Date                 : 7/16/93
Found in Baseline             : 1.0.3
Found Date                    : 7/16/93
Severity                      : A
Priority                      : 0
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds.mk
Sensitivity                   : public

[7/16/93 public]
CDSbrowser doesn't build on OSF's HP machines because our machines came
with Motif1.2 and X11R5.  The port dropped by HP was built on Motif1.1 and
X11R4.  We probably don't care about which is the "official" release level
of Motif/X for DCE so I propose the following fix in cds.mk:

<< proposed changes
>> current version of directory/cds/cds.mk

402,403c399,400
< HP800_INCFLAGS  ?= -I/usr/include/Motif1.2 -I/usr/include/Motif1.1
-I/usr/include/X11R4
< HP800_LIBFLAGS  ?= -L/usr/lib/X11R5 -L/usr/lib/Motif1.2 -L/usr/lib/X11R4
-L/usr/lib/Motif1.1
---
> HP800_INCFLAGS  ?= -I/usr/include/Motif1.1 -I/usr/include/X11R4
> HP800_LIBFLAGS  ?= -L/usr/lib/X11R4 -L/usr/lib/Motif1.1

[7/16/93 public]
Fix submitted.  This will only solve the *build* problem.  Cdsbrowser still
needs to be ported to Motif 1.2.

[11/11/93 public]
fixed->closed.



CR Number                     : 8286
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : cdsadv
Short Description             : acl_edit hangs because the cdsadv never responds
Reported Date                 : 7/16/93
Found in Baseline             : 1.0.2
Found Date                    : 7/16/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/adver/adver_clerk_event.c, directory/cds/adver/adver_sysdep_unix.c, directory/cds/cds.mk, directory/cds/child/clerk_listener.c, directory/cds/child/clerk_main.c, directory/cds/child/clerk_main.c, directory/cds/library/dnsbind.c, directory/cds/library/threads_lib.c, directory/cds/library/unix_mbx.c
Sensitivity                   : public

[7/16/93 public]

On an SVR4 system, running 3 instances of the following script on a 
one machine cell, will cause the scripts to hang after some period of
time:

	#!/bin/sh -f
	while true; do
		acl_edit /.:/sec/org -m user:semotte1:d
		acl_edit /.:/sec/org -m user:semotte1:
		date
	done

The reason for the hanging of the scripts is that the cdsadv never responds
the the requests of the clients (the accept(2) call in the advertiser
is not returning).  We have traced this problem to either a libsocket
or kernel bug with UNIX domain sockets.

Other SVR4 companies have reported similar problems with cdscp commands
hanging under stress.

We have found many problems with the implementation of UNIX domain sockets
on SVR4, thus rather than keep working with a buggy implementation, we
have decided to convert the local connection protocol between the CDS
client and the cdsadv and cdsclerk to use named stream pipes instead.
Again, this would only be for SVR4 platform, or any other that explicitly
enabled this.

The design of the solution is outlined like:
    Server:
        1)  The server creates a named stream pipe (/tmp/server).
        2)  The server then calls ioctl() to receive a file descriptor
            (I_RECVFD).
        3)  When a new file descriptor is received, the server uses
            this as the unique communication mechanism to the client.
    Client:
        1)  The client opens the named stream pipe of the server.
        2)  The client creates two new steam pipes with the pipe() system
            call.
        3)  The client then sends one end of the pipe to the the server
            with ioctl() (I_SENDFD).
        4)  The client then closes the server's named stream pipe.
        5)  The client then uses its end of the new pipe to communicate
            with the server.

[Fri Jul 16 09:18:22 EDT 1993 public]

I just wanted to note that the above outline is not meant to show exactly
what the code is going to do.  For example the cdsadv is really
going to use a named pipe called /opt/dcelocal/var/adm/directory/cds/cdsLib
(not /tmp/server), which is the same name that the current cdsadv uses
for the UNIX domain socket.  The code functionality will stay the same
as it is today;  no user-visible name changes at all.

[11/11/93 public]
fixed->closed.



CR Number                     : 8202
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/control/accum_cmd.c
Short Description             : cdscp dumps core when given an
input full of control characters and long enough
Reported Date                 : 6/25/93
Found in Baseline             : 1.0.2
Found Date                    : 6/25/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
directory/cds/library/cdsstrtosimple.c
directory/cds/control/names_actions_cds.c
Sensitivity                   : public

[6/25/93 public]

cdscp will dump core when you enter a long string full of control
characters. For example, try typing in 280 Ctrl-A and return.

The reason is:

In the routine accum_cmd() in the file cds/control/accum_cmd.c, the line

	while (class[*from] == WHITE) from++;

needs to change to 

	while (class[*from] == WHILE || class[*from] == CTL) from++;

Otherwise, the control character is not skipped, and the if the input is
long enough, the p pointer steps out of bound.

Also looking at the code, if I just type in one control character, the code
would get into infinite loop, since that wile loop will never increment
from, so it will hit the same code again and again. But the testing on AIX
1.0.2 does not show the infinite looping happening.

[08/02/93 public]
The above analysis is close but not quite right. The code is

	switch (code)
	    {
	    case WHITE:
	    case CTL:
		{
		*p++ = '\040';		/* one blank to output buffer */
					/* then advance to non white */
		while (class[*from] == WHITE) from++;
		break;
		}

p points to the output buffer and from points to the input. The function
accum_cmd is called only with the same buffer for both input and output
although this isn't clear from a look at accum_cmd. On either a WHITE
code or a CTL code *from = *p gets set to '\040' == WHITE in which case
from always gets incremented properly. Note that if you added the suggested
check to the while loop from would get incremented but the CTL characters
would not get replaced by '\040'. The case could be rewritten but I don't
want to change anything that is likely going to get replaced by i18N 
changes during 1.1 anyway. 

There is still a bug. It's not just control characters though. If you
pass more than SIMPLENAMEMAX characters of any ilk in as a simple name 
component cdscp core dunps. SIMPLENAMEMAX = 255. I'm tracking this down.

[08/27/93 public]
In function cds_strToSimple in module library/cdsstrtosimple.c check the 
parsed input simple component agaist DNS_STR_SNAME_MAX not 
DNS_OPQ_SNAME_MAX, The later is two bytes too large(sn_flag and sn_legth.

In function wildfullname in module control/names_actions_cds.c  check 
the length of the last simple name against DNS_STR_SNAME_MAX before the 
memcopy. Also make the size of he local wildsimplename array 1 larger than 
DNS_STR_SNAME_MAX to allow for the terminator.

[11/11/93 public]
fixed->closed.



CR Number                     : 8196
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 8886
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : cdsd won't start after server ip address change
Reported Date                 : 6/23/93
Found in Baseline             : 1.0.2a
Found Date                    : 6/23/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/server/unix_net.c
Sensitivity                   : public

[6/23/93 public]

The ip address of my core server was changed.  I changed the pe_site
file  and the cds_config file to match the new address and now cdsd hangs
when restarting dce (note that dce was shutdown cleanly before the address
change was made; I changed the pe_site and cds_config before restarting dce).


# sh /etc/rc.dce
Using En_US language for DCE services
Starting DCE daemons:  
        /opt/dcelocal/bin/rpcd
        /opt/dcelocal/bin/secd
        /opt/dcelocal/bin/sec_clientd
        /opt/dcelocal/bin/cdsadv
        /opt/dcelocal/bin/cdsd

.... waiting many many minutes (on a rios)

I am logging this as a B1 because the workaround (reconfiguring)
is unacceptable.

[9/20/93 public]

A partial fix to this defect was made in cds/server/unix_net.c.  The
failure occurred in net_re_export_ch() when testing the error code from the
unexport.  This change was submitted today.

More work is starting now to be able to force the server's background
thread to run and fixup old references.

[11/11/93 public]
fixed->closed.



CR Number                     : 8185
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cp_test.sh
Short Description             : cp_Test.sh uses arp to get IP address
Reported Date                 : 6/21/93
Found in Baseline             : 1.0.3
Found Date                    : 6/21/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : test/directory/cds/cp_test.sh
Sensitivity                   : public

[6/21/93 public]
While looking at files fo rthe SNI merge, I noticed that this test
(src/test/directory/cds/cp_test.sh) uses the 'arp' command to get
a host IP address.

This is agly and in fact wont work in cretain situations.  What
it should use is the utility program 'getip' which is installed
for dce_config in /opt/dcelocal/bin.

[8/26/93 public]
Replaced arp with getip. The arp has some depedency, like, In OSF/1
and AIX (BSD), it residents in /usr/sbin and /sbin, In HP_UX (SYS5),
it's in /etc. The getip is utility suplied by DCE and this scripts
will have to run after the DCE is installed anyway.



CR Number                     : 8176
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds server
Short Description             : cdsd/cdsclerk deadlocks.
Reported Date                 : 6/18/93
Found in Baseline             : 1.0.2
Found Date                    : 6/18/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/server/unix_net.c
Sensitivity                   : public

[6/18/93 public]

Cdsd can deadlock itself if too many of a certain type of call comes in at
once.

At least one of cdsd's manager routines (cds_CreateDirectory) can invoke an
outgoing call to the clerk which may require the clerk to turn around and
call back to the CDS server.

If cdsd has N call executor threads (default 10), and if it gets "N" of
these create directory calls in a burst, all of the call executor threads
will be tied up waiting for the clerk, and none of them will be able to
respond to the requests from the clerk.

One of our stress tests involves a ~50-machine cell all beating on a single
server; one failure mode we've seen is that cdsd hangs and is unresponsive
to all calls.

We managed to "catch it in the act" last night, and have a full traceback
of all of the cdsd stacks.  The most revealing bit of information is that
all 10 of the rpc__cn_call_executor threads have an essentially identical
traceback:

 0 cma__transfer_thread_ctx (cur_ctx = 0x4017ea58, new_ctx = 0x406539b8)

[123]
 1 cma__dispatch (old_tcb = 0x4017e9d8, save_context = 1, milliseconds = 0)
  [/lbuild/build/src/threads/cma_dispatch.c: 1134]
 2 cma__block (blocked_list = 0x40b95704, milliseconds = 0)

[664]
 3 pthread_cond_wait (cond = 0x404e0c98, mutex = 0x4006dcf0)

[3081]
 4 cds_read (Flags_p = 0x404e0c40)

[692]
 5 cds_send (Flags_p = 0x404e0c40, msg_p = 0x404e0cd8)

[283]
 6 cdsResolveName (Name_p = 0x40cfdb09, ResolvedName_p = 0x40d01b6d,
ResolvedNameLen_p = 0x404e0ca0, Flags_p = 0x404e0c40)

[112]
 7 clerk_resolve_name (directory_p = 0x40cfdb09, result_p = 0x40d01b6d)

[474]
 8 resolve_dirname (directory_p = 0x40cfdb09, result_p = 0x40d01b6d)

[1587]
 9 ta_create_dir (user_p = 0x4014e374, progress_p = 0x40cfdae8,
actual_cts_p = 0x4014e1d0)

[1904]
10 cds_CreateDirectory (h = 0x404fb6e0, progress_p = 0x4014d780,
actualcts_p = 0x4014dfb4, cds_status_p = 0x4014dfc4)

[2476]
11 op4_ssr (h = 0x404fb6e0, call_h = 0x40565230, elt = 0x4014d580, drep =
0x4045aec4, transfer_syntax = 0x4056542c, mgr_epv = 0x400470cc, st_p =
0x4014d540)    [cds_clerkserver_sstub.c: 4544]
12 rpc__cn_call_executor (arg = 0x40565230, call_was_queued = 1)

[248]

-----

Over in the clerk, there's ~10 threads calling clerkResolveName, all of
which are blocked making cds_ResolveName calls to the CDS server.

No doubt this could be reproduced easily in a smaller cell if you cut down
the number of call executor threads to 2 or 3..

I'm not familiar enough with the CDS server to state conclusively if there
are other manager routines with the same problem, but I wouldn't be
surprised if there were.

There are a couple of possibilities for solutions:

 1) (nasty, brutish, easy, and wrong): put hacks in
directory/cds/server/unix_stubs.c to cause the clerk_* calls to fail if
more than N-2 or N-3 of them are running in parallel.

This will at least keep cdsd from deadlocking, though it will blow out some
of the clients unless retry logic is added on the clients to deal cleanly
with a "come back in a second or two, I'm busy now", answer.

 2) (moderate difficulty) Use RPC thread pools to have cds_ResolveName calls
run by a separate pool of threads from cds_CreateDirectory.

	(more correctly, draw up a wall sized call graph for cdsd, and
segregate the cds_* rpc calls between those which are clerk-dependant, and
those which are non-clerk-dependant, split the two into different pools,
and write a callback function, set via rpc_server_set_thread_pool_fn, to
distinguish between the two based on interface uuid and operation
number.....).

 3) (massive rewrite) Fix cdsd to not go out to cdsclerk for anything it
needs to do from an RPC call executor thread...

[7/09/93 public]

Raising the Priority to A and Severity to 0.  At HP, we see this consistently
on cells of 50 or more nodes.  It will shortly be a severe problem for everyone
as cell sizes grow.  A reasonable solution will be needed quickly.

[7/13/93 public]

It seems rather unfortunate that there is not yet a "responsible engineer"
assigned for this defect..

[7/13/93 public]
Yep, oversight on my part. I had talked to  Alen Peckham on Friday when
this became an A0. He's looking into it and its now assigned.

[7/15/93 public]
I have a pragmatic solution for now. The thread limit of ten turns out
to be ludicrous, and was overlooked in porting, as our DECdns implementation
has a similar number which is used for the unix listen() value.
Dave Griffin says that our DECdns servers are only limited by the number
of file descriptors, and he has observed upwards of 300 peak threads
active on a server. I propose to increase the thread limit to at least
your fifty, if not a hundred, and look into the other options later
for DCE1.1

[7/15/93 public]

Each thread you create will use a stack of roughly 64K .

Are you sure you really want to allocate 6.4MB of virtual memory for thread
stacks (at least 100 pages of which must be touched at process start time)
in every invocation of cdsd?

[10/25/93 public]
Since this isn;t blocking our system tests in any way I'm making this
a P1. Paul Smyth at HP is testing Alan Peckham's fix to the problem
and submits wiil be allowed if any problems are discovered.

[10/29/93 public]
Reprinted without permission:

Date: Fri, 29 Oct 1993 11:43:56 -0400
From: smythe@apollo:.hp.com@dec:.lkg.us1rmc.dnet
To: peckham
Cc: jd@osf.org, smythe@apollo.hp.com
Subject: Successful Testing on Fix for CR8176 !!!

Alan -

I received the code you sent last night and put it to the
test: 9 clerks (6 create/delete dir, 3 show dir /.:)
beating simultaneously for 15 minutes on a cdsd server 
with 2 threads in the default pool, and 1 thread and
queue length 1 in each of the 2 private pools.  The
result: no hangs, no problems.  This is far more abuse
for many times longer than the original code or any
previous fix has withstood.  Time to celebrate.  Please
submit this code, and close the bug.  Many thanks for
all the work.

Paul

Thank you, Paul (and also Mark Karuzis), for the testing and advice!
Fixes submitted.

[11/11/93 public]
fixed->closed.



CR Number                     : 8163
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds
Short Description             : cdsd hangs
Reported Date                 : 6/16/93
Found in Baseline             : 1.0.2
Found Date                    : 6/16/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : back_parentpointer.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : open

[6/16/93 public]
Occasionally, the cdsd hangs when running our test programs. The
tests use the cdscp program and issue a whole bunch of commands.
A typical scenario is: create an additional clearinghouse on the
master CDS server. Create a directory and replicate it on the
additional clearinghouse. Issue the "cdscp set directory to new epoch
master" command to change the master replica of this directory to be
on the additional clearinghouse. Then create additional directories, 
objects, and softlinks in this directory. Issue the "cdscp set directory
to new epoch master" command to change the master replica to be on
the initial clearinghouse, delete all the objects, softlink and directories
and restart the operation sequence again.
The cdsd seems to hang when a checkpoint and a skulk (as a result
of ta_epoch; see stack trace of thread #3) seem to happen simultaneously.
The contents of the file_p for the initial clearinghouse indicates
the write_count to be 1, and the checkpoint was initiated because
the transaction log was more than 5 megs big. 
Simple investigation reveals that ta_epoch() causes the write count
to get incremented (as a result of get_stream). The skulk that
gets initiated as a result of it calls the clerk which does some 
kind of a modifyattribute() back to the server for the same initial
clearinghouse. The new modify attribute hangs because in the meantime
the checkpointing thread has changed the state of the file to
"file_ckpt" from "file_open" and is now waiting for all writes
to finish (in this case the ta_epoch call to return). However
the skulk initiated by the ta_epoch call is waiting for the file
state to change back to "file_open".
Following are some interesting thread stacks:
Thread #1
  [4] pthread_cond_wait(c = 0x18af38, m = 0x18af28)
  [5] get_stream(file_p = 0x18af20, stream_pp = 0xef39c960, function = 3, usage_mode = 1), line 381 in ", line 2014 in "src/directory/cds/server/db_common.c"
  [6] db_get_stream(file_p = 0x18af20, stream_pp = 0xef39c960, function = 3), line 448 in "src/directory/cds/server/db_common.c"
  [7] db_open_stream(chid_p = 0xef39da00, stream_pp = 0xef39c960, function = 3), line 549 in "src/directory/cds/server/db_common.c"
  [8] ta_modify_attribute(user_p = 0xef39d9bc, progress_p = 0x825bf8, type = 2, update_p = 0xef39c9e7, updlen = 108), line 127 in "src/directory/cds/server/ta_modify.c"
  [9] cds_ModifyAttribute(h = 0x494050, progress_p = 0xef39e198, type = '^B', update_p = 0xef39e9cc, cds_status_p = 0xef39ea28), line 1731 in "src/directory/cds/server/rpc_dispatch.c"
  [10] op18_ssr(h = 0x494050, call_h = 0x3ad1b0, elt = 0xef39ecac, drep = 0xef39ecdc, transfer_syntax = 0xef751adc, mgr_epv = 0x11a58c, st_p = 0xef39ecd4), line 7633 in "directory/cds/server/cds_clerkserver_sstub.c"
  [11] rpc__dg_execute_call(scall_ = 0x3ad1b0, call_was_queued = 0), line 793 in "src/rpc/runtime/dgexec.c"
  [12] cthread_call_executor(cthread = 0x179c30), line 604 in "src/rpc/runtime/comcthd.c"
Thread #2
  [4] pthread_cond_wait(c = 0x18af38, m = 0x18af28), line 2014 in "src/threads/pthread.c"
  [5] get_stream(file_p = 0x18af20, stream_pp = 0xef25c960, function = 3, usage_mode = 1), line 381 in "src/directory/cds/server/db_common.c"
  [6] db_get_stream(file_p = 0x18af20, stream_pp = 0xef25c960, function = 3), line 448 in "src/directory/cds/server/db_common.c"
  [7] db_open_stream(chid_p = 0xef25da00, stream_pp = 0xef25c960, function = 3), line 549 in "src/directory/cds/server/db_common.c"
  [8] ta_modify_attribute(user_p = 0xef25d9bc, progress_p = 0x6ad760, type = 3, update_p = 0xef25c9e7, updlen = 188), line 127 in "src/directory/cds/server/ta_modify.c"
  [9] cds_ModifyAttribute(h = 0x680450, progress_p = 0xef25e198, type = '^C', update_p = 0xef25e9cc, cds_status_p = 0xef25ea28), line 1731 in "src/directory/cds/server/rpc_dispatch.c"
  [10] op18_ssr(h = 0x680450, call_h = 0x54e0b8, elt = 0xef25ecac, drep = 0xef25ecdc, transfer_syntax = 0xef751adc, mgr_epv = 0x11a58c, st_p = 0xef25ecd4), line 7633 in "obj/sparc_solaris2/directory/cds/server/cds_clerkserver_sstub.c"
  [11] rpc__dg_execute_call(scall_ = 0x54e0b8, call_was_queued = 0), line 793 in "src/rpc/runtime/dgexec.c"
  [12] cthread_call_executor(cthread = 0x179ca8), line 604 in "src/rpc/runtime/comcthd.c"
Thread #3
  [4] pthread_cond_wait(c = 0x5b3f70, m = 0xef79cea8), line 2014 in "src/threads/pthread.c"
  [5] cds_read(Flags_p = 0x5b3f18), line 720 in "src/directory/cds/library/dnsread.c"
  [6] cds_send(Flags_p = 0x5b3f18, msg_p = 0x5d8e68 ""), line 301 in "src/directory/cds/library/dnssend.c"
  [7] cdsIntRmAttrValue(Name_p = 0x59e37a, AttrName_p = 0xef31a5d8, EntryType = cdsChildPtr, ValueType = 10, Value_p = 0xef31a5e5 "", ValueLen = 159, CTS_p = 0xef31a5c9, Flags_p = 0x5b3f18), line 170 in "src/directory/cds/library/dnsrmattr
value.c"
  [8] clerk_modify_attribute(name_p = 0x59e37a, type = 3, update_p = 0xef31a5c8, update_len = 188), line 1085 in "src/directory/cds/server/unix_stubs.c"
  [9] back_parentpointer_check(stream_p = 0x1b16b8, now_p = 0xef31b7a0), line 446 in "src/directory/cds/server/back_parentpointer.c"
  [10] skulk_dir(stream_p = 0x1b16b8), line 1396 in "src/directory/cds/server/back_skulk.c"
  [11] skulk_sched(stream_p = 0x1b16b8), line 1176 in "src/directory/cds/server/back_skulk.c"
  [12] ta_epoch(user_p = 0xef31de9c, dir_p = 0xef31dd0a, secondary_p = 0x6a0508, readonly_p = 0x6a050d), line 734 in "src/directory/cds/server/ta_epoch.c"
  [13] cds_NewEpoch(h = 0x6a83b8, directory_p = 0xef31e678, readonlies_p = 0x4b9fb0, secondaries_p = 0x1784d8, cds_status_p = 0xef31ea8c), line 917 in "src/directory/cds/server/rpc_dispatch.c"
  [14] op20_ssr(h = 0x6a83b8, call_h = 0x677408, elt = 0xef31ecac, drep = 0xef31ecdc, transfer_syntax = 0xef751adc, mgr_epv = 0x11a58c, st_p = 0xef31ecd4), line 8053 in "obj/sparc_solaris2/directory/cds/server/cds_clerkserver_sstub.c"
  [15] rpc__dg_execute_call(scall_ = 0x677408, call_was_queued = 0), line 793 in "src/rpc/runtime/dgexec.c"
  [16] cthread_call_executor(cthread = 0x179c58), line 604 in "src/rpc/runtime/comcthd.c"
Thread #4
  [4] pthread_cond_wait(c = 0x322028, m = 0xef79cea8), line 2014 in "src/threads/pthread.c"
  [5] cds_read(Flags_p = 0x321fd0), line 720 in "src/directory/cds/library/dnsread.c"
  [6] cds_send(Flags_p = 0x321fd0, msg_p = 0x6373a0 ""), line 301 in "src/directory/cds/library/dnssend.c"
  [7] cdsIntRmAttrValue(Name_p = 0x1adbf8, AttrName_p = 0xee178b05, EntryType = cdsObj, ValueType = 14, Value_p = 0xee178b12 "", ValueLen = 79, CTS_p = 0xee178af6, Flags_p = 0x321fd0), line 170 in "src/directory/cds/library/dnsrmattrvalue.
c"
  [8] clerk_modify_attribute(name_p = 0x1adbf8, type = 2, update_p = 0xee178af5, update_len = 108), line 1085 in "src/directory/cds/server/unix_stubs.c"
  [9] back_pseudodir_updates(stream_p = 0x289d88, file_p = 0x1d7e98, chset_p = 0x689f30), line 1649 in "src/directory/cds/server/back_skulk.c"
  [10] background(file_p = 0x1d7e98), line 991 in "src/directory/cds/server/back_ground.c"
Thread #5
  [4] pthread_cond_wait(c = 0x18af38, m = 0x18af28), line 2014 in "src/threads/pthread.c"
  [5] db_checkpoint(file_p = 0x18af20), line 213 in "src/directory/cds/server/db_checkpoint.c"
  [6] db_checkpoint_memory(file_p = 0x18af20), line 511 in "src/directory/cds/server/db_checkpoint.c"
Thread #6
  [3] pthread_Read(fd = 8, buf = 0xee18dd50 "", buflen = 16), line 1786 in "src/threads/pthread_socket.c"
  [4] dns_reader(), line 921 in "src/directory/cds/library/dnsread.c"
It appears that threads #1 through #4 pair up (I mean threads #1 and #2 
seem to be executor threads for work that was initiated by threads #3 
and #4). The deadlock seems to be a result of threads #1, #3 and #5 or 
probably #2, #3 and #5.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `open'

[6/16/93 public]
Filled in Interest List CC with `srivas@transarc.com'

[8/17/94 public]
Added change that sets the stream type to read so the checkpoint will continue.



CR Number                     : 8127
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : admin_ref
Short Description             : The CDS doc bugs identified in
the DCE Release Notes, Section 1.10.4.2, should be fixed in the DCE
Administration Reference
Reported Date                 : 6/9/93
Found in Baseline             : 1.0.2
Found Date                    : 6/9/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 1.0.2a
Affected File(s)              : create_directory.8cds, show_cell.8cds
Sensitivity                   : public

[6/9/93 public]

[6/23/93 public]
Fixed the following files in the admin_ref:

	create_directory.8cds: reworded and reformatted the "Privileges
           Required" section
	show_cell.8cds: fixed typo. The technical material was already
           up-to-date.

[08/17/93 public]
Closed bug.



CR Number                     : 8113
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 3881
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds/library/threads_lib.c
Short Description             : dthread_current_thread still
not thread safe
Reported Date                 : 6/8/93
Found in Baseline             : 1.0.2
Found Date                    : 6/8/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : threads_lib.c
Sensitivity                   : public

[6/8/93 public]

OT 3881 was opened against thread unsafe problem of
dthread_current_thread() function. I think Alan Peckham is the one who
fixed it.

The change was to add an additional LOCK for the else statement to save the
last_dthread and last_pthread. 

Now I have a defect report from Cray saying there is also a slight window
in which call of pthread_equal_np() can be interrupted. Since there is no
lock there to prevent multiple threads from entering, it is not thread
safe.

I checked the 1.0.2 code again. Apparently, the call to pthread_equal_np()
was
also considered, but was decided not necessary for guard with the following
comments:

    /*
     * Decide which dthread is running.
     * Locking here would be overkill, as context changes can
     * slip in between the discovery and further reports.
     * This is the best we can do without getting into
     * the guts of the supporting threads code.
     */
    if (pthread_equal_np(this_pthread, last_pthread)) {
        /* fast exit if still in same thread */
        return(last_dthread);


But if we think again, we have to admit that there is a chance that 
context switch happens in that if statement. Without the
proper guard, it is possible that last_dthread returned is not what it
should be.

I tried to get some feedback from some cds developers, no reply. So here comes
the OT.

[8/4/94 public]
Fixed with a mutex lock around switch.



CR Number                     : 8089
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : directory/cds/child/clerk_bind.c
Short Description             : Incorrect status check in clerk_bind.c
Reported Date                 : 6/4/93
Found in Baseline             : 1.0.2
Found Date                    : 6/4/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/child/clerk_bind.c
Sensitivity                   : public

[6/4/93 public]

Full Description:

        The following code clerk_bind.c should be corrected as proposed:

        if (context_foreign)
          sec_rgy_site_close (context_foreign, &ignore_status);
        if (ignore_status != error_status_ok)
          secError (&evp, "sec_rgy_site_close", ignore_status);
        sec_rgy_site_close (context, &ignore_status);
        if (ignore_status != error_status_ok)
          secError (&evp, "sec_rgy_site_close", ignore_status);

        The second 'if' above should be encountered only if the first 'if'
        is true.

Repeat By:

        None

Proposed Solution:

        if (context_foreign) {
          sec_rgy_site_close (context_foreign, &ignore_status);
          if (ignore_status != error_status_ok)
            secError (&evp, "sec_rgy_site_close", ignore_status);
        }
        sec_rgy_site_close (context, &ignore_status);
        if (ignore_status != error_status_ok)
          secError (&evp, "sec_rgy_site_close", ignore_status);

[06/16/93 public]
Broken as stated, fixed as suggested. I have the fix in my sandbox 
checked out against 1.0.3i. As soon as the tree opens I'll submit it.

[jd 07/29/93 public] 
Fixed as stated again and submited.

[11/11/93 public]
fixed->closed.



CR Number                     : 8083
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test
Short Description             : dacl_ test problems
Reported Date                 : 6/2/93
Found in Baseline             : 1.0.2
Found Date                    : 6/2/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : Makefie, dacl_reads.sh, dacl_deletes.sh dacl_testing.sh dacl_replicas.sh, dacl_start.sh, dacl_setup.sh
Sensitivity                   : public

[6/2/93 public]
In dacl_creates.sh, the machine name, barge, is hardcoded in.  This causes
ACLs to fail since it looks for the wrong hostname.  Barge should be
replaced with the variable 'hostname.'

In both the dacl_reads and dacl_modifies tests, the NLS path is hardcoded
in.  It is not the correct path for everyone, and should be set in the
system configuration, not the testcase.  This causes messages to not be
found.  

dacl_reads.sh - the last line is missing the ending quote.

dacl_deletes.sh
  a.  Two echoes say, "Delete the object and directory", but the code
deletes the object and link, not the directory.

  b.  An echo says, "cdscp delete dir /.:/dacl_deletes."  The code actually
does cdscp delete dir /.:/dacl_deletes/dir1.  It attempts to delete dir1.
It makes sense that this is the directory which should be deleted, being
consistent with the use of obj1 and lnk1.  However, permissions have not
been changed for dir1 yet.  The echo should be changed and the permissions
should be set for dir1.

  c.  Before trying to prove the directory cannot be deleted, administer
permissions should be removed from the parent directory.  Currently
administer permissions are being granted.

  d.  Going on the assumption that dir1 was the directory to be tested, the
permissions should be changed after the failing delete in order to confirm
successful deletion of dir1.  Then as cleanup the dacl_deletes directory
should be deleted.  It now just deletes dacl_deletes and does not test
delete of dir1.


dacl_testing.sh calls dacl_replicas.sh passing chd (default clearinghouse)
instead of ch1, the clearinghouse which is specified in teh dacl_replicas
prolog.  Also, the dacl_replicas prolog shows the call as replicasreplicas
instead of dacl_replicas.

dacl_replicas.sh
  a.  At the point where create replica is expected to succeed, all the
required permissions are in place except that the server principal does not
have write permission to the clearinghouse that stores the replica being
designated as the new master replica (ch1) for Set Dir to New Epoch.  (In
this case, ch1 is both the current master and the designated new master.)
Therefore, Set Dir to New Epoch Master will fail after the successful
Create.  The next Set Dir to New Epoch Master is expected to fail and
should since it is using ch2 as the clearinghouse that stores the
designated new master, and the server principal does not have write
permission.  However, the test then does an acl_edit to give the server
principal write permission to ch1 in an attempt to make the command
succeed.  The permission to ch1 should be granted before the first Set Dir
to New Epoch, and later write should be granted to ch2 to enable the last
Set Dir to New Epoch to succeed.

  b.  Unless I grant wc permission for notroot on ch2, I encounter errors
in the testcase.  Perhaps dacl_start.sh should do this grant on ch2 rather
than chd.  See previous difference in how dacl_testing calls dacl_replicas
and how the dacl_replicas prolog says it should be called - ch1 versus chd.

[8/26/93 public]
Some problems stated above were fixed by sommerfeld, some problems are not
true, other problems and a few of new problems discovered during time working
on this bug has been fixed as,
(1) Hardcode problems were fixed by sommerfeld
(2) dacl_reads.sh: fixed the truncated last line.
(3) dacl_deletes.sh: - Fixed wrong eccho messaages 
		     - dir1 was removed totaly by sommerfeld
		     - delete permission is a must to delete a
		       dir
(4) dacl_testing.sh: - passed right parameters to dacl_replicas.sh now
		     - fixed dacl_replicas prolog 
(5) dacl_replicas.sh: - In order to have "set dir to new epoch" work, the
		        server principal needs write permission to each
		        clearinghouse where the replica type is changed to
		        read-only, not the clearinghose that stores new master
		        replica. See Admin. Ref. p2-58
		      - wc permission to ch2 cannot be granted on beginning
			of the replica test in order to have those failure
			tests.
(6) dacl_start.sh: this script is named as dacl_setup.sh in DCE Proting and
		   Testing Guide p4-21. It's easier to rename the script than
		   fix doc. So renamed it to dacl_setup.sh. And fixed
		   Makefile to match with the new name.



CR Number                     : 8056
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : admin_ref
Short Description             : RPC_ClassVersion not documented
Reported Date                 : 5/25/93
Found in Baseline             : 1.0.1
Found Date                    : 5/25/93
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_ref/man8cds/show_replica.8cds
Sensitivity                   : public

[5/25/93 public]

========================================================================

ERROR SYMPTOM (REQUIRED):
-------------------------

CDSCP - Show Replica, Show Directory documentation does not
list RPC_ClassVersion.

ENVIRONMENT (REQUIRED): Repeat sections as required
---------------------------------------------------
  Provide a brief description of hw/sw environment:

  Client machine:                   Server machine:
    System (AIX)                     System (OS/2)
    Build Level:                     Build Level:
      RPC - 45D                         RPC - SDK101.1207

    Build Level:                     Build Level:
      RPC - 45D                         RPC - SDK101.1207
      CDS - 45D                         CDS - SDK101.1207
      TIME- 45D                         TIME- SDK101.1207
      SEC - 45D                         SEC - SDK101.1207
      THRD- 45D                         THRD- SDK101.1207
    MACHINE NAME:                     MACHINE NAME:
      OS2DCE06                            OS2DCE44

DETAILED PROBLEM DESCRIPTION (REQUIRED):
----------------------------------------

Test Delete Replica, assertions CV1601.1 and CV1601.2, perform Show Replica
commands which cause the attribute names to be displayed.  Attribute
RPC_ClassVersion displays both on an AIX server and an OS/2 server, but it is
not listed in the documentation or shown in the examples.

The same is true for Show Directory.  It displays in real life but is not
documented.

REPRODUCE/VERIFY PROBLEM (REQUIRED):
------------------------------------

On the CDSCP command line, type:

cdscp show directory /.:/dir1

Where dir1 is an existing directory.

RELATED INFORMATION (OPTIONAL):
-------------------------------

The OSF documentation, DCE Administration Reference, Section 1, Cell Directory
Service (7/13/92 version) does not show RPC_ClassVersion as an attribute for
Show Replica or Show Directory in either the attribute lists or the examples,
but it displays on both an AIX and OS/2 server.  There are two possibilities:

1. The documentation is in error and should list the attribute and
   include it in the examples.

2. OS/2 and AIX should not display the attribute.
I am writing this defect against the documentation, but please
investigate where the problem lies before changing the documentation
since we really are not sure which is the correct answer.  Thanks!

P.S.
I executed CDSCP Show Replica immediately after refreshing my system in case
something had caused this attribute to be added, but it still displayed.

REFERENCES (OTHER RELATED DEFECTS, OTHER REQUIRED FIXES, ETC) (OPTIONAL):

-------------------------------------------------------------------------

[07/06/93 public]
Assigned this CR to Diana Goldfarb.

[11/18/93 public]

I consulted with Diana Goldfarb and Howard Melman (several times!)
about this CR.

The policy for the cdscp documentation is to describe
the attributes that cdscp can interpret (the CDS_ attributes).
Applications (including DCE) can also create their own attributes;
RPC_ClassVersion is an example of an application-defined attribute
(the DCE RPC NSI code defines it). cdscp can list application-defined
attributes but cannot interpret their values. The documentation for
cdscp show directory explains that the command will include all
attributes, including application-defined ones, in the command output.
The documentation for the cdscp show replica command does not. I have
added this explanatory text to the show replica man page, and am closing
this CR, since the documentation is now consistently correct with
respect to cdscp attribute display and attribute descriptions.

The rpccp program is currently the program to use to interpret
NSI attributes; for 1.0.3, the Application Development Guide,
Section 10.7 "DCE RPC Control Program" has been modified to
explain this in a little more detail.



CR Number                     : 8034
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : remove CDS_CHUpPointers attribute
Reported Date                 : 5/21/93
Found in Baseline             : 1.0.2
Found Date                    : 5/21/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : cds_attributes.txt,attribute_lib.c, attributes.h
Sensitivity                   : public

[5/21/93 public]
While talking to Mark Fox I learned that the CDS_CHUpPointers attribute is
now obsolute and "should probably be removed from the cds_attributes file"
I would recommend talking to Mark before actually removing it, it might not
be necessary, as it's just an OID.

1.3.22.1.3.35	CDS_CHUpPointers	ReplicaPointer

[06/14/93 public]
Mark, should I go ahead and remove the attribute. This bug will become
aged so I should either remove the attribute and close the bug or cancel
the bug....

[8/17/94 public]
Removed chuppointers.



CR Number                     : 8033
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : admin_ref
Short Description             : CDS_Cellname to CDS_NSCellname
Reported Date                 : 5/21/93
Found in Baseline             : 1.0.2
Found Date                    : 5/21/93
Severity                      : E
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_ref/man8cds/show_clearinghouse.8cdS
Sensitivity                   : public

[5/21/93 public]
There is a typo in the show_clearinghouse.8cds man page.  The name of the
attribute CDS_Cellname should be changed to CDS_NSCellname.

[07/06/93 public]
Assigned this CR to Diana Goldfarb.

[10/7/93]
Changed CDS_Cellname to CDS_NSCellname.

[11/10/93 public]

Verified changes in latest doc build and
closed this bug.



CR Number                     : 8031
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : admin_ref
Short Description             : show clearinghouse counters wrong
Reported Date                 : 5/21/93
Found in Baseline             : 1.0.2
Found Date                    : 5/21/93
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_ref/man8cds/show_clearinghouse.8cds
Sensitivity                   : public

[5/21/93 public]
In the man page for the cdscp command "show clearinghouse" are two lists of
attributes.  The second says:

   The following attributes and their values are displayed only when
   you use this command display all attributes and their values

You might want to change this to categorize the following list as counters
instead of attributes, as they are not modifible by the user, but rather
are generated by the server (clearinghouse).   This is the model that is
used for DTS (see show.8dts) where the terms are characteristics and
counters. 

In any case the second list of attributes in the show_clearinghouse.8cds
man page is apparently somewhat out of date.  Below is the output of a show
clearinghouse command:

               Read Accesses = 151
              Write Accesses = 8
         References Returned = 0
    Root Not Reachable Count = 0
       Data Corruption Count = 0
              Skulk Failures = 0
         Entry Missing Count = 0
       Upgrades Failed Count = 0
                     Enables = 1
                    Disables = 0


Below is what the documentation says (notice that they don't match):

      The following attributes and their values are displayed only when you
      use this command to display all attributes and their values:

      Data Corruptions    Specifies the number of times that the data
                          corruption event was generated

      Enable Counts       Specifies the number of times that the
                          clearinghouse was enabled since it was last
                          started

      Read Accesses       Specifies the number of read operations directed
                          to this clearinghouse

      References Returned Specifies the number of requests directed to
                          this clearinghouse that resulted in the return of
                          a partial answer instead of satisfying the
                          client's request

      Skulk Failures      Specifies the number of times that a skulk of a
                          directory, initiated from this clearinghouse,
                          failed to complete- usually because one of the
                          replicas in the replica set was unreachable

      Times Clearinghouse Entry Missing
                          Specifies the number of times the
                          clearinghouse entry missing event was generated

      Times Root Not Reachable
                          Specifies the number of times the root
                          lost event was generated

      Upgrades Failed Counts
                          Specifies the number of times that upgrades
                          failed

      Write Accesses      Specifies the number of write operations directed
                          to this clearinghouse

[07/06/93 public]
Assigned this CR to Diana Goldfarb.

[10/13/93 verified by Alan Peckham]
Changed "The following attributes..." to "The following counters..."
Also changed the listed counters to reflect the output of the show
clearinghouse command.

[11/10/93 public]

Verified changes on latest doc build and
closed this bug.



CR Number                     : 8030
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : cdsd hang in cds replication test
Reported Date                 : 5/21/93
Found in Baseline             : 1.0.2
Found Date                    : 5/21/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/server/db_common.c
Sensitivity                   : public

[5/21/93 public]

In a cds replication test which repeatedly uses the cdscp command sequence

	...
	clear clearinghouse /.:/foo_ch
	...
	create clearinghouse /.:/foo_ch     # re-enable /.:/foo_ch
	...

cdsd eventually got hung after running the above cdscp command sequence
for many iterations.

Further study showed that the "cdsd hang" problem was caused by the
process open file descriptors being exhausted.  Each invocation of
the command "clear clearinghouse" leaves one file descriptor in the
"OPEN" state for the clearinghouse's tlog file.  While the following
"create clearinghouse" opens the same tlog file again in a new file
descriptor.  The file descriptor opened by "clear clearinghouse" stays
open and will never be closed even the clearinghouse is deleted.
Repeated use of "clear clearinghouse" and "create clearinghouse" would
eventually consume all the available file descriptors allowed for cdsd.
When this happens, cdsd can no longer function properly.

A suggested fix is to force close the opened tlog file in db_clear() in
the module src/directory/cds/server/db_common.c

1852c1852
<         if (file_p->file_state != file_loaded)
---
>         if (file_p->file_state != file_loaded) {
1853a1854,1858
>
>             /* Make sure the tlog file is closed. */
>             sys_close(file_p->file_tlog_block);
>             file_p->file_tlog_state = TLOG_FILE_CLOSED;
>         }

I'd like to hear comments from the cds team regarding appropriateness
of this suggested fix.  With this fix, the above mentioned test has
been passed in an overnight test.

[07/30/93 public]
Called db_tlog_close instead. It does the above with the SERVER LOCK in
hand.
        if (file_p->file_state != file_loaded)
            {
            db_disable(id_p);
            db_tlog_close(file_p);
            }
Ran the above test and got much further than same test without the fix....

[11/11/93 public]
fixed->closed.



CR Number                     : 8022
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : CDS_LinkTimeout expiration
does not result into removal of the link.
Reported Date                 : 5/19/93
Found in Baseline             : 1.0.2b23
Found Date                    : 5/19/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_gd/directory/cds/10_cds_restruct.gpsml
Sensitivity                   : public

[5/19/93 public]

Licensee reported:

"Full Description:

        We create an object under a test directory and then create a link
        with expiration time set to 20 seconds beyond the creation time
        with the extension time set to 20 seconds. After the expiration+
        extension time we delete the target object and after some more time
        do cdscp show link. The link is supposed to be absent shows up.
        Remember that the convergence of the test directory is set to high."

I did some test with our 1.0.2b23 rios build and found the following:

If the extension is set to 0, the link is supposed to be deleted at the
expiration no matter whether the target exists or not. This does not
happen. After the expiration, the link is still there.

If the extension is non-zero: I delete the target, but the link is not
deleted at the next timeout. Eventually (I set extension to 30 seconds, but
it took about 20 minutes) the link did get deleted.

I think this behavior is wrong. The link should be removed at the
expiration time when extension is 0, or deleted at the next timeout after
the target is removed.

[5/20/93 public]

Doing a directory skulk will cause the link to be removed:

The target is removed, the link is expired, but "show link" indicates that
the link is still there. Now if I do a "set dir ... to skulk" and then
check the link again (show link command), the link is gone (deleted).

[5/26/93 public]
The expiration time on a soft link is merely an indication that the link can 
be deleted after that time (if the expiration time is zero). The amount of
time that can pass after the timeout expires and when CDS actually deletes
the link is somewhat indeterminate, but in the current implementation will
be limited to 12 hours or 24 hours for directories with low convergence.

This assumes that your network is not partitioned and that all clearinghouses
holding replicas of the directory containing the soft link are enabled.

If this is not clear from the docs, please turn this into a doc bug; otherwiseplease cancel.

[6/10/93 public]
Checked the dox -- Admin Guide, Cell Directory Service chapter, Creating
a Soft Link section:

The examples are misleading, implying that deletion occurs at the specified
time. It should say *not before* the specified time or *shortly after* the
specified time.

[10/07/93]
Changed explanations of examples to specify that deletion occurs after skulk.

[07/06/93 public]
Assigned this CR to Diana Goldfarb.

[11/10/93 public]

Verified changes in latest doc build and
closed this bug.



CR Number                     : 8009
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : how do you delete a cleared clearinghouse
Reported Date                 : 5/17/93
Found in Baseline             : 1.0.2
Found Date                    : 5/17/93
Severity                      : E
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : delete_clearinghouse.8cds, clear_clearinghouse.8cds, 10_cds_restruct.gpsml
Sensitivity                   : public

[5/17/93 public]

Somewhere in the documentation; either in chapter 10 of the Administration
Guide, or the appropriate page of the Adminstration Reference (describing
cdscp operations on clearinghouses) or both, there should be a note
stating that you must recreate a cleared clearinghouse (i.e reconnect it's
data files to the server) before you can successfully delete the
clearinghouse.

If you try to delete a cleared clearinghouse you will experience the
following.

clear clearinghouse /.:/tmp
cdscp> delete clearinghouse /.:/tmp
Failure in routine: cp_clrdel_clh; code = 282108920
Specified clearinghouse does not exist (dce / cds)

which can be rectified by doing the following

cdscp> create clearinghouse /.:/tmp
cdscp> delete clearinghouse /.:/tmp

[6/22/93 public]
Changed "Fix By Baseline" from 1.0.3 to 1.1.

[10/20/93 -- verified by Dave Griffin]

 Added information about recreating a cleared clearinghouse before
 deleting it.

[07/06/93 public]
Assigned this CR to Diana Goldfarb.

[11/15/93 public]

Verified changes in latest doc build and closed this CR.



CR Number                     : 7985
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cdsbrowser
Short Description             : Accessing internal rep of opaque GC object
Reported Date                 : 5/12/93
Found in Baseline             : 1.0.2
Found Date                    : 5/12/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds_display.c
Sensitivity                   : public

[5/12/93 public]

cds_display.c uses the following code in two places:

	if (gc->values.font != compfont->fid)
		XSetFont (XtDisplay(w), gc, compfont->fid);

but gc is supposed to be opaque and in fact the above does not compile
in some X implementations. The suggestion is to use XGetGCValues() to
get the relevant information from the GC:

	XGCValues values;

	if (XGetGCValues(XtDisplay(w), gc, GCFont, &values) == 0)
		? X ERROR ?
	if (values.font != compfont->fid)
		XSetFont (...);

[8/13/93 public]
This pug has been fixed and submitted by sommerfeld at 1993/06/10  19:16:10,
 * HISTORY
 * $Log:	c007985,v $
# Revision 1.7  94/03/15  16:41:38  nata
# added the Created HISTORY line
# 
# Revision 1.6  93/08/13  17:47:00  notuser
# changed fields: Status  Fixed In Baseline   new/changed/deleted note(s) [pwang 8/13/93 public]
# 
 * Revision 1.1.6.2  1993/06/10  19:16:10  sommerfeld
 *      Clean up include paths; treat GC as an opaque type.
 *      [1993/06/08  18:08:34  sommerfeld]



CR Number                     : 7978
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/cdsbrowser/cds.c
Short Description             : Uninitialized watch_cursor
filed causes X error
Reported Date                 : 5/11/93
Found in Baseline             : 1.0.2
Found Date                    : 5/11/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/cdsbrowser/cds.c
Sensitivity                   : public

[5/11/93 public]

The licensee reported:

"I ran into one more problem apparently relating to the cursor 
initialization which caused the following message:

--------
X Error of failed request:  BadCursor (invalid Cursor parameter)
  Major opcode of failed request:  2 (X_ChangeWindowAttributes)
  Resource id in failed request:  0x9093a31
  Serial number of failed request:  447
  Current serial number in output stream:  478
--------

It appears that the old cursor initialization code has been removed
because it was DEC specific. This apparently leaves the cursor 
uninitiliazed which may be a problem for some X implementations like
ours. I fixed this problem by adding the following (cdsbrowser/cds.c:374):

    w->browse.watch_cursor = XCreateFontCursor (XtDisplay(w), XC_watch);

This may not be a generic bug but it probably would be good to add
this initialization."


I talked to the licensee, who told me that they are using customer enhanced
MIT's X on sun.

Same code works fine for me onmy sparc with MIT's X11R5.

[8/10/93 public]
This bug appears a defect. The bug is consistently happened on SUN
workstation.  Changed the Severity and Priority to C and 1.

[8/13/93 public]
Fixed by put back the commented out initialization statment in Initialize()
w->browse.watch_cursor = XCreateFontCursor (display, XC_watch);
as weidong has suggested. And also removed some DEC dependent dead codes.



CR Number                     : 7974
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/cdsbrowser/pane.c
Short Description             : pane.c uses one copy of
translation table for two widgets.
Reported Date                 : 5/11/93
Found in Baseline             : 1.0.2
Found Date                    : 5/11/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/cdsbrowser/pane.c
Sensitivity                   : public

[5/11/93 public]

Full Description:

This is cdsbrowser with Motif 1.2.x. I am actually using 1.0.1 cdsbrowser code,
but there is little change in this part between 1.0.1 and 1.0.2,

There was a place where it dumpped core: when compiling the 
translation table for the new widgets. The current code has one static copy of
translation table ActionTables[], then two customer creatred widgets both have
it in their staic class initialization. The problem is, the translation table
will be compiled, probably in place, so when the second widget tries to compile
the same table again, it sees bad addresses. Core dumps.

The fix is to have two copies of the same translations.

With Motif 1.2.x, you probably will get another core dump in 
_XmGetNavigability. That is a problem in Motif. You need source to fix it.
Specifically, it is in src/lib/Xm/TraversalI.c, function
_XmGetNavigability(). There are two places in that function where pointer
er's content is being used without being checked first. er beingnon-NULL
does not mean that (*er) is non NULL too. The fix is to add checks in two
places for (*er).

Repeat By:

        Build cdsbrowser with Motif 1.2.x.

	Note: So far both AIX boxes and PMAX OSF/1 are having Motif 1.1.x
installed. That explains why it did not happen before. Our new platform 486
with OSF/1 has Motif 1.2.x installed. It will be a good test to run
cdsbrowser there. With X11R5, of course.

[8/13/93 public]
This bug has been fixed and submited by sommerfeld at 1993/06/10  19:16:52,
 * $Log:	c007974,v $
# Revision 1.6  94/03/15  16:42:21  nata
# added the Created HISTORY line
# 
# Revision 1.5  93/08/13  17:36:43  notuser
# changed fields: Status  Fixed In Baseline  Affected File(s)   new/changed/deleted note(s) [pwang 8/13/93 public]
# 
 * Revision 1.1.6.2  1993/06/10  19:16:52  sommerfeld
 *      created mullionActionsTable as a duplicate of ActionsTable due
 *      to problems using the same actions table for two widget classes
 *      (actions table becomes corrupted when the first class is initialized
 *      which causes error when attempting to initialize the second class)
 *      fixes OT7974
 *      [1993/05/25  14:17:24  smythe]
 *
 *      HP800 (cleanup) change #include <StringDefs.h> to
 *      #include <X11/StringDefs.h>
 *      [1993/04/09  15:57:09  sommerfeld]



CR Number                     : 7950
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : control
Short Description             : Error message misleading:
cdscp sh dir /.: =>Timeout occurred
Reported Date                 : 5/6/93
Found in Baseline             : 1.0.2
Found Date                    : 5/6/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b19
Affected File(s)              : includes/uc_parse.h
Sensitivity                   : public

[5/6/93 public]

Situation IS the tickets are expired; we tried these cmds the day after we
originally dce_logined so the time had expired.....

868> cdscp sh dir /.:
                        SHOW
                   DIRECTORY   /.../aix-09b.cell.austin.ibm.com
                          AT   1993-03-04-04:40:16
Error on entity: /.../aix-09b.cell.austin.ibm.com
Timeout occurred, operation not performed (dce / cds)
Function: dnsEnumAttr

 [[root]]@rhodan:/.../aix-09b.cell.austin.ibm.com/fs
<873> cdscp cre dir /.:/xxxxx
Error on entity: /.../aix-09b.cell.austin.ibm.com/xxxxx
Unable to communicate with any CDS server (dce / cds)
Function: dnsCreateDir

Dave Skeen says the msgs should be more similar to these explicitly stating
that the AUTH TICKET EXPIRED; rather than the implication above:

 [[root]]@rhodan:/.../aix-09b.cell.austin.ibm.com/fs
<875> cdscp sh server
Failure in routine: cprpc_get_binding_handle; code = 382312679
auth ticket expired (dce / rpc)
Failure in routine: cp_show_server; code = 382312679
auth ticket expired (dce / rpc)

[9/19/94 public]
Janet has a fix for this and it should come in.

[9/19/94 public]
library wasn't returning status code if import ctx failed.  This meant
expired ctx errors where not getting reported.



CR Number                     : 7940
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds
Short Description             : btree corruption in split_bucket_for_continuation
Reported Date                 : 5/6/93
Found in Baseline             : 1.0.2
Found Date                    : 5/6/93
Severity                      : B
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : db_btree.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : mason@transarc.com
Transarc Status               : open

[5/6/93 public]
The following code fragment in split_bucket_for_continuation() in 
directory/cds/server/db_btree.c is broken causing the btree to get 
corrupted.
    MOVE_entry_key(data_p, &ctx_p->insert_left);
    ctx_p->insert_left.key_down_p = new_bkt_p;
    replace_bkt(bkt_p, new_bkt_p);
    link_after(bkt_p, split2_bkt_p);
    if (ctx_p->insert_type == INSERT_2_KEY)
	link_after(bkt_p, split1_bkt_p);
    node_check(new_bkt_p);
    dns_free((char *)bkt_p);
    status = DNS_SUCCESS;
leave_split_bucket_for_continuation:
    return(status);
The two link_after macros should take new_bkt_p as their first
parameters instead of bkt_p, which is infact freed soon after.

[10/12/93 public]
Fixed.

Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `mason@transarc.com' 
Added field Transarc Status with value `open'

[11/11/93 public]
fixed->closed.



CR Number                     : 7851
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 9071
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : cds is allowing attributes on 
database entities to exceed MAXATTRIBUTES (which ='s 4000).
Reported Date                 : 4/30/93
Found in Baseline             : 1.0.2b22
Found Date                    : 4/30/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/server/cds_dacl.c
Sensitivity                   : public

[4/30/93 public]
During a test using Encina, cdsd was regularly core dumping when security_dacl()
was being called on the directory /.:/encina/log.  The problem was traced to
the COPY_bytes(invalue_p->dm_data, flatbuf.flat.buf, invalue_p->dm_length);
line in dacl_get() (function in cds_dacl.c).  The dm_length is = to 4070.
The attribute that is being read is a DNS_OBJECTACL.  It seems somehow the
attributes got past the MAXATTRIBUTE define.  This has corrupted the database
badly since any activity that takes place on the directory causes cdsd to
core dump.  I plan on looking at the add attribute value code to see if there
is any checks for going past MAXATTRIBUTE.

[9/29/93 public]
I need the test which causes this bug. Gcantor, would you please
send me the test ASAP. Thanks.

[10/08/93 public]
I was able to [reproduce]core dump cds by adding up to 69 users to 
an acl object associated with a cds directory.

The problem turned out to be that the Update_u got overflowed when
acl mgr tried to write overlarge acl (larger than MAXATTRIBUTE). What
cantor had observed was dacl_get tried to copy a attribute value 
whose size was larger than MAXATTRIBUTE to a buffer[MAXATTRIBUTE] 
in case the first write was happened to go through.

So right fix at this point is to enfore the MAXATTRIBUTE in acl mgr.

But this bug also echoes a more serious problem in cds: MAXATTRIBUTE 
is not checked and enforced so that some data structures bound by
MAXATTRIBUTE could be overflowed, such as AtomicValue[tu], Update_[tu], 
etc. I opened  OT#9071 to address this generic problem in 1.1 time frame.

Fixed and closed this one by enforing the MAXATTRIBUTE in acl mgr.



CR Number                     : 7811
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds/lib/deb_event_mgr.c
Short Description             : Possible deadlock in
deb_SetSilentRunning() in deb_event_mgr.c.
Reported Date                 : 4/27/93
Found in Baseline             : 1.0.2
Found Date                    : 4/27/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/deb_event_mgr.c
Sensitivity                   : public

[4/27/93 public]

Full Description:

	In cds/lib/deb_event_mgr.c, DNS_LOCK is defined to lock a mutex
deb_event__mutex, which is created with default attributes, so it is a fast
one.

	In function deb_SetSilentRunning(), deb_Trace() is called inside the
DNS_LOCK/DNS_UNLOCK block, but deb_Trace() itself uses DNS_LOCK again! For a
fast mutex, this is introducing a deadlock.


Repeat By:

	Code inspection.

[07/31/3 public]
Rather than make the DNS_LOCK mutex recursive I gave deb_SetSilentRunning
its own mutex. Could have placed DNS_END_LOCK DNS_LOCK around the call to
deb_Trace but it would have opened a small window.

[11/11/93 public]
fixed->closed.



CR Number                     : 7810
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/library/deb_event_mgr.c
Short Description             : invoking "cdsadv -d -e\*" can
result in deb_Trace locking an uninitialized mutex
Reported Date                 : 4/27/93
Found in Baseline             : 1.0.2
Found Date                    : 4/27/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/deb_event_mgr.c
Sensitivity                   : public

[4/27/93 public]

Full Description:

	The deb_Trace() routine in deb_event_mgr does not contain an
initialization of the deb_event__mutex. On most systems this will go
unnoticed because the initialization just sets the mutex to 0,
unfortunately on some this results in a core dump with no warning messages.

	adver_main.c calls InitializeRPC before InitializeUnix. deb_Trace()
is called in InitializeRPC, while InitializeUnix calls deb_TargetLog() and
deb_LoadEvents(). The latter two do call DNS_INIT.

Repeat By:

	verify that the initialization routing deb_event__init() is not
called before the mutex is used in deb_Trace, by putting a print statement
in both.

Proposed Solution:

	put DNS_INIT; in deb_Trace before the lock is used.

[07/31/93 public]
Added call to DNS_INIT before the DNS_LOCK in deb_Trace.

[11/11/93 public]
fixed->closed.



CR Number                     : 7765
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : AT time wrong for cdscp show dir
Reported Date                 : 4/20/93
Found in Baseline             : 1.0.2
Found Date                    : 4/20/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/control/emit_ref_hdr.c
Sensitivity                   : public

[4/20/93 public]

$ date
Tue Apr 20 17:53:45 EDT 1993
$ cdscp show dir /.:
Warning: you have no network credentials. All requests will be
unauthenticated.

                        SHOW
                   DIRECTORY   /.../eyeball_cell.qadce.osf.org
                          AT   1993-04-20-13:53:58
            RPC_ClassVersion = 0100
                          .  
                          .
                          .
emit_refhdr_atline used to do the conversion to local time because
format_utcabs_for_print didn't. Now the later uses utc_asclocaltime 
which does the conversion. The two lines that Joe Comuzzi added to 
emit_refhdr_atline to do the conversion are no longer needed and in 
fact cause the wrong time to be put out by format_utcabs_for_print.
I've got the change in my sandbox. We should be able to get this 
into the unintegrated tree for the 1.0.2 release.

[04/21/93 public]
Tried above fix and it seems to work. I can't close it until the 1.0.3 tree
opens and it gets submitted.....

diff emit_ref_hdr.c
   /project/dce/build/dce1.0.2/src/directory/cds/control/emit_ref_hdr.c

301c301,309
<       
---
> 
>     /* the follwoing two-line crock is a sneaky way to covert to local
  **
>     ** time, compliments of Joe Comuzzi. We do this so we can use the **
>     ** format_utcabs_for_print call next to guarantee a compatible DCE
  **
>     ** date-and-time format.                                          */
> 
>     utc_localtime ( &time, &tns, &tm_inacc, &ins, &now );
>     utc_mkgmtime ( &now, &time, tns, &tm_inacc, ins );
>

[06/16/93 public]
I have the fix for this in my sandbox checked out against 1.0.3i. As soon
as that tree opens for submits I'll submit it.

[08/02/93 public]
The above fix for this doesn't seem to work now but it seems to be a
problem in uts_asclocaltime translating GMT to the local time zone.
I beleive its a zoneinfo installation problem and its being looked into.
If it is a zoneinfo problem it should be a quick fix.

[08/02/93 public]
Placed initially described fix in place. My suspicions about the zoneinfo
installation problem were founded and that problem has been addressed.
AT time now works.

[11/11/93 public]
fixed->closed.



CR Number                     : 7759
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 4982, 7719
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : cdsclerk
Short Description             : Cannot use more than 2 clearinghouses on one host
Reported Date                 : 4/20/93
Found in Baseline             : 1.0.2
Found Date                    : 4/20/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/child/clerk_find_ch.c
					     directory/cds/child/clerk_gen_msg.c
					     directory/cds/child/clerk_tree_walk.c
					     directory/cds/includes/uc_child.h
Sensitivity                   : public

[4/20/93 public]

I have configured a one machine cell.  I then create a second
clearinghouse:

    cdscp create clearinghouse /.:/second_ch

which works fine.  I then run:

    acl_edit /.:/second_ch -l

which works fine.  I then create a third clearinghouse:

    cdscp create clearinghouse /.:/third_ch

which works fine.  I then run:

    acl_edit /.:/third_ch -l
which gives:

    ERROR: acl object not found (dce / sec)
    Unable to bind to object /.:/third_ch

In addition, I execute:

    cdscp list clear /.:/\*

which gives:

                            LIST
                   CLEARINGHOUSE   /.../itchy.cells.sni-usa.com
                              AT   1993-04-20-16:05:38
    itchy_ch
    second_ch
    third_ch

So it seems like cds knows there is a third clearinghouse, but
no operations can access it.  Also, if I try:

    cdscp set dir /.:/ to skulk

I get:

    Error on entity: /.../itchy.cells.sni-usa.com
    Unable to communicate with any CDS server (dce / cds)
    Function: dnsSkulkDir

This is very similar to the problems outlined in OT #4982.

[07/29/93 public]
I am able to create and list the acls on four clearinghouses

[07/29/93 public]
Bounced myself out of the editor. 
I saw able to create and list the acls for four clearinghouses on 
the hp platform. The skulk worked to. However on the OSF1/486 I was
able to create four or more but could only list acls on the first
three, yes that's three not two.

[Fri Jul 30 09:25:02 EDT 1993 public]

On the MX300I reference platform, I was able to create 5 clearinghouses
and list the acls on all of them.  I was also able to skulk the root
directory.

[09/28/93 public]
DEC is supposed to have a fix for this. It's on Alan's list.

[10/14/93 public]
We had discovered that during clearinghouse creation,
the server performs clerk calls which the clerk may
attempt to route to a newly created ReadOnly before
it has been fully skulked. In particular, the Towers
attribute in the clearinghouse object has not been
skulked to all replicas. The skulk fails. The clearinghouse
is in a funny state. A null Tower set may be cached.
When the clerk is trying to locate a clearinghouse,
it tries to read those Towers from a replica and gets
back a NullSet...NOCOMMUNICATION. The pragmatic fix for this
is to create a loop which will try reading the clearinghouse
object first at medium and then at high if no Towers are returned.
Fixed.

[11/11/93 public]
fixed->closed.



CR Number                     : 7749
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : security attribute 1.3.22.1.5.1 not in cds_attributes
Reported Date                 : 4/19/93
Found in Baseline             : 1.0.2
Found Date                    : 4/19/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : src/directory/cds/includes/cds_attributes.txt
Sensitivity                   : public

[4/19/93 public]
The security server is now exporting a new attribute 1.3.22.1.5.1 to the CDS
namespace, but it's not being interpreted by cdscp because it's not in 
/etc/dce/cds_attributes.  In src/security/server/rs/rs_ns.c it's named
rs_ns_c_attrib_rep_id.  It should also have an entry in cds_attributes.txt in
src/directory/cds/includes.

[07/30/93 public]
Added 
1.3.22.1.5.1    SEC_RepUUID             byte

[11/11/93 public]
fixed->closed.



CR Number                     : 7742
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds/adver/adver_clerk_event.c
Short Description             : comments for cach to disk
flush interval in adver_clerk_event.c is confusing
Reported Date                 : 4/16/93
Found in Baseline             : 1.0.2
Found Date                    : 4/16/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : adver_cache.c
Sensitivity                   : public

[4/16/93 public]

Full Description:

	Comments in dnsInitAdver() in adver_clerk_event.c says that the
interval for cache to flush to disk is 30 minutes, but the code does for a
12 hours period. In dnsclerk_create() in adver_service_ncl.c, 12 hours
DNS_CLERK_DEF_FLUSH_CACHE_VAL is set for dns_clerk.cl_cache_flush_interval.

	Please fix the comment, or change the code.

[5/18/94 public]
This has changed.  Old comments removed.



CR Number                     : 7670
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 4136
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : Unused files in directory/cds/control.
Reported Date                 : 4/8/93
Found in Baseline             : 1.0.2b21
Found Date                    : 4/8/93
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : none
Sensitivity                   : public

[4/8/93 public]
The following files seem not to be used (no reference to them
in directory/cds/control/Makefile or in full build log):

	src/directory/cds/control/dnscp_help.c
	src/directory/cds/control/failure.c
	src/directory/cds/control/format_nodeid_for_print.c
	src/directory/cds/control/format_piboolstatus_for_print.c
	src/directory/cds/control/format_timestamp_with_time.c
	src/directory/cds/control/mgmt_parsing.c
	src/directory/cds/control/prsfil.c
	src/directory/cds/control/qarith_lib.c
	src/directory/cds/control/replica_support.c
	src/directory/cds/control/seconds_to_vmsdeltatime.c
	src/directory/cds/control/spawn_ncl.c
	src/directory/cds/control/stubs.c
	src/directory/cds/control/symsub_actions.c
	src/directory/cds/control/validate_tower.c

[4/8/93 public]
We are aware of these files and will be defuncting them as part of the
1.1 code cleanup effort.

[6/13/94 public]
These files are gone.



CR Number                     : 7647
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10570
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : cdsclerk
Short Description             : spinning cdsclerk
Reported Date                 : 4/5/93
Found in Baseline             : 1.0.2
Found Date                    : 4/5/93
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b12
Affected File(s)              : calock.c,cache.h,cafreelist.c
Sensitivity                   : public

[4/5/93 public]

BUILD:	bl21
CONFIG:	3 pmax cell with sec,cds,dts and dfs
DETAILS:
	Rebooting core server - root cdsclerk starts spinning within a
	half hour of restart of dce. Note the time taken by root cdsclerk
	in this ps taken 1 hour after running rc.dce.

root@dce5> ps laxww|grep cdscl
    0   318   226 218  -9   0 11.0M 2.05 -      R    ??        48:45.65 /opt/dcelocal/bin/cdsclerk -U root -u 0 -m 0
    0   343   226   0 -13   0 8.93M   0K sv_sem IW   ??         0:01.86 /opt/dcelocal/bin/cdsclerk -U DNS$SERVER -u 0 -m 0
    0   348   176  75 -13   0 7.72M 444K spipe  S  + pts/1      0:00.39 grep cdscl

	First attempt at cdscp show dir succeeded but 1 hour later, cdscp
	hangs.

	Three cdsclerk core files exist from last Friday (3 reboots ago). All
	of these core files reveal the following stack trace:

#0  0x73057bdc in memcmp ()
#1  0x480824 in InsertAttr ()
#2  0x4810f8 in CAInsertAttribute ()
#3  0x4222c8 in parseReadAttributeResponse ()
#4  0x40bc30 in sendToWalkTree ()
#5  0x42314c in clerkReadAttribute ()
#6  0x405720 in clerk_request ()
#7  0x7333b70c in th_death ()

	I have cdsclerk event files in ~notuser/gmd/cdsclerk_spin_events.

[4/6/93 public]

I am told the event logs are normal for a busy clerk - interesting since
the cell was idle. I have reconfigured and the problem has not re-occurred.
I am downgrading since the previous configuration was an "upgrade" (new
binaries and libdce slapped into a b20 config) that may not have been valid.

[05/04/93 public]
Weidong Wang at osf passed the following information on to me. It may
point to cma as the guilty party but I think the jury is still out. The
ot is currently assigned to me and I will leave it that way untill I get a
chance look at the connection.

 After running cdsadv and cdsclerk for an extended period of time, it
 appears that they are attempting to consume all the available cycles.
 
 It looks like the timeout value being passed back from
 cma_check_timer_queue()
 through the parameter is 0.00000 seconds, but the return value for the 
 function is true. The true result keeps the null_thread from doing an 
 indefinate wait. As a result cdsadv spins forever with a zero timeout
 on the select.

[5/4/93 public]
FWIW, we found a similar problem due to a bug in pthread_delay_np(). When
given a timeout of 24 hrs or more, it started spinning and chewed up all of
the CPU. This occurred in the clerk and advertiser and was fixed at Digital
by a simple fix to sec_init.c.

[5/5/93 public]
The similar problem was reported by Hal Computers, with their SVR4 port,
based on 1.0.2b19. Here is somemore information:

"I think the code we are using is from b19. I am continuing to investigate the
problem. I have found that cma__check_timer_queue returns either 0.000 or
0.333 seconds as the timeout back to cma___null_thread(). It seems to
alternate between these two values. This means that we are effectively
polling with a 0.333 second wait on io."

"I have run the same test on our port of DCE to the Sun and to SVR4. The times
returned from cma__check_timer_queue appear to be the same for both ports
but the SVR4 machine appears to be bogged down by cdsadv while the Sun
has no noticable performance degradation. This could be something in the
SVR4 fairness algorithm. "

[06/14/93 public]
I've looked at the timer code and determined that returning true with it's
parameter pointing to a delta of 0 is ok. The true means that the timer
queue was not empty at the time of the call. What it does not indicate 
is whether a timer for some thread actually went off. A thread in the queue
whose timer will not go off for another 10 seconds will also result in true
being returned. The null_thread code is the only thing that is actually 
interested in the parameter. If there is something on the queue but no
timer has expired then the null thread tells cma__io_available to set the
select timer to the delta to the next timer expiration as determined by
the parameter returned from cma__check_timer_queue. If there is something
in the queue and a timer has expired the parameter returned by 
cma__check_timer_queue is set to 0 which results in  cma__io_available 
doing non-blocking checks for pending io. This allows the thread
whose timer expired to run whether any io is found pending or not.
Soooooooooooo the problem is not the cma__check_timer_queue parameter 
being incorrectly set. Too bad, it would have been an easy fix. Still
investigating.

[09/22/93 public]
This phenomena seems to have disappeared - after 24 hours on the 486,
in the following config:
        CELL:   shades_cell
        CONFIG: sec, cds, dts server, dfs client
        BUILD:  1.0.3 build available 9/13/93

the cdsadv and root cdsclerk have been equally busy but not outrageously so:

[shades]:/# ps laxww|grep cds
    0   192     1   9 -13   0 8.59M 2.12 event  S    ??          20:04.03 /opt/dcelocal/bin/cdsadv
    0   196     1   1 -13   0 10.3M 3.36 event  S    ??           7:23.74 /opt/dcelocal/bin/cdsd
    0   202   192  12 -13   0 9.50M 2.88 event  S    ??          20:42.84 /opt/dcelocal/bin/cdsclerk -U root -u 0 -m 0
    0  9169   192  13 -13   0 8.84M 2.80 event  S    ??           0:21.96 /opt/dcelocal/bin/cdsclerk -U DNS$SERVER -u 0 -m 0

That is, both have accumulated ~20 minutes of run time in 24 hours. Canceling.

[10/04/93 public]
It lives. Diane is seeing this on reboot. Paul Ellis also has a system 
test that seemed to gety into the same state. He uncovered an important 
clue. When he removed the cache the clerk stopped spinning. I'll let 
him expand on his findings in this report. The following is a copy of
the report data from 8902 that Diane just opened. That will become
a dup of this.

During testing of dfs I've had to do numerous dce.cleans followed by
a clean shutdown of the system.  When I bring the system back up
and run rc.dce, some processes, namely dts and fxd hang waiting
for information from cds.  Frequently I see the cdsclerk chew up
cpu time when this happens.  The last time this happened (fxd hung
waiting for cds), I killed the cdsclerk, and was then able to
successfully restart fxd. 

I have also put the fxd under a debugger when this is happening and
It hangs in dfs_GetJunctionName, which makes numerous rpc_ns_profile*
calls.

Dts will sometimes return with an error "no such entry"

[10/04/93 public]

Using the DCE 1.0.3 Nightly Build from 09/30 on the server and a PMAX client
(i.e. dce9) running DCE 1.0.2a, I got the client cdsclerk to start spinning
while running the dcerpbnk system test.  I was unable to stop and restart
the client, everytime dtsd attempted to start the cdsclerk would start
spinning again.  I was able to fix the client by deleting the CDS cache.

This is how I fixed my spinning cdsclerk on dce9:

	kill -9 <cdsclerk PID>	# dce.clean could not kill cdsclerk
	/etc/dce.clean
	cd /opt/dcelocal/var/adm/directory/cds
	mv cds_cache.########## cds_cache.##########.BAD
	/etc/rc.dce

If CDS server and client can not broadcast you need to do the following
command:

	cdscp define cached server <CDS Server Hostname> tower \
	ncadg_ip_udp:<CDS Server IP Address>

Example:

	cdscp define cached server west tower ncadg_ip_udp:130.105.201.10

[10/05/93 public]

The error messages logged in /usr/adm/syslog/user.log on dce9 mentioned above
were:

Oct  4 10:17:55 dce9 syslog: dtsd.dce:  DCE error: Failure in binding_import_nex
t - import servers:  Error with socket (dce / cds)
Oct  4 10:17:56 dce9 syslog: dtsd.dce:  DCE error: Error requesting time from se
rver : No credentials cache file found (dce / krb)
Oct  4 10:17:56 dce9 syslog: dtsd.dce:  DCE error: Failure in rpc_ep_unregister
for dtscp interface:  connection request rejected (dce / rpc)
Oct  4 10:17:56 dce9 syslog: dtsd.dce:  DCE error: Failure in rpc_ep_unregister:
  connection request rejected (dce / rpc)
Oct  4 10:17:56 dce9 syslog: dtsd.dce:  DCE error: Failure in TService interface
 rpc_ns_binding_unexport:  Context handle not valid (dce / sec)
Oct  4 10:17:56 dce9 syslog: dtsd.dce:  DCE error: Failure in rpc_ns_profile_elt
_remove TService entry name : Context handle not valid (dce / sec)

[10/12/93 public]

Here is a stack trace of cdsclerk after I was able to attach to
it (sorry I'm not a cds whiz so I don't know what else to look at):


t
 0 ReadAttr (name_p = 0x80c3705c, attname_p = 0x40085f98, context_p = 0x40085fa
6, max_size = 16344, contents_p = 0x400bc684, whole_p = 0x400bc680, seconds = 3
7195, stale_p = 0x400bc610)    [/project/dce/build/dce1.0.3/src/directory/cds/c
ache/caattributes.c: 192]
 1 CAReadAttribute (user_p =   00000000, seconds = 37195, entryname_p = 0x40085
f54, type_p = 0x40085f95, attname_p = 0x40085f98, context_p = 0x40085fa6, max_s
ize = 16344, contents_p = 0x400bc684, whole_p = 0x400bc680, stale_p = 0xct/dce/build/dce1.0.3/src/directory/cds/child/clerkreadattribute.c: 887]
 3 clerkReadAttribute (th_p = 0x400ec044)    [/project/dce/build/dce1.0.3/src/d
irectory/cds/child/clerkreadattribute.c: 948]
 4 clerk_request (ll_p = 0x40085c50)    [/project/dce/build/dce1.0.3/src/direct
ory/cds/child/clerk_client.c: 525]
 5 TMEM@libdce + 0x00217b5c (0x40085e40, 0x7aae408c, 0x400155f8, 0x7)
 6 TMEM@libdce + 0x000d411c (0x400155f8, 0, 0, 0)
- 6 TMEM@libdce + 0x000d411c (0x400155f8, 0, 0, 0)
 7 TMEM@libdce + 0x000e429c (0x400155f8, 0, 0, 0)
 8 TMEM@libdce + 0x000e3edc (0x400155f8, 0, 0, 0)
 9 ReadAttr (name_p =   00000000, attname_p =   00000000, context_p =   0000000
0, max_size = 0, contents_p =   00000000, whole_p =   00000000, seconds = 0, st
ale_p =   00000000)    [/project/dce/build/dce1.0.3/src/directory/cds/cache/caa
ttributes.c: 192]
>


------------stack trace a few minutes later-----------

(file unknown): TMEM@libc +0x0009a6c8: (line unknown)
t
 0 TMEM@libc + 0x0009a6c8 (0x400c1430, 0x400c1430, 0x40085dd8, 0x3fd2)
 1 ReadAttr (name_p = 0x80c3705c, attname_p = 0x40085f98, context_p = 0x40085fa
6, max_size = 16344, contents_p = 0x400bc684, whole_p = 0x400bc680, seconds = 3
7195, stale_p = 0x400bc610)    [/project/dce/build/dce1.0.3/src/directory/cds/c
ache/caattributes.c: 192]
 2 CAReadAttribute (user_p =   00000000, seconds = 37195, entryname_p = 0x40085
f54, type_p = 0x40085f95, attname_p = 0x40085f98, context_p = 0x40085fa6, max_s
ize = 16344, contents_p = 0x400bc684, whole_p = 0x400bc680, stale_p = 0x400bc61
0, linked_p = 0x400ec170)    [/project/dce/build/dce1.0.3/src/directory/cds/cac
he/caattributes.c: 441]
 3 clerkReadAttributeCache (th_p = 0x400ec044, stale_p = 0x400bc610)    [/proje
ct/dce/build/dce1.0.3/src/directory/cds/child/clerkreadattribute.c: 887]
 4 clerkReadAttribute (th_p = 0x400ec044)    [/project/dce/build/dce1.0.3/src/d
irectory/cds/child/clerkreadattribute.c: 948]
 5 clerk_request (ll_p = 0x40085c50)    [/project/dce/build/dce1.0.3/src/direct
ory/cds/child/clerk_client.c: 525]
 6 TMEM@libdce + 0x00217b5c (0x40085e40, 0x7aae408c, 0x400155f8, 0x7)
 7 TMEM@libdce + 0x000d411c (0x400155f8, 0, 0, 0)
 8 TMEM@libdce + 0x000e429c (0x400155f8, 0, 0, 0)
 9 TMEM@libdce + 0x000e3edc (0x400155f8, 0, 0, 0)
10 TMEM@libdce + 0x000e3edc (0x400155f8, 0, 0, 0)
11 TMEM@libdce + 0x000e3edc (0x400155f8, 0, 0, 0)
12 TMEM@libdce + 0x000e3edc (0x400155f8, 0, 0, 0)
13 TMEM@libdce + 0x000e3edc (0x400155f8, 0, 0, 0)

[10/20/93 public]
We're still looking at this and if we get resolution it will go into the
unintegrated tree but it will not hold up the release.

[5/18/94 public]
I think I have some good news. This spinning problem most likely relates to
OT 10570 (inproper locking in cds cache).

OT 10570 reports that there is a locking hole in cds cache that free list can
get corrupted. When this happens, it is possible to develop a loop somewhere
midway down its length, so code that blindly follows the list (with the
assumption that it will return to the start) gets stuck there.

This explains the behavior this OT reports. Also from the experience, if the
cache is removed (the corrupted free list is gone), the cdsclerk stops 
spinning. 

The customer who reported OT 10570 originally told me that he used to see this
cdsclerk spinning often, sometimes even in less than an hour. Since he applied
fix to the cache lock problem (see OT 10570 at the end), he has not seen this
spinning problem.

I am going to also update OT 10570 and raise it to B 1.

Can we get this one into beta?

[7/21/94 public]
If this is the same as 10570, we have a fix.  We are assuming it is
a duplicate for now.



CR Number                     : 7644
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : control
Short Description             : show link Expiration Date and
Extension output formatting problems
Reported Date                 : 4/2/93
Found in Baseline             : 1.0.2
Found Date                    : 4/2/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : format_utcabs_for_print.c
Sensitivity                   : public

[4/2/93 public]
Test Create Link encountered the following problems when
Show Link was executed:


Expiration = 1993-11-13-10:18:00.000-06:
 Extension = +365-00:00:00.000I-----

The first problem is the expiration time specified in Create Link was
1993-11-13-10:18:00.00.  Previously (since last November or December), this
time was being converted to universal time (1993-11-13-16:18:00.00), 
Back in November the time
was shown as entered; then OSF made a change. 

In addition, the -06: at the end of Expiration is a new decoration. 

Also, I----- is new on Extension.  These "features" appeared throughout the
testcases wherever Expiration and Extension times were shown. 

In format_utcabs.c, put a 0 in place of the . to null-terminate the timep
string after the seconds.  

In emit_ext_line valuebuf shows the Inaccuracy.  The customers probably
don't need or want to see this, so we null-terminated the string at the .

[08/12/93 public]
The expireration and extension times are output in local time and there 
are no plans to change this. I believe the thinking was that the user is 
expected to input the time in local time and foe consistancy it should
be put out in local. 
The inaccuracy was already suppressed and the timezone offset has been
removed.

[11/11/93 public]
fixed->closed.



CR Number                     : 7613
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : admin_ref
Short Description             : Manual page Related Info says
"set clearinghouse(8cds)", but it does not exist
Reported Date                 : 3/30/93
Found in Baseline             : 1.0.1
Found Date                    : 3/30/93
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : 1
Sensitivity                   : public

[3/30/93 public]

Full Description:

        The manual page for list clearinghouse gives set clearinghouse(8cds)
        in the Related Information section. There doesn't seem to be such
        a manual page or subcommand in the cds component. If there is,
        please advise where to find. Otherwsie remove this reference.

[6/9/93 public]

Changed to defect.  Either the reference should go away or we are not
documenting an existing command.

[07/06/93 public]
Assigned this CR to myself.

[07/23/93 public]
Changed to "verified".  Removed the offending reference to
"set clearinghouse" from the RELATED INFO section of

	admin_ref/man8cds/list_clearinghouse.8cds

[08/17/93 public]
Closed bug.



CR Number                     : 7584
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : control
Short Description             : CDSCP show cached server
returns error message twice when no cached server exists.		
Reported by:                               : jsirkin
Reported Date                 : 3/24/93
Found in Baseline             : 1.0.2
Found Date                    : 3/24/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/control/cprpc_clerk.c
Sensitivity                   : public
nnnnnn                        : 

[3/24/93 public]
CDSCP show cached server was executed on the command line when no server
was cached.  The error message appeared twice:
cdscp show cached server os2dce06

The result is:

Failure in routine: cp_show_cached_server; code = 282111140
Cached Server tag is unknown (dce / cds)
Failure in routine: cp_show_cached_server; code = 282111140
Cached Server tag is unknown (dce / cds)

in cp_show_cached server, exit the function after rpc_status or
command_status are found to be "not okay", rather than continuing on.  If
dnscp_clerk has returned with either of those variables as not okay,
ns_info_list_p was not initialized, so we should not continue with this function.

[08/12/93 public]
Removed the call to DceError on bad command status immediately after
the call to dnscp_clerk. Later, in the if(!found_ns) block the correct
error message will be queued if the requested server wasn't specified
as a wild card. All show commands allow wildcard requests to fail
without declaring an error. On failure of dnscp_clerk the list of name
servers will be empty so no further real effort will be expended and
found_ns will remain false. The value of command_status set by
cprpc_clerk, if bad, will override the default of DNS_CSTAGUNKNOWN
set in the if(!found_ns) block.

[11/11/93 public]
fixed->closed.



CR Number                     : 7558
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000, other
S/W Ref Platform              : aix, other
Component Name                : cds
Subcomponent Name             : control
Short Description             : Create Object allows lowercase
cds_class and cds_classversion: Show Object requires CDS_Class and
Reported by: jsirkin
Reported Date                 : 3/22/93
Found in Baseline             : 101
Found Date                    : 3/22/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/control/cds.cdt
Sensitivity                   : public
nnnnnn                        : 

[3/22/93 public]
Create Object allows cds_class and cds_classversion to be entered with all
lowercase characters.  Show Object returns a syntax error if they are all
lowercase.  Show object requires CDS_Class and CDS_ClassVersion.  It is
confusing to be able to create an object using one syntax, and have Show
Object reject the same syntax.

To Create:
create object /.:/lan-profile cds_class = RCP_Profile cds_classversion =
1.0
(this succeeds)

show object /.:/lan_profile with cds_class = RCP_Profile cds_classversion =
1.0
(this fails with a syntax error pointing to cds_class)

show object /.:/lan-profile with CDS_Class = RCP_Profile cds_classversion =
1.0
(this fails with a syntax error pointing to cds_classversion)

show object /.:/lan-profile with CDS_Class = RCP_Profile CDS_ClassVersion =
1.0
(this succeeds)

Additional notes:
The CDSCP tool converts all the cdscp keywords in cdscp.bpt (cds.cdt text)
to upper case before checking their validity.  For example:
  cdscp del dir /.:/foo and cdscp DEl DIR /.:/foo are the same.
CDS attributes like cds_class, cds_classversion, cds_linktarget and
cds_timeout are in certain cases cdscp keywords and are converted to upper
case.  This was causing the command
  cdscp create obj /.:/foo cds_class = RCP_Profile cds_classversion = 1.0
to work, while the command
  cdscp show obj /.:/foo cds_class = RCP_Profile cds_classversion = 1.0 
to fail.  In the first case, the attribute is treated as a cdscp keyword,
and in the second case it is considered as a CDS attribute (uses cds_attr
to check).  This is not good

[9/24/93 public]
Fixed by making the attribute names of CDS_Class and CDS_ClassVersion
case sensitive. Closed



CR Number                     : 7530
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : cdsadv won't spawn a clerk for root
Reported Date                 : 3/18/93
Found in Baseline             : 1.0.2
Found Date                    : 3/18/93
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/adver/adver_clerk_event.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[3/18/93 public]
BUILD:	nb available 3/11/93
CONFIG:	3 pmax cell, 2 flservers
DETAILS:
Left cell idle overnight, then tried to do a rpccp show entry -u /.:/fs
with expired root/cell_admin tix on both flservers - no go - kdestroyed
and exited "expired shells", re-dce_login'd as cell_admin and retried.
Failed on core server machine, succeeded on non-core flserver machine.
root@dce12>  rpccp show entry -u /.:/fs
dfs: fileset (0,,1) is not available!
>>> rpc runtime error: Error with socket (dce / cds)
root@dce12> cdscp show dir /.:
                        SHOW
                   DIRECTORY   /.../dce12_cell
                          AT   1993-03-18-05:06:35
Error on entity: /.../dce12_cell
Error with socket (dce / cds)
Function: dnsEnumAttr
root@dce12> su gmd
% cdscp show dir /.:
Warning: you have no network credentials. All requests will be unauthenticated.
                        SHOW
                   DIRECTORY   /.../dce12_cell
                          AT   1993-03-18-05:10:53
            RPC_ClassVersion = 0100
                     CDS_CTS = 1993-03-11-22:29:09.648447100/08-00-2b-15-bd-b0
                     CDS_UTS = 1993-03-17-17:12:17.521987100/08-00-2b-15-bd-b0
              CDS_ObjectUUID = 0062f1f7-bd35-1b9f-8728-08002b15bdb0
                CDS_Replicas = :
          Clearinghouse UUID = 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
                       Tower = ncacn_ip_tcp:130.105.202.31[]
                       Tower = ncadg_ip_udp:130.105.202.31[]
                Replica type = master
          Clearinghouse Name = /.../dce12_cell/dce12_ch
                 CDS_AllUpTo = 1993-03-18-07:16:50.237988100/08-00-2b-15-bd-b0
             CDS_Convergence = medium
                CDS_InCHName = allowed
        CDS_DirectoryVersion = 3.0
            CDS_ReplicaState = on
             CDS_ReplicaType = master
               CDS_LastSkulk = 1993-03-18-07:16:50.237988100/08-00-2b-15-bd-b0
              CDS_LastUpdate = 1993-03-17-18:12:34.691316100/08-00-2b-15-bd-b0
             CDS_RingPointer = 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
                   CDS_Epoch = 0062f1f6-bd35-1b9f-8728-08002b15bdb0
          CDS_ReplicaVersion = 3.0
             CDS_GDAPointers = :
                     Timeout = :
                  Expiration = 1993-03-18-12:12:11.616-05:
                   Extension = +1-00:00:00.000I0.000
          Clearinghouse UUID = 00946510-bd5c-1b9f-bdf2-08002b15bdb0
                       Tower = ncacn_ip_tcp:130.105.202.31[]
                       Tower = ncadg_ip_udp:130.105.202.31[]
                Replica type = gda
          Clearinghouse Name = /.../dce12_cell/dce12_gda
Cdscp works for gmd w/dce authentication as well.
Output from cdscp dump clerk cache:
(delete as appropriate)
CACHED DIRECTORIES*****************************************************
/.../dce12_cell/hosts/dce5
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/hosts/dce12
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/hosts
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/subsys/dce/dfs/bak
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/subsys/dce
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/subsys
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/subsys/dce/sec
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/hosts/valentine
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
/.../dce12_cell/subsys/dce/dfs
    Master at /.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
    Clearinghous Address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
CACHED CLEARINGHOUSES**************************************************
/.../dce12_cell/dce12_ch
    Clearinghouse UID: 000ee9d0-bd2c-1b9f-8728-08002b15bdb0
  Clearinghouse address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
  Clearinghouse management name: <none>
  OnLan  AddressUsed  Ok
/.../dce12_cell/dce12_gda
    Clearinghouse UID: 00946510-bd5c-1b9f-bdf2-08002b15bdb0
  Clearinghouse address: 
        ncacn_ip_tcp:130.105.202.31[]
        ncadg_ip_udp:130.105.202.31[]
  Clearinghouse management name: <none>
  AddressUsed  Ok
CACHED ATTRIBUTE VALUES************************************************
/.../dce12_cell/subsys/dce/sec/master (object)
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 18 00 5c 04 1d 00 7a 00 d7 00 34 01 91 01 ee 01 4b 02 a8 02 05 03 62 03 
    bf 03 1c 04 01 08 00 2b 15 bd b0 df 7a 1b 88 e5 95 96 00 4b 00 09 05 00 13 
    00 0d 50 1e 7c 0d 3a 11 ca 11 b7 1f 08 00 1e 01 dc 6c 01 00 02 00 00 00 13 
    00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 
    00 0b 02 00 00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 08 00 
    2b 15 bd b0 bb b6 43 89 e5 95 96 00 4b 00 09 05 00 13 00 0d 50 1e 7c 0d 3a 
    11 ca 11 b7 1f 08 00 1e 01 dc 6c 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 
    1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 
    00 08 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 5b 6a 16 
    8b e5 95 96 00 4b 00 09 05 00 13 00 0d d0 13 61 d4 48 a8 cb 11 b8 63 08 00 
    1e 04 6a a5 02 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 
    2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 00 00 01 00 07 02 00 00 00 01 
    00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 7b da c6 8b e5 95 96 00 4b 00 
    09 05 00 13 00 0d d0 13 61 d4 48 a8 cb 11 b8 63 08 00 1e 04 6a a5 02 00 02 
    00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 
    00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 00 00 01 00 09 04 00 82 69 ca 
    1f 01 08 00 2b 15 bd b0 63 2b 6a 8c e5 95 96 00 4b 00 09 05 00 13 00 0d a8 
    2f 8c 5b 0b b6 c9 11 be 0f 08 00 1e 01 8f a0 01 00 02 00 01 00 13 00 0d 04 
    5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 
    00 00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd 
    b0 e5 ad 3b 8e e5 95 96 00 4b 00 09 05 00 13 00 0d a8 2f 8c 5b 0b b6 c9 11 
    be 0f 08 00 1e 01 8f a0 01 00 02 00 01 00 13 00 0d 04 5d 88 8a eb 1c c9 11 
    9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 
    00 00 00 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 0d ad 0e 8f e5 95 
    96 00 4b 00 09 05 00 13 00 0d f8 38 e3 b1 33 95 c9 11 a3 4a 08 00 1e 01 9c 
    1e 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 
    60 02 00 02 00 00 00 01 00 0b 02 00 00 00 01 00 07 02 00 00 00 01 00 09 04 
    00 82 69 ca 1f 01 08 00 2b 15 bd b0 49 26 9a 8f e5 95 96 00 4b 00 09 05 00 
    13 00 0d f8 38 e3 b1 33 95 c9 11 a3 4a 08 00 1e 01 9c 1e 01 00 02 00 00 00 
    13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 
    01 00 0a 02 00 00 00 01 00 08 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 08 
    00 2b 15 bd b0 29 57 8d 90 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 
    00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a 
    eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 00 00 
    01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 91 04 
    90 91 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 
    dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 
    00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 00 00 
    01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 f3 42 3f 92 e5 95 96 00 4b 
    00 09 05 00 13 00 0d 50 de 73 8f 8c 76 ca 11 bf fc 08 00 1e 03 94 31 01 00 
    02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 
    02 00 00 00 01 00 0b 02 00 00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 
    ca 1f 01 08 00 2b 15 bd b0 bb e1 f0 92 e5 95 96 00 4b 00 09 05 00 13 00 0d 
    50 de 73 8f 8c 76 ca 11 bf fc 08 00 1e 03 94 31 01 00 02 00 00 00 13 00 0d 
    04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 
    02 00 00 00 01 00 08 02 00 00 00 01 00 09 04 00 82 69 ca 1f 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 02 00 22 00 07 00 01 08 00 2b 15 bd b0 cf 1f 16 8a e5 95 96 00 10 00 09 
    76 f1 1a 00 60 bc 9f 1b 96 4f 08 00 2b 15 bd b0 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 0b 0f c5 87 e5 95 96 00 02 00 09 
    01 00 
  1.3.22.1.5.1 - Is a Single
    01 08 00 2b 15 bd b0 b3 9e 9e 8a e5 95 96 00 25 00 09 30 30 34 66 66 63 65 
    61 2d 62 63 35 66 2d 31 62 39 66 2d 39 36 34 66 2d 30 38 30 30 32 62 31 35 
    62 64 62 30 00 
/.../dce12_cell (directory)
  CDS_GDAPointers - Is a Set - Whole Set Cached
    01 02 00 36 01 07 00 01 08 00 2b 15 bd b0 9f 14 e0 c6 6f 9a 96 00 24 01 12 
    7e 9b 5a b5 a3 23 cc 01 b8 52 36 00 00 00 00 10 00 c0 69 2a c9 00 00 00 00 
    00 00 00 00 00 00 10 10 65 94 00 5c bd 9f 1b bd f2 08 00 2b 15 bd b0 01 04 
    00 ba 00 09 00 66 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 
    05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 
    00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 
    00 00 01 00 0b 02 00 00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 
    00 00 01 00 08 02 00 00 00 01 00 09 04 00 82 69 ca 1f 04 86 22 ed 11 bb 49 
    ca 11 8f 29 08 00 2b 0d c4 6c 1e 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 
    63 65 6c 6c 08 09 64 63 65 31 32 5f 67 64 61 00 00 
  CDS_ReplicaVersion - Is a Single
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 07 03 00 
  CDS_Epoch - Is a Single
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 04 f6 f1 62 00 35 bd 9f 
    1b 87 28 08 00 2b 15 bd b0 
  CDS_RingPointer - Is a Single
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 04 d0 e9 0e 00 2c bd 9f 
    1b 87 28 08 00 2b 15 bd b0 
  CDS_LastUpdate - Is a Single
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0e 00 05 08 00 2b 15 bd b0 89 
    51 e0 32 78 9a 96 00 
  CDS_LastSkulk - Is a Single
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0e 00 05 08 00 2b 15 bd b0 69 
    ed 2a c2 e5 9a 96 00 
  CDS_ReplicaType - Is a Single
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 03 01 
  CDS_ReplicaState - Is a Single
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 03 03 
  CDS_DirectoryVersion - Is a Single
    01 08 00 2b 15 bd b0 cf 3c 84 0c e5 95 96 00 02 00 07 03 00 
  CDS_InCHName - Is a Single
    01 08 00 2b 15 bd b0 cd 3c 84 0c e5 95 96 00 01 00 03 01 
  CDS_Convergence - Is a Single
    01 08 00 2b 15 bd b0 cb 3c 84 0c e5 95 96 00 01 00 03 02 
  CDS_AllUpTo - Is a Single
    01 08 00 2b 15 bd b0 69 ed 2a c2 e5 9a 96 00 0e 00 05 08 00 2b 15 bd b0 69 
    ed 2a c2 e5 9a 96 00 
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 c9 3c 84 0c e5 95 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
  CDS_ObjectUUID - Is a Single
    01 08 00 2b 15 bd b0 c7 3c 84 0c e5 95 96 00 10 00 04 f7 f1 62 00 35 bd 9f 
    1b 87 28 08 00 2b 15 bd b0 
  CDS_UTS - Is a Single
    01 08 00 2b 15 bd b0 9f 14 e0 c6 6f 9a 96 00 0e 00 05 08 00 2b 15 bd b0 9f 
    14 e0 c6 6f 9a 96 00 
  CDS_CTS - Is a Single
    01 08 00 2b 15 bd b0 77 da 81 0c e5 95 96 00 0e 00 05 08 00 2b 15 bd b0 77 
    da 81 0c e5 95 96 00 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 3f d0 87 0c e5 95 96 00 02 00 09 
    01 00 
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 08 00 74 01 0d 00 6a 00 c7 00 24 01 01 08 00 2b 15 bd b0 2e 54 04 da 5e 
    9a 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 
    00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 
    48 60 02 00 02 00 00 00 01 00 0b 02 00 00 00 01 00 07 02 00 04 09 01 00 09 
    04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 fe c8 19 da 5e 9a 96 00 4b 00 09 05 
    00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 
    00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 
    00 01 00 0a 02 00 00 00 01 00 08 02 00 04 11 01 00 09 04 00 82 69 ca 1f 01 
    08 00 2b 15 bd b0 76 5c 1d da 5e 9a 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 
    47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 
    8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 00 
    00 01 00 07 02 00 04 0b 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 82 
    88 21 da 5e 9a 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 
    01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 
    08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 04 
    13 01 00 09 04 00 82 69 ca 1f 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 02 00 22 00 07 00 01 08 00 2b 15 bd b0 c7 3c 84 0c e5 95 96 00 10 00 09 
    f7 f1 62 00 35 bd 9f 1b 87 28 08 00 2b 15 bd b0 
/.../dce12_cell/dce12_ch (object)
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 33 03 21 15 e5 95 96 00 02 00 09 
    01 00 
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 02 00 22 00 07 00 01 08 00 2b 15 bd b0 df 9c d5 15 e5 95 96 00 10 00 09 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_ObjectUUID - Is a Single
    01 08 00 2b 15 bd b0 cd 0e 9f 0c e5 95 96 00 10 00 04 d0 e9 0e 00 2c bd 9f 
    1b 87 28 08 00 2b 15 bd b0 
/.../dce12_cell/hosts/dce12/profile (object)
  RPC_Profile - Is a Set - Whole Set Cached
    01 02 00 48 00 07 00 01 08 00 2b 15 bd b0 01 0b 84 63 e5 95 96 00 36 00 09 
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 1d 00 
    2f 2e 2e 2e 2f 64 63 65 31 32 5f 63 65 6c 6c 2f 63 65 6c 6c 2d 70 72 6f 66 
    69 6c 65 00 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 65 52 d3 63 e5 95 96 00 02 00 09 
    01 00 
/.../dce12_cell/hosts/dce12/self (object)
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 02 00 5d 00 07 00 01 08 00 2b 15 bd b0 59 c1 0a 6a e5 95 96 00 4b 00 09 
    05 00 13 00 0d 08 83 af e1 1f 5d c9 11 91 a4 08 00 2b 14 a0 fa 03 00 02 00 
    00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 
    00 00 01 00 0a 02 00 00 00 01 00 08 02 00 00 87 01 00 09 04 00 82 69 ca 1f 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 61 7a 53 6a e5 95 96 00 02 00 09 
    01 00 
/.../dce12_cell/fs (object)
  RPC_Group - Is a Set - Whole Set Cached
    01 02 00 33 00 07 00 01 08 00 2b 15 bd b0 9f 48 0a b9 e7 95 96 00 21 00 09 
    2f 2e 2e 2e 2f 64 63 65 31 32 5f 63 65 6c 6c 2f 68 6f 73 74 73 2f 64 63 65 
    31 32 2f 73 65 6c 66 00 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 cb 5f 16 67 e5 95 96 00 02 00 09 
    01 00 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 02 00 22 00 07 00 01 08 00 2b 15 bd b0 ff 40 a1 67 e5 95 96 00 10 00 09 
    ca bc 96 00 ba bd 9f 1b 86 2a 08 00 2b 15 bd b0 
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 00 00 00 00 
/.../dce12_cell/hosts/dce12/cds-clerk (object)
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 c7 47 d9 65 e5 95 96 00 02 00 09 
    01 00 
/.../dce12_cell/hosts/valentine (childPointer)
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 f9 92 36 6f e5 95 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
/.../dce12_cell/subsys/dce (childPointer)
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 d3 14 5c 4f e5 95 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
/.../dce12_cell/subsys/dce (directory)
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 77 33 4a 4f e5 95 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
/.../dce12_cell/subsys/dce/sec (childPointer)
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 7f 6c cf 50 e5 95 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
/.../dce12_cell/subsys/dce/sec (directory)
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 08 00 74 01 0d 00 6a 00 c7 00 24 01 01 08 00 2b 15 bd b0 2a 14 d7 00 e5 
    95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 
    00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 
    48 60 02 00 02 00 00 00 01 00 0b 02 00 00 00 01 00 07 02 00 04 15 01 00 09 
    04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 fa 88 ec 00 e5 95 96 00 4b 00 09 05 
    00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 
    00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 
    00 01 00 0a 02 00 00 00 01 00 08 02 00 04 3a 01 00 09 04 00 82 69 ca 1f 01 
    08 00 2b 15 bd b0 72 1c f0 00 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 
    47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 
    8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 00 
    00 01 00 07 02 00 04 17 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 ea 
    af f3 00 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 
    01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 
    08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 04 
    3c 01 00 09 04 00 82 69 ca 1f 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 02 00 22 00 07 00 01 08 00 2b 15 bd b0 77 85 a1 50 e5 95 96 00 10 00 09 
    92 65 53 00 a6 bd 9f 1b 87 28 08 00 2b 15 bd b0 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 83 eb de 50 e5 95 96 00 02 00 09 
    01 00 
/.../dce12_cell/hosts/dce12/cds-server (object)
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 e5 0d 92 64 e5 95 96 00 02 00 09 
    01 00 
/.../dce12_cell/hosts/dce5 (childPointer)
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 d3 00 4d e2 71 9a 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
/.../dce12_cell/hosts/dce5/self (object)
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 c3 35 7b e9 71 9a 96 00 02 00 09 
    01 00 
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 02 00 5d 00 07 00 01 08 00 2b 15 bd b0 23 37 3d e9 71 9a 96 00 4b 00 09 
    05 00 13 00 0d 08 83 af e1 1f 5d c9 11 91 a4 08 00 2b 14 a0 fa 03 00 02 00 
    00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 
    00 00 01 00 0a 02 00 00 00 01 00 08 02 00 00 87 01 00 09 04 00 82 69 ca 19 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 00 00 00 00 
/.../dce12_cell/hosts/dce12 (childPointer)
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 a1 08 b1 56 e5 95 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
/.../dce12_cell/hosts/dce12 (directory)
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 08 00 74 01 0d 00 6a 00 c7 00 24 01 01 08 00 2b 15 bd b0 2a 14 d7 00 e5 
    95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 
    00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 
    48 60 02 00 02 00 00 00 01 00 0b 02 00 00 00 01 00 07 02 00 04 15 01 00 09 
    04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 fa 88 ec 00 e5 95 96 00 4b 00 09 05 
    00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 
    00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 
    00 01 00 0a 02 00 00 00 01 00 08 02 00 04 3a 01 00 09 04 00 82 69 ca 1f 01 
    08 00 2b 15 bd b0 72 1c f0 00 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 
    47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 
    8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 00 
    00 01 00 07 02 00 04 17 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 ea 
    af f3 00 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 
    01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 
    08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 04 
    3c 01 00 09 04 00 82 69 ca 1f 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 02 00 22 00 07 00 01 08 00 2b 15 bd b0 4d 91 9b 56 e5 95 96 00 10 00 09 
    dc 1f 04 00 b0 bd 9f 1b 87 28 08 00 2b 15 bd b0 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 11 ef bf 56 e5 95 96 00 02 00 09 
    01 00 
/.../dce12_cell/subsys/dce/dfs/bak (childPointer)
  CDS_Replicas - Is a Set - Whole Set Cached
    01 02 00 15 01 07 00 01 08 00 2b 15 bd b0 41 41 7f 53 e5 95 96 00 03 01 0a 
    d0 e9 0e 00 2c bd 9f 1b 87 28 08 00 2b 15 bd b0 01 04 00 ba 00 09 00 66 00 
    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 
    7d 25 d3 c6 ca 11 85 54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 
    88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 
    00 00 01 00 07 02 00 00 00 01 00 09 04 00 82 69 ca 1f 01 00 00 00 00 00 00 
    00 00 00 00 00 00 00 00 4b 00 09 05 00 13 00 0d c9 f1 7d 25 d3 c6 ca 11 85 
    54 08 00 2b 1c 8f 1f 01 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f 
    e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 
    00 00 01 00 09 04 00 82 69 ca 1f 01 86 22 ed 11 bb 49 ca 11 8f 29 08 00 2b 
    0d c4 6c 1d 00 08 03 2e 2e 2e 08 0a 64 63 65 31 32 5f 63 65 6c 6c 08 08 64 
    63 65 31 32 5f 63 68 00 00 
/.../dce12_cell/subsys/dce/dfs/bak (directory)
  RPC_Profile - Is a Set - Whole Set Cached
    01 00 00 00 00 
  CDS_Towers - Is a Set - Whole Set Cached
    01 08 00 74 01 0d 00 6a 00 c7 00 24 01 01 08 00 2b 15 bd b0 2a 14 d7 00 e5 
    95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 
    00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 
    48 60 02 00 02 00 00 00 01 00 0b 02 00 00 00 01 00 07 02 00 04 15 01 00 09 
    04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 fa 88 ec 00 e5 95 96 00 4b 00 09 05 
    00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 
    00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 
    00 01 00 0a 02 00 00 00 01 00 08 02 00 04 3a 01 00 09 04 00 82 69 ca 1f 01 
    08 00 2b 15 bd b0 72 1c f0 00 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 
    47 00 80 00 00 0d 00 01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 
    8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0b 02 00 00 
    00 01 00 07 02 00 04 17 01 00 09 04 00 82 69 ca 1f 01 08 00 2b 15 bd b0 ea 
    af f3 00 e5 95 96 00 4b 00 09 05 00 13 00 0d 31 33 b3 47 00 80 00 00 0d 00 
    01 dc 6c 00 00 00 00 00 02 00 00 00 13 00 0d 04 5d 88 8a eb 1c c9 11 9f e8 
    08 00 2b 10 48 60 02 00 02 00 00 00 01 00 0a 02 00 00 00 01 00 08 02 00 04 
    3c 01 00 09 04 00 82 69 ca 1f 
  RPC_ObjectUUIDs - Is a Set - Whole Set Cached
    01 02 00 22 00 07 00 01 08 00 2b 15 bd b0 a7 d6 63 53 e5 95 96 00 10 00 09 
    2a 6e 12 00 ab bd 9f 1b 87 28 08 00 2b 15 bd b0 
  RPC_ClassVersion - Is a Set - Whole Set Cached
    01 02 00 14 00 07 00 01 08 00 2b 15 bd b0 0f b6 94 53 e5 95 96 00 02 00 09 
    01 00 
  RPC_Group - Is a Set - Whole Set Cached
    01 00 00 00 00 
/.../dce12_cell/cell-profile (object)
  CDS_Towers - Is a Set - Whole Set Cached
    01 00 00 00 00 
  RPC_Profile - Is a Set - Whole Set Cached
    01 0e 00 f5 01 13 00 59 00 a3 00 e9 00 2d 01 77 01 b7 01 01 08 00 2b 15 bd 
    b0 59 1d 6a 5e e5 95 96 00 34 00 09 d0 13 61 d4 48 a8 cb 11 b8 63 08 00 1e 
    04 6a a5 02 00 00 00 00 08 72 73 5f 62 69 6e 64 00 14 00 2f 2e 2e 2e 2f 64 
    63 65 31 32 5f 63 65 6c 6c 2f 73 65 63 00 01 08 00 2b 15 bd b0 c9 49 7c 5f 
    e5 95 96 00 38 00 09 50 1e 7c 0d 3a 11 ca 11 b7 1f 08 00 1e 01 dc 6c 01 00 
    00 00 00 09 73 65 63 69 64 6d 61 70 00 17 00 2f 2e 2e 2e 2f 64 63 65 31 32 
    5f 63 65 6c 6c 2f 73 65 63 2d 76 31 00 01 08 00 2b 15 bd b0 31 55 49 60 e5 
    95 96 00 34 00 09 50 de 73 8f 8c 76 ca 11 bf fc 08 00 1e 03 94 31 01 00 00 
    00 00 08 6b 72 62 35 72 70 63 00 14 00 2f 2e 2e 2e 2f 64 63 65 31 32 5f 63 
    65 6c 6c 2f 73 65 63 00 01 08 00 2b 15 bd b0 d1 e7 1f 61 e5 95 96 00 32 00 
    09 f8 38 e3 b1 33 95 c9 11 a3 4a 08 00 1e 01 9c 1e 01 00 00 00 00 06 72 70 
    72 69 76 00 14 00 2f 2e 2e 2e 2f 64 63 65 31 32 5f 63 65 6c 6c 2f 73 65 63 
    00 01 08 00 2b 15 bd b0 ad 08 95 62 e5 95 96 00 38 00 09 42 42 26 6f f8 b9 
  [gmd 3/18/93 public]
BTW, stopping and restarting (dce.clean and rc.dce) removes the problem.
I'd seen this problem once before, weeks ago, so I believe it's been 
around for a long time but doesn't show up often.

[3/18/93 public]
Please provide stack traces of the cdsclerk core files in opt/dcelocal/var.
Generally anytime you see the error "error with socket" reported by cdscp,
it indicates that the clerk has dropped core. Please reproduce the crash
with clerk logging on (create a cdsclerk.events file in the cdsclerk directory
containing a single asterisk. Attach the stack trace and log file. Otherwise
there is little if any chance that this problem can be debugged. You haven't
recreated your local environment yet have you???

[3/18/93 public]
There were no cdsclerk core files - first thing I looked for. Since it
didn't appear that the clerk was even be started up - John Dugas and I
figured there'd be no events for it to log. Haven't recreated so I'm 
dropping it to a 2 - Any ideas on why the cdsadv would think it didn't
have to spawn a clerk for root? Or do you think it was definitely spawning
them and that they were immediately dying silently (ie. no output/no core)?

[3/18/93 public]
Check out syslog on the machine in question. The advertiser does very little
prior to forking a clerk, but most errors are captured with ADVER_LOG macro
calls in cds/adver/adver_clerk_event.c. If you find any messages, please post
them.

[3/18/93 public]
Well what d'ya know ... from /usr/adm/syslog/auth.log of dce12:
Mar 18 09:59:01 dce12 syslog: dtsd.dce:  DCE error: Failure in binding_import_ne
xt - import servers:  Error with socket (dce / cds)
Mar 18 09:59:01 dce12 syslog: dtsd.dce:  DCE error: Failure in binding_import_ne
xt - import servers:  Error with socket (dce / cds)
Mar 18 09:59:01 dce12 syslog: dtsd.dce: LAN profile not found!
Mar 18 09:59:01 dce12 syslog: dtsd.dce:  DCE error: Failure in GetProfileName:
Error with socket (dce / cds)
Mar 18 09:59:01 dce12 syslog: dtsd.dce:  DCE error: Failure in GetProfileName:
Error with socket (dce / cds)
.
.
.
Mar 18 10:10:43 dce12 syslog: dtsd.dce:  DCE error: Failure in binding_import_ne
xt - import servers:  Error with socket (dce / cds)
Mar 18 10:10:43 dce12 syslog: dtsd.dce:  DCE error: Failure in binding_import_ne
xt - import servers:  Error with socket (dce / cds)
Mar 18 10:10:43 dce12 syslog: dtsd.dce: LAN profile not found!
Mar 18 10:10:43 dce12 syslog: dtsd.dce:  DCE error: Failure in GetProfileName:
Error with socket (dce / cds)
Mar 18 10:10:43 dce12 syslog: dtsd.dce:  DCE error: Failure in GetProfileName:
Error with socket (dce / cds)
Mar 18 10:10:43 dce12 syslog: dtsd.dce: Too fews servers (1), need 3 servers
Mar 18 10:12:16 dce12 syslog: dtsd.dce: Synchronization completed, computed time
 = 1993-03-18-10:12:15.890-05:00I0.304, adjustment = +0-00:00:00.077I0.000
SO ... yes, I forgot to set dts required servers to 1 - is that pilot
error related?

[3/18/93 public]
All that this tells me is that dtsd (which runs as root) is having the same
problem that cdscp is. Are there any messages in syslog from cdsadv? Is the
problem reproducible whenever you commit your pilot error? Otherwise I doubt
that it's a factor.

[3/18/93 public]
Nah - I don't bother to set required servers very often and as I said, I've
only seen this behavior twice ... I did a:
root@dce12> grep dsadv /usr/adm/syslog/* 
and came up with nothing. The only additional info I can give you is that,
on both occassions, dfs wasn't happy either. Another daemon that runs as
root and uses cds is dfsbind ... maybe next time I'll get a dfsbind log
which will (hopefully) contain messages from before and after this 
problem and provide a few clues ...

[03/18/93 public]
Mark I grep'd for ADVER_LOG in the adver directory and came up empty.
Also grep'd for _LOG in both the adver and include directories. Found a
lot of them but none that looked like they might be log macros for the 
advertiser. I found the following in adver_clerk_event.c when I grep'd
for syslog
 *      X02.51  PLK                            12-Jun-1991
 *              Log error message to 'syslog' if can't create or bind clerk
 *              child's socket with client api, or fork or exec clerk.
but could not find a call to syslog. Is it possible that this 'log
operation' has been removed....

[3/19/93 public]
Please put the syslog in a publicly accessible place (eg ftp it to accord).
I will take a look at it when I get it.

[3/19/93 public]
Okay - dce12's syslog.log file is in ~notuser/7530_syslog.log - I suspect
this is not really the file you are looking for based on its meager contents.

[3/19/93 public]
That file is not useful as you observe. I need the file that contains the
messages you reported above, eg:
Mar 18 10:10:43 dce12 syslog: dtsd.dce:  DCE error: Failure in binding_import_ne
xt - import servers:  Error with socket (dce / cds)
Please put it in ~notuser.

[3/19/93 public]
You got it - ~notuser/7530_auth.log.

[6/1/93 public]
Seen again! Raising priority and severity since this cripples dfs cells.
What appears to be happening is that the cdsclerk for root attempts to
exit but does not complete this process and goes into a <defunct> state.
The cdsadv doesn't update its list and continues to believe this clerk
is healthy and doesn't try to fork a new one. Access to dfs is blocked
because dfsbind, started as root, relies on the root cdsclerk.
There's an interesting comment within adver_clerk_event.c
about CatchChild() not being a true signal handler - Can you look at this
code and see if you can guess why, on occasion, cdsadv doesn't catch the
fact that a cdsclerk (in this case, the one for root) is exiting?

[6/9/93 public]
Re-assigning to jd.

[6/22/93 public]
This is very difficult to reproduce and has been seen a small
number of times.  Fixby 1.0.3.

[9/17/93 public]
Filled in Interest List CC with `comer@transarc.com' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[10/8/93]

The protocol of communication between cdsclerks and cdsadv when
the clerks dies make use of the implicit signals delivered between parent
and child processes in UNIX.

        The signal semantics of UNIX ensures that a signal of a particular
type would be delivered atleast once when more than one occurence of that
signal occurs.

        On delivery of the signal the cdsadv cleans up its data structures
in its signal handler.

Problem:
--------
        The underlying architecture assumes reliable delivery of signals
for EACH dying cdsclerk.

Solution:
---------
        The wait3() (other forms : waitpid() etc) system call will return 
the process id of the child that was terminated, if any, else it will 
return error.

        In the existing system there is a one to one mapping between
the receiving of SIGCHLD and parent doing wait3() in its signal handler
to do the cleanup.  This is incorrect as one SIGCHLD could correspond
to several children in the Zombie state.

        Hence introducing a while loop around the wait3() and the
cleanup code to fetch the process ids of all possible Zombie processes
and perform a cleanup on all of them solves the problem.

The change is made in adver_clerk_event.c in CatchChild() function:
(The changes are ifdef with AIX_PROD)

#ifdef AIX_PROD                 /* CMVC 6237 - OT 8176, OT 8274 */
    while ((deadChildPid = wait3(&status, options, 0)) != -1) {
#else
    deadChildPid = wait3(&status, options, 0);
#endif                          /* CMVC 6237 - OT 8176, OT 8274 */
#endif
#ifdef DNS_CMA
    ADV_LOCK(dns_adver_mutex) {
#endif
        deadChild = childList;
        while (deadChild) {
            if (deadChild->pid == deadChildPid) {
                if (deadChild == childList)
                    childList = (childlist_t *)deadChild->next_p;
                else
                    prevChild->next_p = deadChild->next_p;

                break;
            }
            prevChild = deadChild;
            deadChild = (childlist_t *)deadChild->next_p;
        }
#ifdef DNS_CMA
    } ADV_END_LOCK(dns_adver_mutex);
#endif
    if (deadChild) {
        unlink(deadChild->saddr.sun_path);
        DTSSfree((char *)deadChild);
    }

#ifdef AIX_PROD                 /* CMVC 6237 - OT 8176, OT 8274 */
} /* end of while */
#endif                          /* CMVC 6237 - OT 8176, OT 8274 */

[10/13/93 public]
Thanks jayrao pointing out that SIGCHILD may be delivered once if
there is more than one zombie processes and suggested a solution.  

Fixed by looping thr all of zombies in CatchChild. Also replaced 
BSD wait3() with POSIX waitpid(). Closed

[11/15/93]

We later discovered that the cdsadv gets into a loop because the
wait3() [waitpid()] system call returns 0, as options = WNOHANG
and if there is no exited child processes.  Hence it is important
that the following fix be picked up instead of the previous one:

#ifdef AIX_PROD
        while ((deadChildPid = wait3(&status, options, 0)) != -1 &&
                deadChildPid != 0) {
#else

[11/15/93 public]
Actually, it is same as what I did when I integrated your fix -): 
(see 1.0.3 source tree)
    /*
     * Loop thr all of zombies
     */
    while ((deadChildPid = waitpid(-1, NULL, WNOHANG)) &&
            (deadChildPid != -1)) {



CR Number                     : 7520
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : cdscp dump clerk cache after ctrl-c produces CMA assertions
Reported Date                 : 3/17/93
Found in Baseline             : 1.0.2
Found Date                    : 3/17/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/control/dumpclerkcachecmd.c
Sensitivity                   : public

[3/17/93 public]

I run cdscp, at the prompt I type:

	dump clerk cache

While this is running, I type control-c.  cdscp comes back to the
prompt.  I then type:

	dump clerk cache

again.  At this point, I get:

 **** Assertion warning. attempt to relock a mutex
         at line 1302 in ../../../src/threads/cma_mutex.c

and a core dump.

I believe that this problem is related to OT #5419.

[07/09/93 public]
On the hp platform the I get

cdscp 
> dump clerk cache
^c
Failure in routine: cadump; code = 282111999
DCE text not found, dce code = 282111999, dce status = -1
> dump clerk cache
Cannot map 1016
 - check id and protection
Failure in routine: cadump; code = 282111999
DCE text not found, dce code = 282111999, dce status = -1
> quit

282111999 is just CDS_ERROR

For comparison

cdscp 
> show dir /.:
^c
$

In the later the cpscp command is exited which is probably
what should happen for dump clerk cache.

[9/29/93 public]
The problem with this bug is,

	  The SIGINT is blocked during the real dump process, so if 
	  there is a interrupt signal arrives before the unblocking 
	  the signal will not be delivered until the signal is unblocked. 

	  During the unblocking, 
		lock cache_mutex 
		 if this is last thread to block then unblock the signal 
		unlock cache_mutex 
	 Between the unblock and unlock, the ctrl-c is delivered and
	 the signal hander (longjmp(), which is a violation of POSIX
	 1003.1) restores the stack context saved by setjmp() while is 
	 still HOLDING the cache_mutex lock.

Fix: Removed the longjmp signal hander to let the ctrl-c go through 
     so that the cdscp dump clerk cache will get interrupted and 
     cache_mutex will be unlocked on exit. This is a consistent 
     treatment among all of cdscp commands such as cdsp show obj, etc, 
     except cdscp dump clerk cache and cdscp help

Closed



CR Number                     : 7494
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : admin_gd
Short Description             : register cell in DNS clarification
Reported Date                 : 3/12/93
Found in Baseline             : 1.0.2
Found Date                    : 3/12/93
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : 11_cds_gda.gpsml
The name of this file is "Managing intercell Naming" in the Administration
Guide - Core components.
Sensitivity                   : public

[3/12/93 public]

Chris Doherty of OSF noted that the explanation of how to register
a DCE cell in DNS could be more complete.  Below are two email
messages with information on this topic:

=========================================================================
From kevins@osf.org:

Subject: DCE: DNS Registration for Intercell
Date: Mon, 08 Jun 92 14:50:45 -0400


This is an outline of DNS registration for intercell communications. 

machineX                        IN      MX      1 machineX.dcetest.osf.org.
                                IN      A       111.222.5.111
machineX_cell.dcetest.osf.org.  IN      MX      1 machineX.dcetest.osf.org.
                                IN      TXT     "1 004D0AEF-D4C6-1A2C-A082-E26DE
0B20080   Master /.../machineX_cell.dcetest.osf.org/machineX_ch 007DE8B2-D4BE-1A
2C-A082-E26DE0B20080 machineX.dcetest.osf.org"

This is what a typical dns authority record looks like. This is what I
would expect as input from would-be registrants. Most of the record is
self explanatory, however some notes are in order. First, notice the
periods at the end of the full host name in the first line and in the
third line. Also note the period at the end of the cell name in the
third line. This is very important. These periods prevent DNS from
automatically forcing a domain name. Please note the machine name,
including domain, at the end of the TXT record (4th line).  This is
not supplied by the cdscp show cell command. I believe one of the keys
to dual DNS registration is the fact that the entry defining the
machine does not contain a domain suffix or a period. The cell name
machineX_cell.dcetest.osf.org is arbitrary. The dcetest.osf.org is not
needed but is added for clarity not brevity.  It is, however, a bad
idea to have the cell name exactly the same as the machine name. (ie
machineX.dcetest.osf.org is a bad cell name)

The other change that needs to be made on the host machine is 

/etc/resolv.conf needs to be changed to:

; /etc/resolv.conf - OSF specific
; use for caching local client
;
domain		dcetest.osf.org
nameserver 111.222.5.111

This specifies that machineX is the primary name resolver for the 
dcetest.osf.org sub-domain.

=========================================================================
From cjd@osf.org:

Subject: DCE: Q&A Defining a Cell in DNS
Date: Thu, 05 Nov 92 17:05:11 -0500


>Got a question on how to deine a cell (where name server is NOT running on the
>host where cdsd is running) in DNS:

>Admin Guide Section 11-3 (Page 11-6) gives an example to set up the named data
>file. It sets subtype to 2 and says that 2 indicates that a name server exists
>on the host named in the record (where cdsd is running).

This doesn't make sense to me.  That '2' is a preference value in case
there is more than one way to deliver mail to that host.  I really can't
see how setting it to two makes a difference.  Tom, do you know if this is
bogus?  Weidong, just use the value '1'.

>What if name server is running on another machine? WHat are the other valid
>subtypes onec an use? 
Once again, I think this is all bogus.

>ANother question related to this: it says that the first record can be of
>type AFSDB or MX, but there is no example of how to set up with MX. If I use
>MX, then is there a subtype like field for me to specify whether the named is
>running on the host where cdsd is running? The value after the MX is a
>preference value, or does it change the meaning here?
Here's an example how to use it with MX:

macaroni_cell   IN      MX      1               macaroni.osf.org.
                IN      TXT     "1 007411F2-176A-1A1D-B00A-123456789ABC   Master
 /.../macaroni_cell.osf.org/macaroni_ch 002260D2-1766-1A1D-B00A-123456789ABC mac
aroni.osf.org"

Notice the machine "macaroni.osf.org." is the "Mail Exchanger" for 
macaroni_cell.  Macaroni.osf.org knows how to deliver mail to macaroni_cell.
I know we're not delivering mail but there's something else going on that 
I don't fully understand. 

>Or, as I would imagine, it does not matter whether named and cdsd are runnin
>gon the same host at all.

We always ran a local caching named on the same machine (at least I did).
But, the local named goes and queries its fowarder, or a master server, in
our case.  My guess is it shouldn't matter unless the code for cdsd 
needs to talk directly with named as oppossed to using resolv.conf.


				-Chris

[03/15/93 public]
Changed from "code" to "doc".

[07/06/93 public]
Reassigned this CR to Diana Goldfarb.

[3/24/94 public]

Reassignned this CR to Ron Johnson from Diana Goldfarb.

[7/12/94 public]
Note that the examples on page 12-6 of the 1.0.3 Admin Guide (core)
are wrong: the name of cell should be either an absolute domain name
(cs.tech.edu. - note the final dot) or it should not include the default
domain (presumably tech.edu in the example, but that depends on details
of the configuration file, so it would be better to use absolute names
in the examples).

Also, I checked the RFC to find out how TXT data should be represented
in the configuration file. As far as I can tell it does not specify it -
however, all the implementations I have tried use double quotes, NOT
parentheses. Also, you can't embed comments in the string.

[10/20/94 public]
Closed bug.



CR Number                     : 7397
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : test/directory/cds/dcesx/dcesx.c
Short Description             : dcesx exists even with valid
options and prints usage message. And Makefile problem
Reported Date                 : 3/2/93
Found in Baseline             : 1.0.1
Found Date                    : 3/2/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.2
Affected File(s)              : test/directory/cds/dcesx/dcesx.c, Makefile
Sensitivity                   : public

[3/2/93 public]

[dcesx code has not been changed since 1.0.1 release]

Full Description:

        The command "dcesx -K -M -R -V -i 10 -m 10 -p 1 -t 30" exits with usage
        message

Repeat By:

        Compile this test on AIX in dcesx directory using 'xlc' or 'cc'
	compiler. Type the above command line.

Proposed Solution:

        In file test/directory/cds/dcesx/dcesx.c (function main()):

        Change:

    while ((c = get_options (argc, argv, options)) != EOF)

        to:

    while ((c = get_options (argc, argv, options)) != (char)EOF)

        and recompile. The system header file defines EOF as (-1).


Also the Makefile for dcesx directory is not functional. The LIBS vars were
commented out, making it impossible to link.

[3/3/93 public]

	get_options returns char value. Since it will also return EOF, it
	shoul dbe declared to return int in the first place so that EOF
	does not mess with other possible char values (0 - 255).

	ANSI C does not specify whether type "char" should be signed or 
	unsigned. It just happens that AIX chose to interpret it as
	unsigned char. That is why it failed on AIX machines.

	So the right fix is to declare get_options() to return int, change
	c to have a type of int and leave the comparison statement
	unchanged.

[8/26/93 public]
Jd has fixed this problem in dcesx.c:Revision 1.1.4.3 and
Makefile:Revision 1.1.4.3.



CR Number                     : 7383
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : test/directory/cds/dcesx/dcesx.c
Short Description             : dcesx exits if either
ncadg_ip_udp or ncacn_ip_tcp is not supported.
Reported Date                 : 3/1/93
Found in Baseline             : 1.0.1
Found Date                    : 3/1/93
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : dcesx/dcesx.c
Sensitivity                   : public

[3/1/93 public]

(this is still true in the current 1.0.2 code base).

Full Description:

        dcesx exits if either ncadg_ip_udp or ncacn_ip_tcp is not supported
        when a cell is configured with either of these only. As ILAB
        guideline suggests, it dcesx should try to use the available protocol
        sequences. (In the "DRAFT ILAB TEST PROCESS DOCUMENT" sent out by
	ILAB people, in the ILAB Test Process section, item 1, 1st
	first-level bullet, 4th second-level bullet (dcesx), 2nd third-level
	bullet, 1st fourth-level bullet says: "use connectionless and
	datagram protocols whenever possible". The word "possible" imples
	it is not required to have both CN and DG protocols to be present.)

Proposed Solution:

        In file test/directory/cds/dcesx/dcesx.c:

main (argc, argv)

int         argc;
char        *argv[];

{
    unsigned32  status, status2;
                        ^^^^^^^^^^  add this...
..........
..........

    rpc_server_use_protseq ((unsigned_char_t *)"ncacn_ip_tcp",
                            rpc_c_protseq_max_reqs_default, &status);
    if (status != rpc_s_ok)
    {
        dcesx_log ("*** Can't set up server protocols\n");
        exit (dcesx_s_rpc_use_protseq);  <<<<<<<<<<<----- Remove this line
    }

    rpc_server_use_protseq ((unsigned_char_t *)"ncadg_ip_udp",
                            rpc_c_protseq_max_reqs_default, &status2);
                                     Change from status --- ^^^^^^^^^
    if (status2 != rpc_s_ok)
    {
        dcesx_log ("*** Can't set up server protocols\n");
        exit (dcesx_s_rpc_use_protseq);  <<<<<<<<<<<----- Remove this line
    }

    if (status != rpc_s_ok && status2 != rpc_s_ok) <<<<<<<++++++ add this
        exit (dcesx_s_rpc_use_protseq);            <<<<<<<++++++ add this

..........
..........

}

[8/20/93 public]
Removed all usages of rpc_server_use_protseq and use 
rpc_server_use_all_protseqs only. This way will make it
use whatever protocol sequence the your configuration 
supports. So if to test a particular protocol sequence
is required, the evironment variable RPC_SUPPROTED_PROTSEQS
could serve the purpose. One thing need to remember is if
you build rpc/runtime without -DDEBUG then the environment
variable RPC_SUPPROTED_PROTSEQS is ignored.

Marked this bug as closed.



CR Number                     : 7265
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : Document "Compression warning:" messages
Reported Date                 : 2/17/93
Found in Baseline             : 1.0.1
Found Date                    : 2/17/93
Severity                      : D
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : cds/server/db_compression.c
Sensitivity                   : public

[2/17/93 public]

There are two warning messages which can be written to
cdsd.log from the routine db_compress_finish found 
in src file directory/cds/server/db_compression.c.

LOG_TRACE(("Compression warning: data written (%d) > data in (%d)\n",
                   ctx_p->data_bytes_written, ctx_p->data_bytes_in));

LOG_TRACE(("Compression warning: free written (%d) > free in(%d)\n",
                   ctx_p->free_bytes_written, ctx_p->free_bytes_in));

Somewhere in the system administration documentation, there should
be an explanation of what these messages mean, and whether or not
the adminstrator should be concerned about the presence of these
messages in the log. I have not been able to find such information,
although it is possible that I have missed something.

[2/18/93 public]

I sent the following question to the cds developers and 
have included their response.

Question:

Could you please explain what this message means, and what significance
it has to a DCE system administartor.

Response:

I guess the word "warning" is a bit strong.

It's simply noting that the compressed clearinghouse is larger than
the one going in (all of two bytes in this case).   It was put there
to highlight any major failures in the compression algorithms we develop
--
but it also highlights minor failures too.

 There are a variety of options here:

   o ignore it
   o put it under a debug event
   o change the wording
   o change the message trigger to only fire if size increases by 1% (or
     some other suitable amount that filters out noise).

If you want us to respond to this by doing 1 of the latter three actions
above, please submit an OT CR against the CDS server.

[07/06/93 public]
Assigned this CR to Diana Goldfarb.

[9/28/93 public]
After conferring with our other regional expert (Dave Griffin), I request
that this be changed to a code/cdsd bug assigned to me so that these
messages can be changed to DEBUG_EVENT messages. These messages have not
lead to the discovery of any bugs, and are obviously misleading.

[10/15/93]
Reassigned, coded, and awaiting drb approval.

[6/13/94 public]
Fixed as described above and changed to dce_svc_debug for 1.1.



CR Number                     : 6810
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : inconsistent error message when cds-server does not have access to directory
Reported Date                 : 1/12/93
Found in Baseline             : 1.0.2
Found Date                    : 1/12/93
Severity                      : D
Priority                      : 4
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : /admin_gd/directory/cds/6_cds_access.gpsml, /admin_ref/man7cds/cds_status_codes.7cds
Sensitivity                   : public

[1/12/93 public]

Here is a transcript of a session:

	+ acl_edit /.:/test/2 -s user:cell_admin:rwdtcia
	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:-
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Requested entry does not exist (dce / cds)
	Function: dnsCreateDir
	dnsCreateDir: partial results = %x000000000000000000000000000000000000


	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:r
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Insufficient rights to perform requested operation (dce / cds)
	Function: dnsCreateDir

	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:w
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Insufficient rights to perform requested operation (dce / cds)
	Function: dnsCreateDir

	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:d
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Insufficient rights to perform requested operation (dce / cds)
	Function: dnsCreateDir

	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:t
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Insufficient rights to perform requested operation (dce / cds)
	Function: dnsCreateDir

	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:c
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Insufficient rights to perform requested operation (dce / cds)
	Function: dnsCreateDir

	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:i
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Insufficient rights to perform requested operation (dce / cds)
	Function: dnsCreateDir

	+ acl_edit /.:/test/2 -m group:subsys/dce/cds-server:a
	+ cdscp create dir /.:/test/2/2
	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
	Insufficient rights to perform requested operation (dce / cds)
	Function: dnsCreateDir

I expected in the first case, where the cds-server has no access
to the directory, that I would receive the error message:

	Error on entity: /.../psycho.cells.sni-usa.com/test/2/2
        Insufficient rights to perform requested operation (dce / cds)
        Function: dnsCreateDir

as I did on all of the other cases.

In addition, it does not seem to matter *what type* of permission
that the server has to the directory, just that it has some.  This
also seems inconsistent.

[1/18/93 public]

This is the designed behavior.  If the user has some access but not the
right permissions, the "insufficient rights" error is returned. If the
user has no access at all, "entry does not exist" is returned.  This is
supposed to prevent name guessing.  I have changed this to a documentation
bug, because I don't think this distinction has been made there.

[06/08/93 public]
Changed "Fix By Baseline" field from 1.0.2 to 1.0.3.

[07/06/93 public]
Reassigned this CR to Diana Goldfarb.

[10/93 - verified by Alan Peckham]
The information is available in the documentation as follows:

- The manpages for cdscp create dir state "(Note that the server
principal requires \*Lread\*O and insert permission to
the parent directory of the new directory.)"

Changes made as follows:

cds_status_codes.7cds:
 Corrected error message from "Requested name does not exist" to
 "Requested entry does not exist"

 Expanded on the explanation.

6_cds_access.gpsml
 Added the following text to the section "DCE Permissions Supported by
 CDS":

 "A principal needs some permission to a name before it can try to perform
 management operations on the name.  Otherwise, CDS does not recognized
 the name when the principal tries the management operation and returns
 an error that the name does not exist.  If the principal has some
 permissions, but not those required to perform the operation, CDS
 returns an error explaining that the principal had insufficient rights
 to perform the operation."

[11/9/93 public]

Verified changes in latest doc build and closed the bug.



CR Number                     : 6773
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : incorrect include of cds_type.h
Reported Date                 : 1/8/93
Found in Baseline             : 1.0.2
Found Date                    : 1/8/93
Severity                      : D
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : test/directory/cds/{Makefile,cdstest.c}
Sensitivity                   : public

[1/8/93 public]
The include file cds_clerkserver.h contains the following line:

#include <cds_types.h>


This should be
#include <dce/cds_types.h>

This was found during compilation of src/test/directory/cds/cdstest.c.

[1/12/93 public]
Our internal imports in the idl files assumed that files were
pulled from local directories intead of the export tree.
There was no intention that these interfaces would be used
outside of the cds sub-tree.
Change .idl imports and Makefile export order

[1/12/93 public]
forgot to mark fixed - wasted bandwidth...

[01/13/93 public]
closed.

[01/20/93 public]
Reopened. Broke the Nightly build on the RIOS. The errors from
the build follow. Pmax build fine.....

 /directory/cds/stubs/Makefile can't find imported idl files.

u1/devobj/sb/nb_rios/tools/rios/bin/idl: File
../../../../../src/directory/cds/stubs/cprpc_clerk.idl, line 65
File cprpc.idl not found

File ../../../../../src/directory/cds/stubs/cprpc_server.idl, line 65
File cprpc.idl not found


 ../../../../../src/directory/cds/server/dns_service_rpc.c
    1501-106: (S) Include file cprpc_server.h not found.

./../../../../src/directory/cds/server/unix_net.c
     Include file cprpc_server.h not found.
"../../../../../src/directory/cds/server/unix_net.c", line 1180.24:
	 Undeclared identifier DNScpServer_v1_0_s_ifspec.
"../../../../../src/directory/cds/server/unix_net.c", line 1260.35:
 Undeclared identifier DNScpServer_v1_0_s_ifspec.


./src/directory/cds/adver/adver_clerk_event.c
  Include file cprpc_clerk.h not found.
"/u1/devobj/sb/nb_rios/src/directory/cds/includes/rpcserver.h", line 95.5:
1506-046 (S) Syntax error.
"/u1/devobj/sb/nb_rios/src/directory/cds/includes/rpcserver.h", line
110.126: 1506-046 (S) Syntax error.
"/u1/devobj/sb/nb_rios/src/directory/cds/includes/rpcserver.h", line
117.47: 1506-046 (S) Syntax error.

./src/directory/cds/adver/adver_clerk_event.c", line 3372.23:
 if_handle not a member of the struct or union if_descriptors.
./src/directory/cds/adver/adver_clerk_event.c", line 3372.35:
 Undeclared identifier DNScpClerk_v1_0_s_ifspec.

./src/directory/cds/adver/adver_clerk_event.c", line 3373.23:
 object_ids not a member of the struct or union if_descriptors.

./src/directory/cds/adver/adver_clerk_event.c", line 3376.23:
 if_handle not a member of the struct or union if_descriptors.

./src/directory/cds/adver/adver_clerk_event.c", line 3383.23:
 object_ids not a member of the struct or union if_descriptors.

./src/directory/cds/adver/adver_service_ncl.c
 Include file cprpc_clerk.h not found.

./src/directory/cds/adver/adver_service_rpc.c", line 657.28:
 Undeclared identifier DNScpClerk_v1_0_s_ifspec.

./src/directory/cds/control/cprpc_clerk.c
 Include file cprpc_clerk.h not found.

./src/directory/cds/control/cprpc_server.c
 Include file cprpc_server.h not found.

./src/directory/cds/control/cprpc_util.c
 Include file cprpc_clerk.h not found.
 Include file cprpc_server.h not found.

./src/directory/cds/control/cprpc_util.c", line 568.11:
 Undeclared identifier DNScpClerk_v1_0_c_ifspec.

./src/di./../../../../src/directory/cds/control/cprpc_util.c
    1501-106: (S) Include file cprpc_clerk.h not found.
    1501-106: (S) Include file cprpc_server.h not found.
"../../../../../src/directory/cds/control/cprpc_util.c", line 568.11:
1506-045 (S) Undeclared identifier DNScpClerk_v1_0_c_ifspec.
"../../../../../src/directory/cds/control/cprpc_util.c", line 568.38:
1506-045 (S) Undeclared identifier DNScpServer_v1_0_c_ifspec.rectory/cds/control/cprpc_util.c", line 568.38:
 Undeclared identifier DNScpServer_v1_0_c_ifspec.

[8/19/93 public]
This bug could be two problems. The first and actual problem is that
the cds functional test includes "dce/cds_clerkserver.h" which in turn
includes "cds_types.h" and complains about the "cds_types.h" can not be
found because it's not in {...}/usr/include. The second and implied problem
is that in DCE internal, the "cds_types.h" (and there are some other
.h files as well) is include as "#include <cds_types.h>" but is actually
not in export/machine/usr/include, instead of in export/machine/usr/include
/dce. 

To fix the first problem, we should understand that "cds_clerkserver.h"
(and cds_types.h) are not exported to applications. So the test should
not include it at the first place. But since the test would test the
same interfaces as the cds_clerkserver.idl defined, we could fix this
problem by borrowing the .idl files and using them in test sapce.

Regarding to the second problem, the internal building get around with
it by use -I path to find cds_types.h, etc, for example, in cds/control
and cds/gda, there is -I../stubs defined in INCFLAGS in their Makefiles.
So this problem is a sort of non-problem so far. But it could be a
 enhancement issue. I have created a enhancement bug OT#8486.



CR Number                     : 6698
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cds
Short Description             : define cached server causes advertiser to grow
Reported Date                 : 12/30/92
Found in Baseline             : 1.0.1
Found Date                    : 12/30/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/adver/adver_clerk_event.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : mason@transarc.com
Transarc Status               : open

[12/30/92 public]

This is the scenario in which the problem happens:

On the machine running the CDSD, the advertiser died for some reason.
I restarted the advertiser after killing all the clerks but let the
CDSD alone. 

Now, when we try and configure new client machines into the cell,
the "define cached server" command fails on the client machines,
with an error "invalid bound". We are running the advertisers in our
cell with the "-s" switch, so the define cached server command
is absolutely necessary. Also, every "define cached server" command
causes the advertiser on the server machine to grow like crazy.

On debugging the problem, this is what I found:

In the advertiser on the machine running the CDSD, in the procedure
cds_SolicitServer_s(), the check 

         if (!IsQempty(pc_p->pc_lh))

fails, causing the manager procedure to return without initializing
the out parameters of the call (specifically cellname_p).

The server stubs then try and marshall the unintialized cellname_p
parameter, and allocate memory which is indicated in the "fn_length" field
of the parameter. There also seems to be a bug in the "idl" generated
stubs which never deallocate this memory under certain exception
scenarios (specifically the invalid bound exception that gets raised
in this case; the fn_length parameter contains garbage as it is
unintialized).

Why was the queue pointed by pc_p->pc_lh empty?

I talked to Alan Peckham, and he mentioned that it is a no-no
to restart the advertiser without restarting the CDSD.

I think, this inability to restart the advertiser should be
construed as a bug. At Transarc, bringing down the CDSD, would have
meant making the name service unavailable during an important
continuous hours of operation test that was happening. Also,
why should other client machines that are already configured in
the cell see a disruption of service?

Should there not be a more direct mechanism for the CDSD to
reestablish connection with the new advertiser, or a "cdscp"
command in the same league as "show server", "create clearinghouse"
whereby the server can be forced to advertise its presence to 
the local advertiser.

[9/24/93 public]
Bug fixed. Enhancement transferred to CR#8658.

Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `mason@transarc.com' 
Added field Transarc Status with value `open'

[11/11/93 public]
fixed->closed.



CR Number                     : 6693
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : Inappropriate permissions are
allowed on the initial container ACL of a directory.
Reported Date                 : 12/30/92
Found in Baseline             : 1.0.2
Found Date                    : 12/30/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b17
Affected File(s)              : cds_dacl.c
Sensitivity                   : public

[12/30/92 public]

The cds server allows user to specify 'insert' and 'admin' permissions
on the initial object ACL of a directory.

[12/30/92 public]
Fixed. If you "acl_edit <dir> -io -l", you should see only the
permissions: rwdtc.

[01/13/93 public]
closed.

[1/27/93 public]
I am reopening this bug because the fix was backed out because it
caused interoperability problems between 1.0.1 and 1.0.2.

[8/31/93 public]
keegan, Would you please give the detailed information about
the interoperability problems you met and reopened this bug.

[9/8/93 public]
Included the mails exchanged with peter below. And defer this bug to 1.1
because of the interoperability problems peter found and the 1.1 as a 
break-point.


  > Hi, I'm currently looking at this bug. You made comments on 1/27/93 
  > about interoperability problems between 1.0.1 and 1.0.2 and reopened
  > this bug. Would you please provide us more detailed information about
  > the problems you had seen. Much appreciated!

The change was for the cdsd to return the 'catalog' manager uuid
rather than the 'directory' manager uuid in 'rdacl_get_manager_types',
if the acl type was 'sec_acl_type_default_object'.  This would result
in the proper permissions being passed on the subsequent calls to
'rdacl_get_printstring', and 'rdacl_lookup' calls.  However, the routine
'check_manager' had to be changed to return success if the entry type
was 'ET_directory' and the acl type was 'sec_acl_type_default_object'.

Now, this should work o.k. if only one cds server is involved in the
binding to the ACL, but if 2 servers are involved, and one of them
has this code change, the binding will fail.  This could happen on
'referrals', i.e. a server is a 'read-only' site for the ACL.


  > Peter, Thanks for the reply. I have a thought about this problem. 
  > Please correct me if I'm wrong. The problem(bug) we are dealing with
  > is basically to prevent the a and i permissons from using on "io" 
  > objects when acl_edit is invoke with '-m' or '-s'. We can reach this
  > purpose by check sec_acl_type in rdacl_replace() which is last phase in 
  > acl_edit, and pass the right parameter to check_manager so that the
  > a and i permissons is disallowed in this case and the interface of 
  > check_manager doesn't need to be changed. The two servers problem 
  > could not be incurred. Plese let me know if this right.

The problem with your solution is that the acl_edit user would still
see the 'i' and 'a' permissions (or a '-' in their place) and the help
strings for them.  The 'rdacl_replace' doesn't occur until the user
enters the 'commit' command or exits acl_edit.  The code, today, will
ignore the 'i' and 'a' permissions, if set, in 'rdacl_replace'.  

The correct bug fix would only show 5 permission characters and the
corresponding help text for them.

[09/10/93 public]
I tend to agree with Peter that the user should not see a help string 
that indicates a and i are ok and then have use of them fail. This looks to be 
something that should be addresses in the 1.1 time frame. Defered.

[8/29/94 public]
We are fixing this for directories of version >= 4.0  When a directory is
upgraded to v4.0 we know that the servers are running new software so
we can return the correct acl manager and you will see the right printstrings.



CR Number                     : 6516
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : test cases
Short Description             : delete and create child are not tested
Reported Date                 : 12/17/92
Found in Baseline             : 1.0.2b6
Found Date                    : 12/17/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : ./test/directory/cds/cp_childpointer.tests
Sensitivity                   : public

[12/17/92 public]
cdscp delete child and create child are not tested by the test cases
under src/test/directory/cds.  I haven't been able to figure out how
to get the namespace in a position to get these commands to work (or,
they're completely broken).  This is a significant test exposure, hence 
the B1 severity-priority.

[12/18/92 public]
This is not a significant exposure as the code  for create/delete child
in the API, clerk and server is exercised when a  directory is created.
Downgrading this CR to C3. As you suspect, these commands are seldom usable.

[8/26/93 public]
Implemented to test delete child and create child.



CR Number                     : 6501
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : Duplicate error message for remove object/directory
Reported Date                 : 12/16/92
Found in Baseline             : 1.0.2b6
Found Date                    : 12/16/92
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
directory/cds/control/names_actions_cds.c
Sensitivity                   : public

[12/16/92 public]
When an invalid attribute name is given for remove object or remove directory,
a duplicate error message is displayed.  Console follows:

# cdscp rem o /.:/foo/bar invalidname
Invalid name (dce / cds)
Invalid name (dce / cds)
syntax error
rem o /.:/foo/bar invalidname
                  ^
# cdscp rem dir /.:/foo invalidname    
Invalid name (dce / cds)
Invalid name (dce / cds)
syntax error
rem dir /.:/foo invalidname
                ^

[08/27/93 public]
Removed output of DceText error message from attributename.The
parser just says syntax error and the DceText output was causing a
second error message to be output

[11/11/93 public]
fixed->closed.



CR Number                     : 6499
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : Poor error message for define cached server
Reported Date                 : 12/16/92
Found in Baseline             : 1.0.2b6
Found Date                    : 12/16/92
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : attrname_actions_cds.c
Sensitivity                   : public

[12/16/92 public]
When an incorrect protocol sequence is given, the arrow indicating where
the error occurs is under "tower" instead of under the tower value.  Console
follows:

# cdscp define cached server os2dce43 tower udp_ip:129.35.65.130
Failure in routine: rpc_binding_from_string_binding; code = 382312480
invalid RPC protocol sequence (dce / rpc)
syntax error
define cached server os2dce43 tower udp_ip:129.35.65.130
                              ^
# cdscp define cached server os2dce43 tower ncadg_ip_udp
Failure in routine: rpc_binding_from_string_binding; code = 382312480
invalid RPC protocol sequence (dce / rpc)
syntax error
define cached server os2dce43 tower ncadg_ip_udp
                              ^
# cdscp define cached server os2dce43 tower
Failure in routine: rpc_binding_from_string_binding; code = 382312480
invalid RPC protocol sequence (dce / rpc)
syntax error
define cached server os2dce43 tower
                              ^
# cdscp define cached server os2dce43 toer udp_ip:129.35.65.>
syntax error
define cached server os2dce43 toer udp_ip:129.35.65.130
                              ^

Of these, only the last case is correct.

[9/22/93 public]
Fixed by advanced the maxcur of the parse table to 'tower' string
when a error is detected in that string. Closed



CR Number                     : 6498
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : show cell error message displayed twice
Reported Date                 : 12/16/92
Found in Baseline             : 1.0.2b6
Found Date                    : 12/16/92
Severity                      : D
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/control/cp_cell.c
Sensitivity                   : public

[12/16/92 public]
When given for a non-existent namespace entry, show cell displays its
error message twice:

# cdscp sh cell /.:/notthere
                        SHOW
                        CELL   /.../oct/notthere
                          AT   1992-12-16-13:52:20
Error on entity: /.../oct/notthere
Requested entry does not exist (dce / cds)
Function: dnsReadAttrValue
dnsReadAttrValue: partial results = /.../oct

Error on entity: /.../oct/notthere
Requested entry does not exist (dce / cds)
Function: dnsReadAttrValue
dnsReadAttrValue: partial results = /.../oct

[08/13/93 public]
In showcell don't double use the status work. After finding the
the cell doesn't exist free the handle and return. Don't go to
bottom of the function and trip over the double use of status.
Everything in between the discovery of the non-existant cell and
the bottom of the function was skipped in any case.

[11/11/93 public]
fixed->closed.



CR Number                     : 6432
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : advertiser
Short Description             : Advertiser should initialize if UDP is not available
Reported Date                 : 12/11/92
Found in Baseline             : 1.0.2b6
Found Date                    : 12/11/92
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : adver_cds_event.c
Sensitivity                   : public

[12/11/92 public]
In adver/adver_clerk_event.c, the following lines appear:

> /*
>  * List of binding protocols to be used.
>  */
> static char *protseq[] = {"ncadg_ip_udp"};
> #define NUM_protseq (sizeof(protseq)/sizeof(protseq[0]))

When we tried to force TCP-only for DCE by globally setting RPC_SUPPORTED_PROTSEQS,
the advertiser wouldn't work.  We've changed the initialization of protseq to

> static char *protseq[] = {"ncadg_ip_udp","ncacn_ip_tcp"};

and things seem to work OK.  Was this UDP-only setting an oversight, or
done deliberately?

[12/14/92 public]
The reference to the protseq array is in cds_bind which cdsadv calls in
preparation to broadcasting an advertisement or solicit message. As UDP
is the only protocol that supports broadcast, this seems to be a valid
place to hard-code the protocol. Is there a better way to do this?

[12/15/92 public]
To support broadcast RPC, there should be a mechanism comparable to 
rpc_network_inq_protseqs() to return a vector of protocol sequences
capable of broadcast.  Whether or not this would be offered, I'd at 
least like to have the advertiser initialize even if UDP isn't available 
on the machine, particularly since define cached server can be used in 
such a situation.

[5/18/94 public]
The advertiser will start without UDP.  Just cannot do solicit/advertiser
messages.



CR Number                     : 6428
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 5047
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : BADCLOCK has shown up again.
Reported Date                 : 12/11/92
Found in Baseline             : 1.0.1
Found Date                    : 12/11/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : directory/cds/server/uid_lib.c
Sensitivity                   : public

[12/11/92 public]


It's Back..

cdscp> set directory /.: to skulk
set directory /.: to skulk
Error on entity: /.../iowa_cell
Server clocks are not synchronized (dce / cds)
Function: dnsSkulkDir

I thought we had knocked this one off in OT 5047, but some odd
scenario must still be causing it to occur.  I am again using mulitple
clearinghouses.

[09/01/93 public]
I run hand tests as well as killer with multiple clearinghouses on 
a fairly regular basis and havn't seen this. If I don't hear from someone
within a day or two I'm going to assume that its has been fixed somewhere
along the line and cancel it.

[09/05/93 public]
Well, Stratus has seen it in 1.0.2:


	In a cell with 2 cdsd's (2 clearinghouses), the create clearinghouse
	operation fails intermittently on both cell client and cell server.
	The failure message is:

	> Failure in routine: cp_create_clh; code = 282108931
	> Server clocks are not synchronized (dce / cds)

	This happened when trying to create a clearinghouse in addition to
	the default ones (<hostname>_ch).

	This problem is similar to the one in OT# 6428.

[09/23/93 public]

I am having this problem in a DCE 1.0.3 cell with three clearinghouses
configured.  My cell has three servers with the master on an HP machine
and two replicas, one on a i486 and one on an AIX machine.  My major
concern is that I CAN NOT make the problem go away.  I am at the point
where the only fix might be to reconfigure my cell.

cdscp> set dir /.: to skulk
Error on entity: /.../largo_cell
Server clocks are not synchronized (dce / cds)
Function: dnsSkulkDir

[09/23/93 public]

I believe I made the "Server clocks are not synchronized" error go away 
by disabling the two replicas and running the dcerpbnk system test which
creates two entries in the namespace.  Once I ran dcerpbnk and restarted
the two replicas I was able to skulk again.  I was about to try the com-
mand "set dir /.: to new epoch" which was suggested as a fix in defect
5047 but I never got a chance.  A sample of the cdsd.log files on the
two replicas were:

RIOS Replica:
============

BACK\do_updates\ create object BADCLOCK
entry simple name=^H^Mad_intf_largo
ENTRY CTS=16-sep-1993 18:26:12.7334381/08-00-09-25-7d-69

 [7836] Mon Sep 20 12:37:27 1993

 [16226] Mon Sep 20 12:43:08 1993

BACK\do_updates\ create object BADCLOCK
entry simple name=^H^Oad_intf_soldier
ENTRY CTS=22-sep-1993 19:09:26.9893791/08-00-09-25-7d-69

BACK\do_updates\ create object BADCLOCK
entry simple name=^H^Otr_intf_soldier
ENTRY CTS=22-sep-1993 19:09:28.4337100/08-00-09-25-7d-69

 [7195] Wed Sep 22 15:23:52 1993

 [8978] Wed Sep 22 15:51:30 1993

i486 Replica:
============

BACK\do_updates\ create object BADCLOCK
entry simple name=^H^Oad_intf_soldier
ENTRY CTS=22-sep-1993 20:09:25.3312041/08-00-09-25-7d-69

BACK\do_updates\ create object BADCLOCK
entry simple name=^H^Otr_intf_soldier
ENTRY CTS=22-sep-1993 20:09:26.6766880/08-00-09-25-7d-69

 [20847] Wed Sep 22 16:50:13 1993

BACK\do_updates\ create object BADCLOCK
entry simple name=^H^Oad_intf_soldier
ENTRY CTS=22-sep-1993 20:13:02.4136271/08-00-09-25-7d-69

[10/20/93 public]
This is happening so rarely that we can't seem to get a handle on it
but we know its there.....
Defer

[12/06/93 public]

HP users have run across this error in April 1993 and
October 1993 (1.0.2 code in both cases) with a single
CDS server and clearinghouse:

      I just ran across a curious error while trying to delete an
object from the CDS (from porter):

cdscp> delete object /.:/users/jad/test-server
delete object /.:/users/jad/test-server
Error on entity: /.../ale.nsa.hp.com/users/jad/test-server
Server clocks are not synchronized (dce / cds)
Function: dnsDelObj

      Does anyone know what this is all about?  The time on the clocks
of the related systems are as follows:

pimlico (jad) 94 % for host in porter ipa pimlico ; do
> remsh $host 'echo `hostname`: `date`' ; done
porter.nsa.hp.com: Wed Apr 7 09:31:20 PDT 1993
ipa.nsa.hp.com: Wed Apr 7 09:31:21 PDT 1993
pimlico.nsa.hp.com: Wed Apr 7 09:31:21 PDT 1993

      They all look OK to me, definitely within the resolution of my
crude test.  Clues, anyone?

      I was not doing anything with multiple clearinghouses.
We were still seeing the problem even after the cell
server's DCE was restarted.

Same symptoms in October 1993.  This seems to be a rare bug
which is not dependent on multiple clearinghouses as previously
thought.

[8/15/94 public]
Got what we believe is a fix for this from shu at hp. It was included
in a new bug 11677 which I duped to this one. From 11677....

The bugcheck was caused by a piece of code which is not
thread safe.  When a race condition occurred among
multiple competing threads, a timestamp recorded in
one thread may be interpreted as "went backward"
because by the time that thread was granted a cdsd server
lock, the global variable "lasttime" may already be updated
by other competing threads.  The fix is to get system
local time inside the critical region surrounded by
SERVER_LOCK ... SERVER_END_LOCK so that the local time
is guaranteed to be more recent than the global "lasttime".
The following are the diff's of the recommended fixes in the file
    directory/cds/server/uid_lib.c :
314,317d332
<     /* Get time in UTC */
<     sys_time_to_utc(NULL, &now);
<     ODD_time_quad(now);
<
331a347,350
>
>     /* Get time in UTC */
>     sys_time_to_utc(NULL, &now);
>     ODD_time_quad(now);

The fix will be submitted in a day or so as part of a larger drop.
Assigning it to myself until the submission since I'm the one testing it.

[8/16/94 public]
Submitted above fix.



CR Number                     : 6103
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : cdstest
Short Description             : cdstest overwrites input buffer causing core dump
Reported Date                 : 11/16/92
Found in Baseline             : 1.0.2
Found Date                    : 11/16/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cdstest.c
Sensitivity                   : public

[11/16/92 public]

Run cdstest with the following input:

	co
	/.../psycho.cells.sni-usa.com/blurie28037/dir00000005/obj00000005

causes a core dump at this point.

The problem is in the get_ent() routine.  The length
information being passed to fgets() is larger than the user's 
buffer really is.

The first time through the loop:

	len = 32;
	val = (char *)malloc(len);
	...
	...
	if (fgets(vp, len, stdion) == NULL) {
	...
	...

At this point, the size of the buffer 'val' is 32 bytes, which is
what fgets() reads.

Later in the same loop:

	...
	...
	slen = strlen(val);
	...
	else {
		len *= 2;
		val = (char *)realloc(val, len);
		vp = val + slen;
		...
		...

At this point, the size of the buffer 'val' is 64 bytes, and
len's value is '64', but 'vp' points to val[32].

During the second loop:

	if ( fgets(vp, len, stdin) == NULL) {

At this point, len is still '64' which means than fgets() is going
to read up to 64 *more* bytes into 'vp'.  But the buffer which
'vp' points to is only 32 bytes long.

[02/24/93 public]
Problem seems to be gone.
cancelled.

[02/24/93 public]
Didn't notice that this was SVR4 specific. Obly tested on pmax
and RIOS. Reopen it. Got suggested fix from Benjamin Lurie and
will check out getting it in this release.

[8/18/93 public]
Adjusted the input buffer size to be the size of unused portion of
newly allocation buffer. Marked it as fix instead of closd because 
waiting for ohara@sni-usa.com to test on their mx300 platform.

[11/11/93 public]
fixed->closed.



CR Number                     : 6069
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : cdsclerk
Short Description             : Some 1024 bytes memory chunks never get freed up in cdsclerk
Reported Date                 : 11/13/92
Found in Baseline             : 1.0.2
Found Date                    : 11/13/92
Severity                      : A
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 1.0.2
Affected File(s)              : directory/cds/child/clerkreadattribute.c, directory/cds/child/clerkresolvename.c
Sensitivity                   : public

[11/13/92 public]

According to malloc tracing on "cdscp show dir /.: " test there are 
7x5120 bytes extra memory allocated per such request if the cdscp's confidence 
is high - 5120 is five 1024-bytes chunks. 

After 200+ of "cdscp show dir /.:" with "set cdscp conf = high" the total
memory allocated, used list(8539216) + free list(62496), is about 8.6 mega 
bytes and its VSZ grew to more than 20 megabytes. The used list remained that
high even after several hours of idling. 

The tracing data also showed that the request size was 688 bytes at the time 
when more memory need to be allocated via sbrk. This may gives a clue 
as to which thread(s) is not doing its freeing work. Note that 688 bytes is
taking from the 1024 bytes bucket.


Configuration ---

DCE build 1.0.2b5+, built on 11/09/91
Three PMAX cell

Test --- 

	cdscp >/dev/null 
		> set cdscp set con = high
		> show dir /.: 

		> ...

		   < a total of 200 shows >

[11/18/92 public]

With further intrumentations in "cma_lib_malloc" and "malloc" the new malloc
trace shows that "dns_malloc_instr" is reponsible for allocation those 
668(mis-typed as 688 above) bytes memory chuncks. The routine is in: 

	/project/dce/build/dce1.0.2/src/directory/cds/library/dnsmalloc.c

The following is the first piece of the routine:

/*
 * ROUTINE - dns_malloc_instr
 *
 * Our little version of malloc() - instrumented for debugging, etc.
 *
 * This is the wrapper for malloc().  It performs pool-wide integrity
 * checks of memory, maintains the diagnostic support structures, etc.
 */
void_ptr
dns_malloc_instr (
    length,             /* length of memory to allocate */
    type,               /* Type of memory, see mem_* literals  */
    lineno,             /* Line number */
    filename_p          /* File name */
                )
    int         length;
    mem_type    type;
    int         lineno;
    char        *filename_p;
{
    char       *adr_p;
    int         superchunk_offset;

    if (checking_all_memory)
        check_mem();

    if (superchunk_mode && ((length == 8192) || (length == 4096))) {
        adr_p = (char *)malloc_superchunk(length, &superchunk_offset);
    } else {
        superchunk_offset = 0;
        adr_p = (char *)malloc(sizeof(mem_list_t) + length + sizeof(int));
    }


	...

[11/20/92 public]

>With further intrumentations in "cma_lib_malloc" and "malloc" the new malloc
>trace shows that "dns_malloc_instr" is reponsible for allocation those
>668(mis-typed as 688 above) bytes memory chuncks. The routine is in:

> 	/project/dce/build/dce1.0.2/src/directory/cds/library/dnsmalloc.c

Due to a flaw in my cma_lib_malloc intrumentation the tracing of its callers' addresses
may not be corrent. So, the "dns_malloc_instr" may not be the right caller mallocing the 
668 bytes memmory chuncks.

[11/24/92 public]

>Due to a flaw in my cma_lib_malloc intrumentation the tracig ...

I got the same result with my new intrumentation --- the 668 bytes 
allocations all come from "dns_malloc_instr". Also, I put a "fprintf" 
in "dns_malloc_instr" and found that there were 55 cma_lib_malloc 
calls from it with size = 55 bytes and 35 of them never got released.

My malloc trace won't do stack dump and I am asking John Grober from HP
to help us getting one with his tool by running the following simple
test:


	(as root)
	cdscp
		set cdscp conf = high
		show dir /.:
		q

[11-dec-92 public]
I have plugged the 668 (1024) byte leaks.  I have reassigned this
bug to security for the smaller leaks inside of 'rpc_binding_set_auth_info'.

[12/14/92 public]

        Congratulations!

        Yes, the big leak has been fixed --- proved by the malloc trace.
        And, after 100 "cdscp show dir /.:" the clerk's virtual size
        remains constant at 8.97 MB.

	I would like to thank John Gober of HP for providing us the 
	detailed cdsclerk stack traces.

[12/14/92 public]
re-assigning this bug to CDS.  I assume it should be marked 'fix' but
I'll leave that to DEC.  If there is another memory leak in security, then
a new OT report should be created for it with some information describing
the problem.  I don't just want to have an A1 report from CDS switched over
to security.

[12/21/92 public]
closed!!!!!



CR Number                     : 6029
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : Attribute modified immediately after directory creation is not propagated.
Reported Date                 : 11/11/92
Found in Baseline             : 1.0.1
Found Date                    : 11/11/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.2
Affected File(s)              : back_propagate.c
Sensitivity                   : public

[11/11/92 public]

If an attribute is added to a directory within the first minute after
the directory is created, the attribute is not propagated to the replica
by the background propagation.  A skulk must be done to propagate it.
After the first minute, propagation appears to work fine.

All I know so far is that back_propagate is executing the following path:

    /* If the update is less then allupto, propagation has already
     * occurred so we do not need to update; this is the propagate
     * of allupto just after a skulk.
     */
    if (dnsCmpCTS((dns_cts *)begin_p, (dns_cts *)allupto_ts_p) < 0)
        /* don't bother to send anything */
        goto free_buffer;

This result in the update not being propagated.

[11/12/92 public]

The same problem can occur with attributes of entries 
if the attribute is modified immediately after creating
the replica.

If the following script is executed:

cdscp<<CDSCPEOF
create directory /.:/${1} clearinghouse /.:/${2}
create object /.:/${1}/obj1
set directory /.: to skulk
create replica /.:/${1} clearinghouse /.:/${3}
set directory /.:/${1} 1.11.12.13.14.15 = 1011
set object /.:/${1}/obj1 1.11.12.13.14.15 = 1011
CDSCPEOF


The attriubtes 1.11.12.13.14.15 for the directory and object will
not be propagated automatically to the replica.  A skulk must occur
for them to be passed to the replica.


The problem occurs because of the following order of events:

- Directory created.

- Replica created.

   - Creation of replica causes entry to be added to propagation queue
     with a timestamp T1

   - Creation of replica causes skulk of directory.

   - Skulk causes allupto and lastskulk attributes to be updated to
     time of this skulk T2

- New attribute added to directory with timestamp T3.

- Addition of new attribute causes back_propagate_sched to be called.
  But since an entry for this directory already exists on the queue (with timestamp T1),
  it is dropped.

- Background propagation calls back_propagate which checks
  the begin_p timestamp T1 to the allupto_p timestamp T2.

- Since the update is less than alllupto, the propagation is dropped.
  The result is that the attribute added at time T3 is not propagated.


I was able to fix the problem by modifying the routine back_propagate_sched.
I changed the code which originally looked like:

                /* If propagate an update for a directory or */
                /* is for the same entry of the directory, found it */
                if ((type == ET_directory) ||
                    EQ_Timestamp(stream_p->db_entry.data_cts,
                                     prop_p->prop_element_cts))
                    {
                    /*
                     * If we have a matching propagate, see if beginning
                     * timestamp should be adjusted.  May already be covered.
                     * No need to schedule another propagate.
                     */
                    if (dnsCmpCTS((dns_cts *)ts_p,
                                  (dns_cts *)prop_p->prop_begin) < 0)
                        COPY_Timestamp(ts_p, prop_p->prop_begin);

                    SERVER_END_LOCK(file_p->file_mutex);
                    /* Otherwise this timestamp is after, will be picked up */
                    return;
                    }

to look like:


                /* If propagate an update for a directory or */
                /* is for the same entry of the directory, found it */
                if ((type == ET_directory) ||
                    EQ_Timestamp(stream_p->db_entry.data_cts,
                                     prop_p->prop_element_cts))
                    {

                    DBSet_t             *dir_set_p;
                    DBSetMember_t       *dir_member_p;
                    int                 dir_index;
                    dns_status_t        dir_status;

                    dir_status = find_attribute(stream_p->db_dir.data_p,
                                                (AttributeName_t *)dns_attlist[DNS_ALLUPTO].aname,
                                                &dir_set_p, &dir_index);

                    /*
                     * Make sure the existing entry was not before the last skulk
                     * and the new update was after the last skulk.
                     */
                    if (dir_status == DNS_SUCCESS) {
                       dir_member_p = (DBSetMember_t *)DATA_DBSet(dir_set_p);
                       if ((dnsCmpCTS((dns_cts_t *)prop_p->prop_begin,
                                      (dns_cts_t *)dir_member_p->dm_data) < 0) &&
                           (dnsCmpCTS((dns_cts_t *)dir_member_p->dm_data,
                                      (dns_cts *)ts_p) <= 0))
                          continue;
                    }
                    /*
                     * If we have a matching propagate, see if beginning
                     * timestamp should be adjusted.  May already be covered.
                     * No need to schedule another propagate.
                     */
                    if (dnsCmpCTS((dns_cts *)ts_p,
                                  (dns_cts *)prop_p->prop_begin) < 0)
                        COPY_Timestamp(ts_p, prop_p->prop_begin);

                    SERVER_END_LOCK(file_p->file_mutex);
                    /* Otherwise this timestamp is after, will be picked up */
                    return;
                    }


If a matching entry is found in the propagation queue, the ALLUPTO timestamp is checked.
If the timestamp of the entry in the queue is less than ALLUPTO and the
timestamp of the new update is greater than ALLUPTO, the current entry is not
considered a match.  This makes sure that one entry exists on the queue for
updates occurring before the last skulk and one entry exists on the queue for
updates occurring after the last skulk.

This fixed the problem.

This solution should be verified by DEC.

[9/17/93 public]
This problem was addressed and John Grober's fixed was also adopted by
DEC@peckham in their 1992/12/07's fixes to back_progagate.c. Closed



CR Number                     : 5925
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 3159
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/library/cdsstrtosimple.c
Short Description             : OID AND RESPECTIVE PNUEMONIC CHARACTERS ARE COUNTED TWICE
Reported Date                 : 11/4/92
Found in Baseline             : 1.0.1
Found Date                    : 11/4/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/cdsstrtosimple.c
					     directory/cds/library/dnscvtcdsfull.c
Sensitivity                   : public

[11/4/92 public]

Scenario:
  Consider the following two object names being created in CDS:

1) create obj /.../c=ca/o=cell1/D218/D758/D932-
   /FIRST________________________________________________________________
   _______________________________-
   /SECOND_______________________________________________________________
   _______________________________-
   /THIRD________________________________________________________________
   _______________________________-
   /FOURTH_____________-
   /SCDVC012__1____

2) create obj /.../2.5.4.6=ca/2.5.4.10=cell1/D218/D758/D932-
   /FIRST________________________________________________________________
   _______________________________-
   /SECOND_______________________________________________________________
   _______________________________-
   /THIRD________________________________________________________________
   _______________________________-
   /FOURTH_____________-
   /SCDVC012__1____

Both, from the X.500s point of view, are equal.  However, I get a
syntax error (NOROOM) when I attempt to create the object using the
second format; the first works.  It seems that the OID and the trans-
lated corresponding pneumonic character are both counted when checking
to see if the MAX is reached (which is 402).

Effects:
We are unable to issue the second command unless we reduce the size of
the name by 2(?) characters.

Yes, 402 is the maximum full name length that I am referring to. After
Looking
at the code , we discover the cause and a solution.

Cause:
  In cdsstrtosimple.c the function (cds_strToSimple), for typed names,
  if the attribute OID is converted to the pneumonic or the pneumonic is
 converted to an OID, the output buffer length is decremented by lenghts
 of both the OID and the pneumonic when in fact only one of the pneumonic
  or OID is copied to the buffer.  The code therefore detects the end of
 buffer prematurely and returns an error saying there is no room left
  (the name is too big).

Solution:
  cds_strToSimple should be changed to add back the length of the attribute
name that was originally input (OID or pneumonic) if it was converted to
the other form.  This will make the output buffer length correct.

[2/1/93 public]
This CR will be addressed with a rewrite of cdsstrtosimple.c, ref. CR 3159,
also deferred to 1.0.3.

[10/14/93 public]
Radical surgery has been completed.
It now passes the above tests.

[11/11/93 public]
fixed->closed.



CR Number                     : 5901
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : background update propagation not working correctly for multiple updates.
Reported Date                 : 11/3/92
Found in Baseline             : 1.0.1
Found Date                    : 11/3/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 1.0.2
Affected File(s)              : db_directory.c
Sensitivity                   : public

[11/3/92 public]

If two objects in a replicated directory are modified within
one minute of each other, only the first update is getting
propagated by the background propagation thread.  The other
one does not get propagated until a skulk takes place.

To reproduce, do the following:

- Create a directory and replicate it in another clearinghouse.

- Create two objects, obj01 and obj02 in the directory.

- Skulk the directory to make sure it is up-to-date.

- Add the attribute 1.11.12.13.14.15 = 1011 to both objects.
  They must be added within one minute of each other.

- Wait for about 90 seconds to allow the background propagation
  to run.

- Set the cdscp preferred clearinghouse to the clearinghouse containing
  the read-only replica of the directory.

- Show both objects.

You will note that the new attribute only exists for the first object
modified.

- Now skulk the directory and show the objects again.

Both objects now contain the attribute.


The reason only the first object is getting propagated is because
in the routine back_propagate_sched,  the check:

                    EQ_Timestamp(stream_p->db_entry.data_cts,
                                     prop_p->prop_element_cts))

is evaluating to true, resulting in the modification to the
second object not getting added to the propagation queue.

In looking at the problem, the bug appears to be in the routine
dir_read which reads a directory record.  This routine contains the
code:
         COPY_Timestamp(member_p->dm_data, stream_p->db_entry.data_cts);

It looks like the timestamp should be getting copied into stream_p->db_dir.data_cts
rather than into db_entry.data_cts .

When updating an attribute for the object, the routine lookup_entry calls
db_entry_read_for_update which sets the stream_p->db_entry.data_cts to
the creation timestamp of the object.  However, lookup_entry then calls
db_dir_read to read the directory.  db_dir_read eventually calls dir_read and
ends up overwriting the stream_p->db_entry.data_cts with the creation timestamp
of the directory.  This results is updates to all objects under a given directory
to be placed on the propagation queue using the directory CTS rather than the
object CTS.  The result is that only the first update is placed on the
propagation queue by back_propagate_sched.


I have tried modifying the routine dir_read and it appears to solve the problem.
The diff for db_directory.c is:  Note, line numbers will not match.

< /*
<  * BUG
<  *     The creation timestamp for the directory needs to be copied into
<  *     db_dir.data_cts, not db_entry.data_cts.  This is wrong in two places.
<  *     db_dir.data_cts, not db_entry.data_cts.  This is wrong in two places.
<  *
<  *            COPY_Timestamp(member_p->dm_data, stream_p->db_entry.data_cts);
<  */
<                 COPY_Timestamp(member_p->dm_data, stream_p->db_dir.data_cts);
---
>               COPY_Timestamp(member_p->dm_data, stream_p->db_entry.data_cts);
918,921c911
< /*
<  *          COPY_Timestamp(NullTimestamp, stream_p->db_entry.data_cts);
<  */
<               COPY_Timestamp(NullTimestamp, stream_p->db_dir.data_cts);
---
>             COPY_Timestamp(NullTimestamp, stream_p->db_entry.data_cts);

[11/13/92 public]
OT#5901: propagates not happening. Good sleuthing by John Grober.
dir_read() was putting the directory CTS in the db_entry.data_cts.
fixed

[11/24/92 public]
Closed.

[11/24/92 public]
Closed.

[12/8/93 public]
Set status to closed.



CR Number                     : 5876
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : cds
Subcomponent Name             : server
Short Description             : ta_create_dir uses pointers which have been freed
Reported Date                 : 10/30/92
Found in Baseline             : 1.0.1
Found Date                    : 10/30/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/server/ta_create.c
Sensitivity                   : public

[10/30/92 public]

In ta_create_dir the following code is executed:

	COPY_bytes (&net_info.pac, &self_user_p->ud_pac, sizeof(sec_id_pac_t));
        self_user_p->ud_is_pac = 1;
        sec_login_free_net_info (&net_info);/* cleanup */

After this, the self_user_p->ud_pac contains pointers which are
no longer valid.  

net_info before sec_login_free_net_info():

(gdb) print net_info
$32 = {pac = {pac_type = sec_id_pac_format_v1, authenticated = 1, realm = {
      uuid = {time_low = 512064320, time_mid = 46681,
        time_hi_and_version = 4555, clock_seq_hi_and_reserved = 171 '+',
        clock_seq_low = 145 '', node = {"\000\000@6_R"}},
      name = 0x8441160 "/.../psycho.cells.sni-usa.com"}, principal = {uuid = {
        time_low = 103, time_mid = 46681, time_hi_and_version = 8651,
        clock_seq_hi_and_reserved = 182 '6', clock_seq_low = 0 '\000',
        node = {"\000\000@6_R"}}, name = 0x84411c4 "hosts/psycho/cds-server"},
    group = {uuid = {time_low = 106, time_mid = 46681,
        time_hi_and_version = 8651, clock_seq_hi_and_reserved = 182 '6',
        clock_seq_low = 1 '\001', node = {"\000\000@6_R"}},
      name = 0x8441228 "subsys/dce/cds-server"}, num_groups = 1,
    num_foreign_groups = 0, groups = 0x8441284, foreign_groups = 0x0},
  acct_expiration_date = 0, passwd_expiration_date = 0,
  identity_expiration_date = 720497293}

self_user_p after sec_login_free_net_info():

(gdb) print *self_user_p
$33 = {ud_mutex = 0x0, ud_ns_p = 0x0, ud_ch_p = 0x0, ud_client_p = 0x0,
  ud_chuid_p = 0x0, ud_node_p = 0x0, ud_protocol_p = 0x0, ud_rqst_p = 0x0,
  ud_rqst_end_p = 0x0, ud_rqstLength = 0, ud_resp_p = 0x0,
  ud_resp_end_p = 0x0, ud_respLength = 0,
  ud_transaction = {'\000' <repeats 14 times>}, ud_msgType = 0 '\000',
  ud_operation = 0 '\000', ud_Clearinghouse = {'\000' <repeats 16 times>},
  ud_protocol_version = 0 '\000', ud_auth = 0 '\000',
  ud_node_verified = 0 '\000', ud_net_ctx_p = 0x0, ud_is_pac = 1, ud_pac = {
    pac_type = sec_id_pac_format_v1, authenticated = 1, realm = {uuid = {
        time_low = 512064320, time_mid = 46681, time_hi_and_version = 4555,
        clock_seq_hi_and_reserved = 171 '+', clock_seq_low = 145 '',
        node = {"\000\000@6_R"}},
      name = 0x8441160 '\002' <repeats 200 times>...}, principal = {uuid = {
        time_low = 103, time_mid = 46681, time_hi_and_version = 8651,
        clock_seq_hi_and_reserved = 182 '6', clock_seq_low = 0 '\000',
        node = {"\000\000@6_R"}},
      name = 0x84411c4 '\002' <repeats 200 times>...}, group = {uuid = {
        time_low = 106, time_mid = 46681, time_hi_and_version = 8651,
        clock_seq_hi_and_reserved = 182 '6', clock_seq_low = 1 '\001',
        node = {"\000\000@6_R"}},
      name = 0x8441228 '\002' <repeats 200 times>...}, num_groups = 1,
    num_foreign_groups = 0, groups = 0x8441284, foreign_groups = 0x0}}

I don't know if the information about 'name's are important.  If 
so they should be copied out separately.  If not, then they should
be initialized to NULL in self_user_p.

These pointers are later referenced in determine_acl_size().  
Here is a stack trace which shows this:

#4  0x80c0b8e in strlen (str1=0x8420080 "") at string.c:641
#5  0x800d6b77 in determine_acl_size (wire_acl=0x8430c60, size=0x81accc0)
    at ../../../../../src/directory/cds/library/dpeaclconvert.c:776
#6  0x800d6295 in dpe_acl_wire_to_flat (wire_acl=0x8430c60, memtype=1,
    flat_acl=0x81acc5c, size=0x81accc0)
    at ../../../../../src/directory/cds/library/dpeaclconvert.c:116
#7  0x807bec7 in create_child_acs (user_p=0x81b0450, onbehalf_p=0x81b0424,
    hash_p=0x82d9a54, rec_p=0x83d9bd4, dir_p=0x83d9ba0, ch_p=0x81992c4)
    at ../../../../../src/directory/cds/server/ta_create.c:1096
#8  0x807d9b0 in create_child (exists_status=282107905, stream_p=0x83d9b90,
    user_p=0x81b0450, progress_p=0x81aed58, onbehalf_p=0x81b0424,
    uid_p=0x81af254, rp_p=0x81af27d, parentuid_p=0x84253ad)
    at ../../../../../src/directory/cds/server/ta_create.c:2459
#9  0x807d28c in ta_create_dir (user_p=0x81b0ac0, progress_p=0x842add0,
    actual_cts_p=0x81b0920)
    at ../../../../../src/directory/cds/server/ta_create.c:2035
#10 0x80902a8 in cds_CreateDirectory (h=0x83721fc, progress_p=0x81b31dc,
    actualcts_p=0x81b3a10, cds_status_p=0x81b3a20)
    at ../../../../../src/directory/cds/server/rpc_dispatch.c:2471
#11 0x8098eb5 in op4_ssr (call_h=0x82db9f8, drep=0x8379ffc, elt=0x81b3c30,
    h=0x83721fc, mgr_epv=0x80cfe18, st_p=0x81b3bf0, transfer_syntax=0x82dbbf4)
    at cds_clerkserver_sstub.c:4508
#12 0x8012abdf in rpc__cn_call_executor (
    arg=0x82db9f8 "C=\bl\037\027pF\024\b$", call_was_queued=0)
    at /usr/dsg1/dce/builds/osf_merge/src/rpc/runtime/cncthd.c:225
#13 0x8011177d in cthread_call_executor (cthread=0x819e0e8)
    at /usr/dsg1/dce/builds/osf_merge/src/rpc/runtime/comcthd.c:572
#14 0x8007ec49 in cma__thread_base (tcb=0x81388c0)
    at ../../../src/threads/cma_thread.c:1387

They are also referenced in dpe_acl_wire_to_flat().  Here is
a stack trace which shows this:

(gdb) where
#0  malloc_warning (funcname=0x80cc048 "strcpy", file=0x0, line=0,
    mptr=0x84411a8) at malloc.c:992
#1  0x80c1481 in malloc_verify (func=0x80cc048 "strcpy", file=0x0, line=0,
    ptr=0x84411c4, len=1) at mcheck.c:411
#2  0x80c1374 in malloc_check_data (func=0x80cc048 "strcpy", file=0x0, line=0,
    ptr=0x84411c4, len=1) at mcheck.c:246
#3  0x80c0ab1 in DBstrcpy (file=0x0, line=0,
    str1=0x8444305 "\001\001\001mD\b,AD\bT'D\b", str2=0x84411c4 "")
    at string.c:568
#4  0x80c0a19 in strcpy (str1=0x8444305 "\001\001\001mD\b,AD\bT'D\b",
    str2=0x84411c4 "") at string.c:537
#5  0x800d6407 in dpe_acl_wire_to_flat (wire_acl=0x8443b80, memtype=1,
    flat_acl=0x81c1c5c, size=0x81c1cc0)
    at ../../../../../src/directory/cds/library/dpeaclconvert.c:221
#6  0x807bec7 in create_child_acs (user_p=0x81c5450, onbehalf_p=0x81c5424,
    hash_p=0x82d9a54, rec_p=0x831170c, dir_p=0x83116d8, ch_p=0x81992c4)
    at ../../../../../src/directory/cds/server/ta_create.c:1096
#7  0x807d9b0 in create_child (exists_status=282107905, stream_p=0x83116c8,
    user_p=0x81c5450, progress_p=0x81c3d58, onbehalf_p=0x81c5424,
    uid_p=0x81c4254, rp_p=0x81c427d, parentuid_p=0x843c41d)
    at ../../../../../src/directory/cds/server/ta_create.c:2459
#8  0x807d28c in ta_create_dir (user_p=0x81c5ac0, progress_p=0x843599c,
    actual_cts_p=0x81c5920)
#9  0x80902a8 in cds_CreateDirectory (h=0x8377478, progress_p=0x81c81dc,
    actualcts_p=0x81c8a10, cds_status_p=0x81c8a20)
    at ../../../../../src/directory/cds/server/rpc_dispatch.c:2471
#10 0x8098eb5 in op4_ssr (call_h=0x83d439c, drep=0x83b4e24, elt=0x81c8c30,
    h=0x8377478, mgr_epv=0x80cfe18, st_p=0x81c8bf0, transfer_syntax=0x83d4598)
    at cds_clerkserver_sstub.c:4508
#11 0x8012abdf in rpc__cn_call_executor (
    arg=0x83d439c "8PB\bl\037\027\b\024/\b8\001\003", call_was_queued=0)
    at /usr/dsg1/dce/builds/osf_merge/src/rpc/runtime/cncthd.c:225
#12 0x8011177d in cthread_call_executor (cthread=0x819e118)
    at /usr/dsg1/dce/builds/osf_merge/src/rpc/runtime/comcthd.c:572
#13 0x8007ec49 in cma__thread_base (tcb=0x8139580)
    at ../../../src/threads/cma_thread.c:1387

[9/24/93 public]
Fixed - delayed free of net_info until end of routine.

[11/11/93 public]
fixed->closed.



CR Number                     : 5834
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : gdad
Short Description             : Intercell access doesn't work when three or more CDS servers are in named.data
Reported Date                 : 10/27/92
Found in Baseline             : 1.0.1
Found Date                    : 10/27/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b14
Affected File(s)              : directory/cds/gda/gda_bind.c
Sensitivity                   : public

[10/27/92 public]
Currently, gdad uses UDP to contact named with its domain name query.
When there are three or more cells in the nameserver database named.data,
a truncated response is returned.  RFC 1035 says that named should 
truncate responses when they are larger than the packet size, which on
our platform is 512 bytes.

The simplest fix would be to have gdad use TCP.  This involves using
SOCK_STREAM instead of SOCK_DGRAM, adding a connect(), doing write()
instead of sendto(), and a loop of read() instead of a recvfrom().

A better fix would use res_mkquery()/res_send() or res_search().

[10/28/92 public]
Whoa! The GDA uses UDP normally. However if it gets a truncated response,
it should retry using TCP. Perhaps there is a problem in turning around
the second request.

[10/30/92 public]
Of course you're right, the logic is there, I can hardly believe I didn't
look for it!  Anyway, based on what I saw in dbx, it appears that recv_bind()
handling of truncated data is incorrect:  ie, we're creating an invalid answer
when we run out of info in the first UDP packet.  Perhaps the first thing
gdad should do on receipt of the UDP packet is to check whether truncation
happened:  if so, throw away the packet and try TCP.  If gdad is going to 
use the truncated info in the UDP packet, it may be missing logic to ensure 
it detects the point of truncation.

I'll try to come back and look at this problem more next week ...

[12/8/92 public]
Changed priority as per OSF reclassification.

gdad is somewhat innocent.  The logic that causes tcp to be tried if udp
truncation occures is correct.  The problem stems from send_recv_vc() but the
real problem may lie in the AIX named.  What is happening is send_recv_vc()
is using the same 4K buffer for sending the question to named and receiving
the answer.  What is happening is that named seems to be unhappy that a mere
100 byte question is coming across in a 4K buffer.  What I did to rememdy the
problem is setup the iov to use the length of the question rather than the
4K length.  And I also check the status of the writev against the length of the 
question rather than the 4K buffer.  This fixes the situation.  However, what
puzzles me is why named would gripe.  What if an actual 4K question was sent.
See what happens with your named.  I plan on getting in touch with the AIX
base people.

[8/4/93 public]
It looks like that TCP is used if the truncation happens. Can dls or someone
related please to update this bug to see if it's a AIX named specific problem 
as mfox pointed out.  send_recv_vc() also provides the way to use the buffer 
less than 4k, but the send_len seems being hard coded as 4k in bind_process.

[9/10/93 public]
This problem has be retested in OSF, but could not be reproduced. It looks
like a AIX specific problem. Reassign to IBM folks.

[10/8/93 public]

I have tried this at IBM and this problem no longer exists.

[10/08/93 public]
Cancel due to nonproducible on current code base.

[08/17/94 public]
This problem shows up on HP platforms as well, and does
indeed seem to be due to sending a buffer much longer
than the actual message length.  Apparently named thinks
it's gotten a truncated message (since it got this huge
message with apparently little in it); it returns a message
with the truncate bit set but no answer, auth, or additional
RR records.  Fix is trivial (send a message that's only as long
as it needs to be).

[9/9/94 public]
John, per Bob's req, it's assigned to you now.

[9/23/94 public]
Fix has been submitted but needs to very fix in more than two 
cells. Rick please verify.

[9/26/94 public]
We have seen intercell work with three cells so I'm going to close this. If
we see any indication that the problem exists for more cells we can reopen it.



CR Number                     : 5617
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : cached server error messages are confusing
Reported Date                 : 10/12/92
Found in Baseline             : 1.0.1
Found Date                    : 10/12/92
Severity                      : E
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 1.0.2
Affected File(s)              : adver_cds_event.c, adver_service_rpc.c, cdsmsg.msg
Sensitivity                   : public

[10/12/92 public]
When the cdscp define cached server command is issued and a cached
clearinghouse already exists with the specified tower, cdscp returns the
error "Specified full name already exists (dce / cds)". If a show cached
server command is then issued for the server name in the first command,
cdscp returns "Requested entry does not exist (dce / cds)".

These error messages are confusing at best...

[10/28/92 public]
Fixed, tested and bsubmit'd ... please close.

[11/24/92 public]
Closed.

[11/24/92 public]
Closed.

[12/19/92 public]
Set status to closed.



CR Number                     : 5596
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : clerk
Short Description             : null partial results
Reported Date                 : 10/9/92
Found in Baseline             : 1.0.1
Found Date                    : 10/9/92
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/child/clerkreadattribute.c
Sensitivity                   : public

[10/9/92 public]
dacl_creates.sh produced the following output from cdscp:

 > create dir /.:/dacl_creates/dir1
 > Error on entity: /.../odaat.dpe.lkg.dec.com/dacl_creates/dir1
 > Requested entry does not exist (dce / cds)
 > Function: dnsCreateDir
 > dnsCreateDir: partial results = %x000000000000000000000000000000000000

The partial results field is not being filled in by the runtime.

As a part of its error processing, cdscp checks for partial results
(returned by the runtime) and will display them if they exist.  In the
above case, the partial results have not been updated by the runtime.

[5/5/93 public]
From CR 7354, another way to reproduce this problem:

We tested CDS over the XDS interface. We created a soft link

link1="/.../localcell/link1"

that points to an object

obj1="/.../localcell/obj1". This object does not exist.

We set :

dns_opq_fname part_result;
...
flags->fsPartialRes = &part_result;
flags->fsResLength = sizeof (part_result);

Then we called cdsResolveName with link1 und expected to get DNS_ERROR and

flags->dsPartialRes="/.../localcell".

We got DNS_ERROR but

flags->d2PartialRes="".

[10/10/93 public]
Two different things are being described here.

I assume that the first is caused by the directory /.:/dacl_creates
not being there. The child code looks for the parent replicas, and
fails if this internal read_att() fails, but does not get the
partialResults from this failure. Thus no partialResults are returned.
The fix has been tested and is ready for submission.

In the second, the error should be DANGLINGLINK, and thus there are
no partialResults.

[10/10/93 public]
Fixed.

[11/11/93 public]
fixed->closed.



CR Number                     : 4984
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : "cdscp disable" returns early
Reported Date                 : 8/10/92
Found in Baseline             : 1.0.1b25
Found Date                    : 8/10/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : adver_service_rpc.c
Sensitivity                   : public

[8/10/92 public]
The "cdscp disable server" command should not return until cdsd has completed
its processing:  then, it should give a return code indicating whether the
disable succeeded or failed.  Similar processing may be required for "cdscp
disable clerk".

[5/26/94 public]
This has been fixed for "disable clerk" in my 5/25/94 drop:
Rework code for "disable clerk" so that the response doesn't
occur until the advertiser is really ready to quit. It was
returning about 15 seconds too early, as it takes so long for
the clerks to run down before the advertiser can quit.



CR Number                     : 4983
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : "cdscp disable" leaves sockets lying around
Reported Date                 : 8/10/92
Found in Baseline             : 1.0.1b25
Found Date                    : 8/10/92
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/adver/adver_clerk_events.c
Sensitivity                   : public

[8/10/92 public]
From Ken Walker:
'cdscp disable clerk' leaves the sockets named 'cdsclerk_<pid>_<user>' in
/opt/dcelocal/var/adm/directory/cds.

'cdscp disable server' leaves the socket 'cdsDiag' in the same directory.

[12/8/92 public]
Changed Severity as per OSF reclassification.

[09/09/93 public]
Added code to dnsCleanup in adver_clerk_events.c to unlink the clerk
sockets as the clerks are killed.



CR Number                     : 4982
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cdsd
Short Description             : Failed attempt to delete a clearinghouse causes problems
Reported Date                 : 8/10/92
Found in Baseline             : 1.0.1b25
Found Date                    : 8/10/92
Severity                      : B
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/server/ta_mgmt.c
Sensitivity                   : public

[8/10/92 public]
The following set of commands illustrate the problem:
  cdscp create clearinghouse /.:/peter_ch 
  cdscp create dir /.:/peter2 clearinghouse /.:/peter_ch
  cdscp delete clearinghouse /.:/peter_ch
    Failure in routine: cp_clrdel_clh; code = 282108924
    Directory must be empty to be deleted (dce / cds)
  cdscp show clearinghouse /.:/peter_ch

                          SHOW
                 CLEARINGHOUSE   /.../kingdom.cell.austin.ibm.com/peter_ch
                            AT   1992-08-06-14:04:27
  Error on entity: /.../kingdom.cell.austin.ibm.com/peter_ch
  not registered in endpoint map (dce / rpc)
  Function: dnsEnumAttr
At this point, skulks of /.: hang, and the clearinghouse can't be deleted or
cleared.  Re-starting cdsd clears the situation, but the clearinghouse is in
a "dying" state.

The problem appears to be an early return in server/ta_mgmt.c:mgmt_delete_ch().  
When mgmt_remove_dir() fails, the clearinghouse state is left as CS_dyingCH,
and db_disable() has done rpc_unregister_ch() to unregister the clearinghouse
with the endpoint mapper.  I've had some success with a hacked mgmt_delete_ch();
in this code, a goto sends control to the end of the function, where the state
is reset to CS_on, and at that point I added an invocation of db_enable() to get
the clearinghouse back in the endpoint mapper database.  It might be a better
idea to leave the clearinghouse in the CS_dyingCH state and only move the 
db_disable() after the early return, so it doesn't happen in this case.

[9/17/93 public]
This problem in the code of "delete a clearinghouse" seems a little more 
than this bug. 

This bug is casued in mgmt_delete_ch() which does not check if there 
is a master replica in the clh until db_disable is called, so that when 
it discover a DNS_NOTEMPTY returned from mgmt_remove_dir(), the clearinghouse
has been disabled, and the contol returns immediately to the caller instead
of trying to restore the clearinghouse. We're able to fix this problem by
adding the code right after mgmt_remove_dir() to check return status and 
restore the On to the clearinghouse if DNS_NOTEMPTY is returned.
 
The code after the db_disable is supposed to recover the cleringhouse if 
someone add a master replica to this clh during the process, but unfourtunately,
it does not work because there is no call to db_enable() and the clh is
still disabled.

We fix both of problems by making the following changes,

   Add a local variable byte_t  clh_disable = FALSE;

   after mgmt_remove_dir()
	if ((status == DNS_NOTEMPTY) &&
                (db_pseudo_read_for_update(stream_p) == DNS_SUCCESS))
        {
         dns_free((char *)pseudo_buf_p);
         goto restore_clh;
        }

   after db_disable
	clh_disable = TRUE;
   and removed if (status != DNS_SUCCESS) return(status);

   In bottom of routine,
   if (clh_disable) db_enable(ch_p, TRUE);

Here is the diff,
bdiff ta_mgmt.c 
===================================================================
RCS file: ./directory/cds/server/ta_mgmt.c,v
retrieving revision 1.1.5.1
11,13d10
<  * Revision 1.1.5.1  1993/09/15  22:46:49  pwang
<  * *** Initial Branch Revision ***
<  *
732c729
<     byte_t            state;
---
>     byte_t            state, clh_disable = FALSE;
734c731
< 
---
>     
739d735
< 
780a777,783
>     if ((status == DNS_NOTEMPTY) && 
>               (db_pseudo_read_for_update(stream_p) == DNS_SUCCESS))
>       {
>        dns_free((char *)pseudo_buf_p);
>        goto restore_clh;
>       }
> 
789,790c792
< 
<     if (status != DNS_SUCCESS) return(status);
---
>     clh_disable = TRUE;
diff -r1.1.5.1 /u0/rcs_trees/dce/rcs/#odexm008704/ta_mgmt.c
840a843,844
> restore_clh:
> 
849,850c853,854
< 
<     db_free_stream(stream_p);
---
>     db_close_stream(stream_p);
>     if (clh_disable) db_enable(ch_p, TRUE);
	
  
Theare are a couple of thoughts,
- Shouldn't we do some kind of synchronization check of DELETE_CH_OP and
 OP_CreateDirectory  before the transcation starts, for example in 
 get_stream() if function == DELETE_CH_OP go check if there is any
 OP_CreateDirectory going on and waiting it to complete and then to
 setup a delete_on flag to prevent others from creating master. And 
 then we could easily determine if there is a master replica before
 the transaction starts and do not need to worry about others to create
 master replica during the transcation. 

- In the current code, if someone create a master replica during
the deleting clh and is detected after all read-only replicas are
removed, all of removed read-only replicas won't not be recovered.
This seems consistent with unix fs. But is there any reason other
than this?

[10/12/93 public]
This fix looks fine. I am assigning this back to pwang for check-in.

[10/12/93 public]
Checked in as Alan had approved. And closed.



CR Number                     : 4949
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/includes/gda_bind.h
Short Description             : Sun's <sys/types.h> defines
addr_t. gda-bind.h also defines it.
Reported Date                 : 8/6/92
Found in Baseline             : 1.0.1
Found Date                    : 8/6/92
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : gda_bind.h
Sensitivity                   : public

[8/6/92 public]

        Both AIX and OSF/1's <sys/types.h> do not define addr_t, but
        Sun does. This causes type conflict when compiling any code
        include <sys/types.h> and gda_bind.h

Proposed Solution:

        SInce there may be other systems which define addr_t, I changed
        addr_t in gda_bind.h to my_addr_t. I checked the other source, and
        don't see the reference to this particular type.

[6/16/94 public]
this is fixed using gda_addr_t.



CR Number                     : 4947
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/server/unix_lib.c
Short Description             : Porting problem:
<sys/resource.h> not including <sys/time.h>
Reported Date                 : 8/6/92
Found in Baseline             : 1.0.1
Found Date                    : 8/6/92
Severity                      : C
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : unix_lib.c
Sensitivity                   : public

[8/6/92 public]

        unix_lib.c include <sys/resource.h> which has reference to 
        "struct timeval" defined in <sys/time.h>. On AIX, <sys/resource.h>
        includes <sys/time.h>, but Sun's <sys/resource.h> does not.

Proposed Solution:
        Expplicitly include <sys/time.h> in unix_lib.c before include
        <sys/resource.h>.

[6/13/94 public]
fixed.



CR Number                     : 4876
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/includes/dns_record.h
Short Description             : cds_types.h and utc.h should be included with dce/.
Reported Date                 : 7/29/92
Found in Baseline             : 1.0.1
Found Date                    : 7/29/92
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : dns_record.h
Sensitivity                   : public

[7/29/92 public]

	Two places where <cds_types.h> and <utc.h> are included. They
	should be <dce/cds_types.h> and <dce/utc.h>.

[6/15/93 public]
Pray tell, where are those two places? On a quick glance I couldn't locate
them.

[6/26/94 public]
fixed in 6/23 sams cleanup drop



CR Number                     : 4400
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : cdscp
Short Description             : inconsistance time displays
Reported Date                 : 6/23/92
Found in Baseline             : 1.0
Found Date                    : 6/23/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/control/format_utcabs_to_print.c
Sensitivity                   : public

[6/23/92 public]

If the env variable TZ is set (required for svr4 and posix) then the
control program displays the "AT   1992-06-23-14:53:46" in local
time and the rest of the data in GMT time.  For example: 
CDS_CTS = 1992-06-23-18:52:15.  Thus objects look like they are
create 4 hours into the future.  If the TZ var is unset then
all the times are displayed in GMT time.  This should be documented
or fixed.  I think a solution would envolve a cdscp command
similar to cdscp set confidence.  For example:  

cdscp> display local
and
cdscp> display GMT.

To recreate this try setting TZ as follows:
D
B
B
B
setenv TZ EST5EDT,M4.1.0/02:00:00,M10.5.0/02:00:00

[8/4/92 public]
"the rest of the data" should generally be in GMT because it consists mostly
of timestamps. If the TZ variable is unset in environments where it is
required to be set, I believe that the default action of displaying GMT is
correct. If this is confusion, it should be turned into a doc bug; otherwise
this CR should be cancelled.

[1/9/93 public]
After a brief discussion, Mark has indicated that this is a DTS bug and should be reclassified.

[10/12/92 public]
Changed to doc bug.

[1/13/93 public]

the notes have gotten a little out of sequence but the last chronological
entry was the following:

	[lipsky 1/9/93 public]
	After a brief discussion, Mark has indicated that this is a DTS bug and
	should be reclassified.

so I have reclassified it as a code bug.

[01/13/93 public]

Can someone please clarify why they think this bug belongs to DTS?
I am unclear as to what the problem is.

Perhaps a summary of the 'Brief Discussion' mentioned above would help.

Thanks.

[01/29/93 public]
I tried to investigate this problem, but I am not familiar with
cdscp enough to make it worth while.

I am turning this over to John D. at OSF to track down what (if any)
utc_<foo> call is not working correctly.  I suspect that cdscp was
written to print timestamps in GMT, since a few fields are in
local time and others are absolute.

To check what fields change:
% setenv TZ EST5EDT
% cdscp show dir /.:
% setenv TZ PST8PDT
% cdscp show dir /.:

Fields which are in localtime:
	AT
	Expiration
	
Fields which are GMT:
	CDS_CTS
	CDS_UTS
	CDS_AllUpTo
	CDS_LastSkulk
	CDS_LastUpdate

[jd  01/31/93 public] 
Mark could you put some in touch with Tom Jordahl the dts omponent
owner here at OSF. His email address is tom@osf.org...

[07/06/93 public]
AT time currently has a bug. It get converted to local time twice
and is therefor off. I have a fix for this in my sandbox and will
submit it when the tree opens. This will cause AT time to be emitted
in local time. The remaining fields are emitted in GMT they are 
timestamps and that's the way they are represented internally. I don't
see a bug here let alone a DTS bug. Is there an argument that all fields
should emitt local times. If someone still thinks there's a DTS bug
could you explain why. I'm ready to cancel this but I'll leave it
open long enough for a reply....

[08/13/93 public]
I submitted the fix for the AT time problem a week or so ago. I agree  with 
mark's comments on the rest. Timestamps/uuid strings should not be
converted to local time. Times that users must type in, such as sym link
expiration times, should be input in local time and converted to local 
time on output. AT time should always be local since its supposed to
tell the user what time the clock on the wall says and the assumption
is that the clock on the wall is local.......
The fix submitted a week or so ago was as desribed above.

[11/11/93 public]
fixed->closed.



CR Number                     : 4320
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 4389
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : CDS has hardcoded /:
Reported Date                 : 6/17/92
Found in Baseline             : 1.0.1b19
Found Date                    : 6/17/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : cds/library/cdsCvtStrToSimple.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[6/17/92 public]
The junction point to DFS is now configurable, it doesn't have
to be fs.  CDS has /: hardcoded to be /.../cellname/fs.

[6/19/92 public]
Pray tell, how does a program lookup the name of the fs junction?

[6/22/92 public]
(I added myself to the CC line.)

There's a source file src/file/ncscompat/compat_junct.c that reads the
junction name out of the profile for the cell, under UUID:

	4d37f2dd-ed43-0000-02c0-37cf2e000001

The memberName is taken to be the junction name.
This junction name is set up in dce_config by the command:
	add element -i 4d37f2dded43.02.c0.37.cf.2e.00.00.01,4.0 -a fs -m /.:/fs /.:/cell-profile"
sent to rpccp.
Filled in Interest List CC with `cfe@transarc.com, vijay@transarc.com' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[6/24/92 public]
added ``interdependent CR'' of 4389, since that's the vehicle by which Mark
is asking for help.
Filled in Inter-dependent CRs with `4389'

[12/15/92 public]
Would it be possible to get this bug fixed in the 1.0.2 timeframe??

[1/5/93 public]
The interdependent CR, 4389 is now in a closed state.  How much
work is left to do for CDS to utilize this new function??

[10/20/93 public]
I know Alan submited this but did not update the report.

[11/11/93 public]
fixed->closed.



CR Number                     : 3758
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : library
Short Description             : CDS duplicates RPC logic for obtaining local system IEEE 802 address
Reported Date                 : 5/22/92
Found in Baseline             : 1.0.1
Found Date                    : 5/22/92
Severity                      : D
Priority                      : 3
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : directory/cds/library/*/unix_getaddr.c
Sensitivity                   : public

[5/22/92 public]

I thought we had agreed a long time ago that rather than duplicating the
logic that RPC's UUID generator had to have to obtain an IEEE 802 address,
CDS would simply call the function uuid__get_os_address().  At the moment,
the logic *is* duplicated by CDS.

Irrespective of whether we agreed or not (I don't recall the discussion,
sorry), I agree that this is a *good* thing to do. However, the RPC folks
here don't want me to call uuid__get_os_address() until is it turned into
a public API call and its prototype (currently in uuidp.h) is moved to
a file that is exported. I have submitted a separate enhancement CR to
address this -- #3926.

[10/12/92 public]

This is on the 1.1 cleanup list.

[6/30/94 public]
fixed in 6/30 drop.  unix_getaddr.c removed , using dce_get_802address



CR Number                     : 3512
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : cds
Subcomponent Name             : cds/gda/gda_bind.c
Short Description             : In cds/gda/gda_bind.c, HEADER structure passed to bcmp does not match function definition.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : gda_bind.c
Sensitivity                   : public

[5/14/92 public]
Full Description:

        This file contains the following call to bcmp:

        if(bcmp(rr->rr.head, rr2->rr.head, sizeof(HEADER)))

        rr->rr.head and rr2->rr.head are HEADER structures but bcmp
        expects pointers to char for the first two parameters.  This
        results in a type mismatch compile error.

Repeat By:

        Compile this file using the C/370 compiler on MVS.

Proposed Solution:

        Take the addresses of these variables and cast them to char *.

        if(bcmp((char *)&(rr->rr.head), (char *)&(rr2->rr.head),
                                                      sizeof(HEADER)))

[5/14/92 public]
This is another code cleanup item. Verified that it is a 1.0.1 problem
as well.

[10/27/92 public]

This has been fixed, but not yet submitted as part of the OSF 1.1.1 DCE
port.  This OT will be marked fixed/closed when that effort is complete.

[6/16/94 public]
bcmp has been changed to memmove which wants void *. All seems to work now.



CR Number                     : 3510
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/gda/gda_rpcint.c
Short Description             : In cds/gda/gda_rpcint.c, long parameter passed to inet_ntoa does not match function definition.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
directory/cds/server/unix_stubs.c
directory/cds/control/format_tower.c
Sensitivity                   : public

[5/14/92 public]
Full Description:

        This file contains the following call to inet_ntoa:

        unsigned long addr;
        Saddress_p = (unsigned char *)inet_ntoa(addr);

        inet_ntoa is defined with a parameter of type struct in_addr.
        The MVS implementation of inet_ntoa includes a function
        prototype.  This results in a type mismatch compile error.

        This problem also occurs in the following files:

        cds/library/dnstowertostr.c
        cds/server/unix_stubs.c
        cds/control/format_tower.c

Repeat By:

        Compile these files using the C/370 compiler on MVS.

Proposed Solution:

        Pass a struct in_addr to inet_ntoa.

[5/14/92 public]
Yet another code cleanup issue. Verified to exist in 1.0.1.

[4/8/94 public]
cds/gda/gda_rpcint.c and cds/library/dnstowertostr.c were fixed previously.
cds/server/unix_stubs.c cds/control/format_tower.c were fixed by code cleanup.



CR Number                     : 3506
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/library/cds_events.c
Short Description             : In cds/library/cds_events.c, type mismatch.  NULL used as an int.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
directory/cds/library/cds_events.c
Sensitivity                   : public

[5/14/92 public]
Full Description:

        The following call is made in cds_event_log:

        get_dce_text ( evp->status, log_p, text_buffer, NULL );

        However the last parameter is defined to be an int in the
        definition of get_dce_text and NULL is defined to be a
        pointer.  This results in a type mismatch compile error.

Repeat By:

        Compile this file using the C/370 compiler.

Proposed Solution:

        Replace Null with 0 in the function invocation.

        get_dce_text ( evp->status, log_p, text_buffer, 0 );

[5/14/92 public]
A code cleanup issue also existing in 1.0.1.

[4/8 /94 public]
Code cleanup fixed this problem.



CR Number                     : 3503
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/library/dnssend.c
Short Description             : In cds/library/dnssend.c, first argument of pthread_cleanup_push doesn't match prototype.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : ./directory/cds/library/dnsread.c
					./directory/cds/library/dnssend.c
Sensitivity                   : public

[5/14/92 public]
Full Description:

        The POSIX definition for pthread_cleanup_push says that the
        first parameter is a pointer to a function that has one
        parameter which is a pointer to void and that returns void.

        The following call to pthread_cleanup_push is made in
        dnssend.c and dnsread.c:

        pthread_cleanup_push(pthread_mutex_unlock, &dns_send_mutex); \

        In this cases the first parameter is not a function returning
        void.  pthread_mutex_unlock returns an int.  This causes a
        compiler error because the pthread_cleanup_push invocation
        does not match the prototype for this function.

Repeat By:

        Compile dnssend.c and dnsread.c using the C/370 compiler.

Proposed Solution:

        Cast the first parameter so that it corresponds to the function
        prototype for pthread_cleanup_push.

        pthread_cleanup_push((void (*)(void *))pthread_mutex_unlock,
                                                    &dns_send_mutex);

[5/14/92 public]
This is a code cleanup issue also in 1.0.1.

[6/8/94 public]
But waits until 1.1 to be fixed...



CR Number                     : 3502
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/server/rpc_dispatch.c
Short Description             : In cds/server/rpc_dispatch.c, preprocessor conditional compile directives not consistent.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b9
Affected File(s)              : rpc_dispatch.c
Sensitivity                   : public

[5/14/92 public]
Full Description:

        In the CDS code there are statements such as

        #if (DNS_CDS)

        and

        #elif DNS_SEC

        which will only compile successfully if DNS_CDS and DNS_SEC
        are defined to have an integer value or not defined at all.
        Most of the preprocessor conditional compile directives used
        in CDS are of the form:

        #ifdef DNS_CDS

        which don't require the identifier to have an integer value.
        They just have to be defined like

        #define DNS_CDS

        This causes problems in porting the code in terms of
        determining which conditional compile identifiers must have
        integral values.

        The following are the files which contain these conditional
        compile directives:

        cds/adver/adver_main.c          #if (DNS_CDS)
        cds/child/clerk_init_cle.c      #elif DNS_CDS
        cds/server/rpc_dispatch.c       #if (DCE_SEC && DEBUG)
        cds/server/security_lib.c       #elif DCE_SEC
        cds/server/ta_create.c          #elif DCE_SEC
        cds/server/ta_modify.c          #elif DCE_SEC
        cds/server/ta_read.c            #elif DCE_SEC

Repeat By:

        Compile the above files with the following defines included:

        #define DNS_CDS
        #define DCE_SEC

Proposed Solution:

        Change the preprocessor conditional compile directives in the
        above files from

        #if (DNS_CDS)

        to

        #ifdef DNS_CDS   or   #if defined(DNS_CDS)

        and

        #elif DNS_SEC

        to

        #elif defined(DNS_SEC)

[5/14/92 public]
A code cleanup issue also in 1.0.1.

[6/16/94 public]
changed if #ifdef or #if defined.



CR Number                     : 3501
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/adver/adver_clerk_event.c
Short Description             : In cds/adver/adver_clerk_event.c, pointer to struct sockaddr_un passed to bind does not match function definition.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : 
directory/cds/adver/adver_clerk_event.c
directory/cds/adver/adver_sysdep_unix.c
directory/cds/library/unix_mbx.c
directory/cds/child/clerk_listener.c
Sensitivity                   : public

[5/14/92 public]
Full Description:

        This file contains the following call to bind:

        if (bind(cfd, &newChild->saddr, sizeof(newChild->saddr)) < 0) {

        &newChild->saddr is a pointer to struct sockaddr_un but bind is
        defined with the second parameter being of type pointer to
        struct sockaddr. The MVS implementation of bind includes a
        function prototype.  This results in a type mismatch compile
        error.

        This problem also occurs in the following files:

        cds/adver/adver_sysdep_unix.c         bind
        cds/library/unix_mbx.c                dthread_bind
        cds/child/clerk_listener.c            dthread_bind

Repeat By:

        Compile these files using the C/370 compiler on MVS.

Proposed Solution:

        Cast &newChild->saddr to a pointer to struct sockaddr.

        if (bind(cfd, (struct sockaddr *) &newChild->saddr,
                       sizeof(newChild->saddr)) < 0) {

[5/14/92 public]
A code cleanup issue existing in 1.0.1.

[4/8/94 public]
Code cleanup fixed this problem.



CR Number                     : 3492
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : cds/includes/threads_lib.h
Short Description             : In cds/includes/threads_lib.h, cast of first argument of pthread_cleanup_push is incorrect.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : C
Priority                      : 2
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : directory/cds/includes/thread_lib.h
Sensitivity                   : public

[5/14/92 public]
Full Description:

        In the header file threads_lib.h  the following #define occurs
        if DTHREAD_WRAPPERS is not defined:

        #define dthread_cleanup_push(ra,a) \
                pthread_cleanup_push(((void (*))ra),((pthread_addr_t)a))

        The first argument of pthread_cleanup_push is casted wrong.
        The POSIX definition for pthread_cleanup_push says that the
        first parameter is a pointer to a function that returns void and
        that has one parameter which is a pointer to void.
        A compile error results where dthread_cleanup_push is used if
        DTHREAD_WRAPPERS is not defined.

Repeat By:

        Compile a file which calls dthread_cleanup_push using the C/370
        compiler on MVS.

Proposed Solution:

        The first parameter of pthread_cleanup_push should be casted
        like:

        ((void (*)(void *))ra)  instead of   ((void (*))ra) .

        #define dthread_cleanup_push(ra,a) \
                pthread_cleanup_push(((void (*)(void *))ra),  \
                                     ((pthread_addr_t)a))

[5/14/92 public]
A code cleanup issue also in 1.0.1.



CR Number                     : 3163
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : CDS will show replicas of dirs
that have not been replicated.
Reported Date                 : 4/30/92
Found in Baseline             : 1.0.1b12
Found Date                    : 4/30/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/control/visit_cds.c
Sensitivity                   : public

[4/30/92 public]

cdscp will give replica information for a directory that has not been
replicated.  All attributes are null and some not replica message appear
towards the end.  Should some form of unknow replica error be returned?

[4/30/92 public]

Need more info:

Please state how to reproduce this bug and what "some not replica message"
actually appeared.

[7/29/92 public]
In the file clerk_client.c in the function clerk_request(), there is a while
loop that spins around while th_p is not null.  In this loop, a call to 
write response is done.  My first inclination would be to check the status
from th_p and if it is not DNS_SUCCESS, then do not perform the write_response
and return.  But I'm leary of what that might break.  I'm thinking that certain
calls it might be acceptable to have a status other than DNS_SUCCESS and it
is valid to continue.  Any insights?

[12/15/92 public]

I'm making a pass through our CRs, and noticed Mark's question.  To reproduce the
problem, issue 'cdscp show replica /.:/foo clearinghouse /.:/valid_ch', where
directory /.:/foo isn't replicated in /.:/valid_ch.  You get output like this:

# cdscp sh rep /.:/foo clear /.:/valid_ch
                        SHOW
                     REPLICA   /.../oct/foo
                          AT   1992-12-14-16:26:52
            RPC_ClassVersion = 
                     CDS_CTS = 
                     CDS_UTS = 
              CDS_ObjectUUID = 
                CDS_Replicas = 
                 CDS_AllUpTo = 
             CDS_Convergence = 
           CDS_ParentPointer = 
        CDS_DirectoryVersion = 
            CDS_ReplicaState = 
             CDS_ReplicaType = 
               CDS_LastSkulk = 
              CDS_LastUpdate = 
             CDS_RingPointer = 
                   CDS_Epoch = 
          CDS_ReplicaVersion = 
Error on entity: /.../oct/foo
Specified clearinghouse does not contain a copy of the directory (dce / cds)
Function: dnsReadAttrValue

Error on entity: /.../oct/foo
Specified clearinghouse does not contain a copy of the directory (dce / cds)
Function: dnsReadAttrValue

... (You end up getting an error for each attribute--very ugly.)

[08/16/93 public]
emit_1_attr_line wasn't checking for DNS_ERROR dnsReadAttrValue
nor was emit_some_attr_lines checking the result of emit_1_attr_line.
Both checks are now done. emit_1_attr_line queues the error. Checked
other calls to emit_1_attr_line for consistent check of return. They
are fine. 
This does NOT fix 3523.

[11/11/93 public]
fixed->closed.



CR Number                     : 3159
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : cds
Subcomponent Name             : 
Short Description             : The escape character does not
appear to be doing its job.
Reported Date                 : 4/30/92
Found in Baseline             : 1.0.1b12
Found Date                    : 4/30/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/library/cdsstrtosimple.c, directory/cds/library/dnscvtcdsfull.c
Sensitivity                   : public
metacharacters to appear in CDS names and CDS classes.  When using the \
character to escape metacharacters, only the \ appears in the name and the
metacharacter is lost.

[4/30/92 public]

[4/30/92 public]
cdstest shows how escaped metacharacters were intended to work:
thule> cdstest
sec_login_get_current_context 387064044
CDS>> cn
Fullname> /.../a\=b/c\\d/e\,f/ggg
Successfully converted "/.../a\=b/c\\d/e\,f/ggg"
5 simple name(s):
        1: "..."
        2: "a\=b"
        3: "c\\d"
        4: "e\,f"
        5: "ggg"
CDS>>

[5/11/92 public]
Please provide more information about this defect, specifically, I would
like to know just how it "appears" that the escape character is not working
in the test scripts.  The original intention of the escape characters in
the test scripts was solely to prevent the shell from expanding any
wildcards before feeding the test script to cdscp.

To the best of my knowledge there are no instances in any of the test
scripts where escapes are being used to test any meta/special characters.

[5/11/92]
The following object was created via a dnsCreateObj() call:
	name:	/.:/cfco0001_15
	CDS_Class:  class_\/

Upon showing the object, the following is output by cdscp:
			SHOW
                      OBJECT   /.../guitar/cfco0001_15
                          AT   1992-05-11-14:04:04
                     CDS_CTS = 1992-05-11-18:53:14.903445100/10-00-5a-4f-34-28
                     CDS_UTS = 1992-05-11-18:53:14.942387100/10-00-5a-4f-34-28
                   CDS_Class = class_\
            CDS_ClassVersion = 1.0

[5/11/92]
As per a conversation with Mark Fox, he informed me that / should not and
could not appear in CDS names.  He stated that if documentation wasn't clear,
then it should be rectified.  The following is excerpts from Appendix B in the
API guide.

Certain character have special meaning to the directory service; these are 
known as metacharacters.  The following ... explians the CDS ... metacharacters

CDS		/	Separates elements of a name (simple names)
.
.
.
	
		\	Used where necessary in fromt of / \ * or ? to
			escape the character (indicates that the following
			character is not a metacharacter)
.
.
.

Some metachracters are not permitted as normal characters within a name.
For example, a backslash cannot be used as anything but an escacpe character
in GDS.  You can use other metacharacters as normal characters in a name
as long as you escape them with the backslash metacharacter.

--- end of excerpt ---

It seems the only metacharacters the code allows in CDS names is * and ?.  And
these do not need to be backslashed.  If you use backslash in a name, the 
backslash becomes part of the name.  That problem I believe is in the function
cds_strToSimple() in file cdsstrtosimple.c.  Starting at the statement
while (*in_p != TT_SLASH && *in_p != 0) { (around line 192) the code first
looks to see if in_p is pointing to a \. A switch is done on *(in_p+1) to see
if it is a metacharacter.  However, in_p is not incremented past the 
metacharacter before the metacharacter is copied into out_p, thus it becomes
part of the name.

[6/9/92 mfox public]
The results of cdstest are correct as is the text in the Admin. Guide. \
(backslash) is a legal character in a name *stored in CDS*. The problem
arises with cdscp for which \ is a metacharacter as are * and ? in certain,
well-documented situations (the last name component in show and list
commands). Also, \ is a metacharacter in text names of objects stored in GDS.
The code in cdsstrtosimple.c is correct as far as its interpretation of
backslash. If what I said previously contradicted this, then either I was
wrong or misinterpreted -- sorry.

cdscp is supposed to use the backslash to escape its metacharacters: \,
<newline>, #, <space>, * and ?. It should strip out the escaping \ and pass
the rest of the text onto the CDS API. Thus a correct way to have \ appear in
a cds name is to type:

cdscp> create obj /.:/embedded\\bs

Unfortunately the cdscp quoting/escaping mechanism is broken at this time.

[6/26/92 public]
I am assuming this NOT defect can be changed to a B1 doc defect.  Appendix A
of the Admin Guide will have to be changed.

[10/13/92 public]
As mentioned in CR 2468, this is caused by a CDS API bug.

dnsCvtCDSSimpleToOpq() converts the FullName by removing the last SimpleName,
converting the first part of the name, and converting the SimpleName
with WildcardAllowed on. cds_strToSimple() passes the escapes thru,
thinking the SimpleName is wild, but when it discovers that there
are no wildcards, it declares it SN_cds without removing the escapes.
cdscp finds no wildcard name, so it tacks the bad SimpleName onto
its FullName, and the server cannot find 't1\*'.

[11/24/92 public]

Since OT 5913 is changed to dup of 3159, I added the scenario here for
future testing purpose.

The following wildcard does not work:

      Creating object with '*' and showing it:
      -----------------------------------------------------------------
   part a)
   =======
      cdscp> create obj /.:/FVT/te*
      cdscp> list obj /.:/FVT/te\*
                              LIST
                            OBJECT   /.../c=ca/o=cell2/FVT
                                AT   1992-10-23-14:56:03
      te*
      cdscp> show obj /.:/FVT/te*

                              SHOW
                            OBJECT   /.../c=ca/o=cell2/FVT/te*
                                AT   1992-10-23-14:56:23
                           CDS_CTS = 1992-10-23-19:58:17.469518100/c9-c2-d4-ff-
                           CDS_UTS = 1992-10-23-19:58:17.482572100/c9-c2-d4-ff-
      cdscp> show obj /.:/FVT/te\*

                              SHOW
                            OBJECT   /.../c=ca/o=cell2/FVT/te\*
                                AT   1992-10-23-14:56:31
      Error on entity: /.../c=ca/o=cell2/FVT/te\*
      Requested entry does not exist (dce / cds)
      Function: dnsEnumAttr
      dnsEnumAttr: partial results = /.../c=ca/o=cell2/FVT

      cdscp>
      -----------------------------------------------------------------
   part b)
      cdscp> create obj /.:/FVT/te\*
      cdscp> list obj /.:/FVT/te\*
                              LIST
                            OBJECT   /.../c=ca/o=cell2/FVT
                                AT   1992-10-23-14:56:03
      cdscp> show obj /.:/FVT/te*

                              SHOW
                            OBJECT   /.../c=ca/o=cell2/FVT/te\*
                                AT   1992-10-23-14:56:23
                           CDS_CTS = 1992-10-23-19:58:17.469518100/c9-c2-d4-ff-
                           CDS_UTS = 1992-10-23-19:58:17.482572100/c9-c2-d4-ff-
>     cdscp> show obj /.:/FVT/te\*
>
>                             SHOW
>                           OBJECT   /.../c=ca/o=cell2/FVT/te\*
>                               AT   1992-10-23-14:56:31
>                          CDS_CTS = 1992-10-23-19:58:17.469518100/c9-c2-d4-ff-
>                          CDS_UTS = 1992-10-23-19:58:17.482572100/c9-c2-d4-ff-
      cdscp> show obj /.:/FVT/te\\*

                              SHOW
                            OBJECT   /.../c=ca/o=cell2/FVT/te\*
                                AT   1992-10-23-14:56:42
                           CDS_CTS = 1992-10-23-19:58:17.469518100/c9-c2-d4-ff-
                           CDS_UTS = 1992-10-23-19:58:17.482572100/c9-c2-d4-ff-

[12/01/92 public]

Here are some more instances where backslash does not work consistently:

>  >    (1) Escaping the forward slash:
>  >
 -----------------------------------------------------------------
>  >        cdscp> create obj /.:/FVT/\/
>  >        cdscp> list obj /.:/FVT/*
>  >                                LIST
>  >                              OBJECT   /.../c=ca/o=cell2/FVT
>  >                                  AT   1992-10-23-14:34:43
>  >        \
>  >        cdscp>
>  >
 -----------------------------------------------------------------
>  >        NOTE: the object that gets created is '\' instead of '/'.
>  >


>Here the last / is interpretted as the separator, and since there is nothing
>behind, it ignores it. New object \ is created.


See my comment on using \ alone in (2).  Behaviour of this should be
consistent with (2).


>  >    (2) Escpaping the backward slash: \\ and \\\ act the same
>  >
 -----------------------------------------------------------------
>  >        cdscp> create obj /.:/FVT/\\
>  >        _>
>  >        cdscp> list obj /.:/FVT/*
>  >                                LIST
>  >                              OBJECT   /.../c=ca/o=cell2/FVT
>  >                                  AT   1992-10-23-14:43:58
>  >        \
>  >        cdscp> del obj /.:/FVT/\\\
>  >        _>
>  >        cdscp>
>  >
 -----------------------------------------------------------------
>  >        NOTE: It seems that both '\\\' and '\\' equate to the same.
>  >

>This does not surprise me. SInce \ cannot be used alone, it should always come
>in front of sth. If not, it is ignored.


From the above scenerio in the create object case, the last backslash
was interpreted as a command line continuation character leaving the
object name of /.:/FVT/\.  Now, this object was created even though
the backslash was used alone (it was not ignored).

From the code, if nothing follows the backslash, then the backslash
IS TAKEN as the character.  If a backslash follows another backslash,
the second backslash is escaped by the first backslash so it is
taken as the character as well.

In any case, the code has to be fixed or the behaviour of a single
backslash character used by itself has to be documented.

[12/8/92 public]
Changed priority as per OSF reclassification.

[1/15/93 public]

An error was made during the reclassification from our meeting of 12/8/92.
The aged criteria doesn't allow the priority to be lowered below priority 1.

[1/15/93 public]
Sigh...

[1/28/93 public]
We have rewritten directory/cds/library/cdsstrtosimple.c in order to fix
this problem and CR 5925. We are beginning the process of exhaustively
testing the new code. However, we are extremely concerned with the high
level of risk associated with bugs in this module. If it breaks, it is
likely to affect the rest of CDS, XDS, or the GDA. Thus it is potentially
a single point of failure for the rest of DCE. We assert that it works
well enough now and that introducing the risk of breakage at this stage
of 1.0.2 development is not a good idea. OSF has agreed and I am deferring
this CR.

[10/14/93 public]
Radical surgery has been completed.
Note that the name "/.../a\=b/c\\d/e\,f/ggg" is not legal, and now
is rejected by the parser.

[11/11/93 public]
fixed->closed.



CR Number                     : 2935
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : cds
Subcomponent Name             : 
Short Description             : DEC liability statement seems wrong.
Reported Date                 : 4/21/92
Found in Baseline             : 1.0.1
Found Date                    : 4/21/92
Severity                      : E
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b23
Affected File(s)              : cds_attributes.txt,...
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : mason@transarc.com
Transarc Status               : open

[4/21/92 public]
I've noticed the following message in a couple of ASCII files used
by DEC software, e.g. /opt/dcelocal/etc/cds_globalnames.

DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.

This seems inappropriate for OSF software.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `mason@transarc.com' 
Added field Transarc Status with value `open'

[4/21/92 public]
Changed to enhancement

[04/21/92 public]
OSF Legal says this notice contradicts Digital's contractual obligations
to OSF, and should be removed.  Changed back to bug.  Priority set to 1
because it must be done for DCE 1.0.1 shipment.

[5/7/92 public]
OSF Legal says this can be changed during DCE 1.0.2.  Changed to
enhancement until then.

[6/30/94 public]
fixed in 6/30 drop



CR Number                     : 2005
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : cds
Subcomponent Name             : 
Short Description             : browser doesn't show dir names
Reported Date                 : 1/02/92
Found in Baseline             : .74d
Found Date                    : 1/02/92
Severity                      : C
Priority                      : 1
Status                        : closed
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : directory/cds/cdsbrowser/cds.c
Sensitivity                   : public

[1/2/92 public]
cdsbrowser doesn't print the names of directories.  It does print the names
of other things in a strange font.  At startup it gives two warnings about
not being able to find font
"-*-Menu-Medium-R-Normal--*-120-*-*-P-*-ISO8859-1" 

I changed the name of this font in directory/cds/cdsbrowser/cds.c to
"-adobe-new century schoolbook-bold-r-normal--12-120-75-75-p-77-iso8859-1"
and the warnings went away but the directory names are still not printed
and the same font as before is used.

[5/7/92 public]
this problem is only happening at OSF -- the belief is that it's our
version of MOTIF, rather than a source code problem, that's at the root
of this issue. Based on that, the severity and priority is being changed
appropriately. In the event that this assumption turns out to be incorrect,
the severity and priority will be updated.

[10/13/92 public]
This problem has not been reported on any other platforms. Therefore
I am marking it deferred, following Dave's similar action on an unrelated
problem reported in CR3531.

[12/15/92 public]
OSF should verify whether this is still a problem with OSF/1 V1.1. If
not it should be closed.

[8/10/93 public]
The foreground color causes directory names to be invisible (white-on-white).
Reraised the priority to 1.

[8/12/93 public]
There are a couple of problems: in cds.c the setting of the foreground_pixel
for the browse widget is wrong - the types are completely different and
casting is not the solution. Here is a diff for cds.c:

***************
*** 386,392 ****
      w->browse.level3_fontlist          = 0;
      w->browse.level4_fontlist          = 0;

!     w->browse.foreground_pixel         = (Pixel)XtExtdefaultforeground;
      w->browse.margin_width             = 2;
      w->browse.margin_height            = 2;
      w->browse.user_data                = (char *)NULL;
--- 390,409 ----
      w->browse.level3_fontlist          = 0;
      w->browse.level4_fontlist          = 0;

!     {
! 	Pixel fg;
! 	String value;
! 	XrmValue from, to;
!
! 	value = XtExtdefaultforeground;
! 	from.size = sizeof(value);
! 	from.addr = (XPointer) value;
! 	to.size = sizeof(fg);
! 	to.addr = (XPointer) &fg;
! 	XtConvertAndStore(w, XtRString, &from, XtRPixel, &to);
!
! 	w->browse.foreground_pixel = fg;
!     }
      w->browse.margin_width             = 2;
      w->browse.margin_height            = 2;
      w->browse.user_data                = (char *)NULL;


When this is done, however, a second problem appears: the pixmaps become
invisible, at least on SOME kinds of display. The problem is that the
browse widget does not define a foreground resource, so LclSetUpPixmaps()
in cds_browsersource.c comes up with a foregound pixel that is pretty much
random (it is whatever value happens to be on the stack, since the
XtGetValues does not find a foreground resource and therefore does not change
the local foreground_pixel). Here is a diff for cds.c (which includes a minor
change to get a default font that has some chance of being found on the
majority of platforms: "Menu-Medium" seems not to be defined on MIT X11r5
derived servers):

*** cds.c.orig	Wed Dec 30 07:47:34 1992
--- cds.c	Thu Aug 12 11:24:11 1993
***************
*** 65,73 ****
  extern char *VMSDescToNull();
  /*#pragma standard*/
  #else
  #include <Xm/XmP.h>
  #include <Mrm/MrmPublic.h>
! #include <StringDefs.h>
  #include <Xm/Text.h>
  #include <X11/cursorfont.h>
  #endif
--- 65,74 ----
  extern char *VMSDescToNull();
  /*#pragma standard*/
  #else
+ #include <X11/Intrinsic.h>
  #include <Xm/XmP.h>
  #include <Mrm/MrmPublic.h>
! #include <X11/StringDefs.h>
  #include <Xm/Text.h>
  #include <X11/cursorfont.h>
  #endif
***************
*** 160,169 ****
  */

  #ifndef XmDefaultFont
! #define XmDefaultFont "-*-Menu-Medium-R-Normal--*-120-*-*-P-*-ISO8859-1"
  #endif

  static XtResource resources[] = {
     {XmNfont, XmCFontList, XmRFontList, sizeof(XmFontList),
       XtOffset(dns_widget,browse.default_fontlist), XtRString, XmDefaultFont},

--- 161,173 ----
  */

  #ifndef XmDefaultFont
! #define XmDefaultFont "-*-*-Medium-R-Normal--*-120-*-*-P-*-ISO8859-1"
  #endif

  static XtResource resources[] = {
+    {XmNforeground, XmCForeground, XmRPixel, sizeof(Pixel),
+      XtOffset(dns_widget, browse.foreground_pixel), XmRString,
+       XtExtdefaultforeground},
     {XmNfont, XmCFontList, XmRFontList, sizeof(XmFontList),
       XtOffset(dns_widget,browse.default_fontlist), XtRString, XmDefaultFont},

[8/13/93 public]
This bug can actually be divided into 4 problems,
1) The default font is unknow on most of platforms now.
   Fixed by changed it to "-*-*-Medium-R-Normal--*-120-*-*-P-*-ISO8859-1"
   from ""-*-Menu-Medium-R-Normal--*-120-*-*-P-*-ISO8859-1".
2) The XmNforeground is missed from browser widget resource[],
Fixed by adding it to resource[].
3) The statement "w->browse.foreground_pixel = (Pixel)XtExtdefaultforeground;"
   in Initialize() is wrong. Fixed by removed it since the XmNforeground has 
   been added to widge resource[], it could be initialized by widge create 
   routine.
4) This problem is actually addressing this bug. The cdsbrowser does show
   all names. The object names and clearinghouse names are invisible because
   the cdsbrowser adds grey color to these names to stand for the nonexpansible
   entries. Unfortunately this also makes the names almost invisible on some
   of display devices. 
   Fixed by removed grey color and used foreground color instead until a
   better grey pixmap_bits comes out. 

Thanks wwang.osf.org and nick.osf.org helped on figured out the problems
and suggested some solutions.



