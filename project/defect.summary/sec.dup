CR Number                     : 13571
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : update manpages for public key login
Reported Date                 : 7/19/96
Found in Baseline             : 1.2.2
Found Date                    : 7/19/96
Severity                      : E
Priority                      : 3
Status                        : dup
Duplicate Of                  : 13592
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : command_ref and app_ref manpages
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[7/19/96 public]
for new public key login functionality

[7/19/96 public]



CR Number                     : 13476
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : key_mgmt
Short Description             : keytab can get out of sync with rgy
Reported Date                 : 5/22/96
Found in Baseline             : 1.1
Found Date                    : 5/22/96
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 13433
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : security/client/key_mgmt/keymgmt.c
Sensitivity                   : public

[5/22/96 public]

If the sec_rgy_acct_passwd fails (because the rgy is unavailable, etc.),
sec_key_mgmt_change_key can make the keytab file get out of sync.  That is,
the new key is entered in the keytab file but not in the registry.

The diff below causes sec_key_mgmt_change_key to back the key out of the
keytab file if the rgy update fails.

*** security/client/key_mgmt/keymgmt.c
--- 12.7        1996/04/16 20:07:49
***************
*** 361,370 ****
--- 373,399 ----
 
                      /* Set the key in the registry */
                      if (GOOD_STATUS(err)) {
+                       /* In case sec_rgy_acct_passwd mucks with next_vno,
+                        * which it is entitled to do.
+                        */
+                       unsigned32 n_kvno = next_vno;
+
                          sec_rgy_acct_passwd(rgy_h, &login_name, oldkey,
                                              (sec_passwd_rec_t *) keydata,
                                              sec_passwd_des, &next_vno, err);
                          sec_key_mgmt_free_key(oldkey, &lst);
+                       if (BAD_STATUS(err)) {
+                           /* If setting the key in the rgy failed, remove
+                            * the key from the keytab also.  This is
+                            * guaranteed not to wipe out a key that was valid
+                            * before we were called, because if next_vno were
+                            * valid then, the sec_key_mgmt_set_key call above
+                            * would have failed.
+                            */
+                           sec_key_mgmt_delete_key(authn_service, arg,
+                                                   principal_name, n_kvno,
+                                                   &lst);
+                       }
                      }
                  }
              } /* set_key succeeded */

[5/22/96 public]
Uhhh. Duplicate of CR13433 by cox@transarc.com. Must be your evil twin. :-)

Fixed here already. It should go into 1.2.2.



CR Number                     : 13422
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : dce_acl_inq_client_permset missing params
Reported Date                 : 4/1/96
Found in Baseline             : 1.1
Found Date                    : 4/1/96
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12850
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 
Affected File(s)              : 
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public
Transarc Deltas               : 17530
Transarc Status               : open

[4/1/96 public]
The include files list an additional two uuid_t * parameters that
don't appear in the man page for dce_acl_inq_client_permset.
Added field Transarc Deltas with value `17530' 
Added field Transarc Status with value `open'

[5/16/96 public]

Assigned to HP.

[9/19/96 public]
This was fixed by 12850.



CR Number                     : 13421
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : dce_acl_inq_permset_for_creds param wrong
Reported Date                 : 4/1/96
Found in Baseline             : 1.1
Found Date                    : 4/1/96
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12850
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 
Affected File(s)              : 
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public
Transarc Deltas               : 17532
Transarc Status               : open

[4/1/96 public]
The first parameter for dce_acl_inq_permset_for_creds is defined as
sec_cred_pa_handle_t in the manual, but is rpc_authz_cred_handle_t
in the include files.
Added field Transarc Deltas with value `17532' 
Added field Transarc Status with value `open'

[5/16/96 public]

Assigned to HP.

[9/19/96]
This was fixed by 12850.



CR Number                     : 13401
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : preauth event is not logged
Reported Date                 : 3/22/96
Found in Baseline             : 1.1
Found Date                    : 3/22/96
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 12526
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/22/96 public]

Pre-authentication event (success/failure) is not logged for the secd.
There is an event defined for dce_sec_authent event class: TGS_ValidateReq,
but it does not appear in any place of a secd's trail file.

To see the problem, create an account with preauth era set to 2. Then dce
login with a bad password. The login will fail, but you won't see anything
from the secd's trail.

[3/22/96 public]
This is NOT audit problem.  In order to record the Preauth events, two things
needs to be done in security codes:
   1) Enable the flag: DCE_AUD_POINT. This flag has been disabled since DCE1.1
   2) Calling the Audit APIs (dce_aud_start* and dce_aud_committ) with the right
      parameteres.  

I beleive that HP is trying to support it now.  This is a DUP of 12526 and another
just was opened recently by HP. Please cancel it.

[3/22/96 public]
Indeed, this is not an audit problem, but the secd as an audit cleint.
Marked it as dup of 12526.

Well, I tried to cancel it, but I don't know what to put for responsible 
engineer field. I will leave it to the sec component owner to cancel it.



CR Number                     : 13105
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kdc
Short Description             : kinit -f crashes secd.
Reported Date                 : 9/7/95
Found in Baseline             : 1.1
Found Date                    : 9/7/95
Severity                      : B
Priority                      : 0
Status                        : dup
Duplicate Of                  : 12909
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/7/95 public]

kinit -f crashes secd. 
This is because arguments to against_flag_policy_tgs() in security/krb5/kdc/kdc_util.c are incorrect.

Suggested  fix:
*** 12.3        1995/05/15 21:50:05
--- kdc_util.c  1995/09/07 14:28:39
***************
*** 1747,1755 ****
       * Check local policy
       */
  #ifdef OSF_DCE
!     errcode = against_flag_policy_tgs(request, server, ticket, status);
  #else
!     errcode = against_local_policy_tgs(request, server, ticket, status);
  #endif
      if (errcode)
        return errcode;
--- 1755,1763 ----
       * Check local policy
       */
  #ifdef OSF_DCE
!     errcode = against_flag_policy_tgs(request, ticket);
  #else
!     errcode = against_local_policy_tgs(request, ticket);
  #endif
      if (errcode)
        return errcode;



CR Number                     : 13027
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : rs
Short Description             : Free problems and memory leaks in rpriv_triggers
Reported Date                 : 6/28/95
Found in Baseline             : 1.1wp
Found Date                    : 8/7/95
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12774
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
security/server/rs/rpriv_attr.c
Sensitivity                   : public

[8/7/95 public]

In the rpriv triggers function there are 2 problems.  If the call to
priv_attr_trig_alloc_delegate_ids() fails then the function just returns and
does not free the processed variable.  The second problem is that inside
a for loop at the bottom of the function they call free(processed) on each 
iteration of the for loop.  I would assume that they should free this outside
of the loop before they fall off the end of the function.

========================================================================
src/security/server/rs/rpriv_attr.c     Revision 1.1.6.1
========================================================================
***************
*** 379,384 ****
--- 379,385 ----
      }

      if (BAD_STATUS(st_p) || done) {
+       free(processed);
        return;
      }

***************
*** 422,429 ****
                }
            }
          }
-     free (processed);
      }
  }


  /* r p r i v _ a t t r _ g e t _ e f f e c t i v e
--- 423,430 ----
                }
            }
          }
      }
+     free (processed);
  }

  /* r p r i v _ a t t r _ g e t _ e f f e c t i v e

[8/7/95 public]

This a duplicate of 12774.



CR Number                     : 13017
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : server
Short Description             : Unable to establish delegation context
Reported Date                 : 8/4/95
Found in Baseline             : 1.1wp
Found Date                    : 6/12/95
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12770
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
src/security/server/rs/rpriv_util.c
src/security/server/rs/rpriv_v1_1_mgrs.c
Sensitivity                   : public

[8/4/95 public]

The 2 routines in question are parse_delegation_token() and 
rpriv_util_get_ps_eblock().  The declarations are:


PRIVATE  void  parse_delegation_token (
    sec_encrypted_bytes_t  *delegation_token,  /* [in] */
    krb5_encrypt_block     *skey_eblock,       /* [in] */
    unsigned32             *token_expiration,  /* [out] */
    sec_id_seal_t          *seal,              /* [out] */
    error_status_t         *stp                /* [out] */
)


*****NOTE: Pre Warranty-Patch version *****
extern  void  rpriv_util_get_ps_eblock (
    krb5_enctype         etype,      /* [in] */
    krb5_kvno            req_kvno,   /* [in] */
    krb5_encrypt_block   *ps_eblock, /* [out] */
    krb5_kvno            *ps_kvno,   /* [out] */
    error_status_t       *stp        /* [out] */
)
{
        .
        .               
    <large local variable omitted>
    <other locals omitted>
        .
        .
    krb5_keyblock         ps_key;      <<-- NOTE: local var


parse_delegation_token() calls rpriv_util_get_ps_eblock() passing
a pointer to ps_eblock.  The problem is that in 
rpriv_util_get_ps_eblock(), at the end of the routine, it sets 
ps_eblock->key to &ps_key (using the routine krb5_process_key(), otherwise
known as mit_des_process_key()):  

    krb5_use_cstype(ps_eblock, etype);
    *stp = krb5_process_key(ps_eblock, &ps_key);
    if (!STATUS_OK(stp)) {
        memset(ps_key.contents, 0, ps_key.length);
        free(ps_key.contents);
    }

This means that the parent routine, parse_delegation_token(), 
now has a local data structure (ps_eblock) which has a 
field (ps_eblock.key) that points to a piece of data that
was local to a rpriv_util_get_ps_eblock().  Of course, after
rpriv_util_get_ps_eblock() returns, then that block of mem on the stack
that *WAS* ps_key is going to be blown away if the stack grows enough
between the time rpriv_util_get_ps_eblock() returns and the last time
in parse_delegation_token that ps_eblock is used.  Unfortunately, 
parse_delegation_token calls rpc_ss_allocate() before it calls
mit_des_decrypt_func(), which gets a pointer to ps_eblock passed in
and uses ps_eblock->key to try generate a checksum to verify the 
decrypt operation.  This is where the failure is detected.
The success or failure of the routine really, in essence, depends upon
how far down the stack ps_key gets allocated, and how deep the stack
grows between the time rpriv_util_get_ps_eblock() returns and the next
call to a function that uses ps_eblock.key.  In the unoptimized case,
ps_eblock is still OK before the call to rpc_ss_allocate() and is hosed
afterward.  In the optimized case, ps_eblock remains OK.

=============================================================
src/security/server/rs/rpriv_util.c
=============================================================
***************
*** 526,535 ****
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         ps_key;

!     memset(&ps_key, 0, sizeof(ps_key));

      /* get the principal data for the local realm */
      dce_cf_get_cell_name((char **) &cell_name, stp);

--- 526,540 ----
      int                   num_db_entries = 1;
      krb5_boolean          dup;   /* duplicate principal entries? */
      krb5_db_entry         ptgt_entry;
!     krb5_keyblock         *ps_key;

!     if (!(ps_key=malloc(sizeof(krb5_keyblock)))) {
!         *stp=sec_s_no_memory;
!         return;
!     }

+     memset(ps_key, 0, sizeof(ps_key));
+
      /* get the principal data for the local realm */
      dce_cf_get_cell_name((char **) &cell_name, stp);

***************
*** 553,568 ****
      }

      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, &ps_key);

      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);

      krb5_use_cstype(ps_eblock, etype);
!     *stp = krb5_process_key(ps_eblock, &ps_key);
      if (!STATUS_OK(stp)) {
!       memset(ps_key.contents, 0, ps_key.length);
!       free(ps_key.contents);
      }
  }
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
--- 558,573 ----
      }

      *ps_kvno = ptgt_entry.kvno;
!     *stp = KDB_CONVERT_KEY_OUTOF_DB(&ptgt_entry.key, ps_key);

      /* done with ptgt_entry, in any case */
      krb5_db_free_principal(&ptgt_entry, num_db_entries);

      krb5_use_cstype(ps_eblock, etype);
!     *stp = krb5_process_key(ps_eblock, ps_key);
      if (!STATUS_OK(stp)) {
!       memset(ps_key->contents, 0, ps_key->length);
!       free(ps_key->contents);
      }
  }
  /* r p r i v _ u t i l _ g e t _ k r b _ r e q _ i n f o
***************
*** 1471,1476 ****
--- 1476,1482 ----
                                &ps_eblock,
                                0);
            krb5_finish_key(&ps_eblock);
+           free(ps_eblock.key);
        }
        if (STATUS_OK(stp)) {
            TOKEN_VNO(token_bytes) = 0;


=============================================================
src/security/server/rs/rpriv_v1_1_mgrs.c
=============================================================
***************
*** 294,299 ****
--- 294,301 ----
      if (!STATUS_OK(stp)) {
        return;
      }
+
+     free(ps_eblock.key);

      /*
       * scratch now contains a 4-byte big-endian timestamp, followed

[8/28/95 public]

This looks like a dup of 12770. Unless HP objects, I'll assume that
the fix proposed in 12770 overrides this one.

[10/3/95 public]

After merging the fixes proposed by 12770 and this defect 13017 (as shown
in OT 12770 report), its concluded that this defect is not total dup of 12770.
Since 12770 now shows additional change proposed by this defect, I'm leaving
this as dup of 12770.



CR Number                     : 13013
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : klist
Short Description             : klist performance poor if
creds expired
Reported Date                 : 8/3/95
Found in Baseline             : 1.1
Found Date                    : 8/3/95
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12930
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/3/95 public]

The performance of klist is extremely poor when the credentials
have expired.  This is not a problem on 1.0.3.  In 1.1, the calls
to sec__id_gen_name for some reason result in rca_site_bind
being called many dozens of times.  In 1.0.3 rca_site_bind gets called
perhaps two or three times.  

Part of the 1.1 problem is that rca_site_bind gets called twice inside 
a deep stack, that probably involves loops on multiple protocols.
First, rca_site_bind gets called by rca_create_default_context,
and eventually calls down to rpc_binding_set_auth_info, and 
sec_priv_get_eptgt, which in turn calls rca_site_bind yet again.

This is a problem for klist, but it might point to a general problem
with rca_site_bind.  This would be more serious.

[8/3/95 public]

I also saw klist taking extremely long time on 1.1wp+ build when I was
testing 'dce_login -r' command option. As described this happens when
the credentials have expired.

[8/3/95 public]
We were seeing these same problems until we fixed a bad merge to some Kerberos
code.  The fix to the merge has been documented in OT 12930 for a while now,
so I'm dup'ing this CR to 12930.



CR Number                     : 13001
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12791, 13002
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : Trap/Illegal instr in read_context_raw
Reported Date                 : 8/2/95
Found in Baseline             : 1.1wp
Found Date                    : 6/12/95
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 13002
Fix By Baseline               : 1.2
Fixed In Baseline             : 1.1maint
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[8/2/95 public]

The problem is that sec_login_pvt_free_login_context calls free_krb_info before
it calls sec__id_free_cache, but sec_login_pvt_gen_export_token is calling
krbg_cc_get_name, which really is a macro that uses the krb_info field to
find the get_name function, i.e. lcp->krb_info.cache->ops->get_name
Since the krb_info structure was wiped out by free_krb_info, the ops pointer is
null, and we end up dereferencing several null pointers to come up with an
address of zero for get_name, and when we call to address zero, we get the
illegal instruction.

There were still some problems in the DCE code relating to the problem
where we were branching to 0 in read_context_raw.  In the function
read_context_raw we should check if(KRB_INFO(lcp).cache == NULL)
and if so set status to sec_login_s_no_current_context and 
return

=============================================================
src/security/client/login/sec_login_pvt.c
=============================================================
***************
*** 1209,1216 ****
  {
      assert (lcp->refcount == 0);
      if (lcp != NULL) {
-         free_identity(&lcp->identity);
-         free_krb_info(&lcp->krb_info);
          if (lcp->context_name)
              free(lcp->context_name);
          if (lcp->namecache_name)
--- 1209,1214 ----
***************
*** 1217,1222 ****
--- 1215,1223 ----
              free(lcp->namecache_name);
          if (lcp->namecache)
              sec__id_free_cache(lcp);
+
+         free_identity(&lcp->identity);
+         free_krb_info(&lcp->krb_info);

        /* v1.1 info */
        sec_encode_v1_1_lc_info_free(free, &lcp->v1_1_info);
***************
*** 1801,1806 ****
--- 1802,1813 ----
      CLEAR_STATUS(stp);
      if (varying) *varying = NULL;
      if (varying2) *varying2 = NULL;
+
+     if(KRB_INFO(lcp).cache == NULL)
+     {
+            SET_STATUS(stp, sec_login_s_no_current_context);
+            return;
+     }

      dfd = open(DATAFILE_NAME(datafile, KRB_INFO(lcp).cache), O_RDONLY, 0);
      free(datafile);

[11/03/95 public]
This one is actually related to 13002. For the 1.1maint, I want to fix both
with one patch and I am going to do it for 13002.

[11/13/95 public]
I am using 13002 as a place holder for 12791, 13001, and 13002. So, I am
marking this one as a dup of 13002.



CR Number                     : 12953
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd/tgs
Short Description             : call to
against_flag_policy_tgs with wrong parameters
Reported Date                 : 7/16/95
Found in Baseline             : 1.1wp
Found Date                    : 7/16/95
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 12909
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/16/95 public]

In     src/security/krb5/kdc/kdc_util.c
        against_flag_policy_tgs() used with wrong parameters.


From the Tandem ticket:

> Within the function validate_tgs_request(), within file kdc_util.c.
> At the very end of the function.
> - - - -
>     /*
>      * Check local policy
>      */
> #ifdef OSF_DCE
>     errcode = against_flag_policy_tgs(request, server, ticket, status);
> #else
> - - - -
> 
> This does not match the code in policy.c
> - - - -
> krb5_boolean
> against_flag_policy_tgs(request, ticket)
> const register krb5_kdc_req *request;
> const register krb5_ticket *ticket;
> {
> - - -


The obvious fix of eliminating the spurious parameters (server & status)
seems at first examination the right one.  At the cost of stating the 
obvious, notice that it is not only a matter of the call being made with
extra parameters, so the code as is CANNOT work.



CR Number                     : 12950
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit fails with expired creds (warranty patch code)
Reported Date                 : 7/13/95
Found in Baseline             : 1.1wp
Found Date                    : 7/13/95
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 12930
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/13/95 public]
Since incorporating the warranty patch code, rgy_edit won't
work if the invoker's creds are expired; it fails with 
"registry server unavailable" rather than establishing an 
unauthenticated binding. 

The problem stems from the fact that the security binding code is
now getting a KRB5_CC_NOTFOUND (translated to "Matching credential
not found") error back from rpc_binding_set_auth_info() -- it used
to get rpc_s_auth_tkt_expired which the binding code is written
to handle.

The relevent code path: 

<client code>
  rca_setup_handle
    rpc_binding_set_auth_info
      rpc__krb_bnd_set_auth
        rpc__krb_get_tkt
          sec_krb_get_cred
            krb5_get_credentials_dce
              krb5_get_cred_from_kdc
                krb5_fcc_retrieve

krb5_fcc_retrieve returns KRB5_CC_NOTFOUND which is bubbled all the
way back up.  The difference in current behavior (vs pre-WP
behavior) is due to changes in krb5_get_cred_from_kdc 
(src/security/krb5/lib/krb/gc_frm_kd.c).  One thing that changed is 
that krb5_get_cred_from_kdc no longer returns 
KRB5KRB_AP_ERR_TKT_EXPIRED ('cause a valid, expired TGT is never found?).  
This error code is translated into rpc_s_auth_tkt_expired in 
sec_krb_get_cred (src/security/utils/sec_authn.c).  Another thing 
that changed is that there are calls to krb5_cc_retrieve_cred that don't 
continue if KRB5_CC_NOTFOUND is returned.  In fact, the call at line 253 
is the one that returns KRB5_CC_NOTFOUND and leads to failure.

Got a fix for this one?



CR Number                     : 12907
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : client
Short Description             : epacs memory leak
Reported Date                 : 6/6/95
Found in Baseline             : 1.1
Found Date                    : 6/6/95
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 13034
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[6/6/95 public]

A support customer has discovered a memory leak in the function
sec_login_pvt_initiate_chain:

> PRIVATE void sec_login_pvt_initiate_chain(
>     sec_login_context_t         *lcp,
>     sec_id_delegation_type_t    dlg_type,
>     sec_id_restriction_set_t    *dlg_rstrs,
>     sec_id_restriction_set_t    *tgt_rstrs,
>     sec_id_opt_req_t            *opt_rstrs,
>     sec_id_opt_req_t            *req_rstrs,
>     sec_id_compatibility_mode_t compat_mode,
>     sec_bytes_t                 *epac_chain,
>     error_status_t              *stp
>     )
> 
>     sec_id_epac_t       epac;
>     sec_id_epac_set_t   epac_set;
>     sec_id_epac_data_t  epac_data, nepac_data;
> 
>     /* Decode the original EPAC chain pickle */
>     sec_id_epac_set_decode((void *(*)(unsigned32))malloc, free,
>         EPAC_CHAIN(lcp).num_bytes, EPAC_CHAIN(lcp).bytes, &epac_set, stp);
> - - - - - - - - - - - - - - - - - - - - - - -
> epac_set.epacs points to memory allocated via sec_id_epac_set_decode.
> This memory is lost later in this same routine by the statement:
>  "epac_set.epacs = &epac"
> - - - - - - - - - - - - - - - - - - - - - - -
>     epac_set.epacs = &epac;
>     sec_id_epac_set_encode((void *(*)(unsigned32))malloc, free, &epac_set,
>         &epac_chain->num_bytes,&epac_chain->bytes, stp);
> 
>     sec_encode_epac_set_free(free, &epac_set);
> - - - - - - - - - - - - - - - - - - - - - - -
> This call ^^^^ to free memory attempts to free memory which is not part
> of the heap, but is part of the stack, the culprit being the statement:
>  "epac_set.epacs = &epac"

This also prevents the call to sec_encode_epac_set_free() from freeing
the sec_id_epac_t struct to which epac_set.epacs originally pointed.

A possible fix would be to replace the lines:

    epac.seals = NULL;
    epac_set.num_epacs = 1;
    epac_set.epacs = &epac;
    sec_id_epac_set_encode((void *(*)(unsigned32))malloc, free, &epac_set,
        &epac_chain->num_bytes,&epac_chain->bytes, stp);

    sec_encode_epac_set_free(free, &epac_set);

with:

    epac.seals = NULL;
    sec_encode_epac_set_free(free, &epac_set);
    epac_set.num_epacs = 1;
    epac_set.epacs = &epac;
    sec_id_epac_set_encode((void *(*)(unsigned32))malloc, free, &epac_set,
        &epac_chain->num_bytes,&epac_chain->bytes, stp);

    epac_set.num_epacs = 0;
    epac_set.epacs = NULL;

Note that this fix has _not_ been tested; it is merely offered as a 
potential solution.

[6/26/95 public]

The same problem occurs in the function sec_login_pvt_insert_attrs.
The fix is identical.

[10/2/95 public]
Dup of 13034. The fix proposed here is not correct. See the other OT.



CR Number                     : 12884
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb
Short Description             : extra calls to free() create havoc
Reported Date                 : 5/23/95
Found in Baseline             : 1.1
Found Date                    : 5/23/95
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 13034
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/client/login/sec_login_pvt.c, krb5/lib/krb/copy_athctr.c, copy_tick.c
Sensitivity                   : public

[5/23/95 public]
 Callers of krb5_copy_keyblock() in security/krb5/lib/krb/copy_key.c
 should NOT free that target of the copy, if failure is returned.
 
 We have identified the following files which incorrectly do so:
        security/client/login/sec_login_pvt.c,
                krb5/lib/krb/copy_athctr.c, copy_tick.c
 
 The fact that we saw this problem is due to the way in which 
 sec_login_pvt_get_and_process_krb_tgt() calls krb5_process_as_reply()
 with reply_random_key  (i.e. the keyseed, to krb5_process_as_reply) set
 to all 0's.  When skey_keyproc() in client/login/sec_login_pvt.c is called
 with this structure, the subsequent call to  krb_copy_keyblock fails
 (malloc length 0), and who-knows-what gets free'd based upon the original
 value of an uninitialized stack variable. (For us, it was most often
 as_reply->client, so we pretty quicky got nailed when we modified 
 krb5_free_keyblock to set nasty values into the keyblock when freed.)
 
 REPRODUCIBLE:
 Yes - we tended to see the problem by repeatedly bringing the daemons
 up and down.
 
Related-file::Added 950404 by rusman::
/build/hiosfm/RCS/dce1.1/src/security/client/login/./sec_login_pvt.c,v 8.3
 /build/hiosfm/RCS/dce1.1/src/security/client/login/./sec_login_pvt.c,v 8.3
 rusman 1995/04/04 15:15:58 +8 -2
 Reason:  OSDqa11097 extra calls to free() create havoc
 in skey_keyproc, avoid extra free()
 
     *** /tmp/ci.2402..sec_login_pvt.c.2449.1   Tue Apr  4 11:16:14 1995
     --- /tmp/sec_login_pvt.c.2449.2    Tue Apr  4 11:16:15 1995
     ***************
     *** 3287,3307 ****
     --- 3287,3313 ----
            krb5_keyblock      **key,
            krb5_const_pointer keyseed,
            krb5_pa_data       **padata
         )
       {
     + #ifndef hitm
           krb5_error_code retval = 0;
     + #endif
       
           if (!valid_keytype(type))
               return KRB5_PROG_ETYPE_NOSUPP;
       
     + #if hitm
     +     return(krb5_copy_keyblock(keyseed, key));
     + #else
           retval = krb5_copy_keyblock(keyseed, key);
           if (retval) {
               free((krb5_keyblock *) *key);
           }
       
           return retval;
     + #endif
       }
       
       
       /* s e c _ l o g i n _ p v t _ g e t _ l r g y _ l o g i n _ i n f o
        *
 
Related-file::Added 950404 by rusman::
/build/hiosfm/RCS/dce1.1/src/security/krb5/lib/krb/./copy_athctr.c,v 8.2
 /build/hiosfm/RCS/dce1.1/src/security/krb5/lib/krb/./copy_athctr.c,v 8.2
 rusman 1995/04/04 15:17:50 +4 -2
 Reason:  OSDqa11097 extra calls to free() create havoc
 avoid extra call to free() after failure of krb5_copy_keyblock()
 
     *** /tmp/ci.2483..copy_athctr.c.2521.1     Tue Apr  4 11:17:55 1995
     --- /tmp/copy_athctr.c.2521.2      Tue Apr  4 11:17:56 1995
     ***************
     *** 99,109 ****
     --- 99,111 ----
           }
           
           if (authfrom->subkey) {
            if (retval = krb5_copy_keyblock(authfrom->subkey,
                                            &tempto->subkey)) {
     + #ifndef hitm
                    xfree(tempto->subkey);
     + #endif
                    krb5_free_checksum(tempto->checksum);
                    krb5_free_principal(tempto->client);    
                    xfree(tempto);
                    return retval;
            }
 
Related-file::Added 950404 by rusman::
/build/hiosfm/RCS/dce1.1/src/security/krb5/lib/krb/./copy_tick.c,v 8.2
 /build/hiosfm/RCS/dce1.1/src/security/krb5/lib/krb/./copy_tick.c,v 8.2
 rusman 1995/04/04 15:18:05 +4 -2
 Reason:  OSDqa11097 extra calls to free() create havoc
 avoid extra call to free() after failure of krb5_copy_keyblock()
 
     *** /tmp/ci.2483..copy_tick.c.2545.1       Tue Apr  4 11:18:07 1995
     --- /tmp/copy_tick.c.2545.2        Tue Apr  4 11:18:07 1995
     ***************
     *** 89,99 ****
     --- 89,101 ----
           if (!(tempto = (krb5_enc_tkt_part *)malloc(sizeof(*tempto))))
        return ENOMEM;
           *tempto = *partfrom;
           if (retval = krb5_copy_keyblock(partfrom->session,
                                    &tempto->session)) {
     + #ifndef hitm
        xfree(tempto->session);
     + #endif
        xfree(tempto);
        return retval;
           }
           if (retval = krb5_copy_principal(partfrom->client,
&tempto->client)) {
        krb5_free_keyblock(tempto->session);
 
Related-file:::: Resolution 
 DESCRIPTION OF BUG FIX:
  
 When krb5_copy_keyblock() fails, there is no cleanup required
 pertaining to the possible target of the copy.

[9/6/95 public]

Duplicate of 13034. 13034 also reports an additional memory leak not
mentioned here.



CR Number                     : 12791
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 13001, 13002
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : dlgstr001 core dumps: sec_login_pvt_free_login_context SEGV
Reported Date                 : 2/7/95
Found in Baseline             : 1.0.3, 1.1
Found Date                    : 2/7/95
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 13002
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1maint
Affected File(s)              : security/client/login/sec_login_pvt.c
Sensitivity                   : public

[2/7/95 public]

The sec_login_pvt_free_login_context() routine frees storage associated
with a login context.  A free_identity(lcp->identity) is followed by
a sec__id_free_cache(lcp).  In turn, however, sec__id_free_cache() calls down
into sec_login_pvt_get_namecache(), sec_login_export_context() and
sec_login_pvt_check_exp(), which references the null pointer lcp->identity.

I tried to swap the order of free_identity() and sec__id_free_cache()
so that lcp->identity would be valid, but this caused other problems.
So I modified sec_login_pvt_check_exp() to only do the test if lcp->
identity is valid.  This eliminates the segv, but sec_login_export_context()
fails later on in sec_login_pvt_gen_export_token().  

This has come up while testing delegation.  Obviously, this code works in
other cases where sec_login_free_login_context() is called.  But I don't
understand it.  Why does sec__id_free_cache have to call sec_login_pvt_
get_namecache, which does a fair amount of initialization and may even 
return the default context handle?

[2/10/95 public]

I've duplicated the SEGV problem on a reference platform (OSF/1 Release 
1.2 on a 486).  The SEGV happens in dlg_intermediary in dlg_test_access 
(i.e. run dlg_client with no arguments).  When you remove the 
sec_login_purge_context at the end of this routine, the problem goes away.

The dlgstr001 test has been around for a while.  Why would others miss 
this failure?  Well the SEGV only happens when you're running the CN 
(tcp) RPC protocol.  And the "dlg_client" test reports success anyway, 
so if that's what you're looking at, you may go away happy.  The SEGV 
is over on the dlg_intermediary side, and after a minute or so. 

To summarize the problem from what I know now: sec_login_purge_context 
will core dump if your context came from a sec_login_become_delegate 
and you're running over the CN protocol.

[11/01/95 public]
Please see OT 13001 and 13002 for more details.

This is happening for both CN and DG, except for DG case, you have to wait 
for about 30 minutes before the server will core dump, and I don't think
whether sec_login_purge_context() is called or not is relavant.

What happens is: for CN case, when the call finishes (manager code is done),
the association is done and the call thread is brough down. This involves
clean up the krb info which eventually calls sec_login_pvt_free_login_context.
For the DG case, since there is no association, what happens is there is a
timer for each call thread and when the timer fn is called (there is no 
activity for so long, about 20 to 30 minutes), the call thread is brough down.
Same operation for cleaning up krb info.

The fix in OT 13001 and 13002 is to move sec__id_free_cache() call in front of
calls to free identity and krb_info and fix the problem in other part to make
it work. The reason that sec__id_free_cache(), which comes with overhead, is
called is because the cache stuff is defined, privately, in a C code and
sec__id_free_cache() is the only public fn you can call. Of course, making
some private fn to be public would help.

[11/01/95 public]

Thanx for answering this OT.  I had made a note that the 13002 patch might
fix the problem reported here.  We just re-ran the the dlg test last week, 
and we did not encounter the SEGV.

n

[11/03/95 public]
Marked this as dup of 13002. Will submit fix for 13002 (to 1.1maint) soon.



CR Number                     : 12709
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : Login using preauth KRB5 timestamps and account with non-default pepper fails.
Reported Date                 : 10/24/94
Found in Baseline             : 1.1b21
Found Date                    : 10/24/94
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 13305
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/24/94 public]

If client logs in using the KRB5 preauth timestamps protocol and
their account has a non-default pepper field, the login will fail.

Probably not a showstopper because unless DCED secval is down or 
is in an unstable state, this protocol will not be used by 1.1 clients.

Fix is to have secd return the correct pepper and client to retry
by generating a new DES key using the correct pepper.

[10/24/94 public]

This protocol is used by dced itself.
Can there be a connection between this CR and CR 12627, where
validate_first seems to get stuck for hours ?

[10/24/94 public]

I doubt it. dced validates with strong (non-plaintext) keys,
so I think that having a non-default pepper would not matter.

[4/30/96 public]

Duplicate of 13305. A fix is scheduled for 1.2.2.



CR Number                     : 12642
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12343
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : login
Short Description             : Extended login points not enabled
Reported Date                 : 10/17/94
Found in Baseline             : 1.1b21
Found Date                    : 10/17/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 12526
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/17/94 public]
This is a placeholder for the extended login audit points.



CR Number                     : 12313
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : set context fails
Reported Date                 : 9/23/94
Found in Baseline             : 1.1b17
Found Date                    : 9/23/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 12311
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/23/94 public]

Moving data from 11913:
Running fts tests 12 + 14 in the DFS CHO cell on bl-16 produced:

Removing filesets...
Fileset 0,,123 on aggregate m3.aggr2 server /.:/hosts/dce11 deleted
AFS_SetContext(cobbler.osf.org) fails: who are you failed (dce / rpc)
Error in delete: who are you failed (dce / rpc)
AFS_SetContext(cobbler.osf.org) fails: who are you failed (dce / rpc)
Error in delete: who are you failed (dce / rpc)
Fileset 0,,134 on aggregate m3.aggr2 server /.:/hosts/dce11 deleted
fts delmount: error removing mount point for /.../cho_cell.qadce.osf.org/fs/test
/ft4.5377: Connection timed out

Reproduced with bl-17 - (This portion of the fts tests is testing
quotas so "disk quota exceeded" messages are GOOD :-)

dfs: rpc errors (code 382312711) from the fx server 130.105.5.22 in cell cobbler
_cell.qadce.osf.org
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: rpc errors (code 382312543) from the fx server 130.105.202.28 in cell cobbl
er_cell.qadce.osf.org
dfs: server disk quota exceeded
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.202.28 in cell cobbler_cell.qadce.o
sf.org
dfs: file server 130.105.202.28 in cell cobbler_cell.qadce.osf.org back up!
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: rpc errors (code 382312543) from the fx server 130.105.201.7 in cell cobble
r_cell.qadce.osf.org
dfs: set auth binding failed (code 382312711); running unauthenticated.
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.201.7 in cell cobbler_cell.qadce.os
f.org
dfs: file server 130.105.201.7 in cell cobbler_cell.qadce.osf.org back up!
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded

where:
stcode_hp 382312711
382312711 (decimal), 16c9a107 (hex): Helper process catatonic (dce / rpc)

stcode_hp 691089613
691089613 (decimal), 293130cd (hex): status 0x293130cd (dfs / xvl)

stcode_hp 382312543
382312543 (decimal), 16c9a05f (hex): Who are you failed (dce / rpc)

We suspect these errors are the result of general performance problems
so this CR is only a 1 and mainly a placeholder to document symptoms.
DFS performance problems are being tracked by CR 12281.
The specific symptom of dfsbind spinning is being tracked by CR 12311.
The fact that the fts tests 12 + 14 don't pass is CR 11708.

I will be turning off auditing in my DFS cells this weekend. Any additional
ideas for improving/evaluating performance welcome.

[9/23/94 public]
Dup'ing per burati request - these symptoms are believed to be the
direct result of dfsbind spinning (CR 12311)



CR Number                     : 12236
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd core dumped w/in 6 hours
Reported Date                 : 9/19/94
Found in Baseline             : 1.1b18
Found Date                    : 9/19/94
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11722
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/19/94 public]

Put the RIOS back into the DFS CHO cell ... didn't get far ...

root@cobbler> ls -l ./var/security/core
-rw-rw-rw-   1 root     bin      5189323 Sep 17 00:16 ./var/security/core

root@cobbler> ls -l dce_cf.db
-rw-r--r--   1 root     bin           60 Sep 16 18:21 dce_cf.db

ie. secd coredumped w/in 6 hours of configuring the cell. NO TESTS
WERE USED TO CREATE THIS COREDUMP - that is, the cell was and had been
idle since it was configured. Unfortunately, (despite/because?
of) the changes to libdce.a in 1.1b18, the core dump was not usable:

root@cobbler> dbx /opt/dcelocal/bin/secd ./var/security/core
dbx version 3.1 for AIX.
Type 'help' for help.
./var/security/core does not contain a stack (core ignored)
reading symbolic information ...

DFS CHO config is:

 1 RIOS X 3 HP
 m1 (R) = security server, dts server, flserver, fileserver (native and lfs)
 m2 (H) = cds server, dts server, flserver, fileserver (native and lfs)
 m3 (H) = dts server, flserver, fileserver (native and lfs)
 m4 (H) = client-only

[9/19/94 public]
I have a cell which I ran cds killer on without any problems. secd has
been active for more than 18 hours.

[9/19/94 public]
Thanks for the update - good datapoint - unclear whether it matters but
just for clarity, is your cell ALSO a SPLIT SERVER cell like mine? ie.
secd and cdsd on separate machines (and in my case, separate platforms)?

[9/19/94 public]
I have two cells, a single machine cell and a 2 machine cell. Neither
cell has had secd dump core. The secd on the spilt server has been running
for over 18 hours. I hope to have a full core dump working soon.

[9/20/94 public]
I rebooted the cell yesterday and again left the cell idle overnight - no
problems ... I had problems with secd crashing on RIOS a couple of months
ago and this pattern seems to be familiar ie. rebooted cell okay but newly
config'd secd on RIOS doesn't live as long - can't think of what would be
unique except the registry manipulations that dce_config does ... ideas
(and a full core dump working!) more than welcome.

[9/22/94 public]
As Howard pointed out, since rebooting is a workaround (an expensive one
for system test but still a workaround) severity is a C. I'm also dropping
priority to a 1 since, if I'm correct and rebooting IS a workaround, this
will not block system test.

[10/3/94 public]
Dup'ing to 11722 - the problems with secd on RIOS (whether master or replica)
began awhile ago - they have not been seen recently BUT the RIOS platform
is not being used for dce1.1 core servers much either. The problem with
unreadable RIOS core files has been solved so if hit again, useful data
will hopefully come of it. I hope to be using the RIOS as a secd master
this weekend - maybe there'll be something for the unintegrated tree ...



CR Number                     : 12235
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : acl_edit test fails
Reported Date                 : 9/17/94
Found in Baseline             : 1.1b17
Found Date                    : 9/17/94
Severity                      : C
Priority                      : 3
Status                        : dup
Duplicate Of                  : 12012
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
			test/security/api/moretests/acl_edit.sh
Sensitivity                   : public

[9/17/94 public]

The output of acl_edit appears to have changed and the test case is
expecting a different value. In the file moretests/acl_edit.sh in the
function do_c, the following lines exist:

        acl_edit $MASK_TEST_OBJ -m user:root:crwx 2> /tmp/acl_edit.out
        read error_line </tmp/acl_edit.out
        REP=`cat /tmp/acl_edit.out | sed -e "s/ERROR.*/ERROR/"`
        check_status "$REP" "ERROR" 1 "acl_edit -m user:root:crwx"

The output in /tmp/acl_edit.out is the following:

ERROR: SEC_ACL_EDIT - would unintentionally grant permissions via recalculated m
ask
 (dce / sad)


Therefore, the value of REP is "ERROR (dce /sad)", which is incorrect.
The following code corrects this problem:

        acl_edit $MASK_TEST_OBJ -m user:root:crwx 2> /tmp/acl_edit.out
        read error_line </tmp/acl_edit.out
        read error_line </tmp/acl_edit.out
        REP=`echo $error_line | awk -F":" '{print $1}'`
        check_status "$REP" "ERROR" 1 "acl_edit -m user:root:crwx"

[ sekhar 9/19/94 public ]

This is a dup of 12012 which is already fixed in bl18.

So submitting the above fix will only cause the test to 
fail again in bl18.

Also, I checked the acl_edit.sh in the 1.1 source tree but could not 
find the line 

    read error_line </tmp/acl_edit.out  

anywhere .

[9/17/94 public]
I have not done a bsubmit on the file. There should have been only one
line with "read error_line", my mistake. However, this change will
always work regardless of the number of lines that are in the output
file. I will leave the code as it is without this change.



CR Number                     : 12189
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : krb
Short Description             : rpc.sec.2 test clients fail with Credentials cache I/O operation error
Reported Date                 : 9/14/94
Found in Baseline             : 1.1b17
Found Date                    : 9/14/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12070
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/14/94 public]

Two of 9 test clients failed with error  0x141290bd
 Credentials cache I/O operation failed XXX (dce / krb)
running rpc.sec.2 tests.

The test clients were both on OSF/1 using tcp protocol.  The third client
on the machine, also running tcp didn't fail.  The priority may change, 
depending on how reproducible this is. 

NB: baseline 17

Cell:

HPUX: cdsd secd dtsd
OSF1: client dtsd
OSF1; client dtsd ntp provider

[9/14/94 public]

Should have added that the clients failed after 7 hours.



CR Number                     : 12149
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Can't make authenticated RPCs after cellname change.
Reported Date                 : 9/12/94
Found in Baseline             : 1.1b17
Found Date                    : 9/12/94
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12150
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/12/94 public]
root@absolut /$ dce_shutdown
1994-09-12-16:47:58.617-04:00I----- auditd ERROR aud general dmn_rpc_manager.c 962 0x40022268
Client has no permission to execute operation

The shutdown hung for a while and auditd was not stopped.  I had configured
a 1.1b17 cell, I had added an alias and had just set it to be the primary
name.  (the sec, cds and dce_cf.db portions).  I was trying to stop and
restart the cell to see if things would work and the stop hung in auditing.

[09/14/94 public]
From the error message, it seems that dce_shutdown did not have the
permission to execute the dcecp "aud stop" command.  It needs to be
root, (or at least be part of the "audit-admin" group I think).
It should have same permissions as dce_config I think.  Does it?

[9/14/94 public]
I was logged in as root and I was NOT dce_login'ed.

[9/14/94 public]
Howard, is this repeatable?  I have been able to start and stop with
dce_config the auditd many times using BL-17. Also, if you did a complete
config with a bl-17 dce_config, the cell-admin is part of the audit-admin
group.  So, you should be able to start and stop auditd as either
cell-admin or as root.

[9/14/94 public]
Folks you seemed to have missed what I described above as the scenario:

> I had configured a 1.1b17 cell, I had added an alias and had just set it to
> be the primary name.  (the sec, cds and dce_cf.db portions).  I was trying
> to stop and restart the cell to see if things would work and the stop hung
> in auditing.

Have you tried to add an alias and change the primary name of the cell?

Note that the cellalias script while submitted and installed still has some
problems so you need to do the stuff there by hand.

I'm going to try to get to this stuff again today, so I'll see if I can
reproduce.

[09/14/94 public]
Looking into dce_shutdown, the command is indeed "dcecp -c aud stop", so the
first line of defense is dcecp: to figure out whether the hang is in dcecp, or
auditd causes dcecp to hang, which causes dce_shutdown to hang... so I am shifting
this to dcecp for the time being.
When auditd issues the message "no permission to execute operation", it returns this
status back to dcecp.

[9/14/94 public]
I traced this down into the acl library. acleval.c:dce_acl_inq_client_creds().

The problem is that rpc_binding_inq_auth_caller() is returning
rpc_s_binding_has_no_auth. Again, this is only when a cell alias had
been created and the primary name of the cell is being changed (the
dce_cf.db file has been changed but things haven't been restarted, so
the cell/machine is in a weird state).  Is there a problem trying an
authenticated RPC in this state?  Rich?

[09/14/94 public]
I think John's analysis is right, and that this is either a non-bug or
an RPC/SEC problem.  I flipped a coin and RPC "won" :-)

[9/15/94 public]

I bet that dcecp is making an unauthenticated rpc to dced because
rpc_s_binding_has_no_auth happens only when the client binding has no auth
info. aud_bind_to_server()::aud_util.c sets authn_protocol to
rpc_c_authn_none if there is no login context. Probably, when the primary
name of the cell got changed, the host lost its login context?

[09/15/94 public]
I wonder if this is related to OT CR 12150?

[9/15/94 public]
Howard, do a klist as root before and after the attempt to shutdown.  Both
cases should show valid credentials.  If not, look to see if the
/opt/dcelocal/var/security/creds/*fff* files are there.

[9/15/94 public]
Forget that, the dce_shutdown script removes all contents of the creds
directory (it does this after killing daemons).  So, after shutdown no
creds.  Still, verify that klist after setting cell_alias to primary 
and before shutdown is valid.

[9/15/94 public]
I think people are missing the obvious here.
dce_shutdown does not do a dce_login as cell admin (I removed that)
so it might not have permissions to shutdown audit.

I *know* it doesn't have permissions to use sec_admin/dcecp
to shutdown secd.

If you want to do this 'nicely' (aka no kill), you should dce_login
as cell_admin before running dce_shutdown.  Its a trade-off
since prompting for cell admins password every time you shutdown
is a pain (and we are the primary users of these scripts).

In any case, this really isn't an excuse for dcecp hanging.

[9/15/94 public]
Nope.  John and I had tried this last night by hand and we've gotten to a
real error.  Just to be clear:

 * the hang was probably dced hanging, see CR 12150
 * this defect is that auditing didn't shut down
 * I was running as root and not dce_login'ed
 * The interesting thing was that I was changing the primary name of the cell.
 * John and I brought up a cell, added an alias (sec,cds,dce_cf.db).
 * then we stopped and restarted and everything was fine.
 * Then I changed the primary name of the cell (sec,cds, and dce_cf.db).
 * We found that if you change the cellname in dce_cf.db you can't START
   audit.  If you leave the name alone you can start it, if while its
   running you change the name, you can't stop it.  By stop it I mean being
   logged in as root (not dce_login'ed) and using "aud stop" in dcecp.  Now
   if you change the name in dce_cf.db back, you can stop. 
 * Ergo, changing the name of dce_cf.db means you can't stop auditing.
 * Why? we traced it into auditd and into the acl manager.  When doing the
   check the acl manager thinks we're unauthenticated as a result of
   rpc_binding_inq_auth_caller() returning rpc_s_binding_has_no_auth.
 
Now to respond to tatsu_s I don't think we're making an unauth call
(remember it works if you go and edit dce_cf.db back, so we are running the
same code).  It's something that changing the dce_cf.db file is breaking
rpc_binding_inq_auth_caller.

I just changed this back to comp=rpc for the above reasons.  I ran my
reasoning by rsalz and he agreed.  I don't really want to spend time moving
this CR back and forth so if you don't think in there, let me know.

[9/15/94 public]

But, you havn't verified that dcecp is making an auth rpc. I would suggest
to check it by calling rpc_binding_inq_auth_info(dcp_aud_binding_h,...) in
dcecp. I can't do it here.

[09/15/94 public]
Just to add some more info, this is the ACL that auditd manages:

dce1.1# acl_edit /.:/hosts/kazoo/audit-server
sec_acl_edit> l
# SEC_ACL for /.:/hosts/kazoo/audit-server:
# Default cell = /.../torolab.ibm.com
unauthenticated:-r--
user:hosts/kazoo/self:crw-
group:subsys/dce/audit-admin:crwl
any_other:-r--
sec_acl_edit> 

Regarding the change of cellname which caused auditd not to START, it could be 
that you need to remove the acl file: /opt/dcelocal/var/audit/adm/acl, as
dce_config does today?

[9/16/94 public]
Ok. Several things are happening here...

For all the work below, all operations are run as root (machine principal).

klist in this state shows:
# klist
DCE Identity Information:
        Global Principal: <Unable to generate principal name>
        Cell:      9c0d9802-d16b-11cd-86d1-080009251352 <cell name unknown>
        Principal: 000030a2-d16b-21cd-8600-080009251352 <principal name unknown>
        Group:     0000000c-d16b-21cd-8601-080009251352 <group name unknown>
        Local Groups:
                0000000c-d16b-21cd-8601-080009251352 <group name unknown>
                000013f1-d16b-21cd-8c01-080009251352 <group name unknown>

Identity Info Expires: 94/09/17:00:04:29
Account Expires:       never
Passwd Expires:        never

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_ffffffff
Default principal: hosts/absolut/self@absolut_cell
Server: krbtgt/absolut_cell@absolut_cell
        valid 94/09/16:14:04:29 to 94/09/17:00:04:29
Server: dce-rgy@absolut_cell
        valid 94/09/16:14:04:29 to 94/09/17:00:04:29
Server: dce-ptgt@absolut_cell
        valid 94/09/16:14:04:35 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: krbtgt/absolut_cell@absolut_cell
        valid 94/09/16:14:04:36 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: dce-rgy@absolut_cell
        valid 94/09/16:14:04:37 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: hosts/absolut/self@absolut_cell
        valid 94/09/16:14:04:38 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: dce-rgy@absolut_cell
        valid 94/09/16:14:05:04 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: dce-rgy@absolut_cell
        valid 94/09/16:14:05:08 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: hosts/absolut/cds-server@absolut_cell
        valid 94/09/16:14:05:09 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: hosts/absolut/cds-server@absolut_cell
        valid 94/09/16:14:05:09 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: hosts/absolut/cds-server@absolut_cell
        valid 94/09/16:14:05:10 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: dce-rgy@absolut_cell
        valid 94/09/16:14:05:12 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: hosts/absolut/cds-server@absolut_cell
        valid 94/09/16:14:05:12 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: hosts/absolut/self@absolut_cell
        valid 94/09/16:14:05:33 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: dce-rgy@absolut_cell
        valid 94/09/16:14:11:56 to 94/09/16:16:04:35
Client: dce-ptgt@absolut_cell   Server: hosts/absolut/self@absolut_cell
        valid 94/09/16:14:12:09 to 94/09/16:16:04:35

Notice that the principal and group names can't be resolved at the top.

Starting dcecp in this state, dcecp tries to inherit the existing login
context. This fails when sec_rgy_cell_bind(binding to "/.:") fails with
"Registry server unavailable". This seems to be bug #1.

Starting dcecp in the state where the dce_cf.db file is in the state
where the primary has not been switched works (as expected). Switching
around the dce_cf.db file and then continuing dcecp, dcecp fails while
getting a binding handle to the audit daemon in rpc_binding_set_auth_info
with "Registry server unavailable." again. Bug #2?

Starting dcecp in the same state, but not switching the dce_cf.db file
around until after it has acquired a binding handle to auditd. I inserted
a call to rpc_binding_inq_auth_info() just before the RPC to stop
the audit daemon. I swaped aroung the dce_cf.db file before this call.
The rpc_binding_inq_auth_info() call succeeded and returned the information
that I expected (pkt_privacy and friends). Continuing from there, the
audit daemon DID stop.

It seems that if you build the binding handle under the 'old' cell
naming scheme, the servers call to the acl manager library will work.
The call to rpc_binding_inq_auth_caller() mentioned above seems to
work if the binding handle is built with the original naming scheme, 
but fails once the primary name has been changed.

[9/16/94 public]
I've made this statement to those involved, but for the record:
DCE RPC does not read the dce_cf.db in any way.  Thus, if somethings
fails (such as rpc_binding_inq_auth_caller()) when you change this
file, you should find something (security comes to mind) which *does*
open and read this file.

Adding security to the CC list in the expectation that this bug will
be reassigned to them 'real soon' now.

[10/5/94 public]
Given the above comments about klist and dcecp, I'd say that neither of them
could get an authenticated RPC to work at that point either, so there's no
reason to expect that dcecp could do an authenticated RPC to auditd.  This
is probably dependent on the other cellname alias CRs.  Given that klist
couldn't do an authenticated sec_id_gen_name to get the cell or principal or
group names and trying to start dcecp authenticated gave registry server
unavailable, I've changed the description to more accurately describe the
problem.  BTW: Maybe this is obvious after years of suggesting it, but just
in case:  Every time you hit a problem with "registry server unavailable"
you should try setting DEBUG_SEC (env var) to 3 and try again so you can
see what underlying error really caused the problem.

[10/5/94 public]
This only just caught my eye.  Rich asked long ago "I wonder if this is
related to OT CR 12150?"  Yes, auth rpc ways (among other things) don't
work after you've changed your cell alias.  Assuming there's agreement
that it isn't really a problem for audit to hang while shutting down when
the substrate fails (just as it's ok for dced to "hang" in this name change
scenario), this is just a duplicate.



CR Number                     : 12129
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit mem fault during dce_config of cds on the hp platform
Reported Date                 : 9/12/94
Found in Baseline             : 1.1
Found Date                    : 9/12/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 12131
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/12/94 public]

SYSTEM:		HPUX
HOST:		budapest
TEST:		core smoketest

contents of  dcecp.out

RPC
CDS
PGO
ACL

contents of do_automatic_test.log

invoking dcecp smoke test
acl object not found
dcecp returned value is: ACL
DONE


contents of do_automatic_test.log for multimachine test
 
core smoke test did not configure on budapest (ERRORS in dce_config), multi-mach
ine test failed on budapest

[9/12/94 public]
In analyzing the problem, it looked like cdsd did not come up correctly.
dce_config reports the following:

S:****** Starting cdsadv...
S:****** Starting cdsd...
/mnt/opt/dce1.1/etc/dce_config: 2731 Memory fault
/mnt/opt/dce1.1/etc/dce_config: 2741 Bus error
ERROR:   acl_edit - setting ACLs on /.:
           Message from ecl_edit:


The systesm has a capacity of 87%.  So, there are some space available
still.

Because of the above failures, the dcecp test failed with 
"acl object not found" as expected.

[ rrizzo 9/12/94 public ]

John Dugas has looked at the problem and he says it looks like a change to
"acl_edit" in security now causes the way "dce_config" works to fail.  So
I'm reassigning this OT to security.

[9/12/94 public]
This CR shows similar symptoms as 12131 where acl_edit fails in the middle
of the cds server configuration. The output above is from dce_config.log
which is different than the stdout info; i.e. stdout also prints the line:

S:****** Setting ACLs for all new namespace entries...

It might be a memory corruption problem in which case the error could
happen anywhere during dce_config. In case of the CR 12131 cdsd was up when
acl_edit fails.

[9/13/94 public]

TEST:		core Smoketest
HOST:		budapest



output from run_commands.log

invoking dcecp smoke test
Entry not found
dcecp returned value is: LOG
DONE

output from sif:/tmp/dce_config.log

D:         Executing: acl_edit /.:/subsys/HP/sample-apps -m any_other:rwtdica
           -m unauthenticated:rwti
DEBUG:     Executing: chk_acl_edit(acl_edit - setting ACLs on new namespace
           entries.)
DEBUG:     Executing: err_exit(acl_edit - setting ACLs on new namespace
           entries.
             Message from acl_edit:
             )
ERROR:   acl_edit - setting ACLs on new namespace entries.
           Message from acl_edit:

[9/13/94 public]
Since I've been told that this is really acl_edit dying during config, not
cdsd, I've fixed the short description field to accurately report the problem
and avoid confusion when reading through the OT summaries.

[9/14/94 public]
See ot12131 for description.



CR Number                     : 12053
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11687
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd core dumps, file table overflow
Reported Date                 : 9/6/94
Found in Baseline             : 1.1b16
Found Date                    : 9/6/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11687
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/6/94 public]

Using bl-16.3, secd core dumped after 3 days, 5 hours with the following trace:

0 _kill@libc + 0x00000008 (hp-ux export stub)
1 _raise@libc + 0x00000024 (0x6, 0x4036fc24, 0x8, 0x2d2d2d00)
2 _abort@libc + 0x00000078 (0x400012f8, 0x4036fb78, 0x1, 0x4036fb24)
3 dce_svc_printf_withfile@libdce + 0x000005a0 (0x7afadfa0, 0x4001b60c, 0x1d4, 0x4001b64c)
4 rsdb_save + 0x0000027c (0x400062e0, 0x4036f470, 0x4036f470, 0)
5 rsdb_checkpt + 0x00000114 (0x4, 0x2, 0x4036f470, 0x400061f0)
6 rsdb_checkpt_task + 0x000001b8 (0, 0x7af521b0, 0x402039c8, 0x15)
7 cma__thread_base@libdce + 0x0000021c (0x402039c8, 0, 0, 0)
8 cma__thread_start1@libdce + 0x0000004c (0x402039c8, 0, 0, 0)

Technically, secd passed the "48 hour" requirement ... but I've logged
this as a "1" mainly because it is not clear secd is the culprit - there
was a resource problem of some kind that rendered ALL the server machines
in the cell (all were HPs and all were running DFS as well as core)
useless even for base OS commands like ls/ps/shutdown ... (error 23,
File table overflow, was a common theme as was "command not found")

Note that secd.log's timestamp was very close to the time of the core
dump:

-rw-rw-rw-   1 root     sys      10388316 Sep  4 22:01 core
-rw-r--r--   1 root     sys          111 Sep  4 21:58 secd.log

and reported:
PC_CN_AUTH_VFY_CLIENT_REQ on server failed: Clock skew too great (dce / krb)
errno text : File table overflow

I had 3 local dts servers so I don't know if the "Clock skew" error is
valid or not.

Future test runs will include a script (ple_ps) to capture system stats
throughout the run.

[9/6/94 public]
The dts servers may have been in a hosed state because of the resource
problems too.  The 'date' command shouldn't have the resource problems that
the ls/ps/shutdown commands did and would be able to tell you if the time
on each machine is within 5 minutes of the time on each of the other machines
in the cell.  If you do ls or ps and pipe to more and hit resource problems,
sometimes just not piping to more will get it to work.  If it gets into that
state again, try /etc/swapinfo -t (on HPUX, as root) to see how much swap
space is left (it should be able to run even if you're out of swap space and
can't get ls to run).  That secd core file isn't very big given the amount
of memory leaks that we believe are still hanging around.  Was the file
system full (on HPUX: bdf /) and that's possibly an incomplete core file?

[9/6/94 public]
Thanks for the info - Doublechecked and there was plenty of space so it doesn't
look like the core file was truncated:

root@dce13> bdf -t hfs
Filesystem           kbytes    used   avail capacity Mounted on
/dev/dsk/c201d6s0    320406  271979   16386    94%   /
/dev/dsk/c201d5s0    319866  170495  117384    59%   /u0

unfortunately, even avoiding pipes isn't enough (I still
have one hosed HP if you have more ideas). Here's what happens:

root@dce11> id   
/bin/ksh: id:  not found
root@dce11> whoami
/bin/ksh: whoami:  not found
root@dce11> klist
/bin/ksh: klist:  not found
root@dce11> <ctl-d>  (to get out of shell)
root@dce11> id
uid=0() gid=3()
root@dce11> /etc/swapinfo -t
	  Kb      Kb      Kb   PCT  START/      Kb
	  TYPE   AVAIL    USED    FREE  USED   LIMIT RESERVE  PRI  NAME
	  dev    74604   23236   51368   31%  341280       -    0  7,0x201600
	  dev    75835      59   75776    0%  340740       -    1  7,0x201500
	  hold       0   51744  -51744
	  tot   150439   75039   75400   50%       -       0    -
root@dce11> Routine bind(2) failed on childsocket '/opt/dcelocal/var/adm/directory/cds/dssS-2144674269' : errno = 23.
root@dce11> Unable to start execution of the child: errno = 23.
root@dce11> Unable to start execution of the child: errno = 23.
Failed to retrieve server binding from the namespace: Implementation specific error (dce / cds)
Failure retrieving profile entry from host: status 0x0000ff03 (? / aap)
LAN profile not found
Can't retrieve DCE cell name from configuration DB: status 0x0000ff03 (? / aap)
Too few servers (1), need 3 servers

secval Host Principal key management failure
Unknown message number 0x141290bd

BTW:
./stcode_hp 0x141290bd
336761021 (decimal), 141290bd (hex): Credentials cache I/O operation failed XXX (dce / krb)

Cds is clearly not happy - but again, who's the culprit? The "Can't retrieve DCE cell name" is
a known bug that's been fixed - workaround is to add a "cellaliases /blah" line to
/opt/dcelocal/dce_cf.db so that's okay ...

When I try to continue to get more info:

root@dce11> pwd
ksh: pwd: permission denied
root@dce11> cd /
root@dce11> ps -ef|grep cds
ksh: grep:  not found
ksh: ps:  not found
root@dce11> ps -ef
ksh: ps:  not found
root@dce11> top
top: can't open termcap file
last pid:     6;  load averages:  5.09,  5.06,  5.04    12:26:54
41 processes:  40 sleeping, 1 running

Memory: Real: 9328K/9804K act/tot  Virtual: 47348K/52604K act/tot  Free: 384K

  PID USERNAME PRI NICE   SIZE   RES STATE   TIME   WCPU    CPU COMMAND
    1275      0     5    0   296K   72K sleep   0:01  3.88%  2.71% ksh
   24007      0    28    0   308K  268K run     0:00 13.00%  0.63% top
   10927      0     1    0  8160K 1980K sleep  14:54  0.27%  0.27% bakserver
   10926      0     1    0  8132K 1928K sleep  14:34  0.24%  0.24% flserver
      49      0   -26    0    40K   60K sleep   3:59  0.09%  0.09% syncer
     109      0     1    0    84K   16K sleep   0:04  0.05%  0.05% <inetd>
    1274      0     1    0    68K   20K sleep   0:00  0.03%  0.03% <telnetd>
       1      0    15    0   216K    0K sleep   0:02  0.02%  0.02% <init>
      97      0     1    0     0K    0K sleep   0:02  0.01%  0.01% <biod>
     150      0     1    0    64K   64K sleep   0:09  0.01%  0.01% syslogd
    2751      0     1    0  6136K 1016K sleep  19:19  0.01%  0.01% dced
      85      0     1    0   180K    0K sleep   1:30  0.00%  0.00% <portmap>
      96      0     1    0     0K    0K sleep   0:02  0.00%  0.00% <biod>
     153      0    15    0   176K  136K sleep   0:06  0.00%  0.00% DIAGMON
     152      0     3    0   148K    0K sleep   0:00  0.00%  0.00% <getty>

Yup - it's a dfs cell - that's why I'm resp. engr. for now ... Added Rob Baum to
the interest list since the secval routines for maintaining the host principal self
tickets seem to have fallen down on the job too ... not a very focussed CR but I'll
cancel and open separate ones when things are more clear ...

[9/6/94 public]
I'm guessing the "Credentials cache IO operation failed"  would probably 
result from the sec_key_ routines if there was a problem of too many open
files on the system.  The secval is therefore probably falling down for the
same reason as everyone else.

[ sekhar 9/6/94 public ]

This similar to the problem in OT 11687 .

As I noted in OT 11687, there is one place in security code where 
the file descriptors are not being freed . The problem is that in the
function  sec_login_pvt_get_trusted_preauth() in the file sec_login_pvt.c
creat() is called , but the file descriptor is never freed.
I have fixed this and will be submitting it today.

[ sekhar 9/7/94 public ]

I just submitted the fixes for OT 11687 .

Also , in my comments dated 9/6/94 , in the  line

    "creat() is called , but the file descriptor is never freed."

free should read as closed .



CR Number                     : 12009
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit functional tests 11 & 12 fail
Reported Date                 : 9/1/94
Found in Baseline             : 1.1b17
Found Date                    : 9/1/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 12012
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/1/94 public]

Acl_edit functional tests 11 & 12 fail with the following error :

ERROR: SEC_ACL_EDIT - would unintentionally grant permissions via recalculated mask
 (dce / sad)

The tests currently mask this error because serviceability puts a newline
in error messages for security administration programs (an OT is
currently being opened by sekhar to address this). So the tests may
actually report the tests as passing when they really aren't. Our
functional tests for HP-UX report them as failed, but apparently
when run at OSF they are reported as passed.

[9/1/94 public]

Just found out that this may not be a problem - the test may be
checking that the error above is expected. It is difficult to tell
because of the serviceability bug mentioned above so I recommend 
leaving this open until that is fixed and we can verify that this 
test passes.

[ sekhar 9/1/94 public ]

Marked this CR as being dependent on 12012 which addresses the
issue of newline for admin programs .

[ sekhar 9/9/94 public ]

I just verified that once 12012 is fixed, acl_edit test no longer fails.

Marked this as a dup of 12012 which contains more information on what
the problem/fix is.



CR Number                     : 11941
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10924
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd master dumps core after
60 hours
Reported Date                 : 8/29/94
Found in Baseline             : 1.1b16
Found Date                    : 8/29/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10924
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/29/94 public]

Build: BL-16
Configuration:

	HPUX: DCE 1.1 secd, dtsd
	OSF1: DCE 1.1 cdsd, dtsd
	OSF1: DCE 1.1 client, dtsd, NTP provider
	OSF1: DCE 1.1 client
	RIOS: DCE 1.0.3 client


secd dumped core after 60 hours (whence B 2). The svc log recorded the
following error:

root@west> cat secd.log
1994-08-29-05:45:49.923-04:00I2.867 secd FATAL sec rs_rsdb rs_acct.c 925
0x40200288
Fatal exception while holding read-intend-write database lock

The core trace gave the following:

root@west> ls -s core
206976 core

trace 
======


0 _kill@libc + 0x00000008 (hp-ux export stub)
 1 _raise@libc + 0x00000024 (0x25, 0x40282fa4, 0x1d, 0x38363700)
 2 _abort@libc + 0x00000078 (0x400011a0, 0x40282ef8, 0x1, 0x40282ea4)
 3 dce_svc_printf_withfile@libdce + 0x000005a0 (0x7afad7b0, 0x40015efc,
0x39d, 0x40015f3c)
 4 rs_acct_replace + 0x00000b90 (0x4598cf50, 0x40280868, 0x4028146c, 0x6)
 5 op4_ssr + 0x000002bc (0x4598cf50, 0x40c49c80, 0x4028051c, 0x401fa310)
 6 rpc__cn_call_executor@libdce + 0x000007c8 (0x40c49c80, 0, 0, 0)
 7 cthread_call_executor@libdce + 0x000002d4 (0x401fb488, 0x7af53230,
0x40200288, 0xe)
 8 cma__thread_base@libdce + 0x0000021c (0x40200288, 0, 0, 0)
 9 cma__thread_start1@libdce + 0x0000004c (0x40200288, 0, 0, 0)
10 cma__thread_start0@libdce + 0x00000008 (0x40200288, 0, 0, 0)
11 cma__thread_start0@libdce + 0x00000008 (0x40200288, 0, 0, 0)
12 cma__thread_start0@libdce + 0x00000008 (0x40200288, 0, 0, 0)
13 cma__thread_start0@libdce + 0x00000008 (0x40200288, 0, 0, 0)
14 cma__thread_start0@libdce + 0x00000008 (0x40200288, 0, 0, 0)
15 cma__thread_start0@libdce + 0x00000008 (0x40200288, 0, 0, 0)
16 cma__thread_start0@libdce + 0x00000008 (0x40200288, 0, 0, 0)

[8/29/94 public]
Given that the above core file is 206976 blocks, which is about 106MB,
I'd say it's possible that the machine ran out of swap space at about this
time, so I've added 10924 (secd memory leak CR) to the interdependency field
above.  If you can bring secd back up with this database (ie: just restart
secd), then that account replace would get replayed with the same data, and
if it works this time then it's likely that it was a resource issue that
caused it to fail the first time.   BTW, if you can bring secd back up with
this database, please do a ps -el to see how big it is (the SZ field is in
blocks too and the blocksize is 512).  If the core image size reported by
ps -el is *much* smaller than 105MB (206976 blocks) then a fair amount of it
could be attributed to memory leaks (a good amount would have been from
deleted entries in the balanced tree that don't get cleaned up if not reused
until a secd  restart and a good amount would have been cached information
by the RnPC runtime on the last N client contexts that had called it...).

[8/29/94 public]

Well, I did not re-start secd alone, I re-started the cell because it was not
doing well when I got here this morning. 
Here is the size of secd as recorded by the ps -el command:

  F S   UID   PID  PPID  C PRI NI     ADDR   SZ    WCHAN TTY      TIME COMDOB
  1 S     0 22244     1  0 154 10  20f9540 2113   23b180 ?        4:29 secd

I found the principal entries in the registry database- about 50 or so.

[9/6/94 public]
Given that secd restarted with a normal size and didn't die when restarting,
I'd say that the data in the database is fine and that it was the fact that
secd was over 106MB that killed it.  Since 10924 has been open for a while
to fix secd memory leaks (and we've found a few that we're fixing now), I've
dup'd this to 10924.



CR Number                     : 11908
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : /security/server/bin
Short Description             : Unsatisfied symbols
Reported Date                 : 8/26/94
Found in Baseline             : 1.1
Found Date                    : 8/26/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 11906
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/26/94 public]
[ /security/server/bin at 21:44 (PM) Thursday ]
makepath bin/. && cd bin &&  exec make MAKEFILE_PASS=BASIC     build_all
bin: created directory
c89 -c    -D_SHARED_LIBRARIES   -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_BSD -DBSD -DRS_REP_NAUTH -DPOSIX_FILE_LOCKS -DPOSIX_TERMIOS -DDCE_AUD_POINTS -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u3/devobj/sb/nb_ux/src/security/server/bin -I/project/dce/build/dce1.1-snap/src/security/server/bin  -I../../h -I/u3/devobj/sb/nb_ux/src/security/h -I/project/dce/build/dce1.1-snap/src/security/h -I../../idl -I/u3/devobj/sb/nb_ux/src/security/idl -I/project/dce/build/dce1.1-snap/src/security/idl -I../rs -I/u3/devobj/sb/nb_ux/src/security/server/rs -I/project/dce/build/dce1.1-snap/src/security/server/rs -I/u3/devobj/sb/nb_ux/export/hp800/usr/include -I/project/dce/build/dce1.1-snap/export/hp800/usr/include    /project/dce/build/dce1.1-snap/src/security/server/rs/rs_main.c
c89 -c    -D_SHARED_LIBRARIES   -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_BSD -DBSD -DRS_REP_NAUTH -DPOSIX_FILE_LOCKS -DPOSIX_TERMIOS -DDCE_AUD_POINTS -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u3/devobj/sb/nb_ux/src/security/server/bin -I/project/dce/build/dce1.1-snap/src/security/server/bin  -I../../h -I/u3/devobj/sb/nb_ux/src/security/h -I/project/dce/build/dce1.1-snap/src/security/h -I../../idl -I/u3/devobj/sb/nb_ux/src/security/idl -I/project/dce/build/dce1.1-snap/src/security/idl -I../rs -I/u3/devobj/sb/nb_ux/src/security/server/rs -I/project/dce/build/dce1.1-snap/src/security/server/rs -I/u3/devobj/sb/nb_ux/export/hp800/usr/include -I/project/dce/build/dce1.1-snap/export/hp800/usr/include    /project/dce/build/dce1.1-snap/src/security/server/bin/rgy_create.c
c89   -g   -z -Wl,-Bimmediate,-Bnonfatal,-a,default,+b,/lib:/usr/lib     -L/u3/devobj/sb/nb_ux/export/hp800/usr/shlib -L/project/dce/build/dce1.1-snap/export/hp800/usr/shlib -L/usr/shlib -L/u3/devobj/sb/nb_ux/export/hp800/usr/lib     -L/project/dce/build/dce1.1-snap/export/hp800/usr/lib   -o secd.X rs_main.o  -L../../krb5/kdc -L../../krb5/lib/kdb -L../rsdb -L../rrs -L../../utils -L../../audit/libaudit -L../lm -L../rs -lrs -lkrb5kdc -lkdb -lrsdb -lrrs -lsecutil -laudit -ldce -lrss  -llm  
/bin/ld: Unsatisfied symbols:
   sec_key_mgmt_set_key (code)
*** Error code 1



CR Number                     : 11863
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : DFS Smoketest
Short Description             : system panics during dfs test
Reported Date                 : 8/24/94
Found in Baseline             : 1.1
Found Date                    : 8/24/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 11861
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/24/94 public]

SYSTEM HOST:		budapest
SYSTEM TYPE:		hppa
OS:			HPUX
TEST:			single machine cell, dfs Smoketest
PROBLEM:		System OS panics then core dumps
POSSIBLE CAUSE:		appears to die on cd /:

CONFIGURATION:		sif = sec and cds master, dts server
			budapest = sec replica, cds replica, dts server, dfs server
CORE FILES:		none


LOG: 			contents of budapest/tmp/dce_config.log

DEBUG:     Executing: menu99()
S:****** Exiting from dce_config.
WARNING: The password for the "cell_admin none none" user is a well-known 
         default value.  Since this is a security hole, it is recommended that 
         the password be changed immediately after exiting this script by using
         "dce_login", then the "rgy_edit change" command.
D:         Executing: rm -f /usr/bin/dce_login_noexec


LOG:			contents of budapest:/u1/RAT_tools/run_commands.dfs script

# sleep for tsr 
sleep 240
echo "cd /:"
cd /:
if [ "$?" != "0" ]; then
        echo "cd /: FAILED!"
fi


LOG:			contents of  budapest:/u1/RAT_tools/run_commands.dfs.log

Total FLDB entries that were successfully enumerated: 1 (0 failed; 0 wrong aggr
type)
+ [ 0 != 0 ]
+ sleep 240


LOG:			contents of budapest:/u1/RAT_tools/do_test.dfs.log


Too few servers (2), need 3 servers
S:****** Modifying the registry database for DFS operation...
S:****** Loading kernel extensions...
initializing Episode:  syscall return value = 0
S:****** Modifying the registry database for DFS server operation...
1994-08-24-12:19:12.380-04:00I----- dtsd WARNING dts config logevent_v_ultrix.c 269 0x7aff8968
Too few servers (2), need 3 servers



CR Number                     : 11815
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Account Lifespan Policy
Effectively Limits Life of Cell
Reported Date                 : 8/22/94
Found in Baseline             : 1.1
Found Date                    : 8/22/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11370
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/22/94 public]

The account lifespan policy applies to all accounts in a cell.  And when
this cell-wide policy and the account expiration date differ, the
stricter lifespan applies.  Unfortunately, this policy applies to
all accounts in a cell, including the accounts used by dce, such as
dce-rgy.  But when the dce-rgy account expires, the registry becomes
unavailable when the cell is restarted, and the cell is basically broken.
Only running secd in locksmith mode can recover it.

Setting the account lifespan to anything other than "forever" 
effectively limits the life of the cell to that value.  This is because
there is no way to overrride this policy in an individual account that
really needs to exist forever in order for the cell to function.

[8/23/94 public]
I've marked this as interdependent on 11370, since I believe mdf will wind up
fixing this problem as a side effect of fixing that one.  If so, and he thinks
that this one is already described enough in that CR, then he should just go
ahead and make this a 'dup' of 11370.  If this has to be fixed separately, then
don't dup it and ask mob to reassign it to somebody with time to look into it.



CR Number                     : 11812
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd coredumps and gets FATAL malloc error
Reported Date                 : 8/22/94
Found in Baseline             : 1.1b15
Found Date                    : 8/22/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 10924
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/22/94 public]
I was running some sec systests over the weekend (dcesepol, 
dcesestr and dceseact each from a different node in 3-node cell)
and about 8 hours into the run secd crashed.  
I was running b15 with OSF/1 sec/cds server, HP sec replica,
and OSf/1 client.  At about the same time of the crash, the
following FATAL svc message was logged:

1994-08-20-05:13:47.829+00:00I15.420 secd FATAL sec rs_rsdb balanced_trees.c 202 0x005b95f0 unable to allocate memory.


pgstat -i shows adequate, I believe, swap space:

edgar /opt/dcelocal/var/adm/logs K# pgstat
Paging Statistics (page size of 4096 bytes):
Paging File  Pri,clsize Used  Total %    Calls:In    Calls:Out Unav.,Init,Write
Global Info:   -,-        -      -       90453:24036   4943:11810 91055, 0, 0
/dev/sd0b      4,4      4972  36864 13%   7041:7041   11494:11494  14658, -, -


Core was generated by `secd'.
Program terminated with signal 6, IOT/Abort trap.
#0  0xa403fea4 in tgs_key ()
(gdb) break main
Breakpoint 1 at 0x40014a
(gdb) run
Starting program: /opt/dcelocal/bin/secd 

Breakpoint 1, 0x40014a in main ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0xa403fea4 in kill ()
(gdb) where
#0  0xa403fea4 in kill ()
Cannot access memory at address 0xc606bd44.
(gdb)

[ mdf 8/23/94 public ]

How big was the core file, also was there any trace back information?

[8/23/94 public]
By the way, I got this again last night.  The core file's pretty big:
edgar /opt/dcelocal/var/security K# ls -l core*
-rw-r--r--   1 root     bin             24219460 Aug 23 03:19 core
-rw-r--r--   1 root     bin             24205552 Aug 20 01:15 core.sv

(core.sv is original, core is newest)

Using gdb on the 486 w/ osf/1, that's the only info I could get from the core file.
I also got the same FATAL message last night.

[8/23/94 public]
Hmm, if you had 36mb of swap available after it had crashed and the tests
were no longer running, that means that you had less than 12mb of swap available
for any tests and other processes running on that node while secd was up.
While 24mb sounds *big* for secd and may be related to another CR or two open
against security memory leaks, 36mb sounds like too little swap for a server
machine (I believe HP recommends 100MB of swap on server machines, just to be
safe).  If you can run this with more swap space available and it works, then
this is a non-problem and the abnormally large size of secd will be addressed
in the other (memory leak) CRs.

[8/23/94 public]
The pgstat was a bit misleading.  There's actually 147Mb, since the page size
is 4K:
edgar / K# pgstat -k 
Paging Statistics (page size of 4096 bytes):
Paging File  Pri,clsize Used  Total %    Calls:In    Calls:Out Unav.,Init,Write
Global Info:   -,-        -      -      198005:30413   7302:18107 224364, 0, 0
/dev/sd0b      4,4     20416K 147456K 13%  11503:11503  17791:17791  32184, -, -

[8/25/94 public]
I reconfigured my cell yesterday to use a different machine (still osf/1) as
sec and cds server.  Running bl-16 and using dced's secval vs. sec_clientd.  
Started 3 sec systests (dcesestr, dcesepol, dceseacl) on each of 3 nodes in 
cell.  After about 10 hours I got the same secd crash with the same FATAL 
message.  Tet journals show various activities taking place where errors 
occurred: 
1) acl_edit to remove "f" permission from sec/group/seaclcliyosemite0group for 
   seaclcliyosemite1
2) Attempting to add account for person sestriledgaryosemite0p
3) Attempting to delete objects from database

[8/29/94 public]
Just fyi, I reconfigured my cell to make the sec/cds master on the HP.
The tests ran successfully for 15hrs in that config. Still bl-16.

[8/29/94 public]
I am trying to narrow down what to look at:

    So the only trace back information is that kill() was called? 

    Any serviceablity messages? 

    Also these tests worked previous to 8/21/94?

[8/31/94 public]
  I think the only real info is:
  Program terminated with signal 6, IOT/Abort trap.
  #0  0xa403fea4 in tgs_key ()

  I don't have the svc logs anymore, or the cores, but from what I remember 
  they were normal 2 hr checkpoints and then the FATAL message mentioned
  above, coinciding with the crash.

  It looks like a run I did on August 17th, with bl-14.3, also had a 
  secd crash after ~8hrs.

Can I do something else to get some more info?  Would it help if you
had the core file?

[9/1/94 public]
I ran in to this, again on the 486.

Single machine cell, configured from the 8/30-31 nightly (after rebuild).
I was running the rtandidl auth rpc tests, after running all the other
rtandidl tests.  I passed all the tests using tcp, but while repeating
them using udp, secd core dumped.

The rtandidl auth tests place much stress on security.

The secd.log file contains:
root@surf# cat secd.log
unable to allocate memory.

The core file:
root@surf# ls -l core
-rw-r--r--   1 root     bin             24169860 Aug 31 20:19 core
root@surf# ls -s core
47264 core
root@surf# du -sk core
23632   core

The back trace is not helpfull:
(gdb) b main
Breakpoint 1 at 0x40015a
(gdb) r 
Starting program: /usr/bin/secd 
Breakpoint 1, 0x40015a in main ()
(gdb) kill
Kill the inferior process? (y or n) In Local core dump file,
#0  0xa403fea4 in kill ()
(gdb) where
#0  0xa403fea4 in kill ()
Cannot access memory at address 0xc606fd40.

I have the core file saved as instructed by Mike Burati.

[9/1/94 public]
Text from Mike Burati, (could you run the following on the core file 
and add the results to this report)?

  Here's the info requested on browsing a huge core file...
  Since a core file with a correctly running process will be fairly small,
  you can assume that by browsing everything over 10MB in a huge core file
  should allow you to catch any repetitive memory usage that should have been
  free'd (assuming it's recognizable eg ascii...).

  For example, if you do the commands listed below, starting at 10Mb (skip
  1000 blocks) and then look at 20Mb (skip 2000), 30Mb, 40Mb and 50Mb, and
  see the same thing (ie: Schema entry) repeated over and over again at each
  of those places in the core file, then you can bet that someone was allocating
  a schema entry and not freeing it when it was done.  If it's something that
  only occurs once or twice in a core file that big, then it's probably not
  the problem you're looking for.
  
  Dump input file = core, blocksize = 100, skip first 1000 blocks, pipe it to
  od with -c conversion (to character)...
  
  dd if=core bs=100 skip=1000 | od -c | more
  (or you can od it with a hex option if you are good at recognizing patterns
  in hex :-)  (or, since strings is easier to read than od -c)

  dd if=core bs=100 skip=1000 | strings | more

Thanks Michael.

[9/1/94 public]
It strikes me as kind of odd that secd would die with a malloc error (ie:
malloc returned NULL) on the 486 at about 24MB every time, even with different
people running different tests and thus presumably having differing amounts
of swap space left, especially when secd goes up over 100MB (becuase of mem
leaks) on the other platforms before you see this problem.  Is there some
kind of per process memory limit of 24MB in your OSF/1 configuration?

[9/1/94 public]
You really need an OSF/1 machine....

root@surf# limit
cputime         unlimited
filesize        unlimited
datasize        16384 kbytes
stacksize       2048 kbytes
coredumpsize    unlimited
memoryuse       unlimited
descriptors     1024 files
addressspace    unlimited

I don't see much that would cause a 24 Meg limit, although the datasize
of 16Meg is a little small (you usually have to bump stack and data
up to build a libdce with any debugging).

Just a note: I placed the core file in the afs cell for you
guys to look at it.  The dd/od commands generates megabytes of info.

[9/1/94 public]
The limits on one machine where I had the crash are the same as Tom's;
the other one had 'datasize unlimited' and 'descriptors 256';

[9/1/94 public]
Well, I don't understand the crash on the datasize unlimited machine
(actually, they are not crashes; secd calls malloc, it returns NULL and
secd purposely forces a crash so that you'll have a core file to figure
out what was happening when it ran out of memory), but a datasize limit
of 16MB will definitely cause this problem with secd until we get rid of
the memory leaks.

We just found one set of leaks in error cases in process_as_req() in
do_as_req.c (not calling cleanup() macro in all error conditions) and 
actually a place where it free()s the same memory twice (for both cname and
sname) at the bottom of that routine (once in cleanup() once via direct
calls to free()).  Sean Mullan will submit a fixed do_as_req.c tomorrow.
(this is only a small leak and should only happen on errors, so we'll have
to leave the CR open til we find the real leaks).

[9/2/94 public]

I cleaned up the memory leaks and duplicate frees in process_as_req() but
haven't built on 486 yet. Will submit a request on Tuesday hopefully.

[9/7/94 public]
This is another memory leak bug, so we're dup'ing it to that.  That
bug will be raised in priority.



CR Number                     : 11808
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd dumps when starting dce
Reported Date                 : 8/22/94
Found in Baseline             : 1.1b14
Found Date                    : 8/22/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11700
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/22/94 public]
secd dumps core when starting dce.  Seemed OK when doing a dce_config, tho.
This is the setup:
	last night's build (Sunday)
	486
	single-machine cell
	config'ed just sec & cds
Procedure:
	install and config with last night's bld
	shut down dce
	/etc/rc.dce
	ls -l /opt/dcelocal/var/security/core

Looks like uninitialized svc handle. Stack trace:
(gdb) whe
#0  0xa429dc87 in dce_svc__debug (0, 4, 1, 4906482)
#1  0x4adf31 in dce_aud_start_with_pac (event=275, pac=0x709c50, address=0x0, 
    options=0, outcome=4294967295, ard=0x69fd44, status=0x69fd2c)
    at /project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c:316
#2  0x4ae178 in dce_aud_start_with_name (event=275, 
    client=0x559d10 "/.../padded/hosts/acme/self", address=0x0, options=0, 
    outcome=0, ard=0x69fd44, status=0x69fd2c)
    at /project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c:378
#3  0x4adafc in dce_aud_start (event=275, binding=0x7014a8, options=0, 
    outcome=0, ard=0x69fd44, stp=0x69fd2c)
    at /project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c:181

[08/22/94 public]
Yeah it does look like that.  This is why creating a global variable
via DCE_SVC_DEFINE_HANDLE is often more useful then calling
dce_svc_register in an init routine.



CR Number                     : 11805
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : dtsd core dump with sec routines
on stack
Reported Date                 : 8/22/94
Found in Baseline             : 1.1b15
Found Date                    : 8/22/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11798
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/22/94 public]

dtsd core dumped over the weekend, after running for about 36 hours.
There were system tests running overnight, but none were active at
the time of the core.

Build: 1.1b15 (NB 0818)

Cell:
HPUX: cdsd, secd, dtsd
OSF1: client, dtsd	(machine where core dump occurred)
OSF1: client, dtsd, ntp provider

gdb trace:

#0  0xa4324320 in priv_krb_util_gen_v1_1_ccache_authdata
    (-1540065060, -1541937140, 6276872, 1, 0, 4423392, 6277192)
#1  0xa431e992 in sec_priv_get_eptgt_internal
    (4915520, 7362568, 1, 2, 1, 0, 6277192)
#2  0xa431eb0e in sec_priv_get_eptgt (4915520, 7362568, 1, 2, 0, 6277192)
#3  0xa435c9de in sec_login_util_get_krb_ptgt (4915520, 7362568, 1, 2, 6277192)
#4  0xa4342300 in sec_krb_get_cred (4915520, 4911024, 5, 2, 5256132, 6277260)
#5  0xa423b890 in rpc__krb_get_tkt (5256048)
#6  0xa424053c in rpc__krb_cn_cred_refresh (5256048, 6278384)
#7  0xa41ef9ec in rpc__cn_call_start (7402216, 0, 4382872, 1, 6278480, 6278384)
#8  0xa41d413c in rpc_call_start ()

[8/29/94 public]
This traceback looks the same at the lower 4 levels as 11798 (which was
sec_clientd, not dtsd), which also died after 36 hours in the same tests.
I've dup'd this to 11798.



CR Number                     : 11625
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : ./security/krb5/lib/crc-32/crc-test
Short Description             : ./security/krb5/lib/crc-32/crc-test is empty
Reported Date                 : 8/9/94
Found in Baseline             : 1.1
Found Date                    : 8/9/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10840
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/9/94 public]

Any reason why ./security/krb5/lib/crc-32/crc-test is empty ? 

I am running copyright scanning on this file and am wondering 
whether OSF copyright information should be in it as the ODE
comment leader is set to '# ' indicating that there will be
comments in this file.  

This is needed for BETA1.  Please respond ASAP.

thanks
annie

[8/9/94 public]
This is an exact duplicate of OT CR 10840 that you also opened, so I'm making
this a dup of that CR.  No, the file isn't necessary, but this is one of the
least important things that we have to do in the next couple of weeks so don't
expect to see anything happen too fast unless RobB or Max does it for us.



CR Number                     : 11599
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd SVC message about CDS not available during startup should not be error level since it is expected.
Reported Date                 : 8/8/94
Found in Baseline             : 1.1b14
Found Date                    : 8/8/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11608
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/8/94 public]

During config, secd prints a SVC error level message indicating that 
the name service is not available.  This is guaranteed to come out
at least once do to startup ordering.  This output should be removed
or the SVC level should be changed from error to something else.  
The msg is output in ./security/server/rs/rn_ns.c at line 1197.



CR Number                     : 11553
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd should assume ok if pwd_val_type schema does not exist
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10823
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : rs_pwd_mgmt.c
Sensitivity                   : public

[8/3/94 public]

If secd looks up the well known ERA pwd_val_type and the schema
entry does not exist, it should accept this error as ok and assume
the user does not have a password management policy.

[08/19/94 public]

Duplicate of OT 10823.



CR Number                     : 11550
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11419
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd, seal
Short Description             : Something in the state of
security, rpc, or cds prevents dtsd from contacting other dtsd servers in the cell.
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11419
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1b15
Affected File(s)              : lots in Greg's 8/18 submission
Sensitivity                   : public

[8/3/94 public]

One of the DCE components (cds, sec, or rcp) persintently gets 
into a state which prevents a DTS server or clerk to contact 
successfully other DTS servers in the cell. This problem is
intermittent. (The cause of this problem could helps us understand
other problems we are seeing with DCE while running tests).

Here is an example cell configuration where the problem has been
occurring, and for which I can make logs available for examination.

Build: BL-13
Cell configuration:

(soldier)  RIOS:  secd, dtsd
(west)     HPUX:  cdsd, dtsd
(dce3)     OSF1:  client, secd replica, dtsd, ntp-provider
(barbados) OSF1:  client
(trinidad) OSF1:  client

The following error is printed when in fact all the dtsd servers 
are running.

1994-08-03-02:09:01.011-04:00I0.732 dtsd WARNING dts config 
logevent_v_ultrix.c 259 0x200ab8f8
Too few servers (2), need 3 servers

At the time the errors saved in the log occurred, I was running 
the RPC system tests.

The log is called dtsderr.aug3 and I will keep in my home directory.
(~dassarma)

[8/4/94 public]

Some further insight: when running a two machine cell with 2 local
servers on 8/3/94,  I've seen the following errors: 

On my HP machine (server: running secd, cdsd, dtsd local server)
Note: also running rpcd instead of dced.

DCE error Error requesting time from server :: unknown reject (dce / rpc)
1994-08-03-21:06:08.420-04:00I----- dtsd WARNING dts config logevent_v_ultrix.c 265 0x7aff8448
Too few servers (1), need 2 servers
1994-08-03-21:07:15.549-04:00I----- dtsd ERROR dts events logevent_v_ultrix.c 397 0x40029820
DCE error Error requesting time from server :: connection closed (dce / rpc)
1994-08-03-21:08:33.441-04:00I----- dtsd ERROR dts events logevent_v_ultrix.c 397 0x40029820
DCE error Error requesting time from server :: unknown reject (dce / rpc)
1994-08-03-21:08:38.231-04:00I----- dtsd WARNING dts config logevent_v_ultrix.c 265 0x7aff8448
Too few servers (1), need 2 servers

1994-08-04-06:57:01.469-04:00I----- dtsd ERROR dts events logevent_v_ultrix.c 397 0x40029820
DCE error Error requesting time from server :: unknown reject (dce / rpc)

And on the 2nd machine (OSF1, running only clerk software and dtsd
local server)(and rpcd)

mismatched seal 0
1994-08-03-21:05:55.615-04:00I----- dtsd ERROR rpc auth cnsassm.c 4017 0x005d0c50
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status = 1712217d

mismatched seal 0
1994-08-03-21:08:33.187-04:00I----- dtsd ERROR rpc auth cnsassm.c 4017 0x005d00d0
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status = 1712217d

mismatched seal 0
1994-08-04-06:57:00.944-04:00I----- dtsd ERROR rpc auth cnsassm.c 4017 0x006457e0
RPC_CN_AUTH_VFY_CLIENT_REQ on server failed, status = 1712217d

The translation for 1712217d is as follows:

Tech = 1 = 01 = 0x1 = dce
Comp = 28962 = 070442 = 0x7122 = sec
Mesg = 381 = 0575 = 0x17d = integrity error: EPAC seal mismatch.

So. looks like a security causing the RPC call to fail. 
Tom, Rob?

[8/4/94 public]
Looks like a dup of 11419 -  mismatched seal 0
"When security doesn't work, dts has problems."

[8/4/94 public]
Can't argue with that.  I won't make it a dup yet but will assign
to SEC and let 11419 engineer (sommerfeld) determine dup-ness.

[8/11/94 public]
Assigned this to Bill so he can evaluate whether or not this is a dup of 11419.



CR Number                     : 11529
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : kinit dumps core
Reported Date                 : 8/2/94
Found in Baseline             : 1.1b13
Found Date                    : 8/2/94
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11227
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/2/94 public]

I login as root on an hp node which is acting as core server
for a cell and dce_login to cell_admin. Then I issue kinit and
get "Memory fault(coredump)". The backtrace in xdb simply shows
the following:

root@dce2> xdb -l /opt/dcelocal/lib/libdce.sl /usr/bin/kinit core

Core file saved as "core21892"
Core file from:  kinit
Child died due to: segmentation violation
Procedures:      0
Files: 0
>t
 0 strcpy@libc + 0x00000008 (hp-ux export stub)
 1 main + 0x00000790 (0x1, 0x7b03322c, 0, 0)
>

[8/2/94 public]
Dupe of bug to be fixed any day now.  Rick, I've got a fixed version
in a sandbox which you can have if it is gating you.



CR Number                     : 11365
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd core dumping soon after
cell config. (< 1 hour)
Reported Date                 : 7/20/94
Found in Baseline             : 1.1
Found Date                    : 7/20/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 11363
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/20/94 public]

secd core dump on HP after cell has been config'ed and up about 1/2
hour.  I am told that was no explicit user activity on the cell at the 
time of the crash.  The following stack was recovered from xdb:

 0 free@libc + 0x00000008 (hp-ux export stub)
 1 cma__free_mutex_nolock@libdce + 0x000000a8 (0x40053e50, 0, 0, 0)
 2 cma__free_mutex@libdce + 0x00000134 (0x73394bf0, 0x3, 0x4006f7a0, 0x1)
 3 krb5_free_principal@libdce + 0x00000040 (0x40394a30, 0x2, 0, 0)
 4 sec_krb_parsed_name_free@libdc + 0x00000044 (0x40400f08, 0x4006f724, 0,
0)
 5 rpc__krb_free_info@libdce + 0x000001a4 (0x4006f698, 0x1, 0, 0)
 6 rpc__auth_info_release@libdce + 0x00000268 (0x404022f8, 0, 0, 0)
 7 rpc__krb_free_key@libdce + 0x0000003c (0x4006f5e0, 0x3, 0x400badf0, 0)
 8 rpc__key_info_release@libdce + 0x00000210 (0x403facf8, 0xbb8,
0x4006f4e4, 0)
 9 rpc__dg_sct_timer@libdce + 0x000001f8 (0, 0x7aff05a0, 0x4006f4e4, 0x32)
10 rpc__timer_callout@libdce + 0x000000c0 (0x7aff3cb0, 0x7aff05a0,
0x4006f49c, 0)
11 timer_loop@libdce + 0x0000007c (0x4006f0e0, 0x7af5a068, 0x400404f0, 0x3)
12 cma__thread_base@libdce + 0x0000021c (0x400404f0, 0, 0, 0)
13 cma__thread_start1@libdce + 0x0000004c (0x400404f0, 0, 0, 0)
14 cma__thread_start0@libdce + 0x00000008 (0x400

Could be a wild chase, but:
Look at the routine sec_authn.c:sec_krb_parsed_name_free(), is the
combination of taking the contents of sec_krb_parsed_name *pname along
with the way krb5_free_principal() uses the krb5_free_data() and xfree()
macros correct?  Probably, but it was a little confusing to me.

NOTE:  OT #11363 may be a dupe but since that secd occurs during
configuration and no useable stack has been recovered, I'll leave them 
seperate for now.

[7/20/94 public]

Adding addt'l info from xdb for above core dump stack:

>lr $a
$arg0     = 0x73394bf0
$arg1     = 0
$arg2     = 0x4039663d
$arg3     = 0
>

>lr $r
$r0       = 0
$r1       = 0x24b5
$r2       = 0x800b27c3
$r3       = 0x7b0127b0
$r4       = 0x73394bf0
$r5       = 0x73394bec
$r6       = 0
$r7       = 0
$r8       = 0
$r9       = 0
$r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      = 0x7b007948
$r20      = 0x177dc000
$r21      = 0x800b27b8
$r22      = 0x7afeef98
$r23      = 0
$r24      = 0x4039663d
$r25      = 0
$r26      = 0x73394bf0
$r27      = 0x4002c7c0
$r28      = 0x177db009
$r29      = 0x4039663d
$r30      = 0x4006f8e0
$r31      = 0x813773cf
$ret0     = 0x177db009
$ret1     = 0x4039663d

>p *($pc-16)\20i
0x800b27b0  BV  0(2)
0x800b27b4  LDWM        -192(0,30),3
0x800b27b8  BL  _fp_status+0018,2
0x800b27bc  OR  0,0,0
0x800b27c0  LDW -24(0,30),2
0x800b27c4  LDSID       (0,2),1
0x800b27c8  MTSP        1,0
0x800b27cc  BE,N        0(0,2)
0x800b27d0  STW 2,-20(0,30)
0x800b27d4  STWM        3,192(0,30)
0x800b27d8  STW 4,-188(0,30)
0x800b27dc  STW 5,-184(0,30)
0x800b27e0  STW 6,-180(0,30)
0x800b27e4  STW 7,-176(0,30)
0x800b27e8  STW 8,-172(0,30)
0x800b27ec  STW 9,-168(0,30)
0x800b27f0  OR  26,0,4
0x800b27f4  STW 19,-32(0,30)
0x800b27f8  COMIBT,=    0,26,_fp_status+026c
0x800b27fc  OR  0,0,6

[7/21/94 public]
Maryann Hondo and Rob Baum are looking into this and think they have
a handle on what's going on.

[7/27/94 public]
Are you still seeing this problem?  Please let us know.

[7/27/94 public]
This particular problem has only been seen once.  Maybe caused by 
free() related problems that were fixed for OT 11363?  Could anything
be gleaned from the XDB info above?

[7/27/94 public]

I just checked and Maryann Hondo feels that this is a dup of 11363.  Rob,
if you agree, then please "do the honors" and close this one.  HP won't
do anything more unless it's seen again or more info turns up.

[7/27/94 public]

Made a dupe of OT 11363, with honors.



CR Number                     : 11334
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : dcesergy causes secd core dump after 6-8 hours
Reported Date                 : 7/15/94
Found in Baseline             : 1.1
Found Date                    : 7/15/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 11108
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/15/94 public]

Running the dcesergy system test for six to eight hours causes secd to
core dump. The system test performs a number of sec_logins, and adds/deletes
accounts on multiple clients.

core info

registers:

r0  00000000 000024b5 800a6633 00000002 r4  7af5a666 401c91b4 7b010ecc 7b010ed0
r8  400011f4 0000007f 00000000 401c9080 r12 00000002 00000000 00000000 00000002
r16 7af4aaac 00000029 00000000 7b007948 r20 7b00d160 800b94b8 00000000 7b010ea8
r24 00000002 7af4aaac 401c907e 4002bdb8 r28 00000000 00000001 401c9060 800a667b
    pc = 000024b5.800a6630     priv = 3     psw = jthLnxBCvmrQPDI     sar = 24

trace:

 0 kill@libc + 0x00000008 (hp-ux export stub)
 1 cma__abort_process@libdce + 0x000000a4 (0x6, 0, 0, 0x6c6f636b)
 2 cma__bugcheck@libdce + 0x00000488 (0x7af44d6c, 0x7af53c30, 0x4df, 0x7af53c4c)
 3 cma__assert_message@libdce + 0x00000134 (0x1, 0x7af53c30, 0x7af53c4c, 0x4df)
 4 cma__int_mutex_block@libdce + 0x000013e0 (0x4003d160, 0x3, 0xad5669c5, 0xee4541c5)
 5 ptdexc_mutex_lock@libdce + 0x000000dc (0x7affc958, 0x18, 0x8, 0x400f0e68)
 6 rpc__cn_call_start@libdce + 0x000001c4 (0x400cc9e8, 0x2, 0x7af8f810, 0)
 7 rpc_call_start@libdce + 0x0000025c (0x400cc9e8, 0x2, 0x7af8f810, 0)
 8 op0_csr@libdce + 0x000001bc (0x400cc9e8, 0x21a, 0x40d41d98, 0x1000)
 9 sec_krb5rpc_sendto_kdc@libdce + 0x000002ac (0x40ac3650, 0x21a, 0x40d41d98, 0x1000)
10 krb5_sendto_kdc@libdce + 0x000000bc (0x40bcdd50, 0x40ac3650, 0x401c8048, 0x54)
11 krb5_send_tgs@libdce + 0x00001050 (0, 0x40c5bde4, 0x401c0001, 0x401c0002)
12 krb5_get_cred_via_tgt@libdce + 0x000001b0 (0x401c7f30, 0, 0x401c0001, 0x401c0002)
13 krb5_get_cred_from_kdc@libdce + 0x0000097c (0x401c0f40, 0x40c5bdd0, 0x401c7ea0, 0x40c5bdd0)
14 krb5_get_credentials@libdce + 0x00000178 (0, 0x401c0f40, 0x40c5bdd0, 0x401c7824)
15 sec_priv_get_eptgt@libdce + 0x000008c4 (0x402f1048, 0x402f1048, 0x1, 0x2)
16 sec_login_util_get_krb_ptgt@li + 0x0000013c (0x402f1048, 0x402f1048, 0x1, 0x2)
17 sec_login_pvt_get_ecreds@libdc + 0x000000a4 (0x402f1048, 0x401c7840, 0x401c7824, 0)
18 sec_login_util_get_delegation_ + 0x00000104 (0x402f1048, 0x401c7840, 0x401c7824, 0)
19 sec_krb_build_message_common@l + 0x00000128 (0x402f1048, 0x40a15a68, 0x401c7370, 0x2)
20 sec_krb_cn_build_message@libdc + 0x00000114 (0x402f1048, 0x40a15a68, 0x5, 0x2)
21 rpc__krb_cn_fmt_client_req@lib + 0x00000324 (0x4035fde8, 0x402f2150, 0x40d99480, 0x401c720c)
22 send_pdu@libdce + 0x00000d70 (0x4035fd08, 0xb, 0x40c898b0, 0)
23 init_assoc_action_rtn@libdce + 0x00000574 (0x4035fd08, 0x401c704c, 0, 0x5)
24 rpc__cn_sm_eval_event@libdce + 0x0000016c (0, 0x401c704c, 0x4035fd08, 0x4035fd10)
25 rpc__cn_assoc_open@libdce + 0x000005ec (0x4035fd08, 0x402f4470, 0x7af96690, 0)
26 rpc__cn_assoc_request@libdce + 0x00000ab0 (0x401c0068, 0x402f6f10, 0x7af96690, 0x401c0264)
27 allocate_assoc_action_rtn@libd + 0x00000150 (0x401c0068, 0x7af96690, 0x7, 0x401c46e0)
28 rpc__cn_sm_eval_event@libdce + 0x0000016c (0x8, 0x7af96690, 0x401c0068, 0x401c009c)
29 rpc__cn_call_start@libdce + 0x00000f38 (0x402f6f10, 0, 0x7af96690, 0x3)
30 rpc_call_start@libdce + 0x0000025c (0x402f6f10, 0, 0x7af96690, 0x3)
31 op3_csr@libdce + 0x000001d4 (0x402f6f10, 0, 0x40c351c0, 0x1e)
32 sec__id_parse_name@libdce + 0x00000a14 (0x402f69c0, 0, 0x40c351c0, 0x401c5470)
33 sec_id_parse_name@libdce + 0x00000068 (0x402f69c0, 0x40c351c0, 0x401c5470, 0x401c5884)
34 dce_aud_start_with_name (event = 275, client = 0x40c351c0, address =   00000000, options = 0, outcome = 4294967295, ard = 0x401c47b4, status = 0x401c47d0)    [/project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c: 342]
35 dce_aud_start (event = 275, binding = 0x40c89250, options = 0, outcome = 4294967295, ard = 0x401c47b4, stp = 0x401c47d0)    [/project/dce/build/dce1.1-snap/src/security/audit/libaudit/evt_write.c: 164]
36 rs_login_get_info + 0x0000006c (0x40c89250, 0x401c2910, 0x401c3514, 0x401c3530)
37 op0_ssr + 0x00000264 (0x40c89250, 0x40ced990, 0x401c253c, 0x401c2520)
38 rpc__dg_execute_call@libdce + 0x00001ba4 (0x40ced990, 0, 0, 0)
39 cthread_call_executor@libdce + 0x000002d4 (0x4015ae18, 0x7af590b8, 0x40044ad0, 0xb)
40 cma__thread_base@libdce + 0x0000021c (0x40044ad0, 0, 0, 0)
41 cma__thread_start1@libdce + 0x0000004c (0x40044ad0, 0, 0, 0)
42 cma__thread_start0@libdce + 0x00000008 (0x40044ad0, 0, 0, 0)
43 cma__thread_start0@libdce + 0x00000008 (0x40044ad0, 0, 0, 0)
.
.
.
99 (same)

[7/15/94 public]

The dcesergy test was recently modified to be client/server rather than 
running on a single node.  The command line to invoke the test is:

run.sec -t 15 -m "mach1 mach2 mach3" dcesergy

[7/15/94 public]
Yikes...  I've added dce-ot-rpc to the cc list, since this is an assertion
coming out of the RPC runtime...  Note that if you can trust the traceback
above, it's a server manager routine (below op0_ssr), that's making an outgoing
call (op3_csr), that makes another outgoing call (op0_csr) before op3_csr
even does it's call transceive, but after it did it's call start (I think
that's what the above says...).

[7/15/94 public]
Well, it RPC who is dumping core, but I blame security :-)

When constructing the krb_message for the CN BIND request,
rpc__krb_cn_fmt_client_req causes another RPC to be attempted.
It looks like its going to get somw deligation info.  This is bad
and we need to prevent this from happening, in rpc__cn_call_start
we try to go out and refresh our creds if needed just so this wont
happen.  Someone in the security space needs to tell me what
CN needs to do to prevent this second RPC.

See OT 11108 for even more info.

Bug dup'd to 11108.



CR Number                     : 11325
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : svr_example
Short Description             : move client/admin/acl_edit/svr_example code
Reported Date                 : 7/15/94
Found in Baseline             : 1.1
Found Date                    : 7/15/94
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11381
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/client/admin/acl_edit/svr_example/*
Sensitivity                   : public

[7/15/94 public]
The sample ACL manager in the svr_example directory wil not be shipped
with 1.1.  Apparently this code is needed by some security functional tests.
If so, then the code should be moved over to the appropriate directory
and taken out of the mainline source tree.

[7/15/94 public]
Yup, this is test code only and never should have been in the core tree in
the first place (it was put there many years ago before a test tree even
existed).  Bruce has offered to do this already for us, so I've reassigned
this to him and he can dup it if he already has a CR open for it.

[7/15/94 public]

Yes, Mike Burati and I agreed I would move 
src/security/client/admin/acl_edit/svr_example to
src/test/security/acl_edit/svr_example
And Yes, CR 11379 is already open on it.



CR Number                     : 11241
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_acl API
Short Description             : Incorrect length in
sec_acl_bind () malloc
Reported Date                 : 7/11/94
Found in Baseline             : 1.0.3, 1.1
Found Date                    : 7/11/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 8266
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : daclbind.c
Sensitivity                   : public

[7/11/94 public]

sec_acl_bind() in src/security/client/acl has a minor bug where
component_name is initially malloc'd.  The length passed to malloc is
computed as the sum of two string lengths, plus 1 byte for the "/".
This length is off by one.  An additional byte should be added for the 
null character that gets placed in the final strcat that fills in this string.

[7/11/94 public]
Duplicate of CR8266.



CR Number                     : 11188
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_login API
Short Description             : superfluous ctx cache assertions
Reported Date                 : 7/6/94
Found in Baseline             : 1.0.3
Found Date                    : 7/6/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 9493
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : sec_login_cache.c sec_login_pvt.c others?
Sensitivity                   : public

[7/6/94 public]
  sec_login_pvt.c has several instances of routines that handle error
returns by going to a label "out" or "errout"... there are at least two
instances here of login contexts being entered into the login cache
explicitly just before returning, above the "errout" error exit code.
See routine sec_login_pvt_setup_refresh_context() for the relevant
case.
  The problem is that, when /opt is full, the refresh can fail while the
KRB data is allocated (opening the new ticket file, etc.) and the result
is that the 'rcp' ctx is handed to sec_login_pvt_purge_refresh_context()
without being entered into the cache. A cache assertion failure ensues,
triggered by routine sec_login_pvt_release_context().
  A real-life stack trace is attached:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
=>[1] myassert(expr = 0xef708804 "<bad address>", file = 0xef708818
"<bad addres
  [2] __assert(expr = 0xef708804 "<bad address>", file = 0xef708818
"<bad addres
  [3] cache_sanity_check(present = 0x92078, absent = (nil)), line 166 in
"sec_lo
  [4] sec_login_pvt_release_context(lcp = 0x92078), line 301 in
"sec_login_cache
  [5] sec_login_pvt_purge_refresh_context(lcp = 0x92078, stp =
0xef38d524), line
  [6] sec_login_pvt_setup_refresh_context(lcp = 0x758c0, stp =
0xef38dd50), line
  [7] sec_login_validate_identity(login_context = 0x758c0, passwd =
0x91be0, res= 0xef38dd50), line 461 in "sec_login.c"
  [8] sec_login_valid_from_keytable(login_context = 0x758c0,
authn_service = 1,  reset_passwd = 0xef38dd5c, auth_src = 0xef38dd4c, st
= 0xef38dd50), line 1004 i
  [9] sec_login_validate_first(init_context = 0x758c0, reset_passwd =
0xef38dd5c82 in "sec_login.c"
  [10] machine_context(arg = (nil)), line 477 in "sec_clientd.c"
  [11] myStartRoutine(tcb = 0x72260), line 851 in "pthread.c"
  [12] _thread_start(0x72260, 0x0, 0x0, 0x0, 0x0, 0x0), at 0xef39d678
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  I'll be looking from here at how to clean up without triggering this
assertion failure. I'm afraid the obvious solution is the los ethe
assertion check, as sec_login_pvt_release_context() can evidfently be
called with unached contexts, and so the assertion is
superfluous/erroneous.

[7/11/94 public]

I believe the original intent was that sec_login_pvt_release_context() 
*not* be called with uncached contexts.  The fix is to cache the 
context regardless of whether or not an error occurred, or dispose
of it locally with custom code and not call on the generic purge
code at all.  I believe you are free to compile out the assertion
checks if you don't want them in your production DCE code.

[8/12/94 public]
Greg and I already figured this one out once and I believe he had a trial
fix.  I've reassigned this to myself so someone else doesn't have to figure
it out all over again.



CR Number                     : 11165
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : priv, rca
Short Description             : can't configure 1.1 client of 1.0.3 cell server
Reported Date                 : 7/1/94
Found in Baseline             : 1.1
Found Date                    : 7/1/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 10607
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/client/rca/rpriv.acf,
	security/client/rca/priv.c, security/client/rca/internal_binding.c
Sensitivity                   : public

[7/1/94 public]

In order to test interoperability between 1.0.3 and 1.1 RPC (and finish the
CN RPC integration with the 1.1 authorization model), I attempted to
configure a 1.1 client of a 1.0.3 cell.  This didn't work.  There were two
problems:
 - the new rpriv operations and interface blew up the 1.1 client (rgy_edit)
with an unhandled exception
 - the 1.1 client didn't properly fall back to the old rpriv operations
when it had to bind using the pe_site file.

The priv.c fallback code will be rewritten "eventually", but the above fix
is a stopgap to hold us until this works for real.

The fix will be coming soon to a source tree near you...

[7/5/96 public]

How are the fixes to this problem related to the fixes for OT# 10607?



CR Number                     : 11001
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : Intercell.
Short Description             : Authenticated intercell
doesn't work.
Reported Date                 : 6/17/94
Found in Baseline             : 1.1
Found Date                    : 6/17/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11623
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/17/94 public]
Created a new CR from CR 10932 which included intercell bug info.

[6/13/94 public]
I'm attempting to verify authenticated intercell operation against the
nightly from 6/13. After updating the bind database I can do show dirs
accross the intercell boundary unauthenticated. I then run the rgy_edit cell
command to exchange tickets and am able to show dir authenticated. However
when I do a dce_login from one cell to another and create a directory in
the cell I have logged into it failes with registery server unavailable.
The following is from a rios to a 486 but I'm got the same thig from an
hp to a 486 and from a 486 to the rios.

# cdscp create dir /.../john.qadce.osf.org/foo
1994-06-13-17:00:42.274-04:00I----- cdsclerk(8096) ERROR cds clerk 0x2025c5d8
Routine rpc_binding_set_auth_info(3rpc) failed : Registry server unavailable (dce / sec)
1994-06-13-17:00:42.313-04:00I----- cdsclerk(8096) WARNING cds clerk 0x2025c5d8
Communication has failed to /.../john.qadce.osf.org/balder_ch. Status = 387063931.
# 1994-06-13-17:01:12.062-04:00I----- cdsclerk(8096) ERROR cds clerk 0x2025c5d8
Routine rpc_binding_set_auth_info(3rpc) failed : Registry server unavailable (dce / sec)
1994-06-13-17:01:12.100-04:00I----- cdsclerk(8096) WARNING cds clerk 0x2025c5d8
Communication has failed to /.../jd.qadce.osf.org/wolfboy_ch. Status = 387063931


klist behaves very strangely. It takes a long time to put out the erroneous
information up to the '+++++++++++++' in the following. It then spits out the 
correct information normally.

DCE Identity Information:
        Warning: Identity information is not certified
        Global Principal: <Unable to generate principal name>
        Cell:      004b0e9c-b9e8-1dfc-87e0-0000c03fd04c <cell name unknown>
        Principal: 00000064-b9e8-2dfc-8700-0000c03fd04c <principal name unknown>
        Group:     0000000c-b9e8-2dfc-8701-0000c03fd04c <group name unknown>
        Local Groups:
                0000000c-b9e8-2dfc-8701-0000c03fd04c <group name unknown>
                00000844-ba0a-2dfc-a301-0000c03fd04c <group name unknown>
                00000845-ba0b-2dfc-a301-0000c03fd04c <group name unknown>
                00000846-ba0b-2dfc-a301-0000c03fd04c <group name unknown>
                00000847-ba0b-2dfc-a301-0000c03fd04c <group name unknown>

Identity Info Expires: 94/06/14:02:40:32
Account Expires:       never
Passwd Expires:        never

'++++++++++++++'

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_34c04e00
Default principal: cell_admin@john.qadce.osf.org
Server: krbtgt/john.qadce.osf.org@john.qadce.osf.org
        valid 94/06/13:16:40:32 to 94/06/14:02:40:32
Server: dce-rgy@john.qadce.osf.org
        valid 94/06/13:16:40:33 to 94/06/14:02:40:32
Server: krbtgt/jd.qadce.osf.org@john.qadce.osf.org
        valid 94/06/13:16:40:34 to 94/06/14:02:40:32
Server: dce-rgy@jd.qadce.osf.org
        valid 94/06/13:16:40:45 to 94/06/14:02:40:32
Server: dce-ptgt@john.qadce.osf.org
        valid 94/06/13:16:52:49 to 94/06/13:18:52:49
Client: dce-ptgt@john.qadce.osf.org     Server: krbtgt/john.qadce.osf.org@john.qadce.osf.org
        valid 94/06/13:16:52:49 to 94/06/13:18:52:49
Client: dce-ptgt@john.qadce.osf.org     Server: krbtgt/jd.qadce.osf.org@john.qadce.osf.org
        valid 94/06/13:16:52:50 to 94/06/13:18:52:49
Client: dce-ptgt@john.qadce.osf.org     Server: dce-ptgt@jd.qadce.osf.org
        valid 94/06/13:16:53:02 to 94/06/13:18:52:49

My secd and sec_clientd are running.

# ps -ef | grep sec
    root  3103     1   0 15:56:47  pts/2  0:10 sec_clientd 
    root  9233     1   0 15:56:22  pts/2  0:43 secd -bootstrap 
    root 13112 13504   1 17:01:02  pts/2  0:00 grep sec

[6/14/94 public]

I got you mail requesting that I turn on DEBUG_SEC=3. I did and here
is the result. Its a bit long....

The two cells are /.../john.qadce.osf.org a 486
              and /.../dugas.qadce.osf.org an hp

The following was run from the 486.

secd and sec_clientd was alive before and after.

These are the commands

klist - no identity
cdscp show dir /.../dugas.qadce.osf.org - worked
dce_login cell_admin -passwd-  - worked
rgy_edit - ran cell /.../dugas.qadce.osf.org - worked
klist - local identity
exit
klist - no identity
dce_login /.../dugas.qadce.osf.org/cell_admin -passwd-  - worked
cdscp create dir /.../dugas.qadce.osf.org/users  - failed
cdscp show dir /.../dugas.qadce.osf.org - failed
klist - Got in mustery state for a while then came out of it and spit out
        context.


Heres the log for the above. All of the actual commands are on lines
that start with a $.



#
# From /.../john.qadce.osf.org
#

#
# Unauthenticated show of /.../digas.qadce.osf.org works
#

$ klist
No DCE identity available: No currently established network identity for which context exists (dce / sec)

Kerberos Ticket Information:
klist: Unknown code DCE:krb 191 (336761023) while setting cache flags (ticket cache /opt/dcelocal/var/security/creds/dcecred_22fb2200)
$ cdscp show dir /.../dugas.qadce.osf.org
Warning: you have no network credentials. All requests will be unauthenticated.

                        SHOW
                   DIRECTORY   /.../dugas.qadce.osf.org
                          AT   1994-06-14-10:30:17
            RPC_ClassVersion = 0100
                     CDS_CTS = 1994-06-14-14:24:42.056242100/08-00-09-25-e3-2c
                     CDS_UTS = 1994-06-14-14:25:04.046289100/08-00-09-25-e3-2c
              CDS_ObjectUUID = 5c7a5ecc-8784-11cd-bd64-08000925e32c
                CDS_Replicas = :
          Clearinghouse UUID = 5af329c6-8784-11cd-bd64-08000925e32c
                       Tower = ncacn_ip_tcp:130.105.5.44[]
                       Tower = ncadg_ip_udp:130.105.5.44[]
                Replica type = master
          Clearinghouse Name = /.../dugas.qadce.osf.org/vanilla_ch
                 CDS_AllUpTo = 0
             CDS_Convergence = medium
                CDS_InCHName = allowed
        CDS_DirectoryVersion = 3.0
            CDS_ReplicaState = on
             CDS_ReplicaType = master
               CDS_LastSkulk = 1994-06-14-14:24:42.056242100/08-00-09-25-e3-2c
              CDS_LastUpdate = 1994-06-14-14:29:45.319150100/08-00-09-25-e3-2c
             CDS_RingPointer = 5af329c6-8784-11cd-bd64-08000925e32c
                   CDS_Epoch = 5c7a597c-8784-11cd-bd64-08000925e32c
          CDS_ReplicaVersion = 3.0

#
# Login into local cell, /.../john.qadce.osf.org, and do cell command to
# other cell, /.../dugas.qadce.osf.org
#
$ dce_login cell_admin -dce-
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell , princ dce-rgy, type 0
(binding_cache_lookup) Cache miss
(rca_site_bind_nsi) Attempting to bind to site /.../john.qadce.osf.org
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../john.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==481448
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_site_bind) Bound to Cell '/.../john.qadce.osf.org'
(rca_site_bind) Bound to Site '/.../john.qadce.osf.org/subsys/dce/sec/master'
(rca_site_bind) String Binding  '000971be-bce5-1dfd-a815-0000c03fd04c@ncadg_ip_udp:130.105.5.12[2547]'
(binding_cache_enter) Adding 481148 to binding cache: site /.../john.qadce.osf.org/subsys/dce/sec/master cell /.../john.qadce.osf.org princ (null) type 0
481148: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell /.../john.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 481148: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 481148
returning cached context 481148
481148: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell /.../john.qadce.osf.org, princ dce-rgy, type 1
(binding_cache_lookup) Looking at 481148: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `(null)' 0
info_type mismatch, dce expected
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 477070
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../john.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==481848
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 477070, handle 481848
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell /.../john.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 481148: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 481148
returning cached context 481148
481148: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 477070
(rca_site_bind) Bound to Cell '/.../john.qadce.osf.org'
(rca_site_bind) Bound to Site '/.../john.qadce.osf.org/subsys/dce/sec/master'
(rca_site_bind) String Binding  '000971be-bce5-1dfd-a815-0000c03fd04c@ncadg_ip_udp:130.105.5.12[]'
Purging binding cache
(binding_cache_enter) Adding 481748 to binding cache: site /.../john.qadce.osf.org/subsys/dce/sec/master cell /.../john.qadce.osf.org princ dce-rgy@john.qadce.osf.org type 1
481748: Dropping site refcount from 2 to 1
Password must be changed!


$ rgy_edit 
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell , princ dce-rgy, type 1
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 52ca28
(rca_site_bind_nsi) Attempting to bind to site /.../john.qadce.osf.org
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../john.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==4ca900
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 52ca28, handle 4ca900
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell , princ dce-rgy, type 0
(binding_cache_lookup) Cache miss
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../john.qadce.osf.org
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_nsi_binding_import) attempting to re-import
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../john.qadce.osf.org
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Got binding 000971be-bce5-1dfd-a815-0000c03fd04c@ncacn_ip_tcp:130.105.5.12[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding 000971be-bce5-1dfd-a815-0000c03fd04c@ncadg_ip_udp:130.105.5.12[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site == /.../john.qadce.osf.org
(rca_site_bind) Bound to Cell '/.../john.qadce.osf.org'
(rca_site_bind) Bound to Site '/.../john.qadce.osf.org'
(rca_site_bind) String Binding  '000971be-bce5-1dfd-a815-0000c03fd04c@ncacn_ip_tcp:130.105.5.12[3607]'
(binding_cache_enter) Adding 4cab00 to binding cache: site /.../john.qadce.osf.org cell /.../john.qadce.osf.org princ (null) type 0
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell /.../john.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cab00
returning cached context 4cab00
4cab00: Dropping site refcount from 3 to 2
4cab00: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell /.../john.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cab00
returning cached context 4cab00
4cab00: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 52ca28
(rca_site_bind) Bound to Cell '/.../john.qadce.osf.org'
(rca_site_bind) Bound to Site '/.../john.qadce.osf.org/subsys/dce/sec/master'
(rca_site_bind) String Binding  '000971be-bce5-1dfd-a815-0000c03fd04c@ncadg_ip_udp:130.105.5.12[2547]'
Purging binding cache
(binding_cache_enter) Adding 4ca600 to binding cache: site /.../john.qadce.osf.org/subsys/dce/sec/master cell /.../john.qadce.osf.org princ dce-rgy@john.qadce.osf.org type 1
Current site is: registry server at /.../john.qadce.osf.org/subsys/dce/sec/master 
rgy_edit=> cell /.../dugas.qadce.osf.org
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell , princ dce-rgy, type 0
(binding_cache_lookup) Looking at 4ca600: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `dce-rgy@john.qadce.osf.org' 1
Site mismatch
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Cache miss
(rca_site_bind_nsi) Attempting to bind to site /.../dugas.qadce.osf.org
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../dugas.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==4caf00
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../dugas.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../dugas.qadce.osf.org/subsys/dce/sec/master
(rca_site_bind) Bound to Cell '/.../dugas.qadce.osf.org'
(rca_site_bind) Bound to Site '/.../dugas.qadce.osf.org/subsys/dce/sec/master'
(rca_site_bind) String Binding  'f9243bcc-8783-11cd-95f2-08000925e32c@ncacn_ip_tcp:130.105.5.44[3197]'
Purging binding cache
(binding_cache_enter) Adding 4cb200 to binding cache: site /.../dugas.qadce.osf.org/subsys/dce/sec/master cell /.../dugas.qadce.osf.org princ (null) type 0
4cb200: Dropping site refcount from 2 to 1
4cb100: Dropping site refcount from 1 to 0
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell , princ dce-rgy, type 0
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Looking at 4ca600: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `dce-rgy@john.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cab00
returning cached context 4cab00
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ dce-rgy, type 0
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
4cab00: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ dce-rgy, type 1
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
info_type mismatch, dce expected
(binding_cache_lookup) Looking at 4ca600: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `dce-rgy@john.qadce.osf.org' 1
Site mismatch
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 55e8e8
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../dugas.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5e5700
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../dugas.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../dugas.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@dugas.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5e5700
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_site_bind) Bound to Cell '/.../dugas.qadce.osf.org'
(rca_site_bind) Bound to Site '/.../dugas.qadce.osf.org/subsys/dce/sec/master'
(rca_site_bind) String Binding  'f9243bcc-8783-11cd-95f2-08000925e32c@ncadg_ip_udp:130.105.5.44[]'
Purging binding cache
(binding_cache_enter) Adding 4cb100 to binding cache: site /.../dugas.qadce.osf.org/subsys/dce/sec/master cell /.../dugas.qadce.osf.org princ dce-rgy@dugas.qadce.osf.org type 1
4cb100: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell , princ dce-rgy, type 1
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
Site mismatch
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Looking at 4ca600: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `dce-rgy@john.qadce.osf.org' 1
authz_svc mismatch
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
info_type mismatch, dce expected
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 55e8e8
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../john.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5e5b00
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5e5b00
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5e5a00
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5e5a00
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5e6200
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5e6200
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5e6100
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5e6100
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_nsi_binding_import) attempting to re-import
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../john.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5f8758
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5f8758
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5f8858
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5f8858
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5f8c58
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5f8c58
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5f8b58
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../john.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5f8b58
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Got binding 000971be-bce5-1dfd-a815-0000c03fd04c@ncacn_ip_tcp:130.105.5.12[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding 000971be-bce5-1dfd-a815-0000c03fd04c@ncadg_ip_udp:130.105.5.12[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site == /.../john.qadce.osf.org
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5f8f58
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_rebind) Took alt_handle 1 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../john.qadce.osf.org, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site == /.../john.qadce.osf.org
(rca_setup_handle) Auth DCE, principal 'dce-rgy@john.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5f9058
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
4cb200: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity 55e8e8
(rca_setup_handle) rpc_binding_set_auth_info returned status 14129007
(rca_rebind) Non-nsi rebind failed
(rca_site_bind_pe_site) assuming /.../john.qadce.osf.org is string binding
5e5c00: Dropping site refcount from 1 to 0
Drop ref to identity 55e8e8 from binding cache
(binding_cache_lookup) Looking for site /.../john.qadce.osf.org, cell , princ dce-rgy, type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
Site mismatch
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Looking at 4ca600: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `dce-rgy@john.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cab00
returning cached context 4cab00
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell , princ dce-rgy, type 1
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
authz_svc mismatch
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
info_type mismatch, dce expected
(binding_cache_lookup) Looking at 4ca600: site `/.../john.qadce.osf.org/subsys/dce/sec/master' cell `/.../john.qadce.osf.org' princ `dce-rgy@john.qadce.osf.org' 1
Site mismatch
(binding_cache_lookup) Looking at 4cab00: site `/.../john.qadce.osf.org' cell `/.../john.qadce.osf.org' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 55e8e8
(rca_site_bind_nsi) Attempting to bind to site /.../dugas.qadce.osf.org
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../dugas.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==5f9458
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../dugas.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with /.../dugas.qadce.osf.org/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@dugas.qadce.osf.org'
(rca_setup_handle) rpc_binding_set_auth_info, identity 55e8e8, handle 5f9458
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell , princ dce-rgy, type 0
(binding_cache_lookup) Looking at 4cb100: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `dce-rgy@dugas.qadce.osf.org' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4cb200: site `/.../dugas.qadce.osf.org/subsys/dce/sec/master' cell `/.../dugas.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4cb200
returning cached context 4cb200
(binding_cache_lookup) Looking for site /.../dugas.qadce.osf.org, cell /.../dugas.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4cb100: site `/[greg 7/12/94 public]

I tried to reproduce this bug using the cdscp define cached server
command to botstrap intercell naming (connecting test cells using DNS 
is an incredibly laborious process here in chelmsford).  I was able to 
reproduce the bug only under the following circumstances.

1) configure cell A
2) configure cell B
3) connect cells A and B using the "cdscp> define cached server" and 
   "rgy_edit=> cell" commands

At this point, intercell was working just fine.

4) reconfigure cell A (but not cell B)
5) repeat step (3)

Now intercell is broken.  

I then spotted the following code snippet in the rgy_edit cell command code.

            /* Add foreign principal to the local cell */
            sec_rgy_pgo_add(context, sec_rgy_domain_person,
                            header.key.pname,
                            &header.item, &st);
            if (STATUS_EQUAL(&st, sec_rgy_name_exists)) {
                CLEAR_STATUS(&st);
            }

In the case of a reconfigured foreign cell, this would result
in a stale uuid for the foreign cell, which in  turn would
cause the local priv server to reject any requests for an intercell
PTGT that originate with the reconfigured foreign cell.  

There's still a bug here, but it is not an A0 bug.  I'm 
changing it to B1.

[7/13/94 public]
Greg asked Rajendra and I to do the above sequence here and we did just
prior to Rajendras leaving for vacation. 

1) configure cell A
2) configure cell B
3) run define cache server
4) run rgy_edit cell command
5) do things fromn one cell to another

We did and the following failed in step 5.

From cell A
dce_login /.../<dns name of cell B>/cell_admin -passwd-
cdscp create dir /.../<dns name of cell B>/foo

Unauthenticated commands - cdscp show dir /.: for example - worked as 
long as you ran them unauthenticated.

When we edited the PE_SITE files authenticated operations worked.

This gives me a work around for testing H-Cells, at least I believe it will.
I haven't gotten to it because of 11119.  Since I have a work around
I agree it is no longer an A0. But we here still believe authenticated
intercell does not work until the PE_SITE file is edited. Bear in mind such
operations don't fail every time but I'd say 9 out of 10 authenticated
dir creates for example will fail. Rajendra and I both saw this just prior
to his leaving for the month.



CR Number                     : 10854
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : security/server/rrs/rrs_prop_replist.c 
					     security/server/rrs/rrs_rep_remote.c
Short Description             : include files rs_repadm.h, rs_replist.h not found
Reported Date                 : 6/3/94
Found in Baseline             : 1.1
Found Date                    : 6/3/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10853
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/3/94 public]

[ /security/server/rrs at 22:42 (PM) Thursday ]

cc -c     -O  -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_BSD -DBSD -DHAS_STDLIB_H  -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/security/server/rrs -I/project/dce/build/dce1.1-snap/src/security/server/rrs -I../../h -I/u1/devobj/sb/nb_rios/src/security/h -I/project/dce/build/dce1.1-snap/src/security/h -I../../idl -I/u1/devobj/sb/nb_rios/src/security/idl -I/project/dce/build/dce1.1-snap/src/security/idl -I../../utils -I/u1/devobj/sb/nb_rios/src/security/utils -I/project/dce/build/dce1.1-snap/src/security/utils -I/u1/devobj/sb/nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/security/server/rrs/rrs_prop_replist.c
    1501-106: (S) Include file rs_repadm.h not found.
*** Error code 1


    1501-106: (S) Include file rs_repadm.h not found.
    1501-106: (S) Include file rs_replist.h not found.



cc -c     -O  -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_BSD -DBSD -DRS_REP_NAUTH -Dunix  -DHAS_STDLIB_H  -DDCE_AUD_POINTS -D_ALL_SOURCE -DAIX32   -I. -I/u1/devobj/sb/nb_rios/src/security/server/bin -I/project/dce/build/dce1.1-snap/src/security/server/bin -I../../h -I/u1/devobj/sb/nb_rios/src/security/h -I/project/dce/build/dce1.1-snap/src/security/h -I../../idl -I/u1/devobj/sb/nb_rios/src/security/idl -I/project/dce/build/dce1.1-snap/src/security/idl -I../rs -I/u1/devobj/sb/nb_rios/src/security/server/rs -I/project/dce/build/dce1.1-snap/src/security/server/rs -I/u1/devobj/sb/nb_rios/export/rios/usr/include -I/project/dce/build/dce1.1-snap/export/rios/usr/include   /project/dce/build/dce1.1-snap/src/security/server/bin/rgy_create.c
cc           -L/u1/devobj/sb/nb_rios/export/rios/usr/lib     -L/project/dce/build/dce1.1-snap/export/rios/usr/lib  -o secd.X rs_main.o  -L../../krb5/kdc -L../../krb5/lib/kdb -L../rsdb -L../rrs -L../../utils -L../../audit/libaudit -L../rs -lrs -lkrb5kdc -lkdb -lrsdb -lrrs -lsecutil -laudit -ldce -lrss -lbsd -lkrb5  
0706-005 ld: Cannot find file: /lib/librrs.a



CR Number                     : 10840
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : ./security/krb5/lib/crc-32/crc-test
Short Description             : This file is empty.  Do we need it?
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 6648
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/krb5/lib/crc-32/crc-test
Sensitivity                   : public

[6/2/94 public]

The file ./security/krb5/lib/crc-32/crc-test is empty.
If it is not required, please remove it.  Otherwise, it will be
expanded with the OSF copyright.

[9/6/94 public]
This isn't a defect, it's an empty file that doesn't affect builds or tests
or DCE usage, so I've changed it to an 'enh'ancement to clean up the tree.



CR Number                     : 10682
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit site command changed
behavior
Reported Date                 : 5/17/94
Found in Baseline             : 1.1
Found Date                    : 5/17/94
Severity                      : B
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10615
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/17/94 public]

The rgy_edit "site" command works differently on 486 and HP 
machines. That is if I execute the following command on an HP:

rgy_edit=> site /.:/kevins
?(rgy_edit) Unable to open the registry at site "/.:/kevins" - Registry server unavailable (Registry Edit Kernel) (dce / sad)
Current site is: registry server at /.../absolut_cell/subsys/dce/sec/master 

And if I execute the command on a 486.
rgy_edit=> site /.:/kevins
Site changed to: registry server at /.../terrapin/subsys/dce/sec/master 

So there is an inconsistency between architectures when trying to bind to a 
site.

[5/17/94 public]
It should be noted that in the above example, there is no principal or
anything named kevins in the registry.  This is based on the behavior that
sec_rgy_site_bind() can accept a name of the form:

   /.../<valid-cellname>/<some-invalid-name>

and it will still bind to a security server in /.../<valid-cellname>.

Several dcecp commands will depend on this behavior, hence the high
priority (though it is NOT needed for beta).  For example, in dcecp you
can say: 

 dcecp> principal create melman
 dcecp> principal create /.../mycell/melman
 dcecp> principal create /.../someothercell/melman

There is no equivalent of the rgy_edit site command in dcecp, so we try
to bind to the name entered since we can't figure out the cellname
syntactically and we can't call sec_id_parse_name since the name might
not exist.

[5/18/94 public]
I reconfigured my 486 with the nightly build from 5/17/94. With this
build my machine is now exhibiting the same symptoms as the HP machine.
The question now is what is the correct behavior. The build dated 5/11
exhibited what I would consider to be the correct behavior which is
resolving to the apropriate site on any path that contains a valid
cellname. This behavior was consitent prior to last week. I first
noticed this behavior in 12/93.

[5/18/94 public]
The HP we tested against which did not bind to a cell given a name which
did not exist, was using the nightly build of 5/4/94.

[5/18/94 public]
So it's not arch-specific, it's just a bug (apparently previously reported.)



CR Number                     : 10562
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : api
Short Description             : dcecp accepts input outside
PCS when creating principals and groups
Reported Date                 : 5/6/94
Found in Baseline             : 1.1
Found Date                    : 5/6/94
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 12028
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/6/94 public]

dcecp accepts input outside the PCS for principal names and 
groups (see RFC 23.0- Limitations due to protocol definitions). 

rgy_edit on equivalent operations returns an error:

dd Principal=> Enter name: <Greek Characters>
?(rgy_edit) Unable to add principal <Greek Characters> - Principal name
contains an illegal character (Registry Edit Kernel) (dce / sad)
Add Principal=> Enter name:

[5/9/94 public]
This sounds like it should be done in the sec_rgy_pgo_*().
I know that we don't do input checking as a rule, but I'll let the security
and I18n folks figure this out.  dcecp doesn't seem like the right place to
check this.  What if someone else puts in bogus values via the API and then
the admin wants to fix it with dcecp?

[9/2/94 public]
Could someone of the I18N or SEC folks comment on this please?

[9/2/94 public]
This is being fixed as part of the Security I18N fixes (OT 12028), and hence
has been marked as a dupe.  

The fix will indeed be applied in the affected sec_rgy_pgo_*() routines
since it is necessary to protect the sec database from being polluted
with invalid principal names containing non-PCS characters.



CR Number                     : 10535
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit cannot remove orphans
Reported Date                 : 5/4/94
Found in Baseline             : 1.0.2
Found Date                    : 5/4/94
Severity                      : C
Priority                      : 3
Status                        : dup
Duplicate Of                  : 8131
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/client/admin/acl_edit/{tty,deif}.c
Sensitivity                   : public

[5/4/94 public]
  Taken directly from our own defect database:
.
If you delete an account/principal listed on an acl, you can't remove
the acl entry via 'acl_edit delete'.  I suggest a subcommand like
'cleanacl' (like fs cleanacl in AFS), which would cleanup obsolete acl's.
This should be forwarded to OSF, but we should also make sure we don't
introduce the same deficiency in any tools we're creating.
There is a work-around: use 'acl_edit kill', then add all of the desired
acl's again....bogus (esp. for long acl lists), but it gets you there.
colby[dce] acl_edit /.:/hamel/foo -m user:kelp:rw
colby[dce] rgy_edit
Current site is: registry server at /.../colby/subsys/dce/sec/master
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> del kelp
Please confirm delete of name "kelp" [y/n]? (n) y
rgy_edit=> quit
bye.
colby[dce] acl_edit /.:/hamel/foo
sec_acl_edit> l
# SEC_ACL for /.:/hamel/foo:
# Default cell = /.../colby.dce.transarc.com
user:cell_admin:rwdtcia
user:0000006d-89e4-2c14-bd00-9e620a670000:rw-----
sec_acl_edit> d user:0000006d-89e4-2c14-bd00-9e620a670000
ERROR: SEC_ACL_EDIT - invalid or unknown entry key (dce / sad)
sec_acl_edit>

[5/4/95 public]
I agree acl_edit (and dcecp?) should be enhanced to allow you to remove ACL
entries with this problem.  BUT, beware that just because you get a uuid
instead of a name doesn't mean it's an orphan (it could've been a network
glitch during the id to name translation, or a foreign cell's secd that you
can't get to...).  Anyway, I feel that the enhancement shouuld be to let the
user specify the entry just as it appears in the UI (ie: copy/paste the entry
as is from the output into a modify or delete subcommand).  If acl_edit
cannot translate the key to a name, it should see if it's a valid UUID and
if so, attempt to perform the same operation by uuid (since that's what's done
internally after translating the name to uuid anyway).  BTW, thanks for opening
this as an enhancement instead of a defect, not everybody thinks to do that.

[10/3/94 public]
FYI, CR 10546 tracks this in dcecp.  As an enh we would add a -uuid option
to understand ACL's that have UUID's.  The reason for the option is that
what if someone created a principal with a UUID as a name...



CR Number                     : 10523
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_salvage_db corrupts database
Reported Date                 : 5/4/94
Found in Baseline             : 1.0.3
Found Date                    : 5/4/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10503
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/4/94 public]

This is related to CR 10503.

I had a cell with two machines running: one is a master secd and the other is a
slave secd. I issued "sec_admin stop" to stop the master secd and issued the 
following "sec_salvage_db" commands to the master secd:

     sec_salavge_db -print -prtpath /tmp/print
     sec_salvage_db -reconstruct -prtpath /tmp/print

  <NOTE> I did not update any ascii files that were created by "sec_salvage_db
         -print" 

After I restarted the master secd, any update via rgy_edit to the master databas
e  
did not get propagated to the slave's database. Beside when I issued "lrep -all"

to display the replicas, the "Last update sequence no'" of the master replica 
was reset to 100 while that of the slave remained unchanged. I tried to put the 

two databases back in synch via "sec_admin initrep <slave_replica>" and the 
initialization of the slave replica failed with the following message:

    Initialize replica operation failed - Registry object not found

There was no other way for me to put the two databases back in synch.

[5/4/94 public]
As stated in CR 10503, due to ERA/H-Cells functionality sec_salvage_db
requires additional work to function correctly. Currently dupping to 10503 
which will be a placeholder for all sec_salvage_db work.



CR Number                     : 10522
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_salvage_db corrupts database
Reported Date                 : 5/4/94
Found in Baseline             : 1.0.3
Found Date                    : 5/4/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10503
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/4/94 public]

This is related to CR 10503.

I had one machine running in a cell. I used a "sec_admin stop" to stop secd.
Then I issued the following "sec_salvage_db" commands on the machine where
secd was running:
          
           sec_salvage_db -print -prtpath /tmp/print
           sec_salvage_db -reconstruct -prtpath /tmp/print 

<NOTE> I did not update any *.prt files that were created by "sec_salvage_db 
       -print".

I restarted secd. Then I configured a security replica to the cell and the 
configuration failed with the following messages:

        Modifying acls on /.:/sec/replist ...
ERROR: acl object not found (dce / sec)
Unable to bind to object /.:/sec/replist
ERROR: acl object not found (dce / sec)
Unable to bind to object /.:/sec/replist
        Modifying acls on /.:/subsys/dce/sec ...
        Modifying acls on /.:/sec ...
        Modifying acls on /.: ...
        Modifying acls on /.:/cell-profile ...
        Enter keyseed for initial database master key: 

Registry: Error - Cannot add new replica to master registry - 0x1712207a - Regis

try object not found (dce / sec)
Registry: Fatal Error - Failed to create database
 at line 453 of file ../../../../../src/security/server/bin/rgy_create.c - 0x171

2207a - Registry object not found (dce / sec)
/etc/dce_config: 21481 Abort
ERROR:   sec_create_db may have failed to create security slave
        Press <RETURN> to continue, CTRL-C to exit:

[5/4/94 public]
As stated in CR 10503, due to ERA/H-Cells functionality sec_salvage_db
requires additional work to function correctly. Currently dupping to 10503 
which will be a placeholder for all sec_salvage_db work.



CR Number                     : 10521
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_salvage_db corrupts database
Reported Date                 : 5/4/94
Found in Baseline             : 1.0.3
Found Date                    : 5/4/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10503
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/4/94 public]

This is related to CR 10503.

I had one machine running in a cell. I used a "sec_admin stop" to stop secd.
Then I issued the following "sec_salvage_db" commands on the machine where
secd was running:
          
           sec_salvage_db -print -prtpath /tmp/print
           sec_salvage_db -reconstruct -prtpath /tmp/print 

<NOTE> I did not update any *.prt files that were created by "sec_salvage_db 
       -print".

After I restarted secd, I could not put secd into a maintenance mode (sec_admin
state -m), could not stop secd (sec_admin stop) and could not change the 
master key (sec_admin master_key).

[5/4/94 public]
As stated in CR 10503, due to ERA/H-Cells functionality sec_salvage_db requires
additional work to function correctly. Currently dupping to 10503 which will
be a placeholder for all sec_salvage_db work.



CR Number                     : 10421
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd loops because condition
variable pointer not set on error path
Reported Date                 : 4/21/94
Found in Baseline             : 1.0.3
Found Date                    : 4/21/94
Severity                      : A
Priority                      : 2
Status                        : dup
Duplicate Of                  : 9273
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : .../src/security/server/rs/rs_prop_tasks.c
Sensitivity                   : public

[4/21/94 public]

 The routine prop_driver_sleep() in rs_prop_tasks.c calls 
pthread_cond_timedwait(). The condition variable passed to this call is set
by the routine - if the normal path is taken. If an error path is taken,
i.e. if the routine is called with its parameter "*n_bad_prop_state" not
equal to zero, the condition variable is not set and garbage is passed to
the pthread_cond_timedwait() call.

 To quote the customer:

>   When running the system test according to the
>   backup_restore_rgy_checklist, secd went into a loop when it is
>   set to maintenance mode via sec_admin. secd kept spitting out
>   the following error message:
>
>     SECD: prop_driver_sleep - error from pthread_cond_timedwait
>        (error 22)
>
>  Apparently, when secd went into the maintenance mode, the
>  prop_driver_sleep executed the code under the path
>  n_bad_prop_state > 0. This path does not set up the condition variable
>  pointer, sleep_cv, which is later passed to pthread_cond_timedwait.
>  When pthread_cond_timedwait validates the parameters, it returns
>  an error since the condition variable is not set up to point anything.
>  Since it points to garbage, it might cause different symptoms on
>  different systems or environment.
>
>   I have modified prop_driver_sleep to set up the condition variable
>   pointer, and it seemed to be running fine afterwards.



CR Number                     : 10371
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : Different error messages for
1.0.3 and 1.1 during rgy_edit when creds expired.
Reported Date                 : 4/15/94
Found in Baseline             : 1.1
Found Date                    : 4/15/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10106
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/15/94 public]

Trying to do rgy_edit after creds expires in 1.1 gives different error
message than 1.0.3 code.

1.1
---

$ rgy_edit
?(rgy_edit) Unable to contact the registry - Registry server
unavailable (Registry Edit Kernel) (dce / sad)


1.0.3
----

$ rgy_edit
?(rgy_edit) Warning - binding is not authenticated - Cant establish
authentication to registry (Registry Edit Kernel) (dce / sad)

[4/15/94 public]

This is because rpc_binding_set_auth_info() when called with expired creds
returns rpc_s_auth_tkt_expired in 1.0.3 . In 1.1, the error returned
is  "Matching credential not found" (which I believe is KRB5_CC_NOTFOUND ) . 
The code in security/client/rca/internal_binding.c explicitly checks 
for rpc_s_auth_tkt_expired error . Hence the different behaviour.

The current method of handling rpc_s_auth_tkt_expired via exceptions
will probably (maybe) replaced by the general mechansim for handling 
"Registry Server Unavailable" messages. 

So the only question is why is rpc_binding_set_auth_info() returning
a different error code ( and that too an undocumented error code) ? 

Anyone know why ?

[4/19/94 public]
This is an exact duplicate of 10106.



CR Number                     : 10232
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : sinix
Component Name                : sec
Subcomponent Name             : sec_acl_bind
Short Description             : sec_acl_bind memory allocation problem
Reported Date                 : 3/28/94
Found in Baseline             : 1.0.3
Found Date                    : 3/28/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 8266
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/client/acl/daclbind.c
Sensitivity                   : public

[3/28/94 public]

This problem was reported by our DFS group.

>When configuring DFS on SINIX-Z, the following command, executed
>by the dfs_config script, results in a segmentation fault:
>
>        /opt/dcelocal/bin/acl_edit -e /.:/sec/principal/hosts/logan/dfs-server
>                -m group:subsys/dce/dfs-admin:rcDnfmag
>
>The security object /.:/sec/principal/hosts/logan/dfs-server has
>already been created.

Further investigating, I found that the following might have caused the
core dump:

File: security/client/acl/daclbind.c
....
....
        /* component_name = unresolved_name + optional residual */
        if (bind_to_entry) {
            component_name = (unsigned_char_p_t) malloc(
                                            strlen((char *) residual) + 1 +
#ifdef SNI_SVR4
                                            1 + /* for strlen("/") */
#endif
                                            strlen((char *) unresolved_name));
            strcpy((char *) component_name, (char *) unresolved_name);
            strcat((char *) component_name, "/");
            strcat((char *) component_name, (char *) residual);
        }
        else {
            component_name = unresolved_name;
        }
....
....

The #ifdef SNI_SVR4 suggests the fix.

[7/14/94 public]
Yet another dup of 8266.

[7/15/94 public]
As mentioned above, this is a duplicate of another CR.  Since I own that CR,
I must own this one too, since duplicates aren't necessarily ever updated
after marking them 'dup'.



CR Number                     : 10226
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10331
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy_edit cell
Short Description             : Memory Fault w/X500 cell name in rgy_edit
Reported Date                 : 3/24/94
Found in Baseline             : 1.1
Found Date                    : 3/24/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10331
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[03/24/94 public]

Using BL5, you get a Memory Fault with the rgy_edit cell command when you
are using a valid X500 cell name.  If I use an invalid name I get an ap-
propriate error message.

USING A VALID X500 CELL NAME:

rgy_edit=> cell /.../c=us/o=osf/ou=soldier_cell
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: cell_admin
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
Memory fault

USING A INVALID X500 CELL NAME:

rgy_edit=> cell /.../c=us/o=osfosf/ou=ple
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
?(rgy_edit) Incomplete cell add - Registry server unavailable (Registry Edit Kernel) (dce / sad)

[03/24/94 public]
Given that you seem to be able to reproduce this, and have a cell set up to
do so already, you might save us *lots* of time if you could run it in the
debugger and get a traceback when it does the memory fault.

[03/25/94 public]

How's this?

r0  00000000 000024b5 80a024f3 00000020 r4  00000015 00000001 7b033278 7b033350
r8  00000014 00000004 00000000 00000000 r12 4000bee0 00000000 10000080 10000000
r16 00000000 00000014 00000000 7af461d4 r20 00000000 00000008 00000001 00000000
r24 401c057d 7b03945c 40010ef8 4000e3d0 r28 177db009 401c057d 7b039050 7b038488
    pc = 000024b5.80a024f0     priv = 3     psw = jthlnxbCvmrQPDI     sar = 24
        0x80a024a0   rca_site+0668   LDSID   (0,1),31
        0x80a024a4   rca_site+066c   MTSP    31,0
        0x80a024a8   rca_site+0670   BLE     0(0,1)
        0x80a024ac   rca_site+0674   OR      31,0,2
        0x80a024b0   rca_site+0678   LDW     -32(0,30),19
        0x80a024b4   rca_site+067c   LDW     -108(0,30),26
        0x80a024b8   rca_site+0680   LDO     -1172(30),25
        0x80a024bc   rca_site+0684   LDW     -72(0,30),24
        0x80a024c0   rca_site+0688   LDW     -1252(0,30),23
        0x80a024c4   rca_site+068c   LDW     -1260(0,30),22
        0x80a024c8   rca_site+0690   STW     22,-52(0,30)
        0x80a024cc   rca_site+0694   LDW     -1264(0,30),1
        0x80a024d0   rca_site+0698   STW     1,-56(0,30)
        0x80a024d4   rca_site+069c   BL      rca_site_resolve_update+06a4,2
        0x80a024d8   rca_site+06a0   ADDIL   0xffff4000,2
        0x80a024dc   rca_site+06a4   LDO     964(1),1
        0x80a024e0   rca_site+06a8   LDSID   (0,1),31
        0x80a024e4   rca_site+06ac   MTSP    31,0
        0x80a024e8   rca_site+06b0   BLE     0(0,1)
        0x80a024ec   rca_site+06b4   OR      31,0,2
 >      0x80a024f0   rca_site+06b8   LDW     -32(0,30),19
        0x80a024f4   rca_site+06bc   LDW     -1260(0,30),31
        0x80a024f8   rca_site+06c0   LDW     0(0,31),20
        0x80a024fc   rca_site+06c4   LDO     8(20),21
        0x80a02500   rca_site+06c8   LDW     0(0,21),22
        0x80a02504   rca_site+06cc   LDO     8(0),1
        0x80a02508   rca_site+06d0   OR      22,1,31
        0x80a0250c   rca_site+06d4   STWS    31,0(0,21)
        0x80a02510   rca_site+06d8   LDW     -144(0,30),26
        0x80a02514   rca_site+06dc   BL      rca_site_resolve_update+06e4,2
        0x80a02518   rca_site+06e0   ADDIL   0xfff27000,2
        0x80a0251c   rca_site+06e4   LDO     1864(1),1
        0x80a02520   rca_site+06e8   LDSID   (0,1),31
        0x80a02524   rca_site+06ec   MTSP    31,0
        0x80a02528   rca_site+06f0   BLE     0(0,1)
        0x80a0252c   rca_site+06f4   OR      31,0,2
        0x80a02530   rca_site+06f8   LDW     -32(0,30),19
        0x80a02534   rca_site+06fc   LDW     -72(0,30),26
        0x80a02538   rca_site+0700   BL      rca_site_resolve_update+0708,2
        0x80a0253c   rca_site+0704   ADDIL   0xffdfe000,2
 File: unknown    Procedure: rca_site_resolve_upd + 0x000006b8    Line: unknown

Copyright Hewlett-Packard Co. 1985,1987-1992. All Rights Reserved.
<<<< XDB Version A.09.01 HP-UX >>>>
It appears that there's no debugging information in /opt/dcelocal/bin/rgy_edit (
UE445)
Core file from:  rgy_edit
Child died due to: segmentation violation
WARNING: /usr/lib/end.o was not linked with this program (UE836)
         Shared-library debugging cannot be made available (UE837)
Procedures:      0
Files: 0
>t
 0 rca_site_resolve_update + 0x000006b8 (Address not found (UE302)

[04/26/94 public]

I'm just guessing, but I think this defect could be the same as 10331.

[4/26/94 public]
The above traceback doesn't help much because it's not linked with end.o
(as the debugger error message states).

[5/4/94 public]
Duping to 10331 which fails with DNS style name.



CR Number                     : 10082
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : KRB5_CC_NOTFOUND returned unexpectedly
Reported Date                 : 3/7/94
Found in Baseline             : 1.1b3
Found Date                    : 3/7/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 10106
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/7/94 public]


There are some dfs applications which check for
rpc_s_auth_tkt_expired as a result of an rpc call
and if the error code is indeed rpc_s_auth_tkt_expired,
they will then attempt to refresh the identity.
This all worked nicely in 1.0.3a.

Now we are on 1.1 bl-3, and what I am seeing is that what
we are getting as an error code is KRB5_CC_NOTFOUND, which 
is some kerberos internal error code, when the identity expires.
Needless, to say this breaks DFS if you run it long enough or
have the defaults set short enough, because the applications
do not expect to receive this error code.

I am not sure if this is rpc's or security's doing regarding
not mapping this error code to something that an application
would expect to receive.  Or maybe this is a new 1.1 error code?

[5/3/94 public]
Exact same problem as reported in 10106.  Since that one has more info, (even
though it is newer), I'm dup'ing this CR to 10106.



CR Number                     : 10067
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : passwd_export
Short Description             : 
passwd_export can clobber datafiles if more than one processes are running.
Reported Date                 : 3/4/94
Found in Baseline             : 1.0.3
Found Date                    : 12/28/93
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 9714
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/4/94 public]
If there are more than one passwd_export processes are running,
passwd_export can overwrite each other's data files.  

Also, a conditional check in passwd_export.c should be :
while ((GOOD_STATUS(&lstat)) && (mbrs_saved < num_members)),
instead of (mbrs_saved != num_members).  We suspect this
conditonal check is the cause of a run-wild ( in an infinite
loop) passwd_export.

[3/4/94 public]
This is a dup of 9714.



CR Number                     : 10024
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security local registry
Short Description             : unpriv'd lrgy access jams a lock
Reported Date                 : 2/26/94
Found in Baseline             : 1.0.2
Found Date                    : 2/26/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 9359
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/client/rca/sec_lrgy.c
Sensitivity                   : public

[2/26/94 public]
  If a process lacking write access to the local registry directory
calls sec_login_setup_identity() with a principal name that doesnot
exist withng the registry, the RCA locks the local registry as it looks
in all possible registries (cell-wide + local) for the absent prinicpal.
The locking of the lrgy is incorrect -- after locking the process' mutex
for the lrgy, the failure of open() to read the lrgy causes an error
exit from lrgy_read_lock() and the mutex remains locked. All callers of
lrgy_read_lock() see this error and never call the unlock routine.
  The result is that the following program will hang forever for
non-superusers.
	=======================================================
#include <pthread.h>
#include <dce/rpc.h>
#include <dce/dce_error.h>
#include <dce/sec_login.h>
#include <stdio.h>
#define BOOL_STRING(b) ((b) ? "TRUE" : "FALSE")
int main(argc, argv)
int argc;
char **argv;
{
  error_status_t      est;
  sec_login_handle_t  h;
  boolean32           bool;
  char                dce_err[dce_c_error_string_len];
  int                 scrap;
  char               *nonuser = "boogieman";
  if (argc > 1) nonuser = argv[1];
  printf("Trying back-to-back setups for user %s ...\n", nonuser);
  bool = sec_login_setup_identity(nonuser, sec_login_no_flags, &h, &est);
  dce_error_inq_text(est, &dce_err[0], &scrap);
  printf("First setup: bool %s, status: %s\n", BOOL_STRING(bool), dce_err);
  bool = sec_login_setup_identity(nonuser, sec_login_no_flags, &h, &est);
  dce_error_inq_text(est, &dce_err[0], &scrap);
  printf("Second setup: bool %s, status: %s\n", BOOL_STRING(bool), dce_err);
  sec_login_purge_context(&h, &est);
  printf("Purged that context\n");
  return 0;
}
	=======================================================
  The evident fix to to add an unlock of the mutex when the open of the
lrgy file fails, before leaving the locker routine.

[2/26/94 public]
 Whoa, this is a duplicate of CR 9359. Sorry.



CR Number                     : 10022
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : rgy_edit -u is an illegal
switch although allowed by the documentation
Reported Date                 : 2/25/94
Found in Baseline             : 1.0.2
Found Date                    : 2/25/94
Severity                      : E
Priority                      : 3
Status                        : dup
Duplicate Of                  : 8134
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[2/25/94 public]

 The man page and other documentation give -u[pdate] as a valid command
line option for rgy_edit. This is incorrect, the valid switch is -up[date].

[2/28/94 public]

Assigned this CR to Pam Millett (HP security writer).

[10/4/94 public]
This was fixed in CR 8134.



CR Number                     : 9704
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : kinit
Short Description             : kinit man page error
Reported Date                 : 1/7/94
Found in Baseline             : 1.0.3
Found Date                    : 1/7/94
Severity                      : D
Priority                      : 3
Status                        : dup
Duplicate Of                  : 9378
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[1/7/94 public]

The kinit -l or -r parameters (which specify lifetimes) are documented 
in the kinit man-page as taking paramteres that specify the number of hours
that the credentials should remain valid for. In fact, just specifying a
number gives the number of minutes, not hours. The paramter can be
specified as <nni> where nn would be an integer and i is an indicator as
in 3h meaning 3 hours.

There are obvious internationalization problems with this.

The man page should be fixed, but longer term the code should be fixed

[1/7/94 public]
Inadvertent change introduced late in l.0.3.



CR Number                     : 9539
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : Secd maintenance in infinite loop
Reported Date                 : 11/23/93
Found in Baseline             : 1.0.3
Found Date                    : 11/23/93
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 9273
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[11/23/93 public]

Full Description:

	Using sec_admin to put security server into and out of maintenance
	mode, I have experienced the secd getting into infinite loop. I had

	to kill secd and restart it.

Repeat By:

	This does not happen very often. It seems that it happens once every
	three times or so.

	Do the following:

	$ sec_admin
	sec_admin> state -maintenance
	sec_admin> state -service

	A coiple of times. Then you will see "state -service" hanging there,
	not returning. Checking secd will show that it is running all the
	time, making heavy use of CPU.

	Kill secd and restart it. Go into sec_admin and do a "info -full" and
	you will see the secd is still in maintenance mode.

	Looks like it was trying to get out of maintenance mode by
	reloading or reinitializing the database, somehow it just got into
	an infinite loop.

Jean Hsiao had a similar experience with secd in an infinite loop.



CR Number                     : 9525
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_pkl
Short Description             : cut & paste error in sec_pkl.c
Reported Date                 : 11/22/93
Found in Baseline             : 1.0.3
Found Date                    : 11/22/93
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 9939
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/utils/sec_pkl.c
Sensitivity                   : public

[11/22/93 public]

From mail Ping sent me:

   Date: Mon, 22 Nov 93 14:10:44 EST
   From: "Ping Lin" <PLIN@TOROLAB6.VNET.IBM.COM>

   Bill,

       Something that I noticed while reading through
sec_id_pac_t_unpickle:
   in the last IF that deals with foreign groups, there is a segment:

	   if (Z == 0)
	   {
	       data->groups=(*allocator)(1);
	   }

   Should this be data->foreign_groups?

This is indeed a bug...

[05/03/94 public]
This is a dup of 9939.  This one was created first, but since that one has
a lot more commentary in it (on 4/8byte alignment), I decided to dup this one
to that one, to make sure we keep the commentary in the open one that will be
looked at while fixing the problem.



CR Number                     : 9186
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : FLDB config fails - bos admin list
Reported Date                 : 10/18/93
Found in Baseline             : 1.0.3
Found Date                    : 10/18/93
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 9193
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/18/93 public]

This problem first began showing up on the nightly build available
10/14/93. The problem is that, on both HP and RIOS, configuring a
core and fldb server machine fails with:

S:****** Starting bosserver...
/opt/dcelocal/bin/bos: file admin.bos not found, try using the `-createlist' flag
/opt/dcelocal/bin/bos: failed to add group 'subsys/dce/dfs-admin' (you are not authorized for this operation (dfs / bbs))
/opt/dcelocal/bin/bos: failed to create new server instance flserver of type 'simple' (you are not authorized for this operation (dfs / bbs))
Checking for a Ubik sync site in  hosts/tinker
(last message repeats until you exit)

If you attempt to create the admin list by hand,

/opt/dcelocal/bin/bos addadmin -server /.:/hosts/tinker -adminlist
admin.bos -group subsys/dce/dfs-admin -createlist

It fails with:

/opt/dcelocal/bin/bos: failed to add group 'subsys/dce/dfs-admin' (unexpected in
ternal error; check bosserver log (dfs / bbs))

and the BosLog contains:

Fri Oct 15 19:03:58 1993: BOSSVR_AddSUser: unable to setup handle to
secd: incomplete name (dce / rpc)

Logging as an A0 since this is blocking system test (and daily dfs smoketesting)

[10/19/93 public]
Not too much new to add here.  A call to sec_rgy_cell_bind() is failing
in bossvr_ncs_procs.c.  Re-assigning to a security person since the
bosserver code hasn't changed since August.

[10/19/93 public]
Looking at the error return from secd indicates that this problem is
similar in nature to the CR 9193; i.e. secd returning rpc_s_incomplete_name
to the calling routine. Dupping this CR to 9193.



CR Number                     : 8575
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rs_task
Short Description             : fatal errors produce hung server
Reported Date                 : 9/9/93
Found in Baseline             : 1.0.2
Found Date                    : 9/9/93
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 7763
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : rs_task.c
Sensitivity                   : public

[9/9/93 public]
  If a thread other than the DT calls fatal_st(), that thread tries to
cancel the DT and exits its own thread. This triggers the DT to a CATCH
which also calls fatal_st() and that also causes the calling thread to
exit. In that case, it's the DT and the DT does *not* reach the exit()
to terminate the process -- because it just suicided.
 
  There's a comment before the rs_task_fatal() routine which implies
that the pthread_exit() call should be inside the "if not DT" clause,
not after it. Making that edit and trying it out produces a secd that
will hit all sorts of process-killing faults because fatal() is called
by the DT before it enters a TRY scope. The edit results in a
rs_task_fatal() routine that does nothing if called by the DT. So
testing it with the (trivial) case of starting it on a system which is
already running a secd produces a failed test: the second secd seg
faults after it calls fatal() to report "database locked" but proceeds
past the fatal() call that reported that error.
  What should rs_task_fatal() really be doing?
  This is filed as a high priority bug; fatal errors are leaving secd's
up and running because only the thread that eperienced the fatal error
and the DT get exited. All the other threads, and the process itself,
live on! The result is a secd which continues to answer requests as best
as it can; a secd in the process list to fool job monitors that want to
restart it if it goes away; etc etc etc.



CR Number                     : 8500
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : DCE client process seg faults
Short Description             : Possible NULL pointer
referencing problem in krb5_mk_req_extended().
Reported Date                 : 8/23/93
Found in Baseline             : 1.0.2
Found Date                    : 8/23/93
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 8495
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/23/93 public]

This problem has been discovered by the DME development group running 1.0.2
on 486 platform. Here are the details as mailed to me by the DME developer:
(the set-up is: process with a single login context and 20 threads)

   I have seg faults happening in a multi-threaded DCE client 
   process and could use a bit of asistance in figuring it out.
   The faults occur deep down in the DCE code below my RPC.  The 
   routine is called krb5_mk_req_extended() although I *may have
   have seen is elsewhere as well.  The stack fragment
   below shows the 3rd from the last parm as NULL, this is a pointer
   called 'cred' through which a member access is attempted.  Ouch.

   This problem seems to go away when I only have one thread doing
   RPC's.  The process normally has 20 RPC threads.

  #0  0xa43cba77 in krb5_mk_req_extended
      (536870912, 9212900, 16, 0, 0, 10233632, 0, 0, 9212912)
  #1  0xa430077e in sec_krb_cn_build_message
      (11219448, 0, 5, 2, 9212968, 9212976)
  #2  0xa422bb33 in rpc__krb_cn_fmt_client_req
      (13477108, 13386760, 11808836, 9213052, 13476936)
  #3  0xa41f77e9 in send_pdu (13476888, 14, 0, 0, 13386760, 13476936)
  .....
  .....  (12 more levels)

   Here is the fragment of the DCE function and the clear use of 'creds',
   the NULL pointer....

krb5_mk_req_extended(ap_req_options, checksum, kdc_options,
                     sequence, newkey, ccache, creds, authentp, outbuf)
const krb5_flags ap_req_options;
const krb5_checksum *checksum;
const krb5_flags kdc_options;
krb5_int32 sequence;
krb5_keyblock *newkey;
krb5_ccache ccache;
krb5_creds *creds;krb5_authenticator *authentp;
krb5_data *outbuf;
{
    krb5_error_code retval;
    krb5_ap_req request;
    krb5_authenticator authent;
    krb5_data *scratch;
    krb5_enctype etype;
    krb5_encrypt_block eblock;
    krb5_data *toutbuf;

    if ((ap_req_options & AP_OPTS_USE_SESSION_KEY) &&
        !creds->ticket.length)                  <***********
        return(KRB5_NO_TKT_SUPPLIED);

    if (!creds->ticket.length) {                <***********
          /* go get creds */


What could my application level code be doing wrong to cause
this NULL pointer so deep down the stack?

[10/07/93 public]

I have worked my way backwards from krb5_mk_req_extended to send_pdu
and everything looks ok, so could you add in the rest of the
(12 more levels).   

From the current information what ever function that's calling
send_pdu, has an incomplete sec_context pointer.  The sec_context
pointer (fifth arg to send_pdu), gets passed to the 
rpc__krb_cn_fmt_client_req function.


The rpc__krb_cn_fmt_client_req does the following:

	krb_cn_info = (rpc_krb_cn_info_p_t) sec->sec_cn_info;

	sec_krb_cn_build_message (krb_info->auth_info.u.auth_identity,
                                    krb_cn_info->cred,		<<<< NULL >>>>
                                    krb_info->auth_info.authn_level,
                                    krb_info->auth_info.authz_protocol,
                                    &key,
                                    &krb_ap_req);

As shown in the provide stack trace up above.

If a program that demonstrates this bug exists, it would be useful to have.

[10/7/93 public]

Here is the detailed trace info.

#0  0xa43cba77 in krb5_mk_req_extended
    (536870912, 9212900, 16, 0, 0, 10233632, 0, 0, 9212912)
#1  0xa430077e in sec_krb_cn_build_message
    (11219448, 0, 5, 2, 9212968, 9212976)
#2  0xa422bb33 in rpc__krb_cn_fmt_client_req
    (13477108, 13386760, 11808836, 9213052, 13476936)
#3  0xa41f77e9 in send_pdu (13476888, 14, 0, 0, 13386760, 13476936)
#4  0xa41f6145 in send_alt_context_req_action_rtn (13476888, 9213220)
#5  0xa4203f79 in rpc__cn_sm_eval_event (7, 9213220, 13476888, 13476896)
#6  0xa41edc1c in rpc__cn_assoc_alter_context
    (13476888, 4692940, 12864744, 11848188, 11848184, 11848220, 9213692)
#7  0xa41e8f23 in rpc__cn_assoc_request
    (11847680, 11347264, 4692940, 11848188, 11848184, 11848220, 9213692)
#8  0xa41f7bfc in allocate_assoc_action_rtn (11847680, 4692940)
#9  0xa4203f79 in rpc__cn_sm_eval_event (8, 4692940, 11847680, 11847732)
#10 0xa41f0edd in rpc__cn_call_start
    (11347264, 0, 4692940, 0, 9214848, 9214844)
#11 0xa41d2da0 in rpc_call_start
    (11347264, 0, 4692940, 0, 9214876, 9214848, 9214844)
#12 0x45cdba in evs_i_ntf_rpc_emit_event (p_cookie_=0x4effc8 "oreo", 
    p_ntf_record_=0xab1a3c, p_status_=0x8c9d3c, rpc_hnd_=0xad2540)
    at evs_ntf_if_cstub.c:183
#13 0x409646 in evs_i_erb_rpc_forward (p_forward_buf=0xab19f0, 
    p_thread_data=0x4ed8c0, p_login_context=0x5197c0, p_status=0x8c9e10)
    at ../../../../../src/services/evs/evs_erb/erb_rpc.c:217
#14 0x403053 in evs_i_erb_emit_thrd_main (emit_thrd_id_arg=0x6)
    at ../../../../../src/services/evs/evs_erb/erb_emit_thrd.c:116
#15 0xa41c2063 in cma__thread_base ()
#16 0xa41cd685 in cma__create_thread ()
#17 0x402f48 in evs_i_erb_emit_thrd_main (Cannot access memory at address
0x6.
oscar 10 -->

[ mdf 10/12/93 public ]

Based on the provide stack trace and by viewing the code,
I belive I have found the bug, however I have not yet proven
this.  Could you provide the test program so I can verify?

[10/13/93 public ]

I retract yesterdays belief...  8^_)

I have traced the code back to rcp__cn_call_start, where I am currently
trying to find out what's what.

Could you turn on any debugging environment variables, and supply 
the results into this defect report?


Rational for dup.
In defect 8495, the module is trying to obtain credentials, which
in is failing due to non thread safe flock and fcntl.  This defect
seems to be directly related, (comes from the same module, just a 
few lines further down).



CR Number                     : 8457
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : App Dev Guide
Short Description             : Error in AppDevGd for getting Svr Login Context
Reported Date                 : 8/16/93
Found in Baseline             : 1.0.2
Found Date                    : 8/16/93
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 6646
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.2
Affected File(s)              : 
Sensitivity                   : public

[8/16/93 public]
App Dev Guide section 2.3.4 "Acquiring a Login Context" for server writers says
to do the following:
    sec_login_setup_identity()
    sec_key_mgmt_get_key()
    sec_login_validate_identity()
    sec_login_get_current_context()
The last call should be:
    sec_login_set_context()

[8/23/93 public]
Mike needs some new manuals.  This was fixed in the 1.0.2 doc set.  The 
original defect was closed by a submission made by Julie Buckler 1/27/93.



CR Number                     : 7807
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secd
Short Description             : on 486 rep. master crashes under stress
Reported Date                 : 4/27/93
Found in Baseline             : 1.0.2
Found Date                    : 4/27/93
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 8214
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/27/93 public]
This is probably a dup. of 7642 except the platform difference (486) and no
noticeable errors were reported by registry servers. The test cell 
configuration was one master registry and one replica, secds' executing 
without debug output. The sec.rgy.7 test was executing for two loops of the 
test_drv.ksh script using the command line: "test_drv.ksh -u balder_ts -p pass 
-A 1000 -T 1 -i 2". The master update sequence number was roughly 600 behind 
when the secd crashed. The test server reported the failure:

DCE logged in as balder_ts

DCE logged out as balder_ts
        secrgy_server: Doing add_account, basename: sif
        secrgy_server: Doing remove_acct, basename: sif
sec_rgy_pgo_add: connection request rejected (dce / rpc)
sec_rgy_pgo_add failed:382312514
add_account_user: connection request rejected (dce / rpc)

The sec_admin program reported:

sec_admin> lrep -all
Default replica:  /.../balder_cell/subsys/dce/sec/master
Default cell:     /.../balder_cell


subsys/dce/sec/sif_rep
          Instance id: 00647f6d-3c1e-1bdd-a237-0000c0c74944
          Addresses:               ncacn_ip_tcp:130.105.5.25[]
                                   ncadg_ip_udp:130.105.5.25[]
          State:                   in service - slave
          Last update received at: Tue Apr 27 10:17:09 1993
          Last update's seqno:     0.33210
          Propagation state:       ready for updates
          Last update delivered:   Tue Apr 27 10:17:09 1993
          Last update's seqno:     0.33207
          Number of outstanding updates: 604
          Last comm status:        successful completion

subsys/dce/sec/master (master)
          Instance id: 003086f9-55ca-1bd5-8af3-0000c0b34944
          Addresses:               ncacn_ip_tcp:130.105.5.12[]
                                   ncadg_ip_udp:130.105.5.12[]
          State:                   in service - master
          Last update received at: Tue Apr 27 10:19:25 1993
          Last update's seqno:     0.33817
sec_admin> lrep -all
Default replica:  /.../balder_cell/subsys/dce/sec/master
Default cell:     /.../balder_cell
ERROR - communications failure (dce / rpc)

[4/27/93 public]

This bug report is incomplete; the output from sec_admin is nice, but
possibly irrelevant.

relevant data like a traceback of the secd core dump, or even the existance
or lack of a core dump, are missing..

[4/27/93 public]
Right! I've had little luck finding the secd core file. It sure would be nice 
for it to be written to some standard spot. Either there is none or it was
overwritten by some X11 prog. dump or I have a propensity to start secd from
a spot that doesn't have enough space, which is the more likely case. 
	This is the best I can do for the moment (secd -d -v):

Registry: Fatal Error - Prop task aborting
 at line 764 of file /project/dce/build/dce1.0.2/src/security/server/rs/rs_prop_tasks.c
Registry: Fatal Error - DT exiting with alert exception
 at line 487 of file /project/dce/build/dce1.0.2/src/security/server/rs/rs_main.c - 0x00000000 - successful completion
Registry: Fatal error in main thread; exiting

[7/13/93 public]
This was also yet another occurance of the prop task aborting, which has been
addressed in CR8214.  Dup'd this one to that.



CR Number                     : 7642
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secd
Short Description             : propagation task crashes under stress
Reported Date                 : 4/2/93
Found in Baseline             : 1.0.2
Found Date                    : 4/2/93
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 8214
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/2/93 public]
Stress test failure while using replicated registries.
Security servers were configured on three PMAXs master server on RIOS. This
configuration was then subjected to a stress test: executing sec.rgy.7 test
server and the test_drv.ksh on each PMAX. The test_drv.ksh command line:
"test_drv.ksh -t 1 -u <machine_name_server> -p password -A 1000 -T 5 -c <cell_name>"; executes 5 login-logout operations then adds and deletes 1000 principals and accounts.  Sec_admin in monitor on master and one replica.
	The test executed for about 15 minutes then reported: 
(RPC_CN_AUTH_VFY_CLIENT_REQ) on server failed status = 14129090
sec_rgy_pgo_add_member: bad state (dce / sec)

Finally the master server recursively (about one hour finally killed) reports:
Registry: Error - prop_driver_sleep - error from pthread_cond_timedwait

[4/2/93 public]
sec_admin] last lrep -all output:
admin> lrep -all
Default replica:  /.../soldier_cell.qadce.osf.org/subsys/dce/sec/master
Default cell:     /.../soldier_cell.qadce.osf.org


subsys/dce/sec/blueberry_sl
          Instance id: 00191644-6512-1bbc-8cc9-08002b106b00
          Addresses:               ncacn_ip_tcp:130.105.5.28[]
                                   ncadg_ip_udp:130.105.5.28[]
                    State:         unavailable - connection closed (dce / rpc)
          Propagation state:       marked for initialization

subsys/dce/sec/dce7_sl
          Instance id: 0027bb18-5f2b-1bbc-a42f-08002b24cf9f
          Addresses:               ncacn_ip_tcp:130.105.202.27[]
                                   ncadg_ip_udp:130.105.202.27[]
site
                    State:         unavailable - connection closed (dce / rpc)
          Propagation state:       ready for updates
          Last update delivered:   Fri Apr  2 10:54:34 1993
          Last update's seqno:     0.6733
          Number of outstanding updates: 5659
          Last comm status:        successful completion

subsys/dce/sec/master (master)
          Instance id: 00479294-4d15-1bbc-ba04-02608c2ff62e
          Addresses:               ncacn_ip_tcp:130.105.202.6[]
                                   ncadg_ip_udp:130.105.202.6[]
                    State:         unavailable - connection closed (dce / rpc)

subsys/dce/sec/claus_sl
          Instance id: 007e1d5a-57b3-1bbc-8b99-08002b24cf9d
          Addresses:               ncacn_ip_tcp:130.105.201.9[]
                                   ncadg_ip_udp:130.105.201.9[]
                    State:         unavailable - connection closed (dce / rpc)
          Propagation state:       ready for updates
          Last update delivered:   Fri Apr  2 10:55:42 1993
          Last update's seqno:     0.7075
          Number of outstanding updates: 5317
          Last comm status:        bad state (dce / sec)

[4/5/93 public]
Using the same test and config as described above.
The sleep errors appear to be gone, however I'm still getting a large number of
"bad state" errors shown on master and replicas, test server output:

DCE logged out as soldier_ts
sec_rgy_pgo_add: bad state (dce / sec)
sec_rgy_pgo_add failed:387063988
add_account_user: bad state (dce / sec)
        secrgy_server: Doing remove_acct, basename: blueberryA
        secrgy_server: Doing remove_acct, basename: new
sec_rgy_pgo_delete: bad state (dce / sec)
remove_acct: bad state (dce / sec)
sec_rgy_pgo_delete: bad state (dce / sec)
remove_acct: bad state (dce / sec)
        secrgy_server: Valid and certified id
        secrgy_server: network wide creds

The bad state might be tied to the initialization sequence as these started
appearing during a replica init, as described by the sec_admin -lrep all
output. Is it impossible to modify the master registry during a replica 
initialization phase?

[04/05/93 public]
The master tries to have another replica initialize a new replica.
But if the master is the only other replica, then it must init
a new replica.  When a replica (master or slave) is copying its 
database to
another replica (ie. when it is initing a replica) it cannot
accept any updates and returns the bad state error.

BTW, Did today's test run include the change I submitted on Friday?
I'm hoping that fixed the sleep problem.

[4/5/93 public]
I'm sorry I forgot to mention that this last run is with the latest 
build/includes the sleep fix. The sleep error is no longer apparent which is
why I've changed the short description above. The test however still reports
failures during stress. The test failures happen apparently because of/during
the bad state period. Additionally I'm seeing now communication errors which
were not apparent before. The test C-S is using CN with the test_drv.ksh
invoked runs. 

	The master is not the only active replica there are four replicas
available in the cell. The init of any slave however seems to effect the master
such that I begin seeing "bad state" on or about the time of an initialization. 
	Is it possible that the master performs the init if it happens to be
the only replica with current updates; all others are well behind in update seq.
number?

[4/6/93 public]
Append of Mike's suggestions and results:

sec_admin lrep -all output soon after start of test:

Default replica:  /.../soldier_cell.qadce.osf.org/subsys/dce/sec/master
Default cell:     /.../soldier_cell.qadce.osf.org


subsys/dce/sec/dce7_rep
          Instance id: 004fa9d4-d545-1bc1-b96b-08002b24cf9f
          Addresses:               ncacn_ip_tcp:130.105.202.27[]
                                   ncadg_ip_udp:130.105.202.27[]
          State:                   in service - slave
          Last update received at: Tue Apr  6 15:23:35 1993
          Last update's seqno:     0.221
          Propagation state:       ready for updates
          Last update delivered:   Tue Apr  6 15:23:35 1993
          Last update's seqno:     0.221
          Number of outstanding updates: 8522
          Last comm status:        successful completion

subsys/dce/sec/master (master)
          Instance id: 0062683a-9daa-1bc1-925e-02608c2ff62e
          Addresses:               ncacn_ip_tcp:130.105.202.6[]
                                   ncadg_ip_udp:130.105.202.6[]
          State:                   in service - master
          Last update received at: Tue Apr  6 15:57:14 1993
          Last update's seqno:     0.8750

subsys/dce/sec/claus_rep
          Instance id: 007231ca-d466-1bc1-ac11-08002b24cf9d
          Addresses:               ncacn_ip_tcp:130.105.201.9[]
                                   ncadg_ip_udp:130.105.201.9[]
          State:                   in service - slave
          Last update received at: Tue Apr  6 15:39:52 1993
          Last update's seqno:     0.3935
          Propagation state:       ready for updates
          Last update delivered:   Tue Apr  6 15:39:51 1993
          Last update's seqno:     0.3929
          Number of outstanding updates: 4814
          Last comm status:        successful completion

subsys/dce/sec/blueberry_rep
          Instance id: 0080cd5c-d538-1bc1-a774-08002b106b00
          Addresses:               ncacn_ip_tcp:130.105.5.28[]
                                   ncadg_ip_udp:130.105.5.28[]
          State:                   in service - slave
          Last update received at: Tue Apr  6 15:23:35 1993
          Last update's seqno:     0.221
          Propagation state:       ready for updates
          Last update delivered:   Tue Apr  6 15:23:35 1993
          Last update's seqno:     0.221
          Number of outstanding updates: 8522
          Last comm status:        successful completion

***************test server output on master rep (RIOS)***********************
DCE logged in as soldier_ts

DCE logged out as soldier_ts
        secrgy_server: Doing add_account dce70
sec_rgy_pgo_add: Name already exists (dce / sec)
Registry: Fatal Error - Prop task aborting
 at line 759 of file ../../../../../src/security/server/rs/rs_prop_tasks.c
Registry: Fatal Error - DT exiting with alert exception
 at line 481 of file ../../../../../src/security/server/rs/rs_main.c - 0x0000000
0 - successful completion
Registry: Fatal error in main thread; exiting
sec_rgy_pgo_add_member: connection request rejected (dce / rpc)
sec_rgy_site_open_update: connection request rejected (dce / rpc)
do_site_open_update: connection request rejected (dce / rpc)
add_account_user: connection request rejected (dce / rpc)
sec_rgy_acct_add: connection request rejected (dce / rpc)
sec_rgy_site_open_update: connection request rejected (dce / rpc)
do_site_open_update: connection request rejected (dce / rpc)
add_account_user: connection request rejected (dce / rpc)
        secrgy_server: Doing remove_acct, basename: blueberryA
sec_rgy_site_open_update: connection request rejected (dce / rpc)

******************** final sec_admin lrep -all output ********
eperkins@soldier>sec_admin -s /.../soldier_cell.qadce.osf.org/subsys/sec/dce/mas
ter                      <
Unable to bind to registry at /.../soldier_cell.qadce.osf.org/subsys/sec/dce/mas
ter
ERROR - Registry server unavailable (dce / sec)
eperkins@soldier>

Same output as above on all replicas.

[4/9/93 public]
Updated the Short Description to more accurately describe the stress test
failure we are now experiencing with replicated registries (Prop task abort).

[7/13/93 public]
This prop task aborting was later addressed in 8214.  Dup'd this to that.



CR Number                     : 7633
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security man pages
Short Description             : sec_rgy_pgo_get_members for persons: supported?
Reported Date                 : 4/1/93
Found in Baseline             : 1.0.2b15
Found Date                    : 4/1/93
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 8154
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/1/93 public]
  Thanks for the reminder to add this note.
  The man page for sec_rgy_pgo_get_members does not describe that the
passed domain may be 'sec_rgy_domain_person', in which case the routine
will attempt to return the grouplist for that principal. A look at the
code (rs_pgo.c) would indicate that this is supported, and this routine
is used for this purpose within rgy_edit . Is this an oversight in the
documentation, or is this truly an unsupported feature of this routine
and one which we should not rely upon? 
  I am raising this defect as one of our customers has a use for it in
determining the group set for a principal who has no valid account.

[4/1/93 public]
This is in fact a doc bug.  The functionality is supported - performing
this operation on a principal will return the set of groups that the
principal is a member of.  Note that this is different from the
"projlist" (or what should be set in the unix concurrent groupset
since this function will return all groups (that you can know about)
as opposed to only those groups that have been annotated as OK for
inclusion in the concurrent groupset.  (for the latter use the
sec_rgy_acct_get_proj;list function).

[7/13/93 public]
This error was fixed under the release notes CR, 8154.

[4/2/93 public]
Filled in Interest List CC with `jeff@transarc.com'

[06/08/93 public]
Changed "Fix By Baseline" field from 1.0.2 to 1.0.3.



CR Number                     : 7614
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit sends error msgs to stdout
Reported Date                 : 3/30/93
Found in Baseline             : 1.0.2
Found Date                    : 3/30/93
Severity                      : D
Priority                      : 4
Status                        : dup
Duplicate Of                  : 12476
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/30/93 public]
At times it's nice to redirect stdout to /dev/null, but to let error msgs
be displayed on the screen.  As is, this can't be easily done with rgy_edit 
because rgy_edit outputs *all* messages to stdout.
 
This is a problem with several DCE commands.  Note also OT CR #3426 (currently
marked as an enhancement.)

[8/2/93 public]

Changed to enhancement for 1.1.  Responsible -> mob.

[10/3/94 public]
Made a 'dup' of 12476, since that one has more info on other things that
would need to change if this enhancement is made.  This may not get fixed
because dcecp has replaced rgy_edit as the supported registry admin tool.



CR Number                     : 7480
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 7476,7477,7478,7479
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_name_to_unix_num
documents output parameter as long
Reported Date                 : 3/11/93
Found in Baseline             : 1.0.2
Found Date                    : 3/11/93
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 7476
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/11/93 public]

sec_rgy_pgo_name_to_unix_num documents output param. item_unix_id as
long , but the idl specifies ndr_long_int.

This doesn't port to a machine where a long is not 32 bits.
SEE CR7476

Janet

[3/15/93 public]

see 7476 and 7477



CR Number                     : 7479
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 7476,7477,7478,7480
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_pgo_id_to_unix_num
documents item_unix_id as long
Reported Date                 : 3/11/93
Found in Baseline             : 1.0.2
Found Date                    : 3/11/93
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 7476
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/11/93 public]
sec_rgy_pgo_id_to_unix_num documents output parameter item_unix_id as long
but the idl specifieds ndr_long_int.

This is not portable to a machine where long is not 32 bits.
Since this is an output parameter, their is not workaround.
SEE CR7476

janet

[3/15/93 public]

see 7476, 7477



CR Number                     : 7478
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 7476,7477,7479,7480
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_pgo_get_members
documents parameters as long, but uses then as ndr_long_int
Reported Date                 : 3/11/93
Found in Baseline             : 1.0.2
Found Date                    : 3/11/93
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 7476
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/11/93 public]

sec_rgy_pgo_get_members documents max_members, number_supplied and
number_members as long.  This is inconsistant with the idl which specifieds
then as ndr_long_int.

This doesn't port to machines where long is not 32 bits
SEE CR7476

janet

[3/15/93 public]

see 7476 and 7477



CR Number                     : 7477
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 7476,7478,7479,7480
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_acct_get_by_unix_num
documents unix_num as long
Reported Date                 : 3/11/93
Found in Baseline             : 1.0.2
Found Date                    : 3/11/93
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 7476
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/11/93 public]

sec_rgy_pgo_get_by_unix_num documents input parameter unix_num as a
long, but treats it as an ndr_long_int.  Since these are not
necessarily the same, they need to be made consistant.  

Since it is only an input parameter, their is a workaround.

janet

Add sec_rgy_pgo_unix_num_to_id and sec_rgy_pgo_unix_num_to_name to this list

[3/15/93 public]

combined all of the "long" changes into a single report - this is a 
component-wide change, no real point in having an OT report for each
occurance.



CR Number                     : 6808
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 8651
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : macro NAMED_ITEM_LEN wrong on
64 bit machines
Reported Date                 : 1/12/93
Found in Baseline             : 1.0.2b1
Found Date                    : 1/12/93
Severity                      : D
Priority                      : 3
Status                        : dup
Duplicate Of                  : 8651
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.0.3
Affected File(s)              : rsdb_pvt.h
Sensitivity                   : public

[1/12/93 public]

The size calculation in file rsdb_pvt.h macro NAMED_ITME_LEN doesn't
produce the correct results on a 64bit machine where the alignment
for the union is longword.

[1/12/93 public]

There is no such marco - I just checked security/h/rsdb_pvt.h in the 1.0.2
source tree. Please double check and update this OT report. If there is no
macro then I will cancel it.

Converted to an enhancement (and lowered in priority and severity) since it
is not an issue for the reference platforms.

[1/13/93 public]
Fixed macro name to NAMED_ITEM_LEN

I'd argue it is of high severity and priority if this problem is reflected
in the on-disk structure.  It would prevent customers from moving their
databases.  If this isn't the case, great.

[1/13/93 public]
The registry database cannot be moved directly across
platforms anyway.  The sec_salvage_db tool must be used to translate
the database to ASCII before moving to a different platform and
translating back.

[10/7/93]
This is being fixed as part of 8651. marking as duplicate



CR Number                     : 6341
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec/server
Short Description             : a fatal() call causes deadlock in server
Reported Date                 : 12/4/92
Found in Baseline             : 1.0.2
Found Date                    : 12/4/92
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 7763
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.3
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[12/4/92 public]
  In rs_lock.h, unlocking is defined with a series of CATCH,
CATCH_ALL, and ENDTRY:
	       ---- ---- ---- ---- ---- ---- ---- ----
#define UNLOCK \
    } CATCH(pthread_cancel_e) { \
        unlock(save_lock_type, save_lock_mode); \
        RERAISE; \
    } CATCH_ALL { \
        char LOCKbuf[512]; \
        sprintf(LOCKbuf, "Fatal exception while holding %s %s lock", \
                mode_string(save_lock_mode), type_string(save_lock_type)); \
        fatal(LOCKbuf); \
    } ENDTRY; \
(*) unlock(save_lock_type, save_lock_mode); \
    }
	       ---- ---- ---- ---- ---- ---- ---- ----
  If within a LOCK/UNLOCK scope, a subroutine calls fatal() to cause
that its thread to exit, raising an exit (not a cancel) exception. We
are unwound into the CATCH_ALL clause. Unfortunately, that clause also
calls fatal(), which evidently starts another exit-unwind which causes
the trailing call to unlock() to be skipped. I understand that a
FINALLY clause is required to execute that particular unlock() (see
line (*)). The starred line is actually unreachable.
  This was found after Erik (eeb) accidentally passed a zero-length
string to sec_pgy_pgo_delete() (to delete a principal). The first
fatal() occurs after get_credentials_by_unix_id() fails in
export_pgo() (get_credentials_by_unix_id() was given an id of
something like 2886142). The database lock was left stuck in
write-mode and the server began to accumulate waiters.  The chain of
command will be fully described in another defect, as a null pgo name
should have been caught earlier, perhaps by the client-side code.
 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[12/9/92 public]
Reassigned to ahop.

[12/9/92 public]
This report refers to a problem that occurs after
a call to fatal (which kills the entire secd process) has been made.
Since secd is expected to die in this case, the problem severity/priority
has been reduced to C 2.  The workaround is to avoid the bad-input
to sec_rgy_pgo_delete (this fatal bug addressed elsewhere) 
that results in a call to fatal.

The error is actually in the secd shutdown-cleanup code which
erroneously tries to promote a lock.  The UNLOCK macro should
be left as is; the (*)unlock call should not be necessary
in the fatal case.

[12/15/92 public]
  I don't understand the explanation of the 'real' error, which is
described as a lock promotion occuring in the shutdown-cleanup logic.
  (I really have to know that we are talking about the same problem.)
  What I am seeing is that the database lock was promoted before the
initial call to fatal(). It is initially obtained in RIW mode and
upgraded before modifying the rsdb. The fatal() call unwinds the stack
and executes another fatal() call in the CATCH_ALL clause of the
UNLOCK for the RIW-locked scope; this causes the existing thread to
not execute the line I flagged (*) above. The thread finally exits and
the database lock is stranded at WRITE. The server immediately begins
to jam other threads which queue up waiting for READ protection to the
database. 'gdb' reveals no other known_locks stuck after the erroneous
thread has exited.
  I cannot understand why there would not be a fix to make the above
line reachable, or to remove it. If the approach is that locks need
not be cleaned up because the image is performing a hard exit (crash),
then the LOCK/UNLOCK macros are unnecessarily complex, but more
importantly the RS isn't being crashed by the existing logic! If the
approach is that locks should be cleaned up on crash, then UNLOCK does
appear to be incorrect.
  Of equal interest would be a discussion about why errors of this
magnitude (a client-provided PGO index not being present in the rsdb)
should belly-up the entire server, as opposed to returning an error
(or even an exception) to the client-side thread. In this case, a very
modest error is geared to interrupt the security service.
  I accept that there is a workaround for this (don't send nil names
to the rs) and cannot promote this above 'C', but I do think C1 is
justified
Changed Priority from `2' to `1'

[1/4/93 public]
This is not a "high priority" defect because it is rarely encountered.
It only occurs during a call to fatal() which is only called when internal
corruption of the database indicates that further execution of secd
could cause more damage.  The above-mentioned case of bad client-input
causing a fatal() was a bug that (I'll spare you the details) looked like
database corruption; it has since been fixed.  Changed priority to 2.
Also, my initial assessment of a problem with lock promotion was wrong.
I removed the "Affected Files" entry.

Just to make sure I understand the initial defect description:
Have you seen the secd server hang after a call to fatal even outside of the
debugger?

[1/5/93 public]
  Yes, this bug is reproducible with or without the presence of GDB.
Without GDB, one can confirm the diagnosis with some confidence by
running "secd -lock_debug" . We can provide a sample application if
one is needed.
  Thanks for reviewing this problem.

[9/24/93 public]
The call to fatal() ends up in rs_task_fatal() which was fixed on 8/23/93
see defect number 7763.



CR Number                     : 6301
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : 
Unable to null optional attributes once they have been assigned a value
Reported Date                 : 12/2/92
Found in Baseline             : 1.0.1
Found Date                    : 12/2/92
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 5359
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[12/2/92 public]

In the principal domain of rgy_edit, once you assign a "Fullname" to
a principal, you can neither delete the Fullname attribute from the
principal, nor assign the null string as the value of the "Fullname"
attribute.

In the account domain, essentially the same problem exits for
the "shell" and "misc info" attributes.

rgy_edit does not seem to provide a way to reassign the "missing value"
to these attributes.

for example:

rgy_edit=> do p
Domain changed to: principal
rgy_edit=> add sally
rgy_edit=> view sally -f
sally                                        112
  Uuid:       00000070-3601-2B1D-AB00-02608C2F5DA0
  Primary:  pr   Reserved:   --
  Quota: unlimited
rgy_edit=> change
Change Principal=> Enter name: sally
Enter new name: (sally)
Enter new UNIX number: (112) cannot be changed
Enter new full name in quotes: () Sally Brown
Enter object creation quota: (unlimited)
Change Principal=> Enter name:
rgy_edit=> view sally -f
sally                                        112
  Full name:  Sally Brown
  Uuid:       00000070-3601-2B1D-AB00-02608C2F5DA0
  Primary:  pr   Reserved:   --
  Quota: unlimited
rgy_edit=> change sally
Enter new name: (sally)
Enter new UNIX number: (112) cannot be changed
Enter new full name in quotes: (Sally Brown) *** what do you enter to return to () ***
Enter object creation quota: (unlimited)
rgy_edit=>

[12/2/92 public]
You assign the null string "" if you want nothing in the field.
(ie: change sally -f "").
You should be able to do it interactively too, but there's a problem in
the command parser that's not stripping off quotes, but that's being handled
along with the \ char not working correctly in CR 5359, so I'm dup'ing this
to that one.



CR Number                     : 6286
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_key_mgmt
Short Description             : returns 'server unavailable'
Reported Date                 : 12/2/92
Found in Baseline             : 1.0.2
Found Date                    : 12/2/92
Severity                      : B
Priority                      : 3
Status                        : dup
Duplicate Of                  : 5250
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[12/2/92 public]
  The function sec_key_mgmt_manage_key() should not return with status
"registry server unavailable". Ideally, the routine would continue to
retry in hopes of finally reaching the server.
  This routine must have access to the (singular) master registry
server, agreed, and as such there will be windows of unavailablity.
The key manager should mask these windows from the application, and
never return due to rgy bind failures. By sleeping not until the
expected key expiration date, but until some large (in human
terms) interval prior to expiration, it can give the application a
window in which key management can be retried. This would make it far
less prone to service outage windows.
  A future enhancement to increase serviceability would be to have
sec_clientd check access to a master registry periodically, and inform
(via syslogd?) an adminstrator of perceived rgy service outages. The
operator could then take action to correct the problem; applications
using key management would ride out the outage by retrying for an
interval, during which timely corretive action would bring the rgy
service back, or shut the dependent application down softly if required.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[12/2/92 public]
sec_key_mgmt_manage_key is supposed to return an error if it can't do what
you told it to (if it can't talk to a registry to update the key, note that
calls to the registry retry implicitly).  You are free to wait for whatever
time period you like and try again (presumably printing an error message or
updating an audit log or whatever your server wants to do to note the problem).
If we made it just keep trying, it may sit there forever doing nothing and
you wouldn't know about it, because it didn't return an error and you're not
allowed to print errors or warnings from inside a library routine.  This defect
is cancelled.

[12/3/92 public]
  Mike, there's a strong reaction here to this cancellation. I'm
reopening this defect.
  If the key manager cannot bury transient failures from the
application's view, then it must, minimally, include the following in
the documentation:
1 - complete list of possible return values
      applications will need to know what to expect,
      in order to best handle the return of this routine
2 - classification of return values by correct reaction e.g.
      soft failure (application may progress by retrying)
      hard failure (retries useless e.g. malloc failure)
3 - recommendations (for each return code) for application's proper reaction
  The existing function description states that this routine will return
values which do not include the registry unavailable code (in particular) in
case of failure. It was surmised by developers here that the routine
would, then, not fail due to server outage.
  The existing man page should definitely change to indicate that this
routine's return is far from inevitable, and that certain returns
may indicate the need for external action (e.g. reconnect a wire to the
registry daemon).

Changed Status from `cancel' to `open'

[12/3/92 public]
It's not that it CAN'T bury transient failures, it's that it would be WRONG
to bury transient failures, because then nobody using this API would be able
to tell if there was a problem even if they wanted to.  If your complaint is
that the documentation doesn't tell you about every error that it may return,
(as your last comment above seems to say) then this is a doc bug.  I've changed
this from 'code' to 'doc'.

[12/8/92 public]
I've changed this CR to dup of 5250.  CR 5250 specifies that the 
error messages should be more thoroughly documented in message/cause/action 
format.  I think this covers this bug, but if I am wrong, please  change it's 
status back to open and supply more specific details of what should be 
changed.  CR5250 has been deferred until after 1.0.2.



CR Number                     : 6022
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit - multiple registry updates only partially succesful
Reported Date                 : 11/10/92
Found in Baseline             : 1.0.2
Found Date                    : 11/10/92
Severity                      : A
Priority                      : 1
Status                        : dup
Duplicate Of                  : 5878
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[11/10/92 public]

(osf1 1.0.4 b8)

I was going to modify the account "root" thru rgy_edit, and decided not to
in the middle, but I hit the yes values to simply row thru it, changing
nothing major:

rgy_edit=> cha
Change Account=> Enter account id [pname]: root
Enter account group [gname]:
Enter account organization [oname]:
Enter new misc info:
Enter new home directory:
Enter new shell:
Password valid [y/n]? y
Enter new expiration date [yy/mm/dd or 'none']: none
Allow account to be server principal [y/n]? y
Allow account to be client principal [y/n]? y
Account valid for login [y/n]? y
Allow account to obtain post-dated certificates [y/n]? y
Allow account to obtain forwardable certificates [y/n]? y
Allow certificates to this account to be issued via TGT authentication [y/n]? y
Allow account to obtain renewable certificates [y/n]? y
Allow account to obtain proxiable certificates [y/n]? y
Allow account to obtain duplicate session keys [y/n]? y
Good since date [yy/mm/dd or 'now']: now
Create/Change auth policy for this acct [y/n]? (n)
Change account "root system none" [y/n/g/q]? y

  I recieved the following error:

?(rgy_edit) Unable to change "root" - Operation involving multiple registry upda
tes was only partially successful (Registry Edit Kernel) (dce / sad)
?(rgy_edit)  - connection request rejected (dce / rpc)
Change Account=> Enter account id [pname]:

 and I assume it wants me to try again.

[11/10/92 public]
I assigned this to Sekhar, to figure out what kenny is really trying to report,
and clarify it.  Yes, it wants you to try again.  The change command in
interactive mode always offers to let you change another account without
having to type change again.  If you just hit return when it says "Enter acct
id [pname]" it will exit the change subcommand.  This is documented.   If you
can't get any changes to work because you keep getting "connection request
rejected" then there may be a problem, but that may have just been a problem
that's addressed in the rebinding code fixes for CR4043 (rebind wasn't taking
"connection request rejected" into account).  If that's the only problem you're
trying to report here, then just dup this to 4043.

[11/11/92 public]

>If you
>can't get any changes to work because you keep getting "connection request
>rejected" then there may be a problem, but that may have just been a problem
>that's addressed in the rebinding code fixes for CR4043 (rebind wasn't taking
>"connection request rejected" into account).

>If that's the only problem you're trying to report here, then just dup this
>to 4043.

That's the problem. Will dup.

[11/12/92 public]

This is not a dup of 4043. It is a dup of 5878. 

Since the responses to the questions in the administrative part of the change
cmd was "y" (which means some change was made to the administrative part 
because some of the questions have a default of n ). And changing the 
administrative part currently causes secd to crash . This is the same as
the problem reported in OT 5878.

I confirmed this 'theory' by having Kenny reproduce this problem (by
repeating the change cmd exactly as shown above) and verifying
that secd crashed after the error message about "connection refused"

Bumped up the severity and priority to that of 5878.



CR Number                     : 5874
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : clock skew errors not reported clearly
Reported Date                 : 10/30/92
Found in Baseline             : 1.0.2
Found Date                    : 10/30/92
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 5750
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : internal_binding.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : mason@transarc.com
Transarc Status               : open

[10/30/92 public]
Synposis:
Clock skew is expected to cause authentication problems, unfortunately it
isn't reported as skew. Consequently, diagnosing a skew problem is by 
inference. The actual problem report that I received is attached below. I 
would expect this to happen on all platforms.

-----------------------------
Another problem I noticed today was, running /etc/rc.dce on a pmax client failed
to start sec_clientd. I think sec_clientd is waiting for the 
creds/dcecred_ffffffff files and can't get them. Rebooting and 
reconfiguring the machine as a client didn't help. The problem turned 
out to be a badly out of sync system clock. The error messages from 
rgy_edit are completely non-intuitive. It says something like this.
Fixing the clock solved the problem.

?(rgy_edit) Warning - binding is not authenticated - Cant establish authentication to registry (Registry Edit Kernel) (dce / sad)
Domain changed to: principal
?(rgy_edit) Unable to add principal  "hosts/elbereth/self" - Principal quota exhausted (dce / sec)
Domain changed to: account
?(rgy_edit) Unable to add account "hosts/elbereth/self" - Principal does not exist (Registry Edit Kernel) (dce / sad)
?(rgy_edit) Unable to add key - Registry object not found (dce / sec)
?(rgy_edit) Unable to add key - Registry object not found (dce / sec)
bye.
                starting sec_clientd
sec_clientd 10/27/92 11:27:03 - Unable to register authentication info
... status 00000002 (unknown facility)

Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `mason@transarc.com' 
Added field Transarc Status with value `open'

[10/30/92 public]
This may explain a lot of other problems people have seen with sec_clientd
not communicating from a client machine, but then not being able to reproduce
the problem later...  By the way, rgy_edit has nothing to do with how it gets
reported;  All it can do is print out the errors that the auth RPC layer or
secd itself returns.

[10/11/93 public]
	Could you post the args that you gave to rgy_edit?

[10/11/93 public]
Looking at the above output again, I noticed that it's from dce_config
(so he must have been trying to configure a client machine that had a clock
that was out of sync).  Note that dce_login does seem to give the incorrect
error message when the clocks are skewed, but for some reason, dce_config
throws out dce_login error messages, so the user never sees them.  Then what
happened is rgy_edit was run without credentials, and thus defaulted to the
machine credentials, which weren't obtained yet, since sec_clientd couldn't
create them because of the clock skew.  So, the rgy_edit error messages were
ok in this case, the problem is that the dce_login failed because of clock
skew and dce_config hid the error.  Could someone at Transarc please try this
again with a recent 1.0.3 dce_config, which I believe checks clock skew before
doing anything?  Also, to correctly see if rgy_edit is reporting clock skew
in a usable manner, get credentials on a non-skewed client, then  skew it by
hand (run date xxxxx as root), then run rgy_edit and see what it gives for an
error message on why it can't get an authenticated binding.

[10/11/93 public]
This bug will be fixed when the service ability changes are made
in the 1.1 time frame.  The dcelogin messages are no longer suppressed,
in the dce_config program.



CR Number                     : 4852
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 4851
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_login_import_context returns undocumented error code.
Reported Date                 : 7/27/92
Found in Baseline             : 1.0
Found Date                    : 7/27/92
Severity                      : E
Priority                      : 4
Status                        : dup
Duplicate Of                  : 4851
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/27/92 public]

Full Description:

When sec_login_import_context(3sec) is called with the name
of an exportable login context which has not been "finalized"
by a call to sec_login_set_context(3sec), sec_login_import_context(3sec)
will return sec_login_s_no_current_context (which translates to
the following message).

"No currently established network identity for which context exists (dce /
sec)"

This possiblillity is not listed in the ERRORS section of the
sec_login_import_context.

Proposed Solution:

Correct the documentation to include this error message.

[7/28/92 public]
assigned to writer and defered to 1.0.2

[10/19/92 public]
Made this a dup of code bug 4851, since when that defect is fixed for 1.0.2,
this will no longer be a problem (that status will no longer be returned),
so you won't need to document it.

[7/6/95 public]

Reassigning this for DCE 1.2. 4851 is still open.



CR Number                     : 3480
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security/client/key_mgmt/keymgmt.c
Short Description             : In keymgmt.c, argument passed
by reference when it should not be.
Reported Date                 : 5/14/92
Found in Baseline             : 1.0
Found Date                    : 5/14/92
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 3145
Fix By Baseline               : 1.0.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/14/92 public]

Full Description:

        In function sec_key_mgmt__login, a sec_login_handle_t * is passed
        by reference to sec_login_purge_context. Passing the
        sec_login_handle_t * on its own is correct.
Proposed Solution:

        The line

        sec_login_purge_context(&lc, &lst);

        ought to be replaced by

        sec_login_purge_context(lc, &lst);

[5/14/92 public]
This is a duplicate of 3145 that was closed on 4/30/92



CR Number                     : 3072
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : sec_acl.tsh
Short Description             : security: sec_acl test #10 fails
Reported Date                 : 4/27/92
Found in Baseline             : b12
Found Date                    : 4/27/92
Severity                      : C
Priority                      : 3
Status                        : dup
Duplicate Of                  : 
Fix By Baseline               : 1.0.1
Fixed In Baseline             : 
Affected File(s)              : test/security/api/control/sec_acl.tsh
Sensitivity                   : public

[4/27/92 public]

The api sec_acl test, which is executed from
src/test/security/api/control/sec_acl.tsh, is incorrect for test case
number 6. The current file contains the following:

> test $TEST \
> "10 sec_acl_replace" \
> $SEC_ACL_REPLACE $error_status_ok \
> root -dce- $SEC_ACL_TEST_OBJ
  ^^^^
When "cell_admin" is substituted for "root" this test passes.

[4/27/92 public]
Marked 'dup' of 2893, since this is part of that problem.  Your fix
looks correct.  Go ahead and submit it if it fixed the problem for
you and the DRB lets you.  Also changed from 'code' to 'test' software.

[5/1/92 public]
I don't believe that the fix outlined above is the correct fix.
Please see my note in bug number 2893 (of which this is a dup).
If you still think that the fix should be made, please update 2893.



