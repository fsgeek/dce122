CR Number                     : 11912
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dts
Subcomponent Name             : dtsd
Short Description             : dtsd core dumping on HP
Reported Date                 : 8/26/94
Found in Baseline             : 1.1b16
Found Date                    : 8/26/94
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 11925
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/26/94 public]
bl-16
CHO cell (ie. 4 machine cell, 3 local servers - 2H, 1R, 1 clerk - H)

Copyright Hewlett-Packard Co. 1985,1987-1992. All Rights Reserved.
<<<< XDB Version A.09.01 HP-UX >>>>
Core file from:  dtsd
Child died due to: segmentation violation
Procedures:      0
Files: 0
>trace
 File: unknown    Procedure: free@libc + 0x00000008    Line: unknown
  0 free@libc + 0x00000008 (hp-ux export stub)
  1 TMEM@libdce + 0x00095d18 (0xe, 0x4002f180, 0x7af3125c, 0x802e1803)
  2 free@libc + 0x00000224 (0x483f0010, 0x400966e0, 0x40404e9c, 0)
  3 TMEM@libdce + 0x004e2a14 (0x40524ea8, 0x3, 0x40404e60, 0x4002f180)
  4 TMEM@libdce + 0x004e2de4 (0x40524600, 0xe, 0x1, 0x40524ea8)
  5 TMEM@libdce + 0x004e2c04 (0x40524600, 0x40524ea8, 0x405241c0, 0x40521ee8)
  6 TMEM@libdce + 0x004e3b18 (0x40524508, 0x40524600, 0x40404d60, 0x404b7350)
  7 TMEM@libdce + 0x004d48a8 (0x10, 0x40096660, 0x404b7350, 0x40404ce0)
  8 TMEM@libdce + 0x003008ec (0x40095d10, 0x404af8e8, 0x5, 0x2)
  9 TMEM@libdce + 0x0019d014 (0x404af820, 0x3, 0, 0)
  10 TMEM@libdce + 0x001a3268 (0x404af820, 0x40404764, 0x40404764, 0)
  11 TMEM@libdce + 0x00131c8c (0x404570f8, 0, 0x400012f0, 0x1)
  12 TMEM@libdce + 0x0010a89c (0x404570f8, 0, 0x400012f0, 0x1)
  13 ServerRequestTime + 0x00000144 (0x404570f8, 0x4052a5d0, 0x4040449c, 0x404044a0)
  14 GetTimeFromServerRPC + 0x00000194 (0x4052a5b8, 0x7af50230, 0x4002f180, 0x9ff)
  15 TMEM@libdce + 0x000d376c (0x4002f180, 0, 0, 0)

	    etc. (no other named calls in trace)

    Comments from cbrooks:
    I have seen this (intermittently) on the HP when the cell has been restarted. 
    It may be related to the user-space implementation of utc_adjtime().
    Whatever it is, it's ugly - I was trying to debug this yesterday but 
    I couldn't restart my dtsd - kept hanging in a sec_rgy_site_open() call...

[8/26/94 public]
New and better trace this time! Again, this is bl-16.

 0 priv_krb_util_concat_authdata@ + 0x0000011c (0x40513b98, 0, 0x403b7f0c, 0x403b7f08)
 1 krb5_get_cred_via_tgt@libdce + 0x000009ec (0x403b7df0, 0, 0x403b0001, 0x403b0002)
 2 krb5_get_cred_from_kdc@libdce + 0x0000097c (0x40096668, 0x403e5438, 0x403b7d60, 0x403e5438)

 3 krb5_get_credentials@libdce + 0x00000178 (0x10, 0x40096668, 0x403e5438, 0x403b7ce0)
 4 sec_krb_get_cred@libdce + 0x00000268 (0x40095d18, 0x400b8b40, 0x5, 0x2)
 5 rpc__krb_get_tkt@libdce + 0x000003d8 (0x40121fe8, 0x3, 0, 0)
 6 rpc__krb_cn_cred_refresh@libdc + 0x000004a0 (0x40121fe8, 0x403b7764, 0x403b7764, 0)
 7 rpc__cn_call_start@libdce + 0x0000018c (0x404fbf30, 0, 0x400012f0, 0x1)
 8 rpc_call_start@libdce + 0x0000025c (0x404fbf30, 0, 0x400012f0, 0x1)
 9 ServerRequestTime + 0x00000144 (0x404fbf30, 0x40517050, 0x403b749c, 0x403b74a10 GetTimeFromServerRPC + 0x00000194 (0x40517038, 0x7af50230, 0x4002de60, 0x1245)
11 cma__thread_base@libdce + 0x0000021c (0x4002de60, 0, 0, 0)
12 cma__thread_start1@libdce + 0x0000004c (0x4002de60, 0, 0, 0)
13 cma__thread_start0@libdce + 0x00000008 (0x4002de60, 0, 0, 0)
14 priv_krb_util_concat_authdata@ + 0x0000011c (0, 0, 0, 0)
15 _end + 0x0001d288 (Address not found (UE302)

[8/29/94 public]
Looks like a smoking gun pointed at security...
This may be a duplicate of another cred refresh bug I seem to remember.
Added the security people to the CC list and hopefully they will comment.

[8/29/94 public]
The traceback above looks similar to the CR 11925 where it fails in the
routine priv_krb_util_concat_authdata(). This is probably the same problem.
I'm duping it to CR 11925 for now.



CR Number                     : 11524
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dts
Subcomponent Name             : dce_shutdown
Short Description             : dce_config hung in shutting down dtsd using the dcecp command
Reported Date                 : 8/2/94
Found in Baseline             : 1.1
Found Date                    : 8/2/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 11506
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/2/94 public]

This is a problem with dce_shutdown. 

Our daily process for the smoke test is:

    run core smoke test
    run multi-machine smoke test

So, dce_config was used to install and configure the core smoke test.
Then, dce_config is used again to install and configure the multi-machines
smoke test.  So, in this step, dce_config will try to do a remove of all
existing installations.  

On the hp800 platform, the core smoke test has successfully been installed
and configured.  When we tried to configure the multi-machines smoke test,
dce_config hang.  dce_config.log is as followed:

S:****** Attempting to remove all remnants of previous DCE installations for all components...
DEBUG:     Executing: ./dce.rm install
DEBUG:     Executing: get_pid(dced)
DEBUG:     dce_shutdown: Executing: ./dfs.clean
V:         dfs.clean: Stopping DFS daemons.
DEBUG:     Executing: daemon_slayer(bosserver)
DEBUG:     bosserver can't be killed, not running
V:         dfs.clean: Executing: sleep 5
V:         dfs.clean: Successfully stopped all DFS daemons.
DEBUG:     Stopping DCE daemons...
D:         dce_shutdown: Executing dcecp -c "dts deactivate ; dts stop"

The 'dcecp -c dts deactivate ; dts stop' was hung for two hours.  
ps -aedfl shows the following:

  1 S    root  3899  3824  4 154 24  2139840  477   23b180 07:49:19 ?        0:01 dcecp -c dts deactivate ; dts stop
  1 S    root  3409     1  0 154 20  2139980 2764   23b180 04:41:20 ?        0:21 dtsd -s

When I manually kill dtsd and the dcecp processes, I get an extra line
in the dce_config.log saying:

D:         dce_shutdown: Executing cdscp disable clerk

When I manually kill the cdscp and cdsclerk processes, I get an extra
line in the dce_config.log saying:

D:         dce_shutdown: Executing cdscp disable server

I did another manually kill of all the cds processes, and I get an
extra line in dce_config.log saying:

D:         dce_shutdown: Executing dcecp -c registry stop ncacn_ip_tcp:localhost
 
I think you get the idea, I am NOT going to continue anymore.

Good luck
thanks
annie

[8/2/94 public]
The dcecp 'stop' commands (like dts stop) politely ask the daemon to
stop. If the daemon is wedged, and doesn't respond, dcecp just sits
and waits for the RPC to complete. This is what 'dce_shutdown -f' was
designed for.

Is there a way to have an RPC only wait for a specified amount of
time before returning regardless of the server's response?

[8/2/94 public]
"When CDS is hosed, everyone is hosed."

I believe this is a dup of 11506, and when that gets fixed (ie cds works
consistantly) this will go away.

and John is correct, to shutdown a hosed cell, you must use -f.

[8/3/94 public ]

+ cd /mnt/opt/dce1.1/etc
+ ./dce_config -c /u1/RAT_tools/mult_mach_configs/budapest_secr_cdsr_ds.cmd -e /u1/RAT_tools/mult_mach_configs/budapest_secr_cdsr_ds.env -i


S:****** Attempting to remove all remnants of previous DCE installations for 
         all components...


  Hung at this point removing remnants 40 minutes

[8/3/94 piblic]
This is consistant with dce_shutdown hanging is the cell is hung.
The script assume things are working, if they aren't, human intervention
is required (ie you typeing dce_shutdown -f before re-config).



CR Number                     : 10930
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dts
Subcomponent Name             : port_gd
Short Description             : Doc references a non-existing file
Reported Date                 : 6/10/94
Found in Baseline             : 1.0.3
Found Date                    : 6/10/94
Severity                      : D
Priority                      : 3
Status                        : dup
Duplicate Of                  : 10867
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/10/94 public]

The DCE (1.0.3) Porting and testing guide (in the time section) mentions
the script test_dtscp_ultrix.sh which is suppsoed to be under 
src/test/time/control. This file does not exist in the code. 

Of course anything to do with ultrix does not exist any more. The doc 
should be modified.

I tried to see if the 1.1 doc has the same problem, but I don't see port_gd
under dcedoc-latest/dce-books/, although I do see it under
dcedoc-latest/Unused/src.old/.

So if port_gd will still be part of 1.1 doc, check it. Otherwise, cancel this
OT.

[6/10/94 public]
Charlie Brooks already opened a defect on this.
The dtscp_test_ultrix.sh file was replaced in 1.0.3



CR Number                     : 10902
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : dts
Subcomponent Name             : 
Short Description             : dtsd dies on startup
Reported Date                 : 6/8/94
Found in Baseline             : 1.1b10
Found Date                    : 6/8/94
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10897
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/8/94 public]
dtsd dies on startup with the following message:

S:****** Configuring DTS Local Server...
S:****** Waiting for node self-identity to be established...
S:****** Starting dtsd...
Exception: fault invalid tag (dce / rpc)
S:****** Starting dtstimed...
S:****** This node is now a DTS local server.

This is only on the HP.

Code from 6/7/94 nightly build.

[6/8/94 public]
Starting dtsd by hand again worked.

[6/8/94 ]

This bug was reported earlier this morning.



CR Number                     : 10839
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dts
Subcomponent Name             : time/zones
Short Description             : Zoneinfo files should be defuncted
Reported Date                 : 6/2/94
Found in Baseline             : 1.1
Found Date                    : 6/2/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10449
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/2/94 public]

Hi Charlie,

The comment leader for the following files are incorrect:

       ./time/common/localtime #
       ./time/common/posixrules    #
       ./time/zones/Australia/LHI  #
       ./time/zones/Australia/NSW  #
       ./time/zones/Australia/North    #
       ./time/zones/Australia/Queensland   #
       ./time/zones/Australia/South    #
       ./time/zones/Australia/Tasmania #
       ./time/zones/Australia/Victoria #
      ./time/zones/Australia/West #
      ./time/zones/Australia/Yancowinna   #
      ./time/zones/Brazil/Acre    #
      ./time/zones/Brazil/DeNoronha   #
      ./time/zones/Brazil/East    #
      ./time/zones/Brazil/West    #
      ./time/zones/Canada/Atlantic    #
      ./time/zones/Canada/Central #
      ./time/zones/Canada/East-Saskatchewan   #
      ./time/zones/Canada/Eastern #
      ./time/zones/Canada/Mountain    #
      ./time/zones/Canada/Newfoundland    #
      ./time/zones/Canada/Pacific #
      ./time/zones/Canada/Yukon	#

These files are data files and SHOULD NOT have any comment leaders.

Since the comment leaders is the only way I used to detect whether
the DCE COPYRIGHT should be presented or not, this cause problems
when doing COPYRIGHT expansion.

One can change the comment leader as followed:

    bcs -c "NONE" <filename>

Do you want me to go ahead and do this?

Let me know when you are done so that I can remove this from my
list.

thanks
annie

[6//94 public]
These files need to be defuncted from the tree.
They are useless and copies get generated from the zic files in 
src/time/zoneinfo for installation.

[7/16/94 public]

Changed to a duplicate of 10449, since defuncting these files will 
effectively remove the "missing comment leader" problem.



CR Number                     : 10700
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000,hppa,i486
S/W Ref Platform              : osf1,aix,hpux
Component Name                : dts
Subcomponent Name             : time/service/dts_provider_util.c
Short Description             : "PATH_MAX" undefined
Reported Date                 : 5/19/94
Found in Baseline             : 1.1
Found Date                    : 5/19/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10698
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : dts_provider_util.c
Sensitivity                   : public

[5/19/94 public]

cc: "/project/dce/build/dce1.1-snap/src/time/service/dts_provider_util.c", line\
 34: error 1588: "PATH_MAX" undefined.
cc: "/project/dce/build/dce1.1-snap/src/time/service/dts_provider_util.c", line\
 34: error 1502: Array size must be a constant expression.
*** Error code 1

[5/19/94 public]
Already opened a bug on this and fixed it.



CR Number                     : 10652
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa,i486,rs6000
S/W Ref Platform              : hpux, osf1, aix
Component Name                : dts
Subcomponent Name             : /test/time/service
Short Description             : `build_all' not remade because of errors.
Reported Date                 : 5/16/94
Found in Baseline             : 1.1
Found Date                    : 5/16/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 10656
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/16/94 public]

[ /test/time/service at 01:34 (AM) Sunday ]
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1
[ /test/time/control at 01:34 (AM) Sunday ]
`build_all' not remade because of errors.
*** Error code 1

[5/16/94 public]
This is a dup of 10656:

`build_all' not remade because of errors.



CR Number                     : 10584
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : dts
Subcomponent Name             : 
Short Description             : utc_cvt.c is not compilable with gcc flags
Reported Date                 : 5/9/94
Found in Baseline             : 1.1b8
Found Date                    : 5/9/94
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10457
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : time/common/utc_cvt.c
Sensitivity                   : public

[5/9/94 public]
Setting the gcc clean-up flags :
	-ansi -pedantic -Wchar-subscripts -Wcomment -Wformat
	-Wid-clash-32 -Wimplicit -Wmissing-prototypes -Wreturn-type
	-Wstrict-prototypes -Wswitch -Wunused -Wtrigraphs
prohibits compilation of time/common/utc_cvt.c :


/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:109: warning:
function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:110: warning:
function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:111: warning:
function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:112: warning:
function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:147: warning:
function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:147: warning:
function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c: In function `
utc_asclocaltime':
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:327: warning:
implicit declaration of function `utc_settdf'
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c: In function `
utc_ascanytime':
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:417: parse err
or before `if'
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c: At top level:
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:432: parse err
or before `;'
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c: At top level:
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:540: parse err
or before `else'
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:591: warning:
function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:1789: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:1949: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:1998: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:2382: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:2513: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:2637: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:2677: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:2765: warning:
 function declaration isn't a prototype
/project/dce/build/dce1.1-baseline/bl-8/src/time/common/utc_cvt.c:2774: warning:
 function declaration isn't a prototype
*** Error code 1

[5/09/94 public]
This is a dup. This fix is part of code cleanup.



CR Number                     : 10204
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : dts
Subcomponent Name             : 
Short Description             : fix /* warning message
Reported Date                 : 3/22/94
Found in Baseline             : 1.1
Found Date                    : 3/22/94
Severity                      : E
Priority                      : 4
Status                        : dup
Duplicate Of                  : 10457
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : time/common/dtssmsg_ultrix.h
Sensitivity                   : public

[3/22/94 public]
If you build dtssmsg_ultrix.h with the coding style guide switches to gcc,
you get a warning :

  time/common/dtssmsg_ultrix.h:100: warning: `/*' within comment

This comes (rather humorously) from the following line:

/*  *14    3-JUL-1991 11:35:20 COMUZZI "Eliminated /* embedded in a comment" */

[5/10/94 public]
This will be taken care of as part of code cleanup. There is little 
value in having a separate CR for each of the thousands of warnings
that will be fixed as part of code cleanup.



CR Number                     : 10146
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dts
Subcomponent Name             : 
Short Description             : export dtss_includes.h & add dce/
Reported Date                 : 3/16/94
Found in Baseline             : 1.1
Found Date                    : 3/16/94
Severity                      : D
Priority                      : 2
Status                        : dup
Duplicate Of                  : 10457
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : dtss_includes.h, common/Makefile
Sensitivity                   : public

[3/16/94 public]
dcecp uses some time header and idl files.  Not surprisingly since it is
recreating dtscp fucntionality.  As such, there are now some files in
src/time that were internal, that are now required by another component.
There are two things this bug covers:

 * dtss_includes.h should be exported to /usr/include/dce.  
   Note that this says exported, not installed.

 * dtss_includes.h should include dcedtsmsg.h with dce/.  
   dcedtsmsg.h is already being exported during the SAMIDL pass.

These changes will mean that dcecp can be build with just a populated
exported tree.  Currently we have to do a build in time/common so that we
can get files from the obj/<machine>/time/common tree.  A bad thing to do.

I made these changes and could build dcecp on an HP.  I did not try
building time (but it should work :-)

[03/16/94 public]
Don't do this.  dtss_includes.h defines no interfaces, it only
includes other header files and some of them are very random and
totally related to building DTS, not talking to it.  I mean,
<fcntl.h>, really now...

The file should NOT have dcedtsmsg.h; only those files that care about
status codes should #include it.  I had to be very careful about
the ordering of files in order to get dce_msg_define_msg_table to
compile.  I consider this further evidence in favor of point 1.

[5/25/94 public]
The DTS headers will be reorganized under code cleanup but dtss_includes.h
will not be exported.



CR Number                     : 9798
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dts
Subcomponent Name             : ./time/common
Short Description             : include file dcedtsmsg.h missing
Reported Date                 : 1/22/94
Found in Baseline             : 1.1
Found Date                    : 1/22/94
Severity                      : A
Priority                      : 0
Status                        : dup
Duplicate Of                  : 9708
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1
Affected File(s)              : time_support.c
Sensitivity                   : public

[1/22/94 public]
Errors in the build of Friday night, Jan 21, 1994:

/project/dce/build/dce1.1-snap/src/time/common/time_support.c
Processing include file
/project/dce/build/dce1.1-snap/src/time/common/dtss_includes.h 
    1501-106: (S) Include file dcedtsmsg.h not found.
*** Error code 1

/project/dce/build/dce1.1-snap/src/time/common/arith.c
Processing include file
/project/dce/build/dce1.1-snap/src/time/common/dtss_includes.h
    1501-106: (S) Include file dcedtsmsg.h not found.
*** Error code 1

/project/dce/build/dce1.1-snap/src/time/common/dtss_error_unix.c
Processing include file
/project/dce/build/dce1.1-snap/src/time/common/dtss_includes.h
    1501-106: (S) Include file dcedtsmsg.h not found.
*** Error code 1

[ rrizzo 1/24/94 public ]

This OT duplicates OT 9804 which was filed against a more recent build
so I'm closing this one.

[01/24/94 public]
Marked it dup, not closed.



CR Number                     : 7948
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : dts
Subcomponent Name             : 
Short Description             : /etc/rc.dts fails to get machine
context while executing dtscp.
Reported Date                 : 5/6/93
Found in Baseline             : 1.0.2b23
Found Date                    : 5/6/93
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 7547
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 1.0.2
Affected File(s)              : 
Sensitivity                   : public

[5/6/93 public]

Bringing up dtsd from /etc/rc.dce gives the following messages:
warning - DTS control program is not authenticated:
        auth ticket expired (dce / rpc)
error executing command:
        must have write permission to the DTS entity (dce / dts)
        *** dtsd did not configure properly

This failure occures when the ticket granting ticket for the login
principal expires.  If I dce_login as cell_admin, kill the DCE daemons,
and wait until the ticket granting ticket for cell_admin expires, then
execute /etc/rc.dce dts will not configure properly.

dtscp inherits the login context instead of the machine context so 
/etc/rc.dts fails to configure properly when the login context's 
ticket granting ticket expires.

The solution is not to have dtscp inherit the machine context since
joe user may be able to make modification that will violate other users.

One solution is to unset the KRB5CCNAME environment variable in /etc/rc.dts
so that dtscp can configure dts correctly.  This allows dtscp to 
configure using the machine context instead of the login context.  This
fix allows dts to configure properly and retains dtscp security.

[05/25/93 public]
Actually, I added a 'fix' to /etc/rc.dce to prevent this problem:
----------------------
#       Bug 7547:
#        - Protect the user from starting DCE while in a dce_login shell.
#       [1993/03/19  19:02:29  tom]

# Try to help the user
if [ -n "$KRB5CCNAME" ]
then
        echo "Warning - KRB5CCNAME environment variable set."
        echo "Possibly in an invalid dce_login shell, exit before starting DCE."
        exit 1
fi
------------------------

This will prevent the problem you describe above.
I am dup-ing this to bug 7547, please re-open if you feel this will
not fix the problem.



CR Number                     : 6285
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : dts
Subcomponent Name             : 
Short Description             : dtsd does not reliably start upon reboot
Reported Date                 : 12/2/92
Found in Baseline             : 1.0.2
Found Date                    : 12/2/92
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 6102
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[12/2/92 public]
After configuring DCE and DFS for DFS smoke tests, if I reboot the RIOS
and invoke /etc/rc.dce, the attempt to run dtsd sometimes produces the
following messages:

dtscp cannot get rpc binding to dts daemon - reason:
        connection closed (dce / rpc)
error executing command:
        time service has not been created (dce / dts)

This doesn't happen every time, but I have seen it fairly often.  Just now,
when it happened, I invoked /opt/dcelocal/bin/dtsd myself, and it returned
without producing any more messages.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[12/2/92 public]
Changed Component Name from `dfs' to `dts' 
Changed Subcomponent Name from `dts' to `' 
Changed Responsible Engr. from `bwl@transarc.com' to `' 
Changed Resp. Engr's Company from `tarc' to `'

[12/2/92 public]

[12/2/92 public]
Filled in Interest List CC with `bb+transarc.afs.ot-notices@transarc.com'

[12/2/92 public]
This is a duplicate of CR #6102.
I am currently investigating it.
A short term fix would be to add a sleep for, say, 10 seconds in /etc/rc.dce
after it starts up dtsd, but before it runs the commands in /etc/rc.dts.  
Dtsd, however, has code which should make this a silly thing to have.  
It is unclear why this code is not working.



CR Number                     : 3209
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dts
Subcomponent Name             : src/time/common/utcapi.c
Short Description             : DTS...utc_mkgmtime accepts invalid tm struct (e.g. tm_sec = -1)
Reported Date                 : 5/2/92
Found in Baseline             : 1.0
Found Date                    : 5/2/92
Severity                      : B
Priority                      : 2
Status                        : dup
Duplicate Of                  : 
Fix By Baseline               : 1.0.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/2/92 public]

Full Description:

  No checking on the range of each individual member of the tm structure.
  For example, utc_mkgmtime() accepts a time structure with tm_sec = -1
  and returns a utc binary time.

  The expected result in this case is utc_mkgmtime() returns -1.


Proposed Solution:

 Add parameter checking in the mergetime routine called by utc_mkgmtime.



/*
 *++
 *  mergetime()
 *
 *  Functional Description:
 *
 *      Merges a time in a tm struct into a 64-bit time
 *
 *  Inputs:
 *
 *      tm - pointer to tm struct which contains time
 *      tns - longword which contains nanosec of time
 *
 *  Implicit Inputs:
 *
 *
 *  Outputs:
 *
 *      timep - pointer to 64-bit time value
 *      seconds - pointer to 64-bit seconds since UNIX epoch
 *                (used for TDF calculations)
 *
 *  Implicit Outputs:
 *
 *
 *  Value Returned:
 *      0 - if the operation is successful                    <== NEW*
 *          if seconds is NULL, no value returns in seconds   <== NEW*
 *          and timep                                         <== NEW*
 *      operation fail if there is no tm input                <== NEW*
 *
 *  Side Effects:
 *
 *
 *--
 */
static int mergetime(tm, tns, timep, seconds)

struct tm *tm;
long tns;
UTCValue *timep;
UTCValue *seconds;

{
    long        year, month, days;

    if (tm == NULL) {                 /* any tm input ?       <== NEW*/
DBG(("mergetime: err tm is NULL\n"));                      /*<== NEW*/
       return(-1);                    /* error if none        <== NEW*/
    }                                                      /* <== NEW*/

    year = tm->tm_year + 1900;
    if (year < -27646 || year > 30809) {                   /* <== NEW*/
DBG(("mergetime: err year out of range\n"));               /*<== NEW*/
        return(-1);
    }                                                      /* <== NEW*/

    month = tm->tm_mon + 1;
    days = tm->tm_mday + 365*(year - 1) + (year - 1)/4;
    if (year > 1582 ||
        (year == 1582 && (month > 10 ||
                          (month == 10 && tm->tm_mday > 14)))) {
        days += - (year - 1)/100 + (year - 1)/400;
        days -= GREGORIAN_OFFSET;
    } else {
        if (year == 1582 && month == 10 &&
            tm->tm_mday > 4 && tm->tm_mday < 15) {         /* <== NEW*/
DBG(("mergetime: err invalid 1582 date\n"));               /*<== NEW*/
                return (-1);
             }                                             /* <== NEW*/
        days -= JULIAN_OFFSET;
    }

/*  if (month > 2 && IsLeapYear(year))         (Ref P00188)   <== NEW*/
/*      days += 1;                             (Ref P00188)   <== NEW*/
    if (days > 0) {                        /* -ve days ?      <== NEW*/
       if (month > 2 && IsLeapYear(year))  /* leap year ?     <== NEW*/
          days += 1;                       /* add day if req  <== NEW*/
    } else {                               /* +ve day         <== NEW*/
       if (month <= 2 && IsLeapYear(year)) /* leap year ?     <== NEW*/
          days -= 1;                       /* dec day for -ve <== NEW*/
    }                                      /* (-ve day)       <== NEW*/
    days += monthToDays[tm->tm_mon];

    if (seconds == NULL)              /* if output nothing    <== NEW*/
       return(0);                     /*    return            <== NEW*/
    emul(days, SECS_PER_DAY, seconds);
    UTCiAdd(seconds, (tm->tm_hour * MINS_PER_HOUR +
                      tm->tm_min) * SECS_PER_MIN +
                      tm->tm_sec, seconds);

    if (timep != NULL) {              /* output timep ?       <== NEW*/
       UTCiMul(seconds, K_100NS_PER_SEC, timep);
       UTCiAdd(timep, (tns + 50)/100, timep);
    }                                 /* (output timep)       <== NEW*/
    UTCadd(seconds, &diff_UTC_UNIX_secs, seconds);

    return(0);
}
/* End of routine mergetime */

[5/5/92 public]

    This is an EXACT duplicate of defect 2832. I've changed it Status,
    duplicate. FURTHER, I strongly feel this is a completely inappropriate
    fix. It reduces performance and generates behaviour which is incompatible
    with UNIX mktime. This defect should be canceled.



CR Number                     : 3188
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dts
Subcomponent Name             : dtsd
Short Description             : DTS...A Clock Drift of zero causes a divide-by-zero condition [Could be related to CR# 2862]
Reported Date                 : 4/30/92
Found in Baseline             : 1.0
Found Date                    : 4/30/92
Severity                      : C
Priority                      : 2
Status                        : dup
Duplicate Of                  : 
Fix By Baseline               : 1.0.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/30/92 public]

One Line Description:

    A Clock Drift of zero causes a divide-by-zero condition

Full Description:

    No check performed against ClockDrift = 0 in routine ReadHwclkParams
    that can cause divide by zero condition.

Proposed Solution:

In src/time/service/clock_adjust_ultrix.c

 *
 * Description:
 *
 *     Read the hardward clock parameters drift and resolution.
 *
 * Inputs:
 *
 *      none
 *
 * Outputs:
 *
 *     clockResolution -  the resolution of the clock in nano seconds
 *     clockDrift - the maximum clock drift in parts per billion (10**9).
 *
 * Return Value:
 *
 *      none
 *
 */
StatusBlk ReadHWclkParams(clockResolution,clockDrift)
unsigned long *clockResolution;
unsigned long *clockDrift;
{
union adjunion Adj;
StatusBlk statusBlk;

    if (utc_adjtime (getresolution, &Adj)) {
        statusBlk.status = K_SYS_ERROR;
        statusBlk.sysStatus = errno;
        return( statusBlk );
    }

    *clockResolution = Adj.resolution;           /* in NS */

    if (utc_adjtime (getdrift, &Adj)) {
        statusBlk.status = K_SYS_ERROR;
        statusBlk.sysStatus = errno;
        return( statusBlk );
    }

    if (Adj.maxdrift)                 /* avoid div by 0      <== NEW */
       *clockDrift = K_ONE_BILLION / (unsigned long int)Adj.maxdrift;
                                      /*  In PPB             */
    ReturnDTSSstatus(DTSS_SUCCESS, statusBlk);

}

[5/4/92 public]
This is a duplicate of CR 2140. Please close it.



CR Number                     : 2862
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dts
Subcomponent Name             : src/time/service/dtss_service_main.c
Short Description             : DTS...Divide-by-zero situation.
Reported Date                 : 4/17/92
Found in Baseline             : 1.0
Found Date                    : 4/17/92
Severity                      : B
Priority                      : 1
Status                        : dup
Duplicate Of                  : 
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/17/92 public]

Full Description:

        The function ScheduleNextSynch() uses the value of the hardware
        clock's drift as a divisor to calculate the reciprocal of the
        maximum drift. The drift value is obtained via calls to
        utc_adjtime(). Default values are are set in utc_adjtime() and
        can be overridden by an external source.

        During initalization of the Server/Clerk, InitializeService()
        calls ReadHWclkParams() to obtain the clock drift value.
        ReadHWclkParams() calls utc_adjtime() to obtain the drift value.
        If the call fails, ReadHWclkParams() returns an error to
        InitializeService(). If the call succeeds, the value of the clock
        drift is updated in the synchronization database (sdb).
        Unfortunately, InitializeService() does not check the
        return value from ReadHWclkParams() and proceeds with
        initialization, although the value of the clock drift value in
        the sdb could be zero.

        When a synchronization completes, ScheduleNextSynch() is called
        and uses the clock drift value in the sbd as a divisor. If this
        value is zero, a divide-by-zero condition ocurs and the thread
	

Repeat the problem by:


        - error creating shared memory in utc_adjtime()
            - shmget() failure
        - error locking shared memory in utc_adjtime()
            - semop() failure

Proposed Solution:

        - check the return value of ReadHWclkParams() and exit
          initialization if an error occurs.

                             OR

        - set default values for sbd clock drift so that a failure
          does not cause the value to remain zero.

[5/5/92 public]

 This is a duplicate of CR 2140. I'm changing this to duplicate.

[10/19/92 public]
Changed priority = 1 for all bugs > 6 months old.



CR Number                     : 2851
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : dts
Subcomponent Name             : src/time/control/prscmd.c & src/time/control/dtsprs.c
Short Description             : DTS...DTSCP does not recognize low case characters.
Reported Date                 : 4/17/92
Found in Baseline             : 1.0
Found Date                    : 4/17/92
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 3496
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/17/92 public]

        DTSSCP command processor did not recognize low case character
        set when DTSSCP was running in EBCDIC machine.
        DTSSCP command processor supported only ASCII character set.
        When verifying valid characters range it assumed ASCII
        character or code page.  This caused the code very machine
        dependent.

Proposed Solution:

        The code should not be machine dependent.  One may use
        standard C library function isxxxx macro to check for
        character type. For instance under SAA standard, we can use
        isxdigit macro to verify a valid hex digit or character
        (0..9, A..F, a..f).  For the full detail on SAA standards or
        supported macro library please refer to SAA Common Programming
        interface C Ref - level 2 chapter 10 page 257.

        Note that If we were using C macro is isalnum to isxdigit
        macros, character type difference would be handled by C
        library and hence the code would not be function for ASCII
        machine only.

        Another alternative is to use code page table for different
        National Language (Please refer to previous append of BUG
        REPORT for National Language Support NLS).

        The following are suggested changes to the codes:

  =====> prscmd.c <======

struct prs *context;
int base;
{
  ....
    if (base == 10)
    {
        while (isdigit(*work_element))       /* Is digit   @P000262KN*/
        ....
    if (base == 16)
    {
/*      while ( ((*work_element >= '0') && (*work_element <= '9')) ||  */
/*               ((*work_element >= 'A') && (*work_element <= 'F')) || */
/*               ((*work_element >= 'a') && (*work_element <= 'f')) )  */
        while (isxdigit(*work_element))      /* hex digit  @P000262KN*/
        {
            context->num <<= 4;
            if (isdigit(*work_element))      /* begin digit@P000262KN*/
        ....
}

static int pr_cmatch(char_address, list_address, alpha_match, case_match)
char *(*char_address);
char *(*list_address);
int alpha_match;
int case_match;
{ 
....
/* if ((alpha_match == 0) && (*list_char >= 'A') && (*list_char <= 'Z'))*/
        if ((alpha_match == 0) && (isupper(*list_char))) /*@P000262KN*/
        {
           ....
                case 'A':
/*      if ((upper_char >= 'A') && (upper_char <= 'Z')) got_match = YES;*/
                        if (isupper(upper_char))         /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
                case 'D':
/*      if ((*user_char >= '0') && (*user_char <= '9')) got_match = YES;*/
                        if (isdigit(*user_char))         /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
                case 'H':
/*      if ((*user_char >= '0') && (*user_char <= '9')) got_match = YES;*/
/*      if ((upper_char >= 'A') && (upper_char <= 'F')) got_match = YES;*/
                        if (isxdigit(*user_char))        /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
                case 'L':
/*      if ((*user_char >= 'a') && (*user_char <= 'z')) got_match = YES;*/
                        if (islower(*user_char))         /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
                case 'N':
/*      if (upper_char > ' ') got_match = YES; */
                        if (isgraph(upper_char))         /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
                case 'P':
/*      if ((*user_char > ' ') && (*user_char < '0')) got_match = YES; */
/*      if ((*user_char > '9') && (*user_char < 'A')) got_match = YES; */
/*      if ((*user_char > 'Z') && (*user_char < 'a')) got_match = YES; */
/*      if ((*user_char > 'z') && (*user_char < DEL)) got_match = YES; */
                        if (ispunct(*user_char))         /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
                case 'S':
/*      if ((*user_char <= ' ') && (*user_char > '\0')) got_match = YES;*/
                        if ((iscntrl(*user_char)         /*@P000262KN*/
                             || isspace(*user_char))     /*@P000262KN*/
                            && *user_char != '\0')       /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
                case 'U':
/*      if ((*user_char >= 'A') && (*user_char <= 'Z')) got_match = YES;*/
                        if (isupper(*user_char))         /*@P000262KN*/
                           got_match = YES;              /*@P000262KN*/
        ....
/*  if (upper_char > ' ')       user_char++; */
    if (isgraph(upper_char))                             /*@P000262KN*/
       user_char++;                                      /*@P000262KN*/
    else
       user_char = pr_nonblank(user_char);
    ....
}

static int pr_upper(character)
register char character;
{
/*  register int result;                                                     */
/*                                                                           */
/*  if ((character >= 'a') && (character <= 'z')) result = character & 0337; */
/*  else                                          result = character & 0377; */
/*                                                                           */
/*  return (result);                                                         */
    return ( (int) ((islower(character))                 /*@P000262KN*/
                         ? toupper(character)            /*@P000262KN*/
                         : (int) character) );           /*@P000262KN*/
}

static char *pr_nonblank(string)
register char *string;
{
/*  while ((*string <= ' ') && (*string > '\0')) string++; */
    while ((iscntrl(*string) || isspace(*string))        /*@P000262KN*/
           && *string != '\0')                           /*@P000262KN*/
       string++;                                         /*@P000262KN*/
    return (string);
}

  =====> prs.c   (Ref PTR 262 or PTR 290) <======
static int trn_file()
{
 ....
/*
 *          if ( (*pnt1 < ' ') || ((*pnt1 > 0x7E) && (*pnt1 < 0xA0)) )
 */
            if ( !(isspace(*pnt1) || isgraph(*pnt1)) )   /*@P000262KN*/
            {                                            /*@P000262KN*/
                printf("Illegal control character in text (octal code = %o).\n",
*pnt1);
                dis_err(pnt1);
                *pnt1 = ' ';
            }
 ....
}

static char trn_upper(cc)
register char   cc;
{
/*      if (cc >= 'a' && cc <= 'z')  return (cc &= 0xDF);   */
/*      return (cc);                                        */
    return ( (char) ((islower(cc)) ? (char) toupper(cc)  /*@P000262KN*/
                                   : cc) );              /*@P000262KN*/
}

static long trn_number(min0, max0, trm0)
long min0;
long max0;
char trm0;

{
   ....
        if (base == 10)
        {
/*          if ((*cp < '0') || (*cp > '9'))              */
            if (!(isdigit(*cp)))                         /*@P000262KN*/
                break;
        }

        if (base == 16)
        {
/*          if ((*cp < '0') || (trn_upper(*cp) > 'F'))   */
/*                break;                                 */
/*                                                       */
/*          if ((*cp > '9') && (trn_upper(*cp) < 'A'))   */
/*              break;                                   */
/*                                                       */
/*          if (*cp > '9')                               */
/*          {                                            */
/*              *cp = trn_upper(*cp) - 'A' + '9' + 1;    */
/*          }                                            */

            if (!(isxdigit(*cp)))                        /*@P000262KN*/
               break;                                    /*@P000262KN*/

            if (isalpha(*cp))                            /*@P000262KN*/
               *cp = trn_upper(*cp) - 'A' + '9' + 1;     /*@P000262KN*/
        }
   ....
}

static int add_string(off0, typ0)
int off0;
int typ0;
{
   ....
/*      case 6: if ( (*pnt0 < '0') || (trn_upper(*pnt0) > 'Z') ||  */
/*                  ((*pnt0 > '9') && (trn_upper(*pnt0) < 'A')) )  */
        case 6: if (!(isalnum(*pnt0)))                   /*@P000262KN*/
                ....
}

static int chk_match(key0, trm0, len0)
register char *key0;
char trm0;
int  len0;
{
   ....
/*  if ( ((trn_upper(*str0) >= 'A') && (trn_upper(*str0) <= 'Z')) || */
/*       ((*str0 >= '0')            && (*str0 <= '9')) )             */
    if (isalnum(*str0))                                  /*@P000262KN*/
   ....
}

[5/5/92 public]

 Support for EBCDIC character sets is not a goal of DCE 1.0. This is an
 enhancement. This defect should have it's priority changed to `E5' and
 be marked enhancement.

[Baryiames 5/12/92]
 I put the required changes into prscmd.c, and that has been bsubmitted.
 But dts does not control prs.c to complete the fix.

[05/12/92 public]
    The file directory/cds/control/prs.c should be upgraded to
    use the <ctype.h> macros.  Changed area to DTS.

[05/14/92 public]
 Defect 3496 describes the problem and assigns it to the proper section,
 so I'm closing this as a dup, even though it's earlier.

[10/19/92 public]
Changed priority = 1 for all bugs > 6 months old.



CR Number                     : 2793
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : dts
Subcomponent Name             : 
Short Description             : Bad facility generated
Reported Date                 : 4/15/92
Found in Baseline             : 1.0.1b11
Found Date                    : 4/15/92
Severity                      : C
Priority                      : 1
Status                        : dup
Duplicate Of                  : 
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/15/92 public]
dce_config on PMAX client loops waiting for DTS server. 
Currently, DTS server does not come up on PMAX and a PMAX client
cannot talk to a RIOS cds server, which leaves dce_config broken. 
Workaround is to ^C dce_config on the PMAX client when it hangs
looking for the DTS server.

---------------------- dce_config log begin -------------------------

         DCE Configuration Menu


         1. Initial Cell Configuration
         2. Additional Server Configuration
         3. DCE Client


        98. Return to previous menu
        99. Exit



        selection:  3
... clear ...


        Enter the name of your cell: darkman_cell.osf.org
        What is the name of the Security Server for this cell?
darkman.osf.org
        Ensure the /opt/dcelocal/etc/security/pe_site file
        matches that on the server...
        Press <ENTER> to continue

                creating /krb5/krb.conf file...
                adding kerberos entry to /etc/services ...
Current site is: registry server at /.../darkman_cell.osf.org
Domain changed to: principal
Domain changed to: account
bye.
                starting sec_clientd
        This machine is now a security client...
        Press <ENTER> to continue

... clear ...
Current site is: registry server at /.../darkman_cell.osf.org
Domain changed to: principal
Domain changed to: account
bye.
        Creating the cds.conf file...
        Enter name of primary CDS server:  darkman.osf.org
        Creating hosts/pluto objects in name space

>>> binding information and objects exported

                Creating /.:/hosts/<hostname>/profile

>>> default profile element added


>>> binding information exported

        This machine is now a CDS client...
        Press <ENTER> to continue

        start dtsd
dtscp cannot get rpc binding to dts daemon - reason:
status 7fffe9e0 (unknown facility)
dtscp create type clerk failed
        Press <ENTER> to continue

dtscp cannot get rpc binding to dts daemon - reason:
status 7fffea00 (unknown facility)
dtscp enable failed
        Press <ENTER> to continue

---------------------- dce_config log end -------------------------

[4/15/92 public]
This in itself is not a bug.  The problem here is that the dts client when
coming up, could not find a dts server, so it failed.  That's fine.  Now
what problems does this show:

  The status code from something is giving a bad facility.

I left this as dce since I don't know what is generating the problem,
changed the short description, and removed myself as the responcible
engineer.

[4/17/92 public]
lowered severity to C

[4/17/92 public]
The problem above should read that the dtscp command could not find the
dtsd daemon.  There is not a requirement that a clerk communicate with
a server to be configured.

[5/1/92 public]
Changed to DTS since that's what failed.

[5/4/92 public]
This is a duplicate of 2792 (the bad status code came from an uninitialized
variable). Please close this defect.

[10/19/92 public]
Changed priority = 1 for all bugs > 6 months old.



