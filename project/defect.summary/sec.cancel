CR Number                     : 13381
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : command_ref
Short Description             : secd options don't match docs
Reported Date                 : 3/5/96
Found in Baseline             : 1.1
Found Date                    : 3/5/96
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[3/5/96 public]
The following secd options are in the secd code (in rs_main.c), but are
not documented:

   -audit
   -lock_debug
   -priv_debug
   -rpc_debug
   -prop_debug
   -change_myname
   -no_kdc
   -w

These options need to be tested and documented if they are indeed valid.

[5/17/96 public]

Assigned to HP.

[9/17/96 public]
I've canceled this CR.  The secd options listed above are not supported.



CR Number                     : 13369
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 9245
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security/server/client/rca
Short Description             : Credential name cache file
created with user's default permissions
Reported Date                 : 2/24/96
Found in Baseline             : 1.1
Found Date                    : 2/24/96
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[2/24/96 public]

A support customer reported the following problem:
-------------------------------------------------

< This problem is fixed in 1.2.1 - OT 9245 >

Component (Module):     security/server/client/rca/secidmap.c

One Line Description:

Credential name cache file created with user's default permissions.

Full Description:

The name cache files /opt/dcelocal/var/security/creds/*.nc are created
in the add_namecache() function and the code looks like:

    outfile = fopen (filename, "a");

No attempt is made to change the file permission bits after the file is
created so the file is given the user's default file permissions.  For
example, if root has default permissions of 666, the following name
cache file is created during initial cell configuration.

-rw-rw-rw-   1 root     bin          413 Jan  9 10:54 dcecred_ffffffff.nc

Also note that name cache files may be created in function
sec_login_pvt_set_context() in file security/client/login/sec_login_pvt.c.
In that case care is take to set the file permissions.

     ncfd=open(lcp->namecache_name, O_CREAT | O_TRUNC , 0600);

Repeat By:

Configure a node with root's umask of 0666.

[2/26/96 public]
There's no reason for this...  You state yourself, above that it's already
fixed in the release that these OTs are now being accounted for, and that
there's already an OT for it.  If you want to add 1.1 info, either add it
to the OT that already exists, or open one against dcemaint.

[2/27/96 public]
Agreed ... so I'm cancelling this.



CR Number                     : 13286
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : man page missing, dce_attr_sch_aclmgr_strings
Reported Date                 : 1/23/96
Found in Baseline             : 1.1,1.2
Found Date                    : 1/23/96
Severity                      : B
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 
Affected File(s)              : 
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[9/30/96 public]
The dce_attr_sch_aclmgr function is not implemented.
Canceling this CR.

[1/23/96 public]

The Application Development Reference documents this routine,
and it's available in libdce.  All the other dce_attr* routines
have man pages.  But not this one.

[2/27/96 public]

Assigned to HP.



CR Number                     : 13025
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : rs
Short Description             : Mem leak in rs_main.c
Reported Date                 : 8/7/95
Found in Baseline             : 1.1wp
Found Date                    : 6/15/95
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
security/server/rs/rs_main.c
Sensitivity                   : public

[8/7/95 public]

The dce_svc_register function returns a pointer to a malloced 
dce_svc_handle_t which must later be freed.  The component_name
member of this pointed to structure must also be freed as it is
malloced via the strdup function.

src/security/server/rs/rs_main.c	Revision /main/DCE1_1_WP/1
***************
*** 325,330 ****
--- 325,332 ----
  {
      error_status_t   st ;

+     dce_svc_handle_t svc_handle;
+
      setlocale(LC_ALL, "");

      dce_svc_set_progname("secd", &st);
***************
*** 336,343 ****
       *  In all SVC calls, the handle sec_svc_handle ( defined
       *  statically elsewhere in the code) is used.
       */
!     (void ) dce_svc_register(sec_svc_table, (idl_char *) "sec" ,
!                              &st);

      TRY
      {
--- 338,350 ----
       *  In all SVC calls, the handle sec_svc_handle ( defined
       *  statically elsewhere in the code) is used.
       */
!     if((svc_handle=dce_svc_register(sec_svc_table, (idl_char *) "sec" , &st))
!         != NULL) {      /* free contents of handle and then handle */
!             if(svc_handle->component_name != NULL)
!                 free(svc_handle->component_name);
!             free(svc_handle);
!             svc_handle=NULL;
!     }

      TRY
      {
***************
*** 362,367 ****
--- 369,376 ----
      ENDTRY
  }

+ extern dce_svc_handle_t aud_svc_handle;
+
  /*
   * The *real* main program..
   */
***************
*** 710,715 ****
--- 719,731 ----
      }

      ENDTRY;
+
+     if(aud_svc_handle != NULL) {
+         if (aud_svc_handle->component_name != NULL)
+             free(aud_svc_handle->component_name);
+         free(aud_svc_handle);
+         aud_svc_handle = NULL;
+     }

      exit(0);
  }

[9/12/95 public]

Tom from Gradient reports that following is not working out on his SVR4 
platform:

	"OT 13025 is another bad fix.

	First of all, you don't need to free stuff right before you exit.
	Second of all, the serviceability code registers a shutdown
	routine with atexit() and this routine core dumps (on my platform)
	if you free the serviceability handle and its contents."

[12/8/95 public]
I agree with Tom, there's no use freeing something immediately before exit,
and if there's a shutdown routine that free's the handle anyway, freeing
twice is bad.  I'm cancelling this defect.



CR Number                     : 12948
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit: FAULT 0x17083008 at line 8571 of file ek_db.c
Reported Date                 : 7/11/95
Found in Baseline             : 1.1
Found Date                    : 7/11/95
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/19/96]

ADDRESSED IN DCE1.2.2.

[7/11/95 public]

Component (Module):     tty_acct.c 
Client Hardware:        see below 
Client Software:        see below 
Server Hardware:        see below 
Server Software:        see below 
Compiler:               n/a

Problem Description
--------------------

Sverity Level: Severe

Date of First Occurrence: 06/20/95

One Line Description:
   OSDqa11847 rgy_edit: FAULT 0x17083008 at line 8571 of file ek_db.c

Full Description:

Related-file:::: Problem
 DESCRIPTION:
 In rgy_edit, when attempting to change a non-existing account after inputting
 no info for the initial 3 questions on the first attempt of the change 
 sequence, rgy_edit dies with the following error information:
 
 ?(rgy_edit) Unable to change account "none" - Account does not exist (Registry Edit Kernel) (dce / sad)
 FAULT 0x17083008 at line 8571 of file ek_db.c
 
 REPRODUCIBLE: Yes
 
 TEST SOFTWARE DESCRIPTION: See below:
 # rgy_edit
 Current site is: registry server at /.../oz/subsys/dce/sec/master 
 rgy_edit=> do a
 Domain changed to: account
 rgy_edit=> c
 Change Account=> Enter account id [pname]:         	<- Return here
 Enter account group [gname]:         			<- Return here
 Enter account organization [oname]:         		<- Return here
 Change Account=> Enter account id [pname]: jkl	  <- Enter non-existent account
 Enter account group [gname]: none
 Enter account organization [oname]: none
 ?(rgy_edit) Unable to change account "none" - Account does not exist (Registry Edit Kernel) (dce / sad)
 FAULT 0x17083008 at line 8571 of file ek_db.c
 #
 
 DESCRIPTION OF HARDWARE WHERE BUG OCCURRED: Hitachi Mainframe VM - sybil
 
 DESCRIPTION OF WHERE TEST SUCCESSFULLY RAN: n/a
Related-file::Added 950621 by wright:: /build/hiosfm/RCS/dce1.1/src/security/client/admin/rgy_edit/./tty_acct.c,v 8.2
 /build/hiosfm/RCS/dce1.1/src/security/client/admin/rgy_edit/./tty_acct.c,v 8.2
 wright 1995/06/21 17:28:45 +11 -3
 Reason:  OSDqa11847 rgy_edit: FAULT 0x17083008 at line 8571 of file ek_db.c
 Change or's to and's in computing whether a set of flags are all set
 on.
 
     *** /tmp/ci.7420..tty_acct.c.7456.1	Wed Jun 21 13:28:48 1995
     --- /tmp/tty_acct.c.7456.2	Wed Jun 21 13:28:48 1995
     ***************
     *** 1059,1069 ****
     --- 1059,1073 ----
           st = ek_init_op(chg_handle);
       
               /* If all three keys specified, then changing only one account */
           verify = opt_no_query ? false : eif_verify;
       
     + #ifdef hitm
     +     if (!(arg_pname_key && arg_gname_key && arg_oname_key)) {
     + #else
           if (!(arg_pname_key || arg_gname_key || arg_oname_key)) {
     + #endif
               tty_show_prompt(Acct_chg_prompts[tty_acct_pname_prompt]);
               arg_pname_key = tty_get_arg(pkey, sizeof(pkey), &st);
               tty_show_prompt(Acct_chg_prompts[tty_acct_gname_prompt]);
               arg_gname_key = tty_get_arg(gkey, sizeof(gkey), &st);
               tty_show_prompt(Acct_chg_prompts[tty_acct_oname_prompt]);
     ***************
     *** 1094,1104 ****
     --- 1098,1112 ----
       
           if (do_interactive) {
               do_update = false;  /* assume something will go wrong on the 1st try */
               do {
                   CLEAR_STATUS(&st);
     + #ifdef hitm
     +             if (!(arg_pname_key && arg_gname_key && arg_oname_key)) {
     + #else
                   if (!(arg_pname_key || arg_gname_key || arg_oname_key)) {
     + #endif
                           /* get the acct key interactively */
                       st = tty_get_field_arg(chg_handle, ekn_acct_pname_key,
                                              &tty_null_conv_table, false,
                                              (char *) NULL, pkey, sizeof(pkey),
                                              Acct_chg_prompts[tty_acct_pname_prompt],
     ***************
     *** 2260,2270 ****
       
               /* Don't do anything if cmd line args were bad */
           if (GOOD_STATUS(&st)) {
               st = ek_init_op(op_handle);
           } else {
     !         return;
           }
       
           if (GOOD_STATUS(&st)) {
               while (GOOD_STATUS(&st)) {
                   st = ek_do_op(op_handle);
     --- 2268,2278 ----
       
               /* Don't do anything if cmd line args were bad */
           if (GOOD_STATUS(&st)) {
               st = ek_init_op(op_handle);
           } else {
     !         return st;      /* hitm -- this is NOT a void function */
           }
       
           if (GOOD_STATUS(&st)) {
               while (GOOD_STATUS(&st)) {
                   st = ek_do_op(op_handle);
 
Related-file::Added 950624 by wright:: diffs
 *** tty_acct.c	Sat Jun 24 12:22:22 1995
 --- tty_acct.c.new	Sat Jun 24 12:22:11 1995
 ***************
 *** 1,9 ****
   #if !defined(lint) && !defined(_NOIDENT) && !defined(rcsid_uQ4_NcSqn)
 ! static char rcsid_uQ4_NcSqn[]="@(#)$RCSfile: c012948,v $ $Revision: 1.3 $";
   #define rcsid_uQ4_NcSqn 1
   #endif
   /*
 ! $Id: c012948,v 1.3 96/03/19 15:52:02 root Exp $
   
   ----------------------------------------------------------------
    Copyright 1993 Hitachi, Ltd.
 --- 1,9 ----
   #if !defined(lint) && !defined(_NOIDENT) && !defined(rcsid_uQ4_NcSqn)
 ! static char rcsid_uQ4_NcSqn[]="@(#)$RCSfile: c012948,v $ $Revision: 1.3 $";
   #define rcsid_uQ4_NcSqn 1
   #endif
   /*
 ! $Id: c012948,v 1.3 96/03/19 15:52:02 root Exp $
   
   ----------------------------------------------------------------
    Copyright 1993 Hitachi, Ltd.
 ***************
 *** 995,1001 ****
 --- 995,1005 ----
           /* If all three keys specified, then changing only one account */
       verify = opt_no_query ? false : eif_verify;
   
 + #ifdef hitm
 +     if (!(arg_pname_key && arg_gname_key && arg_oname_key)) {
 + #else
       if (!(arg_pname_key || arg_gname_key || arg_oname_key)) {
 + #endif
           tty_show_prompt(Acct_chg_prompts[tty_acct_pname_prompt]);
           arg_pname_key = tty_get_arg(pkey, sizeof(pkey), &st);
           tty_show_prompt(Acct_chg_prompts[tty_acct_gname_prompt]);
 ***************
 *** 1030,1036 ****
 --- 1034,1044 ----
           do_update = false;  /* assume something will go wrong on the 1st try */
           do {
               CLEAR_STATUS(&st);
 + #ifdef hitm
 +             if (!(arg_pname_key && arg_gname_key && arg_oname_key)) {
 + #else
               if (!(arg_pname_key || arg_gname_key || arg_oname_key)) {
 + #endif
                       /* get the acct key interactively */
                   st = tty_get_field_arg(chg_handle, ekn_acct_pname_key,
                                          &tty_null_conv_table, false,
Related-file:::: Resolution 
 DESCRIPTION OF BUG FIX:  When testing a set of flags to see if all of
 them are on, you have to 'and' them together, not 'or' them.
  
  
 REGRESSION TEST SCENARIO:  As in first enclosure.
  
  
 RCSDIFFS (either inserted manually or via Fci):  Manually in previous
 enclosure.



CR Number                     : 12939
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_login_set_context() of delegated ctxt may have a bug.
Reported Date                 : 6/27/95
Found in Baseline             : 1.1
Found Date                    : 6/27/95
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/27/95 public]

I've sent this to dce-tech but have been told that opening an OT is the
right way to do this:

I can not find in the documentation an answer to the question that follows.
 
A DCE remote access server (e.g. a DCE-ized rshd) receives a call and needs
to spawn a process with some local uid (somehow derived from the client
credentials) and with the delegated network credentials of the client. How
is that done? The obvious (mistaken?) way (in the server):
 
 	rpc_binding_inq_auth_caller()
 	delegated_ctx = sec_login_become_impersonator()
 	fork
 	/* in child */
 	setuid(regular_user)
 	sec_login_set_context(delegated_ctx)

does not work. Should it work? It seems that the problem is in part caused
by the fact that the implementation keeps login context information in
files (i.e. subject to file sytem access mechanism) vs. in memory data that
could be shared between parent/child processes.
 
I've looked at the sec_login_* implementation and have found some chown
magic (read: undocumented) on the various credentials files (e.g. in
sec_login_valid_and_cert_ident) to support related uses of the API (e.g.
integrated system login). Is support for the situation outlined above
buried somewhere in there?

[7/12/95 public]

Hello there, I would very much appreciate some help with this. Thanks.

[7/13/95 public]

A little clarification: in DCE-RFC 3.0 section 7 ("Full Identity
Forwarding (Impersonation) For Remote System Login") begins:

"Impersonation is often useful for implementing remote system login
utilities. The mechanism for accomplishing this are present in Kerberos V5
and can be found in extended versions of telnet and rlogin."

I took this to mean that somehow there is support to transform on the
remote system the client delegation token into a login context
(corresponding to the client's identity) usable as if it had been obtained
by doing a "dce login" on the remote system (with the substantial benefit
of not requiring the client to do a "dce login" on the remote system).

My question is simply how is this done?

[7/14/95 public]

I've worked on this some more. Interim findings coming up...

[7/17/95 public]

Hello there,

1) The code described above almost works when the child doesn't setuid:

 	rpc_binding_inq_auth_caller()
 	delegated_ctx = sec_login_become_impersonator()
 	fork
 	/* in child */
 	sec_login_set_context(delegated_ctx)

in the manager code yields almost usable delegated NC (corresponding to the
client id). There are some problems with the id info contained in the NC. 
For example klist yields:

DCE Identity Information:
        Global Principal: <NIL>/<NIL>
        Cell:      00000000-0000-0000-0000-000000000000 <NIL>
        Principal: 00000000-0000-0000-0000-000000000000 <NIL>
        Group:     00000000-0000-0000-0000-000000000000 <NIL>

Identity Info Expires: 95/07/17:20:33:00
Account Expires:       never
Passwd Expires:        never

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_13eab200
Default principal: junk@alphaville.cell.osf.org
Server: krbtgt/alphaville.cell.osf.org@alphaville.cell.osf.org
        valid 95/07/17:10:33:00 to 95/07/17:20:33:00
Server: dce-ptgt@alphaville.cell.osf.org
        valid 95/07/17:10:33:05 to 95/07/17:12:33:05
Client: dce-ptgt@alphaville.cell.osf.org        Server:
krbtgt/alphaville.cell.osf.org@alphaville.cell.osf.org
        valid 95/07/17:10:33:06 to 95/07/17:12:32:57
Client: dce-ptgt@alphaville.cell.osf.org        Server:
dce-rgy@alphaville.cell.osf.org
        valid 95/07/17:10:33:45 to 95/07/17:12:32:57

and dcecp fails with the error "Error in getting initial login context."
from a failure of sec_id_gen_name returning the error code 387064021 ("Cell
UUID does not correspond to a valid cell name (dce / sec)"). But rgy_edit
does not complain and sure enough authorizes access to the registry as the
client identity.
 
2) With that in hand the following hack in the manager code even works:

void bar(handle_t h, idl_long_int uid)
{
  pid = fork();

  if (pid == 0) {		/* child */
    setuid(uid);
    sec_login_setup_identity("junk", &login_context);
    sec_login_validate_identity();
    sec_login_certify_identity();
    rpc_binding_inq_auth_caller(&privs);
    delegated_context = sec_login_become_impersonator(privs, login_context);
    sec_login_set_context(delegated_context, &status);

again yielding almost usable NC but this time sucessfully crossing the "uid
barrier." The trick here was to use the binding handle (deeply contained
in memory) in the child (after the setuid) vs. a login context (which has a
part in the file system and is thereby subject to access restrictions).
Also, this required the principal "junk" (with a well known password!) to
setup the login context required in sec_login_become_impersonator.

Questions: shouldn't the code be fixed so that the delegated NC be fully
usable? Shouldn't there be a better way to do (2)?

[2/2/96 public]
The above have been mostly questions (some of which were answered via email)
so this OT hasn't been addressed as a bug in the past.  Rather than close it
as an incorrect use of OT (questions should go to dce-tech), I'm altering it
to report one possible problem that I've noticed from the above questions,
coupled with a very similar problem reported by Scott McKinley of Oracle on
the sig-dce mailing list.  It's not a p0 because this is not the normal use
of the APIs, but I'll leave it as a B1 since it is a potential problem for
those trying to use it in this particular way.

The problem seems to be that in the above case, you get a cred cache with
a bad EPAC in it after a sec_login_become_delegate().   The problem that
Scott reported is that after a sec_login_become_impersonator(), his call
to sec_login_set_context() returned sec_login_s_default_use (387064048).
This needs to be reproduced and looked into.

[5/16/96 public]
I have modified the security delegation tests to call
sec_login_set_context() after sec_login_become_impersonator() in an attempt
to reproduce this problem. It works fine. I guess I'm going to need some
more info to continue debugging this problem.

[5/20/96 public]
The code that Scot McKinley from Oracle wrote had several problems. All
have been worked out. The delegation now is working for him. Cancelled.



CR Number                     : 12920
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : unix utils
Short Description             : su exits when dce is unavailable
Reported Date                 : 6/15/95
Found in Baseline             : 1.1
Found Date                    : 6/15/95
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/15/95 public]

 The su utility exits when DCE security services are unavailable. Any
 exceptions raised by sec_login calls are not caught resulting in
 a core dump. A more desirable behavior would be to continue allowing 
 standalone access if any, and unauthenticated DCE access.
 
 Customer report included below.

>From osd.dce@hi.com Thu Jun  8 09:24:20 1995
Received: from loki.hi.com (loki.Hi.COM [140.243.30.55]) by postman.osf.org (8.6.9/8.6.x) with SMTP
	id JAA01549 for <dce-defect@osf.org>; Thu, 8 Jun 1995 09:24:16 -0400
Received: from OSDpts.hi.com by loki.hi.com (4.1/SMI-4.1.hi-2)
	id AA17364; Thu, 8 Jun 95 09:28:10 EDT
From: osd.dce@hi.com (DCE Defect)
Received: by OSDpts.hi.com (1.38.193.4/Spike-2.0)
	id AA01326; Thu, 8 Jun 1995 09:31:22 -0400
Date: Thu, 8 Jun 1995 09:31:22 -0400
Message-Id: <9506081331.AA01326@OSDpts.hi.com>
To: dce-defect@osf.org

                          DCE Problem Report
                  =================================


Submitter Information 
- ----------------------

Submitter Name:           wright
Organization:             Hitachi Computer Products (America), Inc. 
Email Address:            osd.dce@hi.com wright@hi.com 
Phone:                    617-890-0444 
DCE License Number:       1616-MDCE-92
Licensee's Defect Number: OSDqa11704


Hardware/Software Configuration
- --------------------------------

Offering and Version:   DCER1.0 
Component (Module):     su.c 
Client Hardware:        see below 
Client Software:        see below 
Server Hardware:        see below 
Server Software:        see below 
Compiler:               n/a

Problem Description
- --------------------

Severity Level: Severe

Date of First Occurrence: 05/31/95

One Line Description:
   OSDqa11704 su gets unhandled exception when DCE services are unavailable

Full Description:

Related-file:::: Problem
 DESCRIPTION:
 The DCE integrated version of su gets an unhandled exception when DCE
 services are unavailable.
 
 REPRODUCIBLE: Yes
 
 TEST SOFTWARE DESCRIPTION: 
 # su
 DCE services appear unavailable. Reverting to underlying system. 
 Unhandled exception; exiting!
 
 DESCRIPTION OF HARDWARE WHERE BUG OCCURRED: Hitachi Mainframe VM - sybil (DCE Central Master)
 
 DESCRIPTION OF WHERE TEST SUCCESSFULLY RAN: 
 					Same, when DCE services are available
Related-file::Added 950602 by wright:: /build/hiosfm/RCS/dce/src/security/client/unix_utils/su/./su.c,v 7.13
 /build/hiosfm/RCS/dce/src/security/client/unix_utils/su/./su.c,v 7.13
 wright 1995/06/02 18:38:14 +18 -3
 Reason:  OSDqa11704 su gets unhandled exception when DCE services are unavailable
 Copied changes from similar bug fix to login -- set TRY clause around
 calls to catch any exceptions.
 
     *** /tmp/ci.16800..su.c.16834.1	Fri Jun  2 14:38:16 1995
     --- /tmp/su.c.16834.2	Fri Jun  2 14:38:16 1995
     ***************
     *** 139,162 ****
       		    SEC_LOGIN_VALID_AND_CERT_IDENT};
       
       void setup_identity(void *arg)
       {
       
     ! 	 sec_login_setup_identity((uchar *)user, sec_login_no_flags,
       					&sec_login_handle, &st); 
       	pthread_cond_signal(&dce_cv);
       }
       void get_pwent(void *arg)
       {
       	sec_login_get_pwent(sec_login_handle, (sec_login_passwd_t *)&pwd, &st);
       	pthread_cond_signal(&dce_cv);
       }
       void valid_and_cert_ident(void *arg)
       {
               rval = !sec_login_valid_and_cert_ident(sec_login_handle,
                              &prec, &reset_passwd, &auth_src, &st);
       	pthread_cond_signal(&dce_cv);
       }
       
       void
       call_dce_routine(unsigned long routine_id, int care)
       {
     --- 139,177 ----
       		    SEC_LOGIN_VALID_AND_CERT_IDENT};
       
       void setup_identity(void *arg)
       {
       
     !     TRY {
     ! 	sec_login_setup_identity((uchar *)user, sec_login_no_flags,
       					&sec_login_handle, &st); 
       	pthread_cond_signal(&dce_cv);
     +     } CATCH_ALL  {
     + 	pthread_cond_signal(&dce_cv);
     +     }
     +     ENDTRY
       }
       void get_pwent(void *arg)
       {
     +     TRY {
       	sec_login_get_pwent(sec_login_handle, (sec_login_passwd_t *)&pwd, &st);
       	pthread_cond_signal(&dce_cv);
     +     } CATCH_ALL {
     + 	pthread_cond_signal(&dce_cv);
     +     }
     +     ENDTRY
       }
       void valid_and_cert_ident(void *arg)
       {
     +     TRY {
               rval = !sec_login_valid_and_cert_ident(sec_login_handle,
                              &prec, &reset_passwd, &auth_src, &st);
       	pthread_cond_signal(&dce_cv);
     +     } CATCH_ALL {
     + 	pthread_cond_signal(&dce_cv);
     +     }
     +     ENDTRY
       }
       
       void
       call_dce_routine(unsigned long routine_id, int care)
       {
 
Related-file:::: Resolution 
 DESCRIPTION OF BUG FIX:  Copied a fix from login.c for the same
 symptoms; surround sec_login_* routines with TRY/CATCH_ALL.
  
  
 REGRESSION TEST SCENARIO:
  
  
 RCSDIFFS (either inserted manually or via Fci):
 


------- End of Forwarded Message

[6/16/95 public]
This is not a problem on HPUX, RIOS, OSF/1.  The sec_login calls should not
be raising exceptions on error, they should just be returning errors (and
they do, on the reference platforms).  Hitachi should investigate why they
are getting an exception in this case, not just trap it and ignore it...

[3/11/96 public]
Hmm, no reply to the above from the OSF or Hitachi in 9 months now...
The sec_login calls do not raise exceptions when secd is unavailable on the
reference platforms.  To top that off, 'su' is not a supported component of
the OSF DCE reference platform (it's example code, never built, never tested).
Given these facts, I'm cancelling this defect as not a problem with the
reference source.  It looks like it's a Hitachi platform problem.



CR Number                     : 12824
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec_acl_get_manager_types
Short Description             : sec_acl_get_manager_types fails with status sec_acl_object_not_found
Reported Date                 : 3/27/95
Found in Baseline             : 1.1
Found Date                    : 3/27/95
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/27/95 public]

Customer submitted following bug report:
---------------------------------------
  Problem 	: sec_acl_get_manager_types() fails with status
  "sec_acl_object_not_found" on the entry /.:/subsys/dce/sec/master/principal/flintstone.
  Status	: Open
  Reported date	: 3/20/95
  Reported by	: Ash Nangia, Tandem, Austin
  Problem area	: DCE1.1 Security
  Environment   : SVR4
  Description 	:
  
  	The call sec_acl_get_manager_types() fails on the entry 
  /.:/subsys/dce/sec/master/principal/flintstone with the status
  sec_acl_object_not_found. But the call sec_acl_bind() made previous
  to this call passes successfully (i.e doesn't report object not
  found). The routine sec_acl_get_manager_types() calls
  rdacl_get_manager_types() which returns the above status.
  
  	I started secd in debug and tried to break at
  rdacl_get_manager_types but secd didn't stop at the call. 
  
  	Probable cause of the problem:
  	The other sec_acl calls which are tested, get their acl_handles
  from sec_acl_bind_to_addr() which uses string bindings. On the other
  hand sec_acl_bind uses name space calls to obtain the bindings for
  security service (site name etc). 
  
  Test Case     : Security ACL API tests.

[3/11/96 public]
sec_acl_bind() just gives you a binding to the server where an object is
located, so it is possible for it to return a good status (because it got
a binding) but for subsequent calls to fail (because there was no such obj
available at the bound to server.

It is easy to mess up the flintstone ACL within the secd database, by
prematurely stopping the security tests while they're messing with the
ACLs on the flintstone object (in fact, I've even done it many times in
past years, by mistake), and that would cause the above behavior.

Since these tests run fine on the reference platforms (ie, not reproducable)
and since there's an explanation for all of the behavior described above,
I'm cancelling this defect.



CR Number                     : 12726
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : krb5/mvr/krb5-glue.h - error 1000: Unexpected symbol: "DcePAKeys"
Reported Date                 : 10/26/94
Found in Baseline             : 1.1
Found Date                    : 10/26/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/26/94 public]
The following build error was found in Unintegrated tree on HP and OSF
platforms. (RIOS build is in progress).

 header file krb5/mvr/krb5-glue.h - error 1000: Unexpected symbol: "DcePAKeys"


on HPUX
extract from file build.log.10-25-94
dirrectory /u1/RAT_tools/1_1unintegratedlogs/nb_unintegrated_ux on vertigo

unset _MAKECONF _MAKEIOD _MAKECWD _MAKEPSD MAKEDIR;  cd /u2/devobj/sb/nb_uninteg
rated_ux/src/security/utils && exec build -r -k -r -r -r  MAKEFILE_PASS=THIRD ex
port_all_EXPSHLIB
relative path: ./security/utils
mkdir ../../../obj/hp800/security/utils
cd ../../../obj/hp800/security/utils

......
.....

c89 -c    -D_SHARED_LIBRARIES  +z  -DOSF_DCE -DDCESHARED_PATH=\"/opt/dce\" -DDCE
LOCAL_PATH=\"/opt/dcelocal\" -D_BSD -DBSD -DPOSIX_FILE_LOCKS -DPOSIX_TERMIOS -D_
_hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -D
unix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/devobj/sb/nb_unintegrated_ux/src/securit
y/utils -I/project/dce/build/unintegrated-snap/src/security/utils  -I../h -I/u2/
devobj/sb/nb_unintegrated_ux/src/security/h -I/project/dce/build/unintegrated-sn
ap/src/security/h -I../idl -I/u2/devobj/sb/nb_unintegrated_ux/src/security/idl -
I/project/dce/build/unintegrated-snap/src/security/idl -I/u2/devobj/sb/nb_uninte
grated_ux/export/hp800/usr/include -I/project/dce/build/unintegrated-snap/export
/hp800/usr/include    /project/dce/build/unintegrated-snap/src/security/utils/pr
iv_krb_util.c
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 157: error 1000: Unexpected symbol: "DcePAKeys".
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 157: error 1573: Type of "m" is undefined.
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 158: error 1000: Unexpected symbol: "*".
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 158: error 1573: Type of "m" is undefined.
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 159: error 1000: Unexpected symbol: "DcePAErrInfo".
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 159: error 1677: Invalid storage class specifier "auto".
"today_bug" 84 lines, 4444 characters
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 159: error 1677: Invalid storage class specifier "auto".
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 159: error 1677: Invalid storage class specifier "auto".
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 160: error 1000: Unexpected symbol: "*".
cc: "/u2/devobj/sb/nb_unintegrated_ux/export/hp800/usr/include/krb5/mvr/krb5-glu
e.h", line 160: error 1573: Type of "m" is undefined.
*** Error code 1


---------------------------------------------------------------------


AT486

extract from file build.log.10-25-94
dirrectory /u1/RAT_tools/1_1unintegratedlogs/nb_unintegrated_486 on vertigo

/project/dce/build/unintegrated-snap/tools/at386/macho/gcc -B/project/dce/build/
unintegrated-snap/tools/at386/macho/  -c    -D_SHARED_LIBRARIES   -DOSF_DCE -DDC
ESHARED_PATH=\"/opt/dce\" -DDCELOCAL_PATH=\"/opt/dcelocal\" -D_BSD -DBSD -DOSF -
DHAS_STDLIB_H -DBERKELEY    -I. -I/u2/devobj/sb/nb_unintegrated_486/src/security
/utils -I/project/dce/build/unintegrated-snap/src/security/utils  -I../h -I/u2/d
evobj/sb/nb_unintegrated_486/src/security/h -I/project/dce/build/unintegrated-sn
ap/src/security/h -I../idl -I/u2/devobj/sb/nb_unintegrated_486/src/security/idl
-I/project/dce/build/unintegrated-snap/src/security/idl -I/u2/devobj/sb/nb_unint
egrated_486/export/at386/usr/include -I/project/dce/build/unintegrated-snap/expo
rt/at386/usr/include   -pic-lib   -L/u2/devobj/sb/nb_unintegrated_486/export/at3
86/usr/shlib -L/project/dce/build/unintegrated-snap/export/at386/usr/shlib -L/us
r/shlib -L/u2/devobj/sb/nb_unintegrated_486/export/at386/usr/lib     -L/project/
dce/build/unintegrated-snap/export/at386/usr/lib       /project/dce/build/uninte
grated-snap/src/security/utils/priv_krb_util.c
In file included from /u2/devobj/sb/nb_unintegrated_486/export/at386/usr/include
/krb5/asn1.h:43, from /project/dce/build/unintegrated-snap/src/security/utils/pr
iv_krb_util.c:52:
/u2/devobj/sb/nb_unintegrated_486/export/at386/usr/include/krb5/mvr/krb5-glue.h:

iv_krb_util.c:52:
/u2/devobj/sb/nb_unintegrated_486/export/at386/usr/include/krb5/mvr/krb5-glue.h:
157: parse error before `DcePAKeys'
/u2/devobj/sb/nb_unintegrated_486/export/at386/usr/include/krb5/mvr/krb5-glue.h:
158: parse error before `*'
/u2/devobj/sb/nb_unintegrated_486/export/at386/usr/include/krb5/mvr/krb5-glue.h:
159: parse error before `DcePAErrInfo'
/u2/devobj/sb/nb_unintegrated_486/export/at386/usr/include/krb5/mvr/krb5-glue.h:
160: parse error before `*'
*** Error code 1

[10/26/94 public]

This is because the build started before my submission was complete, so the build
was done on a partial submission. ;-(

Please try rebuilding security/krb5 and security/utils to see if the errors go away.



CR Number                     : 12703
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : passwd_export does not open /etc/ptmp correctly
Reported Date                 : 10/21/94
Found in Baseline             : 1.1b22
Found Date                    : 10/21/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : src/security/client/admin/passwd_export/passwd_export.c
Sensitivity                   : public

[10/21/94 public]

According to the X/Open standards when the O_CREAT and O_EXCL flags are set
an open is unsuccesful when the file exists. When I was running the
group override test on AIX this error was occuring when passwd_export was
trying to open /etc/ptmp. This is occuring in the function make_files.

Why is this only occuring on AIX?

[01/30/95 public]
Correct, that's why it tries to open it this way, to make sure that no
other passwd_export or vipw or whatever is updating the passwd and/or
group files at the moment.  You must have had an old ptmp file hanging
around from something else going away...  I'm cancelling this because
it's working as intended.  Note there is another defect open against
the group override stuff because there's a bug in dced.



CR Number                     : 12668
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Password Validation Failure.
Reported Date                 : 10/19/94
Found in Baseline             : 1.1
Found Date                    : 10/19/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/19/94 public]


S:****** Initializing dced...
login failure.
  message from login:
  
  Sorry. Password Validation Failure. - Invalid password (dce / sec)
Failed to log in to DCE.
        Press <RETURN> to continue, CTRL-C to exit: 

         DCE Main Menu ( on orange )


         1. INSTALL     -install dce software
         2. CONFIGURE   -configure and start DCE daemons
         3. START       -re-start DCE daemons
         4. STOP        -stop DCE daemons
         5. UNCONFIGURE -remove a host from CDS and SEC databases
         6. REMOVE      -stop DCE daemons and remove data files
                         created by DCE daemons


        99. EXIT


        selection:  WARNING: get_option() read has reached EOF, exiting
S:****** Exiting from dce_config.
+ cd /u1/RAT_tools




Output from orange:/tmp/dce_config.log

V:         Executing: dce_login_noexec cell_admin <password not shown> 2>/tmp/lo
gin12904
DEBUG:     Executing: x_exit(login failure.
  message from login:
 
  Sorry. Password Validation Failure. - Invalid password (dce / sec)
Failed to log in to DCE.)
V:         User query: Press <RETURN> to continue, CTRL-C to exit:
V:         User entry:
V:         User query: DCE Main Menu
WARNING: get_option() read has reached EOF, exiting
V:         User entry: 99
DEBUG:     Executing: menu99()
S:****** Exiting from dce_config.

[10/20/94 public]
Assigning to security.

[10/21/94 public]
It turned out that clocks were off by 8 minutes. Cancelling this CR.



CR Number                     : 12645
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : dcedoc
Short Description             : Doc needed for extended login audit points.
Reported Date                 : 10/17/94
Found in Baseline             : 1.1b22
Found Date                    : 10/17/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[7/18/96 public]

Extended login audit points were never added to 
the code and there are no plans to add them 
(according to kline_s and sommerfeld).  
Marked this bug as cancel.

[10/17/94 public]

This is a placeholder for the documentation for the new extended 
login audit points.  I have not yet seen this although it may
have already been submitted.  Just being thorough.

[10/21/94 public]

Fixed Fix in Baseline Field to 1.2.

[11/1/94 public]

Extended login audit points didn't make it into 1.1.  If they go into 1.2,
then they should be documented.



CR Number                     : 12640
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit test fails
Reported Date                 : 10/17/94
Found in Baseline             : 1.1b21
Found Date                    : 10/17/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[10/17/94 public]

The rgy_edit fuctional test fails when running rgy_group.sh. The
test tries to add the group rom with the number 202. However,
group 202 is now being used for cds-admin. I changed the group
number and reran the test succesfully.



CR Number                     : 12636
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd core dump on RIOS
Reported Date                 : 10/17/94
Found in Baseline             : 1.1b21
Found Date                    : 10/17/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/17/94 public]
I took a secd core dump on RIOS Friday night.  The cell was
basically idle (2 machine, 1.0.3a client).  I had run DFS fts
tests on Friday before leaving.

The core file is apparently unusable, unless I'm missing some
piece of dbx magic:

> # dbx /opt/dcelocal/bin/secd ./core
> dbx version 3.1 for AIX.
> Type 'help' for help.
> ./core does not contain a stack (core ignored)
> reading symbolic information ...warning: no source compiled with -g
> 
> 
> illegal instruction (reserved addressing fault) in . at 0x0
> 0x0 //.dbxinit: 2: Unreadable instruction at address 0x0
> (dbx) where
> warning: could not locate trace table from starting address 0x0
> Could not determine current function

Contents of secd.log are:

1994-10-14-22:41:53.761-04:00I28.038 secd ERROR sec rs_loginthr rs_login.c 204 0
x20302f88
Registry server unavailable
1994-10-14-22:41:53.936-04:00I28.038 secd WARNING sec rs_loginthr rs_login.c 208
 0x20302f88
Unable to refresh hosts/singsing/self identity . Will idle and retry
1994-10-14-22:41:55.775-04:00I28.040 secd ERROR sec rs_loginthr rs_login.c 204 0
x2030f2c8
Registry server unavailable
1994-10-14-22:41:55.790-04:00I28.040 secd WARNING sec rs_loginthr rs_login.c 208
 0x2030f2c8
Unable to refresh dce-rgy identity . Will idle and retry

What else can I do?

[10/21/94 public]

This is believed to be a dup.  Lowering to P1.

[2/2/96 public]
This OT has become useless.  There is no information above that would lead
us to a problem; The core file was useless, and it was believed to be a dup
at the time, but no information and no reproduction of the problem has occurred
in well over a year.  I'm cancelling this OT because it can be of no help
anymore and is not reproducible.



CR Number                     : 12443
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : cfg
Short Description             : configuration error
Reported Date                 : 9/30/94
Found in Baseline             : 1.1
Found Date                    : 9/30/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[9/30/94 public]
During the following configuration

 1. Configure a 486 as a security master
 2. Configure an hp as a the initial cds server
 3. Configure the 486 as either a cds client or a secondary cds server
 4. Configure the hp as a secondary security replica

Step four results in the error 'Can't bind to /.:/sec/relist'

This has the feel of a sequenceing problem in dce_config. I'll give this
to security but assign it to myself. I'll spend some time seeing if I can
figure out what's out of sync. If I can't come up with anything I'll let
Rajendra know.

[10/14/94 public]
John did you ever find out anything more about this one?

[3/1/96 public]
Ugh, looks like I never updated this one either (along with jd and Rajendra).
A year and a half ago (Oct94), I asked Mary to update this because we could not
reproduce it here.  It appears that John never reproduced it for Rajendra
either.  It's conceivable that you could cause the above to occur by doing
step 4 within a minute of when step 3 finished.  Because secd comes up before
CDS, it only tries once a minute to export information to the namespace.  So,
it would have taken one minute plus the amount of time to register all the
information that it dumps in CDS, before step 4 could possibly work.
I'm cancelling this as not reproducable.  If somebody does find a way to
reproduce it, open a defect with detailed information on what you did to get
it to happen.  Doing step 4 too soon after step 3 would just be pilot error,
not a bug.

[3/1/96 public]
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'



CR Number                     : 12420
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_login_setup_identity() coredump in simple hand-test
Reported Date                 : 9/29/94
Found in Baseline             : 1.1b19
Found Date                    : 9/29/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/29/94 public]
The hand-test below dumps core (usually) on the HP in
sec_login_setup_identity().  Last tried on BL-20.

 - - - - - - - - - - - - - - - - - - - -
/*
    Dumps core in sec_login_setup_identity() on HP
	create prin "prin1" with passwd "prin1"
	c89 -g -o zzz zzz.c -ldce
	run zzz
*/

#include <stdio.h>
#include <dce/dce.h>
#include <dce/sec_login.h>
#include <dce/passwd.h>
#include <string.h>

#define PRIN "prin1"
main()
{
    char	user[100], password[2000];
    error_status_t	st;
    sec_login_handle_t  lcontext;
    sec_login_auth_src_t auth_src;
    sec_passwd_rec_t    prec;
    static sec_passwd_rec_t    nil_prec;
    boolean32           reset_passwd;

    strcpy(user, PRIN);
    strcpy(password, PRIN);

    if (sec_login_setup_identity((unsigned_char_p_t) user,
                                    sec_login_no_flags, &lcontext, &st)) {
	printf("sec_login_setup_identity returned true\n");

	prec = nil_prec;
	prec.key.key_type = sec_passwd_plain;
	prec.key.tagged_union.plain = (unsigned char *)password;
	prec.pepper = NULL;
	prec.version_number = sec_passwd_c_version_none;

	if (sec_login_validate_identity(lcontext, &prec, &reset_passwd,
			&auth_src, &st)) {
	    printf("sec_login_validate_identity valid = 1\n");
	}
	else printf("sec_login_validate_identity valid = 0\n");
    }
    else printf("sec_login_setup_identity returned false\n");

    if (st) dce_pgm_printf(st);

    puts("OK");
    exit(0);
}

[9/29/94 public]
Well?  The suspense is killing me.  What does the core dump say?

[9/29/94 public]
Using latest bits I was able to run the above program successfully without
error on HP/UX. Ran for 10 times.

spring : ./zz
sec_login_setup_identity returned true
sec_login_validate_identity valid = 1
OK

[9/29/94 public]
I get the core dumps on my HP.

when dce_login cell_admin -dce-, zzz core dumps after printing 
out success from first API (setup_identity)

[crown]:/tmp> ./zzz
sec_login_setup_identity returned true

XDB trace:

Core file from:  zzz
Child died due to: segmentation violation
Program died in unknown location, pc = 0x3
Stack trace will not be possible (UE463)
.Procedures:      1
Files: 1
Stack isn't that deep (UE311)
>trace
 0 (address 0)

When not dce logged in, no message from setup_identity and stack is thus:

Core file from:  zzz
Child died due to: segmentation violation
Procedures:      1
Files: 1
>trace
 0 ep_get_endpoint@libdce + 0x00000810 (0x7af6a5e0, 0x1, 0x3429ec,
0x81393871)
 1 rpc_ep_resolve_binding@libdce + 0x000001d4 (0x7b0353b4, 0x7, 0xa07,
0x7b0094e6)
 2 _SYSTEM_ID@libdce + 0x4645f060 (Address not found (UE302)

[9/29/94 public]
It looks like you didn't build with (at least some of) the following
switches (look at how anything else is built with libdce on HPUX):
-z -Wl,-Bimmediate,-Bnonfatal,-a,default,+b,/lib:/usr/lib
(need at least the -Wl,-Bimmediate,-Bnonfatal I'm not sure, but you may need
all of the above switches).  Since this works for Rajendra when built
correctly and since the test code above is basically a stripped down
dce_login which has been working for many other people all day, I'm not
going to bother looking into this any further until you try the above
switches.  Please cancel this CR if that fixes the problem.

[9/29/94 public]
Does not core dump on crown when built properly.  

John B. created this stripped down program (and this CR) to illustrate a core 
dump occuring in a set of functional tests which are doing the same
sequence of calls to log themselves in (trying to make things easier to
reproduce, you know TET...)  John, maybe open one with the exact info from 
the FVT cores?

Cancelled.



CR Number                     : 12314
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : schema aclmgr
Short Description             : Can't manipulate ACLs on rgy schema objects
Reported Date                 : 9/23/94
Found in Baseline             : 1.1b18
Found Date                    : 9/23/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/23/94 public]

After creating rgy schema objects you can't look at or modify its
ACLs.  This was found by (and is blocking) systest eraobj001.
Simple example follows:
	dcecp> xattr show /.:/sec/xattrschema/fooattr
	{aclmgr {group {{query r} {update r} {test r} {delete r}}}}
	{annotation {}}
	{applydefs no}
	{encoding integer}
	{intercell reject}
	{multivalued yes}
	{reserved no}
	{scope {}}
	{trigbind {none {}}}
	{trigtype none}
	{unique no}
	{uuid 0d26c134-d64f-11cd-aa6d-0000c0b7df56}

	dcecp> acl show /.:/sec/xattrschema 
	{unauthenticated r----}
	{user cell_admin rcidm}
	{user 00002861-d619-21cd-aa00-0000c0b7df56 r-i--}
	{user 00002862-d619-21cd-aa00-0000c0b7df56 -c---}
	{user 00002864-d64f-21cd-aa00-0000c0b7df56 rc---}
	{user 00002867-d650-21cd-aa00-0000c0b7df56 rc---}
	{user seacladpomerolp rc---}
	{user foo rc---}
	{other_obj r----}
	{any_other r----}

	dcecp> acl show /.:/sec/xattrschema/fooattr
	Error: acl object not found

I've been told this DOES work with dced ERAs.

[9/23/94 public]
The security attrschema acl_mgr supports an acl on the 
/.:/sec/xattrschema object.  Security does not support ACLs
on schema entry objects.  It has a schema acl_mgr but not
a schema_entry acl_mgr. Evidently, dced does have an aclmgr 
for schema entry acls.  (inconsistent ACL models for attribute
schema objects...oh well)



CR Number                     : 12303
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd core dump in idle cell w/ open dcecp session
Reported Date                 : 9/22/94
Found in Baseline             : 1.1b18
Found Date                    : 9/22/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/22/94 public]

Yesterday I configged a single node cell w/ bl 18 on an HP.
Left last night in a dce_login and dcecp session.  This a.m.
secd had coredumped.  No svc errors recorded; empty secd.log.

> t
 0 free@libc + 0x00000008 (hp-ux export stub)
 1 cma_lib_malloc@libdce + 0x00000288 (0x7aff0740, 0, 0, 0)
 2 malloc@libc + 0x000004a8 (0x401280b8, 0x404440b8, 0x6e, 0)
 3 krb5_rc_dfl_expunge@libdce + 0x00000048 (0x401280b8, 0x4029e2d8, 0, 0)
 4 krb5_rc_dfl_store@libdce + 0x000000e8 (0x401280b8, 0x4029e2d8, 0x1, 0x1)
 5 krb5_rd_req_decoded@libdce + 0x000004dc (0x40196920, 0x403cfc68, 0x4029db50, 0)
 6 kdc_process_tgs_req + 0x0000050c (0x40442aa8, 0x4029db48, 0x4029db60, 0x4029e124)
 7 process_tgs_req + 0x000000f0 (0x40442aa8, 0x4029db48, 0x4029db60, 0x4029db68)
 8 dispatch + 0x000002a0 (0x4029db60, 0x4029db48, 0x4029db68, 0x4043bb2c)
 9 rsec_krb5rpc_sendto_kdc + 0x00000100 (0x40442310, 0x3b4, 0x404459c0, 0x1000)
10 op0_ssr + 0x00000244 (0x40442310, 0x40442188, 0x4029d53c, 0x4029d520)
11 rpc__dg_execute_call@libdce + 0x00001dd8 (0x40442188, 0, 0, 0)
12 cthread_call_executor@libdce + 0x000002d4 (0x40196658, 0x7af511d8, 0x401ff5a8, 0xf)
13 cma__thread_base@libdce + 0x0000021c (0x401ff5a8, 0, 0, 0)
14 cma__thread_start1@libdce + 0x0000004c (0x401ff5a8, 0, 0, 0)
15 cma__thread_start0@libdce + 0x00000008 (0x401ff5a8, 0, 0, 0)
16 cma__thread_start0@libdce + 0x00000008 (0x401ff5a8, 0, 0, 0)
...

[9/22/94 public]
How big is the core file???  If it's huge (or at least big enough to use
up most of the swap space that other processes and DCE daemons aren't using)
then it's a memory leak dup of 10924.  Any build on or after 9/22 should
be much better...

[9/22/94 public]
Not very big:

yosemite /opt/dcelocal/var/security K# ls -l core
-rw-rw-rw-   1 root     sys      5739356 Sep 22 09:16 core
yosemite /opt/dcelocal/var/security K# ls -s core
11232 core

[9/22/94 public]
My feeling is that the fix I just submitted for ot12106 will fix this one also. 
Would you please check this one out tomorrow after the new build is done. 
Thanks.

[9/23/94 public]
While testing again can never hurt, I see no reason why ot12106 would have
any affect on this problem.  That CR had to do with creating a schema entry
corrupting memory, while this one is in an idle cell (ie: no test that would
be creating schema entries).  I agree with the assessment above that it's
not a memory leak problem given the relatively small size of the core file.

NOTE!!! That traceback looks kind of strange (malloc@libc calling cma_malloc
calling free@libc ???).   I haven't checked yet, but I have no idea why
cma_malloc would want to call free and it doesn't seem possible for the real
malloc to be calling cma_malloc() (it should be the other  way around).
BUT!  Also note that 
 4 krb5_rc_dfl_store@libdce + 0x000000e8 (0x401280b8, 0x4029e2d8, 0x1, 0x1)
is where one of the last remaining memory leaks that Sentinel is complaining
about is coming from.  We had dismissed it for not because it was basically
storing things in a krb5 replay cache that had to stay around for a while
and I couldn't figure out how to get it to purge the cache (like it was when
it core dumped in 
 3 krb5_rc_dfl_expunge@libdce + 0x00000048 (0x401280b8, 0x4029e2d8, 0, 0)
above.  So, this bad free could be why there's a memory leak (not freeing
the correct pointer which usually just leaks memory, but can cause the above
problem occasionally).

[11/21/94 public]

I'm cancelling this OT.  This problem was never seen again at OSF and I am
unable to reproduce it here at HP.  If anyone else stumbles across this, please
open an new OT with additional info.



CR Number                     : 12274
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit cell failure
Reported Date                 : 9/20/94
Found in Baseline             : 1.1b18
Found Date                    : 9/20/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/20/94 public]

Several times today I have attempted to establish intercell
authentication between 2 OSF/1 systems using DNS. Each time I have
reinstalled and configured the cells from scratch, and each time
I get the following :

rgy_edit=> cell /.../meadows.qadce.osf.org  
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:    (enter -dce-)
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account:  (enter -dce-)
Enter expiration date [yy/mm/dd or 'none']: (none) 
?(rgy_edit) Incomplete cell add - Invalid password (Registry Edit
Kernel) (dce / sad)

I've successfully setup intercell communication using BL18
earlier.

[9/21/94 public]
Using the latest bits from Nightly (9/21), the following worked successfully:
1. Configured a single machine cell on HP/UX.
2. Configured a single machine cell on 486.
3. Ran cdscp defined cached server command on both machines.
4. Ran rg_edit cell command on both machines.
5. Logged in from one cell to the other as cell_admin.

Everything worked ok.
spring : dce_login cell_admin -dce-
Password must be changed!
spring : cdscp define cached server sunrise tower ncacn_ip_tcp:130.105.4.197
spring : rgy_edit
Current site is: registry server at /.../hp_cell/subsys/dce/sec/master 
rgy_edit=> cell /.../486_cell
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
  Principals and Accounts have been created
rgy_edit=> quit
bye.
spring : exit
spring : klist
No DCE identity available: No currently established network identity for
which context exists (dce / sec)

Kerberos Ticket Information:
Ticket cache: /tmp/krb5cc_1359
Default principal: tester@hp_cell
spring : dce_login /.../486_cell/cell_admin -dce-
Password must be changed!
spring : klist
DCE Identity Information:
        Warning: Identity information is not certified
        Global Principal: /.../486_cell/cell_admin
        Cell:      0d2e5c3e-d54e-11cd-960a-0000c04fd04c /.../486_cell
        Principal: 00000064-d54e-21cd-9600-0000c04fd04c cell_admin
        Group:     0000000c-d54e-21cd-9601-0000c04fd04c none
        Local Groups:
                0000000c-d54e-21cd-9601-0000c04fd04c none
                00000064-d54e-21cd-8b01-0000c04fd04c acct-admin
                00000065-d54e-21cd-8b01-0000c04fd04c subsys/dce/sec-admin
                00000066-d54e-21cd-8b01-0000c04fd04c subsys/dce/cds-admin
                00000067-d54e-21cd-8b01-0000c04fd04c subsys/dce/dts-admin
                0000006a-d54e-21cd-8b01-0000c04fd04c subsys/dce/audit-admin

Identity Info Expires: 94/09/21:20:27:07
Account Expires:       never
Passwd Expires:        never

Kerberos Ticket Information:
Ticket cache: /opt/dcelocal/var/security/creds/dcecred_1e94e300
Default principal: cell_admin@486_cell
Server: krbtgt/486_cell@486_cell
        valid 94/09/21:10:27:07 to 94/09/21:20:27:07
Server: dce-rgy@486_cell
        valid 94/09/21:10:27:08 to 94/09/21:20:27:07
Server: krbtgt/hp_cell@486_cell
        valid 94/09/21:10:27:09 to 94/09/21:20:27:07
Server: dce-rgy@hp_cell
        valid 94/09/21:10:27:47 to 94/09/21:20:27:07
Server: dce-ptgt@486_cell
        valid 94/09/21:10:33:56 to 94/09/21:12:33:56
Client: dce-ptgt@486_cell       Server: krbtgt/486_cell@486_cell
        valid 94/09/21:10:33:57 to 94/09/21:12:33:56
Server: dce-ptgt@hp_cell
        valid 94/09/21:10:34:37 to 94/09/21:12:34:37
Client: dce-ptgt@486_cell       Server: krbtgt/hp_cell@486_cell
        valid 94/09/21:10:34:00 to 94/09/21:12:33:56
Client: dce-ptgt@486_cell       Server: dce-ptgt@hp_cell
        valid 94/09/21:10:34:38 to 94/09/21:12:33:56
Client: dce-ptgt@hp_cell        Server: krbtgt/hp_cell@hp_cell
        valid 94/09/21:10:34:39 to 94/09/21:12:33:56
Client: dce-ptgt@hp_cell        Server: dce-rgy@hp_cell
        valid 94/09/21:10:34:39 to 94/09/21:12:33:56
Client: dce-ptgt@486_cell       Server: dce-rgy@486_cell
        valid 94/09/21:10:34:02 to 94/09/21:12:33:56

Rick, could you plaese clean-up, re-install and see if yoy can re-produce
the rgy_edit cell failure problem. If not, please cancel this CR.

[ sekhar 9/21/94 public ]

Rick, could you please double check to make sure that the 
cell_admin password for the cell /.../meadows.qadce.osf.org 
is indeed -dce- . If not, you would get the error "Invalid password" .

[9/21/94 public]

Yes, the password is -dce- on both sides. I rebooted both systems
since they'd been up a couple of months, then setup serviceability
started dce, and tried rgy_edit cell again. Same result. I'll try
installing bl18.1 on both nodes.

[9/21/94 public]
We (Rick and I) used the NB to isolate the problem further and here are the
findings. (HP-HP configuration is not tested yet)

1. HP - 486 rgy_edit cell command works both ways using cdscp define cached 
            server instead of gdad/DNS.
2. 486 - 486 rgy_edit cell command fails with the error as indicated by
   Rick above using cdscp define cached server as well as gdad/DNS.

Here is the output when cell command fails:

rgy_edit=> cell /.../woodlands.qadce.osf.org
(rca_lock_handle) locking 442de0
(rca_unlock_handle) unlocking 4c5740
(rca_lock_handle) locking 442de0
(rca_check_binding) checking 4c5740
(rca_unlock_handle) unlocking 4c5740
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
(rca_lock_handle) locking 442de0
(rca_check_binding) checking 4c5740
(rca_unlock_handle) unlocking 4c5740
(rca_lock_handle) locking 442de0
(rca_check_binding) checking 4c5740
(rca_unlock_handle) unlocking 4c5740
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
(binding_cache_lookup) Looking for site /.../woodlands.qadce.osf.org, cell
, princ dce-rgy, type 0
(binding_cache_lookup) Looking at 4c5740: site
`/.../486_cell/subsys/dce/sec/master' cell `/.../486_cell' princ
`dce-rgy@486_cell' 1
Site mismatch
(binding_cache_lookup) Looking at 4c5c40: site
`/.../486_cell/subsys/dce/sec/master' cell `/.../486_cell' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Cache miss
(rca_site_bind_nsi) Attempting to bind to site /.../woodlands.qadce.osf.org
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell
/.../woodlands.qadce.osf.org
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==4c6240
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../woodlands.qadce.osf.org, status 0
(rca_setup_handle) Replace entry name with
/.../woodlands.qadce.osf.org/subsys/dce/sec/master
(rca_site_bind) Bound to Cell '/.../woodlands.qadce.osf.org'
(rca_site_bind) Bound to Site
'/.../woodlands.qadce.osf.org/subsys/dce/sec/master'
(rca_lock_handle) locking 4438b0
(rca_unlock_handle) unlocking 4c5f40
(rca_site_bind) String Binding
'b5c34960-d565-11cd-a32a-0000c06ad04c@ncacn_ip_tcp:130.105.5.138[1475]'
Purging binding cache
(binding_cache_enter) Adding 4c5f40 to binding cache: site
/.../woodlands.qadce.osf.org/subsys/dce/sec/master cell
/.../woodlands.qadce.osf.org princ (null) type 0
(rca_lock_handle) locking 4438b0
(rca_unlock_handle) unlocking 4c5f40
(rca_lock_handle) locking 4438b0
4c5f40: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 4c5f40
(rca_lock_handle) locking 5f45e0
(rca_check_binding) checking 4c6140
(rca_unlock_handle) unlocking 4c6140
(rca_lock_handle) locking 442de0
(rca_check_binding) checking 4c5740
(rca_unlock_handle) unlocking 4c5740
(rca_lock_handle) locking 5f45e0
4c6140: Dropping site refcount from 1 to 0
(rca_unlock_handle) unlocking 4c6140
(binding_cache_lookup) Looking for site /.../486_cell, cell , princ
dce-rgy, type 0
(binding_cache_lookup) Looking at 4c5f40: site
`/.../woodlands.qadce.osf.org/subsys/dce/sec/master' cell
`/.../woodlands.qadce.osf.org' princ `(null)' 0
Site mismatch
(binding_cache_lookup) Looking at 4c5740: site
`/.../486_cell/subsys/dce/sec/master' cell `/.../486_cell' princ
`dce-rgy@486_cell' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at 4c5c40: site
`/.../486_cell/subsys/dce/sec/master' cell `/.../486_cell' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4c5c40
returning cached context 4c5c40
(rca_lock_handle) locking 443a60
(rca_check_binding) checking 4c5c40
(rca_unlock_handle) unlocking 4c5c40
(binding_cache_lookup) Looking for site /.../woodlands.qadce.osf.org, cell
/.../woodlands.qadce.osf.org, princ dce-rgy, type 0
(binding_cache_lookup) Looking at 4c5f40: site
`/.../woodlands.qadce.osf.org/subsys/dce/sec/master' cell
`/.../woodlands.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4c5f40
returning cached context 4c5f40
(rca_lock_handle) locking 4438b0
(rca_check_binding) checking 4c5f40
(rca_unlock_handle) unlocking 4c5f40
(rca_lock_handle) locking 4438b0
4c5f40: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 4c5f40
(rca_lock_handle) locking 443a60
4c5c40: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 4c5c40
(binding_cache_lookup) Looking for site /.../woodlands.qadce.osf.org, cell
/.../woodlands.qadce.osf.org, princ (null), type 0
(binding_cache_lookup) Looking at 4c5f40: site
`/.../woodlands.qadce.osf.org/subsys/dce/sec/master' cell
`/.../woodlands.qadce.osf.org' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 4c5f40
returning cached context 4c5f40
(rca_lock_handle) locking 4438b0
(rca_check_binding) checking 4c5f40
(rca_unlock_handle) unlocking 4c5f40
(rca_lock_handle) locking 4438b0
4c5f40: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 4c5f40
?(rgy_edit) Incomplete cell add - Invalid password (Registry Edit Kernel)
(dce / sad)

[ sekhar 9/21/94 public ]

Turning on DEBUG_SEC will not really help in this case 
since DEBUG_SEC is turning on debugging in registry binding code
and there are no problems here ( as also indicated by the trace above ).

There are only a handful of places where this error code "Invalid passwd"
is generated (and where the real error is being mapped to this error). So 
I will instrument the code to dump the real error code and we should 
try to reproduce the problem with the instrumented version. This won't
fix the problem but hopefully yield more information.

[9/21/94 public]

Some more data points. Using gdad/DNS, HP-HP works, HP to OSF
works, OSF to HP works, but OSF to OSF doesn't work.

[09/21/94 public]

This could be a bug in the login preauthentication code.

Please try the following to isolate the problem further:

1) kill sec_clientd or turn off the secval portion of dced (not sure how to do this)
2) dce_login (intercell)

If it works, it's a good bet it is a problem in the preauth code.

[ sekhar 9/21/94 public ]

Checked in sec_login_pvt.c . Please rebuild libdce with 
sec_login_pvt.c version 1.1.35.2 .

Then before invoking rgy_edit turn on debug 

   export SVC_SEC_DBG=sec:*.1:STDERR:--

[ sekhar 9/23/94 public ] 

Reproduced the problem locally here with HP-OSF cell. Both HP and OSF
are running bl-18 . And the problem appears to be occuring only when
gdad is configured.  I will start debugging and update this OT when
I have more information.

[9/28/94 public]
Adding some information.  Configuration is two single-machine cells running
binaries from nightly build of 9/27 (BL19.1+)  Cells are configured with
X.500 names, are running GDS, and GDS intercell has been set up -- thus,
gdad is running.  

rgy_edit=> cell /.../c=us/o=osf/ou=dce/cn=haven
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
?(rgy_edit) Incomplete cell add - Invalid password (Registry Edit Kernel) (dce / sad)
rgy_edit=> quit
bye.

Note that UX->486 and 486->UX GDS intercell work fine.  I haven't tried
UX->UX yet.

[9/29/94 public]
Found the problem with rgy_edit cell command giving Invalid password error.
The clocks on these machines were off by more than 7 minutes. After
bringing both clocks to the same time, rgy_edit cell command worked
successfully. dce_login to the foreign cell also worked. These are the
machines we were having problems running rgy_edit cell command for last two
days. That is the reason why some people saw this problem intermittently.
We will cancel this CR once Bill or Mike confirms what is mentioned here.
CR 12278 still needs further investigation.

[9/29/94 public]
Confirmed:  You can get invalid password errors if the clocks are skewed.
If you no longer see the problem with the fixed clocks, then this should
be cancelled.  If it really bothers you that this was so hard to find, open
an enhancement request, asking for improved error message (or if that's not
possible because of compatibility reasons, then at least serviceability
points that would've shown us the clock skew message) when this happens...



CR Number                     : 12230
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : dce_login
Short Description             : dce_login hangs after setting up intercell authentication
Reported Date                 : 9/16/94
Found in Baseline             : 1.1b17
Found Date                    : 9/16/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/16/94 public]

While trying to perform a network login to a remote cell using a 
single-line command ( dce_login <cell/principal> passwd ),
my process hangs after echoing the message "Password must
be changed!" 

If I instead (in a new process) perform the dce_login with interactive
prompting, it works fine.

[9/16/94 public]

Oops, no, in today's case interactive use of dce_login doesn't work
either.

Also, the same problem recurs in BL18 (from HP to OSF/1). 
Is it actually the same problem as was reported in CR 12178?

[9/22/94 public]

Using BL18.2, I establish intercell authentication from an HP
system to an OSF system using gdad/DNS. I then try to authenticate
locally using "dce_login cell_admin -dce-". The message "Password
must be changed!" is displayed and then the process hangs.

I can perform the same login from within dcecp at this point 
successfully.

I can also use the back door "dce_login_noexec" to login 
successfully.

[9/27/94 public]

Using 9/26 nightly build bits did the follwing:
1. Configured a single machine cell on HP/UX.
2. Configured a single machine cell on 486/OSF1.
3. Ran cdscp define cached server on HP/UX.
4. Ran rgy_edit cell to add account in foreign cell (486).
5. Logged into foreign cell as cell_admin with no problem; i.e. it comes
   back with promnpt and is not hung as above comment indicates.

# dce_login cell_admin -dce-
Password must be changed!
# rgy_edit
Current site is: registry server at /.../hp_cell/subsys/dce/sec/master 
rgy_edit=> exit
bye.
# cdscp define cached server sunrise tower ncacn_ip_tcp:130.105.4.197
# rgy_edit
Current site is: registry server at /.../hp_cell/subsys/dce/sec/master 
rgy_edit=> cell /.../486_cell
Enter group name of the local account for the foreign cell: none
Enter group name of the foreign account for the local cell: none
Enter org name of the local account for the foreign cell: none
Enter org name of the foreign account for the local cell: none
Enter your password:   
Enter account id to log into foreign cell with: cell_admin
Enter password for foreign account: 
Enter expiration date [yy/mm/dd or 'none']: (none) 
  Principals and Accounts have been created
spring : dce_login /.../486_cell/cell_admin -dce-
Password must be changed!
spring : 

Rick, could you do the similar steps as above (configure two cells, add
account for foreign cell and log into foreign cell and see if you can
re-create the above hang problem. If not, please cancel this CR. Thanks.

[9/28/94 public]

We've been doing a great deal of intercell testing recently
against BL19 and haven't seen this problem recur, so it's
cancelled.



CR Number                     : 12208
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : intercell
Short Description             : Intercell doesn't work when the target is an HP/UX machine via DNS.
Reported Date                 : 9/15/94
Found in Baseline             : 1.1
Found Date                    : 9/15/94
Severity                      : A
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/15/94 public]

As per Rob's request (CR 11623), opening a new CR for the HP-HP intercell
problem.

Here are the deatils from CR 11623:

[9/14/94 public]
This thing doesn't seem to want to die. Rick fadden opened 12007 basically
stateing that teh rgy_edit cell command doesn't workbetween two hps. Ihave
tested
intercell several times during the past few days between an hp and a 486
but
not hp to hp. I check this morning and rick was correct. Its a bit
different
than before though. I set up the dns data base brought up gdad and checked
unauthenticated access to the other cell. It worked. I then ran the
rgy_edit
cell command. It hung forever. At least I waited about 15 or 20 minutes. No
message it just hung after asking all of its questions. I sigterm'd it and
edited the pe_site file. The rgy_edit cell command then worked. I only
tried
once and only thought dns. I will tray again in the morning and do it
through
define cache server.

[9/15/94 public]
As Rob mentioned in the CR he closed again yesterday (where this problem
was reported and then asked to be moved), telling us that it's hung does
nothing to help us narrow down the problem.  When you're reporting a hung
process, please send it a signal to coredump (ctrl-\ is the easiest way)
and let us know what the traceback is.  If it's a rgy_edit command or
anything that's likely to be hung binding to a registry server, please
rerun it with the environment variable DEBUG_SEC set (Rob likes 3, I prefer
all the output and just set it to 10) so we can see what it was doing when
it hung.  NOTE:  Unless it's stuck in an infinite loop (in which case you'll
see the DEBUG_SEC input continue forever, and top will show lots of CPU
usage), then about the only place it can hang is within CDS (RPC times out,
CDS can hang you because it uses UDS to communicate between your process
and the clerk).

[9/19/94 public]

Continuing the saga... With bl18 installed, I find the same
behavior from an OSF/1 machine to an HP/UX as I'd noted earlier
between two HP/UX machines. I don't encounter the hanging
situation that John mentions, but get back a quick registry
server unavailable error:

?(rgy_edit) Incomplete cell add - Registry server unavailable
(Registry Edit Kernel) (dce / sad)

As before, after I edit the pe_site files between the two machines
the rgy_edit cell command works.

[9/19/94 public]
We have changed dce_config such that in order to run gdad you must go
through the additional server configuration option. You can no longer
just type gdad & to bring it up. I suspect Rick was doing the later.
I ran intercell between a 486 and an hp after doing define cached server
to inform one machine about the other's name space. This worked fine. I'll
check to make sure it also works after configuring gdad but even if that
doesn't work its not security's problem. If it works after define cached
server security is off the hook. Note - we still believe the hp - hp 
connection is broken.  I will however do a check on this shortly. You 
never know it may work.

[9/19/94 public]
And in fact the 486-hp intercell works both through define cached server and
gdad. I haven't been able to corner an hp to check out hp-hp. I'll recheck
that as soon as I can get my hands on one.

[9/19/94 public]
OK. Intercell seems to be working hp-hp now. Go figure.
I'll drop the priority on this and check it once or twice over the next 
couple of days. If it works ok I'll cancel this in a day or two.

[9/23/94 public]
Well, it's been a day or two?  Has anybody been able to reproduce this lately?

[9/23/94 public]
Using BL18.2, HP-HP and OSF to HP both work using gdad/DNS.
Cancelled.



CR Number                     : 12128
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : code clean
Short Description             : no prototype for sec_rgy_attr_lookup_by_name
Reported Date                 : 9/12/94
Found in Baseline             : 1.1
Found Date                    : 9/12/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/12/94 public]

gds calls sec_rgy_attr_lookup_by_name (in gds/gds_sec/gds_sec_rgy.c).
There is no prototyping for this function in any security
include file - so we get a warning when compiling gds/gds_sec/gds_sec_rgy.c.

[09/12/94 public]
Sorry - it's in dce/sec_rgy_attr.h. Cancelled.



CR Number                     : 12115
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : secd replica core dumps at restart
with "cthread create failed..."
Reported Date                 : 9/8/94
Found in Baseline             : 1.1b16
Found Date                    : 9/8/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/8/94 public]

I created a big registry database successfully - 10,000 principals.
I brought down the cell and re-started it.  The secd replica,
running on an OSF1 machines, dumped core and left the following
message in secd.log

root@barbados> cat secd.log
cthread create failed
rpc__list_element_alloc/(*list_desc->alloc_rtn)(element): call failed

Using gdb and the usual command - a la Tom J.- failed to add any
useful information.

The reason why I am filing a separate CR, to the ones already filed, is
because the current ones are attributed to memory leaks. But this seems
to be a different problem. Also, the message left by secd in new. If this
is a variation, please feel free to dup it.

This can be reproduced everytime.

[ sekhar 9/21/94 public ]

Those error messages are generated by the RPC runtime . I believe 
that the sams entries (from rpc.sams) for the messages are :

cthread create failed : sams entry rpc_s_cthread_create_failed
rpc__list_element_alloc/(*list_desc->alloc_rtn)(element): call failed
   : sams entry rpc_m_call_failed_no_status

Is this an internal error ? ( The "explanation" field for 
rpc_s_cthread_create_failed says so ). 

Added dce-ot-rpc to the interest list - can someone can provide
more info on what may be causing these errors ?

[9/21/94 public]

I believe that the error from rpc__list_element_alloc() is caused by the
malloc() or pthread_create() failure. rpc_s_cthread_create_failed is caused
by the pthread_create() failure, which is probably caused by the malloc()
failure in CMA. I suggest checking the swap space and the process's size.

[9/21/94 public]

The failure occurs when the secd replica is starting up. I believe at that
point the secd replica is being updated by the master with all the
accounts, etc. The swap space at that time is about 130 Mb. I did not
check the processes size since DCE was just staring up. I did not think 
secd had had time to belly itself so fast. If knowing the size of the DCE
processes at startup, under these circunstances, is an imperative in making
progress on a fix, I will try to recreate the problem to find out.

[ sekhar 9/21/94 public ]

This problem does need to be reproduced ( making sure that datasize 
is not set to a small value ) with a baselevel which is more recent baselevel
(e.g. bl18 ) than bl16 which is old .  There have been several memory 
leak fixes since then ( although I can't say with certainity whether 
they could be the cause of the problem).  Thanks.

[9/21/94 public]

Although I'm not sure if this is related to this problem, the bulk data
transfer over the CN protocol can cause the receiver's process size growth.
(See OT 9336.) Does the secd-replica-update send the large data?

[9/23/94 public]

I tried reproducing this problem with the LGB (9/21/94) and 
did not happen.
 
Due to time, I only created 80000. Since it used to die very soon 
after restart and now it completes successfully, I am canceling this CR.



CR Number                     : 12070
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : systest
Short Description             : Credentials cache I/O operation failed
Reported Date                 : 9/7/94
Found in Baseline             : 1.1b17
Found Date                    : 9/15/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/7/94 public]
Using bl-16.3, dfs.read_write_all.main in a 3 HP fldb cell with
3 users and 1 aggregate, 1 user failed immediately with:

Sorry.
User Identification Failure. - status 0x141290bd (dce / krb)
	where:
336761021 (decimal), 141290bd (hex): Credentials cache I/O operation failed XXX (dce / krb)

Assigning to Rick to rerun and add info or cancel.

[9/7/94 public]
In a run of security systest dcesepol, I got this error.  It only occurred
once in a 48hour run, about 3/4 through, on an attempted login.  That's
1 out of ~4500 logins.  No supporting/correlating data.  The previous
and subsequent logins worked fine for the same principal.

[9/15/94 public]
 
Two of 9 test clients failed with error  0x141290bd
 Credentials cache I/O operation failed XXX (dce / krb)
running rpc.sec.2 tests for about 7 hours.
 
The test clients were both on OSF/1 using tcp protocol.  The third client
on the machine, also running tcp didn't fail.  
 
 NB: baseline 17
 
 Cell:
 
 HPUX: cdsd secd dtsd
 OSF1: client dtsd
 OSF1; client dtsd ntp provider

[9/15/94 public]
Change component to sec so some of the right people start seeing
this.  Change title to better reflect symptom.  Rajendra, to whom
should this be assigned?

[9/15/94 public]

The fact that this failure apparently occurs during a dce_login
leads me to believe that

A) some process on the machine is leaking file descriptors, causing
   the attempted creation of the krb5 credential cache during
   dce_login to fail because some limit on the number file
   descriptors has been reached.

or

B) There is no file descriptor leak, just too many simultaneous
   processes with open file descriptors running.  Same result as
   (A).

or

(C) The disk partition holding credential cache files
    (/opt/dcelocal/var/security/creds) is full.  Perhaps
    some tests are not using kdestroy to flush credentials 
    created by test login?

Could someone who can weave the necessary OSF/1 spells
check out the limits on the machines in question.  Also, 
check the available disk space the next time you see this
failure.

Thanks.

[9/15/94 public]
Thanks for the update Greg - at least in the 1st case... there
was no OSF/1 machine involved - I'm quite sure option C was not
the case (because I've been bitten by that one before and know
to look for it :-) The dfs.read_write_all.main test does NOT do
a lot of dce_logins, each user (there were 3) logs in once and
goes .... option B is still a possibility though - this was an
all HP test - how do I find out the process limit (process
table size limit?) built into my dfs-supporting HPUX?

[9/15/94 public]
On hpucks, as root, run sam, select "Kernel Configuration", then
"Configurable Parameters".  Here's some things to look for:
maxfiles, maxfiles_lim, nfile.  These are probably set up low, as if the
workstation was going to be used by 1 or 2 people at a time, not by DCE svrs
and lots of tests simulating lots of users, so it's possible  that they may
need to be increased (you can do this through sam too, select the item you
want to change, then select the "Actions" menu?  When you're done modifying
parameters, tell it to rebuild the kernel and reboot).

[9/15/94 public]
Gail, Andy can rebuild custom kernels that include the 
necessary DFS support.

[9/23/94 public]
Any news on this one?  Is it reproducible with bl18+?   If so, is that with
a DFS kernel that already has the increased maxfiles limit?   If it is
reproducible, then this is one that I'll have to come down and look at
down there, since I don't have the setup here to reproduce it...

[9/28/94 public]
Is this one still reproduceable?

[9/29/94 public]
Sorry for the lack of updates here - DFS testing was pretty blocked
by other CRs so bl-20 will be the first chance we get to run a lot
of tests and see what we see ... I don't believe Peter O has seen
this problem since updating to the new kernel - if dfs.read_write_all.main and 
rpc.sec.2 run (hopefully a couple of times) w/o turning this one up,
we can cancel.

[10/3/94 public]
Cancelling - hasn't been seen and we've been able to do a lot of testing
in the last week.



CR Number                     : 12054
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 12009, 11925
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : krb5
Short Description             : dtsd core dumps in krb5_free_authdata
Reported Date                 : 9/6/94
Found in Baseline             : 1.1b16
Found Date                    : 9/6/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/6/94 public]

In Build bl16.3 dts core dumped (bus error)
 0 free@libc + 0x00000008 (hp-ux export stub)
 1 cma_lib_free@libdce + 0x00000284 (0x6, 0x401c32e8, 0x7af30270, 0x802e338b)
 2 free@libc + 0x00000224 (0x406c2745, 0x40096730, 0x4049de5c, 0x2000000)
 3 krb5_free_authdata@libdce + 0x0000004c (0x406c2728, 0x3, 0x4049de20, 0x401c32e8)
 4 krb5_free_cred_contents@libdce + 0x000001ac (0x406c2550, 0x6, 0x1, 0x406c2728)
 5 krb5_free_creds@libdce + 0x00000030 (0x406c2550, 0x406c2728, 0x406c2290, 0x406bb910)
 6 krb5_free_tgt_creds@libdce + 0x0000003c (0x406bce48, 0x406c2550, 0x4049dd20, 0x40656438)
 7 krb5_get_credentials@libdce + 0x00000220 (0x10, 0x400966b0, 0x40656438, 0x4049dca0)
 8 sec_krb_get_cred@libdce + 0x00000268 (0x40095d60, 0x400d9d88, 0x5, 0x2)
 9 rpc__krb_get_tkt@libdce + 0x000003d8 (0x400dcf08, 0x7af3736a, 0x406c2850, 0x5)
10 rpc__krb_dg_pre_call@libdce + 0x000002ec (0x406b51a8, 0x406c41c0, 0x4049db20, 0x1)
11 rpc__dg_call_start@libdce + 0x000008c0 (0x406c41c0, 0, 0x40001300, 0x1)
12 rpc_call_start@libdce + 0x0000025c (0x406c41c0, 0, 0x40001300, 0x1)
13 ServerRequestTime + 0x00000144 (0x406c41c0, 0x406c2780, 0x4049d49c, 0x4049d4a0)

This happened on one of four dts servers (the other three are fine), after
running for about three days.

Activity in the cell were 3 dfs tests, no stress on dts.

[9/7/94 public]

I browsed through the kerberos library code, and the only time a process
should end up in krb5_free_tgt_creds is after the acquisition of
an intercell ticket-granting ticket.  In that case, there are known
memory corruption problems involving the authdata field of TGT
credentials that are (hopefully) fixed by the fix for OT 11925 that
was submitted on 9/6.

If this cannot be reproduced on a build including that fix, it
should be cancelled.

[9/6/94 public]

No longer seen on builds with fix.  Canceled.



CR Number                     : 12052
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : cdsd
Short Description             : cdsd dumps core running rpc.cds.3 tests
Reported Date                 : 9/6/94
Found in Baseline             : 1.1b16
Found Date                    : 9/6/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/6/94 public]

cdsd dump core this weekend after running the rpc.cds.3 tests for 7-8 hours.
Have shown this to jd and Rajendra, it's most likely a security problem, but
I'll let John make the handoff.

NB0830 (secd rebuild in afternoon 8/31)

Cell config:

HPUX: secd,cdsd,dtsd 
OSF1: client,dtsd
OSF1: client,dtsd,ntp provider
OSF1: client,dts clerk

core trace

 0 Checksum2krb5_checksum@libdce + 0x00000008 (hp-ux export stub)
 1 asn1_field2krb5_data@libdce + 0x00000094 (0x4128dc38, 0, 0x403a7b7c, 0x403a7bbc)
 2 opt_Checksum2krb5_checksum@lib + 0x0000006c (0x4128dc38, 0x4128fc14, 0x4128efb0, 0x8)
 3 Authenticator2krb5_authenticat + 0x000000a8 (0x4128fc10, 0x4128efb0, 0x4128fc10, 0)
 4 krb5_decode_generic@libdce + 0x00000140 (0x407538d4, 0x407538c0, 0x7af3867a, 0x34)
 5 decrypt_authenticator@libdce + 0x000002f0 (0x4128f430, 0x4128fb84, 0x1, 0x2)
 6 krb5_rd_req_decoded@libdce + 0x00000328 (0x4128f430, 0, 0, 0)
 7 krb5_rd_req@libdce + 0x0000011c (0x40753658, 0, 0, 0)
 8 sec_krb_decode_msg_common_frag + 0x00000214 (0x407534a4, 0x2, 0x405cd990, 0x405cd99c)
 9 sec_krb_decode_message_common@ + 0x0000007c (0x407534a4, 0x2, 0x405cd990, 0x405cd99c)
10 sec_krb_cn_decode_message@libd + 0x0000007c (0x407534a4, 0x2, 0x405cd99c, 0x405cd9a0)
11 rpc__krb_cn_vfy_client_req@lib + 0x00000318 (0x404a3058, 0x40f98d70, 0x411cb6b8, 0x420)
12 rpc__cn_assoc_process_auth_tlr + 0x00000514 (0x404a2f78, 0x411cb668, 0x470, 0x411cff08)
13 do_assoc_req_action_rtn@libdce + 0x00000684 (0x404a2f78, 0x411cb648, 0x404a2f80, 0)
14 do_assoc_action_rtn@libdce + 0x000001a0 (0x404a2f78, 0x411cb648, 0x404a2f80, 0x411cb6b0)
15 rpc__cn_sm_eval_event@libdce + 0x000000e4 (0x64, 0x411cb648, 0x404a2f78, 0x404a2f80)
16 receive_dispatch@libdce + 0x00002824 (0x404a2f78, 0x7aff92c0, 0x40752ce8, 0x134)
17 rpc__cn_network_receiver@libdc + 0x00000a98 (0x404a2f78, 0x7af4f1b0, 0x4041c878, 0x38)
18 cma__thread_base@libdce + 0x0000021c (0x4041c878, 0, 0, 0)
19 cma__thread_start1@libdce + 0x0000004c (0x4041c878, 0, 0, 0)
.
.
.

>lr $r
$r0       = 0
$r1       = 0x4128dc38
$r2       = 0x81ff5c67
$r3       = 0
$r4       = 0
$r5       = 0
$r6       = 0
$r7       = 0
$r8       = 0
$r9       = 0
$r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      = 0x7af30270
$r20      = 0x8002
$r21      = 0
$r22      = 0x1
$r23      = 0x3544e4
$r24      = 0x7ffe6000
$r25      = 0
$r26      = 0x4128dc38
$r27      = 0x4002bb90
$r28      = 0
$r29      = 0x1
$r30      = 0x40753a20
$r31      = 0x8002
$ret0     = 0
$ret1     = 0x1

>lr $a
$arg0     = 0x4128dc38
$arg1     = 0
$arg2     = 0x7ffe6000
$arg3     = 0x3544e4

>p *($pc - 16)\20i
0x81ff5c54  MTSP        1,0
0x81ff5c58  BE,N        0(0,2)
0x81ff5c5c  BL  collect+077c,2
0x81ff5c60  OR  0,0,0
0x81ff5c64  LDW -24(0,30),2
0x81ff5c68  LDSID       (0,2),1
0x81ff5c6c  MTSP        1,0
0x81ff5c70  BE,N        0(0,2)
0x81ff5c74  BL  __text_start+3f74,2
0x81ff5c78  OR  0,0,0
0x81ff5c7c  LDW -24(0,30),2
0x81ff5c80  LDSID       (0,2),1
0x81ff5c84  MTSP        1,0
0x81ff5c88  BE,N        0(0,2)
0x81ff5c8c  BL  gather_updates+059c,2
0x81ff5c90  OR  0,0,0
0x81ff5c94  LDW -24(0,30),2
0x81ff5c98  LDSID       (0,2),1
0x81ff5c9c  MTSP        1,0
0x81ff5ca0  BE,N        0(0,2)

[9/6/94 public]
I glanced at the trace before Peter opened this and it didn't look 
like cds was at fault but I told him to open it against cds and I'd
have a closer look. Now that I've looked I'm even less inclined to
believe cds is at fault. There doesn't appear to be a single cds frame 
on the stack. I'm no sure if its security or if bad information is being
given to security from rpc but since it seems to be landing in security
I'll assigne it there.

[9/6/94 public]
Although this is different from the defect that Greg just fixed (11925), it
is in code called from priv/auth code that he had changed recently and there's
a *slight* chance that the fix he made today might also fix this problem.
While there's no guarantees at this time that it's fixed, it would be very
helpful if you could run this test tomorrow or some time soon after that with
a build that has the fix that was just submitted for 11925.  Also, the rtns
that it was in before and during when it died mostly do lots of allocs and
memcpy()'s, so it would help to check the resource usage when it died (free
swap space, core file size, size of secd in case it's using up all the swap
space...).

[9/21/94 public]

I haven't been able to re-create this problem in over a week, so I'm
assuming one of the security fixes made this go away.



CR Number                     : 11999
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit 'good since date'
Reported Date                 : 9/1/94
Found in Baseline             : 1.1
Found Date                    : 9/1/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
			src/security/client/admin/rgy_edit/tty_conf.c
			src/security/h/sad_err.et
Sensitivity                   : public

[01/01/93 public]
[domian 3/19]



CR Number                     : 11982
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_acct.ksh delete works fine on hp but core dumps on osf/1
Reported Date                 : 8/31/94
Found in Baseline             : 1.1b16
Found Date                    : 8/31/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/31/94 public]


There is a script called rgy_acct.ksh that comes along with 
the multi-delegate test.  It adds and deletes entries
to the registry for use by the multi-delegate test

I am able to create entries using this script fine.
However, when I try to delete entries on an osf/1 machine
the script core dumps.  However, the script works fine on an hp machine.

The code for this script is in the afs cell under
/afs/dce.osf.org/project/dce/hp/dlg.tar

To recreate the bug

./rgy_acct.ksh create    (to create entries)
./rgy_acct.ksh delete    (to delete entries, core dumps under osf/1)

The last few lines of the script where it core dumps is as follows:


+ + print ktl -p string-conv
+ rgy_edit
+ awk {if ($1 ~ /\/string-conv$/) {printf ("%d ", $2)} }
Memory fault(coredump)

I am not able to get any output from the core file,
when I try gdb, I get "File format not recognized".

[8/31/94 public]
Try "strings core | more" to see if it looks like rgy_edit or ksh or awk
coredumped.  If it's not rgy_edit, then it's not a security problem.
If it is rgy_edit and you don't have a good core file, it could be because
there wasn't enough disk space to write out the entire core file and it's
truncated.

[8/31/94 public]

I am trying "strings core | more", however I don't know what to look for.
Have asked Max for help here at OSF.
Any hints are appreciated.

The very top of the more says (from "strings core | more"):

rgy_acct.ksh
@(#)$RCSfile: c011982,v $ $Revision: 1.5 $ (OSF) $Date: 94/09/19 11:29:57 $
@(#)$RCSfile: c011982,v $ $Revision: 1.5 $ (OSF) $Date: 1992/04/02 23:25:19
 $
@(#)$RCSfile: c011982,v $ $Revision: 1.5 $ (OSF) $Date: 1992/11/24 20:55:29

[8/31/94 public]
That's the same thing you get at the top of a strings /bin/ksh on osf/1,
but not if you do a strings of rgy_edit, so I'd say that your /bin/ksh
core dumped.  I've reassigned this from 'code' to 'test' because it's a
problem that the test script is going to have to work around.

[9/19/94 public]

Opened a CR (11107) against OSF/1. 
Can workaround problem by manually deleting registry items.
Cancelling bug.



CR Number                     : 11962
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : defunct sec_rgy_site_open_query, 
sec_rgy_site_bind_query
Reported Date                 : 8/30/94
Found in Baseline             : 1.1
Found Date                    : 8/30/94
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : ec_rgy_site_open_query, 
sec_rgy_site_bind_query
Sensitivity                   : public

[8/30/94 public]
defunct sec_rgy_site_open_query and
sec_rgy_site_bind_query

[10/12/94 public]
Marked as cancel per Joe Pato.  These are both 
marked as deprecated and alternative calls to use are 
given.



CR Number                     : 11952
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : bad malloc/free usage in
security API
Reported Date                 : 8/30/94
Found in Baseline             : 1.1b16
Found Date                    : 8/30/94
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/30/94 public]

When running the a debugging malloc library on the HP, the following 
security API calls generate errors:

	sec_id_parse_name	pointer within malloc arean but
				outside of data bounds 

	sec_rgy_pgo_name_to_id() MALLOC Warning from free():
				Malloc region does not have valid 
				magic number in header


The first is probably OK (although still wrong); the 2nd implies that 
memory is being free'd (fried?) that has never been malloc'ed ... a 
bad idea.

[8/31/94 public]
Neither of those routines are doing malloc/free/memcpy/strcpy themselves,
they basically just make RPC calls...  I suspect that you're using the
PD malloc tool that you link with the binary (as opposed to building everything
with it) and that it's really a lower level security call being made from
beneath the RPC layer that's performing the mischief...  Is there any way
to get more detail from this tool?

[8/31/94 public]

Yes, you can get more detail, but it means that you must recompile
using the specialized malloc header (renames all your
malloc/memXXX/strXXX functions). However, this would probably conflict
with using pthreads.h, that already renames a bunch of these functions
to make them thread-safe.

Not much help, I'm afraid.

[8/31/94 public]
Since the info reported in this CR can't possibly happen in those routines,
and since we can't get more info from this debug malloc because of a conflict
with pthread/cma malloc, and since we other CRs open for memory leak and
for mem corruption problems, I'm going to cancel this one.  When we get
real info from one of the other mem tracking packages (Bill had one for
cma_malloc and Sentinel is a possibility), we'll open CRs pointing to the
real problems...  Thanks for trying...



CR Number                     : 11913
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11423,11708
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : another "who are you" failure
Reported Date                 : 8/26/94
Found in Baseline             : 1.1b16
Found Date                    : 8/26/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/26/94 public]

Running the fts tests 12 and 14 on bl-16, hit (among other things -
see CR 11708 if interested):

Removing filesets...
Fileset 0,,123 on aggregate m3.aggr2 server /.:/hosts/dce11 deleted
AFS_SetContext(cobbler.osf.org) fails: who are you failed (dce / rpc)
Error in delete: who are you failed (dce / rpc)
AFS_SetContext(cobbler.osf.org) fails: who are you failed (dce / rpc)
Error in delete: who are you failed (dce / rpc)
Fileset 0,,134 on aggregate m3.aggr2 server /.:/hosts/dce11 deleted
fts delmount: error removing mount point for /.../cho_cell.qadce.osf.org/fs/test/ft4.5377: Connection timed out

I'm wondering if the fix for 11423 was only done in user space and not
kernel space (maybe?). Unfortunately, this problem is not AS easily
reproducable as 11423 - I have successfully removed filesets and not
seen these messages. Any ideas?

[8/26/94 public]
In addition, a subsequent run of the fts tests resulted in a ftserver
core dump - trace contains "localauth" routines - see CR 11708 for
details. (Recall the "-localauth" switch was the easiest way to
produce "who are you" problems, CR 11423, since this switch caused
an immediate ticket refresh).

[8/29/94 public]
Can you reproduce the who_are_you error while running the auth helper in
debug mode (ie: restart dfsbind with -debug) and see if we get any error
messages from it)?  If running this across multiple machines then run the
dfsbind on the server side in debug mode at least, and then if you have time
and it's not a hassle, try it on the client side too.  I believe the fix
for 11423 was in common code, so that shouldn't be the problem. 
Can you try to reproduce this problem with something later than 8/25
when I submitted a fix to sec_authn.c, sec_authn_krpc.c and auth_helper.c?

[8/29/94 public]
Thanks for the suggestion - reinstalling with LGB 16.2 (binaries dated 8/24 and
8/25) - will let you know.

[8/30/94 public]
Didn't reproduce "who are you" error with 16.2 - but dfsbind core dumped
early on (another instance of CR 11925). Dropping the priority until I
can reproduce/cancel.

[9/6/94 public]
Darn - reproduced ...  with bl-16.3 - but not much more info:
Removing filesets...
AFS_SetContext(dce11.osf.org) fails: Who are you failed (dce / rpc)
Error in delete: Who are you failed (dce / rpc)

Error occured only once - at about the 21 hour mark.
Rerunning tonight with dfsbind -debug.

[9/6/94 public]
Bummer ... starting up dfsbind -debug slows things down so much
you can't do anything - (dfsbind -debug on 3 servers seems to 
prevent quorum) - stopping and restarting some w/o debug didn't
seem to be enough to recover - other ideas?

[9/14/94 public]
Reproduced with bl-17 - (This portion of the fts tests is testing
quotas so "disk quota exceeded" messages are GOOD :-)

dfs: rpc errors (code 382312711) from the fx server 130.105.5.22 in cell cobbler_cell.qadce.osf.org
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: rpc errors (code 382312543) from the fx server 130.105.202.28 in cell cobbler_cell.qadce.osf.org
dfs: server disk quota exceeded
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.202.28 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.202.28 in cell cobbler_cell.qadce.osf.org back up!
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: rpc errors (code 382312543) from the fx server 130.105.201.7 in cell cobbler_cell.qadce.osf.org
dfs: set auth binding failed (code 382312711); running unauthenticated.
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.201.7 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.201.7 in cell cobbler_cell.qadce.osf.org back up!
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded

where:
stcode_hp 382312711
382312711 (decimal), 16c9a107 (hex): Helper process catatonic (dce / rpc)

stcode_hp 691089613
691089613 (decimal), 293130cd (hex): status 0x293130cd (dfs / xvl)

stcode_hp 382312543
382312543 (decimal), 16c9a05f (hex): Who are you failed (dce / rpc)

Still investigating ... any input welcome ...

[9/14/94 public]
Well - dfsbind is awful busy on dce8 - using top, it showed it was using
CPU constantly, sometimes as much as 80% and had logged 408 minutes of
time since the cell was started 48 hours ago).

TTY   PID USERNAME  PRI   NI  SIZE  RES  STATE   TIME   %WCPU  %CPU  COMMAND
?     8187 root    241   20 10428K  352K  wait  409:39  85.01  84.86/opt/dcelocal/bin/dfsbind


I used xdb to attach to it to see if I could tell what was going on - can't set any breakpoints (not built
correctly?) but I can send SEGV signals get a trace and continue! Can
we trust any of this?! Second 2 traces are the same anyway ...

 0 _doprnt@libc + 0x0000019c (0x4001bec8, 0x400da138, 0, 0)
 1 vsprintf@libc + 0x00000040 (0x4001bec8, 0x7aff1388, 0, 0)
 2 cma_sprintf@libdce + 0x000001c4 (0x409a64b0, 0x7afb3110, 0x13, 0x40149c24)
 3 asn1_text_time@libdce + 0x0000031c (0x409a64b0, 0x40149a20, 0x1, 0)
 4 asn1_gen_time@libdce + 0x0000003c (0x409a64b0, 0x40149a20, 0, 0)
 5 krb5_timestamp2asn1_field@libd + 0x00000084 (0x4014989c, 0x409a4624, 0x409a460c, 0)
 6 krb5_kdc_req2KDC_REQ_BODY@libd + 0x00000108 (0x40149884, 0x409a4600, 0xb, 0xa)
 7 krb5_encode_generic@libdce + 0x0000008c (0x40149884, 0x401498d4, 0x7af387ea, 0x48)
 8 krb5_send_tgs@libdce + 0x000006ac (0, 0x409a3664, 0x40140001, 0x40140002)
 9 krb5_get_cred_via_tgt@libdce + 0x000001b0 (0x401496f0, 0, 0x40140001, 0x40140002)
 10 krb5_get_cred_from_kdc@libdce + 0x00000984 (0x40277420, 0x409a3650, 0x40149660, 0x409a3650)
 11 krb5_get_credentials@libdce + 0x00000178 (0x10, 0x40277420, 0x409a3650, 0x401495e0)
 12 sec_krb_get_cred@libdce + 0x00000268 (0x409a37b0, 0x4099a610, 0x5, 0x2)
 13 rpc__krb_get_tkt@libdce + 0x000003d8 (0x409a34e8, 0x5, 0x4099eb60, 0x409a3538)
 14 rpc__krb_bnd_set_auth@libdce + 0x00000670 (0x4099eb60, 0x5, 0x409a37b0, 0x2)
 15 rpc_binding_set_auth_info@libd + 0x00000448 (0x4054e0e8, 0x4099eb60, 0x5, 0x1)
 16 rca_setup_handle@libdce + 0x000005e0 (0x4099fc98, 0x401482d4, 0x401482d4, 0)
 17 rca_site_bind_nsi_cell_if@libd + 0x000001dc (0x4099fc98, 0x40999a70, 0x7afa7920, 0x401482d4)
 18 rca_site_bind_nsi_cell@libdce + 0x000000d0 (0x4099fc98, 0x40999a70, 0x401482d4, 0)
 19 rca_nsi_binding_import@libdce + 0x000001ec (0x4099fc98, 0x401482d4, 0x401487a8, 0x401482d4)
 20 rca_site_bind@libdce + 0x0000059c (0x401483a0, 0x401476b0, 0x3, 0)
 21 sec_rgy_site_bind@libdce + 0x00000068 (0x40147ed0, 0x401476b0, 0x401476c4, 0x401482d4)
 22 sec_rgy_site_bind_query@libdce + 0x00000048 (0x40147ed0, 0x401476b0, 0x401476c4, 0x401482d4)
 23 sec_krb_sec_parse_name@libdce + 0x0000013c (0, 0x5, 0x4013d0b4, 0x40147650)
 24 cred_from_cred_rep (credrep = 0x4014757c, cred = 0x40147540, cred_context = 0x4014753c, cache_slot = 0x40147594)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 686]
 25 handle_sec_krb_dg_build_message (inptr = 0x4013d0ed, inlen = 133, outbuf = 0x4013e090)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 807]
 26 do_auth_request (inptr = 0x4013d094, inlen = 133, outbuf = 0x4013e090, outsize = 0x4013d080)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 1183]
 27 ProcessRequest + 0x000000f4 (0x4013d078, 0x29c6b013, 0x1000000, 0x4ac)
 28 service_thread + 0x00000128 (0x4001af88, 0x7af51478, 0x400da138, 0x5)
 29 cma__thread_base@libdce + 0x0000021c (0x400da138, 0, 0, 0)
 30 cma__thread_start1@libdce + 0x0000004c (0x400da138, 0, 0, 0)
 31 cma__thread_start0@libdce + 0x00000008 (0x400da138, 0, 0, 0)
 32 _rpc_createerr@libc + 0x0000031c (Bad access to child process (UE308)
-------------------------------------------------------------------------
 0 read@libc + 0x00000008 (hp-ux export stub)
 1 cma_read@libdce + 0x000009a4 (0xa, 0x4099e3a0, 0x4, 0)
 2 krb5_fcc_read@libdce + 0x00000048 (0x408c7ab8, 0x4099e3a0, 0x4, 0x401c3ba4)
 3 krb5_fcc_read_int32@libdce + 0x0000003c (0x408c7ab8, 0x4099e3a0, 0x1a, 0x401c38f4)
 4 krb5_fcc_read_data@libdce + 0x00000040 (0x408c7ab8, 0x4099e3a0, 0x2, 0)
 5 krb5_fcc_read_principal@libdce + 0x000001c0 (0x408c7ab8, 0x401c37ac, 0x1, 0)
 6 krb5_fcc_next_cred@libdce + 0x000001cc (0x408c7ab8, 0x401c37a0, 0x401c37a8, 0x401c37a8)
 7 krb5_fcc_retrieve@libdce + 0x000001c0 (0x408c7ab8, 0x21, 0x401c3724, 0x40998a20)
 8 krb5_get_credentials@libdce + 0x000000f8 (0x10, 0x408c7ab8, 0x40998a20, 0x401c36a0)
 9 sec_krb_get_cred@libdce + 0x00000268 (0x409b6078, 0x409850c0, 0x4, 0x2)
 10 cred_from_cred_rep (credrep = 0x401c354c, cred = 0x401c3548, cred_context = 0x401c3564, cache_slot = 0x401c3568)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 690]
 11 handle_sec_krb_get_cred (inptr = 0x4013f0f5, inlen = 81, outbuf = 0x401400a4)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 755]
 12 do_auth_request (inptr = 0x4013f0a8, inlen = 81, outbuf = 0x401400a4, outsize = 0x4013f094)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 1183]
 13 ProcessRequest + 0x000000f4 (0x4013f08c, 0x29c6b013, 0x1000000, 0xffffffff)
 14 service_thread + 0x00000128 (0x4001afa0, 0x7af51478, 0x400ddb38, 0x9)
--------------------------------------------------------------------------
 0 read@libc + 0x00000008 (hp-ux export stub)
 1 cma_read@libdce + 0x000009a4 (0xa, 0x409aacac, 0x4, 0)
 2 krb5_fcc_read@libdce + 0x00000048 (0x409850c0, 0x409aacac, 0x4, 0x401aa934)
 3 krb5_fcc_read_int@libdce + 0x0000003c (0x409850c0, 0x409aacac, 0x4, 0)
 4 krb5_fcc_read_authdatum@libdce + 0x0000007c (0x409850c0, 0x409aaca8, 0x4, 0)
 5 krb5_fcc_read_authdata@libdce + 0x00000170 (0x409850c0, 0x401aa828, 0x1, 0)
 6 krb5_fcc_next_cred@libdce + 0x00000334 (0x409850c0, 0x401aa7e0, 0x401aa7e8, 0x401aa7e8)
 7 krb5_fcc_retrieve@libdce + 0x000001c0 (0x409850c0, 0x21, 0x401aa764, 0x409a5bc8)
 8 krb5_get_credentials@libdce + 0x000000f8 (0x10, 0x409850c0, 0x409a5bc8, 0x401aa6e0)
 9 sec_krb_get_cred@libdce + 0x00000268 (0x409be648, 0x409940f0, 0x4, 0x2)
 10 cred_from_cred_rep (credrep = 0x401aa57c, cred = 0x401aa540, cred_context = 0x401aa53c, cache_slot = 0x401aa594)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 690]
 11 handle_sec_krb_dg_build_message (inptr = 0x40141115, inlen = 133, outbuf = 0x401420b8)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 807]
 12 do_auth_request (inptr = 0x401410bc, inlen = 133, outbuf = 0x401420b8, outsize = 0x401410a8)    [/project/dce/build/dce1.1-snap/src/security/helper/auth_helper.c: 1183]
 13 ProcessRequest + 0x000000f4 (0x401410a0, 0x29c6b013, 0x1000000, 0x4a4)
 14 service_thread + 0x00000128 (0x4001af88, 0x7af51478, 0x400dccb8, 0x8)

[9/14/94 public]
How about shooting dfsbind with SIGUSR1 when it gets in this mode
to get the ICL log?

[9/16/94 public]
Yup - I could do the USR1 thing too - but I think I'm going to hand this
off to Andy McKeen to pursue further if I don't have anything useful on
Monday for this one - all this data collection is getting me nowhere. Here's
today's:

again - helper catatonic messages, set context errors and lost contact
messages :
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.201.7 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.201.7 in cell cobbler_cell.qadce.osf.org back up!
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.201.7 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.201.7 in cell cobbler_cell.qadce.osf.org back up!
dfs: server disk quota exceeded
dfs: server disk quota exceeded
dfs: set auth binding failed (code 382312711); running unauthenticated.
dfs: set auth binding failed (code 382312711); running unauthenticated.
dfs: set auth binding failed (code 382312711); running unauthenticated.
dfs: comm failure/set context: code 382312543
dfs: lost contact with the fx server 130.105.5.22 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.5.22 in cell cobbler_cell.qadce.osf.org back up!
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.201.7 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.201.7 in cell cobbler_cell.qadce.osf.org back up!
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.202.28 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.202.28 in cell cobbler_cell.qadce.osf.org back up!
dfs: server disk quota exceeded
dfs: set context failed: code 691089613
dfs: lost contact with the fx server 130.105.5.22 in cell cobbler_cell.qadce.osf.org
dfs: file server 130.105.5.22 in cell cobbler_cell.qadce.osf.org back up!
dfs: set context failed: code 691089613

root@dce11> stcode_hp 382312543
382312543 (decimal), 16c9a05f (hex): Who are you failed (dce / rpc)
root@dce11> stcode_hp 691089613
691089613 (decimal), 293130cd (hex): status 0x293130cd (dfs / xvl)
root@dce11> stcode_hp 382312711
382312711 (decimal), 16c9a107 (hex): Helper process catatonic (dce / rpc)

the dfsbind -debug output doesn't contain anything interesting EXCEPT
tid(11):Importing pag ffffffff, `FILE:/opt/dcelocal/var/security/creds/dcecred_ffffffff'
makes me think of the current cds-security bug with the updated credentials
in the same name credentials file problem ... could there be a relation? these
dfs messages aren't timestamped but they do take "awhile" to show up - maybe
I am hitting the ticket expiration ...

ps -efl output to give you an idea of dfsbind's growth and time allotment:

DATE_PS: Thu Sep 15 18:56:21 EDT 1994

  1 S    root  1654  1623  1 154 20  259d7c0 1026   23b180 18:52:32 ttys1    0:06 dfsbind -debug
  1 S    root  1371  1367 -65 154 20  20f9dc0 1956   23b180 18:42:01 ?        2:10 /opt/dcelocal/bin/cdsclerk


DATE_PS: Fri Sep 16 17:05:54 EDT 1994

  1 S    root  1654  1623  0 154 20  259d7c0 2023   23b180 18:52:32 ttys1   286:36 dfsbind -debug
  1 S    root  1371  1367 38 154 20  20f9dc0 2066   23b180 18:42:01 ?       240:09 /opt/dcelocal/bin/cdsclerk

Note that cds was right up there with dfsbind ...

[9/21/94 public]
Okay - another tidbit - adding Tom to the interest list since dts
reported the "who are you" failure this time:

1994-09-20-13:44:08.249-04:00I----- dtsd ERROR dts dtsdate time_request.c 685 0x401bff28 RPC call ClerkRequstTime() to remote server failed: Communications failure (dce / rpc)
1994-09-20-13:47:16.665-04:00I----- dtsd ERROR dts dtserror dtss_service_global_
set.c 478 0x7aff8550 Couldn't get remote server's principal name: Communications
failure (dce / rpc)
1994-09-20-17:54:38.502-04:00I----- dtsd ERROR dts dtsdate time_request.c 685 0x
401bf0a8 RPC call ClerkRequstTime() to remote server failed: Communications failure (dce / rpc)
1994-09-21-11:25:36.172-04:00I----- dtsd ERROR dts dtsdate time_request.c 685 0x401bf0a8 RPC call ClerkRequstTime() to remote server failed: Communications failure (dce / rpc)
1994-09-21-11:25:43.036-04:00I----- dtsd ERROR dts dtserror dtss_service_global_set.c 478 0x7aff8550 Couldn't get remote server's principal name: Communicationsfailure (dce / rpc)
1994-09-21-13:25:09.584-04:00I----- dtsd ERROR dts dtsdate time_request.c 685 0x401bff28 RPC call ClerkRequstTime() to remote server failed: Who are you failed (dce / rpc)

This output from serviceabilty ERROR file on an hp (m2) running bl-18, config
of cell is:
 1 RIOS X 3 HP
 m1 (R) = security server, dts server, flserver, fileserver (native and lfs)
 m2 (H) = cds server, dts server, flserver, fileserver (native and lfs)
 m3 (H) = dts server, flserver, fileserver (native and lfs)
 m4 (H) = client-only

 DFS functional acl tests were running on m2, keeping dfsbind busy
 to the point that some "helper catatonic" messages were being output. A
 single dfs.repfs test was also being run between m1 and m3 with some
 "helper catatonic" messages as well - are dtsd servers being starved
 somehow?

[9/22/94 public]

Priority upped to '0' because it's on the "blocking system test
execution" list.

[9/22/94 public]
This bug has gotten too convoluted (even for me :-)
Opening 3 separate CRs for:
	rpc failures (comm failures and who are you seen with dts and dfs)
	(12315)
	set context failed (12313)
	dfsbind spins (12311)
and cancelling this one.

[9/23/94 public]
:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(
I had so much mail to go through this morning that I missed commenting on
this before you cancelled it :-(:-(:-(:-(:-(

For the record, I don't agree with the cancellation of this one and the
opening of 3 more.  The DTS problem may have been different because it
shouldn't be using the kernel version of the who are you decoding routines,
BUT:  The AFS set context failed (12313) because the who are you failure
(12315), which I believe is usually caused by a spinning dfsbind (12311).
:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(:-(

[9/23/94 public]
Hmm ... how 'bout if I cancel the set context one and combine it with
the spinning dfsbind one - then there's just 2, the dts one and the
spinning dfsbind one? The dts problem is definitely not related to
any kernel version of who are you decoding routines since I don't
install DTS kernel extensions (and even if I did, I don't believe
those are contained in them).

[ dassarma 0/28/94 public]

I do not want to re-open this CR, but I do want to record that
after 40 CHO,  the "Who are you error" is being reported. 
The cell in general is very  slow at this point.

The exact error reported reads:

root@west> 1994-09-28-13:07:52.574-04:00I0.974 cdsclerk(7345) ERROR cds
general clerk_bind.c 627 0x40568bf8
Routine sec_rgy_pgo_is_member(3sec) failed : status = 382312543.

root@bronze> stcode 382312543 
Tech = 1 = 01 = 0x1 = dce
Comp = 27802 = 066232 = 0x6c9a = rpc
Mesg = 95 = 0137 = 0x5f = who are you failed

[9/29/94 public]

I don't want to re-open this either, but I'm seeing this message 
after configuring a BL-20 cell.

The cell is configured as follows:

HP-UX: secd dtsd
OSF1:  cdsd dtsd
OSF1:  client dtsd ntp_provider

The OSF/1 machines are reporting RPC_CN_AUTH_VFY_CLIENT_REQ errors 
(see CR 11009), and the HP-UX is reporting:

1994-09-29-16:09:33.389-04:00I116.524 dtsd WARNING dts config logevent_v_ultrix.
c 269 0x7affa020
Too few servers (2), need 3 servers
1994-09-29-16:11:28.806-04:00I116.639 dtsd ERROR dts dtsdate time_request.c 689
0x401bb6d8
RPC call ClerkRequstTime() to remote server failed: Who are you failed (dce / rp
c)

[9/29/94 public]
This was not cancelled because we thought the problem went away.
If you read the above comment where gmd cancelled it, you'll see that she
felt that this CR had too much junk in it describing multiple problems, so
she was opening more CRs to describe the problems here.  The problems you're
still seeing are the ones that she describes in CR12315 (noted above when
she cancelled this) and any more info you find should be added there.
I'm re-cancelling this one.



CR Number                     : 11893
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 11765
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : gss
Short Description             : Remove gssdce_extract_credsfrom_cred
Reported Date                 : 8/25/94
Found in Baseline             : 1.1b15
Found Date                    : 8/25/94
Severity                      : D
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/25/94 public]
OT 11765 removed the routine gssdce_extract_creds_from_cred() from the code;  This
OT is a reminder that it also has to be
removed from the docset.

[08/25/94 public]
Assigned to writer Willie Williams (security component
doc owner).

[08/25/94 public]
Reassigning to Ron Johnson at DEC.  Digital provided the documentation,
and I want to ensure that all relevant GSSAPI documentation is changed to
reflect this deletion (that may mean just the man page but...)

[hal 10/5/94 public] 
I checked the man3sec reference pages and the sec App Dev Guide chapters
for references to this interface, and there are none, so I am cancelling
this CR.



CR Number                     : 11892
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : can't change princ quota to unlimited via rgy_edit non-interactive mode
Reported Date                 : 8/25/94
Found in Baseline             : 1.0.3
Found Date                    : 8/25/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancelled - addressed in 1.2.2.

[8/25/94 public]

Customer reported:

"I'm using DCE 103. Sorry for not giving enough information. I'll try to
be more explicit in my bug reporting in the future.

We're using DCE 103, the module I changed to get around the bug is
security/client/admin/rgy_edit/tty_pgo.c. It is RCS version 1.1.6.1.

The section of code I focused on is from the routine tty_do_change_pgo:

        } else if (match_command("-q", c->args[cur_arg], 2)) {
            if (domain == eif_domain_person) {
                if ((cur_arg+1) < c->num_args) {
                    cur_arg++;
>                   if (eku_chk_integer32(c->args[cur_arg],
>                                           strlen(c->args[cur_arg]),
>                                           &quota) == error_status_ok){
>                       quota_str = c->args[cur_arg];
>                       opt_quota = true;
>                   } else {
>                       INVALID_ARG(c->args[cur_arg], &st);
>                   }
                } else {
                    OPT_REQUIRES_ARG(c->args[cur_arg], &st);
                }
            } else {
                INVALID_OPT_DOMAIN(c->args[cur_arg], domain, &st);
            }
        }...

The area highlighted with ">" seems to be the problem. If I pass in the
string "unlimited", it gets verified as a 32 bit integer, failing that
it returns an error.

My modified code looks like this:

        } else if (match_command("-q", c->args[cur_arg], 2)) {
            if (domain == eif_domain_person) {
                if ((cur_arg+1) < c->num_args) {
                    cur_arg++;
                    if (eku_chk_integer32(c->args[cur_arg],
                                            strlen(c->args[cur_arg]),
                                            &quota) == error_status_ok){
                        quota_str = c->args[cur_arg];
                        opt_quota = true;
                    } else {
/* VS0300 */            if (strcmp(c->args[cur_arg], "unlimited")) {
                                INVALID_ARG(c->args[cur_arg], &st);
/* VS0300 */            } else {
/* VS0300 */                    quota_str = eif_get_default(eif_def_pgo_quota);
/* VS0300 */                    opt_quota = true;
/* VS0300 */            }
                    }
                } else {
                    OPT_REQUIRES_ARG(c->args[cur_arg], &st);
                }
        }...

The way I found this bug was to take an existing principal (say cell_admin)
and change the quota to 0. I then tried to change it back and get the error.
The transcript of my rgy_edit session follows:

# rgy_edit
...
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> v cell_admin -f
cell_admin                                   100
  Full name:  cell administrator
  Uuid:       00000064-e049-2e58-b100-0000c080f55a
  Primary:  pr   Reserved:   --
  Quota: unlimited
rgy_edit=> c cell_admin -q 0
rgy_edit=> v cell_admin -f
cell_admin                                   100
  Full name:  cell administrator
  Uuid:       00000064-e049-2e58-b100-0000c080f55a
  Primary:  pr   Reserved:   --
  Quota: 0
rgy_edit=> c cell_admin -q unlimited
?(rgy_edit) "unlimited" - Unknown or redundant keyword (Registry Editor/TTY Inte
rface) (dce / sad)
rgy_edit=>
"

Doing it interactively worked fine. But it does not work with th e"-q".

[8/29/94 public]
Downgraded to E4 as all rgy_edit CRs are because dcecp is replacing rgy_edit
so we're not fixing minor problems with it.  Since this works ok in
interactive mode, it's very minor and won't be allowed into DCE1.1.  Given
that means that it can never be fixed, we may decide to cancel this CR.



CR Number                     : 11870
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : era
Short Description             : sec_login_get_extended_attrs only gets 1 attr
Reported Date                 : 8/24/94
Found in Baseline             : 1.1b16
Found Date                    : 8/24/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/24/94 public]

While attempting to expand the dlg_client ERA test to include more
attribute types, I'm encountering an unexpected error 
"no more entries available (dce / sec)" when 'getting' the attrs.
This may be a problem with the test so I'm assigning this to myself
for further investigation.  But I can't quite see what I'm doing wrong 
at this point so I'll take any/all suggestions.  

The test sets up 2 ERAs, integer and printstring.  The sec_rgy_attr_update 
and sec_login_set_extended_attrs appear to work fine.  When I attempt to 
get the attrs with sec_cred_get_extended_attrs, I first get the printstring 
attr (2nd one in attr array when 'setting') and then try a second 
sec_cred_get_extended_attrs call and get the error 
"no more entries available (dce / sec)".  From reading the man pages it looks
like I should be able to make consecutive calls to sec_cred_get_extended_attrs
'til I run out.

The current code is in the hester_dce1_1 branch of dlg_client.c

The 'init_attrs' code does:

    attrs[0].attr_id = test_attr_id; 
    attrs[0].attr_value.attr_encoding = sec_attr_enc_integer;
    attrs[0].attr_value.tagged_union.signed_int = TEST_ATTR_INT;
    attrs[1].attr_id = test_printstring;
    SA_ATTR_ENCODING(&attrs[1]) = sec_attr_enc_printstring;
    SA_ATTR_PRINTSTRING_P(&attrs[1]) = TEST_ATTR_PRINTSTRING;
    sec_rgy_attr_update(context, sec_rgy_domain_person,
        (unsigned_char_p_t) name, NUM_ATTRS, NUM_ATTRS, attrs, &num_ret,
        out_attrs, &num_left, &failure_index, stp);

The 'set and get' does:

    attrs[0].attr_id = test_attr_id;
    attrs[0].attr_value.attr_encoding = sec_attr_enc_void;

    attrs[1].attr_id = test_printstring;
    attrs[1].attr_value.attr_encoding = sec_attr_enc_void;

        ilc = sec_login_set_extended_attrs(lc, num_attrs, attrs, &st);
        if (BAD_STATUS(&st)) {
            dce_error_inq_text((unsigned long)st, error_buf, &err_st);
            fprintf(stderr,"FAILED: Error from sec_login_set_extended_attrs: %s\
n", error_buf);

        if (lattr) {
            pa_h = sec_login_cred_get_initiator(ilc, &st);
            if (BAD_STATUS(&st)) {
                dce_error_inq_text((unsigned long)st, error_buf, &err_st);
                fprintf(stderr, "FAILED: Error from sec_login_cred_get_initiator
: %s\n", error_buf);
                goto purge_deleg_context;
            }
            sec_cred_initialize_attr_cursor(&acursor, &st);
            if (BAD_STATUS(&st)) {
                dce_error_inq_text((unsigned long)st, error_buf, &err_st);
                fprintf(stderr,
                    "FAILED: Error from sec_cred_initialize_attr_cursor: %s\n",
error_buf);
                goto purge_deleg_context;
            sec_cred_get_extended_attrs(pa_h, &acursor, &attr, &st);
            if (BAD_STATUS(&st)) {
                dce_error_inq_text((unsigned long)st, error_buf, &err_st);
                fprintf(stderr,
                    "FAILED: Error from sec_cred_get_extended_attrs: %s\n", erro
r_buf);
                goto purge_deleg_context;
            } 
...
check attr val against printstrin
...
            sec_cred_get_extended_attrs(pa_h, &acursor, &attr, &st);
            if (BAD_STATUS(&st)) {
                dce_error_inq_text((unsigned long)st, error_buf, &err_st);
                fprintf(stderr,
                    "FAILED: Error from SECOND sec_cred_get_extended_attrs: %s\n
", error_buf);
                goto purge_deleg_context;
            }

[8/29/94 public]
Cancelling since I got it working for 2 attrs.  I think the way I was
setting the attr_id for the integer was causing it, which was actually
different from what I put above:
uuid_from_string(test_uuids[test_integer], &(attrs[0].attr_id), stp);



CR Number                     : 11798
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 11805
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : libdce
Short Description             : sec_priv_get_eptgt() core dump after 36 hours
Reported Date                 : 8/22/94
Found in Baseline             : 1.1b15
Found Date                    : 8/22/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/22/94 public]

sec_clientd core dumped over the weekend.  The cell had been active for
about 36 hours.  There were a number of system tests running over the weekend, 
but none were active at the time of the core.

Build: 1.1b15 (NB0818)

Cell:
HPUX: cdsd, secd, dtsd
OSF1: client, dtsd
OSF1: client, dtsd, ntp provider

>t
 0 priv_krb_util_gen_v1_1_ccache_ + 0x00000144 (0x7af3dc2a, 0x7af37ba2, 0x402628
9c, 0x1)
 1 sec_priv_get_eptgt_internal@li + 0x000028a8 (0x403b1d68, 0x403b1d68, 0x1, 0x2
)
 2 sec_priv_get_eptgt@libdce + 0x00000060 (0x403b1d68, 0x403b1d68, 0x1, 0x2)
 3 sec_login_util_get_krb_ptgt@li + 0x000000c0 (0x403b1d68, 0x403b1d68, 0x1, 0x2
)
 4 sec_login_pvt_inq_pac@libdce + 0x000000a4 (0x403b1d68, 0x402624d4, 0x40262460
, 0)
 5 sec_login_inquire_net_info@lib + 0x00000110 (0x403b1d68, 0x402624d4, 0x402624
60, 0x402624c4)
 6 sec_key_mgmt_manage_key@libdce + 0x00000104 (0x1, 0, 0x4009dfb8, 0x40262460)
 7 keymgmt + 0x00000040 (0, 0x7af551c0, 0x4001a160, 0x12)
 8 cma__thread_base@libdce + 0x0000021c (0x4001a160, 0, 0, 0)
 9 cma__thread_start1@libdce + 0x0000004c (0x4001a160, 0, 0, 0)
10 cma__thread_start0@libdce + 0x00000008 (0x4001a160, 0, 0, 0)
11 priv_krb_util_gen_v1_1_ccache_ + 0x00000144 (0, 0, 0, 0)

>lr $r
$r0       = 0
$r1       = 0
$r2       = 0x81514c57
$r3       = 0
$r4       = 0
$r5       = 0
$r6       = 0
$r7       = 0
$r8       = 0
$r9       = 0
$r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      = 0x7af36248
$r20      = 0xfffffff4
$r21      = 0
$r22      = 0xffffffff
$r23      = 0
$r24      = 0x403ba795
$r25      = 0x7af37ba2
$r26      = 0x7af3dc2a
$r27      = 0x40002fe0
$r28      = 0x177db009
$r29      = 0x403ba795
$r30      = 0x40262d20
$r31      = 0xfffffffd
$ret0     = 0x177db009
$ret1     = 0x403ba795

>lr $a
$arg0     = 0x7af3dc2a
$arg1     = 0x7af37ba2
$arg2     = 0x403ba795
$arg3     = 0

>p *($pc - 16)\20i
0x81514c44  LDSID       (0,1),31
0x81514c48  MTSP        31,0
0x81514c4c  BLE 0(0,1)
0x81514c50  OR  31,0,2
0x81514c54  LDW -32(0,30),19
0x81514c58  LDW -636(0,30),1
0x81514c5c  COMBT,=,N   1,0,_fp_status+0010
0x81514c60  LDW -636(0,30),31
0x81514c64  LDW 0(0,31),20
0x81514c68  COMIBF,=,N  0,20,_fp_status+0070
0x81514c6c  LDW -612(0,30),26
0x81514c70  LDW -616(0,30),25
0x81514c74  LDW -544(0,30),21
0x81514c78  LDO -1(21),22
0x81514c7c  LDW -540(0,30),1
0x81514c80  SH1ADD      22,22,31
0x81514c84  SH2ADD      31,0,20
0x81514c88  LDWX        20(0,1),24
0x81514c8c  LDW -544(0,30),21
0x81514c90  LDO -1(21),22

[8/22/94 public]

Please turn on sec_val and see if the problem still exists. Note,
we no longer fix bugs in sec_clientd.

[8/22/94 public]
This is not a bug in sec_clientd.  sec_clientd calls sec_key_mgmt_manage_key()
once and that call loops internally forever managing the host's key.  secval
must call this same routine with the exact same parameters, thus the problem
can't be any better in secval.  I've bumped this back up to p1 because if you
can't manage the host's key for more than 36hrs, you won't be able to get to
a reasonable CHO number at all...

Peter, was this using Friday's rebuild of Thursday night's build (after Greg
submitted the fix that broke Thurs night's build?)?

[8/22/94 public]

Yes, it was using Friday afternoon's re-build with Greg's fix.

[8/29/94 public]
Note: There's more info on an almost identical core dump (but in dtsd) in
CR11805, which is now a dup of this one.  This is not a sec_clientd problem,
but shows up in libdce in multiple servers, so I've taken sec_clientd out
of the description above to make sure the issue doesn't get dropped because
of sec_clientd becoming obsolete...

[9/6/94 public]
I know it was a while ago, but do you remember if secd was still up and
running after sec_clientd (and dtsd from CR11805) died?  This info would
help us track down the problem a lot easier...

[9/6/94 public]

Mike, secd was up and running after sec_clientd died.  I remember that
sec_clientd was the only core dump.  Just don't ask me what day it is..

[9/6/94 public]
Although this is different from the defect that Greg just fixed (11925), it
is in code called from priv/auth code that he had changed recently and there's
a *slight* chance that the fix he made today might also fix this problem.
While there's no guarantees at this time that it's fixed, it would be very
helpful if you could run this test tomorrow or some time soon after that with
a build that has the fix that was just submitted for 11925.  Also, the rtns
that it was in before and during when it died mostly do lots of allocs and
memcpy()'s, so it would help to check the resource usage when it died (free
swap space, core file size, size of secd in case it's using up all the swap
space...).  Also, the next time this happens, could you see if anything
(eg: rgy_edit or dcecp) can talk to secd?  It's mysterious that both dtsd
(CR11805) and sec_clientd both died at about 36hrs with the same traceback,
and the only thing we could think of that would cause this is if secd was
unavailable but the client side libdce security code in these two cases
thought they had received authdata from secd but didn't...

[9/23/94 public]
We've fixed lots of memory leak and corruption problems in the last couple
of weeks, but we don't know if we've fixed this specific problem.  We need
you to try and reproduce this, so we'll know if it is indeed fixed...

[9/27/94 public]
Ditto (the above comment).

[9/27/94 public]

Sorry for the delay in cancelling this one.  We haven't seen it for a while
now, and we've been running tests over 36 hours.



CR Number                     : 11734
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : cdsd core dump while processing
a BIND packet
Reported Date                 : 8/17/94
Found in Baseline             : 1.1b14
Found Date                    : 8/17/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/17/94 public]

cdsd core dumped while running system tests (dcecdsacl6, dcerpbnk_auth, 
dcethrpc_auth) after 12-13 hours.  The server appears to be processing a
BIND packet.

Build: NB0814

Cell:
HPUX: cdsd,secd,dtsd
OSF1: client,secd (replica),dtsd
OSF1: client,dtsd

>t

 0 MD5Update@libdce + 0x000001c8 (0x40087540, 0x40a20001, 0xfff89117, 0)
 1 sec_md_update@libdce + 0x00000040 (0x40087540, 0x409a95e0, 0xfffffb38, 0)
 2 rpc__krb_cn_compute_md5_cksm@l + 0x00000068 (0x409a95e0, 0xfffffb38, 0x4019f8
f0, 0x400d0ca0)
 3 rpc__krb_cn_recv_check@libdce + 0x00000dbc (0x400d0ca0, 0x409a3448, 0x409a95e
0, 0x70)
 4 rpc__cn_assoc_process_auth_tlr + 0x00000684 (0x400d0bc0, 0x40886e60, 0x590, 0
x40916f70)
 5 do_assoc_req_action_rtn@libdce + 0x00000684 (0x400d0bc0, 0x40886e40, 0x400d0b
c8, 0)
 6 do_assoc_action_rtn@libdce + 0x000001a0 (0x400d0bc0, 0x40886e40, 0x400d0bc8,
0x40934930)
 7 rpc__cn_sm_eval_event@libdce + 0x000000e4 (0x64, 0x40886e40, 0x400d0bc0, 0x40
0d0bc8)
 8 receive_dispatch@libdce + 0x000025b8 (0x400d0bc0, 0x7aff8b78, 0, 0)
 9 rpc__cn_network_receiver@libdc + 0x00000a98 (0x400d0bc0, 0x7af52118, 0x400400
78, 0x4)
10 cma__thread_base@libdce + 0x0000021c (0x40040078, 0, 0, 0)
11 cma__thread_start1@libdce + 0x0000004c (0x40040078, 0, 0, 0)
12 cma__thread_start0@libdce + 0x00000008 (0x40040078, 0, 0, 0)
13 MD5Update@libdce + 0x000001c8 (0, 0, 0, 0)

>lr $a
$arg0     = 0x40087548
$arg1     = 0x40087620
$arg2     = 0xfffffb38
$arg3     = 0x400d0ca0

>lr $r
$r0       = 0
$r1       = 0x1
$r2       = 0x8172663f
$r3       = 0
$r4       = 0
$r5       = 0
$r6       = 0
$r7       = 0
$r8       = 0
$r9       = 0
$r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      = 0x7af33238
$r20      = 0x20
$r21      = 0x40a20000
$r22      = 0x40a20001
$r23      = 0x400d0ca0
$r24      = 0xfffffb38
$r25      = 0x40087620
$r26      = 0x40087548
$r27      = 0x4002b010
$r28      = 0
$r29      = 0x1
$r30      = 0x400876a0
$r31      = 0x40087577
$ret0     = 0
$ret1     = 0x1

>p *($pc -16)\20i
0x8172662c  LDSID       (0,1),31
0x81726630  MTSP        31,0
0x81726634  BLE 0(0,1)
0x81726638  OR  31,0,2
0x8172663c  LDW -32(0,30),19
0x81726640  STW 0,-64(0,30)
0x81726644  LDW -172(0,30),21
0x81726648  LDO -1(21),22
0x8172664c  STW 22,-172(0,30)
0x81726650  COMIBF,=    0,21,0xfffffecc
0x81726654  OR  0,0,0
0x81726658  LDW -148(0,30),2
0x8172665c  BV  0(2)
0x81726660  LDO -128(30),30
0x81726664  STW 2,-20(0,30)
0x81726668  LDO 128(30),30
0x8172666c  STW 19,-32(0,30)
0x81726670  STW 26,-164(0,30)
0x81726674  LDW -164(0,30),1
0x81726678  LDW 0(0,1),31

[8/22/94 public ]

Is this problem still reproduceable since last Wenesday's submit
by Greg?

[8/22/94 public]
I've asked PeterO to run the cds tests with the latest build to see if he
can reproduce this problem. He will run the tests overnight so that we will
have results tomorrow morning (assuming no other core dump happens).

[8/23/94 public]

Good news.  Tests ran successfully overnight on Sunday night's build (8/22).
Cancelling this one.



CR Number                     : 11722
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : secd (replica)
Short Description             : secd (replica) dies on RIOS
soon after start up.
Reported Date                 : 8/16/94
Found in Baseline             : 1.1b14
Found Date                    : 8/16/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/16/94 public]

Using NB from 08/13/94, on RIOS, a security replica dies soon after 
it has started up. The debugger prints the following information:
(it always prints the same thing)

root@soldier> dbx /opt/dcelocal/bin/secd core
dbx version 3.1 for AIX.
Type 'help' for help.
reading symbolic information ...
[memory image in core]

abort process in raise at 0xd00c793c
0xd00c793c (raise+0x24) 80410014          l   r2,0x14(r1)
(dbx) where
raise(0x0) at 0xd00c793c
abort(0x0) at 0xd00c784c
dce_svc_printf_withfile(0x20094f88, 0x200bdef8, 0x1c5, 0x200bdf38, 0x7,
0x1010, 
0x171220b8, 0xdeadbeef) at 0xd0368780
rgy_main(0x1, 0x2ff7fc94) at 0x100009d0
rs_main.main(0x1, 0x2ff7fc94) at 0x10000500
(dbx)

[8/16/94 public]
If it's calling abort from a dce_svc routine, that should mean that it's
hit a fatal error and it has probably logged that error just prior to calling
abort.  Could you find out what error it's logging for us and add that to this
CR?  Thanks...

[8/16/94 public]

There was no error printed by secd on the screen. I did not redirect 
the SVC output to a log. As I understand SVC takes stdout as the default, 
so I expect to see fatal errors and warnings printed on the screen 
where I started the server.  At least, this is true with dtsd and 
cdsd. Is secd different? If so, should I set a SVC level different from 
the default to get secd's fatal errors and warnings?

[ sekhar 8/16/94 public ]

Can you check /opt/dcelocal/var/security/secd.log to see
if there are any messages ? 

On 8/12 (date?) I submitted a change so that stdout/stderr
is redirected to /opt/dcelocal/var/security/secd.log when
secd is running in the background .

[8/16/94 public]

Here is the error:

root@soldier> cat /opt/dcelocal/var/security/secd.log
1994-08-16-18:48:37.312-04:00I1.990 secd FATAL sec rs_mainthr rs_main.c 522
0x200aeeb0 database locked

I found the core in

	 /opt/dcelocal/var/security/core

but had not useful info this time. Not always one gets a good core.
Hope this helps.

[ sekhar 8/17/94 public ]

One possibility could be that secd was already running on the machine
where the replica was being configured. 

Can you try to configure a replica after making sure that secd
is not running and see if the problem occurs again ?

[8/17/94 public]

I am sure there was only one secd running at the time
because I was typing repeatedly

	root@soldier> ps -ef | grep secd

and was only showing on secd and the grep.

I still have on my screen the commands:

root@soldier> pwd
/opt/dcelocal/etc
root@soldier> ps -ef | grep secd
    root  8255  8745   5 19:12:19  pts/2  0:00 grep secd 
    root 23008     1  15 18:48:22  pts/2  1:09 secd 
root@soldier> ps -ef | grep secd
    root  8257  8745   4 19:16:19  pts/2  0:00 grep secd 
root@soldier> pwd

At the moment I am working on another problem. If I have time
later I will try it again.

[8/16/94 public]
Hmm, bummer...  It looks like the first time it coredumped it left the database
locked, so every subsequent time fails (it coredumps on purpose when it gets a
fatal error like this) you would get this message.  Try the following to unlock
The database and then try restarting secd and see what message it dies with
when the database isn't locked (when you have time):

cd /opt/dcelocal/var/security/rgy_data
cp rgy_state xx
mv xx rgy_state

(note: a reboot should also fix the locked problem, but the above is easier)
If you can't get to this before you leave on vacation, could you let someone
else down there know which machine this is happening on so that they might
be able to get us some more info?

[ sekhar 8/17/94 public ]

I fail to see  how the above suggestion would help.

The status code corresponding to the error message "database locked" 
sec_rgy_rep_db_locked which as far as I can tell is only issued 
when secd fails to apply a write lock to a file using fcntl() 
or flock() ( depending on how the code is compiled ). Morover,
(when fcntl() is used ) sec_rgy_rep_db_locked is set only when
EACCESS is obtained from the fcntl() call which implies that another
process has the file in question locked. This must be secd ( assuming
that secd is the only locking these files ).

If secd had exited , then the locks should have been released on 
process exit.

To configure a replica , there must be no secd running on the 
machine - not one secd running.

[8/17/94 public]
No, that error message is also issued if secd died and left the database in
a locked state.  The 'one secd' is the one that Martha is running that dies
after a short time (ie: after being slow starting up, or after minutes...).
In her words: "The steps are: 
- I start secd on the RIOS 
- Go to another window, and start a script that 
  does dce_login or a security system test.
- Back to the first window to do the ps -ef and 
  wait till it dies. Last night it took about 10 
  minutes to die, sometimes is sooner."
The "suggestion" that I gave above will help this particular problem (the lock)
and in fact I've been using it in a script called unlock_db for 4 years now.
The copy preserves the state in the rgy_state file.  The move recreates the
rgy_state file with the correct information in it, but with the fcntl locks
released.  I think there's multiple things causing these failures, one of
which (the one that causes it to die at or just after startup) is the database
locked message, and the other (10 or so minutes after startup) is something
else that we'll need to find after getting around the database locked problem.

[ dassarma 08/17/94 public]

We can afford to wait till next week to pick this one up. I lowered
the priority till then. Maybe be it will be gone by then.

[08/25/94 public]

I am using BL16 and this still is happening. Maybe someone at IBM could
help reproduce this and identify the cause. I am unable to get a good core 
and also there is no error left in the svc log file by secd. This time, 
the secd replica took almost a day before it died. There is definetely 
a problem with secd (only tried replica) on AIX.

[8/25/94 public]
If this is still a problem, then it's at least a p1 that must be fixed.

[9/01/94 public]
Is someone at IBM looking into this one?  If so, could you please assign
the bug to yourself?

[9/01/94 public]
We have been working on several other problems. I will investigate.
Assigning to myself.

[9/06/94 public]
We have a 3 machine cell with two security replicas. I have been
running the following shell script for over an hour:

   #!/bin/ksh

   count=0
   while:; do
         dce_login cell_admin -dce- <<i-LOGIN_EOF
                klist >/dev/null 2>&1
         LOGIN_EOF
         ((count += 1))
         echo "dce_login #$count"
   done

The security replica on the machine has been up and running for 5 days.
How can I recreate the problem? I will continue to monitor the shell
script to see if secd has a problem.

[9/06/94 public]

The last time I used my RIOS for 1.1 testing (now is a 1.0.3 client), 
the replica took about a day to die. During this time, I was running
system tests. I usually run dcesestr or dcesepol. They are a good
exercise on the registry replicas.

[9/12/94 public]
Any update on the IBM side for this one? I currently have a cell
set up with BOTH a RIOS security master and a RIOS security replica.
I plan to exercise it starting tomorrow with one of the security
system tests mentioned above. Note that this will not be sufficient
to close this bug since this is a homogeneous configuration but it
will be a datapoint for whether IBM should be able to reproduce it
at home.

[9/12/94 public]
I plan to configure the RIOS as a 1.1 secd replica in the CHO cell
tonight to see if we can reproduce this while we have someone onsite
to help.

[10/3/94 public]
I was unable to reproduce this.  secd replica on rios stayed up and
running for 48 CHO.  Unless Martha D has seen it since she came
back, I think we can cancel it.

[10/3/94 public]
At this point this is safe to cancel.



CR Number                     : 11721
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : Cannot connect to replica with rgy_edit from remote node when master has been stopped.
Reported Date                 : 8/16/94
Found in Baseline             : 1.1b14
Found Date                    : 8/16/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/16/94 public]

rgy_edit is unable to connect to a replica from another node in the cell
once the master secd has been stopped.

dce_login is successful, but invoking rgy_edit returns

?(rgy_edit) Unable to contact the registry - Registry server unavailable (Regist
ry Edit Kernel)
 (dce / sad)

dce_login and rgy_edit are successfully invoked on the node where the replica 
resides.

[8/16/94 public]
Here is more info: Using the weekend build of 8/14, configured a Master HP
and replica on 486. Using sec_admin stoppped the Master. Then did dce_login
which worked ok. rgy_edit timed on Master timed out with server unavilable 
message.

sec_admin> lrep -all
Default replica:  /.../hp_cell/subsys/dce/sec/sunrise
Default cell:     /.../hp_cell
WARNING: The default replica is not the master registry.
         Propagation information will not be displayed


subsys/dce/sec/sunrise
          Instance id:             63cbd449-b92b-11cd-87cf-0000c04fd04c
          Addresses:               ncacn_ip_tcp:130.105.4.197[]
                                   ncadg_ip_udp:130.105.4.197[]
          State:                   in service - slave
          Last update received at: Tue Aug 16 14:53:23 1994
          Last update's seqno:     0.1724

subsys/dce/sec/master (master)
          Instance id:             dd5d1cc8-b83a-11cd-8035-080009251539
          Addresses:               ncacn_ip_tcp:130.105.4.208[]
                                   ncadg_ip_udp:130.105.4.208[]
          State:                   unavailable - no more profile elements
(dce / rpc)


Performed rgy_edit on Master replica gives:

spring : rgy_edit
(binding_cache_lookup) Looking for site /.../hp_cell, cell , princ dce-rgy,
type 1
(binding_cache_lookup) Cache miss
_ip_tcp:130.105.4.208[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding
de1179de-b83a-11cd-8035-080009251539@ncadg_ip_udp:130.105.4.208[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site
== /.../hp_cell
(rca_setup_handle) Auth DCE, principal 'dce-ptgt@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400fa930
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_site_bind) Bound to Cell '/.../hp_cell'
(rca_site_bind) Bound to Site '/.../hp_cell'
(rca_lock_handle) locking 7b036458
(rca_unlock_handle) unlocking 400f9868
(rca_site_bind) String Binding
'de1179de-b83a-11cd-8035-080009251539@ncacn_ip_tcp:130.105.4.208[]'
(binding_cache_enter) Adding 400f9868 to binding cache: site /.../hp_cell
cell /.../hp_cell princ dce-ptgt@hp_cell type 1
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Took alt_handle 1 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site
== /.../hp_cell
(rca_setup_handle) Auth DCE, principal 'dce-ptgt@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400fa9e8
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400f9bd8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400f9bd8
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400f9cb8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/sunrise
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400f9cb8
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400f9af8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400f9af8
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400f9478
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400f9478
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400f9398
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_nsi_binding_import) attempting to re-import
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../hp_cell
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400fb220
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/sunrise
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400fb220
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400f9520
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400f9520
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400fb2b8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/sunrise
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400fb2b8
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400f9268
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400f9268
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400fcbb8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400fcbb8
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) about to call rca_setup_handle;
rpc_handle==400fcae8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 0
(rca_setup_handle) Replace entry name with
/.../hp_cell/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400fcae8
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035a18
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035a58
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Got binding
de1179de-b83a-11cd-8035-080009251539@ncacn_ip_tcp:130.105.4.208[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding
de1179de-b83a-11cd-8035-080009251539@ncadg_ip_udp:130.105.4.208[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_lock_handle) locking 7b035998
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_rebind) Took alt_handle 1 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../hp_cell, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site
== /.../hp_cell
(rca_setup_handle) Auth DCE, principal 'dce-rgy@hp_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 400e21e0, handle
400fc970
(binding_cache_lookup) Looking for site /.../hp_cell, cell /.../hp_cell,
princ dce-ptgt, type 1
(binding_cache_lookup) Looking at 400f9868: site `/.../hp_cell' cell
`/.../hp_cell' princ `dce-ptgt@hp_cell' 1
(binding_cache_lookup) Cache hit: returning 400f9868
returning cached context 400f9868
(rca_lock_handle) locking 7b035958
(rca_check_binding) checking 400f9868
(rca_check_binding) checking 400f9868
(rca_rebind) Non-nsi rebind failed
(rca_unlock_handle) unlocking 400f9868
(rca_lock_handle) locking 7b035998
400f9868: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 400f9868
(rca_setup_handle) end set_auth_info identity 400e21e0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1712207b
(rca_rebind) Non-nsi rebind failed
(rca_site_bind_pe_site) assuming /.../hp_cell is string binding
(rca_lock_handle) locking 7b034d18
400e3c50: Dropping site refcount from 1 to 0
Drop ref to identity 400e21e0 from binding cache
(rca_unlock_handle) unlocking 400e3c50
?(rgy_edit) Unable to contact the registry - Registry server unavailable
(Registry Edit Kernel)
 (dce / sad)

[08/19/94 public]

I have reproduced this locally and will be working on it.

[09/09/94 public]
No longer reproducible in bl16.3.  (I'd thought this would have been
the same fix as 11623, but that was in my bl16+ sandbox before...)

[09/14/94 public]
Rajendra observed the same working behavior with HP & 486 last week; canceling.



CR Number                     : 11690
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 11687
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : rpc.sec.2 test clients report auth ticket expired
Reported Date                 : 8/15/94
Found in Baseline             : 1.1b14
Found Date                    : 8/15/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/15/94 public]

OSF1 test clients running rpc.sec.2 tests reported auth ticket expired
and subsequent test runs reported errors after 5 hours.  The test were running
on 3 nodes, HP-UX and two OSF/1 machines.  All OSF/1 test clients reported
the same errors at about the same time.

Build: NB0812

Cell:

HPUX: secd, cdsd, dtsd
OSF1: client, sec replica, dtsd
OSF1: client, dtsd, ntp provider

The sequence of error messages is as follows:

auth ticket expired (dce / rpc)
login context has not been certified (dce / sec)

Then the test client reported that it could't get identity information.
All subsequent test runs failed.

[8/17/94 public]

Can you rerun the tests with the -d flag? This will tell me the
error status of the calls that are failing.

[8/23/94 public]
I just spoke with PeterO and he is going to re-run the sec.rgy.2 test
overnight to see if it is reproducible. Last time he ran with the debug on he
encountered a problem with cma threads complaining about too many open files.

[8/24/94 public]

Unfortunately, I ran into the same problem with cma threads last night.
If there's any other way to get more info, let me know.

[08/31/94 public]

Can you increase the number of open files on the OSF clients? Will this make
the threads problem go away?

[08/31/94 public]

The number of open files on the OSF clients is already set to the maximum,
256.  I saw some slightly different behavior this afternoon when I was 
running the tests. I re-installed last night's build (re-build) and will 
update in the morning if I can recreate the new behavior.

[09/07/94 public]

sekhar has submitted a fix for the open file descriptor leak today which
should be in tomorrows build. Can you rerun the tests with the -d option
at that time and update the OT?

[9/27/94 public]
Is this still a problem?

[9/27/94 public]

No, sekhar fixed this.



CR Number                     : 11688
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_acct_passwd accepts passwd < min policy length
Reported Date                 : 8/15/94
Found in Baseline             : 1.1
Found Date                    : 8/15/94
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/15/94 public]

scenario: min length specified in registry server policy is 10 characters
        : pass in a new password with a length of 1 character, and API
		still works

[8/15/94 public]

This problem is fixed in DCE 1.1. secd now rejects passwords which do
not abide by the registry policy for passwords. I just verified that
it is working properly.

What baselevel are you using?

[8/15/94 public]

We just tested this on 1.13 and did work. The people who reported this
problem to me did not test it against the 1.1 code.
I will cancel this defcet.



CR Number                     : 11614
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 8157
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : login
Short Description             : cdsd core dumps after dced does.
Reported Date                 : 8/9/94
Found in Baseline             : 1.1b14
Found Date                    : 8/9/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/9/94 public]

Running the sanity tests overnight in the following cell produced a
dced core dump (CR #8157) and four hours later a cdsd core dump.

HPUX: dced, cdsd, secd
OSF1: dce client
OSF1: dce client, ntp provider

The trace is as follows:

>t
 0 _kill@libc + 0x00000008 (hp-ux export stub)
 1 _raise@libc + 0x00000024 (0x40033748, 0x404539b8, 0, 0)
 2 _abort@libc + 0x00000078 (0x25, 0x404539b8, 0, 0)
 3 _assert@libc + 0x00000128 (0x7afed8e0, 0x3, 0x403f9be0, 0)
 4 cache_sanity_check@libdce + 0x00000380 (0x40668050, 0, 0, 0)
 5 sec_login_pvt_release_context@ + 0x00000090 (0x40668050, 0x403f94e8, 0, 0)
 6 sec_login_pvt_purge_refresh_co + 0x000000a4 (0x40668050, 0x403f9b18, 0x403f94
e8, 0)
 7 sec_login_pvt_setup_refresh_co + 0x0000058c (0x403b9d18, 0x403f94e8, 0x403f94
e8, 0x403f94e8)
 8 sec_login_validate_identity@li + 0x000001f8 (0x403b9d18, 0x40645ff8, 0x403f95
98, 0x403f959c)
 9 sec_login_valid_from_keytable@ + 0x00000374 (0x403b9d18, 0x1, 0, 0)
10 get_key_and_validate_id + 0x00000160 (0x403b9d18, 0x4003136c, 0x40032404, 0x4
03f94e8)
11 refresh_server_identity + 0x00000288 (0x40031368, 0x4013a7f8, 0x9, 0x40027da8
)
12 th_start + 0x000000cc (0x4013a7f8, 0x7af56088, 0x404539b8, 0x1a)
13 cma__thread_base@libdce + 0x0000021c (0x404539b8, 0, 0, 0)
14 cma__thread_start1@libdce + 0x0000004c (0x404539b8, 0, 0, 0)
15 cma__thread_start0@libdce + 0x00000008 (0x404539b8, 0, 0, 0)
.
.

>lr $a
$arg0     = 0x7afa9280
$arg1     = 0x7ffe6000
$arg2     = 0x46000000
$arg3     = 0x20f7c
>

$r0       = 0
$r1       = 0x24b5
$r2       = 0x800a664b
$r3       = 0x7b00dc58
$r4       = 0
$r5       = 0xa6
$r6       = 0x7b00dc5f
$r7       = 0x7afa9280
$r8       = 0x7afa9294
$r9       = 0x7b009928
$r10      = 0
$r11      = 0
$r12      = 0
$r13      = 0
$r14      = 0
$r15      = 0
$r16      = 0
$r17      = 0
$r18      = 0
$r19      = 0x7b007948
$r20      = 0x24b5
$r21      = 0x800bb820
$r22      = 0
$r23      = 0x20f7c
$r24      = 0x46000000
$r25      = 0x7ffe6000
$r26      = 0x7afa9280
$r27      = 0x4002b010
$r28      = 0
$r29      = 0x1
$r30      = 0x403f9d60
$r31      = 0x800a667b
$ret0     = 0
$ret1     = 0x1

>p *($pc - 16)\20i
0x800a6638  MTSP        1,0
0x800a663c  BE,N        0(0,2)
0x800a6640  BL  _fp_status+0028,2
0x800a6644  OR  0,0,0
0x800a6648  LDW -24(0,30),2
0x800a664c  LDSID       (0,2),1
0x800a6650  MTSP        1,0
0x800a6654  BE,N        0(0,2)
0x800a6658  BL  _fp_status+0008,1
0x800a665c  ADDIL       0xfff90000,1
0x800a6660  LDO 948(1),1
0x800a6664  BV,N        0(1)
0x800a6668  STW 19,-28(0,30)
0x800a666c  LDIL        0xc0000000,1
0x800a6670  BLE 4(7,1)
0x800a6674  LDO 37(0),22
0x800a6678  OR,=        0,22,0
0x800a667c  B   0xffffffdc
0x800a6680  LDW -28(0,30),19
0x800a6684  BV,N        0(2)

[8/9/94 public]
This is probably a result of a problem in the security refresh code
that occurs when dced isn't present. This should not cause the server
to crash with a core dump thus the ot. The priority reflects the fact that
the problem will only be seen if dced has previously died. It should 
probably also be against security but we'll leave it here since its
posible cds is has set something up incorrecly in the first place and
security already has more bugs than thay can handle anyway........

[9/14/94 public]
I am raising this to A0 and assigning to security.  I don't think dced
crashing has anything to do with it.  If you set the registry
so that creds expire in 5 minutes CDS will die in the refresh_identity
thread.  Since this thread doesn't do much but call sec_* I don't think
CDS is the problem.

[9/15/94 public]

I'm betting this is another of those cases where a login context
that has never been entered in the cache is being purged from the
cache, which causes the cache code to commit the entire process
to the nearest Asylum For The Contextually Deranged.

Since I'm going to be spelunking in the sec_login code for
other reasons, I'll see if I can fix this while I'm below ground.

[9/15/94 public]
Looks like it has already been fixed by security.  Verified in bl17.



CR Number                     : 11572
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : kdc or cryptosystem
Short Description             : integrity/decrypt errors on remote ptgt
Reported Date                 : 8/4/94
Found in Baseline             : 1.0.3a
Found Date                    : 8/4/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/4/94 public]
  The main motivation behind this bug report is to see if it's been seen
before. I fear that it might have to do with 1.0.2a/1.0.3a intercell
compatibility. We're looking at it here full-time; we're going to start
picking apart the server to see what exactly is failing to decrypt
properly. David VanRyzin (vanryzin@transarc.com) has been examining the
checksumming changes between the two releases and is suspicious, but
lacks hard proof at this moment. I attended IFEST and can attest that we
didn't test cross-cell authentication across the 102/103 release
pairing.
.
  We're having a boatload of odd problems with intercell security issues
here. Sporadically, two cells which are trust partners cannot access
each other; while trying to obtain the PTGT via the TGT, the Kerberos
reply is invariably that a decryption failed. The request appears to be
using the wrong key, the key appears to being misused, or the
construction of the packet is corrupting it along the way.
.
  A dbx trace (of limited info) follows. An authenticated user
(cell_admin@mandos.dce.transarc.com) attempts to bind to a registry
server within /.../systest.dce.transarc.com . Of course, this works if
it is tried from an unauthenticated process, but not when tried form
an authenticated one. It isn't gdad/BIND this time.
.
  I'd like to add (finally) that this is NOT an instance of the key
having been changed on only one host. A pair of cells can show this
problem before and after a reuse of the rgy_edit 'cell' command. Maual
setting of the accounts' keys also does not make this go away.
.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Running: /bin/rgy_edit -s /.../systest.dce.transarc.com
(binding_cache_lookup) Looking for site /.../systest.dce.transarc.com, cell , princ dce-rgy, type 1
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 10c9b0
(rca_site_bind_nsi) Attempting to bind to site /.../systest.dce.transarc.com
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../systest.dce.transarc.com
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==110358
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../systest.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../systest.dce.transarc.com/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@systest.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity 10c9b0, handle 110358
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 90 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
   90       if (!krb5_principal_compare(tgt->client, cred->client))
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 93 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
   93       if (!tgt->ticket.length)
(dbx)
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 97 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
   97                                 krb5_princ_realm(cred->client), &tempprinc))
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 100 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
  100       if (!krb5_principal_compare(tempprinc, tgt->server)) {
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 104 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
  104       krb5_free_principal(tempprinc);
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 113 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
  113                                  tgt, &tgsrep))
(dbx) list 105,125
  105
  106
  107       if (retval = krb5_send_tgs(kdcoptions, &cred->times, etype, sumtype,
  108                                  cred->server,
  109                                  tgt->addresses,
  110                                  cred->authdata,
  111                                  0,               /* no padata */
  112                                  0,               /* no second ticket */
  113                                  tgt, &tgsrep))
  114           return retval;
  115
  116   #undef cleanup
  117   #define cleanup() {(void) free(tgsrep.response.data);}
  118
  119       switch (tgsrep.message_type) {
  120       case KRB5_TGS_REP:
  121           break;
  122       case KRB5_ERROR:
  123       default:
  124           if (!krb5_is_krb_error(&tgsrep.response)) {
  125               retval = KRB5KRB_AP_ERR_MSG_TYPE;
(dbx) next
continuing l@1
(binding_cache_lookup) Looking for site /.../systest.dce.transarc.com, cell /.../systest.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Cache miss
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../systest.dce.transarc.com
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==1109b0
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../systest.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../systest.dce.transarc.com/subsys/dce/sec/master
(rca_site_bind) Bound to Cell '/.../systest.dce.transarc.com'
(rca_site_bind) Bound to Site '/.../systest.dce.transarc.com/subsys/dce/sec/master'
(rca_lock_handle) locking 112280
(rca_unlock_handle) unlocking 112280
(rca_site_bind) String Binding  '0014c954-048e-1d97-aeaa-9e620d02aa77@ncadg_ip_udp:158.98.13.2[]'
(binding_cache_enter) Adding 112280 to binding cache: site /.../systest.dce.transarc.com/subsys/dce/sec/master cell /.../systest.dce.transarc.com princ (null) type 0
(rca_lock_handle) locking 112280
(rca_check_binding) checking 112280
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking 112280
(rca_lock_handle) locking 112280
112280: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 112280
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 119 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
  119       switch (tgsrep.message_type) {
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 124 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
  124           if (!krb5_is_krb_error(&tgsrep.response)) {
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 127 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
  127               retval = decode_krb5_error(&tgsrep.response, &err_reply);
(dbx) next
continuing l@1
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 128 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
  128           if (retval) {
(dbx) print err_reply
err_reply = 0x10fe78
(dbx) print *err_reply
*err_reply = {
    ctime  = 776034009
    cusec  = 0
    susec  = 933168
    stime  = 776034010
    error  = 31
    client = (nil)
    server = 0x113ac0
    text   = {
        length = 43
        data   = 0x110a60 "Decrypt integrity check failed (dce / krb)"
    }
    e_data = {
        length = 0
        data   = (nil)
    }
}
(dbx) cont
continuing all LWPs
(rca_setup_handle) end set_auth_info identity 10c9b0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412901f
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==110a60
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../systest.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../systest.dce.transarc.com/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@systest.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity 10c9b0, handle 110a60
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 90 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
   90       if (!krb5_principal_compare(tgt->client, cred->client))
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in krb5_send_tgs at line 314 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/send_tgs.c"
  314                                &rep->response);
(dbx) cont
continuing all LWPs
(binding_cache_lookup) Looking for site /.../systest.dce.transarc.com, cell /.../systest.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Looking at 112280: site `/.../systest.dce.transarc.com/subsys/dce/sec/master' cell `/.../systest.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 112280
returning cached context 112280
(rca_lock_handle) locking 112280
(rca_check_binding) checking 112280
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking 112280
(rca_lock_handle) locking 112280
112280: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 112280
(rca_setup_handle) end set_auth_info identity 10c9b0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412901f
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_nsi_binding_import) attempting to re-import
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../systest.dce.transarc.com
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==10ffa0
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../systest.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../systest.dce.transarc.com/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@systest.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity 10c9b0, handle 10ffa0
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/pr
oject/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/pr
oject/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx) cont
continuing all LWPs
ct@1 (l@1) stopped in krb5_get_cred_via_tgt at line 90 in file "/afs/transarc.com/proj
ect/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
   90       if (!krb5_principal_compare(tgt->client, cred->client))
(dbx) ont
continuing all LWPs
t@1 (l@1) stopped in krb5_send_tgs at line 314 in file "/afs/transarc.com/proj
ect/dce/dev/rel/10.012/src/security/krb5/lib/krb/send_tgs.c"
  314                                &rep->response);
(dbx) cont
continuing all LWPs
(binding_cache_lookup) Looking for site /.../systest.dce.transarc.com, cell /...
/systest.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Looking at 112280: site `/.../systest.dce.transarc.com/subsys/dce/sec/master' cell `/.../systest.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 112280
returning cached context 112280
(rca_lock_handle) locking 112280
(rca_check_binding) checking 112280
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking 112280
(rca_lock_handle) locking 112280
112280: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 112280
(rca_setup_handle) end set_auth_info identity 10c9b0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412901f
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
cont(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==110870
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../systest.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../systest.dce.transarc.com/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@systest.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity 10c9b0, handle 110870
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx)
continuing all LWPs
t@1 (l@1) stopped in sec_priv_get_ptgt at line 233 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/client/rca/priv.c"
  233       unsigned_char_p_t      tcell = NULL;
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in krb5_get_cred_via_tgt at line 90 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/gc_via_tgt.c"
   90       if (!krb5_principal_compare(tgt->client, cred->client))
(dbx) cont
continuing all LWPs
t@1 (l@1) stopped in krb5_send_tgs at line 314 in file "/afs/transarc.com/project/dce/dev/rel/10.012/src/security/krb5/lib/krb/send_tgs.c"
  314                                &rep->response);
(dbx) cont
continuing all LWPs
(binding_cache_lookup) Looking for site /.../systest.dce.transarc.com, cell /.../systest.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Looking at 112280: site `/.../systest.dce.transarc.com/subsys/dce/sec/master' cell `/.../systest.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 112280
returning cached context 112280
(rca_lock_handle) locking 112280
(rca_check_binding) checking 112280
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking 112280
(rca_lock_handle) locking 112280
112280: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 112280
(rca_setup_handle) end set_auth_info identity 10c9b0
(rca_setup_handle) rpc_binding_set_auth_info returned status 1412901f
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) failed, status 16c9a0b5
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Trying again with canonical name /.../systest.dce.transarc.com
(rca_site_bind_pe_site) assuming /.../systest.dce.transarc.com is string binding
(rca_lock_handle) locking 10e3f0
10e3f0: Dropping site refcount from 1 to 0
Drop ref to identity 10c9b0 from binding cache
(rca_unlock_handle) unlocking 10e3f0
?(rgy_edit) Unable to open the registry at site "/.../systest.dce.transarc.com"
- Registry server unavailable (Registry Edit Kernel) (dce / sad)
execution completed, exit code is 84
program exited with 84
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

[8/9/94 public]
  rgy_edit allows the cell keys to become out of synch, and resetting
the keys by using the advised method of rerunning the cell command
simply advances the key versions on both sides of the fence without
verifying that the versions match. Local fix (in David VanRyzin's hands
now) will be to compare the obtained new key version numbers and
comaplin if they do not match. This, for us, requires a new ek_ error
code; we will add padding in hopes to avoid collisions with V1.1-added
ek_ error codes.
  There is no evident encryption skew here, so the defect (as originally
filed) is cancelled. Due to prevailing likelihood that any
rgy_edit-related defect (filed w.r.t. the problems with 'cell' not
comparing the kvno values) being closed due to the existence of dcecp,
none will be filed.
Changed Status from `open' to `cancel' 
Filled in Responsible Engr. with `travis' 
Filled in Resp. Engr's Company with `tarc'



CR Number                     : 11566
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : core smoketest
Short Description             : rpc_binding_set_auth_info() fails in cdsclerk at config time
Reported Date                 : 8/5/94
Found in Baseline             : 1.1
Found Date                    : 8/5/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/5/94 public]
iS:****** Starting secd...
1994-08-05-08:33:54.685+00:00I----- secd ERROR sec rs_ns rs_ns.c 1197 0x0070a870
name service unavailable

S:****** Starting sec_clientd...
S:****** Waiting for node self-identity to be established...
S:****** Initializing the registry database...


S:****** Configuring CDS Server...
1994-08-05-08:34:54.011+00:00I----- secd ERROR sec rs_ns rs_ns.c 1197 0x0070a870
name service unavailable
S:****** Starting cdsadv...
S:****** Starting cdsd...
1994-08-05-08:36:45.442+00:00I----- cdsclerk(727) ERROR cds general clerk_bind.c
 486 0x004e5658
Routine rpc_binding_set_auth_info(3rpc) failed : status = 336760839.
1994-08-05-08:36:46.252+00:00I----- cdsclerk(727) ERROR cds general clerk_bind.c
 486 0x004e5658
Routine rpc_binding_set_auth_info(3rpc) failed : status = 336760839.
1994-08-05-08:36:51.572+00:00I----- cdsclerk(727) ERROR cds general clerk_bind.c
 486 0x006de0f0
Routine rpc_binding_set_auth_info(3rpc) failed : status = 336760839.
1994-08-05-08:39:42.309+00:00I----- cdsd(726) ERROR cds general unix_cds_net.c 8
18 0xa4489cb8
Routine rpc_ns_binding_export(3rpc) failed: status = 382312662.
1994-08-05-08:39:42.319+00:00I----- cdsd(726) FATAL cds server dns_service_ncl.c
 317 0xa4489cb8
Cannot export bindings to clearinghouse.
ERROR:   cdsd failed to start

[8/8/94 public]
I asked the rats to assign this to sec because it seems to be a
failure of rpc_ rpc_binding_set_auth_info causing the problem. We've
been seeing this occassionally lately. I sometimes see it when having 
problems with intercell. The rpc status appears to be bogus. I checked 
the cds code to make sure its properly declared and it is.  Usually cdsd 
comes up fine and the rats restarted the configuration this morning and it 
worked fine. I'll talk to Rob this morning. I'd really like to know if this 
may be related to any known and existing security problems. Since it does 
not appear often and the rats don't see it on reconfig I'm not sure it
should be an A0 but we won't change it until I have a chance to talk to
Rob.  Since we have been seeing this occasionaly lately I don't believe
it related to anything that came in yeesterday.

[8/5/94 public]

I think the status codes from rpc_binding_set_auth_info() are valid:

--> dce_err 336760839
Tech = 1 = 01 = 0x1 = dce
Comp = 16681 = 040451 = 0x4129 = krb
Mesg = 7 = 07 = 0x7 = Server not found in Kerberos database

--> dce_err  382312662
Tech = 1 = 01 = 0x1 = dce
Comp = 27802 = 066232 = 0x6c9a = rpc
Mesg = 214 = 0326 = 0xd6 = not registered in endpoint map

The first one makes me feel a little uncomfortable.
Was this smoketest done with dced or rpcd?  Can we try again with
rpcd?

[8/5/94 public]
The smoke test was done with dced.  I just want to point out that
the second time we ran this we got a different, less servere failure
with secd.  Hence the smoke test was able to continue and pass.  The
error encountered was:

...
S:****** Starting secd...
1994-08-05-09:01:59.873-04:00I----- secd ERROR sec rs_ns rs_ns.c 1197 0x007
0a870
name service unavailable
S:****** Starting sec_clientd...
S:****** Waiting for node self-identity to be established...
S:****** Initializing the registry database...
1994-08-05-09:03:00.018-04:00I----- secd ERROR sec rs_ns rs_ns.c 1197 0x007
0a870
name service unavailable


S:****** Configuring CDS Server...
S:****** Starting cdsadv...
S:****** Starting cdsd...
1994-08-05-09:04:03.243-04:00I----- secd ERROR sec rs_ns rs_ns.c 1197 0x007
0a870
entry not found
S:****** Setting ACLs for all new namespace entries...
S:****** Configuring DTS Local Server...
...

thanks
annie

[8/8/94 public]
I discovered after my update that the status is in fact what Rob says.
I believe the above message from secd 'name service unavailable' is just
secd saying the name service isn't up yet which of course is true. 
I assume secd then waits until it is up. Not sure it should put out
an ERROR message in this case though.

[8/8/94 public]

Lowering the Priority to 1 from 0, since this does not happen often and r
re-configuring solves the problem.

[8/8/94 public]

I don't believe we have a handle on this problem. It again blocked the
multi-machine config smoketest today and there was no reconfiguring
mentioned. The multi-machine smoketest was passing regularly before and
is now NOT passing regularly. Can the RATs please update this bug
with all pertinent information ie. all the circumstances leading up
to the bug, the contents of /tmp/dce_config.log, pointers to all the
scripts and logs involved, info about what scripts have changed lately,
etc. Thanks.

[8/8/94 public]

Using the NB, I tried to configure DCE on OSF1 and HPUX, each one as a
core server. On both platforms, the message "name service unavailable" 
is printed every few seconds, never stopping. The error message does 
not go away after reconfiguring. (I have configured at least 3 times.) 

This CR should be an A0. The error either is  bogus and should not be
printed, or it is a serious one and should be fixed. We are reaching 
a point where there are too many new error messages being printed.
It is getting difficult to keep track of which messages we should 
ignore and which we should not.

The error on OSF1 is:

name service unavailable
1994-08-08-14:25:22.006-04:00I13.871 secd ERROR sec rs_ns rs_ns.c 1197
0x0070a5f0


On HPUX:

1994-08-08-14:26:03.020-04:00I----- secd ERROR sec rs_ns rs_ns.c 1197
0x4004ac60
name service unavailable

[8/78/94 public]
The message will appear from the secd during config until the point that
the cdsd has come up properly.  At that point, it should go away.  If the 
message continues to come out, it is a problem.  I will open a seperate OT
suggesting that the message not be output or that it be output at a level
other tham svc_c_sev_error.

The thing that defines this OT is the rpc_binding_set_auth_info() calls
in the cdsclerk failing.  I am going to run the smoktest over a number of
times in an attempt to isolate when this occurs since it is sporadic.

[8/8/94 public]

The two cells I configured have been printing this message
for over 2 hours. A message is being printed every minute.

[8/8/94 public]
As Rob mentioned above, the rs_ns name service unavailable message is not
the problem this CR is addressing, it's a side effect of some other svcability
work that has happened (which I happened to take issue with earlier here
today before even seeing this).  Please let us know if you see the
rpc_binding_set_auth_info() message and the state of the cell when that happens
(ie: Can you dce_login from another window, can you run rgy_edit -v ?, can
you see secd's endpoints with rpccp show mapping?)  Just ignore the rs_ns
name service unavailable warnings until I can convince someone here to get rid
of them.

ps: I added dce-ot-sec@apollo.hp.com to the CC list because we haven't been
getting automatic mailing of OT CRs for a few days (I found this CR by
accident while trying to figure out why we weren't getting email on CR's in
general).

[8/8/94 public]
Failed 3 times in a row for me on 'sif' twice with dced and the 3rd
time with rpcd.  Funny. because it has never occurred on my 486.  Although,
probably not  significant to this problem, the OSF/1 Kernel on 'sif' is 
REV osc1.2 b? (yes, question mark).  An odd version number.

Each time (after setting BIND_PE_SITE 1) the operations dce_login. rgy_edit
& display of SEC endpoints (macthing PE_SITE file) work OK.

What does the 'Server not found in kerberos database' message from
set_auth_info() mean anyway?  The same list of principals exists in
the RGY as on a successfully config'ed system.

[8/8/94 public]
Ran with cdsclerk which contains debug output describing 
parameters passed to rpc_binding_set_auth_info().  3 consecutive
successful configures before machine became unuseable due to
nightly build kickoff.  Will retry tomorrow.

[8/8/94 public]
Peter has not seen this problem happen in last two days. After talking with
several folks here, I'm lowering the priority to 1 for now. If this happens
again in the smoketest we will investigate further.

[8/9/94 public]
This is a good one.  I think this comes down to a configuration problem but
want to get some feedback as to how it might be happening.

The test is running on a single machine cell whose machine name is 
'sif'.  Whenever the rpc_binding_set_auth_info() fails, we display the 
principal name being passed in and it references the CDS Server principal
from another machine 'budapest', ie

    /.../sif_cell.osf.org/hosts/budapest/cds-server, NOT
    /.../sif_cell.osf.org/hosts/sif/cds-server

rgy_edit shows that this budapest principal is (correctly) not in the
registry on 'sif' so the error message we get about 'server not in kerberos 
database' is  in fact correct.  This principal name was gotten in the same 
code (cds_clerk.c) from an rpc_mgmt_inq_server_principal_name() call.  I 
haven't backtracked the code to find out how it got the RPC handle it
is passing to the _inq_() call but that binding is where the trouble must
be starting.

We're calling it a config problem because the machine 'budapest' is running
as part of a multi_machine cell on the same LAN of which 'sif' was a host.
The cell names are identical (sif_cell) and the multi-machine cell still thinks
'sif' is a member (it was not unconfig'ed).  This is bad and we need to
look at the smoketest process to understand why this happens.

A good question is how the single machine sif_cell got information about
'budapest' which it should know nothing about.  The multi-machine sif_cell must
be throwning it over the wall somehow (cdsadv?, CDS replica skulk?) and the
single machine cell is not ignoring it.  

This seems like an easy way to break someones cell.  Do we have some kind of
subtle Security gap here?

[8/24/94 public]
I've encountered this problem twice in a row now while attempting to run
the gds_sec FVT on a 486.  Here are the specifics:

- using rpcd as the endpoint mapper
- configuring a cell with an X.500 name: /c=ie/o=digital
- binaries from BL16 and NB0823

This is blocking me.

[8/24/94 public]
Forgot to add:  this is what's running on my machine:

  PID     ELAPSED        TIME  RSS   VSZ %MEM PAGEIN NSWAP COMMAND
25301        7:29     0:02.14 920K 9.29M  2.5     86     4 rpcd
25593        7:20     0:07.87 1.09 11.9M  3.0    242     4 secd
23816        6:53     0:01.43 180K 9.82M  0.5      4     3 sec_clientd
25714        6:13     0:02.00 1.64 10.6M  4.5     35     3 cdsadv
25414        6:08     0:00.20   0K 8.89M  0.0     33     0 cdsd
25876        6:07     0:02.88 1.26 11.4M  3.5     42     3 cdsd
25713        6:06     3:11.49 3.50 12.9M  9.7     60     3 cdsclerk

[9/23/94 public]

Haven't seen for along time but there is no reason to believe it 
is gone.

[9/23/94 public]
I'm not sure abotu the 9/24 entries from Rich Z., but I'm pretty sure
the initial problem with the smoketest was a setup problem (as described
in my entry from 8/9).  

The setup problem (not removing a machine from a cell and re-configing that
machine on the same LAN as a cell with the same name) triggered unusual 
behaviour which I would actually more likely attribute to CDS than SEC.

[9/23/94 public]
That's 8/24 that Rich updated this CR, not 9/24.  Has he really been blocked
by this for a month now?  If not then why is this severity A?  If it's
causing anybody problems then why haven't we heard any more on this?  If the
whole purpose of this CR is to complain about rpc_ns_ routines returning
"name service unavailable" (the other problem RobB already explained) then
why was this reassigned to security?  Enquiring minds want to know.

[9/23/94 public]
Mike, I (as well as Rob Baum) agree. Reassigned to CDS.

[9/23/94 public]
I don't disagree with any of the above but I can explain and correct one
thing: 
 * blocking someone affects priority not severity.  Sev A just says its a
   major problem without a workaround.
 * Rich has been on vacation for 2 weeks now, with another week to go.  So
   I can believe he's still blocked and is just not complaining about it.
   Now if someone is blocked but isn't here, do they still hear the tree
   fall in the forest? :-) IOW: should it be a P0?  And guess what, it's
   not anymore.

[9/23/94 public]
The original problem as Rob pointed out may have been a configuration
problem although we could not at the time understand how it was resulting in
the message. Then we didn't see it for awhile. The priority was dropped to a 
1 and the bug was left  belonging to CDS because I had put some 
instrumentation in clerk_bind.c to tell us what the principal was the next time
we saw it. I was about to cancel it a few weeks ago when sure enough
it showed up again. Since then it has shown up but only rarely. Every time 
we see it  on a machine that also has my printf the principal going
in made sense. The call just fails for some reason. We haven't seen it
in a couple of weeks but I'm  not convinced its gone. If the arguments going
into the call are valid I don't know how this can be CDS. I was with Bob
when we reassigned it to security and lowered the priority to 2. Know
one ever said it was blocking anyoone. It wasn't so it was a 1. It was an
A because the work around was to restart something. As far as I'm concerned
if we don't see this in the next week or so we'll cancel it. The problem
is that every time I talk about canceling it someone hits it so this 
conversation virtually guarentees someone will get hit by this bug within
a day or two. It could on the other hand have been the result of some generic
problem that has been fixed recently in which case the evil spirit
will have been banished and we will get rid of this bug in a few days. I'll
leave it with CDS at least until I see it again or it gets cacncelled.

[9/29/94 public]
I've received this error for the last two days. (BL19.1 and now BL20) In
both cases this has been related to configuring a cell with an X.500 name.
I'm bumping the priority because I'd really like someone to take another
look at this.


  TET - Test Environment Toolkit for testing GDS/Admin on a local machine
  TestSuite = gds_sec

Configure DCE using cell_name:  C=ie/O=digital
1994-09-29-11:03:51.687-04:00I----- cdsclerk(28769) ERROR cds general clerk_bind.c 490 0x007139d8
Routine rpc_binding_set_auth_info(3rpc) failed : status = 336760839.
1994-09-29-11:03:52.417-04:00I----- cdsclerk(28769) ERROR cds general clerk_bind.c 490 0x007139d8
Routine rpc_binding_set_auth_info(3rpc) failed : status = 336760839.
Login to DCE ...

This can't be a "configuration problem."  This is occuring in TETized tests
which have run correctly in the past.

FYI:  could this be related to 12389 (x500_str_to_cell doesn't work.)

[09/29/94 public]
Rich Zeliff: Does this only happen with X.500 cell names? Don't you get
any error with "normal" cell names? (the switch_typeless tests)

[9/29/94 public]
I don't know.  I never configure cells with typeless names.  ;-)

[9/29/94 public]
Bumped to 0 because I've seen this a couple more times today.  This seems
to be fairly frequent.

[9/29/94 public]
Changing back to a 1, with some chagrin.  Realized that I was running two
cells with the same name, which may have contributed to problem.  (Cell
name is hardcoded in a TET test, so if you run the same test on two
machines at once ....)

I am running a script which does iterative cell configurations and I will
let this go overnight.

[9/29/94 public]
The duplicate cell name was part of what I thought to be the 'configuration
problem' attributed to the smoketest failures which started this OT.
Therefore, maybe the problem is back to a 'configuration problem pointing
out a potential security problem caused by CDS talking between cells of the
same name'

I also thought one of the machines has to have been part of the first cell
and then removed (without unconfigure'ing) it into its own cell of the
same name.  Is this the case with your machines?  If not, then the
likelihood this will affect real users is much greater than thought.

[9/29/94 public]
The GDS FVTs create single machine cells of the same name.  They never
create multi-machine cells so machines are never removed from membership in
other cells.  It is possible that, through iterative executions of the same
test, that a cell is re-configured on the same machine without properly
unconfiguring the previous cell.  (The dce_config script reports that it
successfully removed all reminants of the previous configuration, 'though.) 

This cellname duplication isn't the whole answer, however; Ron Arbo and I
encountered this problem yesterday in a cell which had the machine name as
part of the cell name, and so was unique.

[9/30/94 public]
Not being able to leave well enough alone, here's more information.
 
I have a single-machine 486 cell named /c=us/o=osf/ou=dce/cn=gemini.  I've
established GDS intercell to another single-machine 486 cell named
/c=us/o=osf/ou=dce/cn=haven.
 
Basic unauthenticated access works.  (From the gemini cell I can 'cdscp
show dir' on haven's root dir.)
 
However, attempting this as machine principal:
 
root@gemini dcelocal/bin$ cdscp show dir /.../c=us/o=osf/ou=dce/cn=haven

                        SHOW
                   DIRECTORY   /.../c=us/o=osf/ou=dce/cn=haven
                          AT   1994-09-29-20:40:07
global_server_princ_name /.../c=us/o=osf/ou=dce/cn=haven/hosts/haven/cds-server
1994-09-29-20:41:36.108-04:00I----- cdsclerk(18458) ERROR cds general clerk_bind.c 491 0x007592a8
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063931.
Error on entity: /.../c=us/o=osf/ou=dce/cn=haven
Registry server unavailable
Function: dnsEnumAttr
 
Secd is running on the haven cell. (and in the gemini cell, for that
matter.) 
 
I'm using Dugas's printf-ized cdsclerk, which has printed the name of the
principal which rpc_binding_set_auth_info was using.

[9/30/94 public]
Encountered again.  /c=us/o=osf/ou=dce/cn=gemini (486) ->
/c=us/o=osf/ou=dce/cn=falcon (HP).

gemini users/zeliff$ dce_login cell_admin dce
gemini users/zeliff$ cdscp show dir /.../c=us/o=osf/ou=dce/cn=falcon         

                        SHOW
                   DIRECTORY   /.../c=us/o=osf/ou=dce/cn=falcon
                          AT   1994-09-30-12:07:54
Error on entity: /.../c=us/o=osf/ou=dce/cn=falcon
Registry object not found
Function: dnsEnumAttr

global_server_princ_name /.../c=us/o=osf/ou=dce/cn=falcon/hosts/falcon/cds-server
1994-09-30-12:07:58.476-04:00I----- cdsclerk(19653) ERROR cds general clerk_bind.c 491 0x004e6980
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.
global_server_princ_name /.../c=us/o=osf/ou=dce/cn=falcon/hosts/falcon/cds-server
1994-09-30-12:07:58.756-04:00I----- cdsclerk(19653) ERROR cds general clerk_bind.c 491 0x004e6980
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.
global_server_princ_name /.../c=us/o=osf/ou=dce/cn=falcon/hosts/falcon/cds-server
1994-09-30-12:08:00.885-04:00I----- cdsclerk(19653) ERROR cds general clerk_bind.c 491 0x004e6980
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.
global_server_princ_name /.../c=us/o=osf/ou=dce/cn=falcon/hosts/falcon/cds-server
1994-09-30-12:08:01.215-04:00I----- cdsclerk(19653) ERROR cds general clerk_bind.c 491 0x004e6980
Routine rpc_binding_set_auth_info(3rpc) failed : status = 387063930.

Previously, the unauthenticated use of the 'show cell' command had worked.

gemini users/zeliff$ cdscp show dir /.../c=us/o=osf/ou=dce/cn=falcon
You do not have any network credentials. All requests will be unauthenticated.

                        SHOW
                   DIRECTORY   /.../c=us/o=osf/ou=dce/cn=falcon
                          AT   1994-09-30-12:07:31
            RPC_ClassVersion = 0100
                     CDS_CTS = 1994-09-30-15:25:19.234360100/08-00-09-24-88-59
                     CDS_UTS = 1994-09-30-15:33:08.411059100/08-00-09-24-88-59
              CDS_ObjectUUID = b904b468-dc6a-11cd-bcc8-080009248859
                CDS_Replicas = :
          Clearinghouse UUID = b82000d4-dc6a-11cd-bcc8-080009248859
                       Tower = ncacn_ip_tcp:130.105.4.217[]
                       Tower = ncadg_ip_udp:130.105.4.217[]
                Replica type = master
          Clearinghouse Name = /.../c=us/o=osf/ou=dce/cn=falcon/falcon_ch
                 CDS_AllUpTo = 0
             CDS_Convergence = medium
                CDS_InCHName = allowed
        CDS_DirectoryVersion = 3.0
            CDS_ReplicaState = on
             CDS_ReplicaType = master
               CDS_LastSkulk = 1994-09-30-15:25:19.234360100/08-00-09-24-88-59
              CDS_LastUpdate = 1994-09-30-15:33:08.411059100/08-00-09-24-88-59
                   CDS_Epoch = b904b03a-dc6a-11cd-bcc8-080009248859
          CDS_ReplicaVersion = 3.0
             CDS_GDAPointers = :
                     Timeout = :
                  Expiration = 1994-09-30-11:33:08.350
                   Extension = +1-00:00:00.000I0.000
          Clearinghouse UUID = c9172678-dc6b-11cd-946b-080009248859
                       Tower = ncacn_ip_tcp:130.105.4.217[]
                       Tower = ncadg_ip_udp:130.105.4.217[]
                Replica type = gda
          Clearinghouse Name = /.../c=us/o=osf/ou=dce/cn=falcon/falcon_gda

Minor note:  these two machines are on different subnets.

[10/4/94 public]
The smoke test hit this this morning. cdsd failed with the same error
but without my printf. I've done everything I can with this but I'm at
Rajendra's disposal if he can think of anything I can investigate from
cds's end. The smoke test generated a CR, 12483, at a priority 0 so I'm
raising this.

[10/4/94 public]
I forgot, I'm also assigning it to security. Rajendra let me know if
you want some instrumentation checked in to track this.

[10/4/94 public]
The RATS were able to re-configure the 486 single machine cell
successfully. Lowering the Priority to 1 from 0, since this does not happen
often and re-configuring solves the problem.

[10/4/94 public]
Cancelling this CR. Re-opening CR 12483 and a new CR will be created for
intercell/X.500 rpc_binding_set_auth_info failure situation.



CR Number                     : 11554
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit infinite loop
Reported Date                 : 8/3/94
Found in Baseline             : 1.1b13
Found Date                    : 8/3/94
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - adressed in DCE1.2.2.

[8/3/94 public]

rgy_edit handles some errors from password management server as
continue on error. The example is if a principal has a pwd_val_type
ERA of 1 or more but no pwd_mgmt_binding ERA. It does not treat
the error as fatal and will continue in an infinite loop prompting
for user's name, group and org.

Should be simple code fix but workaround is to use dcecp to
get generated passwords.

[8/8/94 public]
This is not a rgy_edit error.  rgy_edit intentionally loops and lets you
respecify information on error (Greg added this specifically per customer
requests...).  It cannot decide what's a warning, what's an error and what's
fatal, so it prompts you again.  If you don't want to keep going, you can
either enter an empty name field or just control-c out of the subcommand.
rgy_edit isn't going to have any real changes to it from now on (just dcecp)
and this isn't that big a problem (not a problem at all if you can control-c
out of it), so I'm cancelling this one.

[8/9/94 public]
Oops, the above didn't mention a minor detail that I was just made aware of.
rgy_edit is not displaying the error that it's getting from the passwd gen
stuff before it loops, so this CR is open again because that would be too
confusing for an admin to figure out on their own...



CR Number                     : 11504
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : dtsd failing on a 1.0.3 client
Reported Date                 : 8/1/94
Found in Baseline             : 1.1b13
Found Date                    : 8/1/94
Severity                      : E
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/1/94 public]

I am making this an A0 because compatibility is P0 .... 

Cell Configuration:

OSF1 (raven)  : 1.1 secd, dtsd
HPUX (bronze) : 1.1 cdsd, dtsd
OSF1 (tahiti) : 1.0.3 client, dtsd, ntp_provider

Build: BL-13

The 1.0.3 client configures successfully. However, the dtsd server
on the 1.0.3 client keeps reporting the following message:

root@tahiti> (RPC_CN_AUTH_VFY_CLIENT_REQ) on server failed status =
1412901f

To which the 1.1 dtsd servers seem to reply with:

root@bronze> 1994-08-01-12:26:01.824-04:00I13.594 dtsd ERROR dts dtsdate
time_request.c 658 0x4002ed58
RPC call ClerkRequstTime() to remote server failed: decrypt integrity check
failed (dce / rpc)

Could this be related in some way to 11419?
Does the ntp provider on the 1.0.3 machine be a problem?

Needless to say that the 1.1 servers complain that there are only
2 dtsd servers in the cell. dtscp subcommands work.

[8/1/94 public]

The 1.1 server is attempting to issue a ClerkRequestTime() API call to
get the time from the (1.0.3) server, which fails with "decrypt
integrity check" error. This is a security and/or RPC problem: in any 
case, there is nothing that DTS will do differently to make this work.

Re-assigning to security.

[8/1/94 public]

I am lowering the priority of this bug to the lowest because
it appears that when the cell is re-started the problem subsides. 
I know there is something new and flaky about this mixed cell,
but before I raise the priority I need to work with the cell more 
to gather more information.

[8/22/94 public]
Martha, when you get a chance, could you try to reproduce this again now
that there's been some compatibility fixes made to 1.1 (ie: use at least bl15
for the 1.1 side).  I thought A0 was too high, but E4 seems too low for a
compatibility problem like this.

[09/02/94 public]

I had forgotten about this problem. I have not used this configuration for
CHO. I will try this again after this weekend CHO.

[10/05/94 public]
Martha, is this still a problem?  Have you had a chance to try it again?

[10/07/94 public]

I run this configuration last weekend and did not see this problem.
I am going to cancel this. Gail Marie and I are the only ones running
this configuration, so if this shows up again, we will re-open this 
CR.



CR Number                     : 11499
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : FVT
Short Description             : login/key_mgmt/rgy_edit/acl_edit FVT's fail due to bad setup on HP
Reported Date                 : 7/29/94
Found in Baseline             : 1.1b13
Found Date                    : 7/29/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/29/94 public]

On HP with BL13:

login/key_mgmt/acl_edit/rgy_edit FVT's are failing because they are not
finding certain registry objects whcih their setup scripts are supposed
to create. 

All is fine on OSF1 running same BL13, this is odd.  The following 
principals were noted to be missing from the HP rgy after the tests finished:

test_key1
test_key2
test_key3
test_key4
flintstone

[8/9/94 public]
Does this still happen (with the latest good build) or was it just a setup
error that one time?  Does it happen on RIOS?

[8/25/94 public]

Can someone check to see if this is still happening?  Also, as
Mike asked before - does it happen on RIOS?

[ sekhar 9/21/94 public ]

Cancelled. 

I just ran through the API and rgy_edit functional tests
on HP, using bl-17 and they all passed except for one failure
in the Unix interfaces . I ran acl_edit command test a couple 
of weeks ago and that too passed.

The principals used for test are created by key_mgmt_setup.sh
and rgy_setup.sh (removing the principals if they exist from
a previous run) . And they are not deleted at the end of the
test . So if you ran the test and the principals were not found, 
this probably means that the setup scripts were never run.



CR Number                     : 11381
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : svr_example
Short Description             : moving admin/client/svr_example
Reported Date                 : 7/21/94
Found in Baseline             : 1.1b12
Found Date                    : 7/21/94
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/25/94 public]

src/test/security/acl_edit/svr_example

[7/25/94 public]

Added bhaim to interest list.

[7/25/94 public]

Just wanted to test that "1.1doc" is a valid value
for fix by baseline.

[7/21/94 public]

The directory:

src/security/client/admin/acl_edit/svr_example

is being moved to:

src/test/security/api/moretests

because, while it is part of the delegation functional
tests, it is obsolete as an example of an acl mgr (it does
not make use of the new 1.1 acl library).

I'm afraid I don't know which book(s) this affects.

[7/21/94 public]
OOPS - wrong location - being moved to:

src/test/security/acl_edit/svr_example

NOT moretests.

[7/25/94 public]

Assigned this CR to Peter Neilson (OSF ACL manager writer).

[7/25/94 public]

Since the acl_server really doesn't have anything
to do with acl_edit, the path 
src/test/security/acl_edit/svr_example

should be changed to 

src/test/security/svr_example

[08/25/94 public]
Changed Fix By Baseline field from "1.1doc" to "1.1" for
consistency with other doc CRs.

[10/04/94 public]
I cannot find any cases of svr_example in any of the documentation, so I'm
cancelling this CR.



CR Number                     : 11367
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_site_open() does not allow unauthenticated access with string binding specification.
Reported Date                 : 7/20/94
Found in Baseline             : 1.1b12
Found Date                    : 7/20/94
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/20/94 public]

I'm using sec_rgy_site_bind_query() as a work around, but using 
sec_rgy_site_open() used to work also.

[8/9/94 public]
This should never have worked:  The sec_rgy_site_open*() calls use default
authentication levels which would require you to be authenticated.  The correct
thing to do to bind unauthenticated is to use the sec_rgy_site_bind* calls
(note: sec_rgy_site_bind_query() is obsolete since it is no different than
sec_rgy_site_bind() ).  Cancelled this CR.



CR Number                     : 11321
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_rgy_site_open_update
Short Description             : core dump in sec_rgy_site_open_update
Reported Date                 : 7/15/94
Found in Baseline             : 1.1
Found Date                    : 7/15/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/15/94 public]

Running gds_sec tests I get the following outout on HP800:

dcecp dcecp_add.tcl
rgy_add.sh

local_start: Configure GDS

Local CACHE administration (DIR-IDs=11)
Local CACHE administration (DIR-IDs=12)
Waiting 60 sec. for coming up the DSA processes
Adding objects in DSA-11
Adding objects in DSA-12
Now, testing is going on ...
gds_sec (tp1/1): Waiting 60 sec. for coming up the DSA processes
/bin/ksh: 18373 Memory fault(coredump)
/bin/ksh: 18385 Memory fault(coredump)
gds_sec (tp1/2): Waiting 60 sec. for coming up the DSA processes
/bin/ksh: 18487 Memory fault(coredump)
gds_sec (tp1/3): Waiting 60 sec. for coming up the DSA processes
gds_sec (tp2/1): Waiting 60 sec. for coming up the DSA processes
gds_sec (tp3/1): Waiting 60 sec. for coming up the DSA processes
/bin/ksh: 18907 Memory fault(coredump)
/bin/ksh: 18920 Bus error(coredump)
gds_sec (tp4/1): Waiting 60 sec. for coming up the DSA processes
/bin/ksh: 19068 Bus error(coredump)
/bin/ksh: 19075 Memory fault(coredump)
/bin/ksh: 19084 Memory fault(coredump)
/bin/ksh: 19091 Memory fault(coredump)
/bin/ksh: 19098 Memory fault(coredump)
/bin/ksh: 19105 Memory fault(coredump)

rgy_del.sh
dcecp dcecp_del.tcl
local_clean: Deconfigure GDS

As far as I can see all cores came from gdscp.

The stack of the last core is (xdb -s -l ALL /opt/dcelocal/bin/gdscp core):

 0 free@libc + 0x00000008 (hp-ux export stub)
 1 cma_lib_free@libdce + 0x00000284 (0x400950a0, 0x3, 0, 0x100000)
 2 ptdexc_mutex_unlock@libdce + 0x00000034 (0x400950a0, 0x4, 0x15, 0x7b033eb0)
 3 rpc_ss_free@libdce + 0x000000e8 (0x4000f148, 0x9fe80800, 0x1ceb11c9, 0x8a885d04)
 4 cma_lib_free@libdce + 0x00000148 (0x400c09a0, 0x400bb490, 0x400d87f8, 0x7b03f4e8)
 5 rca_site_resolve_update@libdce + 0x000007b8 (0x7b03f4e8, 0x40098b58, 0x7b039f84, 0x7b03abb0)
 6 sec_rgy_site_bind_update@libdc + 0x00000088 (0x7b039f88, 0x7b03f4e8, 0x7b039f84, 0x7b03abb0)
 7 sec_rgy_site_open_update@libdc + 0x00000068 (0x7b039f88, 0x7b039f84, 0x7b03abb0, 0x7afd6090)
 8 gds_sec__conf_target@libdce + 0x00001c4c (0x40096b40, 0x7b037e28, 0x7b035c5c, 0)
 9 dua_sec__map_target_name@libdc + 0x00000dbc (0x7b030005, 0x7b035d0c, 0x7b03000b, 0x40096b40)
10 dua_init_sec_ctx@libdce + 0x00000e44 (0x40090005, 0x40096b40, 0x7b03000b, 0)
11 d21_bh1_exec_bind@libdce + 0x000007ac (0x7b0356d8, 0x7afc0000, 0x1aa, 0x7afc505c)
12 d21_1_bind@libdce + 0x00000b80 (0x7b0355e0, 0x7afb68b0, 0x7afb68c0, 0)
13 ds_bind@libdce + 0x00001134 (0x400969c8, 0x40095128, 0x400070ec, 0)
14 gc_t__perform_bind + 0x00000a00 (0xb, 0x40096870, 0, 0)
15 gc_t_bind + 0x00000854 (0x400966c8, 0, 0x1, 0x7b035458)
16 gc_i__x500obj_bind + 0x000000a0 (0, 0x4000a260, 0x6, 0x40096978)
17 gc_i_x500obj + 0x0000015c (0, 0x4000a260, 0x6, 0x40096978)
18 Tcl_Eval + 0x000009f0 (0x4000a260, 0x7b034fd5, 0x10050, 0x2b0000)
19 Tcl_EvalCmd + 0x000001a8 (0, 0x4000a260, 0x2, 0x7b0350b0)
20 Tcl_Eval + 0x000009f0 (0x4000a260, 0x40092238, 0x40096970, 0)
21 InterpProc + 0x00000530 (0x40092220, 0x4000a260, 0, 0x7b034db0)
22 Tcl_Eval + 0x000009f0 (0x4000a260, 0x7b034a55, 0, 0x3)
23 Tcl_EvalCmd + 0x000001a8 (0, 0x4000a260, 0x2, 0x7b034b30)
24 Tcl_Eval + 0x000009f0 (0x4000a260, 0x7b034816, 0x7b034938, 0x7b0348d8)
25 Tcl_CatchCmd + 0x000001a8 (0, 0x4000a260, 0x3, 0x7b0348f0)
26 Tcl_Eval + 0x000009f0 (0x4000a260, 0x40093bbc, 0x7b0344b8, 0)
27 ExprLex + 0x00000744 (0x4000a260, 0x7b0345d8, 0x7b0344b8, 0x7b034650)
28 ExprGetValue + 0x00000080 (0x4000a260, 0x7b0345d8, 0xffffffff, 0x7b0344b8)
29 ExprTopLevel + 0x00000158 (0x4000a260, 0x40093bbb, 0x7b0344b8, 0x7b033eb0)
30 Tcl_ExprBoolean + 0x00000040 (0x4000a260, 0x40093bbb, 0x7b034470, 0x7b034358)
31 Tcl_IfCmd + 0x000001c4 (0, 0x4000a260, 0x5, 0x7b034370)
32 Tcl_Eval + 0x000009f0 (0x4000a260, 0x40092880, 0x12cc, 0)
33 Tcl_EvalFile + 0x0000088c (0x4000a260, 0x7b033006, 0x4000128c, 0x1)
34 gc_i__check_interactive_mode + 0x00000284 (0x4000a260, 0x40000002, 0x7b033cd0, 0)
35 main + 0x000000f0 (0x2, 0x7b033cd0, 0, 0)


The first core dump has had the same stack.

Helmut Baumgaertner: Can you check if we have to assign this to sec?

[07/18/94 public]
Assigned it to sec.
What happens is that gdscp tries a bind with DCE authentication.
We do before a "dce_login cell_admin -dce-"
and a "dce_login gds_cl1 gds_cl1". This works fine.
Then we call 

gdscp 

gdscp> bind -dirid 11 -dsa /c=re/O=sni/ou=buba/cn=dsa/cn=dsa1 -authentication DCE


gdscp calls sec_rgy_site_open_update with:

sec_rgy_site_open_update("/.../c=ie/o=digital",&rgy_ctx, &dce_status );

(see : directory/gds/gds_sec/gds_sec_rgy.c, line 465.)

Is there a difference between calling sec_rgy_site_open_update
with "/.../c=ie/o=digital" and "/.:" ?

Additional info: output from gds/gds_sec:

SEC_TRACE 2 :   ENTRY dua_acquire_cred
SEC_TRACE 3 :   sec_mech:<5>
SEC_TRACE 5 :   gds_sec__test_cred: testing for <NO_MASTER_BIND> for authmech 5
SEC_TRACE 4 :   no cred stored for <NO_MASTER_BIND> for authmech 5
SEC_TRACE 2 :   dua_acquire_cred: cred_handle:<0> continue
SEC_TRACE 3 :   ENTRY dua_sec__map_client_name
SEC_TRACE 4 :    dua_sec__map_client_name uses gss_name <GSS_C_NO_NAME>
SEC_TRACE 3 :   EXIT dua_sec__map_client_name
SEC_TRACE 2 :   ENTRY gds_sec__set_ext_attr()
SEC_TRACE 3 :   got current login context handle <1074353160>
SEC_TRACE 3 :   sec_login_set_extended_attrs returned ok
SEC_TRACE 3 :   got new  context handle<1074513848>
SEC_TRACE 3 :   New login context set to the default context
SEC_TRACE 2 :   EXIT gds_sec__set_ext_attr()
SEC_TRACE 2 :   dua_acquire_cred: gds_sec__set_ext_attr() succeeded
SEC_TRACE 3 :    dua_acquire_cred uses gss_name <GSS_C_NO_NAME>
SEC_TRACE 2 :   EXIT dua_acquire_cred: cred_handle:<1>
SEC_TRACE 2 :   ENTRY dua_init_sec_ctx
SEC_TRACE 3 :   sec_mech:<5> cred_handle:<1>
SEC_TRACE 3 :   ENTRY dua_sec__map_target_name
SEC_TRACE 4 :   dsa_dn:<85.4.6re85.4.10sni85.4.11buba85.4.3dsa85.4.3dsa1> dsa_psap <>
SEC_TRACE 3 :   ENTRY dua_sec__get_dir_princ
SEC_TRACE 2 :   ENTRY dua_acquire_cred
SEC_TRACE 3 :   sec_mech:<0>
SEC_TRACE 2 :   EXIT dua_acquire_cred: cred_handle:<0>
SEC_TRACE 2 :   ENTRY dua_init_sec_ctx
SEC_TRACE 3 :   sec_mech:<0> cred_handle:<0>
SEC_TRACE 2 :   EXIT dua_init_sec_ctx: bind_id <0>
SEC_TRACE 2 :   ENTRY dua_conf_sec_ctx
SEC_TRACE 3 :   sec_mech:<0> bind_id:<0>
SEC_TRACE 3 :   return_token length <0>

SEC_TRACE 2 :   EXIT dua_conf_sec_ctx: target_dsa <>
SEC_TRACE 2 :   read from <85.4.6re85.4.10sni85.4.11buba85.4.3dsa85.4.3dsa1> PN </.../c=ie/o=digital/gds-dsa1>
SEC_TRACE 2 :   len read <28>
SEC_TRACE 3 :   EXIT dua_sec__get_dir_princ
SEC_TRACE 3 :   ENTRY gds_sec__conf_target
SEC_TRACE 4 :   retrieved from dir DN <85.4.6re85.4.10sni85.4.11buba85.4.3dsa85.4.3dsa1>
SEC_TRACE 4 :   retrieved from dir PN </.../c=ie/o=digital/gds-dsa1>
SEC_TRACE 2 :   cell name </.../c=ie/o=digital> principal name <gds-dsa1>
Memory fault(coredump)

I haven't tested it yet with the last build - I did use the build
from 7/14/94. I'll try now - I think there was a new security drop
on Friday ...

[07/18/94 public]
Same behaviour with the newest source. Still dumping core - same stack.

[07/18/94 public]
Starting gdscp from xdb:

xdb -s -l ALL /opt/dcelocal/bin/gdscp

I did in xdb:

z 20 s
z 20 r		(to skip over VTALARM)
run

got the prompt 

gdscp>

and typed

bind -dirid 11 -dsa /c=re/O=sni/ou=buba/cn=dsa/cn=dsa1 -authentication DCE

I got :

bad arg to sys call (from probe_for_kload) - I continued
bad arg to sys call (from probe_for_dfs) - I continued
bad arg to sys call (from afs_syscall) - I continued
bad arg to sys call (from afs_syscall) - I continued

(BTW: is this OK?)

Then I got segmentation violation with the following stack:

 0 free@libc + 0x00000114 (0x4000f148, 0x6170001b, 0x6369646d, 0x97365)
 1 cma_lib_free@libdce + 0x00000148 (0x400bd6d0, 0x400b9ec8, 0x400bd9a0, 0x7b03e418)
 2 rca_site_resolve_update@libdce + 0x000007b8 (0x7b03e418, 0x400bd550, 0x7b038eb4, 0x7b039ae0)
 3 sec_rgy_site_bind_update@libdc + 0x00000088 (0x7b038eb8, 0x7b03e418, 0x7b038eb4, 0x7b039ae0)
 4 sec_rgy_site_open_update@libdc + 0x00000068 (0x7b038eb8, 0x7b038eb4, 0x7b039ae0, 0x7aa24408)
 5 gds_sec__conf_target@libdce + 0x00001c4c (0x40094008, 0x7b036d58, 0x7b034b8c, 0)
 6 dua_sec__map_target_name@libdc + 0x00000dbc (0x7b030005, 0x7b034c3c, 0x7b03000b, 0x40094008)

... (same as above)

This stack seems less corrupted than the stack above.
(Ignoring that it still says that i.e. free has 4 arguments ...)
There is only one "free" called directly by rca_site_resolve_update -
may be this makes it easier to find the bug.

Please note that the core dump does not always happen: sometimes
it passes rca_site_resolve_update - we get a bus error later
($RECOVER_START from free@libc - that is the stack), sometimes
it passes also this, and we get

1994-07-18-15:44:35.827-04:00I----- PID#7534 ERROR gss authentication gssapi.c 5
215 0x7affba68
No token supplied

Does anybody have a good memory debugger which is able to debug
also cma_free stuff??

[7/19/94 public]
Just a side note to the above debug work:
You should execute the following two commands when you start xdb, or better yet,
add these two commands to your ~/.xdbrc (create it if it doesn't exist)
(you got the 20 signal correct, but you can do it in a single command.  The
continues that you had to do were because you hadn't done the same for signal12)

z 20 sr
z 12 sr

[07/20/94 public]
Is it OK to ignore signal 12?? Anyway: We have tried to figure out who
causes the memory problem - sec or gds.

So we (means Helmut Baumgaertner) wrote a dcecp script:
(/project/dce/build/dce1.1/src/test/functional/directory/gds/ts/config/dcecp_add.tcl)

#######################################################################
#    FILE : dcecp_add.tcl                                             #
#    TYPE : dcecp script                                              #
#    DESCRIPTION : used to setup the DCE  registry for gds_sec tests  #
#######################################################################


# add the principals 

puts "creating principals "

principal create { gds_zero  gds_invalid  gds_cl1 gds_cl2 gds_cl3 gds-dsa1  gds-dsa2  }

# use modify to get the ERA in the rgy

puts "assigning values for ERA X500_DN "

principal modify gds_invalid -add {X500_DN {/C=re/O=sni/CN=invalid}}
principal modify gds_cl1 -add {X500_DN {/C=re/O=sni/OU=buba/CN=one}}
principal modify gds-dsa1 -add {X500_DN {/C=re/O=sni/OU=buba/CN=dsa/CN=dsa1}}
principal modify gds_cl2 -add {X500_DN {/C=re/O=sni/OU=ap2/CN=two}}
principal modify gds_cl3 -add {X500_DN {/C=re/O=sni/OU=ap2/CN=three}}
principal modify gds-dsa2 -add {X500_DN {/C=re/O=sni/OU=buba/CN=dsa/CN=dsa2}}

# creating new group and organization

puts "creating new group gds_sec_grp"
group create gds_sec_grp 

puts "creating new organization gds_sec_org"
organization create gds_sec_org 


# adding members to group gds_sec_grp  and org gds_sec_org

puts "adding members to group and org"

group add gds_sec_grp -member { gds_zero gds_invalid gds_cl1 gds_cl2 gds_cl3 gds-dsa1 gds-dsa2 }
organization add gds_sec_org -member { gds_zero gds_invalid gds_cl1 gds_cl2 gds_cl3 gds-dsa1 gds-dsa2 }



# creating accounts 

puts "creating accounts"

account create gds_zero -group {gds_sec_grp} -organization {gds_sec_org} -password {gds_zero} -mypwd {-dce-}     
account create gds_invalid -group {gds_sec_grp} -organization {gds_sec_org} -password {gds_invalid} -mypwd {-dce-}     
account create gds_cl1 -group {gds_sec_grp} -organization {gds_sec_org} -password {gds_cl1} -mypwd {-dce-}     
account create gds_cl2 -group {gds_sec_grp} -organization {gds_sec_org} -password {gds_cl2} -mypwd {-dce-}     
account create gds_cl3 -group {gds_sec_grp} -organization {gds_sec_org} -password {gds_cl3} -mypwd {-dce-}     
account create gds-dsa1 -group {gds_sec_grp} -organization {gds_sec_org} -password {gds-dsa1} -mypwd {-dce-}     
account create gds-dsa2 -group {gds_sec_grp} -organization {gds_sec_org} -password {gds-dsa2} -mypwd {-dce-}     


# keytab entries


--------------------------------


We do dce_login as cell_admin, run this script and then run the following
C program:

/*--------------------------------------------------------------------*/
/*                                                                    */
/* Copyright (c) 1993 Siemens Nixdorf Informationssysteme AG          */
/* All Rights Reserved                                                */
/*                                                                    */
/* Project      : GDS SEC                                             */
/*                                                                    */
/* File Name    : getdsapn.c                                          */
/*                                                                    */
/* Description  : main prog : Prints the DN ERA value for a given     */
/*                dsa pr=incipal name                                 */
/*                                                                    */
/* Date         : may  31, 1994                                       */
/*                                                                    */
/* Author       : Helmut Baumgaertner SNI BA NM 123, Munich, Germany  */
/*                                                                    */
/*--------------------------------------------------------------------*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <dce/rpc.h>
#include <dce/uuid.h>
#include <dce/dce_error.h>
#include <dce/rgybase.h>
#include <dce/binding.h>
#include <dce/sec_cred.h>


#define GLOBAL_DCE_NAME_PREFIX	"/.../"


/* prototypes of internal functions */


signed32  gds_sec__separate_pn (
	/*	IN	*/	unsigned_char_t *global_name,
	/*	OUt	*/	unsigned_char_t *cell_name,
	/*	OUt	*/	unsigned_char_t *princ_name);


static void gds_sec__inq_err_text(
	/*	IN	*/	unsigned long	dce_status,
	/*	IN	*/	char			*text,
	/*	OUT	*/	unsigned char	*dce_err_text);

main	(
		int argc, 
		char *argv[]
		)
	{

	unsigned char dce_e_string[dce_c_error_string_len];
	sec_rgy_handle_t rgy_ctx;
	sec_attr_t x500_attr_returned;
	sec_rgy_name_t	rgy_attr_princ_name;
	error_status_t dce_status;
	int i;
	signed32 d2_ret;
	unsigned_char_t rgy_name[100];
	unsigned_char_t cell_name[1024] , local_pname[1024];


	if (argc == 1 )  /* set default pricipal to ask for */
		{
		strcpy ( (char*) rgy_attr_princ_name, "gds-dsa1");
		strcpy ( (char*) rgy_name, "/.../c=ie/o=digital");
		}
	if ( argc == 2 )  /* use 1. argument as global principal name */
		{
		d2_ret = gds_sec__separate_pn ( (unsigned_char_t *) argv[1] ,
									cell_name , local_pname );
		if ( d2_ret != 0 )
			{
			fprintf(stderr, "Could not sepatate cell name form principal name\n");
			exit ( 101);
			}
		fprintf(stderr,"cell name <%s> principal name <%s>\n",cell_name,local_pname);
		strcpy ( (char*) rgy_attr_princ_name, (char*) local_pname);
		strcpy ( (char*) rgy_name, (char*) cell_name);
		}
	fprintf(stderr,
	"Get X500 ERAs for principal <%s> from rgy site <%s>\n"
	,rgy_attr_princ_name, rgy_name);

	sec_rgy_site_open_update (	rgy_name ,
								&rgy_ctx, &dce_status );	

	if ( dce_status != error_status_ok)
		{
		gds_sec__inq_err_text(dce_status,"sec_rgy_site_open_update",dce_e_string);
		fprintf(stderr,"sec_rgy_site_open_update: %s\n",dce_e_string);
		exit (1) ;
		}

	fprintf(stderr,"sec_rgy_site_open_update OK\n");


	sec_rgy_attr_lookup_by_name (	rgy_ctx,
								sec_rgy_domain_person ,
								rgy_attr_princ_name,
								"X500_DN" ,
								&x500_attr_returned,
								&dce_status);
	if ( dce_status != error_status_ok)
		{
		gds_sec__inq_err_text(dce_status,"sec_rgy_attr_lookup_by_name",dce_e_string);
		fprintf(stderr,"sec_rgy_attr_lookup_by_name: %s\n",dce_e_string);
		exit(4);
		}

	else
		{
		fprintf(stderr,"sec_rgy_attr_lookup_by_name OK\n");
		
		if ( x500_attr_returned.attr_value.attr_encoding  != sec_attr_enc_printstring )
			{
			fprintf(stderr,
			"sec_rgy_attr_lookup_by_name returned wrong attr encoding <%d> \n",
			x500_attr_returned.attr_value.attr_encoding);
			exit (20);
			}

		/* here we have got the DN of the specified principal */

		fprintf(stderr,"\t X500_DN :\t\t<%s>\n",
			x500_attr_returned.attr_value.tagged_union.printstring);
		
		}

	sec_rgy_attr_lookup_by_name (	rgy_ctx,
								sec_rgy_domain_person ,
								rgy_attr_princ_name,
								"X500_DSA_Admin" ,
								&x500_attr_returned,
								&dce_status);
	if ( dce_status != error_status_ok)
		{
		gds_sec__inq_err_text(dce_status,"sec_rgy_attr_lookup_by_name",dce_e_string);
		fprintf(stderr,"sec_rgy_attr_lookup_by_name: %s\n",dce_e_string);
		exit(4);
		}

	else
		{
		fprintf(stderr,"sec_rgy_attr_lookup_by_name OK\n");
		
		if ( x500_attr_returned.attr_value.attr_encoding  != sec_attr_enc_printstring_array )
			{
			fprintf(stderr,
			"sec_rgy_attr_lookup_by_name returned wrong attr encoding <%d> \n",
			x500_attr_returned.attr_value.attr_encoding);
			exit (20);
			}

		/* here we have got the DSA name list of the specified principal */

		fprintf(stderr,"\t X500_DSA_Admin : \n");

		for (i = 0 ; 
			i<x500_attr_returned.attr_value.tagged_union.string_array->num_strings; 
			i++)
				fprintf(stderr,"\t\t\t\t<%s>\n",
				x500_attr_returned.attr_value.tagged_union.string_array->strings[i]);

		}

	/* terminate the binding to the rgy server */
	sec_rgy_site_close (	rgy_ctx,
							&dce_status);

	if ( dce_status != error_status_ok)
		{
		gds_sec__inq_err_text(dce_status,"sec_rgy_site_close",dce_e_string);
		fprintf(stderr,"sec_rgy_site_close : %s\n",dce_e_string);
		fprintf(stderr,"continue anyway\n");
		}
	else
		{
		fprintf(stderr,"sec_rgy_site_close OK\n");
		}

	
	exit (0);
	}
/*--------------------------------------------------------------------*/
/*                                                                    */
/* Function Name:	gds_sec__separate_pn                              */
/*                                                                    */
/* Description	: separates the cell name and the local pricipal name */
/*                from a global DCE name                              */
/*                given in the format  as it is stored in the rgy     */
/* Date         : March    23, 1994                                   */
/* Author       : Helmut Baumgaertner SNI BA NM 123, Munich, Germany  */
/*--------------------------------------------------------------------*/
signed32 gds_sec__separate_pn ( 
	/*	IN	*/ unsigned_char_t * global_name ,
	/*	OUT	*/ unsigned_char_t * c_name ,
	/*	OUT	*/ unsigned_char_t * p_name )
	{
	unsigned char *tmp, *pslash, *pequal;
	signed16 typed_name = 1 ;
	unsigned char g_name[1024];

	strcpy ((char*) g_name, (char*) global_name);
	
	pslash  =  g_name + strlen (GLOBAL_DCE_NAME_PREFIX);
	pequal  =  g_name + strlen (GLOBAL_DCE_NAME_PREFIX);


	/* while equals are found */
	while ( typed_name == 1 )
		{
		tmp = (unsigned char *) strchr ( (char*)pequal , '=');
		if ( tmp == NULL)
			typed_name = 0 ;
		else
			pequal += (1+(tmp - pequal)) ;
		}
	pslash = (unsigned char *) strchr ( (char*)pequal , '/'); 
	if (pslash == NULL )
		return (-1);
	
	*pslash++ = 0x00 ;
	strcpy ((char*)  c_name ,(char*)  g_name);
	strcpy ((char*)  p_name ,(char*)  pslash);
	return (0);
	}

/*--------------------------------------------------------------------*/
/*                                                                    */
/* Function Name:	gds_sec__inq_err_text                             */
/*                                                                    */
/* Description	: gets the dce error text for a given dce error_status*/
/* Date         : March    23, 1994                                   */
/* Author       : Helmut Baumgaertner SNI BA NM 123, Munich, Germany  */
/*--------------------------------------------------------------------*/
static void gds_sec__inq_err_text(
	/*	IN	*/	unsigned long	dce_status,
	/*	IN	*/	char			*text,
	/*	OUT	*/	unsigned char	*dce_err_text)
	{

	int error_st;

	dce_error_inq_text ( (unsigned long) dce_status, 
						dce_err_text, &error_st);
		if ( error_st == -1 )
			{
			sprintf((char*) dce_err_text ," %s returns error <%08x>",
									text, dce_status);
			}
	}

-------------------------------------

Running this on HP in an infinite loop gives the following output:


Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
Bus error(coredump)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
Bus error(coredump)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
Bus error(coredump)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
Bus error(coredump)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
Bus error(coredump)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
	 X500_DN :		</C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>
sec_rgy_attr_lookup_by_name: attribute instance not found (dce / sec)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
Bus error(coredump)
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>

----------------------------

As you can see - sometimes sec_rgy_site_open_update works, sometimes 
it dumps core. We think that our getera.c example is OK -
so the problem should be really in sec_rgy_site_open_update.
(secd und sec_clientd are still running after our test suite.)

Hope that this information helps.

[07/20/94 public]
Changed subject field: not only gdscp is dumping core in
sec_rgy_site_open_update.

[08/10/94 public]
I haven't been able to reproduce this; the sample program runs
indefinitely.  Can OSF?

[8/11/94 public]

Attempted reproduce problem using sample program on HP and AT386 using
binaries from build of 8/10.  Program ran 1106 times on AT without problem.
On HP, secd died on first iteration of sample program.  Re-configured and
re-ran sample program ... got :

# ./getdsapn
Get X500 ERAs for principal <gds-dsa1> from rgy site </.../c=ie/o=digital>
sec_rgy_site_open_update OK
sec_rgy_attr_lookup_by_name OK
         X500_DN :              </C=re/O=sni/OU=buba/CN=dsa/CN=dsa1>

and secd commenced to spin.

Here are the configuration steps I used:

config.cmd: (comments deleted)
  config sec server		# Security Server
  config cds server		# CDS Server
  
Config.env:
  #
  # General config values
  #
  
  EXIT_ON_ERROR=n		# y/n Exit if fatal error ecountered, default n
  DO_CHECKS=n		# y/n Prompt for continue after warnings, default y
  
  CELL_ADMIN=cell_admin	# Principal name of Cell Administrator
  CELL_ADMIN_PW=-dce-	# Password for CELL_ADMIN account
  
  #TOLERANCE_SEC=120	# Number of seconds clients can differ from sec server
  check_time=y		# y/n if you want to check times, default y
  SYNC_CLOCKS=y		# y/n Sync our clock to sec servers?
  
  
  #
  # Install
  #
  REMOVE_PREV_INSTALL=y		# y/n Remove previous install before 
				  # installing anything.
  mach=`uname`
  case $mach in
	  OSF1)	machine=at386;;
	  AIX)	machine=rios;;
	  HP-UX)	machine=hp800;;
  esac
  # path to install area
  #FILESYSTEM="install/${machine}/opt/dce1.1"
  #MEDIA="<device>"			# device to read tape from
  
  CP_OR_SYMLINK=copy		# Use copy or sym-links(link) to install
  USE_DEF_MSG_PATH=y		# y/n use default message catalog path
  USE_ETHER_FILE=y		# y/n Trust /etc/ieee_802_addr file (OSF/1)
  DO_LIB_ADMIN=y			# y/n Install libdce.so on OSF/1 system
  
  #
  # DFS install
  #
  INSTALL_OPT_SERS=y		# y/n install optional servers (bak, butc, etc)
  INSTALL_OPT_CLIENT=y		# y/n install optional client binaries (cm, etc)
  
  
  #
  # General config variables
  #
  REMOVE_PREV_CONFIG=y	# y/n Remove previous config before config-ing anything
  
  CELL_NAME="c=ie/o=digital"	# Name of cell to configure
  
  #HOST_NAME_IP="<ip_address>"	# IP address of current host (if getip fails)
  
  
  #
  # DCE Client config
  #
  DTS_CONFIG=clerk		# When doing DCE client config, what should
				  # we be? clerk, local, global, none
  
  #
  # Security Config
  #
  SEC_SERVER="`hostname`"		# Hostname of security server
  #SEC_SERVER_IP="<ip-address>"	# fallback if getip program doesn't work
  KEYSEED="garBageMan"		# Keeyseed for initial database master
  
  #SEC_REPLICA="<hostname>"	# Name of the security replica database
  
  
  #
  # CDS Config
  #
  CACHE_CDS_SERVER="`hostname`"	# Name of a cds server to cache
  #CACHE_CDS_SERVER_IP="<ip_address>" # fallback if getip program doesn't work
  MULTIPLE_LAN=n			# y/n do you have multiple lans
  #LAN_NAME="<name>"		# Name of lan if MULTIPLE_LAN=y
  
  #REP_CLEARINGHOUSE="<name_ch>"	# Name for new replica clearing house
  #DIR_REPLICATE="n"		# y/n manually type in more directories 
				  # to replicate.
  
  #
  # GDA
  #
  
  #
  # DTS Config
  #
  NTP_HOST="<hostname>"		# Name of ntp server
  
  #
  # DFS Config
  #
  
  AGG_FS_TYPE=native		# native/episode aggregate fs type to export
  AGG_DEV_NAME="<device>"		# device name for the aggregate to be exported
  AGG_MOUNT_PATH="<path>"		# mount path for aggregate
  AGG_NAME="<name>"			# Name of aggregate
  AGG_ID="<number>"			# numerical id of aggregate
  
  CACHE_SIZE_RAM=10000		# number of bytes for memory cache
  CACHE_SIZE_DISK=10000		# number of bytes for disk cache
  CACHE_DIR_DISK="/opt/dcelocal/var/adm/dfs/cache" # pathname of disk cache
  CLIENT_CACHE_LOC=disk		# mem/disk where is the cache
  
  EPI_FORMAT_PART=n		# y/n format partition as episode
  EPI_FORCE_INIT=n		# y/n force initialization, even if data loss
  INIT_LFS=n			# y/n initialize the LFS (using epiinit)?
  LOAD_LFS_KEXT=n			# y/n load LFS kernel extentions
  
  ROOT_FILESET_NM="<name>"	# Root fileset name
  SCM_NAME="<hostname>"		# System Control Machine name
    
Additional files needed are:
src/test/functional/directory/gds/ts/config/(dcecp_add.tcl,rgy_add.sh}

Commands issued:
  /etc/dce_config -e config.env -c config.cmd
  dce_login cell_admin -dce-
  dcecp dcecp_add.tcl
  rgy_add.sh
  getdsapn

[8/11/94 public]
Forgot to add: I was using rpcd as the endpoint mapper.

[08/11/94 public]
No, secd crashing in this scenario is a different bug, OT 11610 -- the fix
hasn't yet migrated down to OSF but if you want to apply it temporarily,
in rsdb_attr.c:rsdb_attr_lookup_by_name()

    sec_attr_util_sch_ent_free_ptrs(&sch_entry);
==>
    if(!allocator)
    {
        sec_attr_util_sch_ent_free_ptrs(&sch_entry);
    }

[8/12/94 public]
Reran sample program on HP with rebuilt secd.  Program did 500 iterations
without a problem.  I've dropped the priority to 1 now.  I'll run the
original GDS FVT test which discovered this problem over the weekend.  If
it doesn't turn up we can close this defect.

[8/26/94 public]
Cancelled -- SNI will reopen if necessary (email from Jochen suggests
closing it, but there was no fix/confirmation cycle.)

[09/05/94 public]
Reopened. Reproducable with gds FVT.
See 11880: same stack as in this OT.

sec_rgy_site_open_update is called with:

parameter 1: "/.../c=ie/o=digital"
parameter 2: &rgy_ctx (sec_rgy_handle_t rgy_ctx;)
parameter 3: &dce_status (error_status_t dce_status;)

[09/07/94 public]
This is how to reproduce (David Truong and Rob Stenzel were requesting this):

To run the gds_sec tests:

- Install DCE 1.1, TET and the gds functional tests
(last two with dcetest_config) on your machine;

- cd /dcetest/dcelocal/test/tet/functional/directory/gds/tools

- export TET_ROOT=/dcetest/dcelocal/test/tet

- execute: ./local_TET.admin gds_sec

This script configures, activates and initializes gds,
does a dce_login as cell_admin,
adds some objects to the registry (via dcecp) and executes some 
gdscp scripts.

To do all this by hand - not by TET:

- configure a cell with cell name "/C=ie/O=digital"
				(password for cell_admin: -dce-)

- dce_login cell_admin -dce-

(- read
   /dcetest/dcelocal/test/tet/functional/directory/gds/ts/gds_sec/gds_sec_all)

- execute all in the "Startup" function - means 

/dcetest/dcelocal/test/tet/functional/directory/gds/ts/config/gds_sec_start.sh

- do all what is done in the functions tp1, tp2, tp3, tp4
	(actually: what's dumping core could be:

gdscp gds_sec/lib/sec_dsp_b1.tcl
gdscp gds_sec/lib/sec_dsp_b2.tcl)

[9/7/94 public]
Following the above TET instructions, the gds_sec test exited with:

ERROR:
No connection to DSA/DUA-Cache available !

I tried it twice.  Then I tried the "by hand" way, but never succeeded
in getting all the necessary environment variables and scripts set up.

I'm off to work on other bugs; this may have to be an OSF on-site problem.

[09/12/94 public]
More news:

1.) We have changed from calling sec_rgy_site_open_update
	to sec_rgy_site_open_query. This seems to work.

2.) Compiling binding.c and internal_binding.c with "-g"
	and linking it directly to gdscp gave the following stack
	after segmentation violation:

 0 free@libc + 0x00000114 (0x40035148, 0, 0, 0)
 1 cma_lib_free@libdce + 0x00000148 (0x40121288, 0x400e54d8, 0x4011b8f8, 0x7b03ded8)
 2 rca_site_resolve_update (auth_info = 0x7b03ded8, icontext = 0x400e53f0, ocontext = 0x7b038974, status = 0x7b0395a0)    [/project/dce/build/dce1.1/src/security/client/rca/internal_binding.c: 2520]
 3 sec_rgy_site_bind_update (site_name = 0x7b038978, auth_info = 0x7b03ded8, context = 0x7b038974, status = 0x7b0395a0)    [/project/dce/build/dce1.1/src/security/client/rca/binding.c: 201]
 4 sec_rgy_site_open_update (site_name = 0x7b038978, context = 0x7b038974, status = 0x7b0395a0)    [/project/dce/build/dce1.1/src/security/client/rca/binding.c: 420]
 5 gds_sec__conf_target@libdce + 0x00001c4c (0x400b9ae0, 0x7b036818, 0x7b03464c, 0x400b98a8)

Line 2520 in internal_binding.c is:

TOWER_VEC_FREE(rpc_ss_client_free, towerv);

So I guess somebody is wrong with the memory handling of towerv.
But gds uses sec_rgy_site_open_query now - so we don't need this fixed soon.
I just think that there is still a memory problem in rca_site_resolve_update.

[09/14/94 public]
Cancelled because we don't use sec_rgy_site_open_update any more.
If somebody else is running in a similar problem he can reopen this.



CR Number                     : 11261
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : secd
Short Description             : change_master and restore master causes core dump of secd
Reported Date                 : 7/12/94
Found in Baseline             : 1.1
Found Date                    : 7/12/94
Severity                      : B
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/12/94 public]

This may be a obscure set of circumstances, but they were
produced adding the change_master command to the security 
replica_checklist test. 

A cell is configured with a security server and replica.  The master
registry is backed up by hand.

The replica server is made the new master via the sec_admin change_master
command.  New account, principals, and groups are added to the new master.
After verifying that the changes have been made on both registries, the 
change_master command is again invoked to change the master back to the
original master registry.  Again the changes are verified. 

The security server is then shutdown and the original master registry is 
restored.  The security server is restarted with the secd -restore_master
command.

Performing a dce_login on the security server at this point will cause a
core dump of secd.  A quick look at the core showed a procedure 
obsolete_master_task on the stack.

[7/13/94 public]

Adding the register and stack trace info from xdb provided by Peter for the
secd core dump:


r0  00000000 000024b5 800a664b 00000000 r4  00000000 00000000 00000000 00000000
r8  00000000 00000000 00000000 00000000 r12 00000000 00000000 00000000 00000000
r16 403fd2e0 00000000 00000000 7b007948 r20 403fd278 800b40c0 00000000 7fffffff
r24 403fd2e0 403fd278 40006040 4002bdb8 r28 00000000 00000001 403fd3e0 800a667b
    pc = 000024b5.800a6648     priv = 3     psw = jthlnxbCvmrQPDI     sar = 16

trace

 0 _kill@libc + 0x00000008 (hp-ux export stub)
 1 _raise@libc + 0x00000024 (0x7b00e538, 0x4004eb60, 0x7b00d164,0x7b00d160)
 2 _abort@libc + 0x00000078 (0x40033120, 0, 0, 0)
 3 rs_task_fatal + 0x0000002c (0x17122000, 0, 0, 0)
 4 go_away + 0x00000034 (0x17122000, 0x403fcc28, 0x85, 0x402)
 5 rs_util_fatal + 0x000000c4 (0x403fcc28, 0x40006e74, 0x40006e90, 0x274)
 6 obsolete_master_task + 0x00000300 (0x403fc0e0, 0x7af590b8, 0x4004eb60,0x1b)
 7 cma__thread_base@libdce + 0x0000021c (0x4004eb60, 0, 0, 0)
 8 cma__thread_start1@libdce + 0x0000004c (0x4004eb60, 0, 0, 0)
 9 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)
10 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)
11 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)
12 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)
13 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)
14 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)
15 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)
.
.
99 cma__thread_start0@libdce + 0x00000008 (0x4004eb60, 0, 0, 0)

[7/13/94 public]
From the scenario described, this problem can be caused by race condition.
When a secd -restore_master command is issued, all replicas except
those marked with deleted will be re-initialized from the master.
However before a replica was set to be init-rep state, a dce_login
could have bound to it.  Then this replica found that the master had an older
update sequence number than it had.  So it issued an obsolete_mask call to
the master.
I tried this scenario once on my HPUX setup and did not get the same
result.  Can you have this happen all the time ?  If you wait a little
while ( bring secd up with -d -v option for execution information) until 
all init-rep is done, will you have the same problem ?

[7/14/94 public]

I got the following output when re-creating the scenario with 
secd -restore_master -d -v.  It would appear that dce_login is not involved.

secd -restore_master -d -v
SECD Server initializing database
log_replay: Entered
log_replay: The base propagation seqno in the log header is 0.213
SECD server version secd.dce.1.0.2 going into service
SECD server version secd.dce.1.0.2 starting key distribution service
hosts/brandy/self refresh_context: Sleeping for 35399 seconds
-----
    Thu Jul 14 09:40:05 1994: by Unknown caller from Unknown caller
        Server Boot [Key = '']
        dce-rgy refresh_context: Sleeping for 35399 seconds
        SECD Read catalog point: /.../systest/sec-v1 from profile: /.../systest/
cell-profile
        SECD Read catalog point: /.../systest/sec from profile: /.../systest/cel
l-profile
        SECD Exporting bindings to /.../systest/subsys/dce/sec/master
        SECD Exporting bindings to /.../systest/subsys/dce/sec/master
        SECD Exporting bindings to /.../systest/subsys/dce/sec/master
        SECD Exporting bindings to /.../systest/subsys/dce/sec/master
        SECD Exporting bindings to /.../systest/subsys/dce/sec/master
        SECD Exporting bindings to /.../systest/subsys/dce/sec/master
        SECD Exporting bindings to /.../systest/subsys/dce/sec/master
        SECD prop_driver: attempt get rep binding
        SECD prop_driver: attempt get rep binding auth info
        SECD prop_driver: rep binding, get auth handle succeeded
        SECD prop_driver: rep binding succeeded
        SECD prop_driver: attempt to init slave
        SECD prop_driver: init slave status 171220b3
        SECD prop_driver: prop failed  status
         - 0x171220b3 - not from master (dce / sec)
         Registry: Fatal Error - No longer the master
          at line 628 of file /project/dce/build/dce1.1-snap/src/security/server
/rs/rs_master.c
          Abort(coredump)

[7/15/94 public]

Here's what I did to get the core dump:

A three node DCE cell is configured.  Only two are relevant to the test.
The HP_UX security server (also running CDS server), and the OSF/1 DCE client
which is running the security replica.  (The third node is for DTS.)

------------ HP_UX 

dce_login cell_admin -dce-

sec_admin
Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest
sec_admin> lrep 
Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest


subsys/dce/sec/aruba

subsys/dce/sec/master (master)
sec_admin> change_master -to subsys/dce/sec/master
subsys/dce/sec/master is already a master.
sec_admin>quit
bye.

rgy_edit (confirm accounts are there)

exit

------------ OSF/1 client

dce_login cell_admin -dce-

sec_admin (confirm that subsys/dce/sec/master is master)
rgy_edit (confirm accounts are there, same as on HP_UX)

exit

------------HP_UX Server

dce_login cell_admin -dce-

-Prepare for backup of original master registry

sec_admin
Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest
sec_admin> state -maintenance
sec_admin> info

Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest
	  State:    in maintenance - master
		    Last update received at: Thu Jul 14 15:16:06 1994
sec_admin> quit
bye.

exit

-Backup original master registry 

cp -pr /opt/dcelocal/var/security/rgy_data ./backup/original/rgy_data
cp -p /opt/dcelocal/var/security/.mkey ./backup/original/.mkey
cp -p /opt/dcelocal/etc/security/pe_site ./backup/original/pe_site
cp -p /krb5/v5srvtab ./backup/original/v5srvtab
cp -p /krb5/krb.conf ./backup/original/krb.conf
ls -lR ./backup/original

-Change state of master to service, so accounts can be created

dce_login cell_admin -dce-

sec_admin
Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest
sec_admin> state -service
sec_admin> info

Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest
	  State:                   in service - master
		    Last update received at: Thu Jul 14 15:16:06 1994
			      Last update's seqno:     0.216
admin> quit
bye.

rgy_edit -update
Current site is: registry server at /.../systest/subsys/dce/sec/master 
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> add
Add Principal=> Enter name: adminuser1
Enter UNIX number: (auto assign) 
Enter full name: () Admin User #1
Enter object creation quota: (unlimited) 
Add attributes  [y/n]? (n) 
Add Principal=> Enter name: adminuser2
Enter UNIX number: (auto assign) 
Enter full name: () Admin User #2
Enter object creation quota: (unlimited) 
Add attributes  [y/n]? (n) 
Add Principal=> Enter name: 
rgy_edit=> 
rgy_edit=> do g
Domain changed to: group
rgy_edit=> add
Add Group=> Enter name: admingroup
Enter UNIX number: (auto assign) 
Enter full name: () Admingroup
Include group on PROJLIST [y/n]? (y) n
Add attributes  [y/n]? (n) 
Add Group=> Enter name:
rgy_edit=> do a
Domain changed to: account
rgy_edit=> add adminuser1 -g admingroup -o none -pw admin -mp -dce-
rgy_edit=> add adminuser2  -g admingroup -o none -pw admin -mp -dce-
rgy_edit=> quit
bye.

exit

------------OSF/1 Client

-Verify new accounts/principals, group exist on replica server

------------HP_UX Server

-Make replica on OSF/1 the new master

dce_login cell_admin -dce-
Password must be changed!
sec_admin
Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest
sec_admin> lrep
Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest


subsys/dce/sec/aruba

subsys/dce/sec/master (master)
sec_admin> change_master -to subsys/dce/sec/aruba
Do you wish to continue (y[es]) or abort this operation (n[o])? y
sec_admin> lrep
Default replica:  /.../systest/subsys/dce/sec/master
Default cell:     /.../systest


subsys/dce/sec/aruba (master)

subsys/dce/sec/master
sec_admin> quit
bye.
exit

------------OSF/1 replica

-Verify that former replica is now master

sec_admin
Default replica:  /.../systest/subsys/dce/sec/aruba
Default cell:     /.../systest
sec_admin> lrep
Default replica:  /.../systest/subsys/dce/sec/aruba
Default cell:     /.../systest


subsys/dce/sec/aruba (master)

subsys/dce/sec/master
sec_admin> quit
bye.

-Delete an account on new master registry

rgy_edit -update
Current site is: registry server at /.../systest/subsys/dce/sec/aruba 
rgy_edit=> do a   
Domain changed to: account
rgy_edit=> del -p adminuser2 -g admingroup -o none
Please confirm delete of acct "adminuser2 admingroup none" [y/n]? (n) y
rgy_edit=> quit
bye.

exit

------------HP_UX Server

-Verify that account has been deleted in current replica ( rgy_edit )

------------OSF/1 Client

-Change master back to original security server

dce_login cell_admin -dce-
Password must be changed!
root@aruba> sec_admin
Default replica:  /.../systest/subsys/dce/sec/aruba
Default cell:     /.../systest
sec_admin> lrep
Default replica:  /.../systest/subsys/dce/sec/aruba
Default cell:     /.../systest


subsys/dce/sec/aruba (master)

subsys/dce/sec/master
sec_admin> change_master -to subsys/dce/sec/master
Do you wish to continue (y[es]) or abort this operation (n[o])? y
sec_admin> lrep
Default replica:  /.../systest/subsys/dce/sec/aruba
Default cell:     /.../systest


subsys/dce/sec/aruba

subsys/dce/sec/master (master)
sec_admin> quit
bye.
exit

------------HP_UX Server

-Verify that original master is master once again (sec_admin lrep, and/or 
 rgy_edit -update)

-Shutdown master to prepare for restore of original registry (sec_admin stop)
 (verify that secd is not running...)

-Restore original registry

rm -r /opt/dcelocal/var/security/rgy_data
cp -pr ./backup/original/rgy_data /opt/dcelocal/var/security/rgy_data
cp -p ./backup/original/.mkey /opt/dcelocal/var/security/.mkey
cp -p ./backup/original/pe_site /opt/dcelocal/etc/security/pe_site
cp -p ./backup/original/v5srvtab /krb5/v5srvtab
cp -p ./backup/original/krb.conf /krb5/krb.conf
ls -lR /opt/dcelocal/var/security/rgy_data

secd -restore_master -d -v

[7/21/94 public]

This case described here is considered correct behavior.
The system depends on the master seqno increasing as masters
are changed.  Duplicate masters are sorted out by automatically
making the master with the highest master seqno win and by error
exiting when a master detects that its master seqno is less than
another master seqno in the system.  There is a new command line
flag, -master_seqno, can be used to set the master seqno manually
when a master has exited because its master seqno is lower than 
another one in the system.  This flag could be used in the case
you described.  But, in your case, it would be better to use other
methods for getting the master on-line, such as forcing the previous
master to be the master (sec_admin> become -master), re-creating
the replica that you're trying to restore from the forced master,
and then doing a change master to this recreated replica.  You
would lose less data that way.

[7/21/94 public]

My understanding is that there is no master in the cell at the time that 
the secd -restore_master is attempted.

The change master command is invoked twice.  If the original master is on 
node1 and the replica is on node2, the change master command is invoked 
once to change the master to node2, and again to change the master back to
node1.  The sec_admin lrep commands would indicate that there is only
one master in the cell at any given time.  (We will use the become_master 
command in the future.)

Prior to the secd -restore_master command, a sec_admin stop command is used to 
bring down the master on node1.   A restore of the original registry (without
the test accounts/principals/group) is performed, and then restore_master
is attempted.  Some data is lost, the intent is to verify that a different
registry has been restored.

[7/26/94 public]
A replica with a higher master seqno can imply there may be a new
master exist(ed) in the system.  Since you restore an older verion of
the rgy database, its master seqno is older than the replica so
it fits into this scenario.  Secd then exits and set its state to be
duplicate-master.  You can then re-start secd again using the 
-master_seqno option to overwrite the one stored in the system.

[7/28/94 public]

I will change the replica_checklist test to follow the scenario you
suggest.  I'm re-opening this under doc to assure that the behavior of
secd -master_seqno, change_master, etc. is documented.

[8/4/94 public]

In re-running the replica_checklist test, I've found that the 
secd -restore_master now works in the way I would have expected.  No core dump, the original registry is restored sans the test accounts/principals/group.  
(I'm running a build from the middle of last week.)

I have no interest in beating this dead horse, let's just make sure the current
behavior gets documented.



CR Number                     : 11159
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : user ACL entry type not working with user_delegate ACL entry type
Reported Date                 : 7/1/94
Found in Baseline             : 1.1
Found Date                    : 7/1/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/1/94 public]

I ran dlg test with bl-10.4 "lastgoodbuild" on an 486 machine.
The test worked fine.

However, I tried a slight modification on the ACLs, the test failed.
After checking with a few people here, it seems to indicate a bug.

When I run dlg_acl_setup the acl for /.:/myfilesystem/mike looks as follows:

# SEC_ACL for /.:/myfilesystem/mike:
# Default cell = /.../clam_cell.osf.org
mask_obj:-rwx---
user:dlg_test:-rwx---
user_delegate:dlg_svr:-rwx---


And if I run dlg_client it passes:

root@clam {7} ==> ./dlg_client
PASSED: Delegation test


However, if I add the ACL  "user:dlg_svr:-------" :

# SEC_ACL for /.:/myfilesystem/mike:
# Default cell = /.../clam_cell.osf.org
mask_obj:-rwx---
user:dlg_test:-rwx---
user:dlg_svr:-------
user_delegate:dlg_svr:-rwx---

I would think that dlg_client would still pass
since dlg_svr is the delegate. However if I run the test it fails:

root@clam {11} ==> ./dlg_client
FAILED: Delegation test; Error from dlg_test_access

[7/1/94 public]

The delegate does a sec_acl_test_access on a CDS object.
Assigned to HP.

[7/5/94 public]
Yikes, I go away for a day and get back a half day late and my mailbox is
full of messages on who owns a non-problem (I got two of every message to top
it off because they were all sent to me and dce-ot-sec).  That'll teach me to
take a long weekend :-( :-)

This is not a bug.  I've cancelled this CR.
You explicitly denied access to the delegate (removed all permissions), so
the delegate should no longer be able to access the object, so the test to
access the object as a delegate for a user should fail.  ACL entries are
evaluated in order (order listed in the docs for the basic entries, and the
_delegate entries are inserted into that list after their corresponding
normal entries).  A delegate can match either a regular entry or an _delegate
entry.  You normally only give the delegate principal an _delegate entry
because you don't want to give it access on its own, but if you do add a
user entry for it, it will be evaluated, and as with all DCE ACLs, the first
denial off access causes the algorithm to terminate immediately.



CR Number                     : 11084
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Syntax errors.
Reported Date                 : 6/27/94
Found in Baseline             : 1.1
Found Date                    : 6/27/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/27/94 public]

<     case sec_attr_enc_printstring_array: {
<       sec_attr_enc_str_array_t *tosa, *fromsa;
< 
<       fromsa = from->attr_value.tagged_union.string_array;
<       tosa   =   to->attr_value.tagged_union.string_array =
<           (sec_attr_enc_str_array_t *)
<               malloc(sizeof *tosa
	                     ^^^^^^^
<                   + (fromsa->num_strings - 1) * sizeof *tosa->strings);
	                                                ^^^^^^^^^^^^^^^
<       tosa->num_strings = fromsa->num_strings;
<       /* copy each string */
<       for (i = 0; i < tosa->num_strings; i++) {
<           tosa->strings[i] = malloc(strlen((char *)fromsa->strings[i]) + 1);
<           strcpy((char *)tosa->strings[i], (char *)fromsa->strings[i]);
<       }
<       break;
<     }

Note the underlined area's, missing ().

[06/27/94 public]
Did you run into a buggy compiler?  sizeof doesn't require the () unless
the you give it a typename:
	typedef int XXX;
	XXX yyy;
	sizeof yyy === sizeof (XXX)



CR Number                     : 10972
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : Document output of klist
Reported Date                 : 6/15/94
Found in Baseline             : 1.0.2
Found Date                    : 6/15/94
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/15/94 public]
It would be very helpful for documentation to describe the output
of a klist.  Maybe annotate a sample klist output.  Right now you
have to guess a bit.  For instance, what does "Identity Info  Expires"
mean?  Probably not what it says.  A complete discussion would reinforce
the documentation on service tickets.


+

[6/15/94 public]
The output of the klist command was documented in the (now 
defunct) User's Guide.  I believe the klist explanation has been 
moved to the chapter called "Creating and Maintaining Accounts" in 
the security section of the current Administrator's Guide.

[6/29/94 public]

Pam is correct. klist output is shown in "Creating and Maintaining
Accounts" (admin_gd/security/security/4_accts.gpsml). I am cancelling
this CR.

0HISTORY Wed Jun 15 16:11:51 1994 hasbrouck	Created



CR Number                     : 10909
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : server/sec_clientd/roverride.c
Short Description             : parse_override_buffer() contains a benign error
Reported Date                 : 6/9/94
Found in Baseline             : 1.0.3
Found Date                    : 6/9/94
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/9/94 public]

Licensee reported:
"There is an errant statement in the parse_override_buffer() routine
 which increments a dereferenced pointer, rather that the pointer itself.

 As far as we can tell, the error is totally benign. We came across it
 while investigating a bug report."

The 1.1 code has the same problem.

Suggested fix: increment the pointer:

     *** /tmp/ci.2937..roverride.c.2969.1       Fri Jun  3 14:29:00 1994
     --- /tmp/roverride.c.2969.2        Fri Jun  3 14:29:00 1994
     ***************
     *** 182,192 ****
     --- 182,196 ----
                               (tmp_ovrd->overridden | sec_override_pw_shell);
                   }
               } else {
                   separators++;
                   *tmp = '\0';
     + #if defined(hitm)
     +             tmp++;
     + #else
                   *tmp++;
     + #endif
       #ifdef DEBUG
                   if (debug_mode)
                       fprintf(stdout,
                               "%s - DEBUG: found token #%d %s\n", server_name,
                               separators, token);

[06/09/94 public]
A better fix is to just comment out the increment altogether.
Cancelling this -- bug does not appear in dced secval for DCE 1.1.



CR Number                     : 10811
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_acl API
Short Description             : Unauthenticated access to some ACL objects fail.
Reported Date                 : 5/31/94
Found in Baseline             : 1.1b9
Found Date                    : 5/31/94
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/31/94 public]

> acl_edit /.:/hosts/ninja/dts-entity
Warning - binding to ACL's server is unauthenticated
Warning - binding to registry is unauthenticated
ERROR: communications failure (dce / rpc)
Unable to bind to object /.:/hosts/ninja/dts-entity

> acl_edit /.:/sec/principal/jas
Warning - binding to ACL's server is unauthenticated
Warning - binding to registry is unauthenticated
ERROR: not registered in endpoint map (dce / rpc)
Unable to bind to object /.:/sec/principal/jas

It looks like you have an unauthenticated ACL server handle and an
unauthenticated binding handle to the registry, but maybe it's
a problem in sec_acl_lookup().

It seems to work on CDS objects like /.:/hosts, but acl_edit doesn't
work on principals and servers.

> acl_edit /.:/hosts -l
Warning - binding to ACL's server is unauthenticated
Warning - binding to registry is unauthenticated

# SEC_ACL for /.:/hosts:
# Default cell = /.../dcecp_cell.osf.org
unauthenticated:r--t---
user:cell_admin:rwdtcia
user:hosts/ninja/cds-server:rwdtcia
user:hosts/ninja/self:rwdtcia
group:subsys/dce/cds-admin:rwdtcia
group:subsys/dce/cds-server:rwdtcia
any_other:r--t---

[6/24/94 public]
Working in 1.1b10



CR Number                     : 10798
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : dlg_client -nbi returns Error from sec_login_become_delegate
Reported Date                 : 5/27/94
Found in Baseline             : 1.1
Found Date                    : 5/27/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/27/94 public]

I installed DCE from last night's build then
I ran the "dlg_client" test. 
[This is using the code in the AFS cell]  

./dlg_client -c PASS
./dlg_client -la PASS
./dlg_client -ra PASS


./dlg_client -nbi PASSES too

root@clam {38} ==> ./dlg_client -nbi
PASSED: Delegation disabled test

However, dlg_intermediary returns the following while the test runs:
root@clam {5} ==> ./dlg_intermediary -d
Bindings:
ncacn_ip_tcp:130.105.4.68[4658]
ncadg_ip_udp:130.105.4.68[2265]
Listening...
DEBUG: Entered dlg_test_access
Error from sec_login_become_delegate: 17122102

Here's the code in dlg_intermediary:

    dlh = sec_login_become_delegate(caller, lc, sec_id_deleg_type_traced,
                                    NULL, NULL, NULL, NULL,
                                    sec_id_compat_mode_initiator, stp);
    if (BAD_STATUS(stp)) {
        if (debug)
            fprintf(stderr, "Error from sec_login_become_delegate: %x\n",*stp);
        return test;
    }

[5/27/94 public]

Please unlock&cancel this CR. The test is now working. If you specify -d (debug)
to the dlg_intermediary then it's supposed to print out lots more information
on what's happening.  In the case mentioned it was testing what happens
when you try to use delegation, without enabling it (that's what the no-
become-initiator option does) so you should expect it to return the error
that it did.



CR Number                     : 10669
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : /security/gssapi
Short Description             : `build_all' not remade because of errors
Reported Date                 : 5/17/94
Found in Baseline             : 1.1
Found Date                    : 5/17/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : /security/gssapi
Sensitivity                   : public

[5/17/94 public]

[ /security/gssapi at 04:23 (AM) Tuesday ]
`build_all' not remade because of errors.
*** Error code 1

Error cancelled because error was really in previous module



CR Number                     : 10574
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit=> add account
Short Description             : Data integrity error (dce /
sec) is reported when entering an incorrect password in add account.
Reported Date                 : 5/6/94
Found in Baseline             : 1.1
Found Date                    : 5/6/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/6/94 public]

The error message:

?(rgy_edit) Unable to add "pope" - Data integrity error (dce / sec)

is printed when the principal password is incorrect. A better error
message indicating a password mismatch wouldl be preferred.

Example:

rgy_edit=> do acc
Domain changed to: account
rgy_edit=> add pope -g none -o none -pw ccc -mp pen
?(rgy_edit) Unable to add "pope" - Data integrity error (dce / sec)

rgy_edit=>rgy_edit=> add pope -g none -o none -pw ccc -mp -dce-
rgy_edit=>



CR Number                     : 10545
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : remove assumption in use of time zones
Reported Date                 : 5/5/94
Found in Baseline             : 1.0.2
Found Date                    : 5/5/94
Severity                      : C
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : ek_util.c
Sensitivity                   : public

[3/26/96]
cancel - addressed in 1.2.2.

[5/5/94 public]
 If I set an account to expire at 94/12/31, and I make this setting
during Daylight Savings Time, when I (immediately) use the 'view'
command to review the change to the account, the actual date is printed
as "1993/12/30.23:00". Presumably, the hour-difference is due to the
time in the future being calculated, stored, or printed without regard
for changes in the local timezone (EDT to EST in this case) over the
interval.
.
Example:
.
rgy_edit=> change -p travis -g transarc -o none -x 94/12/31
rgy_edit=> v travis -f
travis [transarc none]:*:4728:11:Ward C. Travis:/afs/transarc.com/usr/travis:/bin/csh:
  created by: /.../k2.dce.transarc.com/cell_admin  1994/05/04.17:37
  changed by: /.../k2.dce.transarc.com/cell_admin  1994/05/04.17:39
  password is: valid, was last changed: 1994/05/04.17:37
  Account expiration date: 1994/12/30.23:00
  Account MAY be a server principal
  Account MAY be a client principal
  Account is: valid
  Account CAN NOT get post-dated certificates
  Account CAN get forwardable certificates
.
A diff is attached that corrects this. Example, after diff is applied:
.
rgy_edit=> v travis -f
travis [transarc none]:*:4728:11:Ward C. Travis:/afs/transarc.com/usr/travis:/bin/csh:
  created by: /.../k2.dce.transarc.com/cell_admin  1994/05/04.17:37
  changed by: /.../k2.dce.transarc.com/cell_admin  1994/05/04.17:40
  password is: valid, was last changed: 1994/05/04.17:37
  Account expiration date: 1994/12/30.23:00
  Account MAY be a server principal
  Account MAY be a client principal
  Account is: valid
  Account CAN NOT get post-dated certificates
  Account CAN get forwardable certificates
  Certificates to this service account MAY be issued via TGT authentication
  Account CAN get renewable certificates
  Account CAN NOT get proxiable certificates
  Account CAN NOT have duplicate session keys
  Good since date: 1994/05/04.17:37
  Max certificate lifetime: default-policy
  Max renewable lifetime: default-policy
rgy_edit=> login cell_admin
Password:
rgy_edit=> change -p travis -g transarc -o none -x 1994/12/31
rgy_edit=> v travis -f
travis [transarc none]:*:4728:11:Ward C. Travis:/afs/transarc.com/usr/travis:/bin/csh:
  created by: /.../k2.dce.transarc.com/cell_admin  1994/05/04.17:37
  changed by: /.../k2.dce.transarc.com/cell_admin  1994/05/05.10:50
  password is: valid, was last changed: 1994/05/04.17:37
  Account expiration date: 1994/12/31.00:00
  Account MAY be a server principal
  Account MAY be a client principal
  Account is: valid
  Account CAN NOT get post-dated certificates
  Account CAN get forwardable certificates
  Certificates to this service account MAY be issued via TGT authentication
  Account CAN get renewable certificates
  Account CAN NOT get proxiable certificates
  Account CAN NOT have duplicate session keys
  Good since date: 1994/05/04.17:37
  Max certificate lifetime: default-policy
  Max renewable lifetime: default-policy
rgy_edit=> quit
--------------------------------------------
-------------------------------------------- Diff
--------------------------------------------
-------------------------------------------------------------------------------
Changes to security/client/admin/rgy_edit/ek_util.c in open delta travis-tr9207-rgy_edit-bad-timezone-assumption:
===================================================================
RCS file: /afs/tr/project/dce/dev/rcs/security/client/admin/rgy_edit/RCS/ek_util.c,v
retrieving revision 10.1
diff -cbt -r10.1 security/client/admin/rgy_edit/ek_util.c
*** 10.1	1994/04/13 00:00:00
--- security/client/admin/rgy_edit/ek_util.c	1994/05/04 22:13:33
***************
*** 1,3 ****
--- 1,14 ----
+ /*-
+  * @TRANSARC_COPYRIGHT@
+  *
+  * $TALog$
+  * $EndTALog$
+  */
+ 
+ #if !defined(_NOIDENT) && !defined(lint)
+ static char *TARCSId = "$Id: c010545,v 1.6 96/03/19 15:57:38 root Exp $";
+ #endif
+ 
  /*
   * @OSF_COPYRIGHT@
   * COPYRIGHT NOTICE
***************
*** 673,679 ****
      unsigned long   days_since_1970, secs_since_1970;
      sec_timeval_t       clock;
      struct timeval  tvp;   /* ditto */
!     struct tm       tm, *ptm;
      int             year, month, day, hour, min;
      time_t          tloc;
      error_status_t  st;
--- 684,690 ----
      unsigned long   days_since_1970, secs_since_1970;
      sec_timeval_t       clock;
      struct timeval  tvp;   /* ditto */
!     struct tm       tm;
      int             year, month, day, hour, min;
      time_t          tloc;
      error_status_t  st;
***************
*** 766,775 ****
      tm.tm_sec = 0;
      tm.tm_wday = 0;
      tm.tm_yday = 0;
!     time (&tloc);
!     /* !!! assume that the time of expiration has the same timezone as us */
!     ptm = localtime(&tloc);
!     tm.tm_isdst = ptm->tm_isdst;
      *clockh = mktime (&tm);
      
      return st;
--- 777,783 ----
      tm.tm_sec = 0;
      tm.tm_wday = 0;
      tm.tm_yday = 0;
!     tm.tm_isdst = -1;           /* have the library not assume same offset */
      *clockh = mktime (&tm);
      
      return st;
-------------------------------------------------------------------------------

[5/5/94 public]
 The code reviewer made a worthwhile suggestion, resulting in a better
diff. The improvement is to replace the assignment:
.
      *clockh = mktime (&tm);
.
    .. with the lines:
.
    if (tloc == -1) {
        SET_STATUS(&st, ek_err_bad_date);
        return st;
    }
    *clockh = tloc;

[8/23/94]
Lowered priority as it is part of rgy_edit.
It does not happen in dcecp.



CR Number                     : 10543
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : security/lrb5/lib/os/an_to_ln.c
Short Description             : an_to_ln.c  memcmp call last
arg spelled wrong
Reported Date                 : 5/5/94
Found in Baseline             : 1.0.3
Found Date                    : 5/5/94
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/5/94 public]


The problem was reported against 1.0.3, but the current 1.1 code base 
has the same problem.

For 1.0.3 code, Line 170 of an_to_ln.c has memcmp call last arg spelled
wrong :

(memcmp(def_realm, krb5_princ_realm(aname)->data, realm_legth))) {
                                                  ^^^^^^^^^^^
It should be realm_length.

[8/23/94]

The file an_to_ln.c belongs to the kerberos distribution but is currently
not used by DCE.  See line  of /src/security/krb5/lib/krb5/Makefile
> DELETED_OFILES=an_to_ln.o kuserok.o

Will cancel tomorrow if nobody objects

[8/23/94 public]
It's a simple one character change that is currently obviously wrong.  The
file is not built so there is NO risk.  Why not just do it instead of
thinking about it?

[08/24/94 public]
Because it introduces one more thing someone has to look at and
evaluate when they upgrade the KRB code.  Max is right.



CR Number                     : 10489
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit doesn't parse the flags
in a change account command properly.
Reported Date                 : 4/29/94
Found in Baseline             : 1.0.3
Found Date                    : 4/29/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : .../src/security/client/admin/rgy_edit/tty_acct.c
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[4/29/94 public]

 See the example below. The first attempt to change the account's group
fails. The second attempt succedes. The customer has gone through the code
and determined that the problem lies in the code that parses the command
line. The inclusion of the flags "-pv -av" in the first line causes the
parsing failure.


rgy_edit=> do account
Domain changed to: account
rgy_edit=> view testprinc
testprinc [nogroup1 none]:*:11038:5111:not all that real:/::
rgy_edit=> change -p  testprinc -g nogroup1 -o none -ng nogroup2  -pv  -av
rgy_edit=> view testprinc
testprinc [nogroup1 none]:*:11038:5111:not all that real:/::
rgy_edit=>  change -p  testprinc -g nogroup1 -o none -ng nogroup2
rgy_edit=>  view testprinc
testprinc [nogroup2 none]:*:11038:5112:not all that real:/::

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 10348
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : Registry code points not working
Reported Date                 : 4/13/94
Found in Baseline             : 1.1
Found Date                    : 4/13/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/13/94 public]


This may be a placeholder for code that hasn't been dropped
yet but I figured I would put in a CR anyway.

I just tried the registry audit code points against bl-6
and when I tried adding accounts and then logging in against them
nothing was added to the audit trail:


root@clam {3} ==> ps -aef | grep auditd
root      8183     1  0.0 17:49:30 ??           0:01.23 auditd -a
root      8204  8196  0.0 17:53:21 pts/15       0:00.04 grep auditd
root@clam {4} ==> rgy_edit
Current site is: registry server at /.../clam_cell.osf.org/subsys/dce/sec/master 
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> add fubar
rgy_edit=> do a
Domain changed to: account
rgy_edit=> add fubar -g none -o none -mp -dce- -pw fubar -ena c -ena s
rgy_edit=> quit
bye.
root@clam {5} ==> dce_login fubar fubar
You have mail.
root@clam {1} ==> exit
root@clam {2} ==> root@clam {6} ==> dce_login cell_admin -dce-
Password must be changed!
You have mail.
root@clam {1} ==> auditcp
auditcp> audtrail show
Enter trail file name: /opt/dcelocal/var/audit/adm/central_trail
Enter trail dump file name (enter for screen dump):
auditcp>

[5/3/94 public]
According to Sue, this was working and was just pilot error at the time.
I'm cancelling this one.  (yes, it's true that PGO auditing isn't in yet, but
that'll be opened as an enhancement request to drop new functionality, and is
not part of the above reported non-problem anyway).



CR Number                     : 10339
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : client/admin/rgy_edit/eif_site.c
Short Description             : String comparison in eif_check_site() is opposite to what was intended.
Reported Date                 : 4/13/94
Found in Baseline             : 1.0.2
Found Date                    : 4/13/94
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : sec/client/admin/rgy_edit/eif_site.c
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[4/13/94 public]

 In client/admin/rgy_edit/eif_site.c, in the eif_site_check() routine,
 the decision to print the site info. is not computed correctly.
 
 This is from MJ JS10B019.
 
Related-file::Added 931122 by rusman::
/build/hiosfm/RCS/src/dce/src/security/cl
ient/admin/rgy_edit/./eif_site.c,v 7.2
 /build/hiosfm/RCS/src/dce/src/security/client/admin/rgy_edit/./eif_site.c,v 7.2
 rusman 1993/11/22 19:16:31 +6 -2
 Reason:  OSDqa06684 missing a ! in if condition
 correct check for printing site info.
 
     *** /tmp/ci.4507..eif_site.c.4534.1        Mon Nov 22 14:16:32 1993
     --- /tmp/eif_site.c.4534.2 Mon Nov 22 14:16:32 1993
     ***************
     *** 361,371 ****
     --- 361,375 ----
        }
           }
         
               /* if we were already bound, don't print new site info
unless it'
s
           really different than the one we were previously bound to */
     + #if defined(hitm)
     +     if ( (bound)  && (!strcmp((char*)prev_site, (char *)new_site)) )
     + #else
           if ( (bound)  && (strcmp((char*)prev_site, (char *)new_site)) )
     + #endif
        print_site = false;
           
           if (print_site) {
        if (bound)
            eif_print_site(eif_site_changed, new_site, new_access);



CR Number                     : 10296
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : sec_login_release_context calls purge
Reported Date                 : 4/5/94
Found in Baseline             : 1.0.3
Found Date                    : 4/5/94
Severity                      : D
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/5/94 public]
The man page for sec_login_release_context() needs to mention that this
routine keeps a ref count and when it hits zero, the equivalent of
sec_login_purge_context() is done.

  From: burati@apollo.hp.com
  When you call rpc_binding_set_auth_info() with a login context, it bumps
  the refcnt If you call it 5 times for different binding handles, it will be
  at 6 (1 for the initial context setup).  If the client then does a
  release_context, it'll be at 5.  The runtime will call release when it's
  done with it for a particular binding handle and when the last of those is
  released, the context is no longer referenced by anybody, so it can be
  purged.

[4/5/94 public]

Assigned this CR to Pam Millett (HP security writer).

[4/5/94 public]
cancelled.

From: rps@apollo.hp.com
No, he says "it can be purged", not "release causes a purge".
_release_context() reference-counts the handle, but when it hits
zero the creds don't get removed from the system.

From: burati@apollo.hp.com
Actually, Rob is right.  I was thinking one thing and typing another, so my
reply probably implied that it was doing a real sec_login_purge_context().
What really happens is that when you release it, you decrement the refcount
(but don't even free any memory).  When the refcount hit's 0, all memory
for that 'in memory' context should be freed because nothing else in the
process can be using it anymore.  BUT, that doesn't mean another process
isn't using it, so it doesn't 'purge' the file based cache for that login
context.



CR Number                     : 10209
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit allows "substituting" an ACL with duplicate entries.
Reported Date                 : 3/22/94
Found in Baseline             : 1.1
Found Date                    : 3/22/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[3/22/94 public]

Try this:

> acl_edit /.:/jas1
sec_acl_edit> l

# SEC_ACL for /.:/jas1:
# Default cell = /.../ice_cell.osf.org
unauthenticated:r--t---
user:cell_admin:rwdtcia
user:hosts/ice/cds-server:rwdtcia
group:subsys/dce/cds-admin:rwdtcia
group:subsys/dce/cds-server:rwdtcia
any_other:r--t---
sec_acl_edit> sub any_other:rct any_other:rwdtcia
sec_acl_edit> co
sec_acl_edit> l

# SEC_ACL for /.:/jas1:
# Default cell = /.../ice_cell.osf.org
any_other:r--tc--
any_other:rwdtcia


Note that the last entry is used for determining access rights.

[7/14/94 public]
Moved to dcecp component for Howard to look at prior to setting status
to defer to 1.2  (dcecp now performs most functions of the control programs)

[7/18/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to acl_edit and should not be changed back to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 10089
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_clientd should check for instances of itself before starting
Reported Date                 : 3/8/94
Found in Baseline             : 1.0.3
Found Date                    : 3/8/94
Severity                      : D
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/8/94 public]
As is, you can start multiple sec_clientd's on a machine.

[03/08/94 public]
For 1.1 sec_clientd will be part of the dced executable so this
becomes a "can't happen."  I think this can be cancelled.

[03/08/94 public]
Happily cancelled :-).



CR Number                     : 10049
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : acl_edit test fails
Reported Date                 : 3/1/94
Found in Baseline             : 1.1
Found Date                    : 3/1/94
Severity                      : C
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : acl_edit_setup.sh acl_edit.sh
Sensitivity                   : public

[3/1/94 public]
I have run the acl_edit tests before and they have passed. Now the
test is failing for test #10,#11, and #12 in acl_edit.tsh. The functions
in acl_edit.sh do_n, do_p, and do_c appear to be all wrong.

Problem #1: An acl_edit is being performed on the variable
	$MASK_TEST_OBJ is set to "/.:/myfilesystem/greg". This object
	does not exist at any time before, during, or after the test.
	If we are to test acls on security objects, these objects are
	created using rgy_edit and should be found in
	"/.:/subsys/dce/sec/master/[principal|group|org]/xxx".
	Am I missing something?

Problem #2: The test is looking for the acl on mask_obj and assumes that
	exists. The function check_status is then called which causes
	the shell script to exit because there is no "mask_obj" acl for
	the object.

Problem #3: It appears that the functions do_p, do_c, and do_n are
	wrong. I don't know because I haven't been able to figure out
	what the test is really supposed to be doing.

I will be willing to fix the test but I need to know what is being
tested.

[5/5/94 public]
The above objects that the test is looking for are managed by the 'acl_server'
currently built in src/security/client/admin/acl_edit/svr_example and soon
to be moved to the test directory.  You must have this running first for the
test to work.  Cancelled this CR.



CR Number                     : 9982
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit exits with a FAULT
when the -ul flag is used on a cell command
Reported Date                 : 2/18/94
Found in Baseline             : 1.0.3
Found Date                    : 2/18/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[2/18/94 public]
Trying a ``cell'' command with a -ul flag causes rgy_edit to exit with

FAULT 0x17083003 at line 8439 of file
../../../../../../src/security/client/admin/rgy_edit/ek_db.c

None of the other documented flags seems to cause problems.

The problem seems to be caused by a bad initialization of the operations
table (?). The symptom is that the following code in ek_do_op() in
security/client/admin/rgy_edit/ek_db.c:

    for (cur_field = 0; cur_field < num_fields; cur_field++) {

        form_field_attributes(op->op_form, cur_field, &attributes);

        form_field_status(op->op_form, cur_field, &field_status);

        if ((attributes & attribute_required_mask) &&
            (field_status != form_field_valid_data))
            SET_STATUS(&st, ek_required_field);
    }

sets the status to ek_required_field when cur_field = 1, because the
field_status was set to form_field_no_data in the form_field_status()
call.

Related CRs are 7823, 729, 688 and 633.

[7/28/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.



CR Number                     : 9963
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit -update -s
Short Description             : rgy_edit -update ignored when using -s
Reported Date                 : 2/16/94
Found in Baseline             : 1.1
Found Date                    : 2/16/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[2/16/94 public]

The -update option on rgy_edit is ignored when used in conjunction with the
-s option:

root@west> rgy_edit -update -s /.../west_cell.qadce.osf.org
Current site is: registry server at /.../west_cell.qadce.osf.org/subsys/dce/sec/tahiti   (read-only)

A workaround is to use the fully qualified name of the registry when using the
-s option and to omit -update:

root@west> rgy_edit -s /.../west_cell.qadce.osf.org/subsys/dce/sec/master
Current site is: registry server at /.../west_cell.qadce.osf.org/subsys/dce/sec/master

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 9852
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit kill cmd for groups & orgs
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[1/28/94 public]

BACKGROUND:
The acl_edit kill command removes all sec_acl_entries other than the
USER_OBJ entry. This is ok for principals but what about groups and
organizations.  Currently, in acl_edit the following msg is displayed
"ERROR: bad acl syntax" if a kill cmd is issued on a group or 
organization since all the entries are removed.

NEW FUNCTIONALITY?:
For principals, we can remove all sec_acl_entries other than the
USER_OBJ entry. For organizations, we can remove all sec_acl_entries 
For groups, we can remove all sec_acl_entries other than the
GROUP_OBJ entry. For organizations, we can remove all sec_acl_entries 
other than the OTHER_OBJ entry. 
Even though we don't know if the ACL object is a principal, group, or 
organization, acl_edit can check if the user_obj exists, save it, 
otherwise if the group_obj exists save it and or if the other_obj exists 
save it.

What do you think? Maybe for dcecp this would be a good thing.

[1/31/94 public]
This is a RGY specific problem and acl_edit is supposed to be a generic
tool across all uses of DCE ACLs.  It currently is doing what the POSIX
draft says a tool should do wrt the 'kill' command.  I don't think it should
change, but since it's just an enhancement request anyway, I'll leave it
open for more opinions (and added Joe and Walt for their POSIX opinions).

[2/3/93 public]
The following is Joe's response.  Since we both agree it works as spec'd
and shouldn't change, I've cancelled this CR.

"Acl_edit is behaving correctly.  The semantics of the kill operation is to
remove all entries but the user_obj entry. This is legal for some acl managers
but not for others (but acl_edit doesn't know this). The correct response from
the manager is to yield a bad syntax error as it is currently doing. I do not
believe that this functionality should be changed (Kill is sort of a unuseful
operation except for file systems in general)"
- joe



CR Number                     : 9847
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : acl_edit cache not updated for substitute & assign file cmds
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[1/28/94 public]


In module src/security/client/admin/acl_edit/deif.c routines 
deif_do_substitute() & deif_sec_acl_from_file():

If the ACL doesn't exist, these routines allocate storage
for the default cell information and store it in the global
structure sec_acl_p. However, the new data is not stored in
the cache for use by other routines:
	def_cell_name & def_cell_id

If a list operation is invoked to view the default cell and entries, there
will be no default cell info listed. It uses def_cell_name.

[5/4/94 public]
You're right, Mike! Here's your explanation:

When it binds to an ACL (deif_bind()), it calls deif_get_cache_data().
That routine sets up my_cell_id and my_cell_name.  If there is no ACL, then
def_cell_name and def_cell_id are also set to my_cell_name and my_cell_id.
When substitute occurs without an existing acl, it allocates space for the
cell name and id in sec_acl_p and copies them from my_cell*.
It doesn't need to update the cached def_cell* data because that's already
been initialized to the same thing.



CR Number                     : 9846
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit delete cmd for specifying mask_obj entry
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[1/28/94 public]


In module src/security/client/admin/acl_edit/tty.c routine
tty_process_args():

For an acl_edit delete command if the mask_obj entry is explicitly 
specified as well as some ACl entries in the file group class, then do 
not re-calculate the mask. This is done for modify when adding and 
changing entries.

If the user intends to delete the mask_obj entry he/she doesn't want to see
it created again when the POSIX 1003.6 steps 3,4,5 and 7,8 are followed.

[7/14/94 public]
Moved to dcecp component for Howard to look at prior to setting status
to defer to 1.2  (dcecp now performs most functions of the control programs)

[7/14/94 public]
Moved back to acl_edit.  Julie found this bug in acl_edit when she was
implementing similar functionality in dcecp.  The bug is not in dcecp, it's
in acl_edit, so this should remain assigned to acl_edit.  Yes, dcecp
functionality is what we want users to use, but if we're shipping both and
dcecp works correctly while acl_edit does not, then we need to fix acl_edit
(in 1.1, please do not defer this to 1.2 unless we can't get it fixed before
the final freeze).

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 9844
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : acl_edit kill cmd removes principals
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[1/28/94 public]

The following acl_edit steps were taken. I created a principal, named b,
and proceded to remove all its ACL entries except the user_obj entry.
Once the acl_edit kill operation was committed, the ACL manager deletes 
the principal and account from the registry even though there is a 1 ACL 
entry on it, user_obj.

rgy_edit=> a
Add Principal=> Enter name: b
Enter UNIX number: (auto assign) 200
Enter full name: () fake
Enter object creation quota: (unlimited) 20
Add Principal=> Enter name:
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/absolut_cell                          101
hosts/absolut/self                           102
hosts/absolut/cds-server                     103
hosts/absolut/gda                            104
hosts/drkstr/self                            107
salamone                                     109
melman                                       110
b                                            200
rgy_edit=> exit
bye.
root@absolut /$ acl_edit /.:/sec/principal/b
sec_acl_edit> l

# SEC_ACL for /.:/sec/principal/b:
# Default cell = /.../absolut_cell
unauthenticated:r-------g
user_obj:r---f--ug
user:cell_admin:rcDnfmaug
group:acct-admin:rcDnfmaug
other_obj:r-------g
any_other:r--------
sec_acl_edit> k
sec_acl_edit> l
# SEC_ACL for /.:/sec/principal/b:
# Default cell = /.../absolut_cell
user_obj:r---f--ug
sec_acl_edit> co
ERROR: at least one control permission bit required on acl (dce / sec)
sec_acl_edit> m user_obj:rcDnfmaug
sec_acl_edit> l

# SEC_ACL for /.:/sec/principal/b:
# Default cell = /.../absolut_cell
user_obj:rcDnfmaug
sec_acl_edit> co
sec_acl_edit> exit
ERROR: acl object not found (dce / sec)
root@absolut /$ rgy_edit
Current site is: registry server at /.../absolut_cell/subsys/dce/sec/master
rgy_edit=> do prin
Domain changed to: principal
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/absolut_cell                          101
hosts/absolut/self                           102
hosts/absolut/cds-server                     103
hosts/absolut/gda                            104
hosts/drkstr/self                            107
salamone                                     109
melman                                       110
rgy_edit=> v -u 200
?(rgy_edit) Cannot retrieve any matching entries for 200 - No more matching entr
ies (Registry Edit Kernel) (dce / sad)
rgy_edit=>

[1/28/94 public]
Nope.  You killed all entries except the user_obj, so you are no longer able
to see the entry, which is why it looks to you like it doesn't exist.  The
user_obj (the principal itself) can still see itself, so if you logged into
'b', then you'd be able to see 'b'.  It is physically impossible for acl_edit
to remove principals from the registry (it doesn't make any call that could
do that).  I've cancelled this CR.



CR Number                     : 9843
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit "newly" granted permissions determined incorrectly
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[1/28/94 public]

In module src/security/client/admin/acl_edit/deif.c routine 
deif_do_modify(), all requests to add new entries to the ACL and 
all requests to increase the permissions of existing entries are 
used to determine the "newly" granted permissions. acl_edit follows
the POSIX 1003.6 Draft 12 - Section 3.7.2.7 STEP 6.

However, the problem is that the granted permissions should be 
calculated from the file group class entries only. acl_edit determines
the granted permissions from all entries.

[7/14/94 public]
Moved to dcecp component for Howard to look at prior to setting status
to defer to 1.2  (dcecp now performs most functions of the control programs)

[7/14/94 public]
Moved back to acl_edit.  Julie found this bug in acl_edit when she was
implementing similar functionality in dcecp.  The bug is not in dcecp, it's
in acl_edit, so this should remain assigned to acl_edit.  Yes, dcecp
functionality is what we want users to use, but if we're shipping both and
dcecp works correctly while acl_edit does not, then we need to fix acl_edit
(in 1.1, please do not defer this to 1.2 unless we can't get it fixed before
the final freeze). (Note: Howard is already on the CC list, so he can look
at it even though it's assigned to 'sec').

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 9842
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit mask calculation for substitute cmd incorrect.
Reported Date                 : 1/28/94
Found in Baseline             : 1.1
Found Date                    : 1/28/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed by DCE1.2.2.

[1/28/94 public]

BACKGROUND:
    In acl_edit "substitute" or (-i/-I), the POSIX 1003.6 steps 3, 4, 5, 7,
    and 8 for the mask calculation is followed even if the "mask_obj"
    entry was specified or not.
    There is no -n or -c switch on the substitute command. Note that if
    the ACL manager requests no POSIX "mask_obj" semantics, then no mask
    calculation will occur (-n).

PROBLEM:
    In POSIX 1003.6 page 66 line 1292 states that if replace (-i/-I) and
    the new entries do not specify a "mask_obj" entry, then the mask shall be
    set as described by -c.

SOLUTION:
    When the "substitute" command is invoked in acl_edit, a check
    must be made to see if a "mask_obj" entry was explicitly
    specified. If so, set the mask calculation type to
    CALC_MASK_OBJ_AFTER (-c).  If not, set the mask calculation type
    to NO_MASK_OBJ_CALC (-n) so that no mask calculation occurs.

    Modifications must be made in module tty.c, routine tty_process_args()
    and tty_do_substitute().
    And possibly in module deif.c, routine deif_do_substitute().
    Maybe assign file functions too.

[7/14/94 public]
Moved to dcecp component for Howard to look at prior to setting status
to defer to 1.2  (dcecp now performs most functions of the control programs)

[7/14/94 public]
Moved back to acl_edit.  Julie found this bug in acl_edit when she was
implementing similar functionality in dcecp.  The bug is not in dcecp, it's
in acl_edit, so this should remain assigned to acl_edit.  Yes, dcecp
functionality is what we want users to use, but if we're shipping both and
dcecp works correctly while acl_edit does not, then we need to fix acl_edit
(in 1.1, please do not defer this to 1.2 unless we can't get it fixed before
the final freeze). (Note: Howard is already on the CC list, so he can look at
it even though it's assigned to sec/acl_edit).

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 9719
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : bad code example for sec_login_get_expiration
Reported Date                 : 1/11/94
Found in Baseline             : 1.0.2
Found Date                    : 1/11/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[1/11/94 public]

In the 1.0.2 App. Dev. Ref page on sec_login_get_expiration, there
is an example code fragment where the status parameter from 
sec_login_refresh_identity is tested against a constant identifier
called "sec_login_s_refresh_ident_change".  I looked around and I don't
think DCE defines this particular error code, and I don't think
the intent here was pseudo code.

Another problem with the example is that it suggests that 
sec_login_refresh_identity would likely fail because the "identity has
changed".  I might be wrong (I'm new to DCE) but I think the more 
likely reason is that the "max renewable lifetime" has expired and the
login context is simply invalid.

[1/12/94 public]
Just fixed a couple of errors in the defect(ie: book where
example occurs, and short description).  By the way, I can't find any
mention of sec_login_s_ident_change in the dce 1.1 tree.

[1/18/94 public]

Assigned this CR to Pam Millett (HP security writer).

[6/17/94 public]
The reference to sec_login_s_refresh_ident_change was 
changed to sec_login_s_refresh_ident_bad by CR8173 in 
Release 1.0.3.

Note also that max renewable lifetime is not used in 
the DCE and thus cannot be a cause of failure.

I've changed the status of this CR to cancel.



CR Number                     : 9637
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : users_gd
Short Description             : bad references
Reported Date                 : 12/20/93
Found in Baseline             : 1.0.2
Found Date                    : 12/20/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[12/20/93 public]
In the Users's guide section 4.5.2 "Using the assign Subcommand" and in
section 4.5.3 "Using the substitute subcommand" there are references to
section 4.7.1 which are incorrect.  I don't know where they are supposed to
refer to, but section 4.7.1 is "The mask_obj Mask" and that clearly isn't
correct.

[12/23/93 public]

The "substitute" command has a dcecp equivalent (acl replace).
So, following the current DCE 1.1 plan, section 4.5.3 will
be eliminated, and the DCE Administration Guide will describe
how to use "acl replace".

The "assign" subcommand does not have a dcecp equivalent.
The current plan is to retain the information about control
program functions that do not have dcecp equivalents. In
addition, this information will be moving to the DCE
Administration Guide, since the plan for DCE 1.1 is
to eliminate the User's Guide and Reference.

Consequently, fixing the pointer to point to the
right example (which I *think* should point to
the "opus" example in Section 4.5.1) is not the
fix to make. The correct fix is to repeat the
"opus" example in section 4.5.2 so that the
reference to it doesn't get lost in all the file moves.

Because I'm the book owner for the User's Guide and
Reference and will be the one moving these files
around, I will assign this bug to myself and confer
with Pam Millett at HP to find out which file is
intended to be described in Section 4.5.2.

Affected file is /users_gdref/security/5_auth.gpsml

[12/23/93 public]
Actually the assign command in acl_edit can be done with something like:

  acl replace /.:/foo [cat <filename>]

RFC 42.1 will point this out.

[12/23/93 public]

Aha. In that case, we can eliminate Section 4.5.2, "Using
the assign subcommand" and I can cancel this CR, since
both Sections 4.5.2 and 4.5.3 will be "going away".



CR Number                     : 9526
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit policy sprintf incorrect
Reported Date                 : 11/22/93
Found in Baseline             : 1.0.3
Found Date                    : 11/22/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[11/22/93 public]
In rgy_edit module ek_util.c, routine integer32_to_string
the statement sprintf(int_str, "%d%", int32) appears to have an
extra % on the end.  I set the priority to low since it worked 
on pc486, but on our system it results in a null buffer. I believe
the format statement is invalid.

janet

[11/22/93 public]

according to my reading of the ANSI C standard, a "%\0" sequence is an
"invalid conversion specification", which means that its behavior is
"undefined".

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 9511
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : read_only property obsolete but still displayed/changeable.
Reported Date                 : 11/18/93
Found in Baseline             : 1.0.3
Found Date                    : 11/18/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[11/18/93 public]
I changes the properties to make the registry a read-only registry
and the added a principal. It seems that this should fail. Here is
the output from what I did:

2154 ->rgy_edit
Current site is: registry server at /.../agony.cell/subsys/dce/sec/master 
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> pr
  Properties:
    Properties for Registry at:               /.../agony.cell
    Registry is NOT read-only
    Certificates to this server may be generated at any site.
    Encrypted passwords are hidden
    Unix IDs ARE embedded in PGO UUIDs
    Low UID for principal creation:           2598
    Low UID for group creation:               200
    Low UID for org creation:                 100
    Maximum possible UID:                     32767
    Minimum certificate lifetime              5m
    Default certificate lifetime              10h
Do you wish to make changes [y/n]? (n) y
Stamp registry read-only [y/n]? (n) y
Should encrypted passwords be hidden [y/n]? (y) 
Lower bound on principal unix id for automatic UID assignment: (2598) 
Lower bound on group     unix id for automatic UID assignment: (200) 
Lower bound on org       unix id for automatic UID assignment: (100) 
Maximum allowable unix id: (32767) 
Minimum certificate lifetime (minutes): (5m) 
Default certificate lifetime (hours): (10h) 
rgy_edit=> add j
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/agony.cell                           2598
hosts/agony/self                            2599
hosts/agony/cds-server                      2600
hosts/agony/gda                             2601
hosts/yale/self                             2602
hosts/yale/cds-server                       2603
hosts/yale/gda                              2604
hosts/agony/dfs-server                      2605
j                                           2606

[11/18/93 public]
I've checked with those who did the replication work and my hunch was
correct.  This property was obsoleted as of 1.0.2 because: it does only a
subset of what the sec_admin 'state -maintenance|-service' functionality
gives you, and isn't really useful since it doesn't make sure the db is
written to disk for backup purposes...  Unfortunately, it wasn't removed
from the docs (our doc writer has opened a separate CR to address that) and
it still displayed and changeable via rgy_edit.  This CR is now against
rgy_edit (to get rid of both display and change of that prop field)...

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 9406
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : the -po subcommand does 
not work when displaying groups.
Reported Date                 : 11/8/93
Found in Baseline             : 1.0.3
Found Date                    : 11/8/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[11/8/93 public]

The -po subcommand should work with groups and organizations as 
described in the Admin Guide pg. 22-3 (Section 22.2). The example
in this section depicts a group. 

In practice, I get the following:

rgy_edit=> do group
Domain changed to: group
...
< Some standard accounts deleted >
...
subsys/dce/cds-server                        125
subsys/dce/dts-servers                       126
Systest                                      127
rgy_edit=> v Systest
Systest                                      127
rgy_edit=> v Systest -f
Systest                                      127
  Full name:  dce1.0.3 systest
  Uuid:       0000007f-dc78-21cc-b201-080009320e26
  Primary:  pr   Reserved:   --
  Project List:l   
rgy_edit=> v Systest -m
Systest                                      127
  1 members
    marta
rgy_edit=> v Systest -po
?(rgy_edit) "-po" - Option not valid in group domain
rgy_edit=> 

Is the code does not support this subcommand then this CR 
should be changed to Doc.

NOTE: I made a mistake sending this - I realized the doc and core correct.



CR Number                     : 9362
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit complains of unknown default cell
Reported Date                 : 11/4/93
Found in Baseline             : 1.0.3
Found Date                    : 11/4/93
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[11/4/93 public]


I'm getting unknown cell errors from acl_edit when trying
to acl_edit a directory in DFS.  This does not happen with
every DFS directory.


# ls
chmodtest  getset     inherit    sizetest   syscalls
# cd chmodtest
# ls
testdir2
# acl_edit testdir2
Unknown default cell from ACL - ERROR: Cell UUID is not a valid cell name (dce / s
ec)
INFO: Local cell will be used for operations requiring default cell info.
sec_acl_edit> l

# SEC_ACL for testdir2:
# Default cell = 007f6dd6-eae0-1c95-aa4c-02608c2f6c55
mask_obj:r-x---
unauthenticated:r-----
user_obj:rwxcid
user:000000cd-9a5a-2cb1-a300-02608c2f6c55:r-x--d        #effective:r-x---
group_obj:rw----        #effective:r-----
group:00000070-9a42-2cb1-a301-02608c2f6c55:rw--i-       #effective:r-----
other_obj:r-----
sec_acl_edit> exit
# pwd
/.../headache.qadce.osf.org/fs/alcatraz.epi1/dfs-test/acl/scratch.bad/chmodtest
# getcellname
/.../headache.qadce.osf.org
#



This happens consistently with this one particular directory.

[11/4/93 public]

Cancelling - this is just what happens when one
reconfigures a cell and tries to use the old filesets
and aggregate which have ACLs on them.



CR Number                     : 9345
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : kinit
Short Description             : kinit fails after tickets expire
Reported Date                 : 11/3/93
Found in Baseline             : 1.0.3
Found Date                    : 11/3/93
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[11/3/93 public]

Rajendra reported this via mail; he should have opened a defect report
instead, so I'm doing this for him..

It appears that a recent change to sec_login code by MDF broke kinit when
the login context has already expired.

This is a regression from 1.0.2, and this functionality is necessary, hence
an A0 priority on this.

[11/3/93 public]

never mind; rajendra did open a defect on this.



CR Number                     : 9304
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd coredumps after having
been restarted without the -restore_master, following a restore...
Reported Date                 : 11/1/93
Found in Baseline             : 1.0.3
Found Date                    : 11/1/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[11/1/93 public]

On a cell where one security replica has been configured,
the failure to restart secd with the -restore_master flag, after 
having restore a backup of the resgistry, causes secd to coredump.

The following error is left on the screen by secd before dying.

Registry: Error - Slave update seqno is later than the master's.
Registry: Fatal Error - This master's database is an obsolete
 at line 1127 of file /project/dce/build/dce1.0.3-snap/src/security/server/rs/rs_log.c

If secd is started with the -restore_master all works well. 
I found this problem while running the replica_checklist.

[8/4/94 public]
Refer to CR #11261 for related info.  One thing  is that none
of these scenarios should result in a core dump.  If a user specifies
incorrect flags, a graceful exit should occur...

[8/10/94 public]
The propagation code properly aborts if it finds that it is
trying to propagate to a replica with a higher seqno.  The same
code is used for the very first propagation when bringing up
a master, as well as for all the usual propagation activity.
Admittedly it would be nice if this code could be aware of the
fact that the master is just coming up and give an appropriate
message without dumping the core. The administrator could then
decide which version of the registry should prevail and either
trnasform the more recent replica into a master (if the replica's
db is preferable) or launch secd with the -master_seqno flag
if the master's database has to override the replica's.
Thus I am going to cancel this ot defect report and file an
enhancement.



CR Number                     : 9273
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : Replication
Short Description             : Master secd hangs and goes
into infinite loop while sending error message to the console.
Reported Date                 : 10/27/93
Found in Baseline             : 1.0.3
Found Date                    : 10/27/93
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/27/93 public]

Using builds available on 10/24, configured the Master and slaves.
The Master secd hanged and sent error messages to the console.
Details are as follows:

1. Configured a Master server on HP/UX.
2. Configured a slave on RIOS.
3. Configured another slave on 486.
4. Put the Master in Maintenance through sec_admin.
5. Got out of sec-admin session.
6. Invoked rgy_edit and tried to add a principal while master was in maint.
7. Got out of rgy_edit session.
8. Invoked sec_admin and it hung.
  Started seeing messages continuously on the window where Master secd was 
  configured with error 22 (defined as  EINVAL- Invalid argument )      

# SECD prop_driver_sleep - error from pthread_cond_timedwait (errno 22)SECD
prop_driver_sleep - error from pthread_cond_timedwait (errno 22)SECD
prop_driver_sleep - error from pthread_cond_timedwait (errno 22)SECD
prop_driver_sleep - error from pthread_cond_timedwait (errno 22)SECD
prop_driver_sleep - error from pthread_cond_timedwait (errno 22)SECD

9. Had to kill Master secd through kill command.
10. Once Master secd was killed, sec_admin invocation returned.

[10/29 93 public]
Liza did some investigation on this bug and found the following:
- replication code appears to be ok.
- Sekhar has tested sec_admin maintenance/service command extensively
  with HP's product during system testing and it always worked.
Keeping this CR open for time being and lowering Priority/Severity.

[8/4/94 public]
Old bug, may be gone.  Max will attempt to reproduce.

[8/18/94 public]

Followed above steps to try to reproduce the bug with the last good
build (bld 14.3).  Things worked as they were supposed to.  Hit on
sec_admin and the replicas a bit more.  No problems.  I'll cancel
this tomorrow if nobody objects.



CR Number                     : 9113
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : document use of \ as escape character
Reported Date                 : 10/13/93
Found in Baseline             : 1.0.3
Found Date                    : 10/13/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : rgy_edit.8sec, 2_rgyedit.gpsml
Sensitivity                   : public

[10/13/93 public]

The documentation needs to be updated to include instructions on the
use of the \ as an escape character in rgy_edit.

This is necessary because of the fix for OT 5359.

The DCE Administration Guide, section 18.3 should be updated to include
the following information:

The \ is used as an escape character in rgy_edit commands.  It must be
used when a rgy_edit special character is to be included in a string.

Ex. To add the string "mob" as a principal name, you would do the
    following:

		rgy_edit=> do p
		rgy_edit=> add \"mob\"

			or

		let rgy_edit prompt you for the string:

		rgy_edit=> do p
		rgy_edit=> add
		Add Principal=> Enter name: \"mob\"

If \ is to be part of the string, it must also be escaped - \\ .

This information should also appear in the Administration Reference Manual
on the rgy_edit man page.

[10/18/93 public]
Fixed and verified.  Verified by Mary Bennett.

[10/22/93 public]
I think we should remove (from 1.0.3 documentation) the reference of \ 
escaping from DCE Administration Guide, section 18.3 as well as
Administration Reference Manual since CR 5359 fixes are being removed
for 1.0.3.

[10/22/93 public]
The changes have been backed out.  I was sure I added a note saying so and why when 
I changed the priority, status, and fix by fields.  But, that note 
doesn't seem to be here now.

[8/29/94]
I've changed the status of this CR to cancel.  No changes are 
being made to rgy_edit for 1.1.



CR Number                     : 9080
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rca handle locking
Short Description             : cache keys are insufficient
Reported Date                 : 10/9/93
Found in Baseline             : 1.0.2
Found Date                    : 10/9/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : internal_binding.c
Sensitivity                   : public

[10/9/93 public]
  While working on some as-yet unidentified problem here, I got the
following trace from DEBUG_SEC relating to the RCA binding sequence.
Our 'pe_site' file contains two bindings, identical save for their use
of different towers (udp vs. tcp). What the trace seems to show is that
if the first of these two bindings is invalid, it remains in the binding
cache. When the next alt-handle is picked up, the binding cache is
searched by keys that do not include the tower contents, and so instead
of adding a new binding into the cache and trying it, the RCA instead
gets an "equivalent" binding out of the cache (one already known to be
invalid -- the one for the previous tower -- and not purged) and passes
it back to repeat the invalidation instead of trying to revalidate the
second tower.
  This is one of those iffy bugs that's probably being triggered by some
other bug, perhaps a locally-produced one. Please just let me know if
this cache problem is considered to be "real".
  Attached: trace from "rgy_edit -update" with DEBUG_SEC set to 9;
BIND_PE_SITE set to 1, and CDSD (et alia) not running anywhere.
	.......................................................
	.......................................................
(binding_cache_lookup) Looking for site /.../travis.dce.transarc.com, cell , princ dce-rgy, type 1
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity b5470
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Got binding 0063e66a-00e3-1cb7-9c4b-9e620d0faa77@ncadg_ip_udp:158.98.13.15[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding 0063e66a-00e3-1cb7-9c4b-9e620d0faa77@ncacn_ip_tcp:158.98.13.15[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../travis.dce.transarc.com, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site == /.../travis.dce.transarc.com
(rca_setup_handle) Auth DCE, principal 'dce-rgy@travis.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity b5470, handle ff100
(binding_cache_lookup) Looking for site /.../travis.dce.transarc.com, cell , princ dce-rgy, type 0
(binding_cache_lookup) Cache miss
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Got binding 0063e66a-00e3-1cb7-9c4b-9e620d0faa77@ncadg_ip_udp:158.98.13.15[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding 0063e66a-00e3-1cb7-9c4b-9e620d0faa77@ncacn_ip_tcp:158.98.13.15[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../travis.dce.transarc.com, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site == /.../travis.dce.transarc.com
(rca_site_bind) Bound to Cell '/.../travis.dce.transarc.com'
(rca_site_bind) Bound to Site '/.../travis.dce.transarc.com'
(rca_lock_handle) locking efffcc30
(rca_unlock_handle) unlocking 103400
(rca_site_bind) String Binding  '0063e66a-00e3-1cb7-9c4b-9e620d0faa77@ncadg_ip_udp:158.98.13.15[33300]'
(binding_cache_enter) Adding 103400 to binding cache: site /.../travis.dce.transarc.com cell /.../travis.dce.transarc.com princ (null) type 0
(rca_lock_handle) locking efffd610
(rca_check_binding) checking 103400
(rca_check_binding) flags is 3
(rca_unlock_handle) unlocking 103400
103400: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity b5470
(rca_setup_handle) rpc_binding_set_auth_info returned status 17122061
(rca_rebind) Took alt_handle 1 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../travis.dce.transarc.com, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site == /.../travis.dce.transarc.com
(rca_setup_handle) Auth DCE, principal 'dce-rgy@travis.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity b5470, handle ff1b0
(binding_cache_lookup) Looking for site /.../travis.dce.transarc.com, cell , princ dce-rgy, type 0
(binding_cache_lookup) Looking at 103400: site `/.../travis.dce.transarc.com' cell `/.../travis.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning 103400
returning cached context 103400
(rca_lock_handle) locking efffd610
(rca_check_binding) checking 103400
(rca_check_binding) flags is 3
(rca_unlock_handle) unlocking 103400
103400: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity b5470
(rca_setup_handle) rpc_binding_set_auth_info returned status 17122061
(rca_rebind) Non-nsi rebind failed
(rca_site_bind_pe_site) assuming /.../travis.dce.transarc.com is string binding
b8a68: Dropping site refcount from 1 to 0
(rca_lock_handle) locking efffe008
Drop ref to identity b5470 from binding cache
(rca_unlock_handle) unlocking b8a68
?(rgy_edit) Unable to contact the master registry - Master Registry server unavailable (Registry Edit Kernel) (dce / sad)

[10/10/93 public]
  Additional debugging here has not competely nailed down the situation
that displays this bug, but I now certainly believe it contributes to
this bug's manifestation. Somehow, the priv service (PS) is silently
failing to get any tickets. Hence, principals' cred files all lack
(client,server) tickets for (PS, AS) and (PS, RS). This causes
rpc_binding_set_auth_info() to fail to fetch credentials, which
contributes to the above scenario. Even the dce-rgy principal lacks
client tickets from the PS.
  Again -- for clarity -- this is all hinging on some bug we must have
introduced here. My concern about the binding cache is only to get the
above trace reviewed and make certain that nothing "real" is broken in
there .. for all I can tell, the cache is prone to contain handles with
their valid flags set although bindings through them have failed, and it
does appear that it may hide contexts which differ only in their
distinct towers.

[8/8/94 public]

************************************************************************
Unless anybody objects, I am going to close this bug in a couple of days.
Here is why.
***********************************************************************

Quite some time is passed and the current trace under the same
circumstances is changed.  By doing a code inspection it seems that
the above case cannot happen anymore.  This is due to the fact that
 1 rca_rebind would not call rca_cache_enter with the bad (0) alt_handle,
   since the rpc_handle goes through an rpc_mgmt_inq_server_princ_name and
   the fact that the handle is bad is detected right away.
 2 the proper use of the hindex in rca_rebind (internal_binding.c).
   This forces the search of alternate handles to start from the handle
   beyond the current.

An attempt to recreate the above described situation seems to confirm
this.

Added below is a trace of rgy_edit -update with DEBUG_SEC=9 and
BIND_PE_SITE=1.  The file /opt/dcelocal/etc/security/pe_site is changed
to have a first 'bad' udp string binding and a secong good tcp binding.

file /opt/dcelocal/etc/security/pe_site (address of sparrow is 130.105.4.225)
------------------------------------------------
/.../sparrow_cell 92d10a6c-b2e4-11cd-85bc-000c00b4b407@ncadg_ip_udp:130.105.4.226[]
/.../sparrow_cell 92d10a6c-b2e4-11cd-85bc-000c00b4b407@ncacn_ip_tcp:130.105.4.225[]
------------------------------------------------

trace of  rgy_edit -update
------------------------------------------------
sparrow> rgy_edit -update
(binding_cache_lookup) Looking for site /.../sparrow_cell, cell , princ
dce-rgy, type 1
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity 52c9e0
(rca_site_bind_pe_site) calling get_site_bindings
(rca_get_site_bindings) about to open config file
(rca_get_site_bindings) Got binding
92d10a6c-b2e4-11cd-85bc-000c00b4b407@ncadg_ip_udp:130.105.4.226[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_get_site_bindings) Got binding
92d10a6c-b2e4-11cd-85bc-000c00b4b407@ncacn_ip_tcp:130.105.4.225[]
(rca_bind_to_host) Successful bind.
(rca_get_site_bindings) bind_to_host succeeded
(rca_site_bind_pe_site) returned successfully from rca_get_site_bindings
(rca_rebind) Took alt_handle 0 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../sparrow_cell, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site
== /.../sparrow_cell
(rca_inq_cell_name) rpc_mgmt_inq_server_princ_name failed -- status
16c9a016
(rca_setup_handle) rca_inq_cell_name failed, status 16c9a016
(rca_rebind) Took alt_handle 1 from context
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../sparrow_cell, status 16c9a0c1
(rca_setup_handle) No entry name -- status 16c9a0c1.  Falling back to site
== /.../sparrow_cell
(rca_setup_handle) Auth DCE, principal 'dce-rgy@sparrow_cell'
(rca_setup_handle) rpc_binding_set_auth_info, identity 52c9e0, handle
4cb940
(rca_setup_handle) end set_auth_info identity 52c9e0
(rca_site_bind) Bound to Cell '/.../sparrow_cell'
(rca_site_bind) Bound to Site '/.../sparrow_cell'
(rca_lock_handle) locking 44e498
(rca_unlock_handle) unlocking 4cb640
(rca_site_bind) String Binding
'92d10a6c-b2e4-11cd-85bc-000c00b4b407@ncacn_ip_tcp:130.105.4.225[2829]'
(binding_cache_enter) Adding 4cb640 to binding cache: site
/.../sparrow_cell cell /.../sparrow_cell princ dce-rgy@sparrow_cell type 1
(rca_lock_handle) locking 44e498
(rca_site_bind) bumping ref on identity 52c9e0
(rca_unlock_handle) unlocking 4cb640
(rca_lock_handle) locking 44e498
4cb640: Dropping site refcount from 2 to 1
(rca_unlock_handle) unlocking 4cb640
(rca_lock_handle) locking 55bec8
(rca_unlock_handle) unlocking 4cbc40
Current site is: registry server at /.../sparrow_cell/subsys/dce/sec/master

rgy_edit=> 
------------------------------------------------

[8/10/94]

Cancelled as for previous note



CR Number                     : 9046
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : acl_edit fails after creating
62 accounts and setting acl's on those accounts.
Reported Date                 : 10/5/93
Found in Baseline             : 1.0.3
Found Date                    : 10/5/93
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/5/93 public]

The DME development group has encountered a problem with acl_edit.
Here is the scenerio:
There is a script which using rgy_edit adds a principal, an account and
using acl_edit sets acl for the user in a sequence. They want to do it for
100 users. The script works ok for about first 62 (0-61) accounts
(principal is created, account is created and acl's set using acl_edit
command). At the count of 63, the principal and account is created ok with 
rgy_edit. But acl_edit starts failing with the following errors:


+ acl_edit /.:/hosts/spring/lms -m user:baduser62:------- 
ERROR: communications failure (dce / rpc)


+ acl_edit /.:/hosts/spring/lms -m user:baduser63:------- 
ERROR: connection request rejected (dce / rpc)
Unable to bind to object /.:/hosts/spring/lms

--------------
rgy_edit appears to be working ok.

New acl_edit invocation fails.

acl_edit /.:
ERROR: connection request rejected (dce / rpc)
Unable to bind to object /.:

This has been duplicated on 486 and hp.

Here is the script:
------------------

#!/bin/sh
set -x
BAD_USER=baduser
GOOD_USER=gooduser
MAX_BAD_USERS=100
#
# Create tons-o-bad-users
#
echo "in add_userdbs"

COUNT=50
while [ $COUNT -lt $MAX_BAD_USERS ]
do
rgy_edit <<EOF
do p
add $BAD_USER$COUNT
do a
add $BAD_USER$COUNT -g none -o none -mp -dce- -pw baddd
EOF
acl_edit /.:/hosts/`hostname`/lms -m user:$BAD_USER$COUNT:-------
COUNT=`expr $COUNT + 1`
done

[10/7/93 public]
Please reproduce this with DEBUG_ACL (env variable) set to 10, and save
all the output to a file...

[10/7/93 public]
Running the test again with DEBUG_ACL set to 10 and analyzing further 
discovered that the cdsd core dumped when invoked for the 62 nd user.
Cancelling this bug.



CR Number                     : 8878
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : typo, keytfile should be keyfile
Reported Date                 : 9/29/93
Found in Baseline             : 1.0.2
Found Date                    : 9/29/93
Severity                      : E
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/29/93 public]
In the admin guide, chapter 20, section 20.7.3 "Using ktdelete", under the
list of switches, after -f there appears the value in italics keytfile.
This should be keyfile (no t).

In the source file src/admin_gd/security/security/4_accts.gpsml  search for
"keytfile" and change as below:

.LI "\*L\(hyf\*O \*Ekeytfile\*O"
.LI "\*L\(hyf\*O \*Ekeyfile\*O"

(How's that for specifying all information needed :-)

[10/1/93 public]

Not bad at all! Thanks, Howard!
Assigned this bug to myself.

[10/6/93 public]

I went into the source to fix the error but found
it fixed already. (I figure Pam Millett fixed it during
her last round of bug fixes.) I examined the output of
the latest weekly doc build and the fix is there, too.
I am cancelling this bug, rather than closing it, since it's
my understanding that an "open to close" status
would mean that change markers would need to be
added to the source to highlight the corrected text
and the related CR, and it seems like overkill given 
the number of change markers in there already.



CR Number                     : 8664
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : bad behavior in rgy_edit "ktd"
Reported Date                 : 9/22/93
Found in Baseline             : 1.0.3
Found Date                    : 9/22/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[9/22/93 public]
When a user performs a 'ktd' (delete key table entry) operation on a 
nonexistent key table, two inappropriate events occur:
    1. A confusing (i.e., flat out wrong) error message is issued.
    2. The nonexistent key table file is created and a version number is 
       written to it.

Here's the scenario:
    rgy_edit => ktd -p cell_admin -v 1 -f no_such_file
    "?(rgy_edit) Unable to delete key from table - Key table entry not found
     (dce / krb)"

The reason this occurs is that the kerberos routine that opens key tables
(krb5_ktfileint_open() in ../krb5/lib/keytab/file/ktf_util.c) never returns
a "file not found" type of code. When it is called upon to open a file for
writing, if its first attempt to open the file fails due to nonexistence
it proceeds to create that file. This is appropriate behavior for the 'kta'
(add key table entry) case, but NOT for the 'ktd' case. This routine currently
has no way of knowing whether it has been called for "add" or "delete"
purposes; thus it behaves the same for both.

The net is that any time a user mistypes a key table filename in an rgy_edit
'ktd' session,a bogus key table will be created unbeknownst to him, and will
just sit around taking up space. The message is confusing too, since it implies
that a legitimate filename was supplied. If the routine instead returned the
"file not found" code in the "delete" path, the message would be the more
appropriate

    "?(rgy_edit) Unable to delete key from table - Specified key table not
    found (dce / sec)".



CR Number                     : 8635
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rs_prop_tasks
Short Description             : uninit cond var. dumps core while exiting
Reported Date                 : 9/20/93
Found in Baseline             : 1.0.2
Found Date                    : 9/20/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : rs/rs_prop_tasks.c
Sensitivity                   : public

[9/20/93 public]
  I have a core file in which the path seems clear. prop_driver_sleep()
was invoked by the  rs_e_prop_long_incommunicado  task and with
*n_bad_prop_state == 2 . This causes the routine to skip any setting of
sleep_cv (only happens in the >else clause of the routines initial >if)
and yet invoke pthread_cond_timedwait() with this uniit'd variable.
  The Solaris OS SEGV'd with this. The evidence includes the fact that
*n_bad_prop_state == 2 and sleep_secs came out to 240, which matches
the >if,>if clause's arithmetic -- it isn't 15*60 as the >else path
would have it be.
......................................................................
  This happened immediately following an unrelated fatal error
in which a checkpoint failed (apparently, rename() is NOT atomic;
I am debugging that one independently as it must be a platform issue).
......................................................................
  THAT managed to happen because of a situation in another OT I filed
weeks ago -- fatal errors leave secd running on both of our platforms
because the CATCH clauses call fatal_st() which gets the DT killed
before it can fall through to the exit() call below their TRY block.
This bug is fixed locally and was not in the build that rocuded the
cond-var error.

[9/20/93 public]
  The cause of the two back-to-back bad state errors is that the
secd was "in limbo" -- it had had a fatal error, but the error in
fatal error handling left it running. But the checkpoint task died, the
rs_state remained stuck in ..._renaming through two prop-task sleeps.
Filled in Reported by Company's Ref. Number with `8928'

[9/20/93 public]
The above scenario describes a problem with secd crashing while in the middle
of failing because of another problem.  That other problem is likely to be
very serious and would be considered high priority.  This problem of it not
handling a fatal error as cleanly as it could, on a non-reference platform
does not warrant a priority of 0, so I have lowered it to 2 so that it will
not affect more serious problems that we are working on.  If and when the
problem that caused the initial fatal to occur is found, please open a
separate defect (CR) to describe it.

[9/20/93 public]
  My fault for confusing things. This OT report represents *only* the
uninitalized cond var core dumper, which could happen independently if a
checkpoint+rename sequence took an unusually long time to complete, or
if the prop tasks were blocked by incompatible states for long enough
(maintanence?).
  The other bugs I brought up will, if they require the OSF's attention,
eventually become independent reports.
  I think the cond-var bug is higher than a C2 rating, but I will accept
your rating.

[8/9/93 public]

In rs_prop_task.c, prop_driver_sleep now properly initializes the
sleep_cv variable defaulting to &prop_long_incommunicado_cv. Unless
any objections are raised I am going to close this one in a couple of
days.

[8/10/93 public]

Cancelled as for previuos note



CR Number                     : 8594
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : lrgy
Short Description             : wrong auth_src from valid_and_cert_ident?
Reported Date                 : 9/14/93
Found in Baseline             : 1.0.2
Found Date                    : 9/14/93
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/14/93 public]
  sec_clientd and rpcd are up on a cellmember, but the secd's are down.
A certified login is attempted by a user whose recent login was stashed
in the host's LRGY. The login sees a successful return from sec_login_-
valid_and_cert_ident(), with an auth_src of ".._network". The login
handle, when cast as a sec_login_context_t, shows a state of only
"setup" and an auth_src of ".._local" e.g.
                                                                      .
$15 = {cell = 0x0 "/.../k2.dce.transarc.com", '\000' <repeats 1000 times>,
  principal = 0x0 "travis", '\000' <repeats 1018 times>, identity = 0x53a28,
  krb_info = {cache = 0x53e28, pepper = {pa_type = 0, length = 0,
      contents = 0x0}, num_caches = 0, prev_caches = 0x0,
    tgt_data = 0x106f28}, state = setup, auth_src = sec_login_auth_src_local,
  flags = 0, local = 1, refreshed = 0, refcount = 2, cache_link_next = 0x0,
  cache_link_prev = 0x0, context_name = 0x0, context_name_len = -1, mark = 0,
  namecache = 0x0, namecache_name = 0x0, modtimes = {datafile = 0,
    cachefile = 0, namefile = 0}}
(gdb) cont
                                                                      .
  The login image, for lack of the auth_src==local situation, then
proceeds to try and obtain account expiration dates (and so forth) using
the return login handle. Many of the calls fail due to the context state
of the login handle (which equals 'setup').
  Perhaps this problem report is simply a set of inquires:
  1)  What should a login image do in this case? What information
      about the validity of the account can be determined?
  2)  Why does valid_and_cert_ident() return an auth_src different than
      that stored in the login handle context?
  3)  Likewise, why does valid_and_cert_ident() return TRUE when the
      sec login handle remains in the 'setup' state?
  We want to avoid a case in which a cell with the default 4w local-rgy
cache lifetime allows an expired account to log in during a sec-server
outage, and (more importantly) to be certain that we understand this
situation in which the LRGY comes into use.

[10/7/93 public]
Not reproducible with the current build of 1.0.3 (it sets auth_src to
sec_login_auth_src_local like it should).  If this isn't reproducible on
1.0.3 by next Friday (the freeze date for 1.0.3 bugs), I'm cancelling this CR.

[10/12/93 public]
Still not reproducable in 1.0.3.  Cancelled.



CR Number                     : 8499
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : rpc_binding_set_auth_info
Short Description             : The rpc_binding_set_auth_info
randomly returns auth ticket expired status.
Reported Date                 : 8/23/93
Found in Baseline             : 1.0.2
Found Date                    : 8/23/93
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/23/93 public]

This problem has been discovered by the DME development group running 1.0.2
on 486 platform. Here are the details as mailed to me from the DME developer:

   The rpc_binding_set_auth_info API intermittenly return the DCE status 
   "auth ticket expired" (don't know the mnemonic, I run it thru dce_inq_
   error_text()).

   No ticket expiration is scheduled for hours.

   This occurs often when I have multiple threads running in my client,
   usually 20.  It still happens although much less frequently with
   a single thread.

   The login context parameter to rpc_binding_set_auth_info() is
   a context I have gotten by doing an sec_login_import() of another
   process' binding.  I will use the very same binding soon after
   and get no problem. 

   I have experimented and called __set_auth__() with a NULL as the 
   parameter therefore using the current login context of my process 
   and this exhibits the same behaviour of working 999 out of a 1000 
   times, failing and then working the next time.  This indicates to
   me that the problem is *not* within my threads and how they are 
   shuffling around the imported context handle.

[8/4/94 public]
I was the above mentioned "DME developer" who reported this bug.  Max, 
want to dust off the EVS Event Request Broker process to reproduce?  I 
didn't think so.

[8/10/94 public]
Tried to reproduce in all forms, by using imported context or default
context.  Did continuos rpc_binding_set_auth_info for many hours
without any problems.  Will cancel this



CR Number                     : 8424
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : modification dates being dropped
Reported Date                 : 8/9/93
Found in Baseline             : 1.0.2
Found Date                    : 8/9/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/9/93 public]
----- begin travis 7/14/93
                                                                     .
 Notice that if, in rgy_edit, one changes an account by placing all the
changes on a single command line, e.g.
                                                                     .
	rgy_edit=> change -p binky -g shaftees -o hellco -pw sheila -mp -dce-
                                                                     .
that the account "changed by" date and, if applicable, the password "was
last changed" dates do not get updated. If an analogous change is made
on the 'long form' for the same command, e.g.
                                                                     .
	rgy_edit=> change -p binky -g shaftees -o hellco
	Enter new account id [pname]: (binky)
	Enter new account group [gname]: (shaftees)
	Enter new account org [oname]: (hellco)
	Change password? [y/n]? (n) y
	Enter new password:
	Retype new password:
	Enter your password:
                                                                     .
  I have not read the code yet, but I suspect that this is due to the
implementation of rgy_edit and its form entry system; the date probably
gets updated only in the long form code.

[9/10/93 public]
Assigned to 'mob' who's working on rgy_edit now.
I believe the server is supposed to update the 'date' fields, so the
above doesn't sound possible (the fact that the problem doesn't occur
if you execute the same command in interactive mode).  Mary, make sure
we can reproduce it before looking into the code too much...

[9/29/93 public]
  I have no idea how confused I was the day I claimed to see this bug. I
can't reproduce it myself, and understanding the layout of the account
change code, I doubt it ever happened at all. Please allow me to cancel
this bug, and accept my apologies for filing a bogus bug.

[9/29/93 public]
Not reproducible, not possible, cancelled with permission of reporting party.



CR Number                     : 8423
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : fault in cell cmd
Reported Date                 : 8/9/93
Found in Baseline             : 1.0.2
Found Date                    : 8/9/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[8/9/93 public]
When adding an intercell trust path using the rgy_edit 'cell' command,
if the administrator specifies a local unix UID on the command line
(using the -lu option) which is already in use, two things happen:
                                                                      .
	silently, the operation 'compiler' code notices that
	that UID is in use, but this error is not flagged,
	or the flagged error is not expected by the caller.
	the result is that the local UID field is filled
	into the command's operation form as being missing,
	when in fact it wasn;t missing, but was only incorrect.
                                                                      .
	loudly, the operation code notices that this argument
	was not specified, and as this condition was to be
	prevented by the compiler's checks, it signals a
	'FAULT' message to the terminal and aborts the image.
                                                                      .
A workaround would be to allow rgy_edit to provide its default value for
this argument -- caution, I didn't review that path to see if problems
were also present there, but others have used it and succeeded -- or to
check by hand to see that the UID they provide is not in use within the
local registry.
                                                                      .
Another 'problem' which falls into the annoyance category is that if a
cell name is given tothe 'cell' command and this name lacks the '/.../'
prefix, the command returns and error of the form, "this command lacks
data inthe correct syntax." With 12 arguments, this message doesn't give
enough data to narrow in on this 'error'. It seems reasonable for
rgy_edit to prepend the "/.../" prefix if it is missing -- the name
*has* to be a remote cell, after all.
                                                                      .
Filed as B2 because it would be difficult for an outside user to
determine the problem here, and hence would be blocked during intercell
work. There is a workaround (find and use an unused UID) and there is no
data loss, so, B2.

[09/10/93 public]
Assigned to 'mob' who's working on rgy_edit for 1.0.3.

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 8380
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : 
Short Description             : Include files for sample
acl_mgr are not in acl_mgr directory.
Reported Date                 : 7/28/93
Found in Baseline             : 1.0.3
Found Date                    : 7/28/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/28/93 public]

	The sample acl_mgr source does not contain all needed files in
the source directory.  Therefore the user must use trial and error
to find the appropriate include files.

[7/29/93 public]

[8/2/93 public]
changed to enhancement.



CR Number                     : 8359
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : Changing group for existing
account does not work using change command.
Reported Date                 : 7/23/93
Found in Baseline             : 1.0.2
Found Date                    : 7/23/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/23/93 public]

In a single machine cell, configured a principal/account with group and org
as none. Using rgy_edit change command tried to change group from none to
something while leaving org as none. Got the following error:

rgy_edit=> change
Change Account=> Enter account id [pname]: dummy
Enter account group [gname]: dummyg
Enter account organization [oname]: none
?(rgy_edit) Unable to change account "none" - Account does not exist
(Registry Edit Kernel) (dce / sad)

[7/23/93 public]
Cancelled as pilot error.  You specified the new group in the wrong place.
You must specify the existing principal, group and org, then it will ask you
if you want to change any of them (ie: changing foobar's group from none to
system):

rgy_edit=> change
Change Account=> Enter account id [pname]: foobar
Enter account group [gname]: none
Enter account organization [oname]: none
Enter new account id [pname]: (foobar) 
Enter new account group [gname]: (none) system
Enter new account org [oname]: (none) 
Change password? [y/n]? (n) 
Enter new misc info: () 
...



CR Number                     : 8293
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 8288, 8290, 10357
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : app_gd
Short Description             : Add section on writing ACL manager.
Reported Date                 : 7/16/93
Found in Baseline             : 1.0.2
Found Date                    : 7/16/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/16/93 public]

	There is no one section which is totally devoted to acl manager
writing. The existing pieces are not that informative. The following is my
write-up on how to set up the acl server to work with the server it associates
and the acl_edit tool.



		Writing ACL Manager To Work With A Server

			   Weidong Wang
			 DCE Systems Engineering
			Open Software  Foundation

1. Introduction

	Access control lists (ACLs) are the basis for all DCE authorization 
decisions. ACLs provide for fine grained access control decisions.
Every application can have its own ACL database, which means every
application should have its own ACL manager to manage the ACL database.
DCE provides ones for the registry and CDS directory.

	DCE defines a set of ACL APIs (sec_acl_*, sec_acl_mgr_*, and rdacl_*). 
If the user application ACL manager adheres to these APIs, he/she can
use DCE acl_edit tool to maintain his/her ACL database.

	To be totally flexible, DCE pretty much leaves everything about
managing ACLs to the ACL manager programmer, from defining the ACL
permission set, configuring the ACL storage, to writing the access
check, lookup, update, etc routines. It is not a trivial task to
write an ACL manager and make it to work with a server, especially when there
is not enough good documentation around. The current existing document is not
that helpful in this area. Some are confusing, even contradictory to each 
other.

	This paper concentrates on the implementation issue of how to
make the ACL manager work with the server. It does not address the ACL
database issues (i.e. how to configure it, what permission bits to use,
whether to use a file to save the database, etc). We will be using the
sample ACL manager provided in OSF's DCE release (under
src/security/client/admin/acl_edit/svr_example). 

	It is assumed that the reader has the experience of writing a
basic DCE client/server application.


2. ACL APIs

	As mentioned before, there are 3 sets of ACL APIs. They are
sec_acl_ ones, sec_acl_mgr_ ones, and rdacl_ ones. Figure 1 (from Figure 2-12 
of OSF DCE Application Development Guide) shows how these APIs interact with 
each other.

	Usually sec_acl_mgr_ calls are the ones that the ACL manager
programmer has to write. These APIs define what one needs to write. One
may choose to use his own function names, as long as the necessary
functionalities are implemented. Rdacl_ calls, although simple, are
important. They provide a layer between the predefined remote procedure
calls and one's actual ACL functions. They basically just call the 
underlying sec_acl_mgr_ functions. If one wants acl_edit to work, he has
to use the predefined rdacl_ API names.

	Sec_acl_ calls are predefined and implemented. They can be
called by the client application to connect to an ACL server and perform
ACL inquiry. One of such a client is acl_edit, which is built on top of
sec_acl_ calls. 

	When the client calls a sec_acl_ call, it is actually making a RPC 
call.  The call will be routed to the ACL server, which eventually dispatches
to the corresponding rdacl_ call, which further calls user's ACL manager
function.


3. ACL Manager As A Stand Alone Server

	The sample code under src/security/client/admin/acl_edit/svr_sample 
gives a simple implementation of a stand alone ACL server. It uses
memory to store the ACLs (so once the server exits or is terminated, the
database is gone. But again, how to manage the database itself is not of
our concern here).

	You should be able to get the source and make it to generate the
server code. You can run this program (be sure to use -e option so that
it exports the binding information into the cell directory name space) 
and use acl_edit tool to manage the in-memory ACL database.

	One question people have is whether the ACL manager should
export the binding to the name space. Section 2.4.5 of the OSF DCE Application 
Development Guides says that "The sec_acl_bind() routine specifies the 
NULL interface when it performs its import. This allows applications
that offer the ACL interface to not export it vis
rpc_ns_binding_export(), which would greatly increase the size of the
name space". This means that if you are writing a server with an ACL
manager, then you don't need to export the ACL manager's binding
information, since the server itself will definitely export the binding 
information to the name space, and since the ACL runs in the same place 
where the server runs, there is no need to export again (This will
become clearer when we talk about how the sec_acl_bind() works below). 
But if the ACL manager is to run as a stand alone process, you
definitely need to do the export. Otherwise acl_edit will not work.

	In other words, when an ACL manager is coexisted with a server, 
any of the interfaces exported by a server can be exploited by 
sec_acl_bind() to locate the ACL manager making it unnecessary for the
server to export the ACL manager interface.


4. How Sec_acl_bind() Works

	In order to understand how acl_edit works, it is important to
understand how sec_acl_bind() works, since it is the core of acl_edit.

	When given a name, sec_acl_bind() first checks if this is a DFS 
name. If so, special treatment is given (we don't discuss it here). If 
not, then sec_acl_bind() checks if the call has the bind_to_entry 
feature ("-e" option used with acl_edit, which means you want to acl_edit 
the name space entry). If so, sec_acl_bind() drops the last component of
the name (so that it will bind to the directory that contains the name 
entry). Then it tries to resolve the name for as far as it can go
(remember that some names go through junctions, and the junctions are 
the last names in the name space. The junction will be the place where 
acl_edit will bind to. If there is no junction, then the name itself
will be the binding place).

	Now sec_acl_bind() starts to import information from the name 
space. First it arbitrarily gets a uuid from the name entry. Then it
uses this object uuid to get a binding from the name entry. Remember
that we have discussed above that there is no need for the ACL manager 
to export its binding information to the name space. As such,  the
object uuid and the binding imported at this stage is most likely
someone else's (the server's) uuid and binding. But a partial binding and
a server object uuid is all it needs to find the right server runtime.
After sec_acl_bind() finds a binding, it calls rpc_mgmt_inq_server_princ_name()
to find the server's principal name in order to set up the authentication 
information for the binding. This rpc management call, with a partial binding
from the name space, will end up with a fully bound binding based on the 
object uuid. As has been said many times, this uuid is the server's object 
uuid. This means sec_acl_bind() will return a fully bound binding to the 
server. But since the ACL manager and the server share the same server
runtime, acl_edit can further use the ACL interface uuid to distinguish itself
from the server call.


5. Writing An ACL Manager With A Single Manager Server

	This is the simplest case: one manager server with an ACL
manager.

	Because there is only one manager present, there is no need to set
the type for the manager object. By default, the manager object binds to
the NIL type uuid.

	The ACL manager can use the server's UUID, or it can have its
own object uuid. It doesn't matter which uuid you choose since either 
one of the object uuids will get the call to the right server runtime. 
Again, there is no need for the type set here. 

	Note: If the type has to be used, see the next section.

	Both the server and the ACL manager register their interfaces
with a NIL type uuid.

	The ACL manager does not need to export its uuid and the
bindings to the name space.

	When acl_edit is invoked, sec_acl_bind() will pick up the
server's uuid and one of its binding from the name space. The uuid and
the binding will get it to the server runtime. Following the control
flow of choosing a manager from Figure 2 (from Figure 14-16 of the OSF DCE 
Application Development Guide, it eventually goes to the flow with NIL type 
uuid.  Now it uses the interface uuid to pick the right final manager, your
ACL manager.

	As an example, suppose the server supports interfaces IS and ACL
interface IA. Furthermore, IS has one manager M1; and IA has one manager
MA. The following steps show how to set them up:

1). set up on the server part

	/* create server objects. OS is predefined in some header file */
	uuid_from_string(OS, &objs, &status);

	/* register the interface */
	rpc_server_register_if(IS, &nil_uuid, &managers_epv, &status);

	....

2). set up on the ACL manager part

	/* create the ACL object. QA is predefined in some header file */
	uuid_from_string(OA, &obja, &status);

	/* register the ACL interface */
	rpc_server_register_if(IA, &nil_uuid, &managera_epv, &status);

	...



6. Writing An ACL Manager For A Multiple-Manager Server

	If the server has more than one manager routines, then each
manager will have its own object uuid. In order to let the runtime pick
the right manager, you need to create a type uuid for each manager and
associate the object uuid of the manager with its type uuid through the
call rpc_set_object_type().

	The current document is not clear in this aspect. The author has 
spent quite some time researching this problem. There are several possible
ways, but it turns out that only one is the right choice. To help understand
the underlying details better, those possible ways will be explained below.
Keep in mind that acl_edit() has one of the server's object uuid and its 
binding that it imports from the name space. Please refer to Figure 2 to see
the control flow of how the runtime choose a manager.

	1) the ACL manager does not set type for its object uuid (use
	default NIL type uuid):

	This does not work since now the server's object uuid is typed,
	the call will always follow its type to find the a manager.
	Because there is only the server manager at that end, you get an
	error when invoking acl_edit of wrong manager type.

	2) the ACL manager set the object uuid to its own type:

	This is essentially the same as 1).

	3) re-register all server's object uuid with the ACL manager's
	type uuid by calling rpc_set_object_type():

	Well, this will make the acl_edit work, since now any one of the
	server's object uuid is typed to the ACL manager. But your
	server call will not work any more. This is because of the way
	rpc_set_object_type() works. When the second object is set to the
	same type uuid, the first object's relationship with the
	type is gone. This means the server call will be routed to the
	ACL manager too.

	4). register with the endpoint mapper multiple times, as suggested by
	the Section 2.4.5 of the OSF DCE Application Development Guide:

	This will not work either, since choosing a manager has nothing
	to do with the endpoint mapper. I will get to this issue later.

	The only way to make it to work is to register all the server's
type uuids with the ACL interface uuid and the ACL manager epv, as well as
registering the acl's own type. Now when acl_edit is invoked, one of the
server's object uuid will get it to the server runtime. Since that object 
uuid is also
typed, all the associated managers will be looked upon. The final
dispatch will be based on the interface uuid. Because now that type has
both the server manager and the ACL manager registered under it, an ACL 
interface uuid will get the ACL manager, and a server interface uuid
will get the server manager.

	As an example, suppose the server supports two user interfaces
I1 and I2, and an ACL interfact IA. Furthermore, I1 has two managers
with it M1 and M2; I2 has one manager M3; and IA has one manager MA. The
following steps show how to set them up:

1). set up on the server part

	/* create server objects. O1, O2, O3 defined in some .h file(s) */
	uuid_from_string(O1, &obj1, &status);
	uuid_from_string(O2, &obj2, &status);
	uuid_from_string(O3, &obj3, &status)

	/* create type uuids */
	uuid_create(&typ1, &status);
	uuid_create(&typ2, &status);
	uuid_create(&typ3, &status);

	/* set the types for the objects */
	rpc_set_object_type(&obj1, &typ1, &status);
	rpc_set_object_type(&obj2, &typ2, &status);
	rpc_set_object_type(&obj3, &typ3, &status);

	/* register the interfaces */
	rpc_server_register_if(I1, &typ1, &manager1_epv, &status);
	rpc_server_register_if(I1, &typ2, &manager2_epv, &status);
	rpc_server_register_if(I2, &typ3, &manager3_epv, &status);

	....

2). set up on the ACL manager part

	/* create the ACL object. OA defined in some .h file */
	uuid_from_string(OA, &obja, &status);

	/* create a type uuid */
	uuid_create(&typa, &status);

	/* set the type to the object */
	rpc_set_object_type(&obja, &typa, &status);

	/* register the ACL interface */
	rpc_server_register_if(IA, &typa, &managera_epv, &status);

	/* also need to register all server's types with ACL interface */
	rpc_server_register_if(IA, &typ1, &managera_epv, &status);
	rpc_server_register_if(IA, &typ2, &managera_epv, &status);
	rpc_server_register_if(IA, &typ3, &managera_epv, &status);

	...



7. About the current DOC on writing ACL manager

	The current DCE document does not have much to say about exactly
how to write a ACL manager and set it up to work with different types of
servers. The general description is often either misleading or cause
confusion. 

	For example, one of the bullet of section 2.4.5 of the
Application Development Guide says "... Finally, all object UUIDs for
objects with ACLs must be registered with the ACL interface UUID at the
endpoint mapper by using rpc_ep_register()."  As mentioned above, registering
all server's object UUID with ACL interface to the endpoint mapper does not 
solve the typed manager problem.

	This paragraph probably comes from the fact that when a client tries 
to ask the remote rpc daemon to find the end point for it, rpcd will use the
{object uuid, interface uuid} pair to search the local End Point Mapper (epm).
Intuitively, to make it possible for acl_edit to find the end point of the ACL
server, one would need to register all object uuids with the ACL interface in
the epm.

	Wrong. My research shows that it actually is not necessary to register
the ACL interface in the epm when the ACL server is associated with a server
that has already registered its object uuid and interface in the epm (this is
not true if you have a stand alone ACL server, or if you export the ACL server
to a different name entry than the server's. In these cases, you need to 
export the binding information, as well as register in the epm). See OT 8290.

	In the above section where how sec_acl_bind() works is discussed, it is
pointed out that after sec_acl_bind() gets a binding from the name space, it
makes a call to rpc_mgmt_inq_server_princ_name() which will use the object
uuid passed in to find an end point from the remote rpcd epm. Since the uuid
is one of the server's uuid, and we assume that the server has registered its
uuids and interface in the epm, rpc management call can find the end point 
from one of the server registration and resolve the partial binding (for more
information, please also refer to the man page of rpc_ep_resolve_binding from
the OSF DCE Application Development Reference).  The face that both the server
and the ACL manager are running in the same server runtime makes it possible to
eventually get to the ACL server with the ACL interface uuid.


8. Acknowledgement

	My discussion with Jonathan Chinitz helped me to get started.
The extensive email discussion with Doug Weir helped me understand
better the underlying mechanism for manager selection.

	My thank also goes to my coworkers in the DCE systems
engineering group for the various discussions on acl_edit.


9. References

[1] "OSF DCE Application Development Guide", Revision 1.0, Open Software
Foundation, P T R Prentice Hall, 1993

[2] "OSF DCE Application Development Reference", Revision 1.0, Open Software
Foundation, P T R Prentice Hall, 1993

[07/16/93 public]
Please note that this will change A GREAT DEAL for DCE 1.1.
We will be providing a support library that includes a new ACL
manager so that 90% of the above work should not be needed.

[07/22/93 public]
Assigned to writer Pam Millette.

[9/17/93 public]
Assigned to Lisa Zahn.

[2/28/94 public]

Reassigned this CR to Peter Neilson (OSF ACL manager library
writer).

[10/03/94 public]
The enhancements suggested by this CR have been accomplished by the
creation of the ACL library, so I'm cancelling it.  Howard Melman and John
Bowe agree.



CR Number                     : 8283
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : syntax errors in sec_login_pvt.c
Reported Date                 : 7/15/93
Found in Baseline             : 1.0.3
Found Date                    : 7/15/93
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/15/93 public]

"/u1/users/devobj/sb/nb103_rios/src/security/h/sec_login_pvt.h", line 119.5: 1506-046 (S) Syntax error.
"/u1/users/devobj/sb/nb103_rios/src/security/h/sec_login_pvt.h", line 132.22: 1506-046 (S) Syntax error.
"/u1/users/devobj/sb/nb103_rios/src/security/h/sec_login_pvt.h", line 137.5: 1506-046 (S) Syntax error.
"/u1/users/devobj/sb/nb103_rios/src/security/h/sec_login_pvt.h", line 145.5: 1506-046 (S) Syntax error.
"/u

[7/15/93 public]

Changed Responsible Engr. from wang to pwang.

[7/22/93 public]
burati@apollo.hp.com wrote:
This occurs on RIOS because there is a ridiculously low limit on the
number of chars allowed in the -I's of a compile line.  It hits this
file first because it is one of the longer filenames, with more places
that it needs to get includes from than other files.  Shortening the
names of the sandboxes will help (Elliot's suggestion of creating
/ relative links to the sandboxes and using those instead of long AFS
pathnames fixed the problem for me).

After confirmed with paananen, this problem has not happened in night 
build, so this bug should be concelled.



CR Number                     : 8198
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec
Short Description             : Credentials incorrect after restarting secd?
Reported Date                 : 6/24/93
Found in Baseline             : 1.0.2
Found Date                    : 6/24/93
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[6/24/93 public]
When there was not enough disk space left and running bos tests secd was killed
with screen message:
Registry: Fatal Error - Unable to write database header.
 at line 983 of file ../../../../../src/security/server/rsdb/balanced_trees.c
Registry: Fatal Error - Checkpoint task aborting
 at line 365 of file ../../../../../src/security/server/rs/rs_rsdb.c
Registry: Fatal Error - DT exiting with alert exception
 at line 487 of file ../../../../../src/security/server/rs/rs_main.c - 0x0000000
0 - successful completion
Registry: Fatal error in main thread; exiting
I understand that if secd continues its life then thing could be even worse 
but after I started secd manually (I suppose this will work) the bos test4
hang on "bos stop" command and when I was creating a cds directory the
message was given
puzzle# cdscp cre dir /.:/dfs-test
Error on entity: /.../puzzle.com/dfs-test
Insufficient rights to perform requested operation (dce / cds)
Function: dnsCreateDir
Note that I was cell_admin at that time.
After a reboot all problems were gone. 
--Jess
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[6/24/93 public]
Fixed short description to be more descriptive of what the problem is.
Changed fixby field from 1.0.2 (which has already been shipped) to 1.0.3.
Changed engineer from Bill to myself, because I've just seen the problem
recently, and Bill's not available to look into it at the moment...

[09/28/93 public]
I had assigned this to myself originally because I had seen the problem back
in the 1.0.2 timeframe once and figured that I'd be able to reproduce it
easily...  This is not reproducible at 1.0.3 (I just spent a half hour killing
and restarting secd and other shells that were in cdscp, running klist,
rgy_edit... kept working after restarts).  If no one from Transarc listed
above (Jaffe, Pahktar, Jess, Fred) can reproduce this with 1.0.3 in the next
two weeks (because of the freeze), then I'll cancel it as unreproducable.

[10/7/93 public]
Not reproducable. Cancelled.



CR Number                     : 8147
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : Appl Development Reference
Short Description             : Error in input parameter.
Reported Date                 : 6/11/93
Found in Baseline             : 1.0.2
Found Date                    : 6/11/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/11/93 public]

The man pages for the following five api's need to be changed:

   from:	sec_login_handle_t	*login_context
	
   to:		sec_login_handle_t	login_context

	- sec_login_get_current_context
	- sec_login_inquire_net_info
	- sec_login_purge_context
	- sec_login_release_context
	- sec_login_refresh_identity

[6/23/93 public]
According to security developers, only sec_login_inquire_net_info 
and sec_login_refresh_identity do not take pointers.  The 
other calls listed above do.  The 1.0.2 app_ref documents this 
correctly.  I am canceling this CR.



CR Number                     : 8065
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : security registry
Short Description             : secd died with fatal error
Reported Date                 : 5/27/93
Found in Baseline             : 1.0.2
Found Date                    : 5/27/93
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : mason@transarc.com
Transarc Status               : open

[5/27/93 public]
I found the following displayed in a window from which I had started secd.
# Registry: Fatal Error - Error while saving database.
 at line 1047 of file ../../../../../src/security/server/rsdb/balanced_trees.c
Registry: Fatal Error - Checkpoint task aborting
 at line 365 of file ../../../../../src/security/server/rs/rs_rsdb.c
Registry: Fatal Error - DT exiting with alert exception
 at line 487 of file ../../../../../src/security/server/rs/rs_main.c - 0x00000000 - successful completion
Registry: Fatal error in main thread; exiting
This was from DCE build, dce1.0.2a-0427
Some history is in order.  The reason I started secd in this window was
that it mysteriously died.  I could not find any data as to why it died, so
I restarted it and everything seemed fine.  I believe this second secd 
ran for about 12 hours.  It died sometime around 5:00am this morning, since
I have an error message from an fts command (run via cron) that indicates
the registry server was not available at this time.
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `mason@transarc.com' 
Added field Transarc Status with value `open'

[5/27/93 public]
You will get that error if a write() failed for some reason while writing
the database out to disk.  The most likely cause of this is the /opt
partition filling up.  Please check to see if this is the case.

[5/27/93 public]
Thanks for the quick response.
I believe that is the correct assessment of the situation.  I in fact had
changed the dfs cache to be it's own separate file system rather than be
part of /opt.  However, it would be nice if this was recorded in a 
standard place that administrators could easily find.  Also, I assume the
errno on the write would be ENOSPC.  So printing the perror of this would
clarify the situation.
Changed Status from `open' to `cancel'

[5/27/93 public]
This kind of error message will be fixed in 1.1 after serviceability work is done.



CR Number                     : 7998
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : sec_admin / lrep -all
Short Description             : lrep -all gives ticket error for Last comm status
Reported Date                 : 05/13/93
Found in Baseline             : 1.0.2
Found Date                    : 05/13/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[05/13/93 public]

Every once in a while I get the following message when I do an lrep -all
command within sec_admin:

	Last comm status: Cannot find ticket for requested realm (dce / krb)

This is the Last comm status for one of two slaves in my cell.  Everything
appears to be working fine if I just do the lrep -all command again.

[05/18/93 public]
This is normal behaviour.  From time to time the slave's ticket expires
and is refreshed.  The master, when communicating with the slave, will
get this auth error (because the ticket has expired). The master
automatically recovers from this error by getting a refreshed ticket from
the slave.

[5/19/93 public]
Since this is normal behavior, there's no defect reported here.
I've marked this CR 'cancel', per Liza's explanation of the behavior.



CR Number                     : 7962
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : acl_edit
Short Description             : user/group entries in ACL with "unauth cell" default realm mapped to storing cell
Reported Date                 : 5/7/93
Found in Baseline             : 1.0.2a
Found Date                    : 5/7/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.


Transarc Deltas                      [text]: 
Transarc Herder                      [text]: jaffe@transarc.com
Transarc Status                      [text]: open

[5/7/93 public]
For a ACL with a foreign cell (e.g. unauthenticated cell), as the
default realm, the uuid put in user entries in the ACL is the uuid of
the user in the storing cell.  Thus when you list the ACL, you do not
get user names but uuids as acl_edit is not able to map the uuid to
names in the "unauthenticated cell". One fix would be to prevent
additon of "user" and "group" entries in an ACL with the
"unauthenticated cell" as default realm, since all unauth users are
mapped into anonymous@anonymousCell anyway and so the user and group
entries in such an ACL will never be used
Similarly for group entries
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[9/28/93 public]
As Tu just pointed out to me, this seems to be a problem with acl_edit not
using the default cell of the ACL when adding user/group entries to that ACL,
If it was using the default realm id and it was the anonymous id, then the
translation of those names wouldn't work and it wouldn't allow you to enter
user or group entries, which would solve the problem.

[7/14/94 public]
Moved to dcecp component for Howard to look at prior to setting status
to defer to 1.2  (dcecp now performs most functions of the control programs)

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.

[8/3/94 public]
Moved back to sec.  I will open another bug for dcecp to make sure dcecp
does not have the same problem.  We here don't completely understand the
problem and HP folks are too overworked right now to explain.  

This really is a severity E since it is just a cosmetic problem.  It has to
do with names being displayed instead of UUID's.



CR Number                     : 7857
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : i486
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : ctrl-c aborts next cmd too in rgy_edit
Reported Date                 : 5/3/93
Found in Baseline             : 1.0.2
Found Date                    : 5/3/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[5/3/93 public]

The control c operation during rgy_edit session is not working properly.
Invoked rgy_edit and during add operation entered control c and return.
rgy_edit came back with an error message and prompt. At prompt, any
commands entered after the above scenerio doesn't work; i.e. rgy_edit
comes back ok without performing that operation.

On PMAX
-------
root@ice  # dce_login cell_admin -dce-
Password must be changed!
root@ice  # rgy_edit                                        
Current site is: registry server at /.../freedom/subsys/dce/sec/master 
rgy_edit=> add tester
Enter account group [gname]: 
?(rgy_edit) ADD command aborted - Required input not found (Registry
Editor/TTY Interface) (dce / sad)
rgy_edit=> do p  		(domain did not changed to principal)
rgy_edit=> do
Current domain is: account


On RIOS
-------
# rgy_edit
Current site is: registry server at /.../freedom/subsys/dce/sec/repl1
(read-only)
rgy_edit=> site -u   
Site changed to: registry server at /.../freedom/subsys/dce/sec/master 
rgy_edit=> do a
Domain changed to: account
rgy_edit=> add osf
Enter account group [gname]: ^C
?(rgy_edit) Unable to add account " - Group name contains an illegal
character (Registry Edit Kernel) (dce / sad)
Do you wish to try again  [y/n]? (n) 
rgy_edit=> add tester		(account tester didn't get created)
rgy_edit=>

[5/3/93 public]
Fixed short description so you can tell what's wrong from just that (the
summary reports we get daily contain just the short description).  Control-c
is working, contrary to what the original description said.  The problem is
that it's aborting the next command too (ie: the TRY/CATCH macros in the cmd
processor catching it twice?)

[7/12/93 public]

This problem is reproducible on 486 hardware platform running osf1.
Changed HW Ref Platform to i486 from pmax.

rgy_edit=> do
Current domain is: account
rgy_edit=> add tester
Enter account group [gname]: 
?(rgy_edit) ADD command aborted - 17083078
rgy_edit=> do p
rgy_edit=> do
Current domain is: account

[8/2/93 public]

Changed owner to mob.

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.



CR Number                     : 7839
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_key_mgmt_generate_key() manpage
is missing
Reported Date                 : 4/29/93
Found in Baseline             : 1.0.2
Found Date                    : 4/29/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/29/93 public]
The manpage for the "deprecated" function sec_key_mgmt_generate_key()
is missing from the current docset (I don't know if it ever existed).  
Even though sec_key_mgmt_generate_key() is deprecated, it is still 
publicly accessible in libdce.a and is referenced in a number of other
manpages (eg, see sec_key_mgmt_gen_rand_key() ).  The manpage for
sec_key_mgmt_generate_key() should be included in the Appl Dev Ref.

[5/5/93 public]
Changing CR type from code to doc.

[6/21/93 public]
According to Mike Burati, this call should not be documented.  
No one should be using it., but it is still in libdce in case 
anyone is still using it.



CR Number                     : 7823
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : rgy_edit exits w/fatal err trying to add org alias
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.2
Found Date                    : 4/28/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : client/admin/rgy_edit/tty_pgo.c
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[4/28/93 public]
I ran this on an older version of 1.0.2 (about a month old, but I don't
remember the number exactly), but someone here tried it on the "latest" and
got exactly the same results.  To reproduce, start rgy_edit (I was logged
in as cell_admin) and then enter the following:

  rgy_edit=> do org
  Domain changed to: org
  rgy_edit=> add blah 8 -al

rgy_edit will exit without a core file, with the following message:

FAULT 0x17083004 at line 8496 of file ../../../../../../src/security/client/admin/rgy_edit/ek_db.c

[5/5/93 public]
Fixed the short description so the summary reports are more informative.
The problem is that it should be checking this before it gets to that point
and letting you know that you can't add an alias in the org domain.  Since
there is a workaround ("don't do that because it's unsupported behavior") I've
downgraded it from 'A' to 'B'.

[5/6/93 public]
Not reproducible on HPUX.  I get: 
rgy_edit=> add blah 8 -al
?(rgy_edit) "-al" - Option not valid in org domain

Please try this again on both RIOS and PMAX and let me know what happens on
each.  Our PMAX hasn't had a build on it in months and our RIOS has been
hanging and not coming back up cleanly many times today so I can't test it
on either of those platforms at the moment.

[5/6/93 public]
Oops, never mind.  I went back to exit emacs and saw the problem as it
disappeared off the screen.  This will be fixed for 1.0.3 as requested.
For those that want the fix for their own use, change the following line
in routine tty_do_add_pgo() in client/admin/rgy_edit/tty_pgo.c
<         if ((domain == eif_domain_person) || (domain = eif_domain_group)) {
---
>         if ((domain == eif_domain_person) || (domain == eif_domain_group)) {
Again, the workaround for the above problem (until you make the fix) is don't
do that because it's not supported.

[7/27/94 public]
This CR either does not affect dcecp or has a related CR open.
It really belongs to rgy_edit and should not be assigned to dcecp.

[8/1/94 public]
All control program bugs are being changed to E4 due to the existance
of dcecp.

[8/26/94 public]
The fix mentioned in the above note [burati 5/6/93] should have been made 
in the routine tty_do_change_pgo() in addition to tty_do_add_pgo().  There
were 2 occurrences of this error in tty_pgo.c.  Only the fix to
tty_do_add_pgo() has made it into the DCE 1.1 source.  For the Sequent
port of DCE 1.0.3, we intermittently get the following error during 
dce_config:

	Are you using multiple LAN's within this cell? (n)

ERROR:  rgy_edit error while adding entries for CDS to the registry
database.
 Message from rgy_edit:
 FAULT 0x17083007 at line 8251 of
  ../../src/security/client/admin/rgy_edit/ek_db.c

We have also fixed the following bug in the function ek_init_op() in
the file ek_db.c:

    case ekn_mem_add_group_member:
    case ekn_mem_add_org_member:
    case ekn_mem_del_group_member:
    case ekn_mem_del_org_member:
        form_clear(clear_op->op_form);
FIX-->  break;

    case ekn_policy_get:
    case ekn_policy_get_effective:
    case ekn_policy_set:
        form_clear(clear_op->op_form);
        break;

     .....

The break statement is missing where indicated and so the form_clear(...)
function is executed twice in certain cases.



CR Number                     : 7822
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : add "do principal" to alias command
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.1
Found Date                    : 4/28/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/28/93 public]
In section 3.4.2 "Creating Aliases" the instructions for adding an alias
are: 

  To create an alias for a principal, invoke rgy_edit and then enter the
  add command in the follwoing form:

    add principal_name unix_ID -al

The instructions should mention to do a "domain principal" principal
command so that the command works.  Note that in the other examples in this
section, "domain" is abbreviated as "do".

[7/13/92 public]
I've canceled this defect.  In Section 3.4.2 of the 
1.0.2 version of the admin guide, it says:

 "invoke rgy_edit and use the domain subcommand to move to the 
  appropriate domain (principal or group)."

I can't remember, but I may have fixed this as part or 6220.



CR Number                     : 7821
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : admin_gd
Short Description             : groups can have aliases
Reported Date                 : 4/28/93
Found in Baseline             : 1.0.1
Found Date                    : 4/28/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/28/93 public]
The descrition in the Admin guide of aliases is incorrect.  It says that
only principals can have aliases, but groups can as well.  Interestingly
enough the rgy_edit(8sec) ref page does say that groups can have aliases.
Section 3.1.3 "Aliases" should change, as well as some part of section 3.5
"Using rgy_edit to Add and Maintain Groups and Organizations".

[7/13/93 public]
This change was made in 1.0.2 for CR6220.  I've canceled this defect.

C
C
C
C
C
C



CR Number                     : 7789
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_key_() APIs should accept same 
authn_services as RPC
Reported Date                 : 4/23/93
Found in Baseline             : 1.0.2
Found Date                    : 4/23/93
Severity                      : D
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/23/93 public]
According to the manpages, the sec_key_mgmt...() calls that have an
authn_service argument will accept only rpc_c_authn_dce_secret or
rpc_c_authn_dce_public (future) values.  Why not the other values defined
in rpcbase.idl, especially rpc_c_authn_default?

Application developers who want the consistency of using rpc_c_authn_default
throughout their code are going to be unhappy.

[07/18/94 public]
The sec_key_mgmt API's generally take two parameters:
	key type
	pointer to key data
If you think of the type/data-pointer as a union, then you see that it
is more-or-less impossible to use rpc_c_authn_default:  you must explicitly
specify which type of key you are using (want to modify).

I think this should be cancelled.

[7/18/94 public]
Ok...

[7/18/94 public]
Yeah, I know... this is 'just' a usability issue.

I'm still not clear on why rpc_c_authn_default can't (shouldn't)
be mapped under the covers to whatever the default is.  Why can 
the programmer use this abstraction in one part of DCE and not another?

[07/19/94 public]
You can't use rpc_c_authn_default because you need to know explicitly
what *type* of key you are sending/receiving so that you can decode the
sec_passwd_rec_t.

Suppose in a future release, DCE 2.x, rpc_c_authn_default changed from
private to public key.  All your code would now still compile, but it
would be totally bogus.

[7/19/94 public]
Ditto what Rich says...  The authn_default is mainly so you can say to just use
whatever authentication method is the default for what you're currently doing.
When you store a key using the key management functions, you are storing a
specific type of key, to be used for a specific purpose and a specific authn,
you can't just let it pick for you.

[07/20/94 public]
Ok, got it.  Thanks guys.



CR Number                     : 7772
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Leaks when setting-up/refreshing login identity
Reported Date                 : 4/21/93
Found in Baseline             : 1.0.1
Found Date                    : 4/15/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[4/21/93 public]
While debugging memory leaks in the DFS ftserver some security-related
leaks were found.  When preparing for a fileset move, the ftserver
establishes a login context in order to talk to another ftserver.
I've included some rough memory usage numbers (from ps output).
After calling each of the following routines, memory usage has
increased by the specified amount:
        sec_login_setup_identity:       112k
        sec_login_valid_from_keytable:  56k
        rpc_binding_set_auth_info:      20k
Are these numbers reasonable?  I guess I could be convinced that they
were an expected one-time cost; however, on subsequent move requests,
the ftserver refreshes its login context, causing even more memory to
be allocated:
        sec_login_refresh_identity:     28k
        sec_login_valid_from_keytable:  12k
The second set of numbers are actually more troublesome, since the
growth occurs each time a fileset is moved (actually, twice each time).

[4/21/93 public]
Changed Interest List CC from `jaffe@transarc.com' to `jaffe@transarc.com, 
 cfe@transarc.com'

[4/21/93 public]
Uhh.  Just because I don't get around to answering a query by mail doesn't
mean that it's an A1 bug.  Priority dropped because there's a workaround
(restart your ftservers when they get too big; don't refresh the login
context unless it needs it..)
There is significant caching in RPC and security which will not reach
steady state until after 15-20 minutes or so; as a result, it makes much
more sense to recycle existing login contexts, and to defer doing login
context refreshes, until they're actually needed.  I don't know what kind
of ticket lifetimes you're using in the servers, but you should only
refresh if you don't have enough lifetime to be certain of completing the
transaction.
Note that long-running RPC's in progress at the time of expiration will
continue to completion; expiration is only checked at the start of a call.

[4/21/93 public]
Changed Interest List CC from `jaffe@transarc.com, cfe@transarc.com' to 
 `jaffe@transarc.com, cfe@transarc.com,demail1!carl' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[10/20/93 public]
 
Not really a P1 bug.  I haven't had a chance to determine whether this is a
real bug or whether they're just not using the security services correctly.
as they aren't beating my door down looking for a bug fix to this, I have
to assume it can be deferred to 1.1 ...

[04/12/95 public]
One and half year after the last update to this ot ...

IBM ghas sent in some new information regarding to this problem. They use 
DCE 1.0.3 on RS/6000. This is important for them:

When making security API calls to sec_login_*() to setup, validate and purge
an identity in a tight loop (ie one set of these calls per 10 seconds or
less), the process grows by about 10k per loop.  If the program slows down for
about a minute, some of the growth is recouped, but under constant load, the
process continues to grow indefinitely.  This is causing the DCE Application
server to run out of memory (and pretty quickly!).

Repeat By:

main() {
    while(1) {
        sec_login_setup_identity();
        sec_login_validate_identity();
        sec_login_purge_context();
    }
}

You will see that the process grows very fast.

Proposed Solution:

We have no solution.  But:

the RPC auth_info cache (comauth.c) never makes a hit on the cache lookup.
the auth_identity field is never matched.  This is because the calls to
sec_login_setup_identity() and sec_login)certify_identity() malloc new
memory for the login_context that is passed in before doing the auth_info
lookup.  Therefore, the auth_identity field of the auth_info structure
(which is actually a cast of the krb_info structure) will never match anything
in the cache, because part of the lookup key is newly malloc'ed memory, and
it is comparing structure addresses.  When a cache lookup fails, the RPC
runtime assumes that the info is not in the cache, and should be in it, so
it adds the new auth_info structure to the cache.  Since no hits are being
made, the cache grows linearly on each lookup call.

We tried disabling the cache altogether.  We figured since the cache was never
registering a hit, and a call was always being made to the DCE security service
anyways, if we eliminated the cache we would not encounter a performance hit
(it actually should be faster, since the failed cache lookup is avoided), and
the leak would go away.  This was not so.  When we bypassed the auth_info cache,
The process still grew at the same rate.  The culprit now was the krb_info_t
structure.  This structure is a field of the sec_login_context_t
structure, and is used by the RPC runtime also.  It is very hard to keep
track of this structure, because it is cast to different types in different
components.  It appears that there is a reference count on the sec_login_context
_t, as well as a reference count on the rpc_auth_info_t structure
and these counts are never being sent back down to 0 when repeated calls to
the DCE security API are made.  There is definitely a correlation between these
two structures, but it is not clear what it is.

[04/12/95 public]
I worked with Paul Highley @ IBM on this a few months ago and
thought I had demonstrated that this apparent leak was a result
of rpc holding onto connection info, which references auth info,
keeping login contexts alive for a while after they're purged.
The numbers at 1.0.3 were 5-minute thread wakeups and 10-minute
timeouts; after inserting a >15m sleep outside a sample program's
for loop, the malloc space was freed.  If this isn't true on their
port, the problem report may be platform-specific...

[2/2/96 public]
The original report above was just confusion about what was occurring when
you executed those API calls.  The later information showed that there was
a leak refreshing/purging and the ilk...  During our 1.1 cleanup, we ran
extensive memory analysis runs over this stuff to get rid of the leaks and
believe that we got rid of the ones that were occurring on HPUX (as told to
us by Purify).  IBM has found some more with their analysis, that only occur
on AIX (because it's rpc_string_free() is not equivalent to free() as it is
on HPUX), and OTs with real info have been opened for those.  Since this OT
doesn't refer to a specific leak, but rather to what was a combination of
all those other leaks reported, I'm cancelling this report and we'll work
from the others.

[2/5/96 public]
We have a local bug tracking this problem. Any chance you know the
other OT numbers relevant to this problem?

[2/5/96 public]
Some subset (or all) of the following could cause memory leaks in a test
program like the one described above.  The reason for addressing those
instead of this more general report is that those have actual information
that we can use to track down the problem with.  Just knowing that something
grows does not mean there's a leak, given the number of caches and RPC contexts
that get set up during the above operations.  Knowing it grows without bound
because of a leak gives us something to go on.  Note that most of the OTs
I list below were opened by Gerry Thome at IBM.

13008 C 2 05/23/95 Mem leak in security API's
13007 C 2 10/10/94 rpc_binding_free misplaced in rca_rebind()
13005 C 3 06/16/95 mem leak rca_site_bind_nsi_cell_if()
13000 C 2 08/02/95 Inconsistent malloc()/free(), memory leakage
12976 C 2 07/25/95 Memory leak in krb5_free_last_req()
12975 C 2 07/25/95 rpc_mem_string memory leak( rca_setup_handle)
12970 C 2 07/25/95 memory leak in sec_login_validate_cert_auth()
12969 C 2 07/25/95 memory leak in sec_login_pvt_get_local_login_info()
12968 C 2 07/25/95 sec_rgy_site_close() leaks memory



CR Number                     : 7757
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : Secd core dump.
Reported Date                 : 4/20/93
Found in Baseline             : 1.0.2
Found Date                    : 4/20/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/20/93 public]

This *might* be a secd problem or it may be a dup of a defered threads
bug, 2995. Ignore the cma__vo_interrupt line in the trace, it's a red
hearing. In fact it's only called from within code bracketed by 
_CMA_THREAD_IS_VP_ which is supposed to be , and is - I asked cpp, turned
off. The rest of the trace makes sense if secd took a SIGIOT==SIGABRT.
This is only done by the bug_check routine and is supposed to indicate
an internal cma error. We know from past experience however that a 
a call to cma__error with the cma kernel lock in hand will trigger
the bug check. The call to cma__error may have been the result of
a problem in the app. Ot 2995 addresses the bug check side affect.
The following trace occurred in a system test after 52 hours.
I'm not convinced this is a security bug, it probably a dup of 2995
but it might not be. I want to open this to let people look at the
data to see if any bells go off. If the bells are silent and it doesn't
present itself again any time soon we'll dup it to 2995. 



GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.5, Copyright 1992 Free Software Foundation, Inc.

OSF version 1.0 created Thu Dec  3 12:48:59 1992

..(no debugging symbols found)...
Core was generated by `secd'.
Program terminated with signal 6, IOT/Abort trap.
#0  0x73055b48 in _auxv ()
(gdb) b __start
Breakpoint 1 at 0x400000
(gdb) r
Starting program: /usr/ucb/secd

Breakpoint 1, 0x400000 in __start ()
(gdb) kill
Kill the inferior process? (y or n) y
In Local core dump file,
#0  0x73055b48 in kill ()
(gdb) bt
#0  0x73055b48 in kill ()
#1  0x73141ec8 in cma__abort_process ()
#2  0x7312416c in exc_raise ()
#3  0x731244ec in exc_pop_ctx ()
#4  0x7316ac38 in cma__thread_base ()
#5  0x7317a9c0 in cma__vp_interrupt ()
Cannot access memory at address 0x2bd226ed.
(gdb) info reg
zero(r0): 0; at(r1): 0xffffffff; v0(r2): 0; v1(r3): 0x1;
a0(r4): 0x12c; a1(r5): 0x6; a2(r6): 0x101fca18; a3(r7): 0;
t0(r8): 0x735308d0; t1(r9): 0; t2(r10): 0; t3(r11): 0;
t4(r12): 0; t5(r13): 0; t6(r14): 0; t7(r15): 0;
s0(r16): 0x12; s1(r17): 0; s2(r18): 0; s3(r19): 0;
s4(r20): 0; s5(r21): 0; s6(r22): 0; s7(r23): 0;
t8(r24): 0; t9(r25): 0; k0(r26): 0; k1(r27): 0x730558c4;
gp(r28): 0; sp(r29): 0x101fca40; s8(r30): 0x101fca60; ra(r31): 0x73141ec8;
sr: 0; lo: 0; hi: 0; bad: 0;
cause: 0; pc: 0x73055b48; fp: 0x101fca40; inx: 0; rand: 0; tlblo: 0;
ctxt: 0; tlbhi: 0; epc: 0; prid: 0;
(gdb) x/16i $pc-32
0x73055b28 <ioctl+20>:  lw $v1,3648($v1)
0x73055b2c <ioctl+24>:  nop
0x73055b30 <ioctl+28>:  jr $v1
0x73055b34 <ioctl+32>:  nop
0x73055b38 <ioctl+36>:  jr $ra
0x73055b3c <ioctl+40>:  nop
0x73055b40 <kill>:      li $v0,37
0x73055b44 <kill+4>:    syscall
0x73055b48 <kill+8>:    beq $a3,$zero,0x73055b64 <kill+36>
0x73055b4c <kill+12>:   nop
0x73055b50 <kill+16>:   lui $v1,29446
0x73055b54 <kill+20>:   lw $v1,3652($v1)
0x73055b58 <kill+24>:   nop
0x73055b5c <kill+28>:   jr $v1
0x73055b60 <kill+32>:   nop
0x73055b64 <kill+36>:   jr $ra

[4/20/93 public]

My guess here is that we're seeing an unhandled exception.

Did you see any output from secd on stdout?

Try adding rs_task_fatal to the list of things-to-set-breakpoints-in.

rs_task_fatal should just call abort rather than pthread_exit; if secd hits
a fatal error, it should blow up.

I think the only reason why this isn't the case was that on Domain/OS,
abort sometimes didn't kill the process if the process was inhibited (a
aegis-ism roughly comparable to having all signals blocked or all
interrupts disabled).

[4/20/93 public]
Changing State from open to defer for 1.0.3.

[8/9/93 public]

No one (including John) has seen this problem since it was opened.



CR Number                     : 7707
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : sec_admin
Short Description             : lrep sub-command only prints
partial name for Default replica when x.500 style cell name is used.
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2
Found Date                    : 4/13/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/13/93 public]

Using dce1.02-weekly builds this morning, configured a RIOS Master and
2 pmax slaves in a single cell using x.500 type name. Invoked sec_admin on 
rios master and got the following:

sec_admin> lrep
Default replica:  /.../c=us/o=bob_the_chefs
Default cell:     /.../c=us/o=bob_the_chefs


subsys/dce/sec/master (master)

subsys/dce/sec/repl1

subsys/dce/sec/repl2

sec_admin> site
Default replica:  /.../c=us/o=bob_the_chefs
Default cell:     /.../c=us/o=bob_the_chefs

[4/13/93 public]
This is not quite what I pictured from your description on the phone.
You said that when you do a lrep, you don't see the subsys/dce/sec/master
name in the list of replicas.  You did according to the above.  I assume
what you are complaining about is the "Default replica" label.  This has
nothing to do with the replica list command.  This is the name that the
sec_rgy_site_bind() call resolved to.  If you can resolve from the cell
name to /.:/cell-profile, then to /.:/sec, then to /.:/subsys/dce/sec/master
THEN you will see the full name for the  Default replica name.  Given
that all you see is the cellname, that means you couldn't resolve through
the namespace to /.../cellname/subsys/dce/sec/replica, so it used the cell
name that you gave it to get the bindings out of the pe_site file.  So,
the question is "Should you be able to resolve via NSI/CDS the name
/.../c=us/o=bob_the_chefs/cell-profile and similarly for /.../c=us/o=
bob_the_chefs/sec and /.../c=us/o=bob_the_chefs/subsys/dce/sec/master "???
If you can't do this with cdscp and rpccp, then you won't be able to resolve
bindings that way with sec_admin or rgy_edit, so try the naming tools first
to figure out what's wrong.

[4/13/93 public]

Mike, the rpccp show entry /.../c=us/o=bob_the_chefs/subsys/dce/sec/master
command worked ok. By forcing the site to master using sec_admin, it worked.

sec_admin> site /.: -u
Default replica:  /.../c=us/o=bob_the_chefs/subsys/dce/sec/master
Default cell:     /.../c=us/o=bob_the_chefs

sec_admin> lrep
Default replica:  /.../c=us/o=bob_the_chefs/subsys/dce/sec/master
Default cell:     /.../c=us/o=bob_the_chefs


subsys/dce/sec/master (master)

subsys/dce/sec/repl1

subsys/dce/sec/repl2

[4/14/93 public]
As I noted above, you must be able to bind through /.:/cell-profile and
/.:/sec to be able to see the full replica name.  Forcing it to an update
site is a different case, because it asks the server for it's name in that
case...  To make this easier, I've included the commands you'll need to try
in order to check what I talked about above:
site /.:/subsys/dce/sec/master
site /.:/sec
site /.:/cell-profile
site /.:
site /.../c=us/o=bob_the_chefs/subsys/dce/sec/master
site /.../c=us/o=bob_the_chefs/sec
site /.../c=us/o=bob_the_chefs/cell-profile
site /.../c=us/o=bob_the_chefs
and let us know which of these work.

[8/2/93 public]

Rajendra, is this *really* broken given Mike's latest instructions,
on any of the *current* reference platforms?  Please update this
bug or cancel.



CR Number                     : 7703
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : app_gd
Short Description             : better DCE ACL description
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2
Found Date                    : 4/13/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/13/93 public]

One of the notes in the FAQ is by Joe Pato giving an explanation
of DCE ACLs.  It looks like it goes in the App Dev Guide.  I think
it belongs in the security section, even though some info is on
binding.


From: pato@apollo.com (Joe Pato)
To: dce-tech@osf.org
Subject: SEC: Object UUIDs and ACLs
Date: Mon, 1 Jul 91 10:22:35 EDT

Dick asked that I re-iterate my comments from the 6/27 tele-conference about
the server binding model used in the DACL interface (and the attending need for
object UUIDs by servers that export this interface).  I'll avoid repeating the
description of the end-point mapper and the attendant forwarding problems.

The DCE ACL interface is a generic interface - unlike most (all?) of the other
interfaces in existing DCE components, the DACL interface is exported by
multiple DCE components.  The benefit of using a generic ACL interface is that
a single editor (the one supplied with the DCE - or a better one written by an
application developer) will work with all acl objects in the distributed
environment.   The price paid for this feature is that the DACL interface
UUID is not sufficient information for obtaining a binding to a server.  (This
problem also exists for internal RPC interfaces - which by definition are also
generic, e.g., rpc_mgmt, NULL authentication principal).

Servers that export the DACL interface must register an object UUID in the
namespace.  Such a server must use a real UUID (i.e., not use uuid nil) to
distinguish it from other unrelated servers on the same machine.


Below follows some more detailed information on how binding works via the DACL
interface.  It may be too detailed for many dce-tech readers.  Feel free to
ignore this section.


The network interface for DACLs (rdaclif.idl) is simply a set of operations on
dacls using an RPC handle.  The API to DACLs adds a (actually two) binding
operations to generate the appropriate handle.  The primary binding operation
takes a global pathname to the object whose acl is to be manipulated.

The general binding mechanism is as follows:

The pathname is resolved as far as possible through the global name system
and divided into the object's name and a residual component name.  An RPC
binding is obtained by importing the object's name.  This binding is obtained
without an object UUID (since the calling application does not know the UUID of
the target object - just the name) and by specifying the undefined interface
(We could have performed the import operation by specifying the ACL interface,
but this would have meant that all nodes in the CDS would have to have an entry
for this interface greatly increasing the size of simple name system nodes for
little advantage).

Upon obtaining an RPC binding handle, the name system entry is then re-read to
extract the object UUID registered with the node (if more than one object UUID
is registered at the name the first is used).  At this point the object UUID is
injected into the RPC binding handle and remote DACL operations may proceed.

There are three cases we should examine (all three cases use the same mechanism
outlined above - but it is sometimes easier to understand what is happening if
we break out the cases)

    1) The pathname names an internal node in name system.
    2) The pathname names an object outside the name system through a
        junction point.  (I.e., the name is overqualified and names a 
        database entry).
    3) The pathname names a leaf node in the name system.

In case 1 the node is a directory entry native to CDS.  The CDS server will
conjure up the appropriate response to the binding request providing the CDS
server's own binding information.  The object UUID provided in this case is the
directory's own UUID.

In case 2 the node is outside the CDS and is found via a major junction point
in the name system.  The binding information is obtained from the leaf node in
the CDS and the residual component name is that portion of the name that is
beyond the junction point.  The object UUID is the first object registered at
the major junction point.  The target server (named by the leaf node)
determines the actual DACL object to manipulate by examining the residual
component name (In general this case only works for a single major protocol
junction - if the residual component name passes through yet another major
junction point, the client side will remain ignorant of the proper target
server).

Case 3 is slightly more complex.  In this case we might be operating on two
different objects.  The user may wish to change the DACL associated with the
CDS entry for a server (all CDS entries have DACLs) or the user may be trying
to set an acl at the target server named by the entry (i.e., a printer manages
a single DACL controlling who may use the different types of paper.  This is
distinct from the DACL controlling who can manipulate the name space entry). 
Since this is a common case (it applies to all leaf nodes in the CDS) the
binding interface (and the acl editor UI) allows the client to inform the
runtime if the operation should be performed at the target server or at the
catalog point.


Case 3 is really an example of a polymorphic object (the name resolves to both
an node in the name system and a target server on which the operation is
meaningful).  Polymorphism can also exist at other levels in the name space -
since directories can support full server entry attributes.  This means that
case 1 and case 3 are really the same in practice (and that case 1 is simply a
convenient way of thinking about operating on name system nodes, but that it is
really a subset of case 3)

Polymorphism also exists outside the CDS.  The primary reason the security
services do not allow directories to be principals is due to this.  The DACL
interfaces recognize the potential for polymorphism and allow an DACL manager
to inform the client that a given entry contains multiple ACLs controlling
different aspects of the entry (e.g., the DACL controlling manipulation of
principal data and the DACL controlling the manipulation of the name space
because the node is a directory)  Polymorphism in the CDS is much more common
than outside and we have a convenient mechanism for dealing with the issue. 
Details are available for the curious.  For nodes outside the CDS this
mechanism is unavailable and the editor interactively prompts the user to
select the acl type on which to operate.


Earlier I alluded to a second binding operation.  This operation allows the
client to obtain an rpc string binding to the target server and the residual
component name via its own means.  (This operation was necessary before the
availability of the CDS for integration, but is useful even in the presence of
a working CDS).

- joe
-------

[6/22/93 public]
Changed "Fix By Baseline" from 1.0.3 to 1.1.

[millette 9/1/94 public] 
Checked with Peter Nelison.  This CR is his.

[9/8/94 public]
Cancelling this CR.  The work requested in this CR has been accomplished in
the course of other work.  According to Rich Salz, there is nothing here
that could now be used to improve any of the DCE books.

[9/8/94 public]
Changed typo "closing" to "cancelling" in paragraph above.



CR Number                     : 7663
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : test
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : mx300
S/W Ref Platform              : sinix
Component Name                : sec
Subcomponent Name             : test/security/api/control/{local_rgy.tshrc, passwd_override.tsh, passwd_over.tshrc}
Short Description             : RCS revision lines are not commented out in scripts and cause warnings when the shell tries to execute them
Reported Date                 : 4/7/93
Found in Baseline             : 1.0.1
Found Date                    : 4/7/93
Severity                      : E
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/7/93 public]

Looks as if the RCS comment string was not set correctly.

----------------------
Full Description:

     In all three of these files, there are Revision comments at the beginning
     of each script which are not preceded by the hash mark symbol.  This
     produces warnings in the test logs.

Proposed Solution:

     Place hash symbols in front of the above mentioned lines of code.
----------------------

     Set the RCS comment string properly on the three files.

Here is some additional correspondence:

I wrote:
I checked the three files you mention. The current versions don't have
that problem. But I also checked the 1.0.1 versions that came off the
tape and they don't have that problem either. In particular, OSF
strips off revision comments before shipping. Can you send me a
sample so that I can follow it up with the SysV people?

Here is, for example, the 1.0.1 passwd_over.tshrc in its entirety:

# (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC.
# ALL RIGHTS RESERVED
#
# OSF DCE Version 1.0, UPDATE 1.0.1

set passwd_override_setup=1
set passwd_override_test=2
set passwd_override_reset=3

and he answered back:

     Upon further examination, it appears that USL may be responsible for the
bug.  It appears the modifications made by the person with login name
hinman are what causes the problems.  I have included the files that you
requested.

                                                  Greg

----------------------------------------------------------------------
 /src/test/security/api/moretests/local_rgy.tshrc:

# @OSF_COPYRIGHT@
#
# HISTORY
# $Log:	c007663,v $
# Revision 1.6  94/03/15  17:01:03  nata
# added the Created HISTORY line
# 
# Revision 1.5  93/10/26  16:07:14  notuser
# changed fields: Status  
# 
# Revision 1.4  93/08/12  16:42:18  notuser
# changed fields: H/W Ref Platform  S/W Ref Platform  Responsible Engr.  Resp. Engr's Company  
# 
# Revision 1.3  93/08/11  18:22:41  notuser
# changed fields: Component Name  Responsible Engr.  Resp. Engr's Company   new/changed/deleted note(s) [pellis 08/11/93 public]
# 
# Revision 1.2  93/06/16  14:27:16  notuser
# changed fields: Priority  
# 
# Revision 1.1  93/04/07  09:15:44  notuser
# new CR
# 
# Revision 1.1  1992/12/01  17:16:38  winstall
# #000003 (main)
# USL Early Access release
# Note:  this does not include src/file, src/diskless, src/test/file,
# src/test/diskless, src/libdcedfs, src/PMAX, src/dce_rc_files, src/min_rc_file
s,
# /src/nosupport, src/ode_rc_files, /src/custom/rlib/SINIX/src_ro
#
Revision 9.5.1.1  92/07/24  18:30:39  hinman
Create merge branch

Revision 9.5  92/07/24  18:30:37  hinman
Update checkin

Revision 1.1  92/07/24  07:43:21  hinman
Update

# Revision 1.1.2.2  1992/05/28  20:55:17  cuti
#    Created variable for subcases of local_rgy test.
#
#    Setup two subcases variable.
#    [1992/05/28  18:11:32  cuti]
#
# $EndLog$


# local registry.tshrc

set max_entries_10=1
set max_entries_5=2

------------------------------------------------------------------------
src/test/security/api/control/passwd_override.tsh


# @OSF_COPYRIGHT@
#
# HISTORY
# $Log:	c007663,v $
# Revision 1.6  94/03/15  17:01:03  nata
# added the Created HISTORY line
# 
# Revision 1.5  93/10/26  16:07:14  notuser
# changed fields: Status  
# 
# Revision 1.4  93/08/12  16:42:18  notuser
# changed fields: H/W Ref Platform  S/W Ref Platform  Responsible Engr.  Resp. Engr's Company  
# 
# Revision 1.3  93/08/11  18:22:41  notuser
# changed fields: Component Name  Responsible Engr.  Resp. Engr's Company   new/changed/deleted note(s) [pellis 08/11/93 public]
# 
# Revision 1.2  93/06/16  14:27:16  notuser
# changed fields: Priority  
# 
# Revision 1.1  93/04/07  09:15:44  notuser
# new CR
# 
# Revision 1.1  1992/12/01  17:16:50  winstall
# #000003 (main)
# USL Early Access release
# Note:  this does not include src/file, src/diskless, src/test/file,
# src/test/diskless, src/libdcedfs, src/PMAX, src/dce_rc_files, src/min_rc_file
s,
# /src/nosupport, src/ode_rc_files, /src/custom/rlib/SINIX/src_ro
#
Revision 9.5.1.1  92/07/24  18:30:32  hinman
Create merge branch

Revision 9.5  92/07/24  18:30:30  hinman
Update checkin

Revision 1.1  92/07/24  07:43:19  hinman
Update

# Revision 1.1.2.2  1992/05/21  21:44:03  cuti
#     Setup passwd_override test cases.
#    [1992/05/21  19:42:21  cuti]
#
# $EndLog$


# Passwd_override.sh


echo
echo Begin passwd_override.sh test.
echo


include passwd_over.tshrc

set TEST=passwd_override.sh


test $TEST \
"Test without passwd_override file." \
$passwd_override_setup

test $TEST \
"Test with passwd_override file." \
$passwd_override_test


test $TEST \
"Test with passwd_override file." \
$passwd_override_reset



echo

subtotal clear
summary

echo
echo End passwd_override tests.
echo

# End of passwd_override.sh

------------------------------------------------------------------------
src/test/security/api/control/passwd_over.tshrc


# @OSF_COPYRIGHT@
#
# HISTORY
# $Log:	c007663,v $
# Revision 1.6  94/03/15  17:01:03  nata
# added the Created HISTORY line
# 
# Revision 1.5  93/10/26  16:07:14  notuser
# changed fields: Status  
# 
# Revision 1.4  93/08/12  16:42:18  notuser
# changed fields: H/W Ref Platform  S/W Ref Platform  Responsible Engr.  Resp. Engr's Company  
# 
# Revision 1.3  93/08/11  18:22:41  notuser
# changed fields: Component Name  Responsible Engr.  Resp. Engr's Company   new/changed/deleted note(s) [pellis 08/11/93 public]
# 
# Revision 1.2  93/06/16  14:27:16  notuser
# changed fields: Priority  
# 
# Revision 1.1  93/04/07  09:15:44  notuser
# new CR
# 
# Revision 1.1  1992/12/01  17:16:49  winstall
# #000003 (main)
# USL Early Access release
# Note:  this does not include src/file, src/diskless, src/test/file,
# src/test/diskless, src/libdcedfs, src/PMAX, src/dce_rc_files, src/min_rc_file
s,
# /src/nosupport, src/ode_rc_files, /src/custom/rlib/SINIX/src_ro
#
Revision 9.5.1.1  92/07/24  18:30:34  hinman
Create merge branch

Revision 9.5  92/07/24  18:30:33  hinman
Update checkin

Revision 1.1  92/07/24  07:43:20  hinman
Update

# Revision 1.1.2.2  1992/05/21  21:47:11  cuti
#     Create passwd_override test subcase variables.
#    [1992/05/21  19:44:42  cuti]
#
# $EndLog$

set passwd_override_setup=1
set passwd_override_test=2
set passwd_override_reset=3

[08/11/93 public]
Assigned to Rajendra since this is a security functional test issue.



CR Number                     : 7630
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Update ops to a slave returning wrong error codes
Reported Date                 : 4/1/93
Found in Baseline             : 1.0.2
Found Date                    : 4/1/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/1/93 public]

Using nightly build available on 4/1 AM, configured a RIOS Master and three
PMAX slaves. Using rgy_edit added/deleted few principals binding to the
master site. When bound to a replica site, adding/deleting principals
using rgy_edit gives incorrect messages as follows:

rgy_edit=> site -u
Site changed to: registry server at /.../freedom/subsys/dce/sec/master 
rgy_edit=> add xyz
rgy_edit=> add abc
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/freedom                               101
hosts/barge/self                             102
hosts/barge/cds-server                       103
hosts/barge/gda                              104
hosts/zippy/self                             105
hosts/ice/self                               106
hosts/gnocci/self                            121
testp                                        122
testp1                                       123
testp2                                       124
xyz                                          125
abc                                          126
rgy_edit=> site  /.../freedom/subsys/dce/sec/repl3 
Site changed to: registry server at /.../freedom/subsys/dce/sec/repl3 
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/freedom                               101
hosts/barge/self                             102
hosts/barge/cds-server                       103
hosts/barge/gda                              104
hosts/zippy/self                             105
hosts/ice/self                               106
hosts/gnocci/self                            121
testp                                        122
testp1                                       123
testp2                                       124
xyz                                          125
abc                                          126
rgy_edit=> site
Current site is: registry server at /.../freedom/subsys/dce/sec/repl3 
rgy_edit=> del xyz
Please confirm delete of name "xyz" [y/n]? (n) y
?(rgy_edit) Unable to delete principal "xyz" - User not authorized to
perform operation (Registry Edit Kernel) (dce / sad)
rgy_edit=> add pqr
?(rgy_edit) Unable to add principal  "pqr" - Principal quota exhausted (dce
/ sec)

rgy_edit=> site -u
Site changed to: registry server at /.../freedom/subsys/dce/sec/master 
rgy_edit=> add pqr
rgy_edit=> del xyz
Please confirm delete of name "xyz" [y/n]? (n) y
rgy_edit=> v
nobody                                        -2
root                                           0
daemon                                         1
sys                                            2
bin                                            3
uucp                                           4
who                                            5
mail                                           6
tcb                                            9
dce-ptgt                                      20
dce-rgy                                       21
cell_admin                                   100
krbtgt/freedom                               101
hosts/barge/self                             102
hosts/barge/cds-server                       103
hosts/barge/gda                              104
hosts/zippy/self                             105
hosts/ice/self                               106
hosts/gnocci/self                            121
testp                                        122
testp1                                       123
testp2                                       124
abc                                          126
pqr                                          127

[4/1/93 public]
Fixed the short description.  This is not a rgy_edit bug, it's secd passing
back the wrong error codes.  I have no idea what they might have changed to
cause this, so I'll leave it assigned to myself until I figure out where these
error codes are being set...

[4/1/93 public]
This is not reproducible on HPUX (it always gives me the correct not master
error).  Were you seeing this in the hosed cell that you had, which wasn't
doing propagations correctly either?  Can you reproduce it in a fresh cell?

[4/2/93 public]
Latest status:  This is not reproducible on HPUX or RIOS.  It was reproducible
once this morning by Raj, but now he can't reproduce it (even configured extra
PMAX slaves this time and still can't reproduce it).

[4/2/93 public]
Lowering severity/priority to B/2 from A/1. I will try to duplicate this
again and if this is not re-producable will cancel it.

[8/2/93 public]

Rajendra, please reproduce or cancel this bug as you said you would
4 months ago.



CR Number                     : 7616
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 
Short Description             : rgy_edit doesn't warn on date input error
Reported Date                 : 3/30/93
Found in Baseline             : 1.0.2
Found Date                    : 3/30/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/26/96]
cancel - addressed in DCE1.2.2.

[3/30/93 public]
A complaint from "the field":

In DCE rgy_edit you can change the good_since date and time 
using the change facility. You can either change it to the
current time using 'now' or to a specified date and time. 
If you make an error in putting in the time separator, it doesn't
warn you of such, and defaults the time to 00:00 of the day
specified. 
I would like it to warn you if it detects any erroneous input.
It does if you put in an incorrect time, or if you put in a bad
separator in the date or time, but not if you put a bad marker
between the date and time (i.e. not a dot '.')
This seems to cause it to ignore the time field and use the default
value (00:00). It should warn you.
If an administrator makes such an error when trying to invalidate
tickets on a compromised account, they may leave the system open
to a hacker already on the system, with still valid tickets.

How about at least putting in friendlier prompts?  Ie,
Good since date [yy/mm/dd.hh:mm or 'now']:
instead of
Good since date [yy/mm/dd or 'now']:

[3/30/93 public]

A confirmation message of "mumblemumble date set to yy/mm/dd.hh:mm" would
also help here.

[3/31/93 public]
This is a request for more syntax checking (functionality which isn't there,
not functionality that doesn't work) so I made this an enhancement (if we
had a defect open for all the places where better checking could be done, we'd
have a defect density that would keep 1.0.2 from freezing forever...).
I changed the fixby field to 1.0.3, since there's no way they'd let this into
1.0.2 at this time anyway.  Note: the prompts will all be worked on for the
1.1 serviceability/i18n work anyway, so we'll make them "friendlier" as part
of that work.



CR Number                     : 7606
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security rca binder
Short Description             : b21 binding problems
Reported Date                 : 3/29/93
Found in Baseline             : 1.0.2
Found Date                    : 3/29/93
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.2a
Fixed In Baseline             : 
Affected File(s)              : binding.c, internal_binding.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[3/29/93 public]
  Looking at the code differences between b15 and b20 reveals
significant changes in the update/query bindings operations
(sec_rgy_site_bind_{update,query}). This bug begins its life as an
inquiry as to whether or not the described behavior has ever been seen
before and whether or not it has already been fixed.
  While running a test script under b15, registry handles returned by
sec_rgy_bind_site_update() invariably provoke "unknown reject (dce/
rpc)" errors as soon as they are passed to any sec_rgy_ routine (namely,
sec_rgy_acct_user_replace() or sec_rgy_pgo_add() ). Converting these
calls to be calls to the more general sec_rgy_site_bind() routine (which
has the same parameters) makes these errors vanish without any other
changes to the code or script. The script runs indefinitely after this
change is made, but cannot survive the first use of the handle
otherwise.
  Looking at the b15 code, it appears that the problem must lie within
(or below) the scope of rca_site_resolve_update() .
  We have not yet advanced to b20 and so I am unable to verify the
presence of this behavior in that baselevel. This was observed on a
one-node cell running b15 on SunOS 4.1.3 using udp protocols
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[3/29/93 public]
  I edited the above to read 'b15' instead of the erroneous 'b17'.

[3/30/93 public]
As noted above, this problem has been seen on SunOS which is currently not
part of the reference platforms supported. Also, you are using a build
which is not current; i.e. b20. If this problem is seen on the reference 
platforms using b20, we will address this issue for 1.0.2. Rather than 
cancelling this bug at this time, I'm making it priority 2.

[4/13/93 public]
  This was seen again on a b20 SunOS4 build here at Transarc. A script
log of the ITL image in progress, at DEBUG_SEC level nine, perhaps
shines a light on the bindings. Another log (longer) with RPC tracing
enabled to the hilt, can also be provided. As this is not seen on a
reference platform (yet: ITL build problems here prevent a RIOS check) I
will continue snooping around until I find it. This absolutely blocks
replication testing for SunOS here.
  Again, I emphasize that running this same script in the same
(one server and one node) cell with the two verbs
"rgy_site_bind_update" and "rgy_site_bind_query" replaced by simple
"rgy_site_bind" verbs (settable in the first lines of the script, below)
results in this problem not being seen. I'll review the (simple) script
implementations of those commands, but they are honestly cut'n'paste of
the "rgy_site_bind" routine.
  I will start by double-checking the binding auth info structure I pass
to the routine... but again, it works *fine* for sec_rgy_site_bind() .
		   ---- ---- ---- ---- ---- ---- ----
		   ---- ---- ---- ---- ---- ---- ----
		   ---- ---- ---- ---- ---- ---- ----
k2# setenv DEBUG_SEC 9 6
k2# !-2
./replication.csh~
CHO_3DOT_CELL_NAME was not set, guessing /.../k2.dce.transarc.com
( You may ignore any "Warning" message that immediately follows. )
^[[1] (0:00) --- The test is starting on Tue Apr 13 11:18:05 1993
 [1] (0:01) --- *:
 [1] (0:01) --- *: set BIND_2_UPDATE "rgy_site_bind_update"
 [1] (0:01) --- *: set BIND_2_QUERY  "rgy_site_bind_query"
 [1] (0:01) --- *:
 [1] (0:01) --- *: *
 [1] (0:01) --- *: * Read the environment for test parameters. Provide useful defaults.
 [1] (0:01) --- *: *
 [1] (0:01) --- *: getEnv CHO_DURATION_H
 [1] (0:01) --- *: if ( $CHO_DURATION_H == "" ) { set CHO_DURATION_H 48 } else
 [1] (0:01) --- *:   { set CHO_DURATION_H ( 0 + $CHO_DURATION_H ) }
 [1] (0:01) --- *:
 [1] (0:01) --- *: getEnv ADMIN_NAME
 [1] (0:01) --- *: if ( $ADMIN_NAME == "" ) { set ADMIN_NAME cell_admin }
 [1] (0:01) --- *:
 [1] (0:01) --- *: getEnv ADMIN_PWD
 [1] (0:01) --- +:
 [1] (0:01) --- +: getEnv ADMIN_PWD
 [1] (0:01) --- *: if ( $ADMIN_PWD == "" ) { set ADMIN_PWD "-dce-" }
 [1] (0:01) --- *:
 [1] (0:01) --- *: getEnv CHO_SEC_RGY_MASTER
 [1] (0:01) --- +:
 [1] (0:01) --- +: getEnv CHO_SEC_RGY_MASTER
 [1] (0:01) --- *: if ( $CHO_SEC_RGY_MASTER == "" ) {
 [1] (0:01) --- *:   set CHO_SEC_RGY_MASTER "/.:/subsys/sec/master"
 [1] (0:01) --- *: }
 [1] (0:01) --- *:
 [1] (0:01) --- *: getEnv CHO_SEC_RGY_THREADS
 [1] (0:01) --- +:
 [1] (0:01) --- +: getEnv CHO_SEC_RGY_THREADS
 [1] (0:02) --- *: if ( $CHO_SEC_RGY_THREADS == "" ) { set CHO_SEC_RGY_THREADS 1 }
 [1] (0:02) --- *:
 [1] (0:02) --- *: * Environment variables which our csh jacket script provides:
 [1] (0:02) --- +:
 [1] (0:02) --- +: * Environment variables which our csh jacket script provides:
 [1] (0:02) --- *: getEnv CHO_SEC_RGY_PROLOGUE
 [1] (0:02) --- *: include $CHO_SEC_RGY_PROLOGUE
 [1] (0:02) --- *: getEnv CHO_3DOT_CELL_NAME
 [1] (0:02) --- *: set CHO_SEC_RGY_REPLICA_COUNT 0
 [1] (0:02) --- *: quit
 [1] (0:02) --- *:
 [1] (0:02) --- *: *
 [1] (0:02) --- *: * Start a timer to mark the end of the test.
 [1] (0:02) --- *: *
 [1] (0:02) --- *: set durationMinutes ( $CHO_DURATION_H * 60 )
 [1] (0:02) --- *: setAfter timesUp $durationMinutes
 [1] (0:02) --- *:
 [1] (0:02) --- *: *
 [1] (0:02) --- *: * Begin the per-thread setup; each thread run a copy of the big inner loop.
 [1] (0:02) --- *: *
 [1] (0:02) --- *: coLoop taskNumber 1 1 $CHO_SEC_RGY_THREADS
 [4] (0:02) --- *:   set uniquePrefix ( $ITL_HostName + "_" + $ITL_ProcessId + "_" + $ThreadId )
 [4] (0:02) --- *:   set passCount 0
 [4] (0:02) --- *:   *
 [4] (0:03) --- *:   * Set the masked error set to include only smooth sailing.
 [4] (0:03) --- *:   *
 [4] (0:03) --- *:   expect OK
 [4] (0:03) --- *:
 [4] (0:03) --- *:   *
 [4] (0:03) --- *:   * Establish an identity known to be a cell administrator.
 [4] (0:03) --- *:   *
 [4] (0:03) --- *:   setup_identity $ADMIN_NAME 0
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell , princ dce-rgy, type 0
(binding_cache_lookup) Cache miss
(rca_site_bind_nsi) Attempting to bind to site /.../k2.dce.transarc.com
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../k2.dce.transarc.com
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==137d28
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../k2.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../k2.dce.transarc.com/subsys/dce/sec/master
(rca_site_bind) Bound to Cell '/.../k2.dce.transarc.com'
(rca_site_bind) Bound to Site '/.../k2.dce.transarc.com/subsys/dce/sec/master'
(rca_lock_handle) locking 117c20
(rca_unlock_handle) unlocking ef328
(rca_site_bind) String Binding  '0091f852-7e35-1bc9-80f3-c037cf9a0000@ncadg_ip_udp:192.55.207.154[1939]'
(binding_cache_enter) Adding ef328 to binding cache: site /.../k2.dce.transarc.com/subsys/dce/sec/master cell /.../k2.dce.transarc.com princ (null) type 0
(rca_lock_handle) locking 117c70
(rca_check_binding) checking ef328
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking ef328
ef328: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell /.../k2.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Looking at ef328: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning ef328
returning cached context ef328
(rca_lock_handle) locking 117fd8
(rca_check_binding) checking ef328
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking ef328
ef328: Dropping site refcount from 2 to 1
 [4] (0:04) --- *:   validate_i $LOGIN_HANDLE $ADMIN_PWD
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell /.../k2.dce.transarc.com, princ dce-rgy, type 1
(binding_cache_lookup) Looking at ef328: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `(null)' 0
info_type mismatch, dce expected
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity ee028
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../k2.dce.transarc.com
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==13b5a8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../k2.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../k2.dce.transarc.com/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@k2.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity ee028, handle 13b5a8
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell /.../k2.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Looking at ef328: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning ef328
returning cached context ef328
(rca_lock_handle) locking 115d20
(rca_check_binding) checking ef328
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking ef328
ef328: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity ee028
(rca_site_bind) Bound to Cell '/.../k2.dce.transarc.com'
(rca_site_bind) Bound to Site '/.../k2.dce.transarc.com/subsys/dce/sec/master'
(rca_lock_handle) locking 116b48
(rca_unlock_handle) unlocking 13b028
(rca_site_bind) String Binding  '0091f852-7e35-1bc9-80f3-c037cf9a0000@ncadg_ip_udp:192.55.207.154[]'
Purging binding cache
(binding_cache_enter) Adding 13b028 to binding cache: site /.../k2.dce.transarc.com/subsys/dce/sec/master cell /.../k2.dce.transarc.com princ dce-rgy@k2.dce.transarc.com type 1
(rca_lock_handle) locking 116c20
(rca_check_binding) checking 13b028
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking 13b028
13b028: Dropping site refcount from 2 to 1
 [4] (0:05) --- password has expired
 [4] (0:05) --- *:   set_context $LOGIN_HANDLE
 [4] (0:05) --- *:   maintain_identity $LOGIN_DEFAULT_HANDLE $ADMIN_PWD
 [4] (0:05) --- *:
 [4] (0:05) --- *:   *
 [4] (0:05) --- *:   * Prepare a useful variable containing our binding authorization information.
 [4] (0:05) --- *:   *
 [4] (0:05) --- *:   set BAI sec_rgy_bind_auth_info_t
 [4] (0:05) --- *:   	  sec_rgy_bind_auth_dce
 [4] (0:06) --- *: 	  $rpc_c_protect_level_pkt_privacy
 [4] (0:06) --- *: 	  $rpc_c_authn_dce_secret
 [4] (0:06) --- *: 	  $rpc_c_authz_dce
 [4] (0:06) --- *: 	  $LOGIN_DEFAULT_HANDLE
 [4] (0:06) --- *:   *
 [4] (0:06) --- *:   * Bind to our site -- we want an update site, this time.
 [4] (0:06) --- *:   *
 [4] (0:06) --- *:   $BIND_2_UPDATE $CHO_3DOT_CELL_NAME $BAI RGY_HANDLE
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell , princ dce-rgy, type 1
(binding_cache_lookup) Looking at 13b028: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `dce-rgy@k2.dce.transarc.com' 1
authn_level mismatch
(binding_cache_lookup) Looking at ef328: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `(null)' 0
info_type mismatch, dce expected
(binding_cache_lookup) Cache miss
(rca_site_bind) bumping ref on identity ee028
(rca_site_bind_nsi) Attempting to bind to site /.../k2.dce.transarc.com
(rca_site_bind_nsi) import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Attempting to bind to cell /.../k2.dce.transarc.com
(rca_site_bind_nsi_cell) Trying rs_bind interface
(rca_site_bind_nsi_cell) rs_bind import_next failed, status 16c9a0b5
(rca_site_bind_nsi_cell) Trying caller-specified interface
(rca_site_bind_nsi_cell) about to call rca_setup_handle; rpc_handle==16daa8
(rca_setup_handle) bind succeeded -- setting up handle
(rca_setup_handle) req. site name is /.../k2.dce.transarc.com, status 0
(rca_setup_handle) Replace entry name with /.../k2.dce.transarc.com/subsys/dce/sec/master
(rca_setup_handle) Auth DCE, principal 'dce-rgy@k2.dce.transarc.com'
(rca_setup_handle) rpc_binding_set_auth_info, identity ee028, handle 16daa8
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell /.../k2.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Looking at 13b028: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `dce-rgy@k2.dce.transarc.com' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at ef328: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning ef328
returning cached context ef328
(rca_lock_handle) locking 1170c0
(rca_check_binding) checking ef328
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking ef328
ef328: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell , princ dce-rgy, type 0
(binding_cache_lookup) Looking at 13b028: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `dce-rgy@k2.dce.transarc.com' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at ef328: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning ef328
returning cached context ef328
(rca_lock_handle) locking 1176b0
(rca_check_binding) checking ef328
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking ef328
ef328: Dropping site refcount from 2 to 1
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell /.../k2.dce.transarc.com, princ (null), type 0
(binding_cache_lookup) Looking at 13b028: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `dce-rgy@k2.dce.transarc.com' 1
info_type mismatch, none expected
(binding_cache_lookup) Looking at ef328: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `(null)' 0
(binding_cache_lookup) Cache hit: returning ef328
returning cached context ef328
(rca_lock_handle) locking 117358
(rca_check_binding) checking ef328
(rca_check_binding) flags is 13
(rca_unlock_handle) unlocking ef328
ef328: Dropping site refcount from 2 to 1
(rca_setup_handle) end set_auth_info identity ee028
(rca_site_bind) Bound to Cell '/.../k2.dce.transarc.com'
(rca_site_bind) Bound to Site '/.../k2.dce.transarc.com/subsys/dce/sec/master'
(rca_lock_handle) locking 118180
(rca_unlock_handle) unlocking 168a28
(rca_site_bind) String Binding  '0091f852-7e35-1bc9-80f3-c037cf9a0000@ncadg_ip_udp:192.55.207.154 [1939]'
Purging binding cache
(binding_cache_enter) Adding 168a28 to binding cache: site /.../k2.dce.transarc.com/subsys/dce/sec/master cell /.../k2.dce.transarc.com princ dce-rgy@k2.dce.transarc.com type 1
(rca_site_bind) bumping ref on identity ee028
168a28: Dropping site refcount from 2 to 1
 [4] (0:08) --- *:
 [4] (0:08) --- *:   *
 [4] (0:08) --- *:   * Create some groups and orgs for use during the test.
 [4] (0:08) --- *:   * For now, make three of each, starting at zero.
 [4] (0:08) --- *:   *
 [4] (0:08) --- *:   set pgoMax 3
 [4] (0:08) --- *:
 [4] (0:08) --- *:   * Number of user accounts to add/mangle/delete at a go
 [4] (0:08) --- *:   set userChunkSize 50
 [4] (0:08) --- *:
 [4] (0:08) --- *:   set pgoIndex 0
 [4] (0:08) --- *:
 [4] (0:08) --- *:   * We'll modify this, using it as a template.
 [4] (0:08) --- *:   * fields:Id (uuid_t) unix_num (int) quota (int) flags (..int) name (..string)
 [4] (0:08) --- *:
 [4] (0:08) --- *:   set pgoItem sec_rgy_pgo_item_t "" -1 0 sec_rgy_pgo_flags_none "for rent"
 [4] (0:08) --- *:
 [4] (0:08) --- *:   repeat
 [4] (0:08) --- *:
 [4] (0:09) --- *:     set pgoItem.fullname ( $uniquePrefix + "grp" + $pgoIndex )
 [4] (0:09) --- *:     rgy_pgo_add $RGY_HANDLE sec_rgy_domain_group $pgoItem.fullname $pgoItem
(rca_lock_handle) locking 118990
(rca_check_binding) checking 181528
(rca_check_binding) flags is b
(rca_unlock_handle) unlocking 181528
 [4] (0:09) --- *:
 [4] (0:09) --- *:     set pgoItem.fullname ( $uniquePrefix + "org" + $pgoIndex )
 [4] (0:09) --- *:     rgy_pgo_add $RGY_HANDLE sec_rgy_domain_org $pgoItem.fullname $pgoItem
(rca_lock_handle) locking 118990
(rca_check_binding) checking 181528
(rca_check_binding) flags is b
(rca_unlock_handle) unlocking 181528
 [4] (0:09) --- *:
 [4] (0:09) --- *:     set pgoIndex ( $pgoIndex + 1 )
 [4] (0:09) --- *:   while ( $pgoIndex < $pgoMax )
 [4] (0:09) --- +:
 [4] (0:09) --- +:     set pgoItem.fullname ( $uniquePrefix + "grp" + $pgoIndex )
 [4] (0:09) --- +:     rgy_pgo_add $RGY_HANDLE sec_rgy_domain_group $pgoItem.fullname $pgoItem
(rca_lock_handle) locking 118990
(rca_check_binding) checking 181528
(rca_check_binding) flags is b
(rca_unlock_handle) unlocking 181528
 [4] (0:09) --- +:
 [4] (0:09) --- +:     set pgoItem.fullname ( $uniquePrefix + "org" + $pgoIndex )
 [4] (0:09) --- +:     rgy_pgo_add $RGY_HANDLE sec_rgy_domain_org $pgoItem.fullname $pgoItem
(rca_lock_handle) locking 118990
(rca_check_binding) checking 181528
(rca_check_binding) flags is b
(rca_unlock_handle) unlocking 181528
 [4] (0:09) --- +:
 [4] (0:09) --- +:     set pgoIndex ( $pgoIndex + 1 )
 [4] (0:09) --- +:   while ( $pgoIndex < $pgoMax )
 [4] (0:09) --- +:
 [4] (0:09) --- +:     set pgoItem.fullname ( $uniquePrefix + "grp" + $pgoIndex )
 [4] (0:09) --- +:     rgy_pgo_add $RGY_HANDLE sec_rgy_domain_group $pgoItem.fullname $pgoItem
(rca_lock_handle) locking 118990
(rca_check_binding) checking 181528
(rca_check_binding) flags is b
(rca_unlock_handle) unlocking 181528
 [4] (0:10) --- +:
 [4] (0:10) --- +:     set pgoItem.fullname ( $uniquePrefix + "org" + $pgoIndex )
 [4] (0:10) --- +:     rgy_pgo_add $RGY_HANDLE sec_rgy_domain_org $pgoItem.fullname $pgoItem
(rca_lock_handle) locking 118990
(rca_check_binding) checking 181528
(rca_check_binding) flags is b
(rca_unlock_handle) unlocking 181528
 [4] (0:10) --- +:
 [4] (0:10) --- +:     set pgoIndex ( $pgoIndex + 1 )
 [4] (0:10) --- +:   while ( $pgoIndex < $pgoMax )
 [4] (0:10) --- *:
 [4] (0:10) --- *:   * Close our handle.

[4] (0:10) --- *:   rgy_site_close $RGY_HANDLE
181528: Dropping site refcount from 1 to 0
(rca_lock_handle) locking 118bc0
Drop ref to identity ee028 from binding cache
(rca_unlock_handle) unlocking 181528
 [4] (0:10) --- *:   set RGY_HANDLE 1
 [4] (0:10) --- *:
 [4] (0:10) --- *:   *
 [4] (0:10) --- *:   * Define some of the constants for the following loop.
 [4] (0:10) --- *:   *
 [4] (0:10) --- *:   set callerKey sec_passwd_rec_t 0 sec_passwd_plain $ADMIN_PWD
 [4] (0:10) --- *:
 [4] (0:10) --- *:   * admin_part: creator uuid, cre. date, last changer uuid,
 [4] (0:10) --- *:   *       last change date, expiry, good since date, flags, auth_flags
 [4] (0:10) --- *:   set adminPart sec_rgy_acct_admin_t "" 0 "" 0 0 0
 [4] (0:10) --- *:    		 ( $sec_rgy_acct_admin_client | $sec_rgy_acct_admin_valid |
 [4] (0:10) --- *:                    $sec_rgy_acct_admin_server )
 [4] (0:10) --- *: 		 ( $sec_rgy_acct_auth_renewable | $sec_rgy_acct_auth_tgt |
 [4] (0:10) --- *: 		   $sec_rgy_acct_auth_forwardable )
 [4] (0:10) --- *:
 [4] (0:10) --- *:
 [4] (0:11) --- *:   * Init a counter for the long loop.
 [4] (0:11) --- *:   set userIndex 0
 [4] (0:11) --- *:
 [4] (0:11) --- *:   echo Task $ThreadID initialization complete
 [4] (0:11) ---  Task 0 initialization complete
 [4] (0:11) --- *:
 [4] (0:11) --- *:   ***
 [4] (0:11) --- *:   *** Repeat the following mayhem until time runs out.
 [4] (0:11) --- *:   ***
 [4] (0:11) --- *:
 [4] (0:11) --- *:   repeat
 [4] (0:11) --- *:     echo Task $ThreadID beginning pass $passCount with low user $userIndex
 [4] (0:11) ---  Task 0 beginning pass 0 with low user 0
 [4] (0:11) --- *:
 [4] (0:11) --- *:     *
 [4] (0:11) --- *:     * Section 1.1 -- add fifty user accounts. We need the update site.
 [4] (0:11) --- *:     *
 [4] (0:11) --- *:     $BIND_2_UPDATE $CHO_3DOT_CELL_NAME $BAI RGY_HANDLE
(binding_cache_lookup) Looking for site /.../k2.dce.transarc.com, cell , princ dce-rgy, type 1
(binding_cache_lookup) Looking at 168a28: site `/.../k2.dce.transarc.com/subsys/dce/sec/master' cell `/.../k2.dce.transarc.com' princ `dce-rgy@k2.dce.transarc.com' 1
(binding_cache_lookup) Cache hit: returning 168a28
returning cached context 168a28
(rca_site_bind) bumping ref on identity ee028
168a28: Dropping site refcount from 2 to 1
 [4] (0:11) --- *:
 [4] (0:11) --- *:     set lowUser $userIndex
 [4] (0:11) --- *:     repeat
 [4] (0:11) --- *:       set username ( $uniquePrefix + "user" + $userIndex )
 [4] (0:11) --- *:       set groupname ( $uniquePrefix + "grp" + $userIndex % $pgoMax )
 [4] (0:11) --- *:       set orgname ( $uniquePrefix + "org" + $userIndex % $pgoMax )
 [4] (0:11) --- *:
 [4] (0:12) --- *:       set pgoItem sec_rgy_pgo_item_t "" -1 0 $sec_rgy_pgo_flags_none $username
 [4] (0:12) --- *:       rgy_pgo_add $RGY_HANDLE sec_rgy_domain_person $username $pgoItem
(rca_lock_handle) locking 118888
(rca_check_binding) checking 186028
(rca_check_binding) flags is b
(rca_check_binding) checking 186028
(rca_check_binding) flags is a
(rca_check_binding) checking 186028
(rca_check_binding) flags is a
(rca_check_binding) checking 186028
(rca_check_binding) flags is a
(rca_check_binding) checking 186028
(rca_check_binding) flags is a
(rca_unlock_handle) unlocking 186028
 [4] (0:12) ### error (unexpected) - unknown reject (dce / rpc)
 [1] (0:12) ### RunFromFile has returned with an error, exiting
k2#
 		   ---- ---- ---- ---- ---- ---- ----
 		   ---- ---- ---- ---- ---- ---- ----
 		   ---- ---- ---- ---- ---- ---- ----

[4/13/93 public]
  Updated title to mention b20.
  What happened to the HISTORY lines here... seems to have triggered on
ITL's double-bracket message headers.
  Severity changed to A
Changed Short Description from `b17 binding problems' to `b20 binding problems' 
Changed Severity from `C' to `A'

[04/13/93 public]
Added a space in front of all "["es that were not associated with a
note header.

[4/19/93 public]
  Traced into routine rpc__krb_dg_recv_ck, where this error begins as a
packet verification failure. This returns up through routine
rpc__dg_execute_call() where it is converted (on the security server
side) into a WAY failure, and from there is converted into an unknown
reject, which is returned to the client. The client attempts five
rebinds, and after each, retries this call. It never succeeds.
  It is not known why the WAY failure happens. As is documented above,
the binding auth info structure is identical for the first and second
calls to sec_rgy_site_bind_update(), and yet the second call returns a
registry handle which cannot be used.
  Several tweaks of the script have failed to isolate any problem within
our (ITL-based) test harness. I don't know where this one is.
  I am raising this to A1 to get at least an ACK on the problem's
existence. This is justified by the amount of time spent here trying to
isolate it and the effect this is having on our testing (we have no
workaround).
  I'm equally suspicious of our test harness, the binding cache, and
potential memory corruption (we use a free() which intentionally alters
the freed memory, and it finds things like this) within the security
service. A recommendation for reproducing this would be to translate the
above script trace into a short C program. If time permits, I will code
this and mail it to the resp. engineer -- but time runs out here for
this effort.
Changed Interest List CC from `travis@transarc.com, 
 bb+transarc.alpine@transarc.com,rsarbo' to `travis@transarc.com, 
 bb+transarc.alpine@transarc.com,rsarbo,saxena'

[4/20/93 public]
 Reproduced with the attached program on 1.0.2b21 running on a RIOS. The
attached program has the cell-naem hardcoded into it, beware.
 The output prodcued here at Transarc is:
died: line 137, unknown reject (dce / rpc)
  Severity bumped to 1. Title changed to reflect b21 baselevel.
		   ---- ---- ---- ---- ---- ---- ----
		   ---- ---- ---- ---- ---- ---- ----
#include <pthread.h>
#include <dce/binding.h>
#include <dce/dce_cf.h>
#include <dce/dce_error.h>
#include <dce/nbase.h>
#include <dce/pgo.h>
#include <dce/rgynbase.h>
#include <dce/rpcsts.h>
#include <dce/sec_login.h>
#include <dce/secsts.h>
#include <dce/uuid.h>
#define DIE(x) if (x) die((x), __LINE__)
void die( error_status_t est , int line )
{
  dce_error_string_t txt;
  error_status_t lst;
  dce_error_inq_text(est, txt, &lst);
  if (lst != error_status_ok)			/* Translation failed */
    sprintf((char *) txt, "(no msg) %d", (int) est);
  fprintf(stderr, "died: line %d, %s\n", line, txt);
  exit(1);
}
main(int argc, char **argv)
{
  char ADMIN_NAME[]		= "cell_admin";
  char ADMIN_PWD[] 		= "-dce-";
  char CHO_SEC_RGY_MASTER[]	= "/.:/subsys/sec/master";
  char CHO_3DOT_CELL_NAME[]	= "/.../warlock.dce.transarc.com";
  char prefix[120];
  sec_rgy_handle_t rgy_handle;
  sec_rgy_bind_auth_info_t bai;
  sec_rgy_pgo_item_t pgoItem;
  sec_rgy_acct_admin_t adminPart;
  sec_rgy_acct_user_t userPart;
  sec_rgy_pname_t username, groupname, orgname;
  sec_passwd_version_t newKeyVersion;
  int pgoIndex;
  int userIndex;
  int lowUser;
  sec_login_handle_t login_handle;
  error_status_t est;
  sec_passwd_rec_t pwd, callerKey, newKey;
  boolean32 pwd_expired;
  sec_login_auth_src_t auth_src;
  sec_rgy_login_name_t loginName;
  int CHO_SEC_RGY_THREADS = 1;
  int CHO_SEC_RGY_REPLICA_COUNT = 0;
  int pgoMax = 3;
  int userChunkSize = 25;
  sprintf(prefix, "k2_%d_", getpid());
  sec_login_setup_identity(ADMIN_NAME, 0, &login_handle, &est);
  DIE(est);
  pwd.key.key_type = sec_passwd_plain;
  pwd.key.tagged_union.plain = ADMIN_PWD;
  sec_login_valid_and_cert_ident(login_handle, &pwd, &pwd_expired, &auth_src,
				 &est);
  DIE(est);
  /* no need to maintain ident; test fails immediately */
  bai.info_type = sec_rgy_bind_auth_dce;
  bai.tagged_union.dce_info.authn_level = rpc_c_protect_level_pkt_privacy;
  bai.tagged_union.dce_info.authn_svc = rpc_c_authn_dce_secret;
  bai.tagged_union.dce_info.authz_svc = rpc_c_authz_dce;
  bai.tagged_union.dce_info.identity = login_handle;
  sec_rgy_site_bind_update(CHO_3DOT_CELL_NAME, &bai, &rgy_handle, &est);
  DIE(est);
  pgoIndex = 0;
  uuid_create_nil(&pgoItem.id, &est);
  pgoItem.unix_num = -1;
  pgoItem.quota = 0;
  pgoItem.flags = sec_rgy_pgo_flags_none;
  do {
    sprintf(pgoItem.fullname, "%sgrp%d", prefix, pgoIndex);
    sec_rgy_pgo_add(rgy_handle, sec_rgy_domain_group,
		    pgoItem.fullname, &pgoItem, &est);
    DIE(est);
    sprintf(pgoItem.fullname, "%sorg%d", prefix, pgoIndex);
    sec_rgy_pgo_add(rgy_handle, sec_rgy_domain_org,
		    pgoItem.fullname, &pgoItem, &est);
    DIE(est);
    
    pgoIndex++;
  } while (pgoIndex < pgoMax);
  sec_rgy_site_close(rgy_handle, &est);
  DIE(est);
  callerKey.key.key_type = sec_passwd_plain;
  callerKey.key.tagged_union.plain = ADMIN_PWD;
  adminPart.expiration_date = 0;
  adminPart.good_since_date = 0;
  adminPart.flags = sec_rgy_acct_admin_client |
                    sec_rgy_acct_admin_valid |
                    sec_rgy_acct_admin_server;  
  adminPart.authentication_flags = sec_rgy_acct_auth_renewable |
                                   sec_rgy_acct_auth_tgt |
                                   sec_rgy_acct_auth_forwardable;
  sec_rgy_site_bind_update(CHO_3DOT_CELL_NAME, &bai, &rgy_handle, &est);
  DIE(est);
  do {
    lowUser = userIndex;
    do {
      sprintf(username, "%suser%d", prefix, userIndex);
      sprintf(groupname, "%sgrp%d", prefix, userIndex);
      sprintf(orgname, "%sorg%d", prefix, userIndex);
      uuid_create_nil(&pgoItem.id, &est);
      DIE(est);
      pgoItem.unix_num = -1;
      pgoItem.quota = 0;
      pgoItem.flags = sec_rgy_pgo_flags_none;
      strcpy(pgoItem.fullname, username);
      
      sec_rgy_pgo_add(rgy_handle,sec_rgy_domain_person,username,&pgoItem,&est);
      DIE(est);
      sec_rgy_pgo_add_member(rgy_handle, sec_rgy_domain_group,
			     groupname, username, &est);
      DIE(est);
      sec_rgy_pgo_add_member(rgy_handle, sec_rgy_domain_org,
			     orgname, username, &est);
      DIE(est);
      strcpy(loginName.pname, username);
      strcpy(loginName.gname, groupname);
      strcpy(loginName.oname, orgname);
      
      sprintf(userPart.gecos, "GECOS+%d", userIndex);
      sprintf(userPart.homedir, "/usr/%s", username);
      strcpy(userPart.shell, "/bin/sh");
      userPart.passwd_version_number = 1;
      userPart.passwd_dtm = 0;
      userPart.flags = sec_rgy_acct_user_passwd_valid;
      strcpy(userPart.passwd, "");
      
      newKey.key.key_type = sec_passwd_plain;
      newKey.key.tagged_union.plain = username;
      sec_rgy_acct_add(rgy_handle, loginName, sec_rgy_acct_key_person,
		       userPart, adminPart, callerKey, newKey,
		       sec_passwd_des, &newKeyVersion, &est);
      userIndex++;
    } while (userIndex % userChunkSize);
    sec_rgy_site_close(rgy_handle, &est);
    DIE(est);
  } while (1); /* for demo purposes, repeat forever. */
/* remainder of test not converted to raw C code. */
}
		   ---- ---- ---- ---- ---- ---- ----
		   ---- ---- ---- ---- ---- ---- ----
Changed Short Description from `b20 binding problems' to `b21 binding problems' 
Changed Priority from `2' to `1' 
Changed How was this defect found? from `other' to `handson'

[4/20/93 public]
As Bill just pointed out to me, the above test program is broken.  Note that
in the last set of nested loops, you do a sec_rgy_site_close on the rgy handle
and then loop back on the outer loop, doing more sec_rgy_* calls with a
bogus (freed) rgy_handle.  If this is how your other test was written to, then
please cancel this CR.  If your other test is coded correctly, then please use
that to test on the RIOS, and get us something that we can use to reproduce
the problem here.  I've seen no problems doing lots of sec_rgy_site_bind_update
calls here via sec_admin and rgy_edit, then using the handles from those calls.

[4/20/93 public]
With the fixed ordering of sec_rgy_site_* calls that you gave me, it was dying
in sec_rgy_acct_add() (but the handle worked for the two previous sec_rgy_pgo
calls).  After debugging and fixing a half dozen bugs in the test code, it
runs fine (for the 3 accounts that should work, since you create 3 groups in
the first loop, but try to create more accounts referencing  groups that you
didn't create (presumably since you didn't expect it to get past the first one
because of your other problems).
Here's the changes to the test code that works on HPUX.
5 > diff -b /tmp/test.c ./test.c
31c31,32
<   char  ADMIN_PWD[]           = "-dce-";
---
>   char  ADMIN_PWD_STR[]         = "-dce-";
>   char  ADMIN_PWD[sec_passwd_str_t_size];
42a44
>   sec_rgy_acct_key_t key_parts = sec_rgy_acct_key_person;
64a67
>   strcpy((char *) ADMIN_PWD, ADMIN_PWD_STR);
109a114
>   strcpy((char *) ADMIN_PWD, ADMIN_PWD_STR);
121,122d125
<   DIE(est);
<
129a133
>     DIE(est);
167,168c170,171
<       sec_rgy_acct_add(rgy_handle, loginName, sec_rgy_acct_key_person,
<                      userPart, adminPart, callerKey, newKey,
---
>       sec_rgy_acct_add(rgy_handle, &loginName, &key_parts,
>                        &userPart, &adminPart, &callerKey, &newKey,
170a174
>       DIE(est);
Here's a list of things I fixed:
(1) you were passing 6 of the 10 parameters to sec_rgy_acct_add() by value
    instead of by reference as they should be.
(2) there were missing status checks on several calls, so you couldn't always
    tell where it failed.
(3) the ADMIN_PWD plaintext password is overwritten by sec_login_validate...
    so you need to reset it for later use.
Please run this on RIOS then on SunOS and let us know whether it works on each.
(diff'd version from email with the version I fixed that works).

[4/21/93 public]
  Mike Burati and I have exchanged a cleaned-up version of the program.
This version is failing at Transarc, but not at HP. The RIOS compilation
of the program does not use Transarc's internal implementation of the
heap -- so there are no theories left as to why this is happening. I am
performing experiments as asked by HP. For RIOS, the program is built
against Transarc's dfs-102-2.9 installed include files and libraries.
For SunOS, it is built against a port of b21. The reject occurs
identically on both platforms.

[4/21/93 public]
As per Mike Burati's message, reducing priority/severity to B/2 and
deferring this CR to be fixed by 1.0.3. If further testing shows that the
failure is reproducible, we will bump the severity/priority as appropriate.

[4/22/93 public]
Lest my words get taken out of context and my intentions misunderstood again,
I am enclosing the message that Raj refers to above, for the record.  The 'you'
I referred to in the message was Ward, who opened this defect.  Note that I
only recommended that this be deferred if it was unreproducable after testing
on the latest RIOS build at the OSF (since it was failing on RIOS at Transarc).
I am assuming that this has been deferred because it was not reproducable at
the OSF on RIOS, so if that is not the case, let us know ASAP.
 I'm out of ideas too, and don't have time to chase down an
 unreproducable problem for 1.0.2, so I'm recommending to Rajendra
 that the defect (CR7606) be reduced in severity and priority,
 and be deferred to 1.0.3, UNLESS he can reproduce it there on
 PMAX or RIOS using your latest test (the one you email'd me this
 morning).
 Raj, I'll send you the test program in the next email message.
 Just build it and run it as "# test /.../cellname" (substituting
 your cellname in there).  Please run the test there and (with
 the help of other decision makers down there) figure out what
 to do with this CR based on the results of your tests.  If it
 works, it'll just keep adding accounts...  If it fails, it'll
 have added some pgo's but no accounts.  If it does fail, I'll
 need to know right away because it would be serious enough
 that 1.0.2 would not be usable until it's fixed.

[4/23/93 public]
Just to make it clear, as per Mike's instructions I ran the test on RIOS
here with the code he sent me last evening and it worked ok. I added 500 
accounts before stopping it.

[4/23/93 public]
 Reproduced on local cell cho1.dce.transarc.com node larry. larry is a
RIOS running AIX 3.2 and OSF DCE 1.0.2 b23 . This was done at Elliot
Jaffe's request; the OT report update is purely to record the results.
			---- ---- ---- ---- ----
			---- ---- ---- ---- ----
# pwd
/afs/transarc.com/project/alpine/dev/sb/travis/src/test/security/transarc/itl
# ./a.out `getcellname`
Opening registry handle
Closing registry handle
Adding 25 user accounts beginning at user 0
Opening registry handle
died: line 152, unknown reject (dce / rpc)
			---- ---- ---- ---- ----
			---- ---- ---- ---- ----
Changed Interest List CC from `travis@transarc.com, 
 bb+transarc.alpine@transarc.com,rsarbo,saxena,hathaway,weisman,bradcj' to 
 `travis@transarc.com, 
 bb+transarc.alpine@transarc.com,rsarbo,saxena,hathaway,weisman,bradcj,jaffe@tra
 nsarc.com'

[5/21/93 public]
Revisiting this bug, it seems to have gone away. Now, before
everybody gets happy, there were some environmental changes here which
forced me to modify the program to retest it: namely, we here at
Transarc/DCE are now running the internationalized variant of DCE, and
due to this, I had to move the authz_lvl down to packet integrity level
to rerun the test. I'm leaving the revamped program going against a
replicated security service (SunOS 4.1.3, and SunOS 5.2 master)
overnight. If I get a chance to set up a domestic replicated service,
I'll re-run the image as it was.

[6/1/93 public]
I'm cancelling this. I'll re-open it if it reappears. I still have not
had the resources to build an domestic cell down here, and other
priorities are pressing.
Changed Status from `open' to `cancel'



CR Number                     : 7484
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : Cdsclerk grew on Ed Perkins' login/logout test
Reported Date                 : 3/11/93
Found in Baseline             : 1.0.2
Found Date                    : 3/11/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/11/93 public]

The cdsclerk/root grew about 1.3Kbytes per login/logout when running
Ed's sec.rgy.7 test.

[3/11/93 public]
Given that we were supposed to freeze tomorrow, and now at least by next FRI,
it would help if you gave us a little more info than that, if you're going to
report a problem against us...  There's no evidence here that this is
definitely a security problem, other than the fact that it's related to
logins.  In fact, it might be correct, because for every login, you are
talking to the cdsclerk at some point, and it is going to have to import a
login context for every different identity you talk to it with.  I've added
dce-ot-cds to the CC list, because I'd like Mark or Peter to comment on
whether this is expected from cdsclerk.  I'm really inclined to cancel this
right now for lack of information, but I'll wait for a CDS comment before I
do...

[3/12/93 public]

Mike,
	When I ran my own version of login/logout test:

		dce_login cell_admin -dce- <<EOF
		kdestroy
		EOF

	The cdsclerk has very small growth. What's the diff between
	the two cases. 

	By the way I had the following data regarding cdsclerk's growth.

Jean

The following is the growth pattern of the cdsclerk/root via "ps aux " with
intervals of 30 mins.

root      1796 10.2 13.0 8.57M 3.12 ??       S    21:28:28   2:36.32 /opt/dcelo
root      1796 11.2 17.8 10.1M 4.28 ??       S    21:28:28   8:23.89 /opt/dcelo
root      1796 23.9 18.1 10.5M 4.34 ??       S    21:28:28  14:08.29 /opt/dcelo
root      1796 23.2 18.9 10.5M 4.55 ??       S    21:28:28  19:50.61 /opt/dcelo
root      1796 10.4 18.8 10.9M 4.50 ??       S    21:28:28  25:36.70 /opt/dcelo
root      1796 13.0 20.8 11.0M 4.99 ??       S    21:28:28  31:29.17 /opt/dcelo
root      1796 10.3 20.9 11.8M 5.02 ??       S    21:28:28  37:17.13 /opt/dcelo
root      1796 15.0 23.1 12.9M 5.55 ??       S    21:28:28  43:08.56 /opt/dcelo
root      1796 16.0 21.2 14.0M 5.09 ??       R    21:28:28  48:58.87 /opt/dcelo
root      1796 13.6 24.3 15.1M 5.84 ??       S    21:28:28  54:56.39 /opt/dcelo
root      1796  0.4 28.2 15.6M 6.78 ??       S    21:28:28  57:32.20 /opt/dcelo

[3/12/93 public]
I believe the difference is that Ed's test is doing sec_login_valid_and_cert
and with dce_login you are only doing sec_login_validate_identity()...  That
coupled with the fact that Ed's test does logins/logouts much faster than
you can do dcelogin/kdestroy in a loop, so it should be growing faster.
In the real world, you are going to have multiple people logging in to 
multiple accounts, so there will be multiple clerks, not one sharing multiple
identities.  Let me reiterate what I said above: "The clerk has to import
a new identity each time through the loop above, so it should be growing".
Unless you have some proof that there is a leak here, then please cancel
this defect, because (1) it should be growing, and (2) it is not growing much
per login, and (3) in the real world, people are not using it in this way...

[3/15/93 public]

Owner : burati ---> hsiao
Priority : 2 ---> 4

I am not sure whether it is NOT a real world application. So, I'll keep this
bug alive and I'll own it before I can relate it to some component(s).

[4/7/93 public]

I don't know if what I have to say is directly relevent to this OT report,
but I thought that this might be a good place to start...

When running the cds system test cds_abuse 
(src/test/systest/directory/cds_abuse), I notice that the clerk for
the uid of the user running the test grows very large.  After
about 13112 operations operations (about 20 hours of testing), the
cdsclerk had grown to a size of 21 meg (this is with connection oriented
RPC).  This seems very excessive (especially considering that the CDS
server was only about 25 meg) at that point.

(Just as an aside, when running the same test with only UDP RPC, the
cdsclerk was only 19 meg after 15300 operations).

This may also be a case where this is not the expected usage, but I thought
that this was another important data point.



CR Number                     : 7449
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : replication
Short Description             : cannot locate rgy object when creating slave
Reported Date                 : 3/9/93
Found in Baseline             : 1.0.2
Found Date                    : 3/9/93
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/9/93 public]

Sometimes we haven't been able to configure a slave on a rios
system.  sec_create_db reports that it can't find the registry
object.  Doing an initial cell config again seems to fix the problem.

[3/9/93 public]
I've seen this problem last week and re-configing fixed it. Thought it was
a hick-up.

[3/9/93 public]
If you're getting "Registry object not found", it may mean that the ACL on
/.:/sec/replist has not been modified yet.  I would think that you would see an
acl_edit error from dce_config if that were happening, but I have seen problems
with dce_config not passing errors on before. You would have trouble trying
to change the acl, if /.:/sec were not set up yet, or if the client had cached
a copy of it before it was set up completely.  Setting up a slave immediately
after configuring the master is not a good idea.  Give the master time to
finish setting up the namespace...
If you can get this to happen again, use acl_edit on the master to make sure
the ACL on /.:/sec/replist has been modified correctly, then on the slave,
use rpccp show_entry /.:/sec to make sure it can find the master via NSI.

[3/17/93 public]
Since emartin hasn't had time to look into this, I've reassigned it to myself.
I am unable to reproduce this at all, even configuring the RIOS slave after
configuring an HPUX slave as Liza suggested.  Since nobody has seen this
lately, and nobody seems to have seen it more than once (all around the same
time) and it is not blocking anybody, and there's a simple workaround if you
do see it, and nobody has saved the output they got from when it happened, or
checked to see if the acl was set up correctly, I'm downgrading this to a
C2 (w/Carolyn's permission).

If anybody sees this again AND gets the information that I requested above,
then I will upgrade this.  If nobody can reproduce this by the day before the
freeze, I'm cancelling this, and assuming that either something else fixed it,
or it was something wrong with the way things were set up at the time...

[8/2/93 public]

Final warning.  If anyone's seen this, then respond or else the 
bug is cancelled.



CR Number                     : 7437
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : Secd had minor memory leak with dce_login
Reported Date                 : 3/5/93
Found in Baseline             : 1.0.2
Found Date                    : 3/5/93
Severity                      : D
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/5/93 public]

The security daemon, secd, had minor memory leak with dce_login. For 
4,136 iterations of the following script:

	dce_login cell_admin -dce- << EOF
	kdestroy
	EOF

the total growth is only 280 Kbytes or 69 bytes/iteration. With an equivalent
dce_login test by Ed Perkins --- loops of the following security API calls:

	sec_login_setup_identity
	sec_login_valid_and_cert_ident
	sec_login_get_expiration
	sec_login_set_context
	sec_login_purge_context

For 5,500 loops the increase is 310 Kbytes or 58 bytes/loop.

Note that Ed Perkins got conflicting results ---- much higher leak rate.

[3/8/93 public]
Note: secd SHOULD increase in size when you are running dce_login in a loop,
because the runtime is caching call information for each client (up to a
certain point).  The question is, does the size ever level off.  We need to
know the size every so often for 15 minutes or so, then the size every 5 mins
for the next 15 or so... (for Jean's test).  For Ed's test, tell us the growth
after 2500,5000,7500,10000 iterations (the one pt above at 5500 isn't enough
to tell us if it's something that's allocated initially and reused or a
constant growth pattern).

[3/8/93 public]

The following is a 30 minutes interval "ps aux" log when running Jean's 
test ---

  473 pts/0    S <    0:34.53 secd -bootstrap
root       473  0.0 12.5 9.11M 3.00 pts/0    S <  21:30:34   0:34.53 secd -boot
root       473  1.2 10.8 9.20M 2.59 ??       S <  21:30:34   1:26.64 secd -boot
root       473  0.5 10.9 9.21M 2.61 ??       S <  21:30:34   2:22.22 secd -boot
root       473  0.4 10.9 9.22M 2.61 ??       S <  21:30:34   3:15.50 secd -boot
root       473  0.4 11.1 9.23M 2.67 ??       S <  21:30:34   4:12.04 secd -boot
root       473  0.1 11.1 9.23M 2.67 ??       S <  21:30:34   5:05.43 secd -boot
root       473  0.1 11.1 9.23M 2.67 ??       S <  21:30:34   6:00.32 secd -boot
root       473  0.3 11.1 9.23M 2.67 ??       S <  21:30:34   6:53.45 secd -boot
root       473  0.5 11.3 9.23M 2.71 ??       S <  21:30:34   7:49.37 secd -boot
root       473  0.4 11.3 9.23M 2.71 ??       S <  21:30:34   8:43.05 secd -boot
root       473  0.4 11.3 9.23M 2.71 ??       S <  21:30:34   9:39.51 secd -boot
root       473  4.2 11.3 9.23M 2.71 ??       S <  21:30:34  10:33.15 secd -boot
root       473  0.2 11.3 9.23M 2.71 ??       S <  21:30:34  11:28.64 secd -boot
root       473  4.1 11.3 9.23M 2.71 ??       S <  21:30:34  12:22.25 secd -boot
root       473  0.3 11.3 9.23M 2.71 ??       S <  21:30:34  13:18.09 secd -boot
root       473  0.4 11.3 9.23M 2.71 ??       S <  21:30:34  14:11.98 secd -boot
root       473  0.5 11.3 9.23M 2.71 ??       S <  21:30:34  15:08.29 secd -boot
root       473  0.4 11.3 9.23M 2.71 ??       S <  21:30:34  16:01.43 secd -boot
root       473  0.7 11.3 9.23M 2.71 ??       S <  21:30:34  16:57.95 secd -boot
root       473  0.4 11.3 9.23M 2.71 ??       S <  21:30:34  17:52.15 secd -boot
root       473  0.7 12.0 9.35M 2.89 ??       S <  21:30:34  19:00.27 secd -boot
root       473  0.7 12.0 9.35M 2.89 ??       S <  21:30:34  19:53.86 secd -boot
root       473  0.8  8.1 9.35M 1.95 ??       S <  21:30:34  20:50.84 secd -boot
root       473 10.0  8.1 9.35M 1.95 ??       S <  21:30:34  21:45.18 secd -boot
root       473  3.0  8.5 9.35M 2.05 ??       S <  21:30:34  22:41.01 secd -boot
root       473 10.7  9.7 9.36M 2.32 ??       S <  21:30:34  23:42.13 secd -boot
root       473  4.9 10.2 9.39M 2.45 ??       S <  21:30:34  25:08.60 secd -boot


For Ed's test the "ps aux" 30-minutes-interval log gave the following
sequence:

	9.09M
		<--- test start some minutes after the first "ps aux"
	9.22M
	9.26M
	9.27M
	9.28M
	9.29M
	9.31M
	9.32M
	9.33M
	9.34M
	9.36M
		<---- test fail after 5 hours of testing due to test server's
			ticket refresh failure.
	9.36M 

Note that, in 30 minutes, Ed's test's average thruput is about 546 
login/logout and it is about 164 login/logout for Jean's test. So, 
we see faster leaking in Ed's test.

[3/8/93 public]
Using Ed's numbers from above (since Jean's were from *many* clients, which
means the runtime is allocating lots of client info...), after the initial
client info setup...  you started seeing about .01M per half hour leaking.
1024K*.01 = 10.24K per half hour with 546 iterations gives us 10.24/546=0.01875
which is an 18.75byte per iteration leak.  Since this is fairly insignificant
I've lowered the severity to D.  Since nothing other than p0's and 1's are
allowed to be fixed in the remaining 1.0.2 days, I've changed the "Fix by"
to 1.0.3.

[9/2/93 public]
Since this is really a very minor leak, and it's not clear that it is even
a problem, we don't feel this warrants fixing for 1.0.3, and are cancelling
it.



CR Number                     : 7211
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : sec client agent
Short Description             : Got invalid cell name in rca_setup_handle()
Reported Date                 : 2/11/93
Found in Baseline             : 1.0.1
Found Date                    : 2/11/93
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : internal_binding.c
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[2/11/93 public]
  Symptom: rgy_edit executes a bad free() call which causes a paranoid
implementation of free() to flag a bad release.
  Environment: secd has died (for reasons not yet known); rgy_edit is
attempting to bind via the pe_site file's stored entry. The RCA routine
rca_setup_handle() has just called rpc_ns_entry_expand_name() on "/..."
and received the same string in return with OK status. The routine then
adds 5 (GLOBAL_DIR_ROOT_LEN) to this string's pointer. This is beyond
the terminating NULL for this string, and the following strcat blindly
copies a vast string which, in Transarc's case, overwrites our stack, in
particular, the value of tmp_name_p . tmp_name_p is then freed and this
free() is trapped as invalid.
  I don't know why the context->cell_name (which was expanded) was
"/...". Note that the comment on the line which is in error is:
		     ---- ---- ---- ---- ---- ----
            ucp = (tmp_name_p + GLOBAL_DIR_ROOT_LEN); /* !!! barf */
		     ---- ---- ---- ---- ---- ----
  Hmm. Note also that, should there just happen to be some zeros lying
around in the memory extent allocated to provide tmp_name_p (from
rpc_ns_entry_expand_name()) that this doesn't die, which is probably
what the ref. platforms are seeing happen.
  A full GDB backtrace follows:
		     ---- ---- ---- ---- ---- ----
#0  rca_setup_handle (context=0x120c28, status=0xf7ffe8c4) at /local/travis/dev/sb/travis/src/security/client/rca/internal_binding.c:1042
#1  0xf74dd7a0 in rca_rebind (context=0x120c28, status=0xf7ffe8c4)
    at /local/travis/dev/sb/travis/src/security/client/rca/internal_binding.c:1134
#2  0xf74de07c in rca_site_bind_pe_site (context=0x120c28, status=0xf7ffe8c4)
    at /local/travis/dev/sb/travis/src/security/client/rca/internal_binding.c:1274
#3  0xf74dc740 in rca_nsi_binding_import (context=0x120c28, status=0xf7ffe8c4)
    at /local/travis/dev/sb/travis/src/security/client/rca/internal_binding.c:939
#4  0xf74e0308 in rca_site_bind (site_name=0xf7ffe360 "/.../k2.transarc.com", auth_info=0xf7ffe8a8, flags=3, if_spec=0xf7770efc,
    princ=0xf776cfb0 "dce-rgy", cell=0x0, context=0x925c0, status=0xf7ffe8c4)
    at /local/travis/dev/sb/travis/src/security/client/rca/internal_binding.c:1696
#5  0xf74ccf10 in sec_rgy_site_bind (site_name=0xf7ffed44 "", auth_info=0xf7ffe8a8, context=0x925c0, status=0xf7ffe8c4)
    at /local/travis/dev/sb/travis/src/security/client/rca/binding.c:133
#6  0xf74ccfa8 in sec_rgy_site_bind_query (site_name=0xf7ffed44 "", auth_info=0xf7ffe8a8, context=0x925c0, status=0xf7ffe8c4)
    at /local/travis/dev/sb/travis/src/security/client/rca/binding.c:193
#7  0x73d20 in ek_site_open_by_access (site=0xf7ffed44 "", access_type_p=0xf7fff14c)
    at /local/travis/dev/sb/travis/src/security/client/admin/rgy_edit/ek_site.c:229
#8  0x108b0 in eif_site_open_by_access (desired_access=ek_site_query)
    at /local/travis/dev/sb/travis/src/security/client/admin/rgy_edit/eif_site.c:174
#9  0x19fac in eif_do_cl_args (argc=1, argv=0xf7fff3d4, cl_op=0xf7fff2f0)
    at /local/travis/dev/sb/travis/src/security/client/admin/rgy_edit/tty.c:1628
#10 0x1a680 in _Gct_jacketed_main (argc=1, argv=0xf7fff3d4) at /local/travis/dev/sb/travis/src/security/client/admin/rgy_edit/tty.c:1707
#11 0x80b34 in main ()
(gdb) list
1037                    return false;
1038                }
1039
1040                u_strcat(rgy_princ_name, "@");
1041                ucp = (tmp_name_p + GLOBAL_DIR_ROOT_LEN); /* !!! barf */
1042                u_strcat(rgy_princ_name, ucp);
1043                rpc_string_free(&tmp_name_p, &st);
1044            }
1045            /*
1046             * stash the principal name in the context for future
(gdb) print rgy_princ_name
$70 = {"dce-rgy@\000\000\000\020\000\000\000\000w8=Dw8=H\000\000\000\000\000\000\000\002\000\000\000\002\000\000\000\awq@\\wyxwy,0\000\000\
000\twy\020wy\020\000\000\000\005U`w8b\fwy2P\000\000\000\000\000(\000\000wy Pwyxwy x\000\000\000\t\000\000\000$\000\000\000\004\000\000\0
00\t\000\000\000\awq@\\w'X\000\000 p\000\000\000\b\000\000\000\t\000\000@\000\000\000 pUXw8:]J~wyxwy,0\000\000\000\t:]J~wq@\\\000(O`:]J~w
y,0wyx\000\000\000\t"...}
(gdb) print tmp_name_p
$71 = (unsigned char *) 0x2a2828 "/..."
(gdb) next				<<<----- SEE COMMENT BELOW
1043                rpc_string_free(&tmp_name_p, &st);
(gdb) print tmp_name_p
$72 = (unsigned char *) 0xddf00dba<Address 0xddf00dba out of bounds>
(gdb) print ucp
$73 = (
    unsigned char *) 0x2a282d "]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:
]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:"...
(gdb) x/40x ucp
0x2a282d <end+2065333>: 0xddbaddba      0xddbaddba      0xddbaddba      0xddbaddba
		     ---- ---- ---- ---- ---- ----
  The flagged "next" command above actually executes the u_strcat()
call at line 1042 listed above. Before the strcat(), tmp_name_p is
valid.  Afterwards, is has been overwritten by some longword in the
range pointed at by ucp.  0xbaddbadd is the memory pattern with which
our paranoid heap routines initialize all new allocations ... the
allocation of tmp_name_p by rpc_ns_entry_expand_name() filled the
extent, unfortunately without ANY zeros nearby (intentionally: that's
malloc's paranoid behavior; it did its job here).
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[2/12/93 public]
The pe_site file contents during this were:
		     ---- ---- ---- ---- ---- ----
/.../k2.transarc.com 006D9A20-809E-1B76-8E60-C037CF9A0000@ncadg_ip_udp:192.55.207.154[]
		     ---- ---- ---- ---- ---- ----

[2/12/93 public]
Thank you for the detailed analysis.  Fortunately or unfortunately for you,
this code has changed *significantly* since the version you're using; the
new version is:
	u_strcpy(rgy_princ_name, context->uncanon_princ_name);
	if (context->cell_name) {
	    unsigned_char_p_t  ucp;
	    u_strcat(rgy_princ_name, "@");
	    ucp = (context->cell_name + GLOBAL_DIR_ROOT_LEN); /* !!! barf */
	    u_strcat(rgy_princ_name, ucp);    
	}
From browsing the old versions, it appears as if this was changed on
12/8/92 by Rob Stanzel as part of the client-side binding update for
replication.
Changed "found in release" to 1.0.1 since the version you quoted goes back
at least that far (but was current until 12/08/93).

[2/20/93 public]
There's nothing wrong with the address arithmetic there;  it was correct for
every valid cellname.  Something before that point messed up and gave you that
bogus /... (note, as Bill says, this code has been vastly rewritten, so the
free that you're talking about isn't even there anymore).  Please try this
again with a recent 1.0.2 build (preferably from at least 2/22/93, since that
will have Bill's secidmap fix and some fixes I'm making to the binding code)
and let us know if you can get it to set the cellname to /...  If not, then
this is an unreproducible problem with the current code...

[8/2/93 public]
No action on this bug since 2/20.  Last chance to update or else
we're cancelling it.

[8/3/93 public]
  This problem has not been seen since it was reported. Do cancel it.

[8/3/93 public]

Cancelling this bug.



CR Number                     : 7165
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : sec
Subcomponent Name             : security: rsdb
Short Description             : under load, rsdb can become flakey
Reported Date                 : 2/8/93
Found in Baseline             : 1.0.2
Found Date                    : 2/8/93
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[2/8/93 public]
  In preparation for a stress test, I submitted a command file containing
the following commands to rgy_edit:
 ----
do p
add stress/user1
add stress/user2
..
add stress/user14999
do a
add stress/user1 -av -pv ...
...
add stress/user14999 -av -pv ...
q
 ----
 The configuration was a private cell running on an otherwise unloaded
SparcII over SunOS 4.1.3. As this script executed, I checked the syntax
of some commands I needed for the complimentary clean-up script from
another window. This other window, then, was running rgy_edit to the
same registry that was adding the 15k accounts (on the same, local node).
From this other window, I issued sporadic commands to view a small scope
in the principals' domain. After a few of these, the account-adding
window spat out:
>>?(rgy_edit) Unable to add "stress/user1696" - Specified object already
exists (Registry Edit Kernel) (dce / sad)
  From the sporadic-command window, I did the following:
 ----
rgy_edit> scope ""
rgy_edit> view stress/user1696
?(rgy_edit) Cannot retrieve any matching entries for stress/user1696
"" - Entry not found (Registry Edit Kernel) (dce / sad)
 ----
  This turns out to be reproducible. Just start a script going like the
account-add script (turn one out with a helper script) funnelled into
rgy_edit. While this is going, go into another shell, start another
rgy_edit, set the scope to krbtgt , and view . (It's much more likely to
happen when the account-domain commands are in progress.)
  Each time I do this, I stand (empirically) a 6 in 8 chance of getting
one of the following errors from the account-add process:
  + Cannot add account <principal name> - Registry server unavailable
  + Cannot add account <group or org name> - Registry server unavailable
  + specified object already exists (when it doesn't according
    to the script commands themselves and output from the
    competing, sporadic-command window)
  It also appears from observation of the performance of the 'view' of
the (singleton) scope 'krbtgt' that the database search may be searching
the entire db, as opposed to some subset of it bounded by a sort order;
the single answer appears immediately even under load but the view
command does not return for some time. Perhaps bounding this search can
reduce the lock competition within the db enough to make this problem
diminish into the background.
  Finally, this is the Transarc SunOS build of OSF 1.0.2 BL7. No changes
have been made locally to the rsdb or rgy_edit . The test system appears
to have plenty of resources (100k+ remains for swapping; cpu at 30%;
/opt has 100+Mb available)
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[2/20/93 public]
Since this needed to be assigned to somebody, I put Anne's name on it for now,
because she's done the most work in the rsdb code...

[2/20/93 public]
  For clarity, the last sentence of the original report text should read,
"100Mb+ remains for swapping" as opposed to "100k+ remains for
swapping." The system was not down to 100Kb of swap space. Sorry for the
typo

[9/23/93 public]
We weren't able to reproduce this problem on HP-UX.  Do you still get
this problem for later DCE releases?  Can you reproduce the problem
on a reference platform ?

[9/23/93 public]
   I was using the "update" program from the test tree to add a huge
number of accounts to RSDB recently and did see this occur again. Two
copies of "update", running with distinct prefixes for their PGOs (e.g.
"U1 U1 U1" and the other had "U2 U2 U2") resulted in one error of the
above description: one account was claimed to already exist, when it
could not have been created yet (the registry was clean before the test
began). If this was a bug in the "update" program, I'll be surprised.
   As this happened only once in nearly 45,000 additions, I could not
put it up on my list of current things to investigate. That, and the
fact that this evidently has not happened on any reference platform,
probably means we should downgrade this bug into the C3 range (or lower).
Changed Severity from `B' to `C' 
Changed Priority from `1' to `3'

[11/30/93 public]
  This has been seen again.
  I was building a large cell, using the following commands:
.
[k2-travis] foreach i (4 5 6)
foreach? $LATEST/install/sparc/dcetest/dce1.0.2a/test/security/commands/rgy/update -p cell_admin -pw -dce- -a 100000 /.../oink.dce.transarc.com OINK$i OINK$i OINK$i &
foreach? end
.
  Within an hour, the following errors had been given by the update
programs:
.
TIMING: (Per call aggregate) [0.084250]user+sys [1.428080] real time
TIMING: (Per call period 20) [0.085000]user+sys [1.455534] real time
Unable to add person 'OINK6/X00059' (status 0x17122076)
    Operation was: sec_rgy_pgo_add (line=511)
.
TIMING: (Per call aggregate) [0.087900]user+sys [2.646847] real time
TIMING: (Per call period 20) [0.087500]user+sys [1.520896] real time
Unable to add person 'OINK6/X00208' (status 0x17122076)
    Operation was: sec_rgy_pgo_add (line=511)
.
TIMING: (Per call aggregate) [0.088667]user+sys [2.676756] real time
TIMING: (Per call period 20) [0.079500]user+sys [1.470831] real time
Unable to add acct 'OINK6/X00363' (status 0x17122075)
    Operation was: sec_rgy_acct_add (line=481)
.
TIMING: (Per call aggregate) [0.090200]user+sys [2.787128] real time
TIMING: (Per call period 20) [0.082500]user+sys [1.459959] real time
Unable to add acct 'OINK6/X00503' (status 0x17122075)
    Operation was: sec_rgy_acct_add (line=481)

[11/30/93 public]
...and:
.
TIMING: (Per call aggregate) [0.098661]user+sys [5.068336] real time
TIMING: (Per call period 20) [0.090000]user+sys [3.333304] real time
Unable to add member 'OINK5/X01687' to group 'OINK5/X00001' (status 0x16c9a016)
    Operation was: sec_rgy_pgo_add_member (line=446)
Unable to add member 'OINK6/X01689' to org 'OINK6/X00001' (status 0x16c9a016)
    Operation was: sec_rgy_pgo_add_member (line=453)
Unable to add acct 'OINK4/X01687' (status 0x16c9a016)
    Operation was: sec_rgy_acct_add (line=481)

[8/11/94]
Is this still a problem?

[8/15/94 public]
  Resources to run such long tests are thin here, so I haven't
reproduced that problem since about June -- but only because I haven't
tried. It did show up in one long run I made in June, two instances if I
recall. That would have been our 1.0.3, post-merge code line. It only
takes one machine (and about 48Mb of memory) -- actually, if the
trashing is what causes this, less memory may assist in reproducing
it... just a matter of time here.
  I don't want to close this until a few runs take place without this
error's appearence...

[2/2/96 public]
Last reported reproduction of this was over a year and a half ago.
We've been trying to reproduce problems like this here and have been
able to use the same update program to add over 250,000 accounts without
seeing any problems.  I'm cancelling this defect as not reproducible.



CR Number                     : 7123
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : secd
Short Description             : secd crashes when pmax client unresponsive
Reported Date                 : 2/3/93
Found in Baseline             : 1.0.2
Found Date                    : 2/3/93
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[2/3/93 public]

BUILD: nb available 1/29/93 = weekly build 14
CONFIG:	3 machine cell
	rios = sec, cds, fl server, dfs client
	pmax1 = sec, cds, dfs client, file server
	pmax2 = sec, cds, dfs client

all 3 machines had clerk dtsds running as started by default by dce_config

DETAILS:
	secd on rios core dumped when I dropped pmax2 into kdb
	for ~20 minutes (ie. inaccessible) sometime during
	that 20 minute interval. I had had no problems with core
	components when I dropped pmax2 into kdb.

	Once secd was gone, the following error message was
	actually valid! I saw it on both the pmax clients.

sec_clientd 02/03/93 16:34:06 - Host Principal key management failure
... Registry server unavailable (dce / sec)

[8/2/93 public]

Gail, can you reproduce this problem using the current reference 
platforms?

[8/3/93 public]
Unfortunately, I will not have an opportunity to try this for a few weeks.
I'll cancel and when dfs system testing begins again, we will certainly
hit this if it still exists ...



CR Number                     : 6956
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 7513
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : Host creds being blown away...
Reported Date                 : 1/21/93
Found in Baseline             : 1.0.2
Found Date                    : 1/21/93
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe
Transarc Status               : open

[1/21/93 public]

BUILD: nb available 1/15/93 aka dfs 2.3
CONFIG: 2 machine cell, rios = sec,cds and fl server
			pmax = sec,cds and dfs client

root.dfs in episode
1 additional jfs fileset exported

DETAILS: Logged in as unix user gmd, and dce principal gmd
	 cd'd to directory in jfs exported fileset via dfs
	 	cd /:/cobbler_u1/gmd_dfs
	 successful file editing
	 idle overnight and tickets expire
	 ls is successful
	 dce_login gmd is successful then:

dce_gmd@cobbler> cd /:
/bin/ksh: /:: 0403-036 The specified directory is not valid.

	as unix user root and dce principal cell_admin:
root@cobbler> cm whereis /:/cobbler_u1/gmd_dfs
cm: '/:/cobbler_u1/gmd_dfs': Connection timed out

	BUT
	fts lsfldb is successful

	and on pmax client, can successfully access /:/cobbler_u1/gmd_dfs

dce_gmd@dce12# cd /:/cobbler_u1/gmd_dfs
dce_gmd@dce12# pwd
/.../cobbler_cell/fs/cobbler_u1/gmd_dfs

dce_gmd@dce12# cm whereis /:/cobbler_u1/gmd_dfs
The file '/:/cobbler_u1/gmd_dfs' resides in the cell 'cobbler_cell', 
in fileset 'cobbler.u1', on host cobbler.osf.org.

[1/21/93 public]
Changed Responsible Engr. from `pakhtar' to `tu@transarc.com' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[1/22/93 public]

More data ...

Killed and restarted dfsbind with -debug.
Exited dce_login shells and re-su'd to unix user gmd and re-dce_logged in,
still no luck.

	dce_gmd@cobbler> cd /:
	/bin/ksh: /:: 0403-036 The specified directory is not valid.

Exited dce_login shells and as unix user root (no dce_login):

	root@cobbler> cd /:
	dfs: ticket has expired! 
	dfs: Warning: created unauthenticated binding
	root@cobbler> ls
	ls: 0653-343 Cannot read ..
	root@cobbler> pwd
	/:
which is correct since root.dfs is in episode, protected by acls
and the acl on /.../cobbler_cell is:

	# SEC_ACL for /.../cobbler_cell:
	# Default cell = /.../cobbler_cell
	unauthenticated:r--t---
	group:subsys/dce/cds-admin:rwdtcia
	group:subsys/dce/cds-server:rwdtcia
	any_other:r--t---

so by dce_logging in :

	root@cobbler> dce_login cell_admin -dce-
	Password must be changed!
	root@cobbler> ls
	cobbler_u1

I'm all set ... as root/cell_admin.
Then I su to gmd, dce_login as gmd and I'm all set as well -
what happened? I have always been root su'd to gmd so that's
not it. And the new dfsbind didn't seem to have any effect.
Thanks -

[1/22/93 public]

To clarify this rather confusing situation, I'm modifying the above
note so that the prompts reflect the current unix user and dce principal.
To recap:

	I'm in dfs as unix user gmd, dce principal gmd and doing fine.
	My tickets expire and I'm still doing fine, that is, I can
	successfully do an ls in dfs.
	As unix user gmd, I re-dce_login as dce principal gmd and WHAM,
	I can't access dfs at all.
	I try as unix user root and dce_principal cell_admin and I
	can't access dfs either.

The rest is just attempts to debug/remedy the situation.
	The unix user gmd, dce principal gmd on the client
	machine can still access dfs.

	Killing and restarting dfsbind doesn't SEEM to help
	since my first attempt to access dfs is as unix user gmd
	and dce principal gmd and it fails. (Note that these
	failures are NOT permission/acl failures)
	Magically, as unix user root, NO dce principal, I have
	access but, correctly, no permission. 
	I dce_login as cell_admin and all is well. Not only
	that, as unix user gmd and dce principal gmd, all is
	well too!

My suspicion WOULD be the cache mgr if it weren't for the fact that
caches are dce principal specific and BOTH dce principals gmd and
cell_admin were shut out. What else is common to all dce
principals on the client side that could "go stale" and might
get refreshed by access as hosts/<machine name>/self? Is it something
in dfsbind?

Thanks again.

[1/22/93 public]

After talking to you on the phone and reading your recent recap, I think I 
know the "pattern" that caused the problem. 
>
>DETAILS: Logged in as unix user gmd, and dce principal gmd
>	 cd'd to directory in jfs exported fileset via dfs
>	 	cd /:/cobbler_u1/gmd_dfs
>	 successful file editing
>	 idle overnight and tickets expire    *********
>	 ls is successful
>	 dce_login gmd is successful then:
>
>dce_gmd@cobbler> cd /:
>/bin/ksh: /:: 0403-036 The specified directory is not valid.
>
After "idle overnight and tickets expire", "ls is successful" doesn't mean
ls really fetches any data from the server. In fact, 'ls' might use
the cached info about that dir. (Note: ls should fail with EACCES when the 
ticket expires. This should get fixed when the kinit work gets integrated in
the future.)

Your 'cd /:' failed initially  suggested that there could be a problem 
with dfsbind then again I could not explain why the rest of dce_login/cd would
work. 

Do you remember that you 'cd /:' "immediately" after your started a new 
dfsbind ? That might make some difference. 

>
>Exited dce_login shells and as unix user root (no dce_login):
>
>	root@cobbler> cd /:
>	dfs: ticket has expired! 
>	dfs: Warning: created unauthenticated binding
>	root@cobbler> ls
>	ls: 0653-343 Cannot read ..
>	root@cobbler> pwd
>	/:
>
BTW, the error message 'dfs: ticket has expired!' indicated the usr must be
associated with a pag (ie., had been already dce_logined) not just as
unix user root.

In any event, next time when you see the same problem (ie., leave the 
machine idle for a night), please do NOT kill the dfsbind, get icldump
on both dfsbind and cm first. After starting a new dfsbind, wait for a min
or so before doing 'cd /:' and get icl dump if it sill does not work.

[1/27/93 public]
Upgrading to priority 0 due to new policy about bugs blocking system test.
To answer your questions/comments:

If you are unix user root, you don't have to dce_login to have credentials,
you are automatically the dce principal hosts/<machine name>/self.

The cd /: after the new dfsbind was immediate.

I will look for this problem (and others) when the 2.4 drop is available
in a build.

[1/29/93 public]
Upgraded to a 2.3 build that contained the fix for 6917 (which is actually
removing a previous fix). In any event, this build should allow dfsbind
and other processes to successfully renew tickets. Left the machine
idle overnight (except for a periodic "ps" gathering statistics). This
morning, with a /bin/sh:

root@dce12> cd /:
/:: Invalid argument

root@dce12> /bin/ksh
root@dce12> cd /:
/:: The directory specified is not valid.

BUILD:	nb available 1/27 (2.3 + 6917 fix)
CONFIG: rios fl server with root.dfs in jfs ** NOTE - no episode!
	pmax fl server with ufs partition exported
	pmax file server with ufs partition exported
	both are also dfs clients

The only machine that this is occurring on right now is the pmax
file server - the rios and other pmax are fine.

I have an icldump, icl.bind and ps log - can you log in remotely and
take a look? Thanks

[1/29/93 public]
This seems to be the same problem as the one described in OT 6917. The fix
to OT6917 was in sec_login of 1.0.2b14. Are you sure that your dfs 2.3 is 
running on this DCE core. 

Please mail me the icl.bind you have. It should not be that long. 

Thanks.

[2/1/93 public]

The earlier description of the problem certainly sounds like it was
linked to the failure to refresh the "self" tickets.  One piece of
data missing from this bug report is if this behavior has been
observed on a newly restarted cell (e.g. rebooted) or if it only
happens after some set period of time.

I'd like to see this resolved, as it has been open quite some time.
I'm adding Comer to the CC list because of Tu's concerns this is
related to dfsbind.

Also, now that you have 2.4 does this still happen?

So many variables, so little time!

[2/11/93 public]
How true Tony ... Changed the short description for clarity, changed the
severity back to 0, changed the component so security due to new details
listed below. NOTE: b14 DEFINITELY includes the fix for 6917.

REPRODUCABLE AT WILL:	No
BUILD:			b14
CONFIG:			RIOS = cds,sec server, fl server - root.dfs in jfs
			PMAX1 = fl server, cds, sec, dfs client
			PMAX2 = fl server, cds, sec, dfs client
TEST:			ran through dfs.repfldb_checklist then left cell
			idle overnight, then began running test that
			does file and directory reads and writes (LOW
			stress) from RIOS and PMAX2.

DETAILS:	on pmax2
		cd /: -> Connection timed out.
		dce_login cell_admin -dce-
		cd /: -> Connection timed out.
		dce_login gmd blah (test principal and password I've added)
		cd /:: Connection timed out.
		kill -30 229 (dfsbind pid)
		kill 229
		dfsbind -debug
		cd /: -> Invalid argument
		cdscp show dir /.: -> fine

I have the icl.bind file and the small output of dfsbind -debug. I looked
at the icl.bind file and saw the error code 387064044 -> No currently
established network identity for which context exists. (dce /sec). Checked
/usr/adm/messages - nothing. Sec_clientd is still running BUT the machine
cred files dcecred_ffffffff* are missing.

As I'm investigating this, on the RIOS:
sec_clientd 02/11/93 15:39:02 - Warning - unable to refresh identity ... will idle and retry
... No credentials cache file found (dce / krb)

Sure enough, the machine cred files are missing on the RIOS as well and now
cd /: -> Invalid argment as well (although minutes before this, access to
/: was fine). Secd and sec_clientd still alive and running.

PMAX1 however, is fine and can access /:. 

The cell has been up and running fine for 2 days. PMAX2 however, was rebooted
and restarted ~24 hours ago.

Reducing default ticket lifetimes to 2 hours and running some tests with
secd and rpcd in debug mode in the foreground.

[2/16/93 public]
Ran dfs.lock with 2h default ticket lifetime and secd in foreground using
b15. Came up with CR 7234 but no additional data for this one. Will try
again soon.

[2/18/93 public]
Assigned it to myself.  Unfortunately, we don't have DFS up and running here
and with the plethora of defects I'm working on, I definitely won't have time
to learn how in the next week or so... so I'm only going to be able to try and
reproduce similar problems (ie: why the creds files disappear out from under
sec_clientd...).

[hsiao 02/25 public] 

I just lost another dcecred_ffffffff file --- so far twice. The only
clue I have is that, long before I realized its loss, I had run a long 
login/logout test.

[2/25/93 public]
The ONLY reason this file should be able to disappear is if you aren't logged
in and purge the default context.  If a test runs kdestroy without being
logged in (ie: KRB5CCNAME not set) it will blow away the host's creds.  If a
test calls sec_login_purge_context() with the default context, it may be able
to blow it away too (I haven't thought that one through as far as ref counts...
go, but it seems like it could happen).  If so, then it would be a test bug.

[2/26/93 public]

Is this it?

dfs: set auth binding failed (code -1)
dfs: Warning: created unauthenticated binding
# klist
No DCE identity available: No currently established network identity for which context exists (dce / sec)

Kerberos Ticket Information:
klist: No credentials cache file found (dce / krb) while setting cache flags (ticket cache /opt/dcelocal/var/security/creds/dcecred_41000003)

# env
TZ=EST5EDT
DISPLAY=nike:0.0
USER=root
TERM=xterm
HOME=/
SHELL=/bin/csh
LOGNAME=root
PATH=/sbin:/usr/sbin:/usr/bin:/usr/local/bin:/usr/bin/X11
KRB5CCNAME=FILE:/opt/dcelocal/var/security/creds/dcecred_41000003

Here's what's in the creds directory:
dcecred_4100000b       dcecred_4100000d.nc    dcecred_57a60001
dcecred_4100000b.data  dcecred_4100000e       dcecred_5c469b01
dcecred_4100000b.nc    dcecred_4100000e.data  dcecred_ffffffff
dcecred_4100000c       dcecred_4100000e.nc    dcecred_ffffffff.data
dcecred_4100000c.data  dcecred_5664fb01       dcecred_ffffffff.nc
dcecred_4100000d       dcecred_5664fb01.nc
dcecred_4100000d.data  dcecred_57137f01


This dfs client has been up for 2days with the same core components.
Previous to this its core server had been down for awhile and was
rebooted and dce restarted.  I noticed this problem sometime after
the restart of the core server, wherein this client had bigtime
clockskew problems which were resolved well before I issued the klist
command.  

I am running b17.

[3/2/93 public]

disregard my previous comments; I really belive this was an 
error on my part.

[3/2/93 public]
The current status of this bug is:
	- test does NOT contain a kdestroy so that possibility is out
	- OT 7234 fix is not yet in so I may not get far trying to reproduce it

[3/3/93 public]
I'm also seeing the machine creds disappear with the latesti nightly build
from 3/3/93. I caught it by configuring a cell. Set registry property:
Default certificate lifetime to 10 minutes. The sec_clientd complained
that it could not refresh identity and no credential cache file found in
roughly ten minutes. Additionally I was executing sec.rgy.7 at the same time.
I am not sure how easily this is recreated yet.

[3/16/93 public]
According to Gail, the original reported problem here is not a security
problem, and may or may not be still happening, but would have to be addressed
by DFS, not security, so the real problem being reported is that the host
principal's creds (dcecred_ffffffff) are being blown away by somebody...

Ed's test (sec.rgy.7) was able to blow them away, but I believe I found that
problem, and opened a CR against the test (7513).

Gail, were there any tests that do logins/logouts running when you encountered
the problem with the host's creds file disappearing?  If so, which tests and
where can I find them.

[3/16/93 public]
Mike - the dfs system tests make use of the dce_login -exec switch to
run tests remotely in a security context. There are no kdestroys in the
tests. The tests are:
	src/test/systest/file/dfs.glue
	src/test/systest/file/dfs.lock
These scripts use the filewnr and dirread programs as well as the dirwrite.sh
script. Sample data files for these scripts are:
	src/test/systest/file/glue.data
	src/test/systest/file/lock.data
Please take a look and let me know if there is a problem with these tests.

[3/17/93 public]
Thanks for looking at the tests Mike. I'm dropping the priority to 2 -
haven't seen this in awhile and will likely be able to cancel.

[6/22/93 public]
This has not been seen at all - canceling.



CR Number                     : 6320
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : 
rgy_edit help text needs improvement.
Reported Date                 : 12/3/92
Found in Baseline             : 1.0.1
Found Date                    : 12/3/92
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[12/3/92 public]

Full Description:

   On-line rgy_edit help can be much improved.  In many cases, only
syntactical assistance is given. Additional information, including at least
a brief description of the command its purpose, as well as the semantics
of its arguments should be included. See the 'scope' and 'ktadd' commands
for good examples, and the 'member' command as an example of a command
which needs improvement.



CR Number                     : 6227
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : secd
Short Description             : Add rgy prop flag to disallow neg uids
Reported Date                 : 11/30/92
Found in Baseline             : 1.0.1
Found Date                    : 11/30/92
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/idl/rgynbase.idl,security/server/rs/?,security/server/rsdb/?
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[11/30/92 public]
rgy_edit allows creation of pgo's with negative unix uid in contradiction
with POSIX, XOPEN standards requiring unix uid to be a non-negative
integer.

Repeat as follows:

$ rgy_edit
Current site is: registry server at /.../pierrot_cell/subsys/dce/sec/master
rgy_edit=> do p
Domain changed to: principal
rgy_edit=> add
Add Principal=> Enter name: foo
Enter UNIX number: (auto assign) -100
Enter full name: ()
Enter object creation quota: (unlimited)
Add Principal=> Enter name:
rgy_edit=> v foo
foo                                         -100
rgy_edit=> quit
bye.

[11/30/92 public]
This feature was purposely allowed (some vendors require use of negative uids).
For those vendors that may want to be purely POSIX or X/OPEN, I've made this an
enhancement request for secd (*not* a defect of rgy_edit which should not be
the component making this decision since it's only a client of the API) to add
a properties flag disallowing creation of negative uids.  I've assigned it to
Joe for now, so he can decide the usefulness of adding this in 1.1.



CR Number                     : 5962
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : login
Short Description             : Assertion failure while shutting down cell
Reported Date                 : 11/6/92
Found in Baseline             : 1.0.2
Found Date                    : 11/6/92
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[11/6/92 public]

Actions prior to the assertion failure (described below):

A cell consisting of a single PMAX was configured. Then I 
shut down and brought back up secd a few times (a couple of
times in locksmith mode). The final time secd was started normally
(i.e. not in locksmith mode) and then I left the cell running
overnight.

When I came in the morning a dce_login 'hung'. Killing the cdsclerk 
did not have any effect.  So I tried to shut down the cell and got 
the following assertion failure:

# sh /etc/dce.clean
Stopping DCE daemons...
 Assertion failed: found_present == 1 , file ../../../../src/security/client/log
in/sec_login_cache.c , line 149
        DCE daemons stopped
#

The baselevel used was a nightly build from Nov 2 morning.

[1/29/93 public]

Need more information.

If anyone sees this again, put complete information here and call me..

[8/2/93 public]

Has anyone seen this problem lately, on the new reference platforms?
No action since 1/29, we'd like to cancel it if it no longer exists.



CR Number                     : 5684
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : 
Short Description             : sec_rgy_server_unavailable - sporadic error
Reported Date                 : 10/16/92
Found in Baseline             : 1.0.2
Found Date                    : 10/16/92
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
OB                            : 
Transarc Deltas               : 
Transarc Herder               : mason@transarc.com
Transarc Status               : open

[10/16/92 public]
The following (apparent) security problem showed up when running the fts 
tests on a pmax.  It also happened a while back when running fts tests, 
and seems to be unpredictable. I'm appending text below, supplied 
by Vijay Anand.

The error is sec_rgy_server_unavailable. Below is a paste from the error 
buffer. As you can see from this, a fts crserver command fails with 
this error, but a subsequent command works fine. This error happened on 
one fts crserver command out of 200 in the test suite. It looks to me 
like request to secd is timing out because secd is busy doing something else. 

How do applications have to handle this error in general? 
What I'm aiming at is, when does this error occur,and how do 
applications take care of this. I'm not sure which routine caused this
error. The routine seems to have been called within ubik_ClientInit and 
could be a sec_id_parse_name or a rpc_binding_register_auth_info. 
The error is hard to reproduce.

-- following is a cut'n paste of the error that occurred --

+ fts crserverentry -server 255.255.255.33 -principal trouble.33 -quota 33 -owner abelian.33 
+ echo Passed 
Passed

+ fts crserverentry -server 255.255.255.34 -principal trouble.34 -quota 34 -owner abelian.34 
fldb_InitUbikHandle: ubik client init for /.../dceadmin.com/fs failed (Registry server unavailable (dce / sec)).
+ echo test13: Test case, E49: FAILED 
test13: Test case, E49: FAILED

+ fts crserverentry -server 255.255.255.35 -principal trouble.35 -quota 35 -owner abelian.35 
+ echo Passed 
Passed

Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `mason@transarc.com' 
Added field Transarc Status with value `open'

[10/16/92 public]

[10/16/92 public]
Please reproduce this with the environment variable DEBUG_SEC set to 5

[10/20/92 public]
As noted in email correspondence between Pervaze, Julie and I, we cannot track
this problem down at this time and need help from any person that can.  Setting
DEBUG_SEC to at least 1 will hopefully tell us what the real internal error was
when the above failure occurs.  Without that information we can't even guess
what the problem might be.  If anybody at OSF can reproduce this (running the
fts tests), could you run them with DEBUG_SEC set (redirected to a log if
necessary) and run them until you get the failure?

[10/21/92 public]
I just spoke to Dave Treff and he said he can reproduce the problem
here. So I will work with him on this.

[1/26/93 public]
We still do not have enough information from the above to do much of anything
on this...  Dave, if you can still reproduce this, please do so after setting
DEBUG_SEC (env var) to 5 as stated above, and rerun the tests...  We need info
on this immediately to decide whether it will be fixed by the functionality
(and lower than B1 defects) freeze next Friday.

[2/26/93 public]
Can I assume that nobody's tests are blocked on this anymore, since nobody has
updated this defect (or complained about these test problems) since October?
Dave, can you reproduce this anymore?  If "yes", then please do so as I asked
above with DEBUG_SEC set to 5.  If "no", then we should assume that the problem
has been fixed and close this CR.  Please try this sometime early next week
after Bill's NSI improvement fixes and the big security drop with the binding
code fixes have been submitted.

[4/16/93 public]
OK, it's 6 months after this bug was opened and we still don't have any more
information on whether it's reproducible.  Back on October 21, Sekhar said
that Dave Treff could reproduce it, because on Oct 20th, we (Pervaze, Julie
and I) noted that we could not reproduce it.  This is only open because Dave
could.  Dave, please update this defect, cancelling it if it's not
reproducible, or if you think it is, then when you get a chance could you give
us the information I asked for above?  If this is still a problem, then it
is something that may affect 1.0.2a system testing.

[8/2/93 public]

4 months later, last call on this bug or it's cancelled.

[8/3/93 public]

After checking with Ron Arbo, cancelling this bug. Transarc can re-open
this bug if it can be duplicated with the latest security sources.



CR Number                     : 5631
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : 
Short Description             : set auth binding failed
Reported Date                 : 10/14/92
Found in Baseline             : 1.0.2
Found Date                    : 10/14/92
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[10/14/92 public]
Scenario: two machines, machine "A" is configured as both the primary DFS and
DCE server machine; machine "B" is a DCE client, and DFS server (no flserver,
fx only).

I've just completed the reboot of the primary machine.  On the secondary
machine, I do the following:

% dce_login
Enter Principal Name: mason
Enter Password:
% cd /:
% ls
dfs: set auth binding failed (code 12)
dfs: Warning: created unauthenticated binding
ls: 0653-345 .: Permission denied.
% ls
ls: 0653-345 .: Permission denied.
% ls
% exit
% icldump > ~/mason/debug-info/icldump/olorin-otxxxx-binding-failure-after-auth
% dce_login mason mason
% cd /:
% ls
dfs: set auth binding failed (code 12)
dfs: Warning: created unauthenticated binding
ls: 0653-345 .: Permission denied.
% icldump > ~/mason/debug-info/icldump/olorin-otxxxx-binding-failure-after-auth.2

I'll be renaming the icldump logs, but I need this OT number first; I'll note
the final name once I have the ot #.

Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[10/14/92 public]
Two notes:

(1) I realize this may not be a cm problem, but rather a security problem
(I've opened a defect report against sec_clientd because of restart-related
problems - that is OT 5603).  Unfortunately, it is manifesting itself via
DFS.

(2) the icldump logs are in /afs/transarc.com/usr/mason/debug-info/icldump:

ot5631-olorin-14oct92-binding-failure-after-auth.Z
ot5631-olorin-14oct92-binding-failure-after-auth.2.Z

Additional information:

I checked the accessability of the cell from machine "A" and all is well.

[12/15/92 public]

This is the same as 6467, actually.  What's happening is anyAccess is set
to 55, but the local user's rights are 0, so some access are spuriously working.
Changed Responsible Engr. from `kazar@transarc.com' to `bwl'

[12/18/92 public]

[12/31/92 public]

[1/7/93 public]

Hmm - I don't think this is the same as 6467 - I'm seeing this behavior
outside of lfs. This may be a combined security/dfs problem or just
a security one but I'll need help figuring that out I also don't know
if this is separate from 4398. Here's the scoop:

CONFIG: 2 pmax cell, 1 = dce server and dfs client, (dce12)
	1 = fl server, dce and dfs client (dce5)
BUILD: nightly build available 12/29 aka b10
REGISTRY: default values
TEST/ACTIVITY: dfs.lock as PRINC=gmd Unix user=gmd

I was debugging the script - no stress on the system. The script does
an rsh dcelogin -exec of a program that writes a file in a dfs directory
on each machine. The dce_login's on the dce server/dfs client pmax
produced these messages in the /usr/adm/messages file:

Jan  6 21:44:51 dce12 vmunix: dfs: set auth binding failed (code 336761023)
Jan  6 21:44:51 dce12 vmunix: dfs: Warning: created unauthenticated binding
Jan  6 21:44:55 dce12 vmunix: dfs: set auth binding failed (code 336761023)
Jan  6 21:44:55 dce12 vmunix: dfs: Warning: created unauthenticated binding
Jan  6 21:46:34 dce12 vmunix: dfs: set auth binding failed (code 336761023)
Jan  6 21:46:34 dce12 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 08:44:20 dce12 vmunix: dfs: set auth binding failed (code 336761023)
Jan  7 08:44:20 dce12 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 08:44:24 dce12 vmunix: dfs: set auth binding failed (code 336761023)
Jan  7 08:44:24 dce12 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 08:51:45 dce12 vmunix: dfs: set auth binding failed (code 336761023)
Jan  7 08:51:46 dce12 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 08:51:50 dce12 vmunix: dfs: set auth binding failed (code -1)
Jan  7 08:51:50 dce12 vmunix: dfs: Warning: created unauthenticated binding

Then, dce_login's started succeeding but THEN

Jan  7 09:45:32 dce12 vmunix: dfs: communication failure/set context
Jan  7 09:45:32 dce12 vmunix: dfs: lost contact with the fx server 130.105.202.2
5 in cell dce12_cell
Jan  7 09:49:26 dce12 vmunix: dfs:  fx server 130.105.202.25 in cell dce12_cell
back up!

I looked back and saw that there were 3 of these comm failure/set context
errors BEFORE these set auth binding errors SINCE the machine was rebooted
and the cell restarted (rc.dce, rc.dfs).

Back on the file server, things were not all rosey either:

Jan  6 18:13:25 dce5 vmunix: dfs: communication failure/set context
Jan  6 18:13:25 dce5 vmunix: dfs: lost contact with the fx server 130.105.202.25
 in cell dce12_cell
Jan  6 18:16:26 dce5 vmunix: dfs:  fx server 130.105.202.25 in cell dce12_cell b
ack up!
Jan  6 20:04:42 dce5 vmunix: dfs: set auth binding failed (code 382312712)
Jan  6 20:04:43 dce5 vmunix: dfs: Warning: created unauthenticated binding
Jan  6 20:06:20 dce5 vmunix: dfs: auth helper not running
Jan  6 20:06:20 dce5 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 07:49:40 dce5 vmunix: dfs: ticket has expired!
Jan  7 07:49:41 dce5 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 07:49:51 dce5 vmunix: dfs: ticket has expired!
Jan  7 07:49:51 dce5 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 08:40:59 dce5 vmunix: dfs: set auth binding failed (code 387063931)
Jan  7 08:40:59 dce5 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 08:45:00 dce5 vmunix: dfs: ticket has expired!
Jan  7 08:45:02 dce5 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 11:45:10 dce5 vmunix: dfs: set auth binding failed (code 387063931)
Jan  7 11:45:10 dce5 vmunix: dfs: Warning: created unauthenticated binding
Jan  7 11:45:39 dce5 vmunix: dfs: set auth binding failed (code 387063931)
Jan  7 11:45:39 dce5 vmunix: dfs: Warning: created unauthenticated binding

The "auth helper" message was real - this problem has been logged separately
in 4398. The cell was completely idle at 11:45.

[ gmd 1/18/93 ]

No ideas from the dfs people so giving the security side a try. The
error codes are:

root@water(102) ./stcode 336761023
336761023 (decimal), 141290bf (hex): No credentials cache file found (dce / krb)
root@water(103) ./stcode 382312712
382312712 (decimal), 16c9a108 (hex): helper process aborted (dce / rpc)
root@water(104) ./stcode 387063931
387063931 (decimal), 1712207b (hex): Registry server unavailable (dce / sec)

I suspect there is/was more than one bug here. I've changed the short
description and assigned this to Sekhar. I'll gladly open a separate
defect or start updating new/existing defects. Debug ideas welcome.

Thanks -

[1/26/93 public]
I'm lost in the above confusion...  I've listed those from Transarc that have
commented above, in the CC list, to make sure they still get copies of this
now that it's a 'sec' defect.

ONE of the above problems seems to be equivalent to CR6917, which I just
submitted a fix for (dfsbind losing its credentials).  The only other
scenario I see above that you are saying is causing a problem is that a DFS
client machine starts having problems after the server machine that's running
secd is rebooted.  Is this what I should be looking into? or are there other
things that you're doing, buried in the above information?

[1/26/93 public]
Mike - Yes, I think 6917 might be related - Hopefully, there'll be a good
build tonight so I can try it out. I'm not doing anything "tricky" so
no, there is nothing buried in the above information - just trying to hit
the 48 CHO mark - I reboot in an attempt to achieve a clean known state
for starting tests.

[2/1/93 public]
Well, it's not gone - but things seemed to be better with the fix for
6917. Here's what's happening:

BUILD: 	nb available 1/29/93 (contaings 6917 fix AND dfs 2.4)
CONFIG:
	singsing_cell:
	R - singsing	sec,cds,fl servers, dfs client
	R - cobbler		fl server, sec,cds,dfs client
	P - dce12		fl server, sec,cds,dfs client
	P - water		sec,cds,dfs client	

	root.dfs in jfs

DETAILS:
	- Singsing crashed within 45 minutes of starting dfs.glue
	(Unfortunately, I did not sysdumpdev and the power
	surge/outage has now caused the most recent crash)

	- After rebooting and restarting Singsing, but not the
	test (ie. the cell was healthy and idle), I got a
	sec_clientd error on water "Host principal key management
	failure ... Registry server unavailable"

	- Restarting the test (with less stress ie. fewer
	processes, fewer writes per file, etc.), there are
	some successful remote dfs reads and writes but the
	following errors occur:

	water fails on some but not all attempts to get auth
	bindings - helper process goes catatonic - I have an
	icl.bind - I killed and restarted dfsbind.

	at the same time water is having problems, dce12
	(who is NOT involved in the test - merely an idle
	fl server machine) reports the same "Host principal
	key management failure ... Registry server unavailable"

	cobbler gets a "Connection timed out" error on an
	attempt to close a file it has just written. I also
	noticed that one of the files that were successfully
	written by cobbler was owned by nobody - even though
	the access should definitely been authenticated AND
	the authentication was set for 4 days.

The important stuff (I think) for you to note is:
	* these single un-provoked management key failures.
	* inability to authenticate
	* lost authentication more than 3 days early

[2/8/93 public]
Gail, I finally had a chance to look at this again...  I can't reproduce the
underlying problem you seem to have seen (stop/restart secd and sec_clientd
can't find it).  Can you try this again with a current build, if you have
time?

[2/19/93 public]
Unfortunately, other bugs have prevented proving whether this one has been
solved or not. I'm lowering the priority since it is not currently blocking
system test. I will gladly close it when my tests run successfully.

[6/22/93 public]
There were a number of dfs-specific issues with authentication which
were solved and which may have solved this one as well - canceling.
The tests are not uncovering this behavior any longer.



CR Number                     : 5359
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : rgy_edit
Short Description             : \ not escaping chars correctly in rgy_edit
Reported Date                 : 9/9/92
Found in Baseline             : 1.0.1
Found Date                    : 9/9/92
Severity                      : D
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : security/client/admin/rgy_edit/tty_io.c and security/utils/args.c
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[9/9/92 public]
ORBIT defect #1607.

The Admin Guide, Security Module states in the "Name Format" section
that names in the registry may consist of any letter, digit or
non[sic]-alphanumeric except for the @ sign.

However, a double-quote cannot appear in a name unless it is escaped by
a backslash.  If you do escape the ", then BOTH characters appear in the
name. (Eg, try adding the principal \").

Neither \ nor " are treated as regular characters by rgy_edit as the
documentation implies.  The " has some string-delimiting function (is 
this functionality useful in rgy_edit??) and the \ acts like a hybrid
between a regular character and an escape character.

[10/15/92 public]
Assigned it to myself.  Lowered Severity to D (Significant, but an acceptable
workaround exists) as opposed to B (Critical with no workaround).
You can get " in a principal name, but not specifying it on the command line
(let it prompt you, and it works).
The " string delimiting is functionally useful in rgy_edit.  You may have
arguments to commands that have multiple tokens, with spaces (for example
rgy_edit=> add foobar -f "Foo J. Bar"
where you don't want the "'s as part of the fullname, but you must use them
in the argument, so the command utility will know it's one token.
So, it seems that the problem is with the \ not delimiting correctly.

[10/15/92 public]

OT cleanup 1 : Severity : unchanged (D) ;   Priority : unchanged (3);

NB. In view of the (reeasonable) workaround, severity of D and Priority of 3 is 
     indeed appropriate.

[10/23/92 public]
Made the description more clear about what the problem is.

[8/2/93 public]

Responsible -> mob

[10/13/93 public]
fix available.  will submit when request is acknowledged.

[10/15/93 public]
Fix has been submitted.  Files ../src/security/client/admin/rgy_edit/tty_io.c
and ../src/security/utils/args.c

[or smithtl 8/28/95 public]
Need fix.  This was to be fixed in 1.1 but fix was backed out.
Submitted in 1992. See defects 9239 and 9149.

Please provide current status since this has not been updated
since 10/15/93.



CR Number                     : 5250
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : app_ref
Short Description             : provide error messages
Reported Date                 : 8/28/92
Found in Baseline             : 1.0.1
Found Date                    : 8/28/92
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/28/92 public]

Need more error message information for Security (similar to what is 
available for IDL and RPC in the app dev ref).

[12/5/92 public]
defer. can't be done by 1.0.2

[7/2/93 public]
Error messages will now be documented in the Troubleshooting/Error Messages 
Guide so I'm canceling this CR.



CR Number                     : 4768
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : rs6000
S/W Ref Platform              : aix
Component Name                : sec
Subcomponent Name             : 2
Short Description             : sec_clientd should decome a daemon only after its initial setup is successful
Reported Date                 : 7/17/92
Found in Baseline             : 1.0.1
Found Date                    : 7/17/92
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/17/92 public]

Currently dce_config starts sec_clientd and always gets a return code of 0
even if sec_clientd failed to start. This is because the parent is the one
who is returning 0 without waiting for the child process to finish its
initialization (eg., register authentication information, export bindings etc).

The above problem can be fixed in dce_config by making it wait for sometime
but the fix also has to be done in sec_clientd. As of now if sec_clientd fails
but dce_config continues as if everything is fine and fails at a later stage.

Is there any reason the "rs_process_make_server" call in sec_clientd.c
cannot be called just before starting the machine context and listener
threads?

The same problem could also exist in secd.

[08/27/92 public]
This has come up before in the DTS context.

I believe rpcd has a routine that does "fork child, wait for it to
get set up and register, then exit with appropriate status."

Let's expose this routine -- rpc_server_fork? -- and convert all our
servers to use it.  I guess this comes under the 1.1 code cleanup banner.

[9/22/92 public]

We could change sec_clientd so that in the normal case control only returned to 
the shell after it completed setup - but this will not fix all cases.  It is
always possible that you are running on a client machine that cannot communicate
with the security server (due to partitions etc.).  In this event sec_clientd
will not be able to complete setup, but it will still want to allow the
machine to complete booting.  Other processes that wish to inherit the
client machine's context must be capable of recovering from this situation.
(They should either report status, or idle and retry)

[08/26/94 public]
In DCE 1.1 sec_clientd is gone for dced secval which does the right thing.
Cancel.



CR Number                     : 4433
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : sec
Subcomponent Name             : sec_rgy API
Short Description             : sec_rgy_replace_all core dumps with null user_part.
Reported Date                 : 6/24/92
Found in Baseline             : 1.0.1
Found Date                    : 6/24/92
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/24/92 public]

Yes, sending in those nulls again.

sec_rgy_acct_replace_all () dumps core when the user_part argument is
is set to null.  When rgy_acct_replace is called the 
user_part->passwd[0] = '\0'; line does the trick.

[6/24/92 public]
The architecture, idl specification, and docs specify that this call takes
a pointer to a sec_rgy_acct_user_t as the user_part argument.  If you
(the programmer) pass in something other than what is specified (NULL *is*
something other than what is specified), then you haven't coded to the spec.
It just so happens that it is possible to check for NULL, to make it easier
for programmers to debug how they shot themselves in the foot, but that's
an enhancement, not a p1 defect.  Changed to an enhancement, lowered the
priority, and marked it 'defer'.  If you can pass in NULL and cause some
other part of security (other than your broken client) to break, then that's
a showstopper and will have to be fixed for 1.0.1, but given that the freeze is
next Tuesday, and we have more than enough real defects for the *two* of us
to fix, no enhancements will be made by then.

[9/29/93 public]
Since Rich has been going out of his way monitoring new CR's and reviewing
Specifications, to make sure that we never check for programming errors passing
NULL, because it makes them harder to find, this CR is now assigned to him
and cancelled.



CR Number                     : 3166
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : sec
Subcomponent Name             : secidmap
Short Description             : should take login handle rather than rgy_handle
Reported Date                 : 4/30/92
Found in Baseline             : 1.0.1
Found Date                    : 4/30/92
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[3/20/96]
cancel - addressed in DCE1.2.2.

[4/30/92 public]

There is a design botch in the secidmap interface, which results in
unnecessary calls to the name service in security clients.

Currently, the sec_id_parse_{name,group} calls are passed a registry
binding handle to identify the "first" registry to try.  The login context
is included implicitly (by being referenced from the registry binding
handle).

Constructing the registry binding handle is a moderately expensive
operation (you have to make name service calls to look up the address of
the registry server).  There will soon be a registry binding cache, so the
second and subsequent calls will be pretty "cheap", but the first one will
always be expensive.  Ideally, simple application programs should not have
to talk to the security service, or even ask the name service for the
location of the security service, if the needed tickets are already cached.

Given the existence of a name parsing cache, there is no reason to
construct the registry binding handle until *after* a cache miss has
occurred.. in most cases, there will be a cache hit in the name parsing
code, so the registry binding handle won't get used before it is closed.

To fix this, we'd have to add some new entry points to the secidmap
interface which take the new signature, and fix sec_authn.c and other
callers (like the CDS clerk) to use the new routines.



