CR Number                     : 12658
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : thr
Subcomponent Name             : sigwiat.3thr
Short Description             : update page with changes
Reported Date                 : 10/18/94
Found in Baseline             : 1.1doc
Found Date                    : 10/18/94
Severity                      : B
Priority                      : 1
Status                        : verified
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : /dce_books/app_ref/man3thr/sigwait.3thr
Sensitivity                   : public

[hal 10/18/94 public] 
There may be another applicable CR out there, but it is late....  Anyhow, I
am using this to make various corrections to this page as defined by Ron S.
These include changing the wording for the description and additn cross
references.

[hal 10/18/94 public] 
Done and verified by me.  I'm cutting corners.  Ron, look at the cross
references as I changed (3thr) to (3) for the pages that aren't in the DCE
docs.



CR Number                     : 9983
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : thr
Subcomponent Name             : app_ref
Short Description             : Text on pthread_join() manpage a little unclear
Reported Date                 : 2/21/94
Found in Baseline             : 1.0.3
Found Date                    : 2/21/94
Severity                      : C
Priority                      : 3
Status                        : verified
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : pthread_join.3thr
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : open

[2/21/94 public]
The third paragraph in the DESCRIPTION section of the pthread_join() reference
page consists of the following sentence:
 
   "If the current thread calls this routine, a deadlock results."
 
Some developers here at Transarc found this sentence a little vague.  They
asked that it be clarified.  I think the following simple text provides the
required clarification:
 
   "If the current thread calls this routine to join with itself, a
                                            ^^^^^^^^^^^^^^^^^^^^
    deadlock results."
 
I think the additional text accurately captures what is implied by the
existing text.  If the new text is correct and you have the time to include
it, this seems like a simple way to provide a little more information on the
topic.  You guys know the subject matter better than I do, so you can judge,
but some small clarification may be in order.
 
[Hal:  I assigned the defect to you for proper assigment to the appropriate
       Digital writer; thanks.]
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `open'

[2/22/94 public]

Assigned to Doug Weir.  OSF is now responsible for threads docs for 1.1

[10/26/94 public]
This change has been made.



CR Number                     : 9888
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : thr
Subcomponent Name             : app_ref
Short Description             : pthread_create manpage has duplicate .TH and synopsis
Reported Date                 : 2/4/94
Found in Baseline             : 1.1
Found Date                    : 2/4/94
Severity                      : B
Priority                      : 2
Status                        : verified
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : see below
Sensitivity                   : public

[2/4/94 public]
The pthread_create.3thr manpage as 2 problems:

    This line is repeated:
	.TH pthread_create 3thr 

    The synopsis of the function is repeated.

[2/28/94 public]

Assigned this CR to Doug Weir (OSF threads writer).

[10/26/94 public]
Done.



CR Number                     : 9772
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : thr
Subcomponent Name             : app_ref
Short Description             : Errors in app_ref manual
Reported Date                 : 1/19/94
Found in Baseline             : 1.0.3
Found Date                    : 1/19/94
Severity                      : C
Priority                      : 3
Status                        : verified
Duplicate Of                  : 
Fix By Baseline               : 1.2.2
Fixed In Baseline             : 1.2.2
Affected File(s)              : man3thr/pthread_attr_setprio.3thr
                                                     pthread_setprio.3thr 
                                                     pthread_setscheduler.3thr
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[1/19/94 public]

While working with Ron Sasala to write up the pthreads error messages, 
I came across the following changes that need to be made in the DCE 
Application Reference.  All references to pages are from the Application
Programming Reference, dated April 14, 1993, which is the OSF printed
version for the 1.0.2 release.

Page 1-56, the text for EINVAL should read, "The value specified for attr
is invalid."  Remove 'kind.'

Page 1-63, the text for ENOTSUP should read 'priority,' not 'policy.'

Page 1-16, EPERM should be added for pthread_attr_setprio as follows:

   -1   EPERM   The caller does not have the appropriate priveleges to set
                the priority of the specified thread.

Page 1-18, in the Returned Values, the description of EPERM should be
changed to say 'policy,' not 'priority.'

Page 1-61, the description for CANCEL_ON and CANCEL_OFF should read
'General,' not 'Asynchronous.'

Page 1-58 indicates that -1 is returned for pthread_once if there is an
invalid parameter, but there is no error indicated in the Returned-Values
table.  This should be an error EINVAL.

Page 1-63, ESRCH does not apply to pthread_setprio and should be deleted.

Page 1-65, ESRCH does not apply to pthread_setschedular and should be
deleted.

[1/19/94 public]

CORRECTION:  The last two items above SHOULD NOT be changed.  ESRCH does
apply to pthread_setprio and pthread_setschedular.

[10/26/94 public]

This is my fault-- some of these have not been done after all. Here
is a more precise list of exactly what needs to be or has been changed.

Two items, marked with asterisks below, are still outstanding. These
are deferred to 1.2.

Page 1-56, the text for EINVAL should read, "The value specified for attr
is invalid."  Remove 'kind.' 
[seems to have been done, as far as I can tell]

***********
the text for ENOTSUP should read 'priority,' not 'policy.'
[pthread_setprio and pthread_setscheduler manpages]

***********
Page 1-16, EPERM should be added for pthread_attr_setprio as follows:

   -1   EPERM   The caller does not have the appropriate priveleges to set
                the priority of the specified thread.
[manpage]

Page 1-18, in the Returned Values, the description of EPERM should be
changed to say 'policy,' not 'priority.'
[manpage; this has been done]

Page 1-61, the description for CANCEL_ON and CANCEL_OFF should read
'General,' not 'Asynchronous.'
[manpage; this has been done]

Page 1-58 indicates that -1 is returned for pthread_once if there is an
invalid parameter, but there is no error indicated in the Returned-Values
table.  This should be an error EINVAL.
[manpage; this has been done]

[6/30/95 public]

Assigned to HP for DCE 1.2.

[9/19/96 public]
Fixed and verified.  Verified by me.



CR Number                     : 9624
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : thr
Subcomponent Name             : app_ref
Short Description             : man page problem for pthread_mutexattr_getkind_np
Reported Date                 : 12/16/93
Found in Baseline             : 1.0.3
Found Date                    : 12/16/93
Severity                      : C
Priority                      : 2
Status                        : verified
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : see below
Sensitivity                   : public

[12/16/93 public]

The manpage for pthread_mutexattr_getkind_np() says its one and only
parameter is of type pthread_mutexattr_t *, but the source shows
that it is of type pthread_attr_t, which is the same as
pthread_mutexattr_t. In other word, the man page should not say that attr
is a pointer type.

[2/28/94 public]

Assigned this CR to Doug Weir (OSF threads writer).

[10/26/94 public]
This has been done.



CR Number                     : 9247
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : other
Component Name                : thr
Subcomponent Name             : port_gd
Short Description             : Race condition in  cma__wait
and cma__timed_wait
Reported Date                 : 10/22/93
Found in Baseline             : 1.0.3
Found Date                    : 10/22/93
Severity                      : C
Priority                      : 2
Status                        : verified
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 1.1doc
Affected File(s)              : see below
Sensitivity                   : public

[10/22/93 public]

Hitachi Noted that in trying to port our threads package to
kernel space, that they encountered a race condition in cma__wait
and cma__timed_wait. This race condition arises because these routines

unlock the mutex before "entering the kernel". This implementation exists
because doing the inverse would result in a deadlock on at least the
PMAX implementation of DCE threads.

    cma__int_unlock ((mutex)); \
    cma__enter_kernel (); \

see cma__wait and cma__timed_wait in file src/threads/cma_condition.h

Their should be a note in the porting and testing guide in the section
about threads, which captures this fact so it need not be learned by 
each porter of DCE threads to kernel threads.

[11/12/93 public]

Assigned this enhancement CR to Doug Weir and changed
"fixby" date from 1.0.3 to 1.1.

[10/26/94 public]

This material has been added in a separate section entitled
"Possible Race Condition in cma__wait" in Chapter 4 of the
Porting Guide.



