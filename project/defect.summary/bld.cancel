CR Number                     : 13313
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 13292
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : 
Short Description             : dce1.2 code does not build on rios
Reported Date                 : 2/8/96
Found in Baseline             : 1.2.1
Found Date                    : 2/8/96
Severity                      : A
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[2/8/96 public]

[shoul dhave opened this one earlier.]

DCE 1.2.1 code, as it is now with HP's early Dec 95 drop, does not build
on a rios machine. I should point it out that since we don't have CSet
C++ compiler, I was using gcc. Although I know the potential problem
with using gcc as a C++ compiler, I expect the code to build.

The build stops as follows (I have the complete build log):

for y in krb5_cksumarray krb5_cc_default krb5_unparse_name  krb5_get_default_realm krb5_build_principal  krb5_read_password krb5_decode_generic  krb5_rd_req_decoded krb5_free_ap_req krb5_mk_safe  krb5_rd_priv krb5_free_address krb5_free_cred_contents  krb5_free_tkt_authent krb5_init_ets krb5_parse_name  AP_REQ_dec AP_REQ2krb5_ap_req AP_REQ_free error_message;  do  echo $y >> libdce.syms;  done;
for y in afs_syscall;  do  echo $y >> libdce.syms;  done;
ld -o shr.o *.o -bloadmap:shr.o.map -bM:sre -bE:libdce.syms -bI:/lib/syscalls.exp -bI:/project/dce/build/dce1.2/src/libdce/RIOS/syms.imp -L/u1/wwang/sandbox/12/export/rios/usr/lib     -L/project/dce/build/dce1.2/export/rios/usr/lib -T512 -H512 -lbsd -lc -lm -lcurses -lkrb5 -liconv  2> shr.o.error
dtstime
*** Error code 8
`build_all' not remade because of errors.
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1
`build_all' not remade because of errors.

I have not had time to investigate further.

[2/8/96 public]

The above build already had the temp fix for OT 13292.

[2/8/96 public]

The build described above was performed on alphaville which
was running AIX ">3250", which is not exactly up to snuff with
respect to DCE 1.2.1's AIX OS platform requirements. Also, the
machine lacks the IBM CSet++ compiler. Either of the above 
are likely to cause build problems (although maybe not the one
that was encountered).

[2/9/96 public]

canceled until machine config issues are resolved. If build problems
persist, this OT should be reopened.



CR Number                     : 12985
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : idl_compiler
Short Description             : patch-8
Reported Date                 : 8/1/95
Found in Baseline             : 1.0.3
Found Date                    : 8/1/95
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/1/95 public]

[2/6/96 public]
Who would maintain OT's like this? Cancelled.



CR Number                     : 12984
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 10359
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : idl compiler
Short Description             : idl compiler -no_header
Reported Date                 : 8/1/95
Found in Baseline             : 1.0.3
Found Date                    : 8/1/95
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/1/95 public]

From yas@tyrolia.yk.fujitsu.co.jp  Thu Jul 13 08:15:30 1995
Received: from postman.osf.org by osf.osf.org (5.65/OSF 1.0)
	id AA16785; Thu, 13 Jul 1995 08:15:30 -0400
Received: from fgwmail.fujitsu.co.jp (fgwmail.fujitsu.co.jp [164.71.1.133]) by postman.osf.org (8.6.9/8.6.x) with ESMTP
	id IAA20480 for <dce-defect@osf.org>; Thu, 13 Jul 1995 08:15:15 -0400
Received: from fdmmail.fujitsu.co.jp by fgwmail.fujitsu.co.jp (8.6.12+2.5Wb4/3.3W5-MX950612-Fujitsu Mail Gateway)
	id VAA19522; Thu, 13 Jul 1995 21:15:04 +0900
Received: from ace.yk.fujitsu.co.jp by fdmmail.fujitsu.co.jp (8.6.12+2.5Wb4/3.3W5-MX950612-Fujitsu Domain Mail Master)
	id VAA28740; Thu, 13 Jul 1995 21:14:33 +0900
Received: from tyrolia.yk.fujitsu.co.jp (tyrolia.yk.fujitsu.co.jp [133.162.42.77]) by ace.yk.fujitsu.co.jp (8.6.12+2.5Wb7/3.3W9-95030309) with SMTP id VAA11844; Thu, 13 Jul 1995 21:15:17 +0900
Received: by tyrolia.yk.fujitsu.co.jp (4.1/6.4J.5)
	id AA21392; Thu, 13 Jul 95 12:14:18 GMT
Message-Id: <9507131214.AA21392@tyrolia.yk.fujitsu.co.jp>
To: dce-defect@osf.org
Reply-To: yas@ace.yk.fujitsu.co.jp
Subject: idl compiler -no_header
Date: Thu, 13 Jul 1995 21:14:17 +0900
From: Yasushi Watanabe <yas@tyrolia.yk.fujitsu.co.jp>

Hello , I'm Yasushi Watanabe one of the member of Fujitsu DCE porting group.

Now,we check the defect report and patch for DCE 1.0.3 to reflect.

We are checking CR No.10359 "idl -no_header option is broken."
Actually we can reappear this problem on DCE 1.0.3, but we cannot on DCE 1.1 .
Surely source is changed, but I cannot understand what should I do for 
DCE 1.0.3 source (idl_compiler/command.c) to run correctly.

Could you give me patch for command.c or show me the repair points?

Thanks and Regards.

----------------------------------------------------------------------------
  Fujitsu Limited              OPEN SOFTWARE DIVISION 5th DEVELOPMENT DEPT.
  Yasushi Watanabe             TEL:+81-45-474-1926  FAX:+81-45-473-3709
  NIFTY-Serve ID:HHA02574      E-mail:yas@ace.yk.fujitsu.co.jp
----------------------------------------------------------------------------

[9/11/95]

As stated above OT 10359 was created to address this problem.



CR Number                     : 12706
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : 
Short Description             : dce1.1-Unintegrated - Could not find osf.rules.mk
Reported Date                 : 10/22/94
Found in Baseline             : 1.1
Found Date                    : 10/22/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/22/94 public]

Platform AT486 
Nightly build failed with following errors:

Extract from build.log.10-21-94

[ /security/audit at 20:01 (PM) Friday ]
makepath audit/. && cd audit &&  exec make MAKEFILE_PASS=FIRST     build_all
"/project/dce/build/unintegrated-snap/src/security/audit/Makefile", line 48: Cou
l
d not find osf.rules.mk
Fatal errors encountered -- cannot continue
*** Error code 1

[10/22/94 public]
Yesterday, this problem was seen even though no new files were submitted.
Today the build is clean.  I am cancelling this OT.



CR Number                     : 11253
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : libraries
Short Description             : all libraries are built twice
Reported Date                 : 7/11/94
Found in Baseline             : 1.1
Found Date                    : 7/11/94
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/11/94 public]

On HP800, all static libraries are built twice - once
in  MAKEFILE_PASS=THIRD, once in MAKEFILE_PASS=BASIC.
Also: if you call build again it again builds this library twice -
but no file has changed since the last build.
Here is an example of a build log:

$ build
relative path: ./directory/xom
mkdir ../../../obj/hp800/directory/xom
cd ../../../obj/hp800/directory/xom
exec make MAKEFILE_PASS=AUTOGEN  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRST  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=FIRST     build_all
h: created directory
exec make MAKEFILE_PASS=FIRSTA  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTB  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=THIRD  _SUBMAKE_=_IS_SUBMAKE_  build_all
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omAlloc.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCode.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCopy.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCopyValu.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCreate.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omDelete.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omEntry.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omGet.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omInst.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omPut.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omRead.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omRemove.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omTrace.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omVersion.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omWkspace.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omWrite.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/u2/users/keutel/sb/jk/src/directory/xom -I/u2/users/keutel/sb/jk/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/u2/users/keutel/sb/jk/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/u2/users/keutel/sb/jk/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/u2/users/keutel/sb/jk/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omXext.c
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o
rm -rf /u2/users/keutel/sb/jk/export/hp800/usr/lib/libXOM.a
makepath /u2/users/keutel/sb/jk/export/hp800/usr/lib/libXOM.a
(cd .; tar cfh - libXOM.a) |  (cd /u2/users/keutel/sb/jk/export/hp800/usr/lib; tar xf -)
exec make MAKEFILE_PASS=BASIC  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=BASIC     build_all
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o
milo directory/xom$ build
relative path: ./directory/xom
cd ../../../obj/hp800/directory/xom
exec make MAKEFILE_PASS=AUTOGEN  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRST  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=FIRST     build_all
exec make MAKEFILE_PASS=FIRSTA  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTB  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=THIRD  _SUBMAKE_=_IS_SUBMAKE_  build_all
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o
rm -rf /u2/users/keutel/sb/jk/export/hp800/usr/lib/libXOM.a
makepath /u2/users/keutel/sb/jk/export/hp800/usr/lib/libXOM.a
(cd .; tar cfh - libXOM.a) |  (cd /u2/users/keutel/sb/jk/export/hp800/usr/lib; tar xf -)
exec make MAKEFILE_PASS=BASIC  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=BASIC     build_all
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o
milo directory/xom$ build
relative path: ./directory/xom
cd ../../../obj/hp800/directory/xom
exec make MAKEFILE_PASS=AUTOGEN  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRST  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=FIRST     build_all
exec make MAKEFILE_PASS=FIRSTA  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTB  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=THIRD  _SUBMAKE_=_IS_SUBMAKE_  build_all
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o
rm -rf /u2/users/keutel/sb/jk/export/hp800/usr/lib/libXOM.a
makepath /u2/users/keutel/sb/jk/export/hp800/usr/lib/libXOM.a
(cd .; tar cfh - libXOM.a) |  (cd /u2/users/keutel/sb/jk/export/hp800/usr/lib; tar xf -)
exec make MAKEFILE_PASS=BASIC  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=BASIC     build_all
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o
milo directory/xom$

[7/13/94 public]
Assigned to Annie, lowered severity to C - since there is a workaround
i.e. it works now - albeit inefficiently.

[9/7/94 public]
I tried the above on two platforms and could not reproduce the problem.
Marked as cancel.

The command that I used on an hp800 is as followed:

workon
cd directory/xom
build > /tmp/build.log 2>&1 &

/tmp/build.log shows the following:

relative path: ./directory/xom
mkdir ../../../obj/hp800/directory/xom
cd ../../../obj/hp800/directory/xom
exec make MAKEFILE_PASS=AUTOGEN  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRST  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=FIRST     build_all
h: created directory
exec make MAKEFILE_PASS=FIRSTA  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTB  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=THIRD  _SUBMAKE_=_IS_SUBMAKE_  build_all
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omAlloc.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCode.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCopy.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCopyValu.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omCreate.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omDelete.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omEntry.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omGet.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omInst.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omPut.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omRead.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omRemove.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omTrace.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omVersion.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omWkspace.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omWrite.c
c89 -c    -D_SHARED_LIBRARIES  +z   -DTHREADSAFE -D__hppa -Dhp9000s800 -Dhp9000s700 -D__hp9000s800 -D__hp9000s700 -DHPUX -D__hpux -Dunix +DA1.0 -D_HPUX_SOURCE    -I. -I/users/annie/dce11/src/directory/xom -I/project/dce/build/dce1.1/src/directory/xom  -Ih -I/users/annie/dce11/src/directory/xom/h -I/project/dce/build/dce1.1/src/directory/xom/h -I../xoms/h -I/users/annie/dce11/src/directory/xoms/h -I/project/dce/build/dce1.1/src/directory/xoms/h -I/users/annie/dce11/export/hp800/usr/include -I/project/dce/build/dce1.1/export/hp800/usr/include    /project/dce/build/dce1.1/src/directory/xom/omXext.c
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o
rm -rf /users/annie/dce11/export/hp800/usr/lib/libXOM.a
makepath /users/annie/dce11/export/hp800/usr/lib/libXOM.a
(cd .; tar cfh - libXOM.a) |  (cd /users/annie/dce11/export/hp800/usr/lib; tar xf -)
exec make MAKEFILE_PASS=BASIC  _SUBMAKE_=_IS_SUBMAKE_  build_all
[ /directory/xom/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=BASIC     build_all
ar crl libXOM.a omAlloc.o omCode.o omCopy.o omCopyValu.o omCreate.o omDelete.o omEntry.o omGet.o omInst.o omPut.o omRead.o omRemove.o omTrace.o omVersion.o omWkspace.o omWrite.o omXext.o



CR Number                     : 11013
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : Makefiles with include lines
Short Description             : Makefiles with include s lines behave funny
Reported Date                 : 6/20/94
Found in Baseline             : 1.1
Found Date                    : 6/20/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/20/94 public]
If you change a makefile such as rpc.mk that is being included
by another Makefile, ODE will NOT do the right thing unless you
have that Makefile that reference it in your sandbox.  This is
bad because it required the user to check out two files when 
changes are only being made on one of them - the "child" makefile.

[7/1/94 public]
I cancelled this bug because, ( if I understand it correctly), this
is an ODE bug and should be entered in that OT database.



CR Number                     : 10855
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : dme/services/sms
Short Description             : problem found in dme/services/sms
Reported Date                 : 6/3/94
Found in Baseline             : 1.0
Found Date                    : 6/3/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/3/94 public]

=========================   PROBLEM =====================================
From Mike at Mitre
==================
Robert:

    Here is the output of the SMS routine "sms_i_get_values" from file.c.  The first line prints the line that is
    passed to it extracted from the sms_subsys file.  It's the same one I emailed you a week or two ago and you said
    looked OK starting with "rpcd".

    It looks like the routine is setting elem->type to 3 or short for all cases after it finds the value 20. 
    Shouldn't the following 0 0 and 1 be identified as long values ?  Then when it finds the null after the 1 it
    indicates that it also is a short value.  Within the short processing, it ends up giving the null an
    invalid status for the whole record.  Any help would be appreciated.  Thanks.

- -- Mike

MJM - sms_i_get_values: starting temp=rpcd:::/usr/bin/rpcd:0:0:/dev/console:/dev/console:/dev/console:-O:-Q:-K:0:20:0:0:1::0::0::
MJM - sms_i_get_values:  token = rpcd elem->type = 0
MJM -sms_i_get_values: string value = rpcd
MJM - sms_i_get_values: found a null token!
MJM - sms_i_get_values:  token =  elem->type = 0
MJM -sms_i_get_values: string value = 
MJM - sms_i_get_values: found a null token!
MJM - sms_i_get_values:  token =  elem->type = 0
MJM -sms_i_get_values: string value = 
MJM - sms_i_get_values:  token = /usr/bin/rpcd elem->type = 0
MJM -sms_i_get_values: string value = /usr/bin/rpcd
MJM - sms_i_get_values:  token = 0 elem->type = 4
MJM - sms_i_get_values: long value = 0
MJM - sms_i_get_values:  token = 0 elem->type = 4
MJM - sms_i_get_values: long value = 0
MJM - sms_i_get_values:  token = /dev/console elem->type = 0
MJM -sms_i_get_values: string value = /dev/console
MJM - sms_i_get_values:  token = /dev/console elem->type = 0
MJM -sms_i_get_values: string value = /dev/console
MJM - sms_i_get_values:  token = /dev/console elem->type = 0
MJM -sms_i_get_values: string value = /dev/console
MJM - sms_i_get_values:  token = -O elem->type = 3
MJM - sms_i_get_values: case of short elem->type
MJM - sms_i_get_values: case of short elem->type not NULL
MJM - sms_i_get_values: Flag value = 2
MJM - sms_i_get_values:  token = -Q elem->type = 3
MJM - sms_i_get_values: case of short elem->type
MJM - sms_i_get_values: case of short elem->type not NULL
MJM - sms_i_get_values: Flag value = 0
MJM - sms_i_get_values:  token = -K elem->type = 3
MJM - sms_i_get_values: case of short elem->type
MJM - sms_i_get_values: case of short elem->type not NULL
MJM - sms_i_get_values: Flag value = 3
MJM - sms_i_get_values:  token = 0 elem->type = 4
MJM - sms_i_get_values: long value = 0
MJM - sms_i_get_values:  token = 20 elem->type = 4
MJM - sms_i_get_values: long value = 20
MJM - sms_i_get_values:  token = 0 elem->type = 3
MJM - sms_i_get_values: case of short elem->type
MJM - sms_i_get_values: short value = 0
MJM - sms_i_get_values:  token = 0 elem->type = 3
MJM - sms_i_get_values: case of short elem->type
MJM - sms_i_get_values: short value = 0
MJM - sms_i_get_values:  token = 1 elem->type = 3
MJM - sms_i_get_values: case of short elem->type
MJM - sms_i_get_values: short value = 1
MJM - sms_i_get_values: found a null token!
MJM - sms_i_get_values:  token =  elem->type = 3
MJM - sms_i_get_values: case of short elem->type
MJM - sms_i_get_values: case of short elem->type not NULL
MJM - sms_i_get_values: j=2 or flag value is equal to elem->linktype invalid record status return 
- --------------
0   rpcd:
1   ::/usr/bin/rpcd:0:0:/dev/console:/dev/console:/dev/console:-O:-Q:-K:0:20:0:0:1::0::0::

================================  COMMENTS from IBM ===========================
From Wayne at IBM
=================

The input record to sms_i_get_values looks bad.
There should be two 0's between the -K and the 20.
The field containing 20 and the following fields were not
processed correctly.
I'm sure this explains everything:-)
These two fields are not used for the -K (sockets)
case, but they need to be there.
The obj.c file in lib/libsms shows the pattern for this
type of record.
I would have expected something like this:
...-O:-Q:-K:0:0:20:0:0:-d:20::0::
as the latter part of the record.  The record was returned
as invalid because the field containing -d above was
null rather than the expected numerical value.
By that I mean the 1 would have been translated to -d
if it had been in the next field.

[6/3/94 public]

Is this a typo?  Why is an SMS bug in the DCE database?

[6/6/94 public]

cancelled - it should be in the DME database.

[6/7/94 public]
assign to known component, bld, to avoid automatic sweep
for "unknown" defects (which should check for "open" too).



CR Number                     : 10587
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : 
Short Description             : auto-create install/<machine>
Reported Date                 : 5/9/94
Found in Baseline             : 1.0
Found Date                    : 5/9/94
Severity                      : D
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/9/94 public]
mksb should create ${sandbox_base}install/${target_machine} for you.

Also, build should be able to create TOSTAGE if it doesn't exist.  If you
don't have the directories in place you get an error.  Note that in DCE
the TOSTAGE variable is set to /opt/dce1.1 in the whole tree, except, the 
src/test/test.mk changes it to /dcetest/dce1.1 for all files under the
src/test/ subtree.  ODE is smart enough to create any needed IDIR's for
you, it should also create TOSTAGE for you.

[5/10/94 public]
Transferred to ODE defect #1114.



CR Number                     : 10585
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : DEFTOOLBASE assignment
Short Description             : DEFTOOLBASE assignment (re: building of setup passes in one's sandbox)
Reported Date                 : 5/9/94
Found in Baseline             : 1.1
Found Date                    : 5/9/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[5/9/94 public]

One cannot do the following in one's sandbox:

    build setup_all

wihtout seting the environment variable DEFTOOLBASE.

This broke one of the requirements for DCE stated in the Appendix I 
of RFC 34.

Currently DEFTOOLBASE is hard-coded and is currently incorrectly 
set.  

The search path for the tools SHOULD have been to the tools area
in one's sandbox.  If the tools are not there, then to the tools
area in the backing tree.

===============================================================
The fix is as followed:

    1) Add the following to src/lbe/mk/osf.dce.mk

       DEFTOOLBASE?=${SOURCEBASE}/../tools/${target_machine}/bin/
       BACKTOOLBASE=${SOURCEBASE}/../link/tools/${target_machine}/bin/
       ...
       .if exists(${DEFTOOLBASE}idl)
           IDL?=${DEFTOOLBASE}idl
       .else
           IDL?=${BACKTOOLBASE}idl
       .endif
       ... (all other tools in the tools area)

    2) Take out all references of DEFTOOLBASE from common Makefiles
       and Buildconf* files in src/dce.

thanks
annie

[5/9/94 public]
Current state of the world is that the above fix is not liked since
it contains no support for shared sandboxes.

There is no requirement in RFC 34, it merely documents that to build the
tools you must set DEFTOOLBASE.

The problem that this CR describes is that to build the tools you must set
DEFTOOLBASE to you sandbox's tools/bin directory.  Otherwise, since
DEFTOOLBASE is set to the tools dir in the backing tree, you get an error
when trying to write to it (it's usually mounted read-only).  

Since there is a valid work around and this only occurs if you are trying
to build tools, which most engineers do not do, this is severity D, not A.

Since this is not holding anyone up or gating Beta changed priority to 3
(low).

[5/10/94 public]
The solution (by design) is to simply uncomment the DEFTOOLSBASE line in
the Buildconf.exp file.  

A better solution would be to implement DEFTOOLSBASE as a search path,
rather than a command invocation prefix, but that's decidedly more
involved.

[7/1/94 public]
Since it works now, and users now know that it works in the convoluted
way that it does I have lowered the severity to an E.
Assigned it to Annie

[8/24/94 public]
This is a duplicate of CR # 8540.  It should be canceled along with 8540.



CR Number                     : 10280
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : 
Short Description             : tar problem
Reported Date                 : 4/4/94
Found in Baseline             : 1.1a
Found Date                    : 4/4/94
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/4/94 public]

THIS is NOT a bug.



CR Number                     : 10154
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : common makefiles
Short Description             : Need a way to override CPFLAGS
Reported Date                 : 3/16/94
Found in Baseline             : 1.1
Found Date                    : 3/16/94
Severity                      : B
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : osf.std.mk
Sensitivity                   : public

[3/16/94 public]
When building using EXPORT_USING_CP in an NFS mounted sandbox I run into
the following problems:

[ /security/audit/h ]
makepath h/. && cd h &&  exec make MAKEFILE_PASS=FIRST     build_all
h: created directory
rm -f /u2/share/sb/general/export/at386/usr/include/dce/audit.h
makepath /u2/share/sb/general/export/at386/usr/include/dce/audit.h
cp -p -r /project/dce/build/dce1.1/src/security/audit/h/audit.h
/u2/share/sb/general/export/at386/usr/include/dce/audit.h
cp: /u2/share/sb/general/export/at386/usr/include/dce/audit.h: Not owner
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1
`build_all' not remade because of errors.
*** Error code 1
`build_all' not remade because of errors.

This is because of the '-p'.  I would like a way to override the default
CPFLAGS.

[03/16/94 public]
DEF_CPFLAGS.  Cancelling.



CR Number                     : 10071
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : other
S/W Ref Platform              : sinix
Component Name                : bld
Subcomponent Name             : install-ref tool in DTE
Short Description             : install-ref filters sml file incorrectly
Reported Date                 : 3/4/94
Found in Baseline             : 1.0.3
Found Date                    : 3/4/94
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : install-ref
Sensitivity                   : public

[3/4/94 public]

install-ref tool in DTE filters .nS macro definition (in sml) incorrectly
when it prepends it to the installed man pages. The original definition
of ".nS" macro in macros/sml file contains the following lines:

.el .ds yy \\$1:\ \ \"  use user-supplied note header..
.ft B

The filter in install-ref prepends the filtered sml file to each man page.
For filtering sml file it calls 'sed' several times as shown below:

# This is what we will insert after the .TH

if $sml_insert ; then
    echo '...\" ______________ start of SML macros ______________' > $smlinc
    (cd $sml_dir ; cat header.all sml rsml ) |
        sed -e '/^\.\.\.\\/d' -e 's/[   ]*\\\".*//' \
            -e '/\.d[es] [A-Za-z][A-Za-z]$/s/ //' \
            -e 's/^\.   /./' \
            -e 's/\.el /.el/' -e 's/\.if /.if/' -e 's/\.ie /.ie/' \
                >> $smlinc
    echo '...\"'  >> $smlinc
    echo '.rm zA' >> $smlinc
    echo '.rm zZ' >> $smlinc
    echo '...\" ______________ end of SML macros ______________' >> $smlinc

The second "-e" in line "sed -e '/^\.\.\.\\/d' -e 's/[   ]*\\\".*//' \"
filters out * \"  use user-supplied note header..* in the ".nS" definition
and this escapes the new line character due to preceding back slash.
So the string 'yy' gets defined to the remaining text on the line plus
next line, i.e., ".ft B" at the end. To fix this problem change the line
as shown:

 Original: sed -e '/^\.\.\.\\/d' -e 's/[   ]*\\\".*//' \
Suggested: sed -e '/^\.\.\.\\/d' -e 's/[   ]*\\\".*/ /' \
                                                    ^
                                                    | space here

This extra spce before new line will allow back slash be taken as 
escaping space and not the new line.

[3/4/94 public]

After trying the above change failed in other definitions that were not
expecting space if there was not space before '\"' pattern. So to correct
that problem, I added one more -e in the sed command above as show:

 Original: sed -e '/^\.\.\.\\/d' -e 's/[   ]*\\\".*//' \
Suggested: sed -e '/^\.\.\.\\/d' -e 's/[   ]+\\\".*/ /' -e 's/\\\".*//' \
                                            ^       ^  ^<-ADDED NEW-->^
                                  CHANGED-->|_______|  |______________|

This appears tobe holding so far. However, if this one too turns out
to be a problem also then the 'sml' macro file needs to be changed.
Possible fix could be in defintion of ".nS" :

Original:
.el .ds yy \\$1:\ \ \"  use user-supplied note header..
.ft B

Proposed:
.el \{\
.ds yy \\$1:\ \ \"  use user-supplied note header..
\}
.ft B

This works without requiring any changs in install-ref.

OSF needs to choose the correct fix and please let us know.

[3/7/94 public]

DCE documentation folks are not responsible for fixing bugs in the DTE, so
I am canceling this report.  I added doc-tools to the interest list CC.
The person currently responsible for doc tools at OSF is Fred Dalrymple
(fred@osf.org), who is on the doc-tools mailing list.  Fred will have to
decide what to do about this report.  My understanding is that he is no
longer fixing bugs in the old (pre-SGML) DTE.



CR Number                     : 9977
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 9906, 9961
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : common makefiles
Short Description             : gratuitous ar invocations
Reported Date                 : 2/18/94
Found in Baseline             : 1.1
Found Date                    : 2/18/94
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[2/18/94 public]
For some reason, on the HP 'ar' is invoked even when the library has
already been built.  Also, libraries are being built in the BASIC pass. 

prague audit/libaudit$ build
relative path: ./security/audit/libaudit
cd ../../../../obj/hp800/security/audit/libaudit
exec make MAKEFILE_PASS=AUTOGEN  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRST  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTA  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTB  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=THIRD  _SUBMAKE_=_IS_SUBMAKE_  build_all
ar crl libaudit.a audit_update_sstub.o audit_pickle_cstub.o
audit_log_cstub.o esl_in_core.o esl_file_read.o esl_sync.o evt_classes.o
trl_ops.o evt_write.o evt_read.o evt_filter.o evt_utils.o
rm -rf /u2/share/sb/commaud/export/hp800/usr/lib/libaudit.a
makepath /u2/share/sb/commaud/export/hp800/usr/lib/libaudit.a
(cd .; tar cfh - libaudit.a) |  (cd
/u2/share/sb/commaud/export/hp800/usr/lib; tar xf -)
exec make MAKEFILE_PASS=BASIC  _SUBMAKE_=_IS_SUBMAKE_  build_all
ar crl libaudit.a audit_update_sstub.o audit_pickle_cstub.o
audit_log_cstub.o esl_in_core.o esl_file_read.o esl_sync.o evt_classes.o
trl_ops.o evt_write.o evt_read.o evt_filter.o evt_utils.o
prague audit/libaudit$ build
relative path: ./security/audit/libaudit
cd ../../../../obj/hp800/security/audit/libaudit
exec make MAKEFILE_PASS=AUTOGEN  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRST  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTA  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTB  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=THIRD  _SUBMAKE_=_IS_SUBMAKE_  build_all
ar crl libaudit.a audit_update_sstub.o audit_pickle_cstub.o
audit_log_cstub.o esl_in_core.o esl_file_read.o esl_sync.o evt_classes.o
trl_ops.o evt_write.o evt_read.o evt_filter.o evt_utils.o
rm -rf /u2/share/sb/commaud/export/hp800/usr/lib/libaudit.a
makepath /u2/share/sb/commaud/export/hp800/usr/lib/libaudit.a
(cd .; tar cfh - libaudit.a) |  (cd
/u2/share/sb/commaud/export/hp800/usr/lib; tar xf -)
exec make MAKEFILE_PASS=BASIC  _SUBMAKE_=_IS_SUBMAKE_  build_all
ar crl libaudit.a audit_update_sstub.o audit_pickle_cstub.o
audit_log_cstub.o esl_in_core.o esl_file_read.o esl_sync.o evt_classes.o
trl_ops.o evt_write.o evt_read.o evt_filter.o evt_utils.o

[2/6/96 public]

Since HP's build env is little different its hard to confirm or reject
the claim. However, looking at my HP build logs (clearcase+ODE combination)
I did not find such multiple instance of ar'ing of the same library. So
closing.

[2/8/96 public]
Since there is no proff of fix and also the plaforms and environment has 
changed, marking this OT cancelled.



CR Number                     : 9754
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : 
Short Description             : Signal 10 on HPUX in file/tkc's build
Reported Date                 : 1/17/94
Found in Baseline             : 1.0.3a
Found Date                    : 1/17/94
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[1/17/94 public]

We got a Signal 10 in last night's DCE1.0.3a build on the HPUX platform.
Look in:
    zagreb:/u2/devobj/sb/nb103_ux/obj/hp800/file/tkc

There is a core file there.

The full log is in
    zagreb:/u2/devobj/sb/nb103_ux/logs/build.log.01-16-94

The refined log with references to line number in the above
log file is in
    zagreb:/u1/users/annie/parse/hpux/build.e

Looking at the Makefile, the build got to tkc_locks.c and died.
The next source code tkc_revoke.c did not get built.

Let me know if you have any questions.

[2/22/94 public]

Since this was assigned to the 1.1 area, I took a look at the HP build on
zagreb:/u3/devobj/sb/nb_ux/logs/build.log.02-21-94 and found no indication
of a Signal 10. This was determined by doing a grep on Signal and a visual
inspection of ./file/tkc. 
I am cancelling this defect.
If this is a problem with dce1.1a, it should be noted as
such.



CR Number                     : 9728
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : 
Short Description             : rename 'autogen' pass to
'samidl' pass
Reported Date                 : 1/12/94
Found in Baseline             : 1.1
Found Date                    : 1/12/94
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : lbe/mk/osf.dce.passes.mk
Sensitivity                   : public

[1/12/94 public]
The AUTOGEN pass in the makefiles implements the "samidl" functionality.
The naming is a little screwy, however:

	SAMIDL_SUBDIRS - specifies the directories to be visited
	SAMIDL_INCLUDES
	SAMS_TARGETS
	SAMSFILES      - all specify the SAMS targets for the pass
	samidl_all	- is the build target to only invoke that pass

... and yet the pass is named autogen and so it appears in the build log.

Why confuse the issue?  Let's rename it the SAMIDL pass.

[01/12/94 public]

Well, the intent is that AUTOGEN was supposed to be a superset that
included sams, idl, and anything else that might (later) be generated
before being compiled.  Perhaps it's not worth keeping the distinction.

[1/13/94 public]

Since we've headed down the path where everything is named SAMIDL except
the pass naming process, let's just fix the name.

Assigning this to Mario Moreira.

[4/19/94 public]

Given that the AUTOGEN pass has been around awhile now so people are 
beginning to identify with it (I can relate man!) and given the
resources available, it has been decided that AUTOGEN is a rather nice
name.  Also the intent was that AUTOGEN was supposed to be a superset that
included sams, idl, and anything else that might (later) be generated
before being compiled.  With all of this on the pro side to keep AUTOGEN
as the name it is worth keeping the distinction!  The AUTOGEN info will
be sent to doc to document the AUTOGEN pass in the Porting and Testing
Guide.

[4/20/94 public]
Note: same message as 4/19/94 entry except it is more reasonable to cancel
this ot instead of close since no real work has been done.
Given that the AUTOGEN pass has been around awhile now so people are 
beginning to identify with it (I can relate man!) and given the
resources available, it has been decided that AUTOGEN is a rather nice
name.  Also the intent was that AUTOGEN was supposed to be a superset that
included sams, idl, and anything else that might (later) be generated
before being compiled.  With all of this on the pro side to keep AUTOGEN
as the name it is worth keeping the distinction!  The AUTOGEN info will
be sent to doc to document the AUTOGEN pass in the Porting and Testing
Guide.



CR Number                     : 9055
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : 
Short Description             : "NO_SHARED_LIBRARIES=1" won't work
Reported Date                 : 10/6/93
Found in Baseline             : 1.0.3
Found Date                    : 10/6/93
Severity                      : B
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[10/6/93 public]

I made the following change in Makeconf and then built test/rpc/runtime/perf
but the resulting client & server images are still shared:

.elif ${TARGET_MACHINE}=="HP800"

   NO_SHARED_LIBRARIES=1

   TARGET_OS ?= HPUX
   target_os ?= hpux
   TARGET_CPU ?= PARISC
   target_cpu ?= parisc
   ANSI_CC?=c89

[10/6/93 public]

Status --- "open" to "cancel"

It works with "LINK_STATIC" defined. But, Makeconf needs some cleanup.



CR Number                     : 8677
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : Buildconf
Short Description             : Make OBJECTDIR an absolute path
Reported Date                 : 9/24/93
Found in Baseline             : 1.0.3
Found Date                    : 9/24/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : Buildconf.exp and others
Sensitivity                   : public

[9/24/93 public]
OBJECTDIR is used by the 'build' program to find the place where it should
leave the object files created by the build.  (In actuality, this is where
the build program "cd's" to when building.)  This path is currently a
relative path from the local sandbox source tree:

	../obj/${target_machine}

There is an advantage to making this an absolute path: it makes life easier
for DCE developers when debugging problems.  They can invoke the debugger
without having to specify a path to the object file.

There would be some impact on DCE source code.  The following files have
built-in dependencies on OBJECTDIR and would need to be changed:
./file/MMAX/machdep.mk
./file/episode/libefs/OSF1/Makefile
./file/libafs/HPUX/Makefile
./file/libafs/OSF1/Makefile
./file/osi/test_trace.pl
./file/all.sh
./file/install.sh

Also, I haven't given any thought to how this might impact providers or
licensees.

[1/13/94 public]

Assigning to Mario Moreira for review.

[7/1/94 public]
Re-assigned to annie

[7/11/94 public]
There are some problems that I see here.  The first is that this 
change will only be mildly effective in making developers more
productive in the way they do their debugging.  I talked with 
Tom Jordahl and I get the impression that the window within which
to use 'absolute-paths-to-objects'  is fairly narrow and that 
a lot of work would still be needed to support an effective debugging
environment for DCE.  The nightly builds don't have debugging turned-on and
require rebuilding anyway.  Rebuilding (with debugged) backed by a nightly build
using absolute pathnames will only be useful until the nightly build
is turned into a weekly build (at which point the objects will be
pointing to the wrong sources anyway).

Rather than starting an argument over the merits of this particular
solution; it might be more beneficial to list some of the ways
people are currently debugging DCE.  There are some pretty good
ideas out there.

John Bowe has an interesting  way of debugging.  While in a sandbox he
has a script that creates a link in the 'src' tree to a corresponding
executable in the 'obj' tree.  The script traverses all the "../../../obj"
nonsense and he is able to  run gdb on the executable AND be
in the same directory to edit the sources.  Pretty clever if you ask me.
This, of course, does require him to be in a sandbox environment.

Any Mckeen has a few aliases that basically "pushd" and "popd" back
and forth from the 'obj' directory and the 'src' directory.

Tom Jordahl has windows side-by-side (one in the 'obj' tree and 
one in the 'src' tree) to do debugging.


Granted, these techniques are not cutting edge technology, but, these
guys are getting a lot of work done.


Tom mentioned that you guys get more pain from the fact that 'released'
executables (from the nightly builds??) are not compiled with "-g" and
when a problem is found, you need to rebuild with "-g" in order
to go into 'gdb' to find the problem.  Maybe we should look to 
eliminating this part of the debugging cycle.


Ideas??  Comments!!

[melman 7/11/94 public] 
A lot of debuggers let you set a path to search for files in (path_map
in xdb).  I usually run the debugger in the object tree and set this
path as appropriate.

[8/24/94 public]
Considering we are about to enter functional code freeze tomorrow, 
I propose that we cancel this CR.  It would have been very nice to help
in debugging DCE, but, It seems like it is a little too late.

[8/24/94 public]
certainly agreed.

[8/24/94 public]
Disagree.  This should be carried forward into dce1.2.

[8/24/94 public]
Maybe our time could be better spent making up a wishlist of suggestions
for the people who will be taking over all this stuff.   I'm not trying to 
start an argument here, but, this request is so narrow in scope and
its benifits are so small that people will probably wonder why we 
worried about it in the first place.  Once this environment is given to
the providers, most (if not ALL) the folklore, history, and tricks-of-the-trade
that we have developed will be gone.  I'm betting that the next integrator
is going to overhaul the build environment and source tree organization.



CR Number                     : 8613
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 8602,9754
Project Name                  : dce
H/W Ref Platform              : i486,other
S/W Ref Platform              : osf1,other
Component Name                : bld
Subcomponent Name             : build
Short Description             : spurious Signal 11 during build
Reported Date                 : 9/16/93
Found in Baseline             : 1.0.3
Found Date                    : 9/16/93
Severity                      : C
Priority                      : 1
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : ./lbe/bin/make/dir.c,make.c,var.c,lst.lib/lstDeQueue.c
Sensitivity                   : public

[9/16/93 public]

During the course of a build on the 486 I have been frequently seeing
spurious Signal 11's.   


# rm ../../../obj/at386/file/flserver/flserver
# build
relative path: ./file/flserver
cd /usr/sandbox/delgado/laugh/new486/obj/at386/file/flserver
exec make MAKEFILE_PASS=FIRST  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTA  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=FIRSTB  _SUBMAKE_=_IS_SUBMAKE_  build_all
exec make MAKEFILE_PASS=THIRD  _SUBMAKE_=_IS_SUBMAKE_  build_all
*** Signal 11

Stop.
#

Now if I say "build flserver" things will work:

# build flserver
relative path: ./file/flserver
cd /usr/sandbox/delgado/laugh/new486/obj/at386/file/flserver
/project/dce/build/dce1.0.3/tools/at386/macho/gcc -B/project/dce/build/dce1.0.3/tools/at386/macho/
-%ld," -warn_nopic -glue"  -O        -L/usr/sandbox/delgado/laugh/new486/export/at386/usr/shlib -L/u
sr/sandbox/delgado/laugh/new486/export/at386/usr/shlib -L/project/dce/build/dce1.0.3/export/at386/us
r/shlib -L/usr/shlib -L/usr/sandbox/delgado/laugh/new486/export/at386/usr/lib     -L/usr/sandbox/del
gado/laugh/new486/export/at386/usr/lib     -L/project/dce/build/dce1.0.3/export/at386/usr/lib   -o f
lserver.X fldb_proc_sstub.o flserver.o flutils.o flprocs.o  -lnubik -lcmd -lafsutil -lncompat   -lfl
db -ldacl -ldauth -ldacllfs -ldacl -ldauth  -ldacllfs -losi -lcommondata -lcom_err  -licl -ldce -laf
ssys -lbsd
mv flserver.X flserver
#


I'd like to point out that this is also showing up in the nighly build
logs on the 486.  The problem is that the Signal 11 will not be flagged
as an error, so generally the error checking scripts will not pick this
up.  The end result is that install will complain because some targets
haven't been built.

The nightly build log from 09-13-93 manifests this problem:$ 

fgrep "Signal 11" build.log.09-13-93
*** Signal 11 (continuing)
*** Signal 11 (continuing)
*** Signal 11 (continuing)
*** Signal 11 (continuing)
*** Signal 11 (continuing)
*** Signal 11 (continuing)
*** Signal 11 (continuing)
$

-Wtrigraphs -Wcomment -DEPI_USE_FULL_ID -DDACL_EPISODE -DDACL_COMPILE_FOR_EPI
  -I. -I/u1/devobj/sb/nb_486/src/file/security/dacl_lfs -I/project/dce/build/dce
1.0.3-snap/src/file/security/dacl_lfs  -I../dacl -I/u1/devobj/sb/nb_486/src/file
/security/dacl -I/project/dce/build/dce1.0.3-snap/src/file/security/dacl -I/u1/d
evobj/sb/nb_486/export/at386/usr/include -I/project/osc/build/osc_sbox1.2/export
/at386/usr/include -I/project/osc/build/osc1.2/export/at386/usr/include -I/proje
ct/dce/build/dce1.0.3-snap/export/at386/usr/include -I/project/osc/build/osc_sbo
x1.2/export/at386/usr/include -I/project/osc/build/osc1.2/export/at386/usr/inclu
de  -pic-lib   -L/u1/devobj/sb/nb_486/export/at386/usr/shlib -L/project/dce/buil
d/dce1.0.3-snap/export/at386/usr/shlib -L/usr/shlib -L/u1/devobj/sb/nb_486/expor
t/at386/usr/lib     -L/project/dce/build/dce1.0.3-snap/export/at386/usr/lib    -
ldce   /project/dce/build/dce1.0.3-snap/src/file/security/dacl/dacl_print.c
/project/dce/build/dce1.0.3-snap/tools/at386/macho/gcc -B/project/dce/build/dce1
.0.3-snap/tools/at386/macho/  -%ld," -warn_nopic -glue"  -O        -L/u1/devobj/
sb/nb_486/export/at386/usr/shlib -L/project/dce/build/dce1.0.3-snap/export/at386
/usr/shlib -L/usr/shlib -L/u1/devobj/sb/nb_486/export/at386/usr/lib     -L/proje
ct/dce/build/dce1.0.3-snap/export/at386/usr/lib   -o testacl.epi.X testacl.o dac
l_print.o dfssec_errorStrings.o ../dacl/libdacl.a libdacllfs.a  -lafssys -losi -
lcmd -lcmdAux -lcom_err -ldce -lbsd
mv testacl.epi.X testacl.epi
[ /file/security/dfsauth at 00:52 (AM) Tuesday ]
makepath dfsauth/. && cd dfsauth &&  exec make MAKEFILE_PASS=BASIC     build_all
*** Signal 11 (continuing)
:

[9/17/93 public]
Reassigned to Chris Doherty.  Changed to severity to C because there is a
workaround.  Priority remains high because this does need to be cleaned up
soon.

[10/08/93 public]
Chris is leaving the group, so reassigned it to me.
It appears to be a restriction in the DCE make. the corrct thing to do is
upgrade make to run ODE2.3 make.
This has been designalted to happen in 1.1 time frame since we are so close
to a release.

[01-13-94 public]

Cancelling this defect because we have moved to the ODE2.3 make.

[03-29-94]

This bug still has significance to our 1.0.3 customers, and is a good
candidate for repair in the 1.0.3 patch repository. I believe the problem
reported above to have been caused by multiple frees of the same memory.

I checked that ode2.3 make, and found that the fixes reported below, had
already been made.

The changes captured in the following diffs were shown to fix the "signal
11 problem" on our port to the Sequent machine.

Also, the problem reported on hpux as "signal 10" in OT 9754 
may have been simply a different operating systems way of reporting the
same problem (SIGBUS instead of SIGSEGV).

===================================================================
RCS file: ./lbe/bin/make/lst.lib/lstDeQueue.c,v
retrieving revision 1.1
retrieving revision 1.1.2.1
*** 1.1	1994/03/07 16:31:46
--- 1.1.2.1	1994/03/22 21:03:47
***************
*** 96,107 ****
      if (tln == NilListNode) {
  	return ((ClientData) NIL);
      }
!     
      if (Lst_Remove (l, (LstNode)tln) == FAILURE) {
  	return ((ClientData) NIL);
      } else {
! 	rd = tln->datum;
  	(void) free ((char *)tln);
  	return (rd);
      }
  }
--- 100,113 ----
      if (tln == NilListNode) {
  	return ((ClientData) NIL);
      }
! 
!     rd = tln->datum;    
      if (Lst_Remove (l, (LstNode)tln) == FAILURE) {
  	return ((ClientData) NIL);
      } else {
! /* depend on Lst_Remove to do memory management
  	(void) free ((char *)tln);
+         */
  	return (rd);
      }
diff -c -r1.1 -r1.1.2.1
  }
===================================================================
RCS file: ./lbe/bin/make/var.c,v
retrieving revision 1.1
retrieving revision 1.1.2.1
diff -c -r1.1 -r1.1.2.1
*** 1.1	1994/03/07 16:33:00
--- 1.1.2.1	1994/03/22 21:02:53
***************
*** 1765,1772 ****
  		    ln = Lst_Member(ctxt->context, (ClientData)valVar);
  		    Lst_Remove(ctxt->context, ln);
  		    Buf_Destroy(valVar->val, TRUE);
  		    free((Address)valVar);
! 
  		    break;
  		}
  		case 'D':
--- 1778,1786 ----
  		    ln = Lst_Member(ctxt->context, (ClientData)valVar);
  		    Lst_Remove(ctxt->context, ln);
  		    Buf_Destroy(valVar->val, TRUE);
+ /* depend on Lst_remove to do memory management
  		    free((Address)valVar);
!                     */
  		    break;
  		}
  		case 'D':
===================================================================
RCS file: ./lbe/bin/make/make.c,v
retrieving revision 1.1
retrieving revision 1.1.2.1
diff -c -r1.1 -r1.1.2.1
*** 1.1	1994/03/07 16:32:46
--- 1.1.2.1	1994/03/22 21:09:18
***************
*** 352,358 ****
--- 356,364 ----
  			gn = (GNode *)Lst_Datum (aln);
  			Var_Set (argName, gn->name, pgn);
  			Lst_Remove (pgn->children, aln);
+ /* Depend on Lst_Remove to do memory management
  			free((char *)aln);
+                         */
  			pgn->unmade--;
  		    }
  		}
===================================================================
RCS file: ./lbe/bin/make/dir.c,v
retrieving revision 1.1
retrieving revision 1.1.2.1
d*** 1.1	1994/03/07 16:32:34
--- 1.1.2.1	1994/03/22 21:07:09
***************
*** 1454,1463 ****
  
  	ln = Lst_Member (openDirectories, (ClientData)p);
  	(void) Lst_Remove (openDirectories, ln);
- 
  	Hash_DeleteTable (&p->files);
  	free((Address)p->name);
  	free((Address)p);
      }
  }
  
--- 1461,1471 ----
  
  	ln = Lst_Member (openDirectories, (ClientData)p);
  	(void) Lst_Remove (openDirectories, ln);
  	Hash_DeleteTable (&p->files);
  	free((Address)p->name);
+ /* Depend on Lst_Remove to do memory management
  	free((Address)p);
+ 	*/
      }
  }
iff -c -r1.1 -r1.1.2.1



CR Number                     : 8553
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : 
Short Description             : libdce load -L's are wrong
Reported Date                 : 9/2/93
Found in Baseline             : 1.0.3
Found Date                    : 9/2/93
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[9/2/93 public]
The general directive is:  "do something about this."

Here's a synopsis of the mail exchange which resulted in this defect being
opened: 

Tom Jordahl:
-----------
The link line for libdce.sl on the HP's looks like this:

ld -b -L/build/tom/rpc/export/hp800/usr/shlib 
	-L/build/tom/rpc/export/hp800/usr/shlib 
	-L/project/dce/build/dce1.0.3/export/hp800/usr/shlib 
	-L/usr/shlib 
	-L/build/tom/rpc/export/hp800/usr/lib     
	-L/build/tom/rpc/export/hp800/usr/lib     
	-L/project/dce/build/dce1.0.3/export/hp800/usr/lib   
- -o libdce.sl.X libdce_1.o libdce_2.o libdce_3.o libdce_4.o  -lm   

There are a few things wrong with this:

	- /usr/lib and /lib are not specified

	- Why is -lm specified?  It wont find it given the -L switches.

	- all the 'shlib' directories are incorrect for TARGET_OS other
	  than OSF/1 (and perhaps SVR4).

Howard:
------

/usr/lib and /lib are the default locations.  The HP linker looks in the -
-L's before the default locations which are /usr/lib and lib.  The -b says
use a .sl before a .a if you have a choice.

-lm is specified because something in libdce needs (at least used to)
something from the math library, but I forget what.  If it doesn't any
more, it should be removed.  Getting a list of undefined symbols from
libdce and seeing if any are in libm.a would be the way to find out.

If these -L's appear in builds on other machines, then that is a bug.  The
only thing that looks like it won't work on other machines in the above
list is /usr/shlib.  The others are all in the export tree that is part of
a sandbox and is immaterial to what platform it's on.  (I think we always
put our .sl's in <dcelocal>/usr/shlib and our .a's in <dcelocal>/usr/lib.

Now, I'm not sure how these -L's are generated.  Are they machine specific
or not?  Each Makefile (or component.mk file) is responsible to define
LIBFLAGS that are good for all machines and ${TARGET_MACHINE}_LIBFLAGS for
the machine-specific ones.  Yes in 1.1 this will probably have an
OS-specific flavor too.

Tom adds:
--------
The directory shlib is not used for anything on non-OSF/1 platforms.
libdce is installed into /opt/dcelocal/lib on the HP's and exported to
/usr/lib.

The export paths that have shlib in them are useless.
The -L's for HP should be:

	-L/project/dce/build/dce1.0.3/export/hp800/usr/lib
	-L<sandbox>/export/hp800/usr/lib

[12/23/93 public]
Removed my name as responsible engineer.

[1/22/94 public]
 Added my name as responsible engineer

[7/1/94 ]
[Reassigned to Annie

[2/6/96 public]
Here is what works fine for us:

/vob/dce/external/hp800/bin/ld -b -L/vob/dce/export/hp800/usr/shlib -L/vob/dce/export/hp800/usr/lib -L/vob/dce/external/hp800/lib -L/vob/dce/external/hp800/usr/lib -L/vob/dce/external/hp800/lib -L/vob/dce/external/hp800/usr/lib -o libdce.sl.X libdce_1.o libdce_2.o libdce_3.o libdce_4.o -lm

So cancelling the defect.



CR Number                     : 8540
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : 
Short Description             : DEFTOOLBASE should be a path
Reported Date                 : 8/30/93
Found in Baseline             : 1.1
Found Date                    : 8/30/93
Severity                      : D
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : possibly Buildconf,
osf.dce.mk, and/or osf.std.mk
Sensitivity                   : public

[8/30/93 public]
Not sure of the severity or priority of this, so I did D2.

DEFTOOLBASE is currently just a single directory that is stuck before tools
(e.g. idl) before the are run.  It should be a path like most other ODE
things so that some tools can be found in my sandbox and other gotten from
either the shared sandbox or backing tree.

To do this you probably need to separate the functionality of the current
DEFTOOLSBASE into two parts:

 1.  Where tools built during the setup pass are places.  I recommend
     using a name like SETUPDIR to match IDIR, and EXPDIR.

 2.  Where tools are found during a build.  I recommend using something
     like TOOLSPATH.

[1/21/94 public]
DEFTOOLBASE is meant to be a single directory path.  When creating tools,
it needs to know specifically where to place the tools (during setup pass).
Of course we could easily change the name of DEFTOOLBASE to SETUPDIR, but 
you'd only really see this in the Buildconf file.

The reasoning to have just one place for tools is so developers wouldn't
have to compile tools and there is an assurance that tools are the latest
and greatest.  Also so (accidently) old tools don't get used within a 
developers sandbox. This can be a case where having that additional option
may not necessarily be a good thing, if people "forget" about the way
a TOOLSPATH (search path) gets used.  

Please comment.

[1/21/94 public]
I really don't understand your argument.  I am suggesting it work like
everything else in a sandbox environment.  If not found in the sandbox
check the backing tree.  The idea being that what the developer is working
on is in the sandbox and the "official" version is in the backing tree.
The sanbox version is probably "later" but not ready for "official".

Currently in a sandbox I work on what I need and get everything else from
the backing tree.  We don't have backed objects, but for the most part I
keep a fully populated object tree and only rebuild objects I'm currently
working on.  The same would be true of tools.  My thought is I have a
TOOLSPATH that first looks in my sandbox and second looks in by backing
tree (just like everything else).  While working on a tool I do builds into
my sandbox and those newly built tools are used for the rest of the build
process.  If I'm not working on a tool I either get it from my sandbox or
from the backing tree.  If I don't work on tools, I probably would never
have them in my sandbox.  If I do have them in my sandbox I have to worry
about them getting out of date just like everything else in my sandbox.

The point of this CR is to make it easier to work on tools, particularly
idl.

[7/1/94 ]
 reassigned to annie

[8/24/94 public]
I propose that we cancel this CR.  Re-doing how DEFTOOLBASE is used
in the common makefiles will only serve to to further impact an
already tight project schedule.  We are about to enter functional freeze
and having as many clean builds as possible is more important than
providing fixes that effect only a small number of people.

[8/24/94 public]
Re-opened.  This defect will be equally as true in 1.2 as it is now.



CR Number                     : 8453
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : sandbox rc_files files
Short Description             : Don't need "setenv foo ${foo}" lines
Reported Date                 : 8/16/93
Found in Baseline             : 1.0.3
Found Date                    : 8/16/93
Severity                      : E
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/16/93 public]
Many of the files in the rc_files directory of our sandboxes and
backing builds have lines like these in them:
	setenv INCDIRS ${INCDIRS}
	setenv LIBDIRS ${LIBDIRS}
	setenv SHLIBDIRS ${SHLIBDIRS}
	setenv LPATH ${LPATH}
Or, in general
	[replace] setenv XXX ${XXX}

From Damon (OSF ODE maintainer):
>The only case I can think of where:
>	setenv XXX ${XXX}
>Is useful is in a case such as:
>	XXX stuff
>	setenv XXX ${XXX}
>That would set the internal rc variable for use by ODE as well as setting
>it in the environment. This assumes that there is some variable called
>XXX that ODE recognizes and uses. I don't know of any cases of this.

So I think we should work on removing lines like this.  They are
confusing.  Start by removing the from the template files.

[9/24/93 public]
These rc_files are obsolete after the upgrade to ODE2.3 and have been
defuncted.  This condition doesn't occur in the Buildconf files.



CR Number                     : 8377
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : 
Short Description             : Need enhancement to DCE build
that will optionally also build encryption less libdce
Reported Date                 : 7/28/93
Found in Baseline             : 1.0.2
Found Date                    : 7/28/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/28/93 public]

Full Description:
        Currently it seems that the build will build
        either export or domestic versions of DCE.
        One could build it in either a separate sandbox
        ( if you are using ode, but this wastes space )


Proposed Solution:
        Enhance makefiles so that encryption less versions
        of libdce also get built and installed ( althouth
        in a separate place eg: $TOSTAGE/usr/ELSlib ( ELS
        stands for Encryption LesS )

[1/22/94 public]
 Changed responsible engineer to Mario Moreira...very low priority!!!

[4/19/94 public]
Ah who cares, this is cancelled - too low a priority anyway!



CR Number                     : 8361
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : 
Short Description             : Bad libdce.sl with -O switch
Reported Date                 : 7/25/93
Found in Baseline             : 1.0.3
Found Date                    : 7/25/93
Severity                      : A
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/25/93 public]

The libdce.sl built with "-O" switch was useless.

When dce_config cdsd failed on rpc_ns_binding_unexport and
dce_login got segfault.

I rebuilt a libdce.sl without "-O" and that worked successfully
on dce_config and some smoke tests.

I am on vacation this week and I hope someone can pick this up.
 HP folk may want to re-produce this bug and debug it.

[7/26/93 public]

During the HP/UX port Bill Sommerfeld ran into the same problem.
Speculation was that there was a missing volatile declaration somewhere.

[7/26/93 public]

This is a known problem.  Workaround is "don't do that"; priority has been
dropped for now.

The crashes you get with -O have not been adequately analyzed yet, but they
appear to have something to do with exception handling.

For our product we have added a "#pragma optimize_off" to exc_handling.h
which "fixes" it at the cost of disabling the optimizer.  Avoiding using -O
until we analyze what's going on is probably the best solution.

[8/24/94 public]
I will assume this still hasn't been addressed.

Can someone (Bill?) from HP take a few seconds and either
explain why or cancel this defect.

Its been OVER A YEAR now, and I'm sure someone (certainly on HP's product
team) has figured out why this doesn't work and fixed it.

[8/25/94 public]

Functionality and bug-free-ness has been more important than high
optimization levels for us, especially since analyzing compiler bugs is a
pain in the *** in a system as large as DCE..

FYI, our most recent product release (1.0.3-based) was built at +O1 using
the A.09.34 compiler.

Note that -O is equivalent to +O2 on HP-UX.

[2/6/96 public]
Cancelled. This is more like a compiler optimization bug. Should be addressed
by individual vendors during productization.



CR Number                     : 8329
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : hppa
S/W Ref Platform              : hpux
Component Name                : bld
Subcomponent Name             : 
Short Description             : ranlib isn't necessary on UX
Reported Date                 : 7/21/93
Found in Baseline             : 1.0.3
Found Date                    : 7/21/93
Severity                      : E
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[7/21/93 public]
Builds on HP/UX invoke ranlib unnecessarily.  There are a variety of
instances of:

  ranlib libedit.a
  ranlib: ar already did it for you, see ar(1).

[11/12/93 public]
The general case of this is already taken care of in osf.lib.mk by making
the invocation of ranlib dependent on TARGET_OS.  However, this still
occurs for libdce.a on HP/UX.  Therefore this must be implemented in
libdce/Makefile.

[12/23/93 public]
Changed assignment of defect.

[1/20/94 public]
The history here is that libdce.a had to be built in chunks because the 
ar command to create the library in one shot overflowed the 'exec'
command's arguement buffer.  The osf.lib.mk makefile has no provision for 
handling this kind of incremental library creation, hence the rules for 
archiving the static libdce library in the Makefile.  The reason the ranlib
is done is because (at the time I wrote it anyway) OSF needs/needed a
ranlib after the ar.

[1/7/94 ]
Re-assigned to me

[2/8/96 public]
Don't see it any more. Since ours is ODE only env, cancelling this..



CR Number                     : 8120
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : copyright
Short Description             : Move COPYRIGHT.DCE
Reported Date                 : 6/9/93
Found in Baseline             : 1.0.2
Found Date                    : 6/9/93
Severity                      : E
Priority                      : 4
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[6/9/93 public]
The current OSF copyright statements all include the statement:

   See the file named COPYRIGHT.DCE in the src directory for the
   full copyright text.

These are included in many files that end users will see (all include
files, for example).

We are not shipping DCE source code (as I suspect most/all vendors are
not).  But we are now forced to create a 'src' directory in our product
so we can include this file where it was promised.  Hopefully, we won't
be getting customers' expectations up when they find an /opt/dcelocal/src
directory...  ;-)

Can this sentence be rephrased to allow more flexibility in our 
placement of this file in the future?  (Or to provide a more logical
hard-coded location...)

[6/9/93 public]
I'll follow up on this.  Of course, this involves lawyers so it may 
take a bit ... ;-)

[9/24/93 public]
This is really more a managerial issue, so I punting it over to Ken
Rodrigues.
It really should  be resolved for 1.0.3.

Can this sentence be rephrased to allow more flexibility in our
placement of this file in the future?  (Or to provide a more logical
hard-coded location...)

[7/1/94 ]
reassigning to annie



CR Number                     : 8001
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : /test/file/itl/spoke
Short Description             : Include file spoke_defs.h not found.
Reported Date                 : 5/13/93
Found in Baseline             : 1.0.2a
Found Date                    : 5/13/93
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[5/13/93 public]

[5/18/93 public]
Is this really a problem.  I've seen build reports for the last few days
without any errors.  I'm going to assign this to the build group for further
clarification.
Changed Component Name from `dfs' to `bld' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'

[08/30/93 public]
Since Ed isn't here, someone needs to verify that this is not a bug.

[9/2/93 public]
This should have been closed long ago.



CR Number                     : 8000
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : tests
Short Description             : /test/file/update missing a file
Reported Date                 : 5/13/93
Found in Baseline             : 1.0.2a
Found Date                    : 5/13/93
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[5/13/93 public]
in ... test/file/update
xlc -c        -D_ALL_SOURCE -DAIX32 -g -DITL_FS_TEST  -I. -I/u1/devobj/sb/nb_rios/src/test/file/os_calls   -I/u1/devobj/sb/nb_rios/export/rios/usr/include  ../../../../../src/test/file/os_calls/file_test.c
xlc           -L/u1/devobj/sb/nb_rios/export/rios/usr/lib -o file_test.X file_test.o  -litlFile -litlUtils -litlHubSpoke -litl -ldce -lcom_err -lbsd  
0706-005 ld: Cannot find file: /lib/libitlHubSpoke.a
	Check path name and permissions or
	use local problem reporting procedures.

[5/18/93 public]
This defect should be canceled it was caused by ot 8001 which looks like a
build related failure (NFS server down??), since it has not been seen during
subsequent nightly builds
Changed Component Name from `dfs' to `bld' 
Changed Status from `open' to `cancel' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'



CR Number                     : 7972
Defect or Enhancement?        : def
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : osf1
Component Name                : bld
Subcomponent Name             : 
Short Description             : build error in  /test/file/acl/scripts/syscalls
Reported Date                 : 5/11/93
Found in Baseline             : 1.0.2a
Found Date                    : 5/11/93
Severity                      : A
Priority                      : 0
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : 
Transarc Status               : 

[5/11/93 public]
[ /test/file/acl/scripts/syscalls at 15:43 (PM) Sunday ]
release: reopen /project/dce/build/nb_pmax/src/../install/pmax/dcetest/dce1.0/test/file/acl/README.tmp: File exists
/project/dce/build/nb_pmax/src/../install/pmax/dcetest/dce1.0/test/file/acl/README: aborting installation
*** Error code 1 (continuing)

[5/18/93 public]
This problem was caused by an incremental build.  The file README.tmp is no
longer part of the configuration.  I'm going to cancel this defect, since
the problem has not been seen in subsequent builds.
Changed Component Name from `dfs' to `bld' 
Changed Status from `open' to `cancel' 
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `' 
Added field Transarc Status with value `'



CR Number                     : 7710
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : bld
Subcomponent Name             : port_gd
Short Description             : building tools with setup pass
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2
Found Date                    : 4/13/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/13/93 public]

Howard suggested putting this FAQ note in Chapter 10 of the
Porting Guide.  Doug, if you think it belongs in the RelNotes
feel free to change the CR (it's a build issue).

From: John Mandel <john@osf.org>
To: dce-team
Cc: damon
Subject: ODE: Building DCE tools using the setup pass.
Date: Tue, 05 May 92 09:25:32 -0400


I have added the ability to build the DCE tools from ODE with a setup
pass.  To build the tools one of the following methods need to be 
used:  (${name} needs to be expanded by the user)

	1) cp /project/dce/build/dce1.0.1/rc_files/setup \
             ${sandbox_base}/rc_files
           (the setup rc file calls ./local then sets DEFTOOLBASE)
	   build -sb_rc ${sandbox_base}/rc_files/setup setup_all

	2) add the following line (as is) to ${sandbox_base}/rc_files/local:
	   replace setenv DEFTOOLBASE ${tools_base}/bin/
	   
	   then:
	   build setup_all

	3) build DEFTOOLBASE=${tools_base}/bin/ setup_all

Individual tools can be built by cd'ing to their directory and building.

All tools built by the setup pass will be placed into ${DEFTOOLBASE}.

The following is the list of tools built by the setup pass:
	compile_et
	idl
	idl.cat
	mavcod
	mavros
	msg
	prs

Only one DEFTOOLBASE can be defined for all DCE tools and all
tools are defined with DEFTOOLBASE unless overridden either 
on the command line or in a local Makefile

Although this implies that you will have to build all the tools,
you can still build a single tools and then specify that is 
should be used in subsequent builds.

One scenario which could be used to build one tool (e.g. idl) is:

	1) cd ${sandbox_base}/src/rpc/idl/idl_compiler
	2) build -sb_rc ${sanbbox_base}/rc_files/setup setup_all
	3) cd ${sandbox_base}/src/rpc
	4) build IDL=${tools_base}/bin/idl
	
All the dce tools can be built in ~23 minutes getting everything
from a backing tree.
   
If you have any questions or comments let me know.
-John 


		replace setenv DEFTOOLBASE ${tools_base}/bin/
     All tools built by the setup pass will be placed into ${DEFTOOLBASE}.
     
Folks,

Note that this means that <your_sandbox>/tools/<machine>/bin must be local.
I know that some people had linked their tools directory to the backing
build tools directory, e.g.:

	tools -> link/tools/

This was necessary to get the common set of language tools from the backing
build.  This isn't necessary any longer since absolute paths for the
language tools are provided by the makefiles.

[6/22/93 public]
Changed "Fix By Baseline" from 1.0.3 to 1.1.

[1/22/94 public]
 Doug-

	I am cancelling this defect because we have been including the
setup pass in all releases since DCE1.0.2. This is documented in Chapter 10
of the porting guide, under Organization of the DCE Build Process.



CR Number                     : 7698
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : doc
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : pmax
S/W Ref Platform              : osf1
Component Name                : bld
Subcomponent Name             : port_gd
Short Description             : install libdce.so on OSF/1.1.1
Reported Date                 : 4/13/93
Found in Baseline             : 1.0.2
Found Date                    : 4/13/93
Severity                      : D
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.2
Fixed In Baseline             : 
Affected File(s)              : 
Diff supplied by              : 
Diff release                  : 
Sensitivity                   : public

[4/13/93 public]
FAQ for the Porting Guide:

From: rsarbo
To: dce-team
Date: Mon, 1 Feb 93 14:27:03 -0500

I just got burned by a change in the start up scripts
for OSF/1 1.1.1.  I thought I'd spare you the pain by 
telling you that in order to install a new library on 
OSF/1 1.1.1 (libdce for instance), you must run /sbin/lib_admin
explicitly.  It does not get run automatically in the sysetm 
startup scripts as it did on OSF/1 1.0.4, so a reboot is
not sufficient. 

This probably affects the DFS folk more than anyone else
since we're often installing kernels at the same time as
libraries so it's tempting to let the reboot take care of
both.
From: weisman@osf.org
To: rsarbo, dce-team
Date: Mon, 01 Feb 93 15:07:07 -0500

After having been burnt so badly by inlib during the 1.1.1 port,
I finally got up the courage to try it as a
quicker-than-lib_admin way to install a new libdce.so.

Amazingly enough, it works and is much faster than lib_admin.  So
here's the model:

- - Rebuild whatever libdce modules you are interested in.

- - Rebuild libdce.so

- - rmlib your_sb/obj/pmax/libdce/libdce.so (a preventative, ignore
  any diagnostic)

- - inlib your_sb/obj/pmax/libdce/libdce.so

- - dce_config, etc.

NB: Unlike lib_admin, inlib only changes children of that
particular shell.

inlib/rmlib are built-in shell commands.  They exist in sh,
ksh, and csh.  Sadly, not tcsh.

From: smk
To: dce-team
Date: Mon, 1 Feb 93 17:05:08 -0500

Not running lib_admin after "installing" a new libdce.so is also
the cause for the seemingly bizarre debug behavior. GDB will use
the symbol table/offset information from the "new" libdce.so while the
application is making references to offsets in the "old" libdce.so (which
have been recorded in the preloaded data files by lib_admin - and only
by rerunning lib_admin will the preloaded data files be updated).


SUP will update your preloaded data files

BTW, /lbin/sup/lib_admin is a script that will invoke /sbin/lib_admin
twice - once for single user mode.

The syntax for invoking lib_admin is ... /sbin/lib_admin -v /etc/lib_admin.conf

[6/22/93 public]
Changed "Fix By Baseline" from 1.0.3 to 1.1.

[11/12/93 public]
Canceled by mistake

[8/13/96 public]
Cancelled--Porting Guide no longer exists.



CR Number                     : 6831
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : 
Short Description             : incremental build problems
Reported Date                 : 1/14/93
Found in Baseline             : 1.0.2
Found Date                    : 1/14/93
Severity                      : C
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.0.3
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[1/14/93 public]
PMAX:

[ /file/flserver

fldb_proc_cstub.c: In function VL_GetStats:
fldb_proc_cstub.c:3891: structure has no member named `reserved'
fldb_proc_cstub.c:3976: structure has no member named `reserved'

[ /file/ftserver
makepath ftserver/. && cd ftserver &&  exec make MAKEFILE_PASS=THIRD
build_all
/project/dce/build/nb_pmax/tools/pmax/macho/gcc
-B/project/dce/build/nb_pmax/tools/
pmax/macho/  -c    -D_SHARED_LIBRARIES -O  -Dunix
-DDCESHARED_PATH=\"/opt/dce\" -DD
CELOCAL_PATH=\"/opt/dcelocal\"  -G 0 -pedantic -Wpointer-arith -nostdinc
-Wtrigraph
s -Wcomment    -I- -I. -I/project/dce/build/nb_pmax/src/file/ftserver
-I/project/d
ce/build/nb_pmax/export/pmax/usr/include
-I/project/osc/build/osc_sbox1.1.1/export/
pmax/usr/include -I/project/osc/build/osc1.1.1/export/pmax/usr/include
-pic-lib   -
L/project/dce/build/nb_pmax/export/pmax/usr/shlib -L/usr/shlib
-L/project/dce/build
/nb_pmax/export/pmax/usr/lib
-L/project/osc/build/osc1.1.1/export/pmax/usr/ccs/lib
 -ldce   ftserver_proc_cstub.c

ftserver_proc_cstub.c: In function FTSERVER_GetStatus:
ftserver_proc_cstub.c:1730: structure has no member named `static_spare1'
(missing `static_spare1',2,and 3)

-ldce   ftserver_proc_sstub.c
ftserver_proc_sstub.c: In function op12_ssr:
ftserver_proc_sstub.c:1978: structure has no member named `static_spare1'
ftserver_proc_sstub.c:1980: structure has no member named `static_spare2'
ftserver_proc_sstub.c:1982: structure has no member named `static_spare3'
ftserver_proc_sstub.c:2100: structure has no member named `maxQuota'

[ /file/episode/vnops at 01:38 (AM) Thursday ]
makepath vnops/. && cd vnops &&  exec make MAKEFILE_PASS=BASIC
build_all
make: don't know how to make ../../../file/episode/vnops/efs_mtpt.h
(continuing)

max/usr/ccs/lib  -ldce   ../../../../../src/file/episode/vnops/efs_newvol.c
/project/dce/build/nb_pmax/tools/pmax/macho/gcc

max/usr/ccs/lib  -ldce   ../../../../../src/file/episode/vnops/stubs.c
/project/dce/build/nb_pmax/tools/pmax/macho/gcc
-B/project/dce/build/nb_pmax/tools/
pmax/macho/  -%ld," -warn_nopic -glue"  -O
-L/project/dce/build/nb_pmax/expo
rt/pmax/usr/shlib -L/usr/shlib
-L/project/dce/build/nb_pmax/export/pmax/usr/lib -L/
project/osc/build/osc1.1.1/export/pmax/usr/ccs/lib -o newvol.X efs_newvol.o
stubs.o
  -lefsops -ldir -lanode -llogbuf -lasync -leacl  -lxcred -losi -llwpdummy
-lafsuti
l -ldfskutil  -ledsk  -lcom_err -ltools  -ldacl -ldacllfs  -ldce -lbsd
efs_newvol.o: Undefined symbol "vnm_CreateVolume" referenced

../../../../../src/file/episode/vnops/test_vnodeops.c
test_vnodeops.o: Undefined symbol "vnm_CreateVolume" referenced

[ /file/libafs at 01:49 (AM) Thursday ]
makepath libafs/. && cd libafs &&  exec make MAKEFILE_PASS=BASIC
build_all
/project/dce/build/nb_pmax/tools/pmax/macho/ld -T 80030000  -e start -o
dfsvmunix -
L/project/dce/build/nb_pmax/export/pmax/usr/lib
-L/project/osc/build/osc1.1.1/expor
t/pmax/usr/ccs/lib  ../../../../obj/pmax/kernel/DCE/vmunix.sys   -lcm
-lkdfskutil -
lafs -laggr -lcm -lkdfsncs -lkdfskutil  -lpx -lhost -lkzlc -lktkset
-lkxcred -lkrep
cli  -lkosi -lkicl -lkfldb -lkafs4srv  -lkafs4clt -lkcommondata -lufsops
-lxvnode -
lagfs  -lktkc -lktkm -lktpq -lvolreg -lvolume -lkdacl -lkdacllfs -lepidum
-lkosi -l
kdacl  -lknck -lkidl -lkdes
cm_pioctl.o: Undefined symbol "cm_PSetAcl" referenced
cm_pioctl.o: Undefined symbol "cm_PGetAcl" referenced

RIOS:
[ /file/flserver at 20:07 (PM) Wednesday ]
makepath flserver/. && cd flserver &&  exec make MAKEFILE_PASS=THIRD
build_a
/usr/include  fldb_proc_cstub.c
"fldb_proc_cstub.c", line 3891.28: 1506-022 (S) reserved not a member of
the str
uct or union stats_.
"fldb_proc_cstub.c", line 3976.28: 1506-022 (S) reserved not a member of
the str
uct or union stats_.
*** Error code 1 (continuing)

[1/15/93 public]
As discussed with Rich Zeliff, two incremental build problems
have been identified:

1) The dependencies for IDL generated .c stubs are not accurately
determined.

2) Defuncted header files (or presumably other files) can confuse
the dependency list generation process for libraries.  The result 
is these libraries will not get rebuilt because they do not have a 
complete dependency list.

The issue is further confused by the fact that old versions of 
these libraries may still reside in the export tree and the build
will attempt to link with these stale versions.

I will leave it up to Rich to reclassify/reprioritize this OT as 
appropriate.  Re-assigned to Rich.

[1/21/93 public]
The defect changed to an enhancement becaus: (addressing Ron's points,
above)

1.  This is a goal for the code cleanup project for 1.1
2.  The Rats can watch for defuncted files on the submission requests and
schedule full builds rather than incremenetal builds
3.  We will begin removing the export tree every night as part of the build
process.

[11/12/93 public]
Incremental builds are no longer done.  All other work is covered by code
cleanup goals.



CR Number                     : 5092
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : make/build
Short Description             : build errors do not say what file failed to build
Reported Date                 : 8/18/92
Found in Baseline             : 1.0.2
Found Date                    : 8/18/92
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[8/18/92 public]
Build errors do not say what file they failed to build.  This is
extremely annoying as far as being able to find errors in an automated
way in huge logs.

[09/22/92 public]
This doesn't seem to be a build problem.  The various build errors that
occurr in DCE do (for the most part) identify which file caused
the problem.  I think the complaint here is that the build logs are
so large and soo much information is provided that it is hard to "grep"
for errors and especially hard to look at the log with an editor.

I think what the user is looking for is some tools to extract 
compilation/link/file-not-found errors from the logs.  I'll pass along 
what we use for the nightly build.

[12/23/93 public]
I recommend cancelling this defect.

[7/1/94 public]
As Marty mentioned above -in general build does report an explicit
error message at least once per error -



CR Number                     : 5091
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : make/build
Short Description             : Executables are not rebuilt when libraries change.
Reported Date                 : 8/17/92
Found in Baseline             : 1.0.2
Found Date                    : 8/17/92
Severity                      : D
Priority                      : 2
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public
Transarc Deltas               : 
Transarc Herder               : jaffe@transarc.com
Transarc Status               : open

[8/17/92 public]
Executables are not rebuilt when their libraries change.  This makes
ordinary development painful.  After all, wasn't this the original
point of make?
Added field Transarc Deltas with value `' 
Added field Transarc Herder with value `jaffe@transarc.com' 
Added field Transarc Status with value `open'

[9/23/92 public]
(I deleted the previous, misleading comments.)

The problem with rebuilding DCE has nothing to do with make.  Make will
handle all the dependencies that we choose to specify.  However, many (if
not most) library dependencies (and include dependencies) have never been
specified in the makefiles, and *therefore* make does not check them.
Component developers are welcome to specify all this information, and make
will check any which are specified.

The DCE Rats are thinking about an enhancement to ODE which would
automatically record and update include and library dependencies.  We have
been working on automatically recording and updating header file
dependencies.  When that is complete, we hope to follow on with library
dependencies.

[9/23/92 public]
I didn't think my comment was misleading.  I asked several months ago how to
add library dependencies and was told that the rats did not know how to do
it.  I can (and have) added dependencies on libraries, but only on libraries
created by the same makefile.  Adding additional libraries to a dependency
line merely gives a build which quits by stating that it does not know how to
make the library.  I believe this is because make does not know where to look
for the library to compute the dependency.

If someone at OSF could explain how to set up such a dependency, independent
of being automatic, I'd be content to leave things at that.  If it cannot be
done, it is a defect.

[12/23/93 public]
Recommend cancelling this defect.  

A alternate (really ugly) solution would be to generate a makefile code
segment which states all the OFILES dependencies on each library, and then
.include it into the current makefile.  See osf.parse_ext.mk as an example
of on-the-fly makefile code generation.  I am NOT recommending this; I'm
simply pointing out that it is possible.

[7/1/94 public ]
Changed assignment to rrizzo and severity - because there is a workaround.
to D 2

[8/24/94 public]
I second Rich's recommendation.  Let's cancel this thing.  The changes for
this will never make it into DCE1.1.  Whoever is picking up the integration
work for DCE 1.2 should think about overhauling the entire build environment
and source tree organization.  I'm sure they are thinking about it and
don't need to be reminded by this CR.



CR Number                     : 3024
Defect or Enhancement?        : enh
CR in Code, Doc, or Test?     : code
Inter-dependent CRs           : 
Project Name                  : dce
H/W Ref Platform              : all
S/W Ref Platform              : all
Component Name                : bld
Subcomponent Name             : common Makefiles
Short Description             : export_all_EXPLIB and
export_all_EXPSHLIB do the same thing
Reported Date                 : 4/23/92
Found in Baseline             : 1.0.1
Found Date                    : 4/23/92
Severity                      : C
Priority                      : 3
Status                        : cancel
Duplicate Of                  : 
Fix By Baseline               : 1.1
Fixed In Baseline             : 
Affected File(s)              : 
Sensitivity                   : public

[4/23/92 public]

The targets export_all_EXPLIB and export_all_EXPSHLIB both do the exact
same thing.  They both run the third pass with export_all.  This will
result in both static and shared libraries being built regaurdless of which
target was specified.

This can be solved by putting EXPSHLIB into it's own pass.

[4/24/92 public]
The export_all_EXPSHLIB pass, when run in a directory, only builds the 
EXPSHLIB_TARGETS for that directory, as opposed to the export_all_EXPLIB
pass, which will build all EXPLIB targets.  This is an important difference
in a subdirectory.  This is a clarificaton.  This is not to say that a 
seperate pass for EXPSHLIB is a bad thing.

[9/24/93 public]
Cancelling this.



