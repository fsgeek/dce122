...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: rpc_ns_mgmt_set_exp_age.3rpc,v $
...\" Revision 1.1.8.1  1996/11/18  19:59:14  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:35:10  wardr]
...\"
...\" Revision 1.1.6.7  1995/06/21  13:20:46  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/20  20:38:49  buckler]
...\" 
...\" Revision 1.1.6.6  1995/06/07  20:11:50  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:07:09  buckler]
...\" 
...\" Revision 1.1.6.4  1993/01/27  16:53:59  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:32:34  cjd]
...\" 
...\" Revision 1.1.6.3  1993/01/26  19:05:00  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:32:34  cjd]
...\" 
...\" Revision 1.1.6.2  1992/10/01  20:55:03  weir
...\" 	Removed change bars; moved into 1.0.2doc tree
...\" 	[1992/10/01  20:08:21  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  14:50:48  oaf]
...\" 
...\" Revision 1.1.4.3  1992/09/16  18:31:10  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.4.2  1992/08/14  17:52:14  oaf
...\" 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)
...\" 	[1992/08/14  17:00:53  oaf]
...\" 
...\" Revision 1.1.2.2  1992/05/18  20:05:52  buckler
...\" 	Editorial review
...\" 	[1992/05/18  19:58:09  buckler]
...\" 
...\" Revision 1.1  1992/01/29  15:37:54  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Mon Nov 11, 1991                 Initial file submission to HP
...\"                                    for final integration at IBM.
...\"
...\"
...\" ********************************************************************
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *
...\" All rights reserved.                                               *
...\" ********************************************************************
.TH rpc_ns_mgmt_set_exp_age 3rpc
...\" .iX "\*Lrpc_ns_mgmt_set_exp_age(\|)\*O"
.SH "Name"
\*Lrpc_ns_mgmt_set_exp_age\*O - Modifies the application's global expiration
age for local copies of name service data
.PP
Used by client, server, or management applications
.SH "Synopsis"
.sS
\*L#include <dce/rpc.h>\*L
.sp .4v
\*Lvoid \*Lrpc_ns_mgmt_set_exp_age\*L(
.nL
	\*Lunsigned32 \*Vexpiration_age\*L,
.nL
	\*Lunsigned32 *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vexpiration_age\*O"
An integer value that specifies the default expiration age, in seconds,
for local name service data.  This expiration age applies to all
RPC name service interface (NSI) read operations
(all the next operations).
.PP
An expiration age of 0 (zero) causes an immediate update of the
local name service data.
.PP
To reset the expiration age to an RPC-assigned random value between
8 and 12 hours, specify a value of \*Lrpc_\%c_\%ns_\%default_\%exp_\%age\*O.
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lrpc_ns_mgmt_set_exp_age(\|)\*O routine modifies the
global expiration age that the application is using.
The \*Vexpiration_age\*O parameter represents the amount of time, in seconds,
that a local copy of data from a name service attribute can exist before a request
from the application for the attribute requires updating the local copy.
When an application begins running, the RPC runtime specifies a random value of
between 8 and 12 hours as the default expiration age.
The default is global to the application.
.PP
Normally, you should avoid using this routine; instead, rely on
the default expiration age.
.PP
The RPC NSI next operations, which
read data from name service attributes, use an expiration age.
A next operation normally starts by looking for a
local copy of the attribute
data that an application requests.  In the absence of a local copy, the
next operation creates one with fresh attribute data from the
name service database.  If a local copy already exists, the operation compares
its actual age to the expiration age being used by the application.
If the actual age exceeds the expiration age, the operation automatically tries
to update the local copy with fresh attribute data from
the name service database.
If updating is impossible, the old local data remains in place and
the next operation fails,
returning the \*Lrpc_s_name_service_unavailable\*O status code.
.SS "Permissions Required"
.PP
No permissions are required.
.nL
.ne 1.5i
.SH "Cautions"
.PP
Use this routine with extreme caution.
.PP
Setting the expiration age to a small value causes the RPC NSI next
operations to frequently update
local data for any name service attribute that your application requests.
For example, setting the expiration age to 0 (zero) forces all
next operations to update
local data for the name service attribute that your application has requested.
Therefore, setting small expiration ages can create performance problems for
your application.  Also, if your application is using a
remote server with the name service database, a small expiration age
can adversely affect network performance for all applications.
.nL
.ne .8i
.SH "Return Values"
.PP
No value is returned.
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.LE
.SH "Related Information"
.ad l
Functions:
\*Lrpc_ns_mgmt_handle_set_exp_age(3rpc)\*O,
\*Lrpc_ns_mgmt_set_exp_age(3rpc)\*O.
.ad b
