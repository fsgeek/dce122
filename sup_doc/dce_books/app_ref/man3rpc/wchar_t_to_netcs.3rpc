...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: wchar_t_to_netcs.3rpc,v $
...\" Revision 1.1.4.2  1996/11/18  20:00:30  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:36:12  wardr]
...\"
...\" Revision 1.1.4.1  1996/10/30  12:48:35  wardr
...\" 	{def,CR13630,R1.2.2}
...\" 	misc corrections from developer Mariko Romagna
...\" 	[1996/10/30  12:47:35  wardr]
...\" 
...\" Revision 1.1.2.7  1995/06/07  20:12:48  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:08:21  buckler]
...\" 
...\" Revision 1.1.2.5  1994/10/05  13:12:00  zahn
...\" 	{edt,5284,R1.1}
...\" 
...\" 	Miscellaneous technical corrections and edits.
...\" 	[1994/10/05  13:11:44  zahn]
...\" 
...\" Revision 1.1.2.4  1994/08/12  16:29:21  zahn
...\" 	{edt,5284,R1.1}
...\" 
...\" 	Added Mariko Romagna's technical corrections.
...\" 	[1994/08/12  16:29:07  zahn]
...\" 
...\" Revision 1.1.2.3  1994/06/13  17:04:04  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:48:04  devobj]
...\" 
...\" Revision 1.1.2.2  1994/04/29  19:41:52  zahn
...\" 	Removed pointer from binding handle parameter
...\" 	[1994/04/29  19:41:40  zahn]
...\" 
...\" Revision 1.1.2.1  1994/04/01  21:59:47  zahn
...\" 	{enh,5284,R1.1}
...\" 
...\" 	Add reference pages for character/code set interoperability
...\" 	features for DCE 1.1.
...\" 	[1994/04/01  21:59:03  zahn]
...\" 
...\" $EndLog$
.TH wchar_t_to_netcs 3rpc
...\" .iX "\*Lwchar_t_to_netcs(\|)\*O"
.SH "Name"
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
\*Lwchar_t_to_netcs\*O - Converts international character data from
a local code set to a network code set prior to marshalling
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.PP
Used by client and server applications
.SH "Synopsis"
.sS
\*L#include <dce/codesets_stub.h>\*L
.sp .4v
\*Lvoid \*Lwchar_t_to_netcs\*L(
.nL
	\*Lrpc_binding_handle_t \*Vbinding\*L,
.nL
	\*Lunsigned32 \*Vnetwork_code_set_value\*L,
.nL
	\*Lwchar_t *\*Vlocal_data\*L,
.nL
	\*Lunsigned32 \*Vlocal_data_length\*L,
.nL
	\*Lidl_byte *\*Vnetwork_data\*L,
.nL
	\*Lunsigned32 *\*Vnetwork_data_length\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vbinding\*O"
Specifies the target binding handle from which to obtain
code set conversion information.  When called from the client stub, 
this value is the binding handle of a compatible server returned by the
\*Lrpc_ns_binding_import_next(\|)\*O or \*Lrpc_ns_binding_select(\|)\*O
routine.  
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Vnetwork_code_set_value\*O"
The registered hexadecimal integer value that represents the
code set to be used to transmit character data over the network.
In general, the network code set is the code set that the client application's
code sets evaluation routine has determined to be compatible for
this client and server.  When the caller is the client stub, this
value is the sending tag.  When the caller
is the server stub, this value is the receiving tag.
.LI "\*Vlocal_data\*O"
A pointer to the international character data to be transmitted,
in the local code set encoding.
.nL
.ne 8
.LI "\*Vlocal_data_length\*O"
The number of \*Lwchar_t\*O data elements to be converted.  For a
varying array or a conformant varying array, this value is
the local value of the \*Llength_is\*O variable.  For a conformant
array, this value is the local value of the \*Lsize_is\*O variable.
For a fixed array, the value is the array size specified in the
interface definition.
.LE
.SS "Output"
.VL
.LI "\*Vnetwork_data\*O"
A pointer to the converted data, in \*Lidl_byte\*O format.
.LI "\*Vnetwork_data_length\*O"
A pointer to the length of the converted data, in units of \*Lidl_byte\*O.
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
NULL is specified if a fixed or varying array is to be converted.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lwchar_t_to_netcs(\|)\*O routine belongs to a set of
DCE RPC routines for use by client and server applications
that are transferring international character data
in a heterogeneous character set and code sets environment.
.PP
The \*Lwchar_t_to_netcs(\|)\*O routine is one of the DCE RPC
stub code set conversion routines that RPC stubs use before they
marshall or unmarshall data to convert international character
data to and from local and network code sets.
.PP
Client and server stubs call the \*Lwchar_t_\*V*\*L_netcs(\|)\*O
routines when the \*Lwchar_t\*O type has been specified
as the local data type with the \*Lcs_char\*O attribute in the
attribute configuration file for the application.
.PP
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
Client and server stubs call the \*Lwchar_t_to_netcs(\|)\*O routine before
they marshall any data.  The routine takes a binding handle,
a code set value that identifies the code set to be used
to transfer international character data over the network,
the address of the data to be converted, and the length
of the data, in units of \*Lwchar_t\*O.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.PP
The routine first converts the character data from \*Lwchar_t\*O values
to \*Lidl_byte\*O values.  The routine next compares the sending code
set to the local code set currently in use.  If the routine finds
that code set conversion is necessary, (because the local code set
differs from the code set specified to be used on the network), it
determines which host code set converter to call to convert
the data and then invokes that converter.
.PP
.ne 6
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
The routine then returns the converted data, in \*Lidl_byte\*O format.
If the data is a conformant or conformant
varying array, the routine also returns the length of the
converted data, in units of \*Lidl_byte\*O.
.P
Prior to calling \*Lwchar_t_to_netcs(\|)\*O,
client and server stubs call the \*Lwchar_t_net_size(\|)\*O routine to
calculate the size of the buffer required to hold the converted data.
Because \*Lwchar_t_net_size(\|)\*O cannot make this calculation for
fixed and varying arrays, applications should either restrict use of
\*Lwchar_t_to_netcs(\|)\*O to conformant and conformant varying
arrays, or independently ensure that the buffer allocated for 
converted data is large enough.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.PP
Applications can specify local data types other than \*Lcs_byte\*O
and \*Lwchar_t\*O (the local data types for which DCE RPC
supplies stub support routines for code set conversion) with the \*Lcs_char\*O
ACF attribute.  In this case, the application must also supply
\*Vlocal_type\*L_to_netcs(\|)\*O and \*Vlocal_type\*L_from_netcs(\|)\*O
stub conversion routines for the application-defined local type.
.SS "Permissions Required"
.PP
No permissions are required.
.nL
.ne 1.5i
.SH "Return Values"
.PP
No value is returned.
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Lrpc_s_ss_incompatible_codesets\*O"
The binding handle does not contain code set evaluation information.
If this error occurs in the server stub, an exception is raised
to the client application.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LE
.PP
When this routine is running the host converter routines, the following
errors can be returned:
.ad l
.ML
.LI 
\*Lrpc_s_ss_invalid_char_input\*O
.LI 
\*Lrpc_s_ss_short_conv_buffer\*O
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LE
.ad b
.PP
When invoked from the server stub, this routine calls the 
\*Ldce_cs_loc_to_rgy(\|)\*O routine and host converter routines.  If any of 
these routines returns
an error, an exception is raised to the client application.
.SH "Related Information"
.PP
.ad l
.zA "defect, 13630, 1.2.2, augmented functions list while I was at it"
Functions:
\*Lcs_byte_from_netcs(3rpc)\*O,
\*Lcs_byte_to_netcs(3rpc)\*O,
\*Ldce_cs_loc_to_rgy(3rpc)\*O,
\*Lwchar_t_from_netcs(3rpc)\*O,
\*Lwchar_t_local_size(3rpc)\*O,
\*Lwchar_t_net_size(3rpc)\*O,
.zZ "defect, 13630, 1.2.2, augmented functions list while I was at it"
.ad b
