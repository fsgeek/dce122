...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: rpc_object_inq_type.3rpc,v $
...\" Revision 1.1.8.1  1996/11/18  19:59:23  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:35:16  wardr]
...\"
...\" Revision 1.1.6.7  1995/06/21  13:20:50  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/20  21:00:11  buckler]
...\" 
...\" 	More 1.1 edits.
...\" 	[1995/06/19  16:48:31  buckler]
...\" 
...\" 	More 1.1 edits.
...\" 	[1995/06/19  16:33:17  buckler]
...\" 
...\" Revision 1.1.6.6  1995/06/07  20:11:56  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:07:18  buckler]
...\" 
...\" Revision 1.1.6.4  1993/01/27  16:54:49  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:33:25  cjd]
...\" 
...\" Revision 1.1.6.3  1993/01/26  19:05:29  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:33:25  cjd]
...\" 
...\" Revision 1.1.6.2  1992/10/01  20:56:19  weir
...\" 	Removed change bars; moved into 1.0.2doc tree
...\" 	[1992/10/01  20:09:03  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  14:52:12  oaf]
...\" 
...\" Revision 1.1.4.3  1992/09/16  18:31:38  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.4.2  1992/08/14  17:53:28  oaf
...\" 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)
...\" 	[1992/08/14  17:01:39  oaf]
...\" 
...\" Revision 1.1.2.2  1992/05/18  20:59:34  buckler
...\" 	Editorial review
...\" 	[1992/05/18  20:58:34  buckler]
...\" 
...\" Revision 1.1  1992/01/29  15:38:07  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Mon Nov 11, 1991                 Initial file submission to HP
...\"                                    for final integration at IBM.
...\"                                   
...\"
...\" ********************************************************************
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *
...\" All rights reserved.                                               *
...\" ********************************************************************
.TH rpc_object_inq_type 3rpc
...\" .iX "\*Lrpc_object_inq_type(\|)\*O"
.SH "Name"
\*Lrpc_object_inq_type\*O - Returns the type of an object
.PP
Used by server applications
.SH "Synopsis"
.sS
\*L#include <dce/rpc.h>\*L
.sp .4v
\*Lvoid \*Lrpc_object_inq_type\*L(
.nL
	\*Luuid_t *\*Vobj_uuid\*L,
.nL
	\*Luuid_t *\*Vtype_uuid\*L,
.nL
	\*Lunsigned32 *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vobj_uuid\*O"
Specifies the object UUID whose associated type UUID is returned.
Supply NULL to specify a nil UUID for this parameter.
.LE
.SS "Output"
.VL
.LI "\*Vtype_uuid\*O"
Returns the type UUID corresponding to the object UUID supplied in
the \*Vobj_uuid\*O parameter.
.PP
Specifying NULL here prevents the return of a type UUID. An
application, by specifying NULL here, can determine from the
value returned in \*Vstatus\*O whether
\*Vobj_uuid\*O is registered.  This determination occurs
without the application specifying an output type UUID variable.
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
A server application calls the \*Lrpc_object_inq_type(\|)\*O
routine to obtain the type UUID of an object.
.PP
If the object is registered with the RPC runtime using the
\*Lrpc_object_set_type(\|)\*O routine, the registered type is returned.
.PP
.ne 6
Optionally, an application can maintain an object/type registration privately.
In this case, if the application provides an object inquiry
function (see the \*Lrpc_object_set_inq_fn(3rpc)\*O reference page),
the RPC runtime uses that function to determine an object's type.
.PP
The table below shows how \*Lrpc_object_inq_type(\|)\*O
obtains the returned type UUID.
.PP
.ne 4.0i
...\" .TB "Rules for Returning an Object's Type"
.in -1i
.TS
center box tab(@);
cb s s
lb|lb|lb
lb|lb|lb
lb|lb|lb
c|c|lw(2.2i).
Rules for Returning an Object's Type
=
Was object UUID @Was an object inquiry@
registered (using@function registered(using@
rpc_object_set_type)?@rpc_object_set_inq_fn)?@Return Value
=
Yes@Ignored@T{
Returns the object's registered type UUID.
T}
_
No@Yes@T{
Returns the type UUID returned from calling the inquiry function.
T}
_
No@No@T{
Returns the nil UUID.
T}
.TE
.in
.nL
.ne .8i
.SH "Return Values"
.PP
No value is returned.
.nL
.ne .8i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.LI "\*Lrpc_s_object_not_found\*O"
Object not found.
.LI "\*Luuid_s_bad_version\*O"
Bad UUID version.
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Lrpc_object_set_inq_fn(3rpc)\*O,
\*Lrpc_object_set_type(3rpc)\*O.
.ad b
