...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: rpc_ns_binding_export.3rpc,v $
...\" Revision 1.1.8.1  1996/11/18  19:57:57  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:34:37  wardr]
...\"
...\" Revision 1.1.6.8  1995/06/21  13:20:33  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/20  20:19:03  buckler]
...\" 
...\" Revision 1.1.6.7  1995/06/07  20:11:22  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:06:31  buckler]
...\" 
...\" Revision 1.1.6.5  1994/10/19  20:15:31  neilson
...\" 	CR 10326 - Automatic fix to name of intro ref page
...\" 	[1994/10/19  20:09:14  neilson]
...\" 
...\" Revision 1.1.6.4  1993/01/27  16:51:32  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:29:20  cjd]
...\" 
...\" Revision 1.1.6.3  1993/01/26  19:03:30  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:29:20  cjd]
...\" 
...\" Revision 1.1.6.2  1992/10/01  20:48:12  weir
...\" 	Removed change bars; moved into 1.0.2doc tree
...\" 	[1992/10/01  20:00:49  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  14:47:03  oaf]
...\" 
...\" Revision 1.1.4.3  1992/09/16  18:29:34  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.4.2  1992/08/14  17:48:05  oaf
...\" 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)
...\" 	[1992/08/14  16:58:15  oaf]
...\" 
...\" Revision 1.1.2.4  1992/06/04  17:34:36  mcdonald
...\" 	Changes made:            Delete status code rpc_s_invalid_if_handle
...\" 	File name:               src/app_ref/man3rpc/rpc_ns_binding_export.3rpc
...\" 	Change Request Number:   3562
...\" 	[1992/06/04  17:31:51  mcdonald]
...\" 
...\" Revision 1.1.2.3  1992/06/01  19:40:29  buckler
...\" 	Editorial review additions
...\" 	[1992/06/01  19:39:08  buckler]
...\" 
...\" Revision 1.1.2.2  1992/05/18  20:03:38  buckler
...\" 	Editorial review
...\" 	[1992/05/18  19:54:19  buckler]
...\" 
...\" Revision 1.1  1992/01/29  15:36:52  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Mon Nov 11, 1991                 Initial file submission to HP
...\"                                    for final integration at IBM.
...\"                                   
...\"
...\" ********************************************************************
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *
...\" All rights reserved.                                               *
...\" ********************************************************************
.TH rpc_ns_binding_export 3rpc
...\" .iX "\*Lrpc_ns_binding_export(\|)\*O"
.SH "Name"
\*Lrpc_ns_binding_export\*O - Establishes a
name service database entry with binding handles or object UUIDs for a server
.PP
Used by server applications
.SH "Synopsis"
.sS
\*L#include <dce/rpc.h>\*L(
.sp .4v
\*Lvoid \*Lrpc_ns_binding_export\*L(
.nL
	\*Lunsigned32 \*Ventry_name_syntax\*L,
.nL
	\*Lunsigned_char_t *\*Ventry_name\*L,
.nL
	\*Lrpc_if_handle_t \*Vif_handle\*L,
.nL
	\*Lrpc_binding_vector_t *\*Vbinding_vec\*L,
.nL
	\*Luuid_vector_t *\*Vobject_uuid_vec\*L,
.nL
	\*Lunsigned32 *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Ventry_name_syntax\*O"
An integer value that specifies the syntax of the \*Ventry_name\*O parameter.
.P
To use the syntax that is specified in the \*LRPC_\%DEFAULT_\%ENTRY_\%SYNTAX\*O
environment variable, provide the value
\*Lrpc_c_ns_syntax_default\*O.
.LI "\*Ventry_name\*O"
Specifies the entry name to which binding handles and object UUIDs are
exported.
This can be either the global or cell-relative name.
.LI "\*Vif_handle\*O"
Specifies a stub-generated data structure that identifies the interface to
export.  Specifying the value NULL indicates there are no binding
handles to export (only object UUIDs are exported) and the
\*Vbinding_vec\*O parameter is ignored.
.LI "\*Vbinding_vec\*O"
Specifies a vector of server
bindings to export.  Specify the value NULL for this
parameter in cases where there are no binding handles to export (only object
UUIDs are exported).
.nL
.ne 6
.LI "\*Vobject_uuid_vec\*O"
Identifies a vector of object UUIDs offered by the server.  The server
application constructs this vector. NULL indicates there
are no object UUIDs to export (only binding handles are exported).
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lrpc_ns_binding_export(\|)\*O routine allows
a server application to publicly offer, in the name service database,
an interface that any client application can use.  A server application
can also use this routine to publicly offer the object UUIDs
of the application's resources.
.PP
To export an interface, the server application calls the routine with
an interface and the server binding handles that a client can use to
access the server.
.PP
A server can export interfaces and objects in a single call to this routine,
or it can export them separately.
.PP
If the entry in the name service database specified by
the \*Ventry_name\*O parameter does
not exist, \*Lrpc_ns_binding_export(\|)\*O tries to create it.
In this case a server must have the correct permissions to create the entry.
Otherwise, a management application with the necessary permissions
creates the entry by calling \*Lrpc_ns_mgmt_entry_create(\|)\*O
before the server runs.
.PP
A server is not required to export its interfaces to the
name service database.  When a server does not export any interfaces,
only clients that privately know of that
server's binding information can access its interfaces.  For example, a client
that has the information needed to construct a string binding can call
\*Lrpc_binding_from_string_binding(\|)\*O to create a binding handle for
making remote procedure calls to a server.
.PP
Before calling \*Lrpc_ns_binding_export(\|)\*O
to export interfaces (but not to export object UUIDs), a server must
do the following:
.ML
.LI
Register one or more protocol sequences with the local RPC runtime by
calling one of the following routines:
.ad l
.ML
.LI
\*Lrpc_server_use_protseq(\|)\*O
.LI
\*Lrpc_server_use_protseq_ep(\|)\*O
.LI
\*Lrpc_server_use_protseq_if(\|)\*O
.LI
\*Lrpc_server_use_all_protseqs(\|)\*O
.LI
\*Lrpc_server_use_all_protseqs_if(\|)\*O
.LE
.ad b
.LI
Obtain a list of server bindings by calling
\*Lrpc_server_inq_bindings(\|)\*O.
.PP
The vector returned from \*Lrpc_server_inq_bindings(\|)\*O
becomes the \*Vbinding_vec\*O parameter for this routine.  To prevent a
binding from being exported, set the selected vector element to
the value NULL.  (See the section on RPC data types and structures
in the \*Lrpc_intro(3rpc)\*O reference page.)
.LE
.PP
If a server exports an interface to the same
entry in the name service database more than once, the second
and subsequent calls to this routine add the binding information and
object UUIDs only if they differ from
the ones in the server entry.  Existing data is not removed from the entry.
.PP
To remove binding handles and object UUIDs from the name service database,
a server application calls \*Lrpc_ns_binding_unexport(\|)\*O and a
management application calls \*Lrpc_ns_mgmt_binding_unexport(\|)\*O.
.PP
For an explanation of how a server can establish a
client/server relationship without using the name service database,
see the explanation of a string binding in the \*Lrpc_intro(3rpc)\*O
reference page.
.PP
In addition to calling this routine, a server that called either 
\*Lrpc_\%server_\%use_\%all_\%protseqs(\|)\*O or
\*Lrpc_server_use_protseq(\|)\*O
must also register with the local endpoint map by calling
either \*Lrpc_ep_register(\|)\*O or \*Lrpc_\%ep_\%register_\%no_\%replace(\|)\*O.
.SS "Permissions Required"
.PP
You need both read permission and write permission to the CDS object entry
(the target name service entry).
If the entry does not exist, you also need insert permission to
the parent directory.
.nL
.ne .8i
.SH "Return Values"
.PP
No value is returned.
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.LI "\*Lrpc_s_incomplete_name\*O"
Incomplete name.
.LI "\*Lrpc_s_invalid_binding\*O"
Invalid binding handle.
.LI "\*Lrpc_s_invalid_name_syntax\*O"
Invalid name syntax.
.LI "\*Lrpc_s_name_service_unavailable\*O"
Name service unavailable.
.LI "\*Lrpc_s_no_ns_permission\*O"
No permission for name service operation.
.LI "\*Lrpc_s_nothing_to_export\*O"
Nothing to export.
.LI "\*Lrpc_s_unsupported_name_syntax\*O"
Unsupported name syntax.
.LI "\*Lrpc_s_wrong_kind_of_binding\*O"
Wrong kind of binding for operation.
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Lrpc_ep_register(3rpc)\*O,
\*Lrpc_ep_register_no_replace(3rpc)\*O,
\*Lrpc_ns_binding_unexport(3rpc)\*O,
\*Lrpc_ns_mgmt_binding_unexport(3rpc)\*O,
\*Lrpc_ns_mgmt_entry_create(3rpc)\*O,
\*Lrpc_server_inq_bindings(3rpc)\*O,
\*Lrpc_server_use_all_protseqs(3rpc)\*O,
\*Lrpc_server_use_all_protseqs_if(3rpc)\*O,
\*Lrpc_server_use_protseq(3rpc)\*O,
\*Lrpc_server_use_protseq_ep(3rpc)\*O,
\*Lrpc_server_use_protseq_if(3rpc)\*O.
.ad b
