...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: wchar_t_from_netcs.3rpc,v $
...\" Revision 1.1.4.2  1996/11/18  20:00:27  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:36:09  wardr]
...\"
...\" Revision 1.1.4.1  1996/10/30  12:48:32  wardr
...\" 	{def,CR13630,R1.2.2}
...\" 	misc corrections from developer Mariko Romagna
...\" 	[1996/10/30  12:47:32  wardr]
...\" 
...\" Revision 1.1.2.10  1995/06/21  13:20:55  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/19  16:01:56  buckler]
...\" 
...\" Revision 1.1.2.9  1995/06/07  20:12:45  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:08:17  buckler]
...\" 
...\" Revision 1.1.2.7  1994/10/18  22:01:59  zahn
...\" 	{edt,5284,R1.1}
...\" 
...\" 	Added technical review comments.
...\" 	[1994/10/18  22:01:31  zahn]
...\" 
...\" Revision 1.1.2.6  1994/10/05  12:05:51  zahn
...\" 	{edt,5284,R1.1}
...\" 
...\" 	Miscellaneous edits.
...\" 	[1994/10/05  12:05:33  zahn]
...\" 
...\" Revision 1.1.2.5  1994/08/12  16:43:30  zahn
...\" 	{edt,5284,R1.1}
...\" 
...\" 	Added Mariko Romagna's technical corrections.
...\" 	[1994/08/12  16:43:13  zahn]
...\" 
...\" Revision 1.1.2.4  1994/06/13  17:04:03  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:48:03  devobj]
...\" 
...\" Revision 1.1.2.3  1994/04/29  19:29:13  zahn
...\" 	Removed pointer from synopsis, added local buffer size
...\" 	param.
...\" 	[1994/04/29  19:28:58  zahn]
...\" 
...\" Revision 1.1.2.2  1994/04/21  14:59:45  zahn
...\" 	Fixed broken list in Output params section.
...\" 	[1994/04/21  14:59:14  zahn]
...\" 
...\" Revision 1.1.2.1  1994/04/01  21:45:59  zahn
...\" 	{enh,5284,R1.1}
...\" 
...\" 	Add documentation for character/code sets interoperability
...\" 	features for DCE 1.1.
...\" 	[1994/04/01  21:45:41  zahn]
...\" 
...\" $EndLog$
.TH wchar_t_from_netcs 3rpc
...\" .iX "\*Lwchar_t_from_netcs(\|)\*O"
.SH "Name"
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
\*Lwchar_t_from_netcs\*O - Converts international character data from
a network code set to a local code set prior to unmarshalling
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.PP
Used by client and server applications
.SH "Synopsis"
.sS
\*L#include <dce/codesets_stub.h>\*L
.sp .4v
\*Lvoid \*Lwchar_t_from_netcs\*L(
.nL
	\*Lrpc_binding_handle_t \*Vbinding\*L,
.nL
	\*Lunsigned32 \*Vnetwork_code_set_value\*L,
.nL
	\*Lidl_byte *\*Vnetwork_data\*L,
.nL
	\*Lunsigned32 \*Vnetwork_data_length\*L,
.nL
	\*Lunsigned32 \*Vlocal_buffer_size\*L,
.nL
	\*Lwchar_t *\*Vlocal_data\*L,
.nL
	\*Lunsigned32 *\*Vlocal_data_length\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vbinding\*O"
Specifies the target binding handle from which to obtain
code set conversion information.  When called from the client stub, 
this value is the binding handle of a compatible server returned by the
\*Lrpc_ns_binding_import_next(\|)\*O or \*Lrpc_ns_binding_select(\|)\*O
routine.  
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Vnetwork_code_set_value\*O"
The registered hexadecimal integer value that represents the
code set that was used to transmit character data over the network.
In general, the network code set is the code set that the client application's
code sets evaluation routine has determined to be compatible for
this client and server.  When the caller is the client stub, this
value is the receiving tag.  When the caller
is the server stub, this value is the sending tag.
.LI "\*Vnetwork_data\*O"
A pointer to the international character data that has been received,
in the network code set encoding.
.nL
.ne 6
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Vnetwork_data_length\*O"
The number of \*Lidl_byte\*O data elements to be converted.  For a
varying array or a conformant varyihg array, the value is the local 
value of the \*Llength_is\*O variable.  For a conformant array, the value 
is the local value of the \*Lsize_is\*O variable.  For a fixed array, 
the value is the array size specified in the interface definition.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Vlocal_buffer_size\*O"
A pointer to the buffer size to be allocated to contain
the converted data, in units of \*Lwchar_t\*O.  The value specified
in this parameter is the local buffer size returned by the
\*Lwchar_t_local_size(\|)\*O routine.
.LE
.SS "Output"
.VL
.LI "\*Vlocal_data\*O"
A pointer to the converted data, in \*Lwchar_t\*O format.
.LI "\*Vlocal_data_length\*O"
The length of the converted data, in units of \*Lwchar_t\*O.
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
NULL is specified if a fixed array or varying array is to be converted.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.zA "defect, 13630, 1.2.2, moved errors info"
.zZ "defect, 13630, 1.2.2, moved errors info"
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lwchar_t_from_netcs(\|)\*O routine belongs to a set of
DCE RPC routines for use by client and server applications
that are transferring international character data
in a heterogeneous character set and code sets environment.
.PP
The \*Lwchar_t_from_netcs(\|)\*O routine is one of the DCE RPC
stub code set conversion routines that RPC stubs use before they
marshall or unmarshall data to convert international character
data to and from local and network code sets.
.PP
Client and server stubs call the \*Lwchar_t_\*V*\*L_netcs\*O
routines when the \*Lwchar_t\*O type has been specified
as the local data type using the \*Lcs_char\*O attribute in the
attribute configuration file for the application.
.PP
Client and server stubs call the \*Lwchar_t_from_netcs(\|)\*O routine before
they unmarshall the international character data received from the network.
The routine takes a binding handle, a code set value that identifies the code
set used to transfer international character data over the network,
the address of the network data, in \*Lidl_byte\*O format, that
may need to be converted, and the data length, in units of \*Lidl_byte\*O.
.PP
.ne 6
The routine compares the sending code set to the local
code set currently in use.  If the routine finds that code set
conversion is necessary, (because the local code set differs
from the code set specified to be used on the network), it
determines which host code set converter to call to convert
the data and then invokes that converter.
.PP
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
The routine then returns the converted data, in \*Lwchar_t\*O
format.  If the data is a conformant or conformant
varying array, the routine also returns the length of the
converted data, in units of \*Lwchar_t\*O.
.P
Prior to calling \*Lwchar_t_from_netcs(\|)\*O,
client and server stubs call the \*Lwchar_t_local_size(\|)\*O routine to
calculate the size of the buffer required to hold the converted data.
Because \*Lwchar_t_local_size(\|)\*O cannot make this calculation for
fixed and varying arrays, applications should either restrict use of
\*Lwchar_t_from_netcs(\|)\*O to conformant and conformant varying
arrays, or independently ensure that the buffer allocated for 
converted data is large enough.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.PP
Applications can specify local data types other than \*Lcs_byte\*O
and \*Lwchar_t\*O (the local data types for which DCE RPC
supplies stub code set conversion routines) with the \*Lcs_char\*O
ACF attribute.  In this case, the application must also supply
\*Vlocal_type\*L_to_netcs(\|)\*O and \*Vlocal_type\*L_from_netcs(\|)\*O
stub conversion routines for this type.
.SS "Permissions Required"
.PP
No permissions are required.
.nL
.ne 1.5i
.SH "Return Values"
.PP
No value is returned.
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LI "\*Lrpc_s_ss_incompatible_codesets\*O"
The binding handle does not contain code set evaluation information.
If this error occurs in the server stub, an exception is raised
to the client application.
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LE
.PP
When the routine is running the host converter routines, the following
errors can be returned:
.ad l
.ML
.LI 
\*Lrpc_s_ss_invalid_char_support\*O
.LI 
\*Lrpc_s_ss_short_conv_buffer\*O
.zA "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.zZ "defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"
.LE
.ad b
.zA "defect, 13630, 1.2.2, moved errors info"
.PP
When invoked from the server stub, this routine calls the
\*Ldce_cs_loc_to_rgy(\|)\*O routine and the host converter
routines.  If one of these routines returns an error, an exception
is raised to the client application.
.zZ "defect, 13630, 1.2.2, moved errors info"
.nL
.ne 1.5i
.SH "Related Information"
.PP
.ad l
.zA "defect, 13630, 1.2.2, augmented functions list while I was at it"
Functions:
\*Lcs_byte_from_netcs(3rpc)\*O,
\*Lcs_byte_to_netcs(3rpc)\*O,
\*Ldce_cs_loc_to_rgy(3rpc)\*O,
\*Lwchar_t_local_size(3rpc)\*O,
\*Lwchar_t_net_size(3rpc)\*O,
\*Lwchar_t_to_netcs(3rpc)\*O.
.zZ "defect, 13630, 1.2.2, augmented functions list while I was at it"
.ad b
