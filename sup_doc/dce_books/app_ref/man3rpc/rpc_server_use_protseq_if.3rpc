...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: rpc_server_use_protseq_if.3rpc,v $
...\" Revision 1.1.8.1  1996/11/18  19:59:44  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:35:34  wardr]
...\"
...\" Revision 1.1.6.7  1995/06/07  20:12:15  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:07:36  buckler]
...\" 
...\" Revision 1.1.6.5  1994/10/19  20:15:37  neilson
...\" 	CR 10326 - Automatic fix to name of intro ref page
...\" 	[1994/10/19  20:09:20  neilson]
...\" 
...\" Revision 1.1.6.4  1993/01/27  16:56:13  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:35:12  cjd]
...\" 
...\" Revision 1.1.6.3  1993/01/26  19:06:23  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  18:35:12  cjd]
...\" 
...\" Revision 1.1.6.2  1992/10/01  20:58:01  weir
...\" 	Removed change bars; moved into 1.0.2doc tree
...\" 	[1992/10/01  20:11:35  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  14:54:09  oaf]
...\" 
...\" Revision 1.1.4.3  1992/09/16  18:32:23  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.4.2  1992/08/14  17:56:17  oaf
...\" 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)
...\" 	[1992/08/14  17:03:08  oaf]
...\" 
...\" Revision 1.1.2.3  1992/06/04  20:41:39  mcdonald
...\" 	Changes made:            Delete status code rpc_s_invalid_if_handle
...\" 	File name:               src/app_ref/man3rpc/rpc_server_use_protseq_if.3rpc
...\" 	Change Request Number:   3562
...\" 	[1992/06/04  20:39:52  mcdonald]
...\" 
...\" Revision 1.1.2.2  1992/05/19  15:51:53  buckler
...\" 	Editorial review
...\" 	[1992/05/19  15:44:20  buckler]
...\" 
...\" Revision 1.1  1992/01/29  15:38:39  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Fri.  Dec 6, 1991                 Update file submission for
...\"                                    final integration at IBM.
...\"                                   
...\"
...\" ********************************************************************
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *
...\" All rights reserved.                                               *
...\" ********************************************************************
.TH rpc_server_use_protseq_if 3rpc
...\" .iX "\*Lrpc_server_use_protseq_if(\|)\*O"
.SH "Name"
\*Lrpc_server_use_protseq_if\*O - Tells the RPC runtime to use the
specified protocol sequence combined with the endpoints
in the interface specification for receiving remote procedure calls
.PP
Used by server applications
.SH "Synopsis"
.sS
\*L#include <dce/rpc.h>\*L
.sp .4v
\*Lvoid \*Lrpc_server_use_protseq_if\*L(
.nL
	\*Lunsigned_char_t *\*Vprotseq\*L,
.nL
	\*Lunsigned32 \*Vmax_call_requests\*L,
.nL
	\*Lrpc_if_handle_t \*Vif_handle\*L,
.nL
	\*Lunsigned32 *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vprotseq\*O"
Specifies a string identifier for the protocol sequence
to register with the RPC runtime.
For a list of string identifiers, see the table of valid
protocol sequences in the \*Lrpc_intro(3rpc)\*O reference page.
.LI "\*Vmax_call_requests\*O"
Specifies the maximum number of concurrent remote procedure call requests
that the server can accept.
.PP
The RPC runtime guarantees that the server can accept at least this
number of concurrent call requests.  The actual number of these requests can
be greater than the value of \*Vmax_call_requests\*O and can vary for each
protocol sequence.
.PP
Use the value \*Lrpc_c_protseq_max_reqs_default\*O to specify the default
parameter value.
.PP
Note that in this version of DCE RPC, any number you specify is
replaced by the default value.
.PP
Also, the \*Lrpc_server_listen(\|)\*O routine limits (according to its
\*Vmax_calls_exec\*O parameter) the amount of concurrent remote
procedure call execution.
See the \*Lrpc_server_listen(3rpc)\*O reference page for more information.
.nL
.ne 6
.LI "\*Vif_handle\*O"
Specifies an interface specification whose endpoint information is used
in creating a binding for the protocol sequence specified in the
\*Vprotseq\*O parameter.  Each created binding handle contains a
well-known (nondynamic) endpoint contained in
the interface specification.
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lrpc_server_use_protseq_if(\|)\*O routine
registers one protocol sequence with the RPC runtime, including its
endpoint address information as provided in the specified IDL file.
.PP
A server must register at least one
protocol sequence with the RPC runtime to receive remote procedure
call requests.
A server can call this routine multiple times
to register additional protocol sequences.
.PP
For each protocol sequence registered by a server, the RPC runtime creates
one or more binding handles.  Each binding handle contains
the well-known endpoint specified in the IDL file.
.PP
The \*Vmax_call_requests\*O parameter allows you to specify the maximum
number of concurrent remote procedure call requests the server handles.
.PP
To register all protocol sequences from the IDL, a server calls the
\*Lrpc_server_use_all_protseqs_if(\|)\*O routine.
.PP
The explanation of \*Lrpc_server_use_all_protseqs(\|)\*O contains
a list of the routines a server typically calls after calling this
routine.  However, a server that uses only
\*Lrpc_server_use_protseq_if(\|)\*O does not subsequently call
\*Lrpc_ep_register(\|)\*O or \*Lrpc_ep_register_no_replace(\|)\*O.
For an explanation of how a server can establish a
client/server relationship without using the local endpoint map or
the name service database, see the information on string bindings
in the \*Lrpc_intro(3rpc)\*O reference page.
.nL
.ne .8i
.SH "Return Values"
.PP
No value is returned.
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.LI "\*Lrpc_s_calls_too_large_for_wk_ep\*O"
Maximum concurrent calls too large.
.LI "\*Lrpc_s_cant_bind_socket\*O"
Cannot bind to socket.
.LI "\*Lrpc_s_invalid_endpoint_format\*O"
Invalid endpoint format.
.LI "\*Lrpc_s_invalid_rpc_protseq\*O"
Invalid protocol sequence.
.LI "\*Lrpc_s_max_descs_exceeded\*O"
Exceeded maximum number of network descriptors.
.LI "\*Lrpc_s_protseq_not_supported\*O"
Protocol sequence not supported on this host.
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Lrpc_binding_vector_free(3rpc)\*O,
\*Lrpc_ep_register(3rpc)\*O,
\*Lrpc_ep_register_no_replace(3rpc)\*O,
\*Lrpc_ns_binding_export(3rpc)\*O,
\*Lrpc_server_inq_bindings(3rpc)\*O,
\*Lrpc_server_listen(3rpc)\*O,
\*Lrpc_server_register_if(3rpc)\*O,
\*Lrpc_server_use_all_protseqs(3rpc)\*O,
\*Lrpc_server_use_all_protseqs_if(3rpc)\*O,
\*Lrpc_server_use_protseq(3rpc)\*O,
\*Lrpc_server_use_protseq_ep(3rpc)\*O.
.ad b
