...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: idl_es_decode_incremental.3rpc,v $
...\" Revision 1.1.4.1  1996/11/18  19:56:13  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:33:45  wardr]
...\"
...\" Revision 1.1.2.8  1995/06/07  20:10:31  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:05:30  buckler]
...\" 
...\" Revision 1.1.2.6  1994/07/25  15:41:58  zahn
...\" 	{review,9601,R1.1}
...\" 
...\" 	Added that read routine prototype should return
...\" 	an exception, per T. Jordahl review comment.
...\" 	[1994/07/25  15:40:07  zahn]
...\" 
...\" Revision 1.1.2.5  1994/06/13  17:03:51  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:47:39  devobj]
...\" 
...\" Revision 1.1.2.4  1994/05/05  18:58:43  zahn
...\" 	Removed include line from synopsis.
...\" 	Replacing w/info about including in
...\" 	the rpc_intro.3rpc reference page.
...\" 	[1994/05/05  18:58:25  zahn]
...\" 
...\" Revision 1.1.2.3  1994/04/29  17:45:39  zahn
...\" 	Miscellaneous fixes.
...\" 	[1994/04/29  17:45:18  zahn]
...\" 
...\" Revision 1.1.2.2  1994/04/27  18:40:16  zahn
...\" 	{enh,9601,R1.1}
...\" 
...\" 	Added include line to Synopsis section, information
...\" 	about the routine to the Description section, change
...\" 	bars, and incorporated idl_es_read_fn_t reference page into
...\" 	this reference page to follow the documentation conventions
...\" 	used by other DCE routines that require user-written routines.
...\" 	[1994/04/27  18:39:58  zahn]
...\" 
...\" Revision 1.1.2.1  1994/03/21  16:31:44  rjohnson
...\" 	Changes made: New IDL reference page for Version 1.1.
...\" 	File name: app_ref/man3rpc/idl_es_decode_incremental.3rpc
...\" 	Change Request: 9601
...\" 	[1994/03/21  16:19:49  rjohnson]
...\" 
...\" $EndLog$ 
.TH idl_es_decode_incremental 3rpc
.SH "Name"
\*Lidl_es_decode_incremental\*O - Returns an incremental decoding handle to
the IDL encoding services
.PP
Used by client and server applications
.SH "Synopsis"
.sS
\*Lvoid idl_es_decode_incremental\*L(
.nL
	\*Lidl_void_p_t \*Vstate\*L,
.nL
	\*Lidl_es_read_fn_t \*Vread_fn\*L,
.nL
	\*Lidl_es_handle_t *\*Ves_handle\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.SH "Parameters"
.SS "Input/Output"
.VL
.LI "\*Vstate\*O"
Specifies the address of an application-provided data structure that
coordinates the actions of successive calls to the \*Vread_fn\*O routine.
The \*Vstate\*O data structure acts as a communications channel between
the application and the \*Vread_fn\*O routine.
.LE
.SS "Input"
.VL
.LI "\*Vread_fn\*O"
Specifies the address of a user-provided routine that generates
a buffer of encoded data for decoding by the IDL encoding
services.  The IDL encoding services call the \*Vread_fn\*O
routine repeatedly until all of the data has been decoded.
.PP
The following C definition for \*Lidl_es_read_fn_t\*O
illustrates the prototype for the \*Vread_fn\*O routine:
.nL
.ne 1.5i
.iS
typedef void (*idl_es_read_fn_t)
 (
  idl_void_p_t    state,            /* in/out */
  idl_byte        **buffer,         /* in */
  idl_ulong_int   *size,            /* in */
 );
.iE
.PP
The \*Lidl_es_decode_incremental(\|)\*O routine passes the
specified \*Vstate\*O parameter value as input to
the \*Vread_fn\*O routine.  The \*Vstate\*O data structure
is the communications path between the application and
the \*Vread_fn\*O routine.  For example, the application
can use the \*Vstate\*O parameter to pass in an open file
pointer from which the \*Vread_fn\*O routine is to read encoded data.
.PP
The \*Vbuffer\*O parameter specifies the address of the data
to be decoded; this address must be 8-byte aligned.  The
\*Vsize\*O parameter specifies the size of the buffer to
be decoded, and must be a multiple of 8 bytes unless it
represents the size of the last buffer to be decoded.
.PP
The \*Vread_fn\*O routine should return an exception on error.
.LE
.SS "Output"
.VL
.LI "\*Ves_handle\*O"
Returns the address of an IDL encoding services handle for use
by a client or server decoding operation.
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code indicates
whether the routine completed successfully or, if not, why not.
.LE
.SH "Description"
The IDL encoding services provide client and server
RPC applications with a method for encoding data types
in input parameters into a byte stream and decoding data types
in output parameters from a byte stream without invoking
the RPC runtime.  Encoding and decoding operations are
analogous to marshalling and unmarshalling, except that
the data is stored locally, and is not transmitted over
the network.  Client and server applications can use the
IDL encoding services to create persistent storage for
their data.  Encoding flattens complex data types into
a byte stream for storage on disk, while decoding restores
the flattened data to complex form.
.PP
The \*Lidl_es_decode_incremental(\|)\*O routine belongs
to a set of routines that return handles to the IDL
encoding services for use by client and server encoding
and decoding operations.  The information in the handle
controls the way in which the IDL encoding services
manage memory when encoding or decoding data.
.PP
The \*Lidl_es_decode_incremental(\|)\*O routine returns an
incremental decoding handle, which directs the IDL encoding
services to decode data by calling the user-supplied
\*Vread_fn\*O routine, which generates a small buffer
of encoded data for the IDL encoding services to decode.  The
routine passes the buffer address and size to the IDL encoding
services, which then decode the buffer.  The IDL encoding services
call the \*Vread_fn\*O routine repeatedly until there is no more
data to decode.
.SH "Return Values"
None.
.nL
.ne 8
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.LI "\*Lrpc_s_no_memory\*O"
Insufficient memory available to complete operation.
.LE
.SH "Related Information"
.ad l
Functions: 
\*Lidl_es_decode_buffer(3rpc)\*O,
\*Lidl_es_encode_incremental(3rpc)\*O.
.ad b
