...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\" 
...\" HISTORY
...\" $Log: rpc_sm_get_thread_handle.3rpc,v $
...\" Revision 1.1.6.2  1996/11/18  19:59:52  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:35:40  wardr]
...\"
...\" Revision 1.1.6.1  1996/05/13  18:07:25  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:03:56  wardr]
...\" 
...\" Revision 1.1.4.1  1996/03/12  16:57:55  weir
...\" 	CR 12748: corrected rpc_ss_thread_handle_t type typo
...\" 	[1996/03/12  16:57:10  weir]
...\" 
...\" Revision 1.1.2.5  1995/06/07  20:12:21  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:07:44  buckler]
...\" 
...\" Revision 1.1.2.3  1993/02/25  16:34:15  cjd
...\" 	Embedded copyright notice
...\" 	[1993/02/25  16:28:16  cjd]
...\" 
...\" Revision 1.1.2.2  1993/02/10  16:54:09  hodgman
...\" 	File Name: app_ref/man3rpc/rpc_sm_get_thread_handle.3rpc
...\" 	Change Request Number: 7157
...\" 	Changes Made: Added new RPC API routine reference page
...\" 	[1993/02/10  15:40:19  hodgman]
...\" 
...\" 	File Name: app_ref/man3rpc/rpc_sm_get_thread_handle.3rpc
...\" 	Change Request Number: 7157
...\" 	Changes Made: Added new RPC API routine reference page
...\" 	[1993/02/09  17:50:20  hodgman]
...\" 
...\" $EndLog$
...\"
...\"
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                   COMMENT:
...\"
...\"   7/20/92			Original derived from DCE Prog.  Ref src.
...\"     
...\"     
...\"
...\" ********************************************************************
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *
...\" All rights reserved.                                               *
...\" ********************************************************************
.TH rpc_sm_get_thread_handle 3rpc  
.SH "Name"
\*Lrpc_sm_get_thread_handle\*O - Gets a thread handle for the stub
memory management environment
.iX "memory" "management"
.iX "server threads" "memory management"
.iX "memory" "\*Lrpc_sm_get_thread_handle\*O routine"
.iX "\*Lrpc_sm_get_thread_handle\*O routine"
.iX "threads" "memory management"
.SH "Synopsis"
.sS
\*L#include <rpc.h>\*O
.sp .4v
\*Lrpc_ss_thread_handle_t rpc_sm_get_thread_handle(
.nL
unsigned32 *\*Vstatus\*L);\*O
.sE
.SH "Parameters"
.SS "Output"
.VL
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.SH "Description"
Applications call \*Lrpc_sm_get_thread_handle(\|)\*O to get a thread
handle for the current stub memory management environment.    
A thread that is managing memory within the stub memory
managment scheme calls \*rpc_sm_get_thread_handle(\|)\*O to get a
thread handle for its current stub memory management environment.
A thread that calls \*Lrpc_sm_set_thread_handle(\|)\*O with this handle,
is able to use the same memory management environment.
.PP
When multiple threads call \*Lrpc_sm_allocate(\|)\*O and \*Lrpc_sm_free(\|)\*O
to manage the same memory, they must share the same thread handle.
The thread that established the stub memory management environment
calls \*Lrpc_sm_get_thread_handle(\|)\*O to get a thread handle before
spawning new threads that will manage the same memory.  The spawned
threads then call \*Lrpc_sm_set_thread_handle(\|)\*O with the handle
provided by the parent thread.
.nS "Application Note"
Typically, \*Lrpc_sm_get_thread_handle(\|)\*O is called by a server
manager routine before it spawns additional threads.  Normally the
stub sets up the memory management environment for the manager
routine.  The manager calls \*Lrpc_sm_get_thread_handle(\|)\*O to make
this environment available to the spawned threads.
.PP
A thread may also use \*Lrpc_sm_get_thread_handle(\|)\*O and
\*Lrpc_sm_set_thread_handle(\|)\*O to save and restore its memory
management environment.
.nE
.SH "Return Values"
A thread handle.
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.LE
.SH "Related Information"
.ad l
Functions: \*Lrpc_sm_allocate(3rpc)\*O, 
\*Lrpc_sm_free(3rpc)\*O, 
\*Lrpc_sm_set_thread_handle(3rpc\*O.
.ad b
