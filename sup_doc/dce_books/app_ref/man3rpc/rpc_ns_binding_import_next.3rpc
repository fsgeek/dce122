...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: rpc_ns_binding_import_next.3rpc,v $
...\" Revision 1.1.74.1  1996/11/18  19:58:04  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  19:34:41  wardr]
...\"
...\" Revision 1.1.72.3  1995/06/07  20:11:25  buckler
...\" 	1.1 edits  Prentice Hall reformat
...\" 	[1995/06/07  20:06:34  buckler]
...\" 
...\" Revision 1.1.72.1  1993/10/12  15:26:53  stevel
...\" 	{def, 7682, R1.0.3}
...\" 	Modified text to reflect the fact that returned object UUIDs are
...\" 	selected in an unspecified way, not randomly, so that applications
...\" 	should not count on randomness or any other selection criterion.  Also
...\" 	added text to answer question about the effect of successive calls.
...\" 	[1993/10/08  17:26:28  stevel]
...\" 
...\" Revision 1.1.6.4  1993/01/26  17:51:10  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  17:21:11  cjd]
...\" 
...\" Revision 1.1.6.3  1992/12/29  16:40:49  mcdonald
...\" 	Changes made:           Add explanation that rpc_ns_binding_import_next()
...\" 	                        functions by calling rpc_ns_binding_lookup_next();
...\" 	                        the former routine then selects one binding handle
...\" 	                        at random from the ones obtained by the latter routine.
...\" 	File name:              src/app_ref/man3rpc/rpc_ns_binding_import_next.3rpc
...\" 	Change Request Number:  3870
...\" 	[1992/12/29  16:39:29  mcdonald]
...\" 
...\" Revision 1.1.6.2  1992/10/01  20:48:37  weir
...\" 	Removed change bars; moved into 1.0.2doc tree
...\" 	[1992/10/01  20:01:06  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  14:47:27  oaf]
...\" 
...\" Revision 1.1.4.3  1992/09/16  18:29:53  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.4.2  1992/08/14  18:41:09  oaf
...\" 	Updated per edits, fixed PURPOSE, ragged-righted related functions.
...\" 	[1992/08/14  18:40:38  oaf]
...\" 
...\" Revision 1.1.2.4  1992/07/06  21:14:59  mcdonald
...\" 	Changes made:           Delete unnecessary description of traversing entries
...\" 	                           in the name service database; add phrase about
...\" 	                           random selection of a binding handle
...\" 	File name:              src/app_ref/man3rpc/rpc_ns_binding_import_next.3rpc
...\" 	Change Request Number:  3870
...\" 	[1992/07/06  21:12:12  mcdonald]
...\" 
...\" Revision 1.1.2.3  1992/05/18  20:03:49  buckler
...\" 	Editorial review
...\" 	[1992/05/18  19:54:43  buckler]
...\" 
...\" Revision 1.1.2.2  1992/04/28  17:27:06  hodgman
...\" 	File Name: src/app_ref/man3rpc/rpc_ns_binding_import_next.3rpc
...\" 	Change Request Number: 2961
...\" 	Changes Made: Added the status code rpc_s_not_rpc_entry.
...\" 	Added the status code rpc_s_class_version_mismatch.
...\" 	[1992/04/28  17:26:23  hodgman]
...\" 
...\" Revision 1.1  1992/01/29  15:36:58  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Mon Nov 11, 1991                 Initial file submission to HP
...\"                                    for final integration at IBM.
...\"
...\"
...\" ********************************************************************
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *
...\" All rights reserved.                                               *
...\" ********************************************************************
.TH rpc_ns_binding_import_next 3rpc
...\" .iX "\*Lrpc_ns_binding_import_next(\|)\*O"
.SH "Name"
\*Lrpc_ns_binding_import_next\*O - Returns a binding handle of a compatible
server (if found) from the name service database
.PP
Used by client applications
.SH "Synopsis"
.sS
\*L#include <dce/rpc.h>\*L
.sp .4v
\*Lvoid \*Lrpc_ns_binding_import_next\*L(
.nL
	\*Lrpc_ns_handle_t \*Vimport_context\*L,
.nL
	\*Lrpc_binding_handle_t *\*Vbinding\*L,
.nL
	\*Lunsigned32 *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vimport_context\*O"
Specifies a name service handle.  This handle is returned from the
\*Lrpc_ns_binding_import_begin(\|)\*O routine.
.LE
.SS "Output"
.VL
.LI "\*Vbinding\*O"
Returns a compatible server binding handle.
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lrpc_ns_binding_import_next(\|)\*O routine returns one compatible
(to the client) server binding handle
selected at random from the name service database.  The
server offers the interface and
object UUID specified by the respective \*Vif_handle\*O and \*Vobj_uuid\*O
parameters in \*Lrpc_ns_binding_import_begin(\|)\*O.
.PP
A similar routine is \*Lrpc_ns_binding_lookup_next(\|)\*O, which returns
a vector of compatible server binding handles for one or
more servers.
.nS note
The routine \*Lrpc_ns_binding_import_next(\|)\*O calls the routine
\*Lrpc_ns_binding_lookup_next(\|)\*O which, in turn, obtains a vector
of server binding handles from the name service database.  Next, routine
\*Lrpc_ns_binding_import_next(\|)\*O randomly selects one of the elements
from the vector.
.nE
.PP
The \*Lrpc_ns_binding_import_next(\|)\*O routine communicates only with the
name service database, not directly with servers.
...\" .PP
...\" Deletion\(eminformation about traversing entries in the name service database
...\" is in reference page \*Lrpc_ns_binding_lookup_next(3rpc)\*O.
.PP
The returned compatible binding handle always contains an object UUID.
Its value depends on the value specified in the \*Vobj_uuid\*O parameter
of the \*Lrpc_ns_binding_import_begin(\|)\*O routine, as follows:
.ad l
.ML
.LI
If \*Vobj_uuid\*O contains a nonnil object UUID, the returned binding
handle contains that object UUID.
.LI
If \*Vobj_uuid\*O contains a nil object UUID or NULL, the object UUID
returned in the binding handle depends on how the server exported
object UUIDs:
.ML
.LI
If the server did not export any object UUIDs, the returned binding handle
contains a nil object UUID.
.LI
If the server exported one object UUID, the returned binding handle
contains that object UUID.
.LI
If the server exported multiple object UUIDs, the returned binding
handle contains one of the object UUIDs, selected in an unspecified
way.  
.PP
Applications should not count on multiple calls to
\*Lrpc_ns_binding_import_next(\|)\*O returning different object UUIDs.
In particular, note that each name service entry stores server address
information separately from exported object UUIDs.  Successive calls
to \*Lrpc_ns_binding_import_next(\|)\*O using the same import context will
return exactly one binding for each compatible server address, not the
cross product of all compatible server addresses with all exported
UUIDs.  Each returned binding will contain one of the exported object
UUIDs, but applications should not count on any specific selection
mechanism for these object UUIDs
.LE
.LE
.ad b
.PP
The client application can use the returned
binding handle to make a
remote procedure call to the server.  If the client fails to
communicate with the server, it can call the
\*Lrpc_ns_binding_import_next(\|)\*O routine again.
.PP
Each time the client calls \*Lrpc_ns_binding_import_next(\|)\*O,
the routine returns another server binding handle.
The binding handles returned are unordered.
Multiple binding handles can refer to different protocol
sequences from the same server.
.PP
When the search finishes, the routine
returns a status code of \*Lrpc_s_no_more_bindings\*O and returns
the value NULL in \*Vbinding\*O.
.PP
A client application calls \*Lrpc_ns_binding_inq_entry_name(\|)\*O
to obtain the name of the entry in the name service database where
the binding handle came from.
.PP
The \*Lrpc_ns_binding_import_next(\|)\*O routine allocates memory for the
returned \*Vbinding\*O parameter.  When a client
application finishes with the binding handle, it must call
\*Lrpc_binding_free(\|)\*O to deallocate the memory.  Each call to
\*Lrpc_ns_binding_import_next(\|)\*O requires a corresponding
call to \*Lrpc_binding_free(\|)\*O.
.PP
The client calls the
\*Lrpc_ns_binding_import_done(\|)\*O routine
after it has satisfactorily used one or more
returned server binding handles.
The \*Lrpc_ns_binding_import_done(\|)\*O routine deletes the import context.
The client also calls \*Lrpc_ns_binding_import_done(\|)\*O if
the application wants to start a new search for compatible servers (by
calling \*Lrpc_ns_binding_import_begin(\|)\*O).
The order of binding handles returned can be different for each new search.
This means that the order in which binding handles are returned to an
application can be different each time the application is run.
.SS "Permissions Required"
.PP
You need read permission to the specified CDS object entry (the
starting name service entry) and to any CDS object entry in the
resulting search path.
.nL
.ne .8i
.SH "Return Values"
.PP
No value is returned.
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lrpc_s_ok\*O"
Success.
.LI "\*Lrpc_s_class_version_mismatch\*O"
RPC class version mismatch.
.LI "\*Lrpc_s_entry_not_found\*O"
Name service entry not found.
.LI "\*Lrpc_s_invalid_ns_handle\*O"
Invalid name service handle.
.LI "\*Lrpc_s_name_service_unavailable\*O"
Name service unavailable.
.LI "\*Lrpc_s_no_more_bindings\*O"
No more bindings.
.LI "\*Lrpc_s_no_ns_permission\*O"
No permission for name service operation.
.LI "\*Lrpc_s_not_rpc_entry\*O"
Not an RPC entry.
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Lrpc_ns_binding_import_begin(3rpc)\*O,
\*Lrpc_ns_binding_import_done(3rpc)\*O,
\*Lrpc_ns_binding_inq_entry_name(3rpc)\*O,
\*Lrpc_ns_binding_lookup_begin(3rpc)\*O,
\*Lrpc_ns_binding_lookup_done(3rpc)\*O,
\*Lrpc_ns_binding_lookup_next(3rpc)\*O,
\*Lrpc_ns_binding_select(3rpc)\*O.
.ad b
