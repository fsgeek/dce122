...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: utc_gmtzone.3dts,v $
...\" Revision 1.1.9.1  1996/11/18  20:57:32  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped section heads
...\" 	[1996/11/18  20:56:32  wardr]
...\"
...\" Revision 1.1.7.6  1995/06/21  13:20:01  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/20  15:43:46  buckler]
...\" 
...\" Revision 1.1.7.5  1995/05/31  21:01:13  buckler
...\" 	No change
...\" 	[1995/05/31  20:57:53  buckler]
...\" 
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/31  20:46:51  buckler]
...\" 
...\" Revision 1.1.7.4  1993/01/26  17:48:37  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  17:15:29  cjd]
...\" 
...\" Revision 1.1.7.3  1992/12/28  21:27:08  d_kenney
...\" 	Changes made: Delete 'const'
...\" 	Filename: app_ref/man3dts/utc_gmtzone.3dts
...\" 	Change Request Number: 3504
...\" 	[1992/12/28  21:26:26  d_kenney]
...\" 
...\" Revision 1.1.7.2  1992/10/01  18:52:13  weir
...\" 	Removed change bars; moved into 1.0.2doc tree
...\" 	[1992/10/01  18:36:26  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  14:39:25  oaf]
...\" 
...\" Revision 1.1.5.3  1992/09/16  18:26:11  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.5.2  1992/08/04  15:46:53  lmk
...\" 	Made Prentice-Hall editorial changes only
...\" 	[1992/08/04  15:39:38  lmk]
...\" 
...\" Revision 1.1.2.4  1992/06/02  15:36:30  buckler
...\" 	Reinstated change bar codes
...\" 	[1992/06/02  15:26:09  buckler]
...\" 
...\" Revision 1.1.2.3  1992/05/20  17:32:57  buckler
...\" 	Editorial review
...\" 	[1992/05/20  17:26:15  buckler]
...\" 
...\" Revision 1.1.2.2  1992/05/08  12:59:27  h_hoff
...\" 	<<< No change.  PARAMETERS, Input, Sentence about NULL argument ommitted >>>
...\" 	[1992/05/08  12:58:04  h_hoff]
...\" 
...\" Revision 1.1  1992/01/29  15:22:27  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Fri Oct 25, 1991                 Initial File Submission for final
...\"                                    integration at IBM
...\"
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Mass.                                                     *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or       *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
.TH utc_gmtzone 3dts
...\" .iX "\*Lutc_gmtzone(\|)\*O"
.iX "\*LGreenwich Mean Time Zone\*O"
.SH "Name"
\*Lutc_gmtzone\*O - Gets the time zone label for GMT
.SH "Synopsis"
.sS
\*L#include <dce/utc.h>
.sp .4v
\*Lint utc_gmtzone(
.nL
	\*Lchar *\*Vtzname\*L,
.nL
	\*Lsize_t \*Vtzlen\*L,
.nL
	\*Llong *\*Vtdf\*L,
.nL
	\*Lint *\*Visdst\*L,
.nL
	\*Lutc_t *\*Vutc\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vtzlen\*O"
Length of buffer \*Vtzname\*O.
.LI "\*Vutc\*O"
Binary timestamp.  This parameter is ignored.
.LE
.SS "Output"
.VL
.LI "\*Vtzname\*O"
Character string long enough to hold the time zone label.
.LI "\*Vtdf\*O"
Long word with differential in seconds east of GMT.  A value of
0 (zero) is always returned.
.LI "\*Visdst\*O"
Integer with a value of 0 (zero), indicating
that daylight saving time is not in
effect.  A value of 0 (zero) is always returned.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lutc_gmtzone(\|)\*O routine gets the time zone label and zero
offset from GMT. Outputs are always \*Vtdf\*O\(eq\*L0\*O and \*Vtzname\*O\(eq\*LGMT\*O.
This routine exists for symmetry with the
\*Lutc_anyzone(\|)\*O and the \*Lutc_localzone(\|)\*O
routines.  Use NULL if you want this
routine to  use the current time for this parameter.
.nL
.ne 1.5i
.SH "Notes"
.PP
All of the output
parameters are optional.  No value is returned and no error
occurs if the \*Vtzname\*O pointer is NULL.
.nL
.ne 1.5i
.SH "Return Values"
.VL
.LI "0"
Indicates that the routine executed successfully (always returned).
.LE
.nL
.ne 1.5i
.SH "Examples"
.PP
The following example prints out the current time in both local time and GMT
time.
.sp .5
.ps 9
.vs 13
.oS
utc_t       now;
struct tm   tmlocal, tmgmt;
long        tzoffset;
int         tzdaylight;
char        tzlocal[80], tzgmt[80];

/*  Get the current time once, so both conversions use the same
 *   time...
 */
utc_gettime(&now);

/*  Convert to local time, using the process TZ environment
 *   variable...
 */
utc_localtime(&tmlocal,       /* Out: Local time tm structure       */
              (long *)0,      /* Out: Nanosec of time               */
              (struct tm *)0, /* Out: Inaccuracy tm structure       */
              (long *)0,      /* Out: Nanosec of inaccuracy         */
              (int *)0,       /* Out: TDF of local time             */
              &now);          /* In:  Current timestamp (ignore)    */



/*   Get the local time zone name, offset from GMT, and current
 *   daylight savings flag...
 */
utc_localzone(tzlocal,        /* Out: Local time zone name          */
              80,             /* In:  Length of loc time zone name  */
              &tzoffset,      /* Out: Loc time zone offset in secs  */
              &tzdaylight,    /* Out: Local time zone daylight flag */
              &now);          /* In:  Current binary timestamp      */

.nL
.ne 10
/*   Convert to GMT...
 */
utc_gmtime(&tmgmt,            /* Out: GMT tm structure              */
           (long *)0,         /* Out: Nanoseconds of time           */
           (struct tm *)0,    /* Out: Inaccuracy tm structure       */
           (long *)0,         /* Out: Nanoseconds of inaccuracy     */
           &now);             /* In:  Current binary timestamp      */

/*   Get the GMT time zone name...
 */
utc_gmtzone(tzgmt,            /* Out: GMT time zone name            */
            80,               /* In:  Size of GMT time zone name    */
            (long *)0,        /* Out: GMT time zone offset in secs  */
            (int *)0,         /* Out: GMT time zone daylight flag   */
            &now);            /* In:  Current binary timestamp	    */
			      /*      (ignore) 			    */

/*   Print out times and time zone information in the following
 *   format:
 *
 *          12:00:37 (EDT) = 16:00:37 (GMT)
 *          EDT is -240 minutes ahead of Greenwich Mean Time.
 *          Daylight savings time is in effect.
 */
printf("%d:%02d:%02d (%s) = %d:%02d:%02d (%s)\\n",
       tmlocal.tm_hour, tmlocal.tm_min, tmlocal.tm_sec, tzlocal,
       tmgmt.tm_hour, tmgmt.tm_min, tmgmt.tm_sec, tzgmt);
printf("%s is %d minutes ahead of Greenwich Mean Time\\n", tzlocal, tzoffset/60);
if (tzdaylight != 0)
    printf("Daylight savings time is in effect\\n");
.oE
.ps 12
.vs 14
.nL
.ne 1.0i
.SH "Related Information"
.ad l
.PP
Functions: \*Lutc_anyzone(3dts)\*O, \*Lutc_gmtime(3dts)\*O,
\*Lutc_localzone(3dts)\*O.
.ad b
