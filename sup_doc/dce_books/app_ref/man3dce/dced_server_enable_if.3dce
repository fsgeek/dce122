...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dced_server_enable_if.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  17:01:32  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:57:47  wardr]
...\"
...\" Revision 1.1.2.7  1995/05/31  17:06:33  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  23:04:37  buckler]
...\" 
...\" Revision 1.1.2.6  1994/10/20  03:06:34  jshirley
...\" 	Final edits.
...\" 	[1994/10/20  03:05:26  jshirley]
...\" 
...\" Revision 1.1.2.5  1994/10/17  22:35:48  jshirley
...\" 	Updated for final.
...\" 	[1994/10/17  22:35:11  jshirley]
...\" 
...\" Revision 1.1.2.4  1994/10/14  18:54:55  hileman
...\" 	Added status codes.
...\" 	[1994/10/14  18:54:38  hileman]
...\" 
...\" Revision 1.1.2.3  1994/06/13  17:02:58  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:47:11  devobj]
...\" 
...\" Revision 1.1.2.2  1994/06/01  14:00:29  jshirley
...\" 	{def,CR9830,R1.1}
...\" 	Incorporated first review comments.
...\" 	[1994/06/01  13:59:46  jshirley]
...\" 
...\" Revision 1.1.2.1  1994/05/04  01:35:22  jshirley
...\" 	Created file.
...\" 	[1994/05/04  01:09:05  jshirley]
...\" 
...\" $EndLog$
.TH dced_server_enable_if 3dce 
...\".iX "\*Ldced_server_enable_if(\|)\*O"
.SH "Name"
\*Ldced_server_enable_if\*O - 
Enables a service (RPC interface) of a specific server on a specific host
.SH "Synopsis"
.sS
\*L#include <dce/dced.h>
.sp .4v
\*Lvoid dced_server_enable_if(
.nL
	\*Ldced_binding_handle_t \*Vdced_bh\*L,
.nL
	\*Luuid_t *\*Vexec_uuid\*L,
.nL
	\*Lrpc_if_id_t *\*Vinterface\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vdced_bh\*O"
Specifies the \*Ldced\*O binding handle for the \*Lsrvrexec\*O service on a
specific host.
.LI "\*Vexec_uuid\*O"
Specifies the UUID that \*Ldced\*O uses to identify the running server.
.LI "\*Vinterface\*O"
Specifies the RPC interface identifier that represents the service to
be enabled.
The interface identifier is generated when \*Lidl\*O compiles an interface
definition file.  The interface identifier is a structure that
contains the interface UUID (\*Linterface->uuid\*O), 
and the major (\*Linterface->vers_major\*O) 
and minor (\*Linterface->vers_minor\*O) version numbers for the interface.
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.  
.LE
.nL
.ne 1.5i
.SH "Description"
The \*Ldced_server_enable_if(\|)\*O routine enables a service 
(or reenables a previously disabled service) 
that a specific server provides.
Management applications use this routine.
A service is represented by an RPC interface identifier.
.PP
.ne 8
When a server starts and initializes itself, it typically calls the
\*Ldce_server_register(\|)\*O routine to enable all of its services.
The services can then be disabled and reenabled, as needed.
A server enables and disables its own services by using
the routines \*Ldce_server_enable_service(\|)\*O and \*Ldce_server_disable_service(\|)\*O.
A management application enables and disables a remote server's 
service using 
the routines \*Ldced_server_enable_if(\|)\*O and \*Ldced_server_disable_if(\|)\*O.
.PP
The \*Ldce_server*\*O routines affect both the RPC runtime and the
local endpoint map by registering (or unregistering) with the runtime
and setting a flag for the interface in the the endpoint map as enabled (or
disabled).
The \*Ldced_server_enable_if(\|)\*O and \*Ldced_server_disable_if(\|)\*O
routines affect only the remote endpoint map by setting the flag.
.PP
Prior to calling \*Ldced_server_enable_if(\|)\*O, the application must
have established a valid \*Ldced\*O binding handle to the \*Lsrvrexec\*O
service by calling either \*Ldced_binding_create(\|)\*O or 
\*Ldced_binding_from_rpc_binding(\|)\*O.
...\".nL
...\".ne 1.5i
...\".SH "EXAMPLES"
...\".PP
...\"<<To be described.  Orderly startup? 
...\"(Assumes the server disabled its own IF's first)>>
...\".oS
...\"#include <INTERFACE.h>
...\" .
...\" .
...\" .
...\"dced_binding_create("srvrexec@somehost",...);
...\"dced_server_enable_if(...);
...\"dced_server_enable_if(...);
...\" .
...\" .
...\" .
...\"dced_binding_free(...);
...\".oE
...\".PP
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lerror_status_ok\*O"
.LI "\*Ldb_s_bad_index_type\*O"
.LI "\*Ldb_s_iter_not_allowed\*O"
.LI "\*Ldb_s_readonly\*O"
.LI "\*Ldb_s_store_failed\*O"
.LI "\*Ldced_s_bad_binding\*O"
.LI "\*Ldced_s_not_found\*O"
.LI "\*Lsec_acl_invalid_permission\*O"
.LE
.nL
.ne 1.5i
.SH "Related Information"
\*Ldcecp\*O Objects:
\*Lserver(8dce)\*O.
.PP
.ad l
Functions:
\*Ldce_server_disable_if(3dce)\*O,
\*Ldce_server_enable_if(3dce)\*O, 
\*Ldce_server_register(3dce)\*O,
\*Ldced_binding_create(3dce)\*O,
\*Ldced_binding_from_rpc_binding(3dce)\*O,
\*Ldced_server_disable_if(3dce)\*O.
.ad b
.PP
Books:
\*(Dg.
