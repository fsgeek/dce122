...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dce_db_open.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  16:59:43  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:56:26  wardr]
...\"
...\" Revision 1.1.2.7  1995/05/31  17:05:21  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:46:53  buckler]
...\" 
...\" Revision 1.1.2.6  1994/06/13  17:01:54  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:19  devobj]
...\" 
...\" Revision 1.1.2.5  1994/05/13  17:50:16  neilson
...\" 	Engineering change.
...\" 	[1994/05/13  17:49:45  neilson]
...\" 
...\" Revision 1.1.2.4  1994/05/12  15:58:59  neilson
...\" 	Fix typo.
...\" 	[1994/05/12  15:58:04  neilson]
...\" 
...\" Revision 1.1.2.3  1994/05/10  04:00:50  neilson
...\" 	Engineering changes and minor corrections.
...\" 	[1994/05/10  03:59:18  neilson]
...\" 
...\" Revision 1.1.2.2  1994/05/06  13:32:46  neilson
...\" 	Incorporate first review comments
...\" 	[1994/05/06  13:31:22  neilson]
...\" 
...\" Revision 1.1.2.1  1994/02/22  22:18:16  neilson
...\" 	Initial material.
...\" 	[1994/02/22  20:00:35  neilson]
...\" 
...\" $EndLog$
.TH dce_db_open 3dce
.SH "Name"
\*Ldce_db_open\*O - Opens an existing backing store or creates a new one
.SH "Synopsis"
.sS
\*L#include <dce/dce.h>
.nL
\*L#include <dce/dbif.h>
.sp .4v
\*Lvoid dce_db_open(
.nL
    \*Lconst char *\*Vname\*L,
.nL
    \*Lconst char *\*Vbackend_type\*L,
.nL
    \*Lunsigned32 \*Vflags\*L,
.nL
    \*Ldce_db_convert_func_t \*Vconvert\*L,
.nL
    \*Ldce_db_handle_t *\*Vhandle\*L,
.nL
    \*Lerror_status_t *\*Vstatus\*L);
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vname\*O"
The filename of the backing store to be opened or created.
.LI "\*Vbackend_type\*O"
Either of the strings, \*Lbsd4.4-hash\*O or \*Lbsd4.4-btree\*O, or a
null pointer, which defaults to hash.
This parameter specifies the backing store backend type for licensees
adding multiple backends.
.LI "\*Vflags\*O"
The manner of opening, as specified by any of the following bits:
.VL
.LI "\*Ldb_c_index_by_name\*O"
The backing store is to be indexed by name.  Either this or
\*Ldb_c_index_by_uuid\*O, but not both, must be selected.
.LI "\*Ldb_c_index_by_uuid\*O"
The backing store is to be indexed by UUID.  Either this or
\*Ldb_c_index_by_name\*O, but not both, must be selected.
.LI "\*Ldb_c_std_header\*O"
The first field of each item (which is defined as a union in
\*Ldce_db_header_t\*O) is the standard backing store header,
with the case \*Ldce_db_header_std\*O
selected.  The selection for header cannot have both
\*Ldb_c_std_header\*O and \*Ldb_c_acl_uuid_header\*O.  If neither header
flag is specified, no header is used.
.LI "\*Ldb_c_acl_uuid_header\*O"
The first field of each item (the union) is 
an ACL UUID, with the case \*Ldce_db_header_acl_uuid\*O
selected.  The selection for header cannot have both
\*Ldb_c_std_header\*O and \*Ldb_c_acl_uuid_header\*O.  If neither header
flag is specified, no header is used.
.LI "\*Ldb_c_readonly\*O"
An existing backing store is to be opened in read-only mode.  Read/write is the default.
.LI "\*Ldb_c_create\*O"
Creates an empty backing store if one of the given name does not already
exist.  It is an error to try to create an existing backing store.
.LE
.LI "\*Vconvert\*O"
The function, generated by the IDL compiler, that is called to
perform serialization.
.LE
.SS "Output"
.VL
.LI "\*Vhandle\*O"
A pointer to a handle that identifies the backing store being used.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion, the
routine returns \*Lerror_status_ok\*O.  Otherwise, it returns an error.
.LE
.SH "Description"
The \*Ldce_db_open(\|)\*O routine opens the specified backing store.
The \*Vflags\*O parameter must specify whether
the backing store is to be indexed by name or by UUID.  If all of a server's
objects have entries in the CDS namespace, then it is probably best to
use a UUID index.  If the server provides a junction or another
name-based lookup operation, then it is probably best to use a name index.
.PP
The IDL code in \*L/usr/include/dce/database.idl\*O defines the backing
store header (selected by the \*Vflags\*O parameter) that is placed on
each item, the possible header types, and the form of the function for
serializing headers.
.SH "Notes"
Backing stores are also called databases.  For instance, the
associated IDL header is \*Ldce/database.idl\*O, and the name of the
backing store routines begin with \*Ldce_db_\*O.  Nevertheless,
backing stores are not databases in the conventional sense,
and have no support for SQL or for any other query system.
...\" .SH "FILES"
...\" .VL
...\" .LI
...\" .LE
.nL
.ne 20
.SH "Examples"
Standardized use of the backing store library is encouraged.
The following is the skeleton IDL interface for a server's backing store:
.PP
.oS
interface XXX_db
{
    import "dce/database.idl";

.ne 7
    typedef XXX_data_s_t {
        dce_db_header_t header;
        /* server-specific data */
    } XXX_data_t;

.ne 7
    void XXX_data_convert(
        [in] handle_t h,
        [in, out] XXX_data_t *data,
        [out] error_status_t *st
    );
}
.oE
.PP
This interface should be compiled with the following ACF:
.oS
interface XXX_db
{
    [encode, decode] XXX_data_convert();
}
.oE
.PP
A typical call to \*Ldce_db_open(\|)\*O, using the preceding IDL example, follows:
.oS
dce_db_open("XXX_db", NULL,
    db_c_std_header | db_c_index_by_uuid,
    (dce_db_convert_func_t)XXX_data_convert,
    &handle, &st);
.oE
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Ldb_s_bad_index_type\*O"
The index type in \*Vflags\*O is specified neither by name nor by
UUID, or else it is specified as both.
.LI "\*Ldb_s_bad_header_type\*O"
The header type in \*Vflags\*O is specified as both standard header
and ACL header.
.LI "\*Ldb_s_index_type_mismatch\*O"
An existing backing store was opened with the wrong index type.
.LI "\*Ldb_s_open_already_exists\*O"
The backing store file specified for creation already exists.
.LI "\*Ldb_s_no_name_specified\*O"
No filename is specified.
.LI "\*Ldb_s_open_failed_eacces\*O"
The server does not have permission to open the backing store file.
.LI "\*Ldb_s_open_failed_enoent\*O"
The specified directory or backing store file was not found.
.LI "\*Ldb_s_open_failed\*O"
The underlying database-open procedure failed.  The global variable
\*Lerrno\*O may provide more specific information.
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.SH "Related Information"
.ad l
Functions:
\*Ldce_db_close(3dce)\*O.
.ad b
