...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: dce_attr_sch_scan.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  16:59:09  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:55:55  wardr]
...\"
...\" Revision 1.1.2.4  1995/05/31  17:04:54  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:40:38  buckler]
...\" 
...\" Revision 1.1.2.3  1995/05/18  17:24:31  rcb
...\" 	no change
...\" 	[1995/05/18  17:24:27  rcb]
...\" 
...\" Revision 1.1.2.2  1994/10/06  20:40:58  rrizzo
...\" 	expand copyright
...\" 	[1994/10/06  20:07:50  rrizzo]
...\" 
...\" Revision 1.1.2.1  1994/08/30  18:31:44  millette
...\" 	(enh,11628,R1.1)
...\" 	Created for generic attributes
...\" 	[1994/08/30  18:31:18  millette]
...\" 
...\" $EndLog$
.TH dce_attr_sch_scan 3dce
...\" .iX "\*Ldce_attr_sch_scan(\|)\*O"
...\" .iX "calls" "\*Ldce_attr_sch_scan(\|)\*O"
.SH "Name"
\*Ldce_attr_sch_scan\*O - Reads a specified number of schema entries 
.SH "Synopsis"
.sS
\*L#include <dce/dce_attr_base.h>\*O
.sp .4v
\*Lvoid dce_attr_sch_scan(\*O
.nL
	\*Ldce_attr_sch_handle_t \*Vh\*L,\*O
.nL
	\*Ldce_attr_cursor_t *\*Vcursor\*L,\*O
.nL
	\*Lunsigned32 \*Vnum_to_read\*L,\*O
.nL
	\*Lunsigned32 *\*Vnum_read\*L,\*O
.nL
	\*Ldce_attr_schema_entry_t \*Vschema_entries\*O[\|]\*L,\*O
.nL
	\*Lerror_status_t *\*Vstatus\*L);\*O
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vh\*O"
An opaque handle bound to a schema object.  Use
\*Ldce_attr_sch_bind(\|)\*O to acquire the handle.  
.LI "\*Vnum_to_read\*O"
.nL
An unsigned 32-bit integer specifying the size of the
\*Vschema_entries\*O[\|] array and the maximum number of 
entries to be returned.
.LE
.SS "Input/Output"
.VL
.LI "\*Vcursor\*O"
A pointer to a \*Ldce_attr_cursor_t\*O.
As input \*Vcursor\*O must be allocated and can be initialized.  
If \*Vcursor\*O is not initialized, \*Ldce_attr_sch_scan\*O 
will initialize it.  As output, \*Vcursor\*O 
is positioned at the first schema entry after the 
returned entries.
.LE
.SS "Output"
.VL
.LI "\*Vnum_read\*O"
A pointer to an unsigned 32-bit integer specifying the number 
of entries returned in \*Vschema_entries\*O[\|].
.LI "\*Vschema_entries\*O[\|]"
A \*Ldce_attr_schema_entry_t\*O that contains an array of 
the returned schema entries. 
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
the routine returns \*Lerror_status_ok\*O.
Otherwise, it returns an error.
.LE
.SH "Description"
.PP
The \*Ldce_attr_sch_scan(\|)\*O routine reads 
schema entries.  The read begins at the entry at which the 
input \*Vcursor\*O is positioned and ends after the number of 
entries specified in \*Vnum_to_read\*O.  
.P
The input \*Vcursor\*O must have been allocated by either 
the \*Ldce_attr_sch_cursor_init(\|)\*O or 
the \*Ldce_attr_sch_cursor_alloc(\|)\*O routine.  
If the input \*Vcursor\*O is not initialized, \*Ldce_attr_sch_scan(\|)\*O 
initializes it; if cursor is initialized, \*Ldce_attr_sch_scan(\|)\*O 
simply advances it.
.P
To read all entries in a schema, make successive \*Ldce_attr_sch_scan(\|)\*O calls.  
When all entries have been read, the routine returns the message \*Lno_more_entries\*O. 
.P
This routine is useful as 
a browser.
.SS "Permissions Required"
.PP
The \*Ldce_attr_sch_scan(\|)\*O routine requires requires appropriate 
permissions on the schema object.  These permissions are managed by the 
target server.
...\" .ne 1.5i
...\" .SH "NOTES"
...\" .PP
...\" .br
...\" .ne 1.5i
.SH "Files"
.VL
.LI "\*L/usr/include/dce/dce_attr_base.idl\*O"
The \*Lidl\*O file from which \*Ldce/dce_attr_base.h\*O was derived.
.LE
...\" .SH "EXAMPLES"
...\" .PP
...\" EXAMPLES????????
...\".PP
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Ldce_attr_s_bad_binding\*O"
.LI "\*Ldce_attr_s_bad_cursor\*O"
.LI "\*Lerror_status_ok\*O"
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Ldce_attr_intro(3dce)\*O,
\*Ldce_attr_sch_cursor_alloc(3dce)\*O, 
\*Ldce_attr_sch_cursor_init(3dce)\*O, 
\*Ldce_attr_sch_cursor_release(3dce)\*O.
.ad b
