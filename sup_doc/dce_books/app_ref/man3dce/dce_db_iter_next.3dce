...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dce_db_iter_next.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  16:59:37  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:56:21  wardr]
...\"
...\" Revision 1.1.2.6  1995/05/31  17:05:17  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:45:54  buckler]
...\" 
...\" Revision 1.1.2.5  1994/06/13  17:01:49  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:14  devobj]
...\" 
...\" Revision 1.1.2.4  1994/05/13  17:50:08  neilson
...\" 	Nothing done.  This is in lieu of 'bco -undo' that doesn't seem to work.
...\" 	[1994/05/13  17:02:24  neilson]
...\" 
...\" Revision 1.1.2.3  1994/05/10  04:00:47  neilson
...\" 	Engineering changes and minor corrections.
...\" 	[1994/05/10  03:59:16  neilson]
...\" 
...\" Revision 1.1.2.2  1994/05/06  13:32:42  neilson
...\" 	Incorporate first review comments
...\" 	[1994/05/06  13:31:06  neilson]
...\" 
...\" Revision 1.1.2.1  1994/02/22  22:18:03  neilson
...\" 	Initial material.
...\" 	[1994/02/22  20:00:31  neilson]
...\" 
...\" $EndLog$
.TH dce_db_iter_next 3dce
.SH "Name"
\*Ldce_db_iter_next\*O - During iteration, returns the next key from a backing store
.SH "Synopsis"
.sS
\*L#include <dce/dce.h>
.nL
\*L#include <dce/dbif.h>
.sp .4v
\*Lvoid dce_db_iter_next(
.nL
    \*Ldce_db_handle_t \*Vhandle\*L,
.nL
    \*Lvoid **\*Vkey\*L,
.nL
    \*Lerror_status_t *\*Vstatus\*L);
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vhandle\*O"
A handle, returned from \*Ldce_db_open(\|)\*O, that identifies the
backing store being used.
.LE
.SS "Output"
.VL
.LI "\*Vkey\*O"
A pointer to the string or UUID that is the key to the item in the
backing store.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion, the
routine returns \*Lerror_status_ok\*O.  Otherwise, it returns an error.
.LE
.SH "Description"
The \*Ldce_db_iter_next(\|)\*O routine retrieves the next key
from the backing store that is identified by the \*Vhandle\*O parameter.  An
iterator established by the \*Ldce_db_iter_start(\|)\*O routine
maintains the identity of the current key.  Use one of the
\*Ldce_db_fetch(\|)\*O routines to retrieve the actual data.
.PP
The iteration functions scan sequentially through a backing store, in
no particular order.  The \*Ldce_db_iter_start(\|)\*O routine
initialized the process, a \*Ldce_db_iter_next(\|)\*O routine
retrieves successive keys, for which the data can be retrieved with
\*Ldce_db_fetch(\|)\*O, and the \*Ldce_db_iter_done(\|)\*O routine
finishes the process.  The iteration can also use the
\*Ldce_db_iter_next_by_name(\|)\*O and
\*Ldce_db_iter_next_by_uuid(\|)\*O routines; the fetching can use the 
\*Ldce_db_fetch_by_name(\|)\*O and \*Ldce_db_fetch_by_uuid(\|)\*O routines.
.PP
.ne 4
The iteration routine returns a pointer to a private space associated
with the handle.  Each call to the iteration routine reuses the space,
instead of using allocated space.
...\" .SH "NOTES"
...\" .PP
...\" .SH "FILES"
...\" .VL
...\" .LI
...\" .LE
...\" .SH "EXAMPLES"
...\" .PP
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Ldb_s_no_more\*O"
All the keys in the backing store have been accessed; there are no
more iterations remaining to be done.
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.SH "Related Information"
.ad l
Functions:
\*Ldce_db_fetch(3dce)\*O,
\*Ldce_db_fetch_by_name(3dce)\*O,
\*Ldce_db_fetch_by_uuid(3dce)\*O,
\*Ldce_db_iter_done(3dce)\*O,
\*Ldce_db_iter_next_by_name(3dce)\*O,
\*Ldce_db_iter_next_by_uuid(3dce)\*O,
\*Ldce_db_iter_start(3dce)\*O.
.ad b
