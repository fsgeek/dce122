...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dce_server_unregister.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  17:00:24  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:56:54  wardr]
...\"
...\" Revision 1.1.2.5  1995/05/31  17:05:45  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:52:26  buckler]
...\" 
...\" Revision 1.1.2.4  1994/10/19  19:49:50  jshirley
...\" 	Update for final.
...\" 	[1994/10/19  19:49:05  jshirley]
...\" 
...\" Revision 1.1.2.3  1994/06/13  17:02:06  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:40  devobj]
...\" 
...\" Revision 1.1.2.2  1994/06/01  19:13:15  jshirley
...\" 	{def,CR9830,R1.1}
...\" 	Incorporated first draft comments.
...\" 	[1994/06/01  19:12:39  jshirley]
...\" 
...\" Revision 1.1.2.1  1994/05/03  20:38:04  jshirley
...\" 	Created for book
...\" 	[1994/05/03  20:37:20  jshirley]
...\" 
...\" $EndLog$
.TH dce_server_unregister 3dce 
...\" .iX "\*Ldce_server_unregister(\|)\*O"
.SH "Name"
\*Ldce_server_unregister\*O - 
Unregisters a DCE server
.SH "Synopsis"
.sS
\*L#include <dce/dced.h>
.sp .4v
\*Lvoid dce_server_unregister(
.nL
\*Ldce_server_handle_t *\*Vserver_handle\*L,
.nL
\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vserver_handle\*O"
An opaque handle returned by \*Ldce_server_register(\|)\*O.
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully.
The only status code is \*Lerror_status_ok\*O.
...\".PP
...\".iS
...\".iE
.LE
.nL
.ne 1.5i
.SH "Description"
The \*Ldce_server_unregister(\|)\*O routine 
unregisters a DCE server by unregistering a server's services (interfaces) from
the RPC runtime.
When a server has stopped listening for remote procedure calls, 
it should call this routine.
.PP
The flags set with the corresponding \*Ldce_server_register(\|)\*O
routine are part of the server handle's information used to determine
what action to take or not take.
These actions include
removing the server's endpoints from the \*Ldced\*O's 
endpoint mapper service
and unexporting binding information from the namespace.
.PP
Use the \*Ldce_server_disable_service(\|)\*O routine to disable specific
application services rather than unregistering the whole server.
...\".nL
...\".ne 1.5i
...\".SH "EXAMPLES"
...\".PP
...\"<<To be described>>
...\".oS
...\" main()  /* very simple, server initialization code */
...\"{
...\"   dce_server_sec_begin(...);
...\"   dce_server_register(...);
...\"   rpc_ns_binding_export(...);
...\"   rpc_server_listen(...);
...\"   rpc_ns_binding_unexport(...);
...\"   dce_server_unregister(...);
...\"   dce_server_sec_done(...);
...\"}
...\".oE
...\".PP
.SH "Errors"
.PP
A representative list of errors that might be returned is not shown
here.  Refer to the \*(Tg for complete descriptions of all error
messages.
.ne 1.5i
.SH "Related Information"
.ad l
Functions: 
\*Ldce_server_disable_service(3dce)\*O,
\*Ldce_server_register(3dce)\*O, 
\*Lrpc_server_listen(3rpc)\*O.
.ad b
.PP
Books:
\*(Dg.
