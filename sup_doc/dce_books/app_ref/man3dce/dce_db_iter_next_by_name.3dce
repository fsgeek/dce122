...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dce_db_iter_next_by_name.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  16:59:38  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:56:22  wardr]
...\"
...\" Revision 1.1.2.6  1995/05/31  17:05:18  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:46:05  buckler]
...\" 
...\" Revision 1.1.2.5  1994/06/13  17:01:50  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:15  devobj]
...\" 
...\" Revision 1.1.2.4  1994/05/13  17:50:10  neilson
...\" 	Nothing done.  This is in lieu of 'bco -undo' that doesn't seem to work.
...\" 	[1994/05/13  17:02:46  neilson]
...\" 
...\" Revision 1.1.2.3  1994/05/10  04:00:48  neilson
...\" 	Engineering changes and minor corrections.
...\" 	[1994/05/10  03:59:17  neilson]
...\" 
...\" Revision 1.1.2.2  1994/05/06  13:32:42  neilson
...\" 	Incorporate first review comments
...\" 	[1994/05/06  13:31:09  neilson]
...\" 
...\" Revision 1.1.2.1  1994/02/22  22:18:06  neilson
...\" 	Initial material.
...\" 	[1994/02/22  20:00:32  neilson]
...\" 
...\" $EndLog$
.TH dce_db_iter_next_by_name 3dce
.SH "Name"
\*Ldce_db_iter_next_by_name\*O - During iteration, returns the next key from a backing store indexed by string
.SH "Synopsis"
.sS
\*L#include <dce/dce.h>
.nL
\*L#include <dce/dbif.h>
.sp .4v
\*Lvoid dce_db_iter_next_by_name(
.nL
    \*Ldce_db_handle_t \*Vhandle\*L,
.nL
    \*Lchar **\*Vkey\*L,
.nL
    \*Lerror_status_t *\*Vstatus\*L);
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vhandle\*O"
A handle, returned from \*Ldce_db_open(\|)\*O, that identifies the
backing store being used.
.LE
.SS "Output"
.VL
.LI "\*Vkey\*O"
The string that is the key to the item in the backing store.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion, the
routine returns \*Lerror_status_ok\*O.  Otherwise, it returns an error.
.LE
.SH "Description"
The \*Ldce_db_iter_next_by_name(\|)\*O routine retrieves the next
key from the backing store that is
identified by the \*Vhandle\*O parameter.  An iterator established by
the \*Ldce_db_iter_start(\|)\*O routine maintains the identity of the
current key.  Use the \*Ldce_db_fetch_by_name(\|)\*O routine to retrieve
the actual data.
.PP
This iteration routine is the same as \*Ldce_db_iter_next(\|)\*O,
except that it only works with backing stores indexed by name, and returns
an error if the backing store index is the wrong type.
.PP
The iteration routine returns a pointer to a private space associated
with the handle.  Each call to the iteration routine reuses the space,
instead of using allocated space.
...\" .SH "NOTES"
...\" .PP
...\" .SH "FILES"
...\" .VL
...\" .LI
...\" .LE
...\" .SH "EXAMPLES"
...\" .PP
.nL
.ne 6
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Ldb_s_no_more\*O"
All the keys in the backing store have been accessed; there are no
more iterations remaining to be done.
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.SH "Related Information"
.ad l
Functions:
\*Ldce_db_fetch_by_uuid(3dce)\*O,
\*Ldce_db_iter_done(3dce)\*O,
\*Ldce_db_iter_next(3dce)\*O,
\*Ldce_db_iter_next_by_uuid(3dce)\*O,
\*Ldce_db_iter_start(3dce)\*O.
.ad b
