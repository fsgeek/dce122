...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dced_entry_get_next.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  17:00:51  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:57:16  wardr]
...\"
...\" Revision 1.1.2.7  1995/05/31  17:06:07  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:56:47  buckler]
...\" 
...\" Revision 1.1.2.6  1994/10/20  03:06:06  jshirley
...\" 	Final edits.
...\" 	[1994/10/20  03:03:41  jshirley]
...\" 
...\" Revision 1.1.2.5  1994/10/17  16:30:52  jshirley
...\" 	Did update for final review.
...\" 	[1994/10/17  16:30:02  jshirley]
...\" 
...\" Revision 1.1.2.4  1994/10/14  17:20:10  hileman
...\" 	Added status codes.
...\" 	[1994/10/14  17:19:53  hileman]
...\" 
...\" Revision 1.1.2.3  1994/06/13  17:02:53  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:57  devobj]
...\" 
...\" Revision 1.1.2.2  1994/05/24  18:16:03  jshirley
...\" 	{def, CR9830, R1.1}
...\" 	Incorporated first review comments.
...\" 	[1994/05/24  18:14:20  jshirley]
...\" 
...\" Revision 1.1.2.1  1994/05/04  01:25:11  jshirley
...\" 	Created file.
...\" 	[1994/05/04  01:24:33  jshirley]
...\" 
...\" $EndLog$
.TH dced_entry_get_next 3dce 
...\".iX "\*Ldced_entry_get_next(\|)\*O"
.SH "Name"
\*Ldced_entry_get_next\*O - 
Obtains one data entry from a list of entries of a \*Ldced\*O service
.SH "Synopsis"
.sS
\*L#include <dce/dced.h>
.sp .4v
\*Lvoid dced_entry_get_next(
.nL
	\*Ldced_cursor_t \*Vcursor\*L,
.nL
	\*Ldced_entry_t **\*Ventry\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input/Output"
.VL
.LI "\*Vcursor\*O"
Specifies the entry list's cursor that points to an entry, 
and returns the cursor advanced to the next entry in the list.
.LE
.SS "Output"
.VL
.LI "\*Ventry\*O"
Returns a pointer to an entry.
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
The \*Ldced_entry_get_next(\|)\*O routine obtains a pointer to a data entry, 
and advances the cursor to the next entry in the list.  
This routine is commonly used in a loop to traverse a host service's
entry list.
The data is obtained in an undetermined order.
Prior to using this routine, the application must call 
\*Ldced_initialize_cursor(\|)\*O to obtain a list of entries and to 
establish the beginning of the cursor.
When the application is finished traversing the entry list,
it should call \*Ldced_release_cursor(\|)\*O to release resources.
.PP
A data entry does not contain the actual data, but it contains 
the name, identity, description,  and storage location of the data.
In the cases of \*Lhostdata\*O and \*Lkeytab\*O services, 
the data for each entry is stored in a file.
In the cases of  \*Lsrvrconf\*O and \*Lsrvrexec\*O services, 
data is stored in memory.
The \*Ldced\*O uses this two-level scheme so that it can manipulate different
kinds of data in the same way.
.PP
Prior to using the \*Ldced_entry_get_next(\|)\*O routine, 
the application must have established a valid \*Ldced\*O binding handle by calling 
either the \*Ldced_binding_create(\|)\*O or 
\*Ldced_binding_from_rpc_binding(\|)\*O routine.
.nL
.ne 1.5i
.SH "Examples"
In the following example, a \*Ldced\*O binding is obtained from a service
type and an existing rpc binding handle.  After establishing an entry
list cursor, the \*Ldced_entry_get_next(\|)\*O routine obtains an
entry, one at a time, and the name and description of each entry is
displayed until the entry list is exausted.
.ps 9
.vs 13
.oS
dced_binding_from_rpc_binding(service_type, rpc_bh, &dced_bh, &status);
dced_initialize_cursor(dced_bh, &cursor, &status);
for( ; ; ) { /* forever loop */
   dced_entry_get_next(cursor, &entry, &status); 
   if(status != error_status_ok) break;
   display(entry->name, entry->description); /* application specific */
}
dced_release_cursor(&cursor, &status);
dced_binding_free( dced_bh, &status);
.oE
.ps 12
.vs 14
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lerror_status_ok\*O"
.LI "\*Ldced_s_no_more_entries\*O"
.LE
.nL
.ne 1.5i
.SH "Related Information"
.ad l
Functions: 
\*Ldced_binding_create(3dce)\*O, 
\*Ldced_binding_from_rpc_binding(3dce)\*O,
\*Ldced_initialize_cursor(3dce)\*O, 
\*Ldced_release_cursor(3dce)\*O.
.ad b
.PP
Books:
\*(Dg.
