...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dce_db_fetch_by_name.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  16:59:29  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:56:15  wardr]
...\"
...\" Revision 1.1.2.7  1995/05/31  17:05:11  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:44:30  buckler]
...\" 
...\" Revision 1.1.2.6  1994/08/18  00:34:02  neilson
...\" 	CR 10977 & 10886 Note about allocation.
...\" 	[1994/08/18  00:33:38  neilson]
...\" 
...\" 	CR 10977 - Note about freeing memory.
...\" 	[1994/08/18  00:25:09  neilson]
...\" 
...\" Revision 1.1.2.5  1994/06/13  17:01:46  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:11  devobj]
...\" 
...\" Revision 1.1.2.4  1994/05/17  14:51:39  neilson
...\" 	Added example.
...\" 	[1994/05/17  14:51:10  neilson]
...\" 
...\" Revision 1.1.2.3  1994/05/10  04:00:42  neilson
...\" 	Engineering changes and minor corrections.
...\" 	[1994/05/10  03:59:10  neilson]
...\" 
...\" Revision 1.1.2.2  1994/05/06  13:32:38  neilson
...\" 	Incorporate first review comments
...\" 	[1994/05/06  13:30:53  neilson]
...\" 
...\" Revision 1.1.2.1  1994/02/22  22:17:52  neilson
...\" 	Initial material.
...\" 	[1994/02/22  20:00:27  neilson]
...\" 
...\" $EndLog$
.TH dce_db_fetch_by_name 3dce
.SH "Name"
\*Ldce_db_fetch_by_name\*O - Retrieves data from a string-indexed backing store
.SH "Synopsis"
.sS
\*L#include <dce/dce.h>
.nL
\*L#include <dce/dbif.h>
.sp .4v
\*Lvoid dce_db_fetch_by_name(
.nL
    \*Ldce_db_handle_t \*Vhandle\*L,
.nL
    \*Lchar *\*Vkey\*L,
.nL
    \*Lvoid *\*Vdata\*L,
.nL
    \*Lerror_status_t *\*Vstatus\*L);
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vhandle\*O"
A handle, returned from \*Ldce_db_open(\|)\*O, that identifies the
backing store being used.
.LI "\*Vkey\*O"
A null-terminated string that is the key to the item in the backing store.
.LE
.SS "Output"
.VL
.LI "\*Vdata\*O"
A pointer to the returned data.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion, the
routine returns \*Lerror_status_ok\*O.  Otherwise, it returns an error.
.LE
.SH "Description"
The \*Ldce_db_fetch_by_name(\|)\*O routine retrieves data from the
string-indexed backing store that is identified by the \*Vhandle\*O parameter,
which was obtained from \*Ldce_db_open(\|)\*O.  It is a specialized
retrieval routine for backing stores that are indexed by string, as selected by
the \*Ldb_c_index_by_name\*O bit in the \*Vflags\*O parameter to
\*Ldce_db_open(\|)\*O when the backing store was created.
.PP
The \*Vdata\*O parameter is shown as a pointer to an arbitrary
data type.  In actual use it will be the address of the
backing-store-specific data type.
.nL
.ne 6
.SH "Notes"
After calling \*Ldce_db_fetch_by_name(\|)\*O, it may be necessary to free
some memory, if the call was made outside of an RPC, on the server
side.  This is done by calling \*Lrpc_sm_client_free(\|)\*O.  (Inside
an RPC the memory is allocated through \*Lrpc_sm_allocate(\|)\*O, and
is automatically freed.)
.PP
Programs that call \*Ldce_db_fetch_by_name(\|)\*O outside of a server
operation (for instance, if a server does some backing store
initialization, or in a standalone program) must call
\*Lrpc_sm_enable_allocate(\|)\*O first.  Indeed, every thread that 
calls \*Ldce_db_fetch_by_name(\|)\*O must do \*Lrpc_sm_allocate(\|)\*O, but in
the server side of an RPC, this is already done.
...\" .SH "FILES"
...\" .VL
...\" .LI
...\" .LE
.SH "Examples"
.PP
This example shows the use of the user-defined data type as the
\*Vdata\*O parameter.
.oS
    extern dce_db_handle_t  db_h;
    uuid_t                  key_uuid;
    my_data_type_t          my_data;
    error_status_t          status;
    /* set key_uuid = xxx; */
    dce_db_fetch_by_name(db_h, &key_uuid, &my_data, &status);
.oE
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Ldb_s_key_not_found\*O"
The specified key was not found in the backing store.  (This circumstance
is not necessarily an error.)
.LI "\*Ldb_s_bad_index_type\*O"
The backing store is not indexed by name.
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.SH "Related Information"
.ad l
Functions:
\*Ldce_db_fetch(3dce)\*O,
\*Ldce_db_fetch_by_uuid(3dce)\*O,
\*Ldce_db_free(3dce)\*O,
\*Ldce_db_open(3dce)\*O.
.ad b
