...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dce_db_lock.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  16:59:42  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:56:25  wardr]
...\"
...\" Revision 1.1.2.6  1995/05/31  17:05:20  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:46:42  buckler]
...\" 
...\" Revision 1.1.2.5  1994/10/04  13:32:45  neilson
...\" 	CR 12232 - say that locks are advisory.
...\" 	[1994/10/04  13:31:26  neilson]
...\" 
...\" Revision 1.1.2.4  1994/06/13  17:01:53  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:18  devobj]
...\" 
...\" Revision 1.1.2.3  1994/05/13  17:50:15  neilson
...\" 	Engineering change.
...\" 	[1994/05/13  17:49:44  neilson]
...\" 
...\" Revision 1.1.2.2  1994/05/06  13:32:45  neilson
...\" 	Incorporate first review comments
...\" 	[1994/05/06  13:31:19  neilson]
...\" 
...\" Revision 1.1.2.1  1994/02/22  22:18:13  neilson
...\" 	Initial material.
...\" 	[1994/02/22  20:00:34  neilson]
...\" 
...\" $EndLog$
.TH dce_db_lock 3dce
.SH "Name"
\*Ldce_db_lock\*O - Applies an advisory lock on a backing store
.SH "Synopsis"
\*L#include <dce/dce.h>
.nL
\*L#include <dce/dbif.h>
.sp .4v
\*Lvoid dce_db_lock(
.nL
    \*Ldce_db_handle_t \*Vhandle\*L,
.nL
    \*Lerror_status_t *\*Vstatus\*L);
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vhandle\*O"
A handle, returned from \*Ldce_db_open(\|)\*O, that identifies the
backing store being used.
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion, the
routine returns \*Lerror_status_ok\*O.  Otherwise, it returns an error.
.LE
.SH "Description"
The \*Ldce_db_lock(\|)\*O routine acquires the lock associated with the handle.
.PP
There is an advisory lock associated with each handle.  The routines for storing
and deleting backing stores apply the lock before updating a
backing store.  This routine provides a means to apply the lock for other
purposes, such as iteration.
.PP
Advisory locks allow cooperating threads to perform consistent
operations on backing stores, but do not guarantee consistency; that is,
threads may still access backing stores without using advisory locks,
possibly resulting in inconsistencies.
...\" .SH "NOTES"
...\" .PP
...\" .SH "FILES"
...\" .VL
...\" .LI
...\" .LE
...\" .SH "EXAMPLES"
...\" .PP
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Ldb_s_already_locked\*O"
An attempt was made to lock a backing store, but it was already
locked.
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.SH "Related Information"
.ad l
Functions:
\*Ldce_db_delete(3dce)\*O,
\*Ldce_db_delete_by_name(3dce)\*O,
\*Ldce_db_delete_by_uuid(3dce)\*O,
\*Ldce_db_store(3dce)\*O,
\*Ldce_db_store_by_name(3dce)\*O,
\*Ldce_db_store_by_uuid(3dce)\*O,
\*Ldce_db_unlock(3dce)\*O.
.ad b
