...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dced_entry_remove.3dce,v $
...\" Revision 1.1.4.1  1996/11/18  17:00:52  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/18  16:57:17  wardr]
...\"
...\" Revision 1.1.2.7  1995/05/31  17:06:08  buckler
...\" 	1.1 edits.
...\" 	PRENTICE HALL reformat.
...\" 	[1995/05/30  22:56:58  buckler]
...\" 
...\" Revision 1.1.2.6  1994/10/20  03:06:07  jshirley
...\" 	Final edits.
...\" 	[1994/10/20  03:03:44  jshirley]
...\" 
...\" Revision 1.1.2.5  1994/10/17  16:30:53  jshirley
...\" 	Did update for final review.
...\" 	[1994/10/17  16:30:05  jshirley]
...\" 
...\" Revision 1.1.2.4  1994/10/14  17:23:07  hileman
...\" 	Added status codes.
...\" 	[1994/10/14  17:22:48  hileman]
...\" 
...\" Revision 1.1.2.3  1994/06/13  17:02:54  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:46:58  devobj]
...\" 
...\" Revision 1.1.2.2  1994/05/24  18:16:04  jshirley
...\" 	{def, CR9830, R1.1}
...\" 	Incorporated first review comments.
...\" 	[1994/05/24  18:14:23  jshirley]
...\" 
...\" Revision 1.1.2.1  1994/05/04  01:25:12  jshirley
...\" 	Created file.
...\" 	[1994/05/04  01:24:36  jshirley]
...\" 
...\" $EndLog$
.TH dced_entry_remove 3dce 
...\".iX "\*Ldced_entry_remove(\|)\*O"
.SH "Name"
\*Ldced_entry_remove\*O - 
Removes a \*Lhostdata\*O or \*Lkeytab\*O data entry from a \*Ldced\*O 
service's list of entries
.SH "Synopsis"
.sS
\*L#include <dce/dced.h>
.sp .4v
\*Lvoid dced_entry_remove(
.nL
	\*Ldced_binding_handle_t \*Vdced_bh\*L,
.nL
	\*Luuid_t *\*Ventry_uuid\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vdced_bh\*O"
Specifies the \*Ldced\*O binding handle for a \*Ldced\*O service on a specific host.
.LI "\*Ventry_uuid\*O"
Specifies the UUID of the entry to be removed from the service.
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
.LE
.nL
.ne 1.5i
.SH "Description"
The \*Ldced_entry_remove(\|)\*O routine removes an entry from the
\*Lhostdata\*O or \*Lkeytab\*O service entry list of \*Ldced\*O.  
It does not remove the actual data stored in the file,
but makes it inaccessible from a remote host by way of the \*Ldced\*O's 
user interfaces which include the \*Ldced\*O API and the DCE control program, 
\*Ldcecp\*O.
Each host service that maintains data also maintains a list of data entries.
A data entry contains a name, a UUID, a brief description,
and a storage tag indicating the location of the actual data.
.PP
To delete both the data and entry for the \*Lhostdata\*O, \*Lkeytab\*O, 
or \*Lsrvrconf\*O services, use 
\*Ldced_hostdata_delete(\|)\*O,
\*Ldced_keytab_delete(\|)\*O, or
\*Ldced_server_delete(\|)\*O, respectively.
(The \*Lsrvrexec\*O service is maintained only by \*Ldced\*O
and the \*Lsecval\*O service does not maintain data, so you cannot
remove data for these services.)
.PP
Applications commonly obtain an entry by traversing the entry list using
the \*Ldced_entry_get_next(\|)\*O routine with its associated cursor routines.
.PP
Prior to calling the \*Ldced_entry_remove(\|)\*O routine, the
application must have established a valid \*Ldced\*O binding handle to the
\*Lhostdata\*O or \*Lkeytab\*O service by calling either the
\*Ldced_binding_create(\|)\*O or
\*Ldced_binding_from_rpc_binding(\|)\*O routine.
.PP
...\".nL
...\".ne 1.5i
...\".SH "EXAMPLES"
...\".PP
...\"In the following example, a dced binding is obtained.
...\"After establishing an entry
...\"list cursor, each entry is obtained and the entry names are compared
...\"one at a time with the name desired.  
...\"If a match is found, the entry is removed from the entry list.
...\".oS
...\"dced_binding_create(, dced_c_binding_syntax_default, &dced_bh, &status);
...\"
...\"
...\"dced_initialize_cursor(dced_bh, &cursor, &status);
...\"for( ; ; ) { /* forever loop */
...\"   dced_entry_get_next(cursor, &entry, &status); 
...\"   if(status != error_status_ok) 
...\"      break;
...\"   if( strcmp(entry->name, desired_name) == 0 )   {
...\"      dced_entry_remove(dced_bh, &entry->id, &status);
...\"      break;
...\"   }
...\"}
...\"dced_release_cursor(&cursor, &status);
...\"dced_binding_free( dced_bh, &status);
...\".oE
...\".PP
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lerror_status_ok\*O"
.LI "\*Ldb_s_del_failed\*O"
.LI "\*Ldb_s_key_not_found\*O"
.LI "\*Ldb_s_readonly\*O"
.LI "\*Ldced_s_bad_binding\*O"
.LI "\*Ldced_s_no_support\*O"
.LI "\*Ldced_s_not_found\*O"
.LI "\*Lsec_acl_invalid_permission\*O"
.LE
.nL
.ne 1.5i
.SH "Related Information"
.ad l
Functions: 
\*Ldced_binding_create(3dce)\*O, 
\*Ldced_binding_from_rpc_binding(3dce)\*O,
\*Ldced_hostdata_delete(3dce)\*O, 
\*Ldced_initialize_cursor(3dce)\*O,
\*Ldced_keytab_delete(3dce)\*O,
\*Ldced_server_delete(3dce)\*O. 
.ad b
.PP
Books:
\*(Dg.
