...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: pkc_get_key_trust_info.3sec,v $
...\" Revision 1.1.2.5  1996/12/20  21:59:50  weir
...\" 	Final updates
...\" 	[1996/12/20  21:58:24  weir]
...\"
...\" Revision 1.1.2.4  1996/12/17  20:11:21  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:08:34  damon]
...\" 
...\" Revision 1.1.2.3  1996/11/19  18:56:53  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:49:58  wardr]
...\" 
...\" Revision 1.1.2.2  1996/11/18  19:57:39  weir
...\" 	No change
...\" 	[1996/11/18  19:55:22  weir]
...\" 
...\" Revision 1.1.2.1  1996/10/15  21:10:46  weir
...\" 	Initial submission
...\" 	[1996/10/15  21:09:21  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
.TH pkc_get_key_trust_info 3sec
...\" 
.SH "Name"
\*Lpkc_get_key_trust_info\*O - Returns information about key trust
...\" 
...\" 
.SH "Synopsis"
.sS
\*L#include <pkc_api.h>\*O
.sp .4v
\*Lunsigned32 pkc_get_key_trust_info(\*O
.nL
	\*Lkeyinfo_t  * \*Vkeyinfobase\*L,
.nL
	\*Lunsigned \*Vkey_index\*L,
.nL
	\*Lcertification_flags_t * \*Vflags\*L,
.nL
	\*Luuid_t * \*Vkey_domain\*L,
.nL
	\*Lunsigned long * \*Vkey_usages\*L);
.sE
.nL
...\" 
.ne 1.5i
...\" 
...\" 
...\" 
...\" 
.SH "Parameters"
...\" 
.SS "Input"
...\" 
.VL
.LI "\*Vkeyinfobase\*O"
Key information, returned by \*Lpkc_retrieve_keyinfo(3sec)\*O.
...\" 
.LI "\*Vkey_index\*O"
Index of the key, ranging from 0 to \*Lkeycount\*O - 1.
...\" 
.LE
...\" 
.SS "Output"
...\" 
.VL
.LI "\*Vflags\*O"
Information about the trust that can be placed in the key (see below).
...\" 
.LI "\*Vkey_domain\*O"
Indicates domain of retrieved key. A value of
\*Lsec_pk_domain_unspecified\*O or \*LNULL\*O
means that the policy does not distinguish keys by domain.
...\" 
.LI "\*Vkey_usages\*O"
Indicates usage key is intended for.
...\" 
.LE
...\" 
.nL
.ne 1.5i
...\" 
.SH "Description"
.PP
\*Lpkc_get_key_trust_info(3sec)\*O returns a set of flags describing the
trust that can be placed in the key.
.PP
The desired information is extracted by the routine from the \*Lkeyinfo_t\*O
structure, which must first be obtained by the caller by a call to the
\*Lpkc_retrieve_keyinfo(3sec)\*O routine.
.PP
The returned \*Lcertification_flags_t\*O structure describes the trust that
can be placed in a returned key. It contains the following fields:
...\" 
.ML
.LI
\*Ltrust_type\*O
.PP
A \*Ltrust_type_t\*O value, which will be one of the following:
...\" 
.ML
.LI
\*LUNTRUSTED\*O
.PP
No trust (e.g., unauthenticated).
...\" 
.LI
\*LDIRECT_TRUST\*O
.PP
Direct trust via third party (e.g., authenticated registry).
...\" 
.LI
\*LCERTIFIED_TRUST\*O
.PP
Trust certified by caller's trust base.
...\" 
.LE
...\" 
.LI
\*Lmissing_crls\*O
.PP
A \*Lchar\*O; its value is TRUE (not 0) if one or more CRLs are
missing.
...\" 
.LI
\*Lrevoked\*O
.PP
A \*Lchar\*O whose value is TRUE (not 0) if any certificate has been
revoked (even if it was still valid at the retrieval time).
...\" 
.LE
...\" 
...\" 
...\" 
.PP
If \*Vkey_domain\*O and \*Vkey_usages\*O are
passed as non-\*LNULL\*O pointers, upon successful return these
parameters will describe the domain and permitted usage(s) of the specified
key. Policies that do not distinguish keys according to domain will indicate a
domain of \*Lsec_pk_domain_unspecified\*O; policies that do not
distinguish keys according to usage will indicate all usages are permitted.
.PP
The returned \*Vkey_usages\*O is a bit mask which describes
the usage(s), if any, which the key is restricted to. The value is
formed by AND-ing together one or more of the following constants:
...\" 
...\" 
.VL 2.5i
.LI "\*LPKC_KEY_USAGE_AUTHENTICATION\*O"
The key can be used to authenticate a user
...\" 
.LI "\*LPKC_KEY_USAGE_INTEGRITY\*O"
The key can be used to provide integrity protection
...\" 
.LI "\*LPKC_KEY_USAGE_KEY_ENCIPHERMENT\*O"
The key can be used to encrypt user keys
...\" 
.LI "\*LPKC_KEY_USAGE_DATA_ENCIPHERMENT\*O"
The key can be used to encrypt user data
...\" 
.LI "\*LPKC_KEY_USAGE_KEY_AGREEMENT\*O"
The key can be used for key-exchange
...\" 
.LI "\*LPKC_KEY_USAGE_NONREPUDIATION\*O"
The key can be used for non-repudiation
...\" 
.LI "\*LPKC_CAKEY_USAGE_KEY_CERT_SIGN\*O"
The key can be used to sign key certificates
...\" 
.LI "\*LPKC_CAKEY_USAGE_OFFLINE_CRL_SIGN\*O"
The key can be used to sign CRLs
...\" 
.LI "\*LPKC_CAKEY_USAGE_TRANSACTION_SIGN\*O"
The key can be used to sign transactions
...\" 
.LE
...\" 
.PP
A returned \*Vkey_usages\*O value of \*LNULL\*O
(or a value with all bits set) means that the key is suitable for any
usage.
...\" 
...\" 
...\" 
.ne 1.5i
.SH "Return Values"
.VL 1i
.LI "\*Lpkc_s_success\*O"
Operation successfully completed.
...\" 
.LE
...\" 
...\" 
...\" 
...\" 
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Errors"
.PP
Refer to the \*EOSF DCE Problem Determination Guide\*O for
complete descriptions of all error messages.
...\" 
...\" 
.SH "Related Information"
.PP
.ad l
Functions:
\*Lpkc_intro(3sec)\*O,
\*Lpkc_append_to_trustlist(3sec)\*O,
\*Lpkc_free(3sec)\*O,
\*Lpkc_free_keyinfo(3sec)\*O,
\*Lpkc_free_trustbase(3sec)\*O,
\*Lpkc_free_trustlist(3sec)\*O,
\*Lpkc_get_key_certifier_count(3sec)\*O,
\*Lpkc_get_key_certifier_info(3sec)\*O,
\*Lpkc_get_key_count(3sec)\*O,
\*Lpkc_get_key_data(3sec)\*O,
\*Lpkc_get_registered_policies(3sec)\*O,
\*Lpkc_init_trustbase(3sec)\*O,
\*Lpkc_init_trustlist(3sec)\*O,
\*Lpkc_retrieve_keyinfo(3sec)\*O,
\*Lpkc_retrieve_keylist(3sec)\*O.
.ad b 
...\" 
...\" 
...\" 
...\" /*
...\"  * Miscellaneous key interrogation functions
...\"  *
...\"  */
...\" 
...\" /*
...\"  * pkc_get_key_trust_info
...\"  *
...\"  * Returns a set of flags describing the trust that can be placed in the
...\"  * key.  See the definition of certification_flags_t for more information.
...\"  *
...\"  */
...\" extern unsigned32 pkc_get_key_trust_info (keyinfo_t  *keyinfobase, 
...\"                                           unsigned key_index,
...\"                                           certification_flags_t * flags);
...\" 
...\" 
...\" 
