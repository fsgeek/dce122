...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: sec_rgy_pgo_get_by_eff_unix_num.3sec,v $
...\" Revision 1.1.4.2  1996/11/19  19:00:16  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:53:18  wardr]
...\"
...\" Revision 1.1.4.1  1996/05/13  19:06:47  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:59:14  wardr]
...\" 
...\" Revision 1.1.2.4  1995/06/21  13:22:36  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/21  13:16:17  buckler]
...\" 
...\" Revision 1.1.2.3  1994/10/19  20:17:41  neilson
...\" 	CR 10326 - Automatic fix to name of intro ref page
...\" 	[1994/10/19  20:12:06  neilson]
...\" 
...\" Revision 1.1.2.2  1994/06/13  17:16:02  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:49:21  devobj]
...\" 
...\" Revision 1.1.2.1  1994/04/27  19:17:09  grinham
...\" 	Changes made:  Create documentation for new routine
...\" 	                  sec_rgy_pgo_get_by_eff_unix_num()
...\" 	File name:  src/dce_books/app_ref/man3sec/sec_rgy_pgo_get_by_eff_unix_num.3sec
...\" 	Change Request Number: 10415
...\" 	[1994/04/27  19:15:36  grinham]
...\" 
...\" $EndLog$
.TH sec_rgy_pgo_get_by_eff_unix_num 3sec
...\" .iX "\*Lsec_rgy_pgo_get_by_eff_unix_num(\|)\*O"
...\" .iX "calls" "\*Lsec_rgy_pgo_get_by_eff_unix_num(\|)\*O"
.SH "Name"
\*Lsec_rgy_pgo_get_by_eff_unix_num\*O - Returns the name and data for
a PGO item identified by its effective UNIX number
...\" .SH "LIBRARY"
...\" \*L/usr/lib/dce/libdcesec.a\*O
.SH "Synopsis"
.sS
\*L#include <dce/pgo.h>
.sp .4v
\*Lvoid sec_rgy_pgo_get_by_eff_unix_num(
.nL
	\*Lsec_rgy_handle_t \*Vcontext\*L,
.nL
	\*Lsec_rgy_domain_t \*Vname_domain\*L,
.nL
	\*Lsec_rgy_name_t \*Vscope\*L,
.nL
	\*Lsigned32 \*Vunix_id\*L,
.nL
	\*Lboolean32 \*Vallow_aliases\*L,
.nL
	\*Lsec_rgy_cursor_t *\*Vitem_cursor\*L,
.nL
	\*Lsec_rgy_pgo_item_t *\*Vpgo_item\*L,
.nL
	\*Lsec_rgy_name_t \*Vname\*L,
.nL
	\*Lboolean32 *\*Voverridden\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vcontext\*O"
An opaque handle bound to a registry server.  Use
\*Lsec_\%rgy_\%site_\%open(\|)\*O to acquire a bound handle.
.LI "\*Vname_domain\*O"
This variable identifies the type of the principal, group, or
organization (PGO) item identified by the given
name.  The valid values are as follows:
.VL
.LI "\*Lsec_rgy_domain_person\*O"
The UNIX number identifies a principal.
.LI "\*Lsec_rgy_domain_group\*O"
The UNIX number identifies a group.
.LE
.PP
Note that this function does \*Vnot\*O support the
value \*Lsec_rgy_domain_org\*O.
.nL
.ne 10
.LI "\*Vscope\*O"
A character string (type \*Lsec_rgy_name_t\*O) containing the scope of the
desired search.  The registry database is designed to accommodate a
tree-structured name hierarchy.  The scope of a search is the name of the
branch under which the search takes place.  For example, all names in
a registry might start with \*L/alpha\*O, and be divided further into
\*L/beta\*O or \*L/gamma\*O.  To search only the part of the database under
\*L/beta\*O, the scope of the search would be \*L/alpha/beta\*O, and any
resulting PGO items would have names beginning with this string.  Note
that these naming conventions need not have anything to do with group or
organization PGO item membership lists.
.LI "\*Vunix_id\*O"
The UNIX number of the desired registry PGO item.
.LI "\*Vallow_aliases\*O"
A \*Lboolean32\*O value indicating whether to search for a primary PGO item, or
whether the search can be satisfied with an alias.  If TRUE, the
routine returns the next entry found for the PGO item.  If FALSE, the
routine returns only the primary entry.
.LE
.SS "Input/Output"
.VL
.LI "\*Vitem_cursor\*O"
An opaque pointer indicating a specific PGO item entry in the registry
database.  The \*Lsec_rgy_pgo_get_next(\|)\*O routine returns the PGO
item indicated by \*Vitem_cursor\*O, and advances the cursor to point to
the next item in the database.
When the end of the list of entries is reached, the routine returns
the value \*Lsec_rgy_no_more_entries\*O in the \*Vstatus\*O parameter.
Use \*Lsec_rgy_cursor_reset(\|)\*O to reset the cursor.
.LE
.SS "Output"
.VL
.LI "\*Vpgo_item\*O"
A pointer to a \*Lsec_rgy_pgo_item_t\*O structure to receive the data for
the returned PGO item.  The data in this structure includes the PGO item's
name, UUID, UNIX number (if any), and administrative data, such as whether
the item, if a principal, may have a concurrent group set.  The data is as
it appears in the registry, for that UNIX number, even though some of the
fields may have been overridden locally.
.LI "\*Vname\*O"
A pointer to a \*Lsec_rgy_name_t\*O character string
containing the
returned name for the PGO item.  This string might contain a local override
value if the supplied UNIX number is found in the \*Lpasswd_override\*O or
\*Lgroup_override\*O file.
.LI "\*Voverridden\*O"
A pointer to a \*Lboolean32\*O value indicating whether or not the supplied
UNIX number has an entry in the local override file (\*Lpasswd_override\*O or
\*Lgroup_override\*O).
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
the routine returns \*Lerror_status_ok\*O.
Otherwise, it returns an error.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lsec_rgy_pgo_get_by_eff_unix_num(\|)\*O routine returns the name and data
for a PGO item.  The desired item is identified by its type (domain) and its
UNIX number.
.PP
This routine is similar to the
\*Lsec_rgy_pgo_get_by_unix_num(\|)\*O routine.  The difference between the
routines is that \*Lsec_rgy_pgo_get_by_eff_unix_num(\|)\*O first searches
the local override files for the respective \*Vname_domain\*O for a match
with the supplied UNIX number.  If an override match is found, and an
account or group name is found in that entry, then that name is used to
obtain PGO data from the registry and the value of
the \*Voverridden\*O parameter is set to TRUE.
.PP
The \*Vitem_cursor\*O parameter
specifies the starting point for the search through
the registry database.  It provides an automatic place holder in the
database.  The routine automatically updates this variable to point to the
next PGO item after the returned item.  The returned cursor location can be
supplied on a subsequent database access call that also uses a PGO
item cursor.
.SS "Permissions Required"
.PP
The \*Lsec_rgy_pgo_get_by_eff_unix_num(\|)\*O routine requires
the \*Lr\*O (\*Lread\*O) permission on the PGO item to be viewed.
...\".SH "NOTES"
...\".PP
...\"?????
.nL
.ne 1.5i
.SH "Cautions"
.PP
There are several different types of cursors used in the registry
application programmer interface (API).  Some cursors point
to PGO items, others
point to members in a membership list, and others point to account data.  Do
not use a cursor for one sort of object in a call expecting another sort
of object.  For example, you cannot use the same cursor on a call to
\*Lsec_rgy_acct_get_projlist(\|)\*O and \*Lsec_rgy_pgo_get_next(\|)\*O.
The behavior in this case is undefined.
.PP
Furthermore, cursors are specific to a server.  A cursor pointing into one
replica of the registry database is useless as a pointer into another
replica.
.PP
Use \*Lsec_rgy_cursor_reset(\|)\*O to renew a cursor for use with another
call or for another server.
.nL
.ne 1.5i
.SH "Files"
.VL
.LI "\*L/usr/include/dce/pgo.idl\*O"
The \*Lidl\*O file from which \*Ldce/pgo.h\*O was derived.
.LI "\*Lgroup_override\*O"
The local group override file.
.LI "\*Lpasswd_override\*O"
The local password override file.
.LE
...\".SH "EXAMPLES"
...\".PP
...\"?????
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lsec_rgy_no_more_entries\*O "
The cursor is at the end of the list of PGO items.
.LI "\*Lsec_rgy_object_not_found\*O"
The specified PGO item was not found.
.LI "\*Lsec_rgy_server_unavailable\*O"
The DCE registry server is unavailable.
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.nL
.ne 1.5i
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsec_intro(3sec)\*O,
\*Lsec_rgy_cursor_reset(3sec)\*O,
\*Lsec_rgy_pgo_add(3sec)\*O,
\*Lsec_rgy_pgo_get_by_id(3sec)\*O,
\*Lsec_rgy_pgo_get_by_name(3sec)\*O,
\*Lsec_rgy_pgo_get_by_unix_num(3sec)\*O,
\*Lsec_rgy_pgo_get_next(3sec)\*O,
\*Lsec_rgy_pgo_id_to_name(3sec)\*O,
\*Lsec_rgy_pgo_id_to_unix_num(3sec)\*O,
\*Lsec_rgy_pgo_name_to_id(3sec)\*O,
\*Lsec_rgy_pgo_unix_num_to_id(3sec)\*O.
.ad b
