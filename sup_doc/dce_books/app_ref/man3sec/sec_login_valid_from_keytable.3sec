...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: sec_login_valid_from_keytable.3sec,v $
...\" Revision 1.1.4.3  1996/11/19  18:59:07  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:52:17  wardr]
...\"
...\" Revision 1.1.4.2  1996/07/31  16:44:29  millett
...\" 	{def,13420,R1.2.2}
...\" 	returns void not boolean32
...\" 	[1996/07/31  16:43:41  millett]
...\" 
...\" Revision 1.1.4.1  1996/05/13  19:05:36  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:58:26  wardr]
...\" 
...\" Revision 1.1.2.7  1995/06/21  13:21:49  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/16  16:47:19  buckler]
...\" 
...\" Revision 1.1.2.6  1995/05/18  16:37:37  rcb
...\" 	PRENTICE HALL reformat: preliminary fiddling
...\" 	[1995/05/18  16:37:33  rcb]
...\" 
...\" Revision 1.1.2.5  1994/10/19  20:17:08  neilson
...\" 	CR 10326 - Automatic fix to name of intro ref page
...\" 	[1994/10/19  20:11:26  neilson]
...\" 
...\" Revision 1.1.2.4  1994/06/13  17:04:20  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:48:23  devobj]
...\" 
...\" Revision 1.1.2.3  1993/09/01  19:19:09  millette
...\" 	(defect, 8119, R1.0.3)
...\" 	Clarify status parameter and return values.
...\" 	[1993/09/01  19:17:40  millette]
...\" 
...\" Revision 1.1.2.2  1993/07/09  19:21:59  millette
...\" 	{defect, 7795, R1.0.3}
...\" 	Created for CR9975
...\" 	[1993/07/09  19:21:19  millette]
...\" 
...\" $EndLog$
.TH sec_login_valid_from_keytable 3sec
...\" .iX "\*Lsec_login_valid_from_keytable(\|)\*O"
...\" .iX "calls" "\*Lsec_login_valid_from_keytable(\|)\*O"
.SH "Name"
\*Lsec_login_valid_from_keytable\*O - Validates a login context's identity using input from a 
specified keytable file
...\" .SH "LIBRARY"
...\" \*L/usr/lib/dce/libdcesec.a\*O
.SH "Synopsis"
.sS
\*L#include <dce/sec_login.h>
.sp .4v
.zA "def,13420,R1.2.2,returns void"
\*Lvoid sec_login_valid_from_keytable(
.zZ "def,13420,R1.2.2,returns void"
.nL
	\*Lsec_login_handle_t \*Vlogin_context\*L,
.nL	
	\*Lunsigned32 \*Vauthn_service\*L,
.nL
	\*Lvoid *\*Varg\*L,
.nL
	\*Lunsigned32 \*Vtry_kvno\*L,
.nL
	\*Lunsigned32 *\*Vused_kvno\*L,
.nL
	\*Lboolean32 *\*Vreset_passwd\*L,
.nL
	\*Lsec_login_auth_src_t *\*Vauth_src\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vlogin_context\*O"
An opaque handle to login context data.  The login context contains, 
among other data, the 
account principal's name 
and UUID, account
restrictions, records of the account principal's group memberships, 
and the account's home
directory.  (See \*Lsec_intro(3sec)\*O
for more details about the login context.)
.LI "\*Vauthn_service\*O"
Identifies the authentication protocol using the key.  The possible
authentication protocols are as follows:
.VL
.LI "\*Lrpc_c_authn_dce_secret\*O"
DCE shared-secret key authentication.
.LI "\*Lrpc_c_authn_dce_public\*O"
DCE public key authentication (reserved for future use).
.LE 
.LI "\*Varg\*L"
This parameter can specify either the local keytab file or an
argument to the \*Vget_key_fn\*O key acquisition routine of the
\*Lrpc_\%server_\%register_\%auth_\%info\*O routine.
.PP
.ne 8
A value of NULL specifies that the default keytab file
should be used.  A keytab filename specifies that that 
file should be used as the keytab file.  You must prepend the file's 
absolute filename with \*LFILE:\*O and the file must have 
been created with the \*Lrgy_edit\*O command or the 
\*Lsec_key_mgmt_set_key\*O routine.
.PP
Any other value specifies an argument for the \*Vget_key_fn\*O 
key acquisition routine.  
See the \*Lrpc_server_register_auth_info(\|)\*O reference 
page for more information.
.LI "\*Vtry_kvno\*L"
The version number of the key in the keytab file to try first.  
Specify NULL 
to try the current version of the key.
.LE
.SS "Output"
.VL
.LI "\*Vused_kvno\*L"
A pointer to a 32-bit \*Lboolean32\*O value that specifies the
version number of the
the key from the keytab file that was used to successfully validate 
the login context, if any.
.LI "\*Vreset_passwd\*O"
A pointer to a 32-bit \*Lboolean32\*O value.  The routine returns TRUE
if the account password has expired and should be reset.
.LI "\*Vauth_src\*O" 
How the the login context was authorized. 
The \*Lsec_\%login_\%auth_\%src_t\*O data type 
distinguishes the various ways the login context 
was authorized.  There
are three possible values:
.VL
.LI "\*Lsec_login_auth_src_network\*O"
Authentication accomplished through the normal network authority.  A login
context authenticated this way will have all the network credentials it
ought to have.
.LI "\*Lsec_login_auth_src_local\*O"
Authentication accomplished via local data.  Authentication occurs locally
if a principal's account is tailored for the local machine, or if the
network authority is unavailable.  Since a login contexts authenticated
locally has no network credentials, it can not be used for network
operations. 
.LI "\*Lsec_login_auth_src_overridden\*O"
Authentication accomplished via the override facility.
.LE 
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
\*Vstatus\*O is assigned \*Lerror_status_ok\*O. 
Otherwise, it returns an error.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lsec_login_valid_from_keytable (\|)\*O routine validates
the login context established with \*Lsec_login_setup_identity(\|)\*O.  
The \*Lsec_\%login_\%valid_\%from_\%keytable (\|)\*O routine obtains 
the principal's password from     
the specified keytable.    
.PP
If \*Vtry_kvno\*O specifies a key version number, that 
version number key is tried first, otherwise the current key version number
is tried first.  The function
trys all keys in the keytable until it finds one that  
validates the login context.  This operation must be invoked before the
network credentials can be used.
.nL
.ne 1.5i
.SH "Notes"
.PP
A context is not secure and must not be set or exported until the
authentication service is itself authenticated with the
\*Lsec_login_certify_identity(\|)\*O call.
.nL
.zA "def,13420,R1.2.2,del return values"
...\" .ne 1.5i
...\" .SH "RETURN VALUES"
...\" .PP
...\" The routine returns TRUE if the login context has been successfully
...\" validated.
.zZ "def,13420,R1.2.2,del return values"
.nL
.ne 1.5i
.SH "Files"
.VL
.LI \*L/usr/include/dce/sec_login.idl\*O
The \*Lidl\*O file from which \*Ldce/sec_login.h\*O was derived.
.LE
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lsec_rgy_passwd_invalid\*O"
The input string does not match the account password.
.LI "\*Lsec_rgy_server_unavailable\*O"
There is no data with which to compare the input string.
.LI "\*Lsec_login_s_acct_invalid\*O"
The account is invalid or has expired.
.LI "\*Lsec_login_s_default_use\*O"
The input context was the default context, which cannot be validated.
.LI "\*Lsec_login_s_already_valid\*O"
The login context has already been validated.
.LI "\*Lsec_login_s_unsupp_passwd_type\*O"
The password type is not supported.
.LI "\*Lsec_key_mgmt_e_key_unavailable\*O"
The requested key is not present.
.LI "\*Lsec_key_mgmt_e_authn_invalid\*O"
The authentication protocol is not valid.
.LI "\*Lsec_key_mgmt_e_unauthorized\*O"
The caller is not authorized to perform the operation. 
.LI "\*Lsec_s_no_memory\*O			
Unable to allocate memory.
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.nL
.ne 1.5i
.SH "Examples"
.PP
The following example illustrates use of the
\*Lsec_login_valid_from_keytable(\|)\*O routine
as part of a straightforward login process:
.PP
.ps 9
.vs 10
.oS
if (sec_login_setup_identity(user_name, sec_login_no_flags, &login_context,
                            &st)) {
   ... get password from local keytable...

   if (sec_login_valid_from_keytable(login_context, authn_service, arg, try_kvno,
                            &used_kvno, &reset_passwd, &auth_src, &st)) {

      sec_login_set_context(login_context, &st);

      if (auth_src != sec_login_auth_src_network)
         printf("no network credentials");

      }

      ... any other application specific login valid actions ...
      }

   } else {
      sec_login_purge_context(&login_context, &st);

      ... application specific login failure actions ...
   }
}
.oE
.ps 12
.vs 14
.nL
.ne 1.5i
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsec_intro(3sec)\*O,
\*Lsec_login_certify_identity(3sec)\*O,
\*Lsec_login_setup_identity(3sec)\*O,
\*Lsec_login_valid_and_cert_ident(3sec)\*O,
\*Lsec_login_validate_identity(3sec)\*O.
.ad b
