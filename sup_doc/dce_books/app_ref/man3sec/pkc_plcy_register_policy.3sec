...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: pkc_plcy_register_policy.3sec,v $
...\" Revision 1.1.2.5  1996/12/20  22:00:17  weir
...\" 	Final updates
...\" 	[1996/12/20  21:58:48  weir]
...\"
...\" Revision 1.1.2.4  1996/12/17  20:11:47  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:08:56  damon]
...\" 
...\" Revision 1.1.2.3  1996/11/19  18:57:15  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:50:22  wardr]
...\" 
...\" Revision 1.1.2.2  1996/11/18  19:58:19  weir
...\" 	No change
...\" 	[1996/11/18  19:55:45  weir]
...\" 
...\" Revision 1.1.2.1  1996/10/15  21:11:17  weir
...\" 	Initial submission
...\" 	[1996/10/15  21:09:40  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
.TH pkc_plcy_register_policy 3sec
...\" 
.SH "Name"
\*Lpkc_plcy_register_policy\*O - Registers a policy module
...\" 
...\" 
.SH "Synopsis"
.sS
\*L#include <dce/pkc_base.h>\*O
.nL
\*L#include <dce/pkc_plcy_reg.h>\*O
.sp .4v
\*Lunsigned32 pkc_plcy_register_policy(\*O
.nL
	\*Lpkc_policy_t * \*Vplcy\*L,
.nL
	\*Lint \*Vreplacement_policy\*L);
.sE
.nL
...\" 
.ne 1.5i
...\" 
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vplcy\*O"
A pointer to the policy module structure to be registered.
...\" 
.LI "\*Vreplacement_policy\*O"
Specifies how the registration is to be handled if an implementation of
the policy is already registered. There are three possible values:
...\" 
.VL
.LI "\*LPKC_REPLACE_NONE\*O"
Specifies that an error should be returned if an implementation of the
policy is already registered.
...\" 
.LI "\*LPKC_REPLACE_ENTRYPOINTS\*O"
Specifies that only entrypoints that the original implementation (if any)
did not provide should be replaced. (Note that this value is not currently
supported.)
...\" 
.LI "\*LPKC_REPLACE_ALL\*O"
Specifies that the new implementation should replace the existing one,
if any.
...\" 
.LE
...\" 
.LE
.nL
...\" 
.ne 1.5i
...\" 
.SH "Description"
.PP
\*Lpkc_plcy_register_policy(3sec)\*O registers a policy module,
in the form of a properly declared \*Lpkc_policy_t\*O data structure, which
contains identifying information about the module as well as entry points to
all of the module's functions.
.PP
Calling this routine will cause the module passed to it to be registered among
the system's policy modules; it can then be accessed by other applications
via the high level certification routines.
.VL "\*LNote:\*O"
C++ must be used to perform policy registration.
.LE
...\" 
...\" 
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Return Values"
...\" 
.VL 1i
.LI "\*Lpkc_s_success\*O"
Operation successfully completed.
...\" 
.LE
...\" 
...\" 
...\" 
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Errors"
.PP
Refer to the \*VOSF DCE Problem Determination Guide\*O for
complete descriptions of all error messages.
...\" 
.SH "Related Information"
.PP
.ad l
Functions:
\*Lpkc_plcy_intro(3sec)\*O,
\*Lpkc_plcy_delete_keyinfo(3sec)\*O,
\*Lpkc_plcy_delete_trustbase(3sec)\*O,
\*Lpkc_plcy_establish_trustbase(3sec)\*O,
\*Lpkc_plcy_get_key_certifier_count(3sec)\*O,
\*Lpkc_plcy_get_key_certifier_info(3sec)\*O,
\*Lpkc_plcy_get_key_count(3sec)\*O,
\*Lpkc_plcy_get_key_data(3sec)\*O,
\*Lpkc_plcy_get_key_trust(3sec)\*O,
\*Lpkc_plcy_get_registered_policies(3sec)\*O,
\*Lpkc_plcy_lookup_policy(3sec)\*O,
\*Lpkc_plcy_retrieve_key(3sec)\*O,
\*Lpkc_plcy_retrieve_keyinfo(3sec)\*O.
Classes:
\*Lpkc_ca_key_usage.class(3sec)\*O,
\*Lpkc_constraints.class(3sec)\*O,
\*Lpkc_generic_key_usage.class(3sec)\*O,
\*Lpkc_key_policies.class(3sec)\*O,
\*Lpkc_key_policy.class(3sec)\*O,
\*Lpkc_key_usage.class(3sec)\*O,
\*Lpkc_name_subord_constraint.class(3sec)\*O,
\*Lpkc_name_subord_constraints.class(3sec)\*O,
\*Lpkc_name_subtree_constraint.class(3sec)\*O,
\*Lpkc_name_subtree_constraints.class(3sec)\*O,
\*Lpkc_pending_revocation.class(3sec)\*O,
\*Lpkc_revocation.class(3sec)\*O,
\*Lpkc_revocation_list.class(3sec)\*O,
\*Lpkc_trust_list.class(3sec)\*O,
\*Lpkc_trust_list_element.class(3sec)\*O,
\*Lpkc_trusted_key.class(3sec)\*O.
.ad b 
...\" 
...\" 
...\" 
