...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: pkc_revocation_list.class.3sec,v $
...\" Revision 1.1.2.5  1996/12/20  22:00:23  weir
...\" 	Final updates
...\" 	[1996/12/20  21:58:54  weir]
...\"
...\" Revision 1.1.2.4  1996/12/17  20:11:53  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:09:03  damon]
...\" 
...\" Revision 1.1.2.3  1996/11/19  18:57:21  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:50:27  wardr]
...\" 
...\" Revision 1.1.2.2  1996/11/18  19:58:28  weir
...\" 	No change
...\" 	[1996/11/18  19:55:51  weir]
...\" 
...\" Revision 1.1.2.1  1996/10/15  21:11:23  weir
...\" 	Initial submission
...\" 	[1996/10/15  21:09:46  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
.TH pkc_revocation_list.class 3sec
...\" 
.SH "Name"
\*Lpkc_revocation_list_t\*O - Revoked certificates list class
...\" 
...\" 
.nL
...\" 
.ne 1.5i
...\" 
...\" 
.SH "Member Data"
...\" 
.SS "Public"
.ML
.LI
\*Lpkc_revocation_t * first\*O
.LI
\*Lpkc_revocation_t * last\*O
.LI
\*Lpkc_pending_revocation_t * first_pending\*O
.LI
\*Lpkc_pending_revocation_t * last_pending\*O
.LE
...\" 
...\" .SS "Private"
...\" .ML
...\" .LI
...\" \*L\*O
...\" .PP
...\" 
...\" .LE
...\" 
...\" 
...\" 
.SH "Member Functions"
...\" 
.SS "Public"
...\" 
.ML
.LI
\*Lunsigned32 get_revocation_date(\|) const\*O
.PP
Takes the following arguments:
.ML
.LI
\*Lconst pkc_revocation_t & o\*O
.LI
\*Lutc_t * revocationDate\*O
.LE
...\" 
.LI
\*Lunsigned32 get_revocation_date(\|) const\*O
.PP
Takes the following arguments:
.ML
.LI
\*Lconst x500name & issuer\*O
.LI
\*Lconst asn_integer & serialNumber\*O
.LI
\*Lutc_t * revocationDate\*O
.LE
...\" 
.LI
\*Lunsigned32 add_revocation()\*O
.PP
Takes the following argument:
.ML
.LI
\*Lconst pkc_revocation_t & o\*O
.LE
...\" 
.LI
\*Lunsigned32 add_revocation(\|)\*O
.PP
Takes the following arguments:
.ML
.LI
\*Lconst x500name & issuer\*O
.LI
\*Lconst asn_integer & serialNumber\*O
.LI
\*Lconst utc_t * revocationDate\*O
.LE
...\" 
.LI
\*Lunsigned32 add_crl(\|)\*O
.PP
Takes the following argument:
.ML
.LI
\*Lconst SignedCertificateList & crl\*O
.LE
...\" 
.LI
\*Lunsigned32 add_key(\|)\*O
.PP
Takes the following arguments:
.ML
.LI
\*Lpkc_trust_list_t * trust_list\*O
.LI
\*Lconst SubjectPublicKeyInfo & key\*O
.LI
\*Lconst x500name & subject\*O
.LI
\*Lconst utc_t & start_date\*O
.LI
\*Lconst utc_t & end_date\*O
.LI
\*Lconst pkc_ca_key_usage_t * usages = NULL\*O
.LE
...\" 
.LI
\*Lpkc_revocation_list_t(void)\*O
...\" 
.LI
\*Lvirtual ~pkc_revocation_list_t(\|)\*O
...\" 
.LI
\*Lvoid empty(void)\*O
...\" 
.LE
...\" 
...\" .SS "Private"
...\" 
...\" .ML
...\" .LI
...\" \*Lpkc_revocation_list_t & operator = (const pkc_revocation_list_t & o)\*O
...\" 
...\" 
...\" .LE
...\" 
.nL
.ne 1.5i
...\" 
.SH "Description"
.PP
\*Lpkc_revocation_list_t\*O embodies a list of revoked certificates
and their dates.
.VL "\*LNote:\*O"
The certificate manipulation routines are a C++ interface. C++ must be
used to perform direct certificate manipulation.
.LE
...\" 
.ne 1.5i
...\" 
.SH "Related Information"
.PP
.ad l
Classes:
\*Lpkc_ca_key_usage.class(3sec)\*O,
\*Lpkc_constraints.class(3sec)\*O,
\*Lpkc_generic_key_usage.class(3sec)\*O,
\*Lpkc_key_policies.class(3sec)\*O,
\*Lpkc_key_policy.class(3sec)\*O,
\*Lpkc_key_usage.class(3sec)\*O,
\*Lpkc_name_subord_constraint.class(3sec)\*O,
\*Lpkc_name_subord_constraints.class(3sec)\*O,
\*Lpkc_name_subtree_constraint.class(3sec)\*O,
\*Lpkc_name_subtree_constraints.class(3sec)\*O,
\*Lpkc_pending_revocation.class(3sec)\*O,
\*Lpkc_revocation.class(3sec)\*O,
\*Lpkc_trust_list.class(3sec)\*O,
\*Lpkc_trust_list_element.class(3sec)\*O,
\*Lpkc_trusted_key.class(3sec)\*O.
.ad b 
...\" 
...\" 
...\" 
...\" class pkc_revocation_list_t {
...\" friend class pkc_trust_list_t;
...\" // A list of revoked certificates and their dates.
...\" private:
...\"     pkc_revocation_list_t & operator = 
...\"                       (const pkc_revocation_list_t & o);
...\" public:
...\"     pkc_revocation_t * first;
...\"     pkc_revocation_t * last;
...\"     pkc_pending_revocation_t * first_pending;
...\"     pkc_pending_revocation_t * last_pending;
...\"     unsigned32 get_revocation_date(const pkc_revocation_t & o,
...\"                                    utc_t * revocationDate) const;
...\"     unsigned32 get_revocation_date(const x500name & issuer,
...\"                                    const asn_integer & serialNumber,
...\"                                    utc_t * revocationDate) const;
...\"     unsigned32 add_revocation(const pkc_revocation_t & o);
...\"     unsigned32 add_revocation(const x500name & issuer,
...\"                               const asn_integer & serialNumber,
...\"                               const utc_t * revocationDate);
...\"     unsigned32 add_crl(const SignedCertificateList & crl);
...\"     unsigned32 add_key(pkc_trust_list_t * trust_list,
...\"                        const SubjectPublicKeyInfo & key,
...\"                        const x500name & subject,
...\"                        const utc_t & start_date,
...\"                        const utc_t & end_date,
...\"                        const pkc_ca_key_usage_t * usages = NULL);
...\"     pkc_revocation_list_t(void);
...\"     virtual ~pkc_revocation_list_t();
...\"     void empty(void);
...\" };
...\" 
...\" 
