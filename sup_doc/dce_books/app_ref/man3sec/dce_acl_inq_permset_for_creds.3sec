...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: dce_acl_inq_permset_for_creds.3sec,v $
...\" Revision 1.1.4.3  1996/11/19  18:55:28  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:48:33  wardr]
...\"
...\" Revision 1.1.4.2  1996/09/18  17:58:37  millett
...\" 	{def,12850,R1.2.2}
...\" 	Remove table of ACL types
...\" 	[1996/09/18  17:57:41  millett]
...\" 
...\" Revision 1.1.4.1  1996/05/13  19:02:04  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:55:56  wardr]
...\" 
...\" Revision 1.1.2.6  1995/06/21  18:24:16  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/21  17:53:44  buckler]
...\" 
...\" Revision 1.1.2.5  1995/06/15  19:26:44  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/15  15:40:23  buckler]
...\" 
...\" Revision 1.1.2.4  1994/10/20  19:15:31  zahn
...\" 	{edt,?????,R1.1}
...\" 
...\" 	Changed 'principle' to 'principal' and
...\" 	commented out notes to reviewers as part of
...\" 	post doc freeze cleanup.
...\" 	[1994/10/20  19:15:10  zahn]
...\" 
...\" Revision 1.1.2.3  1994/06/13  17:14:34  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:49:37  devobj]
...\" 
...\" Revision 1.1.2.2  1994/05/12  16:01:12  neilson
...\" 	Engineering changes.
...\" 	[1994/05/12  16:00:31  neilson]
...\" 
...\" Revision 1.1.2.1  1994/05/07  01:44:45  neilson
...\" 	Rename _pac_ to _creds_ per engineering change.
...\" 
...\" 	From before name change - Log: dce_acl_inq_permset_for_pac.3sec,v $
...\" 	Revision 1.1.2.2  1994/05/06  21:39:21  neilson
...\" 	Incorporate changes from first draft review.
...\" 	[1994/05/06  21:37:18  neilson]
...\" 
...\" Revision 1.1.2.1  1994/02/22  22:18:43  neilson
...\" 	Initial material.
...\" 	[1994/02/22  19:58:32  neilson]
...\" 
...\" $EndLog$
.TH dce_acl_inq_permset_for_creds 3sec
.SH "Name"
\*Ldce_acl_inq_permset_for_creds\*O - Determines a principal's complete extent of access to an object
.SH "Synopsis"
.sS
\*L#include <dce/dce.h>
.nL
\*L#include <dce/aclif.h>
.sp .4v
\*Lvoid dce_acl_inq_permset_for_creds(
.nL
    \*Lsec_cred_pa_handle_t *\*Vcreds\*L,
.nL
    \*Lsec_acl_t *\*Vap\*L,
.nL
    \*Luuid_t *\*Vowner_id\*L,
.nL
    \*Luuid_t *\*Vgroup_id\*L,
.nL
    \*Lsec_acl_posix_semantics_t \*Vposix_semantics\*L,
.nL
    \*Lsec_acl_permset_t *\*Vperms\*L,
.nL
    \*Lerror_status_t *\*Vstatus\*L);
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vcreds\*O"
The security credentials that represent the principal.
.LI "\*Vap\*O"
The ACL that represents the object.
.LI "\*Vowner_id\*O"
Identifies the owner of the object that is protected by the
specified ACL.  If the \*Lsec_acl_e_type_user_obj\*O ACLE (ACL entry)
exists, then the \*Lowner_id\*O (\*Luuid_t\*O pointer) can not be
NULL.  If it is, then the error \*Lsec_acl_expected_user_obj\*O is returned.
.LI "\*Vgroup_id\*O"
Identifies the group in which the object that is protected by the
specified ACL belongs.  If the a \*Lsec_acl_e_type_group_obj\*O ACLE
exists, the \*Lgroup_id\*O (\*Luuid_t\*O pointer) can not be NULL.  If
it is, the error \*Lsec_acl_expected_group_obj\*O is returned.
.LI "\*Vposix_semantics\*O"
This parameter is currently unused in OSF's implementation.
.LE
.SS "Output"
.VL
.LI "\*Vperms\*O"
A bit mask containing a 1 bit for each permission granted by
the ACL and 0 (zero) bits elsewhere.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion, the
routine returns \*Lerror_status_ok\*O.
.LE
.SH "Description"
The \*Ldce_acl_inq_permset_for_creds(\|)\*O routine returns
a principal's complete extent of access to some object.  This routine
is useful for implementing operations such as the conventional UNIX access
function.
.PP
The values allowed for the credentials representing the principal
include NULL or unauthenticated.
.PP
The routine normally returns TRUE, even when the access permissions
are determined to be all 0 (zero) bits (\*Ldce_acl_c_no_permissions\*O).  It returns
FALSE only on illogical error conditions (such as unsupported ACL entry
types), in which case the status output gets the error status code and
the \*Vperms\*O is set to \*Ldce_acl_c_no_permissions\*O.
.PP
.zA "def,12850,R1.2.2,remove table of ACL types"
All ACL entry types (of type \*Lsec_acl_entry_type_t\*O) are
supported by this routine
.zZ "def,12850,R1.2.2,remove table of ACL types"
.SH "Notes"
The meanings of the permission bits have no effect on the action of
the \*Ldce_acl_inq_permset_for_creds(\|)\*O routine.  The interpretation
of the bits is left entirely to the application.
...\" .PP
...\" .cS
...\" \*L ***** Delegation info is needed here. ***** \*O
...\" .cE
...\" .SH "FILES"
...\" .VL
...\" .LI
...\" .LE
...\" .SH "EXAMPLES"
...\" .PP
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lerror_status_ok\*O"
The call was successful.
.LE
.SH "Related Information"
.ad l
Functions:
\*Ldce_acl_inq_client_creds(3sec)\*O,
\*Ldce_acl_inq_client_permset(3sec)\*O,
\*Ldce_acl_register_object_type(3sec)\*O.
.ad b
