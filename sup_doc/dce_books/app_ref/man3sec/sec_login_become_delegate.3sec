...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: sec_login_become_delegate.3sec,v $
...\" Revision 1.1.5.2  1996/11/19  18:58:40  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:51:50  wardr]
...\"
...\" Revision 1.1.5.1  1996/05/13  19:05:00  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:58:00  wardr]
...\" 
...\" Revision 1.1.2.3  1995/06/21  13:21:23  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/16  16:46:49  buckler]
...\" 
...\" Revision 1.1.2.2  1994/06/13  17:15:41  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:50:36  devobj]
...\" 
...\" Revision 1.1.2.1  1994/05/09  18:57:29  millette
...\" 	(enh, 10514, R1.1)
...\" 	Added for delegation
...\" 	[1994/05/09  18:57:07  millette]
...\" 
...\" $EndLog$
.TH sec_login_become_delegate 3sec
...\" .iX "\*Lsec_login_become_delegate(\|)\*O"
...\" .iX "calls" "\*Lsec_login_become_delegate(\|)\*O"
.SH "Name"
\*Lsec_login_become_delegate\*O - Causes an intermediate server to 
become a delegate in traced delegation chain
.SH "Synopsis"
.sS
\*L#include <dce/sec_login.h>
.sp .4v
\*Lsec_login_handle_t sec_login_become_delegate(
.nL
	\*Lrpc_authz_cred_handle_t \*Vcallers_identity\*L,
.nL
	\*Lsec_login_handle_t \*Vmy_login_context\*L,
.nL	
	\*Lsec_id_delegation_type_t \*Vdelegation_type_permitted\*L,
.nL
	\*Lsec_id_restriction_set_t *\*Vdelegate_restrictions\*L,
.nL
	\*Lsec_id_restriction_set_t *\*Vtarget_restrictions\*L,
.nL
	\*Lsec_id_opt_req_t *\*Voptional_restrictions\*L,
.nL
	\*Lsec_id_opt_req_t *\*Vrequired_restrictions\*L,
.nL
	\*Lsec_id_compatibility_mode_t \*Vcompatibility_mode\*L,	
.nL
	\*Lerror_status_t *\*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vcallers_identity\*L"
A handle of type \*Lrpc_authz_cred_handle_t\*O to the 
authenticated identity of the previous delegate in the delegation chain.  
The handle is supplied by the \*Lrpc_binding_inq_auth_caller(\|)\*O call.
.LI "\*Vmy_login_context\*L"
A value of \*Lsec_login_handle_t\*O that provides an 
opaque handle to the identity of the client that is 
becoming the intermediate delegate.  
The \*Lsec_login_handle_t\*O that specifies the client's identity is supplied 
as output of the following calls:
.ad l
.ML
.LI
\*Lsec_login_get_current_context(\|)\*O, if 
the client inherited the identity of the current context
.LI
The \*Lsec_login_setup_identity(\|)\*O and the
\*Lsec_\%login_\%validate_\%identity(\|)\*O pair that together 
establish an authenticated identity if a new identity was 
established
.LE
.ad b
.PP
Note that this identity specified by \*Lsec_login_handle_t\*O 
must be a simple login context; 
it cannot be a 
compound identity created by a previous 
\*Lsec_login_become_delegate(\|)\*O call. 
.LI "\*Vdelegation_type_permitted\*O"
A value of \*Lsec_id_delegation_type_t\*O that specifies the type of 
delegation to be enabled.  The types available are as follows:
.VL
.LI "\*Lsec_id_deleg_type_none\*O"
No delegation.
.LI "\*Lsec_id_deleg_type_traced\*O"
Traced delegation.
.LI "\*Lsec_id_deleg_type_impersonation\*O"
Simple (impersonation) delegation.
.LE
.P
Note that the initiating client sets the type of delegation.  If it 
is set as traced, all delegates must also specify traced delegation; 
they cannot specify simple delegation.  The same is true if the 
initiating client sets the delegation type as simple; all subsequent 
delegates must also specify simple delegation.  The intermediate 
delegates can, however, specify no delegation to indicate that the 
delegation chain can proceed no further.
.LI "\*Vdelegate_restrictions\*O"
A pointer to a \*Lsec_id_restriction_set_t\*O that supplies a list of 
servers that can act as delegates for the intermediate client 
identified by \*Vmy_login_context\*O.  These servers are added 
to delegates permitted by the \*Vdelegate_restrictions\*O parameter 
of the \*Lsec_\%login_\%become_\%initiator\*O call.
.LI "\*Vtarget_restrictions\*O"
A pointer to a \*Lsec_id_restriction_set_t\*O that supplies a list of 
servers that can act as targets for the intermediate client 
identified by \*Vmy_login_context\*O.  
These servers are added 
to targets specified by the \*Vtarget_restrictions\*O parameter 
of the \*Lsec_\%login_\%become_\%initiator\*O call.
.LI "\*Voptional_restrictions\*O"
A pointer to a \*Lsec_id_opt_req_t\*O that supplies a list of 
application-defined optional restrictions that apply to the intermediate 
client identified by \*Vmy_login_context\*O.   
These restrictions are added 
to the restrictions identified by the \*Voptional_restrictions\*O parameter 
of the \*Lsec_login_become_initiator\*O call. 
.nL
.ne 8
.LI "\*Vrequired_restrictions\*O"
A pointer to a \*Lsec_id_opt_req_t\*O that supplies a list of 
application-defined required restrictions that apply to the 
intermediate client identified by \*Vmy_login_context\*O. 
These restrictions are added 
to the restrictions identified  \*Vrequired_restrictions\*O parameter 
of the \*Lsec_login_become_initiator\*O call. 
.LI  "\*Vcompatibility_mode\*O"	
A value of \*Lsec_id_compatibility_mode_t\*O that specifies the compatibility 
mode to be used when the intermediate client operates on pre-1.1 servers.
The modes available are as follows:
.VL
.LI "\*Lsec_id_compat_mode_none\*O"
Compatibility mode is off.
.LI "\*Lsec_id_compat_mode_initiator\*O"
Compatibility mode is on.  The pre-1.1 PAC data is extracted from the EPAC 
of the initiating client.
.LI "\*Lsec_id_compat_mode_caller\*O"
Compatibility mode is on. 
The pre-1.1 PAC data extracted from the EPAC of the last 
client in the delegation chain. 
.LE
.LE
.SS "Output"
.VL
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
\*Vstatus\*O is assigned \*Lerror_status_ok\*O.
Otherwise, it returns an error.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lsec_login_become_delegate(\|)\*O is used by intermediate servers to 
become a delegate for the client identified by \*Vcallers_identity\*O.  
The routine returns a new login context (of type \*Lsec_login_handle_t\*O) 
that carries delegation information.  This information includes the 
delegation type, delegate and target restrictions, and 
any application-defined optional and required restrictions.   
.PP
The new login context created by this call can then used to to set up 
authenticated rpc with an intermediate or target server using 
the \*Lrpc_binding_set_auth_info(\|)\*O call. 
.PP
Any delegate, target, required, or optional restrictions specified 
in this call are added to the restrictions specified by the 
initiating client and any intermediate clients.
.PP
.ne 8
The \*Lsec_login_become_delegate(\|)\*O 
call is run only if the initiating client 
enabled traced delegation by setting the \*Vdelegation_type_permitted\*O 
parameter in the \*Lsec_login_become_initiator\*O call to 
\*Lsec_id_deleg_type_traced\*O.
...\" .SS Permissions Required
...\" .PP
...\" TBS -- MIKE??
.nL
.ne 1.5i
.SH "Files"
.VL
.LI \*L/usr/include/dce/sec_login.idl\*O
The \*Lidl\*O file from which \*Ldce/sec_login.h\*O was derived.
.LE
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lerr_sec_login_invalid_delegate_restriction\*O"
.LI "\*Lerr_sec_login_invalid_target_restriction\*O"
.LI "\*Lerr_sec_login_invalid_opt_restriction\*O"
.LI "\*Lerr_sec_login_invalid_req_restriction\*O"
.LI "\*Lsec_login_s_invalid_context\*O" 
.LI "\*Lsec_login_s_compound_delegate\*O" 
.LI "\*Lsec_login_s_invalid_deleg_type\*O"
.LI "\*Lsec_login_s_invalid_compat_mode\*O" 
.LI "\*Lsec_login_s_deleg_not_enabled\*O" 
.LI "\*Lerror_status_ok\*O"
.LE
.nL
.ne 1.5i
...\" .SH "EXAMPLES"
...\" .PP
...\" ANY EXAMPLES??
.SH "Related Information"
.PP
.ad l
Functions:
\*Lrpc_binding_inq_auth_caller(3rpc)\*O, 
\*Lsec_intro(3sec)\*O,
\*Lsec_login_become_impersonator(3sec)\*O, 
\*Lsec_login_become_initiator(3sec)\*O,
\*Lsec_login_get_current_context(3sec)\*O, 
\*Lsec_login_setup_identity(3sec)\*O, 
\*Lsec_login_validate_identity(\|)\*O.
.ad b
