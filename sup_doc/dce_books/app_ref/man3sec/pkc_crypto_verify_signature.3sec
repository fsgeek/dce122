...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: pkc_crypto_verify_signature.3sec,v $
...\" Revision 1.1.2.5  1996/12/20  21:59:40  weir
...\" 	Final updates
...\" 	[1996/12/20  21:58:13  weir]
...\"
...\" Revision 1.1.2.4  1996/12/17  20:11:12  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:08:23  damon]
...\" 
...\" Revision 1.1.2.3  1996/11/19  18:56:43  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:49:48  wardr]
...\" 
...\" Revision 1.1.2.2  1996/11/18  19:57:23  weir
...\" 	No change
...\" 	[1996/11/18  19:55:13  weir]
...\" 
...\" Revision 1.1.2.1  1996/10/15  21:10:35  weir
...\" 	Initial submission
...\" 	[1996/10/15  21:09:13  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" unsigned32 pkc_crypto_verify_signature
...\" 
...\" 
.TH pkc_crypto_verify_signature 3sec
...\" 
.SH "Name"
\*Lpkc_crypto_verify_signature\*O - Verifies a signature
...\" 
...\" 
.SH "Synopsis"
.sS
\*L#include <dce/pkc_base.h>\*O
.nL
\*L#include <dce/pkc_crypto_reg.h>\*O
.sp .4v
\*Lpkc_crypto_verify_signature(\*O
.nL
	\*Lgss_OID \*Valgorithm\*L,
.nL
	\*Lsec_pk_gen_data_t \*Vdata\*L,
.nL
	\*Lsec_pk_data_t \*Vpublic_key\*L,
.nL
	\*Lsec_pk_data_t \*Vsignature\*L);
.sE
.nL
...\" 
.ne 1.5i
...\" 
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Valgorithm\*O"
An OID identifying the cryptographic algorithm to be used in
verifying the data.
.LI "\*Vdata\*O"
The signed data whose signature is to be verified.
.LI "\*Vpublic_key\*O"
The public key (i.e., public member of a public-private key
pair) to be used to verify the signed data.
.LI "\*Vsignature\*O"
The signature to be verified.
.LE
...\" 
...\" 
.nL
...\" 
.ne 1.5i
...\" 
.SH "Description"
.PP
\*Lpkc_crypto_verify_signature(3sec)\*O searches the list of registered
algorithms for an implementation of the specified algorithm. If found,
the implementation is opened, if necessary, and its \*L(verify)(\|)\*O
function invoked to verify the data and signature passed by the caller.
.PP
The routine returns 0 for a correct signature, \*Lpkc_invalid_signature\*O
for an incorrect signature, or another DCE-defined error status to indicate any
other errors.
.PP
Using this routine, an application can verify signed data in one simple
call. The alternative is to lookup the desired cryptographic module
by calling \*Lpkc_crypto_lookup_algorithm(3sec)\*O, then explicitly call
the module's \*L(verify)(\|)\*O routine.
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Return Values"
...\" 
.VL 1i
.LI "\*Lpkc_s_success\*O"
Operation successfully completed.
...\" 
.LE
...\" 
...\" 
...\" 
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Errors"
.PP
Refer to the \*VOSF DCE Problem Determination Guide\*O for
complete descriptions of all error messages.
...\" 
.SH "Related Information"
.PP
.ad l
Functions:
\*Lpkc_crypto_generate_keypair(3sec)\*O,
\*Lpkc_crypto_get_registered_algorithms(3sec)\*O,
\*Lpkc_crypto_lookup_algorithm(3sec)\*O,
\*Lpkc_crypto_register_signature_alg(3sec)\*O,
\*Lpkc_crypto_sign(3sec)\*O.
.ad b 
...\" 
...\" 
...\" 
