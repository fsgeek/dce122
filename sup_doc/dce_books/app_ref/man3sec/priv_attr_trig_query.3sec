...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" HISTORY
...\" $Log: priv_attr_trig_query.3sec,v $
...\" Revision 1.1.4.3  1996/12/17  20:11:59  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:09:08  damon]
...\"
...\" Revision 1.1.4.2  1996/11/19  18:57:27  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:50:34  wardr]
...\" 
...\" Revision 1.1.4.1  1996/05/13  19:03:25  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:56:54  wardr]
...\" 
...\" Revision 1.1.2.3  1995/06/21  18:24:22  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/21  18:23:06  buckler]
...\" 
...\" Revision 1.1.2.2  1995/06/15  19:27:46  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/15  16:24:15  buckler]
...\" 
...\" Revision 1.1.2.1  1994/10/14  17:45:42  millette
...\" 	{enh, 10056, R1.1}
...\" 	Added for ERA
...\" 	[1994/10/14  17:45:15  millette]
...\" 
...\" $EndLog$
...\" 
.TH priv_attr_trig_query 3sec
...\" .iX "\*Lpriv_attr_trig_query(\|)\*O"
...\" .iX "calls" "\*Lpriv_attr_trig_query(\|)\*O"
.SH "Name"
\*Lpriv_attr_trig_query\*O - Retrieves attributes 
stored by a trigger server for a specified principal for inclusion 
in the principal's EPAC
.SH "Synopsis"
.sS
\*L#include <dce/priv_attr_trig.h>
.sp .4v
void priv_attr_trig_query (
.nL
	\*Lhandle_t \*Vh\*L,
.nL
	\*Lsec_id_foreign_t \*Vprincipal\*L,
.nL
	\*Lunsigned32 \*Vnum_upstream_delegates\*L,
.nL
	\*Lsec_id_foreign_t \*Vupstream_delegates\*O[\|]\*L,
.nL
	\*Lpriv_attr_trig_cursor_t \*V*cursor\*L,
.nL
	\*Lunsigned32 \*Vnum_attr_keys\*L,
.nL
	\*Lunsigned32 \*Vspace_avail\*L,
.nL
	\*Lsec_attr_t \*Vattr_keys\*O[\|]\*L,
.nL
	\*Lunsigned32 \*V*num_returned\*L,
.nL
	\*Lsec_attr_t \*Vattrs\*O[\|]\*L,
.nL
	\*Lpriv_attr_trig_timeval_sec_t \*Vtime_to_live\*O[\|]\*L,
.nL
	\*Lunsigned32 \*V*num_left\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);	
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vh\*O"
An opaque handle bound to a trigger server.  Use
the trigger binding information specified in the attribute 
encoding to acquire a bound handle.
.LI "\*Vprincipal\*O"
A value of type \*Lsec_id_foreign_t\*O that identifies the UUID, name, and cell of the 
principal(s) whose attributes are to be retrieved.
.LI "\*Vnum_upstream_delegates\*O"
If \*Vprincipal\*O is a member of a delegation chain, an unsigned 
32-bit integer that specifies the number of delegates in the 
chain upstream from (before) this principal.  The upstream delegate chain ordering reflects 
the sequence in which delegates were added to the chain.  
For example, the delegation initiator will always be first in the chain.
.nL
.ne 7
.LI "\*Vupstream_delegates\*O"
If the privilege sever is adding \*Vprincipal\*O to a delegation chain, an array of values of type
\*Lsec_id_foreign_t\*O that 
identify the UUID and cell of each delegate in the upstream delegation chain.  
Note that principal names are not provided. 
.LI "\*Vnum_attr_keys\*O"
An unsigned 32-bit integer that specifies the number of elements 
in the \*Vattr_keys\*O array.  Set this parameter to 0 (zero) to 
return all of the principal's attributes that the caller is authorized to see.  
.LI "\*Vspace_avail\*O"
An unsigned 32-bit integer that specifies the size of the 
\*Vattr_keys\*O array.
.LI "\*Vattr_keys\*O[\|]"
An array of values of type \*Lsec_attr_t\*O that identify the 
attribute type ID of the attribute instance(s) to 
be looked up.  
The size of the \*Vattr_keys\*O[\|] array is determined by the 
\*Vnum_attr_keys\*O parameter.
.LE 
.SS "Input/Output"
.VL
.LI "\*Vcursor\*O"
A pointer to a \*Lpriv_attr_trig_cursor_t\*O.  
As an input parameter, \*Vcursor\*O is a pointer to a \*Lpriv_attr_trig_cursor_t\*O 
initialized by a the \*Lsec_attr_cursor_init(\|)\*O call.  
As an output parameter, \*Vcursor\*O is a pointer to a \*Lpriv_attr_trig_cursor_t\*O that is
positioned past the components returned in this call.
.LE 
.SS "Output Parameters"
.VL
.LI "\*Vnum_returned\*O"
A pointer to a 32-bit unsigned integer that specifies the number of attribute instances 
returned in the \*Vattrs\*O[\|] array.
.LI "\*Vattrs\*O"
An array of values of type \*Lsec_attr_t\*O that 
contains the attributes retrieved by UUID.   
The size of the array is determined by 
\*Vspace_avail\*O and the length by \*Vnum_returned\*O.
.LI "\*Vtime_to_live\*O[\|]\*O"
An array of values of type \*Lpriv_attr_trig_timeval_sec_t\*O that 
specifies, for each attribute in the \*Lattrs\*O[\|]\*O array 
The size of the array is determined by 
\*Vspace_avail\*O and the length by \*Vnum_returned\*O.
.LI "\*Vnum_left\*O
A pointer to a 32-bit unsigned integer that supplies the number of attributes 
that were found but could  
not be returned because of 
space constraints in the \*Vattrs\*O[\|]\*O buffer.  To ensure that all the 
attributes will be returned, increase the size of the \*Vattrs\*O[\|]\*O 
array by increasing the size of \*Vspace_avail\*O and \*Vnum_returned\*O.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
the routine returns \*Lerror_status_ok\*O, or, if the requested 
attributes were not available, it returns the message \*Lnot_all_available\*O.
Otherwise, it returns an error.
.LE
.ne 1.5i
.SH "Description"
The \*Lpriv_attr_trig_query(\|)\*O function is used by the privilege server to 
retrieve attributes for a principal 
specified by UUID and include them in the principal's EPAC. The privilege server 
calls this function when it gets a request for ERAs in an EAPC.
.PP
Although generally this routine it is not called directly, 
this reference page is provided for users who are writing the 
attribute trigger servers that will receive \*Lpriv_attr_trig_query(\|)\*O 
input and supply its output.
.PP 
If the \*Vnum_attr_keys\*O parameter is set to 0 (zero), all 
of the object's attributes that the caller is authorized to see are 
returned.  
This routine is useful for programmatic access.
.PP
For multivalued attributes, the call returns 
a \*Lsec_attr_t\*O for each value as an individual attribute instance.  
For attribute sets, the call returns a \*Lsec_attr_t\*O  for each member 
of the set; it does not return the set instance.
.PP
The \*Vattr_keys\*O[\|]\*O array, which specifies the attributes to be returned, 
contains values of type \*Lsec_attr_t\*O.  These values consist of
.ad l
.ML
.LI
\*Lattr_id\*O, a UUID that identifies the attribute type
.LI
\*Lattr_value\*O, values of \*Lsec_attr_value_t\*O that specify the 
attribute's encoding type and values.
.LE
.ad b
.PP
Use the \*Lattr_id\*O field of each \*Vattr_keys\*O array element, 
to specify the UUID that identifies the attribute type to be 
returned. 
.PP 
If the attribute instance to be read is associated with a query attribute trigger that 
requires additional information before it can process the query request, 
use a \*Lsec_attr_value_t\*O to supply the requested information.  
To do this 
.ad l
.ML
.LI
Set the \*Lsec_attr_encoding_t\*O to an encoding type that is 
compatible with the information required by the query attribute trigger.  
.LI
Set the \*Lsec_attr_value_t\*O to hold the 
required information.
.LE
.ad b
.PP
Note that if you set \*Vnum_attr_keys\*O to zero to return all of the 
object's attributes and that attribute is associated with a query attribute trigger, 
the attribute trigger will be called with no input attribute 
information (that would normally have been passed in via the 
\*Lattr_value\*O field).  
.PP
The \*Vcursor\*O parameter specifies a cursor of type \*Lpriv_attr_trig_cursor_t\*O 
initialized to the point 
in the attribute list at which to start 
processing the query.  Use the \*Lsec_attr_cursor_init(\|)\*O 
function to initialize \*Vcursor\*O.  
If \*Vcursor\*O 
is uninitialized, the server begins processing the query at
the first attribute that satisfies the search criteria.  
.PP
The \*Vnum_left\*O parameter contains the number of 
attributes that were found but could not be returned 
because of space constraints of the \*Vattrs\*O[\|]\*O array. 
(Note that this number may be inaccurate if 
the target server allows updates between successive queries.)
To obtain all of the remaining attributes, set the size of the 
\*Vattrs\*O[\|]\*O array so that it is large enough to hold the number of 
attributes listed in \*Vnum_left\*O.  
.SS "Permissions Required"
.PP
The \*Lpriv_attr_trig_query(\|)\*O routine requires the query permission 
set for each attribute type identified in the \*Vattr_keys\*O[\|]\*O array. 
These permissions are defined as part of the ACL manager set in the 
schema entry of each attribute type. 
...\" .ne 1.5i
...\" .SH "NOTES"
...\" .PP
...\" .br
...\" .ne 1.5i
.nL
.ne 1.5i
.SH "Files"
.VL
.LI "\*L/usr/include/dce/priv_attr_trig.idl\*O"
The \*Lidl\*O file from which \*Ldce/priv_attr_trig.h\*O was derived.
.LE
...\" .SH "EXAMPLES"
...\" .PP
...\"
...\"?????
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lunauthorized\*O"
.LI "\*Lregistry server unavailable\*O"
.LI "\*Ltrigger server unavailable\*O"
.LI "\*Lerror_status_ok\*O"
.LE
.nL
.ne 1.5i
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsec_rgy_attr_cursor_init(3sec)\*O,
\*Lsec_intro(3sec)\*O.
.ad b
