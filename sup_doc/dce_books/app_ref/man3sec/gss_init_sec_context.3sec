...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: gss_init_sec_context.3sec,v $
...\" Revision 1.1.4.2  1996/11/19  18:56:13  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:49:19  wardr]
...\"
...\" Revision 1.1.4.1  1996/05/13  19:03:00  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:56:37  wardr]
...\" 
...\" Revision 1.1.2.7  1995/06/15  19:27:26  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/15  16:23:51  buckler]
...\" 
...\" Revision 1.1.2.6  1994/09/16  17:13:01  pfa
...\" 	Changed 3gss to 3sec
...\" 	[1994/09/16  17:12:44  pfa]
...\" 
...\" Revision 1.1.2.5  1994/08/26  18:01:48  pfa
...\" 	Added editorial/review comments.
...\" 	[1994/08/26  18:01:25  pfa]
...\" 
...\" Revision 1.1.2.4  1994/06/13  17:15:08  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:49:55  devobj]
...\" 
...\" Revision 1.1.2.3  1994/05/18  14:55:58  willie
...\" 	{edit, R1.1}
...\" 	Fixed problems that broke SGML conversion.
...\" 	[1994/05/18  14:54:49  willie]
...\" 
...\" Revision 1.1.2.2  1994/05/11  17:38:45  rjohnson
...\" 	Updated to include CR#10577.
...\" 	[1994/05/11  17:38:28  rjohnson]
...\" 
...\" Revision 1.1.2.1  1994/05/09  11:12:45  rjohnson
...\" 	Changes made: New GSSAPI reference page, R1.1
...\" 	File name: app_ref/man3sec/gss_init_sec_context.3sec
...\" 	[1994/05/03  18:45:13  rjohnson]
...\" 
...\" $EndLog$ 
.TH "gss_init_sec_context"3sec 
.iX gss_init_sec_context
.SH "Name"
\*Lgss_init_sec_context\*O - Establishes a security context between the
context initiator and a context acceptor
.SH "Synopsis"
.sS
\*L#include <dce/gssapi.h>\*L
.sp .4v
	\*LOM_uint32  gss_init_sec_context\*L (
.nL
	\*LOM_uint32 *\*Vminor_status\*L,
.nL
	\*Lgss_cred_id_t \*Vclaimant_cred_handle\*L,
.nL
	\*Lgss_ctx_id_t *\*Vcontext_handle\*L
.nL
	\*Lgss_name_t \*Vtarget_name\*L,
.nL
	\*Lgss_OID \*Vmech_type\*L,
.nL
	\*Lint \*Vreq_flags\*L,
.nL
	\*Lint \*Vtime_req\*L,
.nL
	\*Lgss_channel_bindings_t \*Vinput_channel_bindings\*L,
.nL
	\*Lgss_buffer_t \*Vinput_token\*L,
.nL
	\*Lgss_OID *\*Vactual_mech_types\*L,
.nL
	\*Lgss_buffer_t \*Voutput_token\*L,
.nL
	\*int *\*Vret_flags\*L,
.nL
	\*LOM_int32 *\*Vtime_rec\*L)
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vclaimant_cred_handle\*O"
Specifies an optional handle for the credential.  To use the default
credential, supply \*LGSS_C_NO_CREDENTIAL\*O.  The credential handle
created refers to the DCE default login context.  The credential must
be either an \*LINITIATE\*O or \*LBOTH\*O type credential.
.LI "\*Vtarget_name\*O"
Specifies the name of the context acceptor.
.LI "\*Vmech_type\*O"
Specifies the security mechanism.  To use DCE
security, specify either of the following:
.ad l
.ML
.LI
\*LGSS_C_OID_DCE_KRBV5_DES\*O
.LI
\*LGSS_C_NULL_OID\*O
.LE
.ad b
.PP
To use Kerberos, specify \*LGSS_C_OID_KRBV5_DES\*O.
.nL
.ne 8
.LI "\*Vreq_flags\*O"
Specifies four independent flags, each of which requests that the
context support a service option.  The following symbolic names are
provided to correspond to each flag.  The symbolic names should be
logically ORed to form a bit-mask value.  
.VL
.LI "\*LGSS_C_DELEG_FLAG\*O"
.LI "TRUE"
Credentials were delegated to the context acceptor.
.LI "FALSE"
No credentials were delegated.
.LE 
.LI "\*LGSS_C_MUTUAL_FLAG\*O"
.VL
.LI "TRUE"
The context acceptor has been asked to authenticate itself.
.LI "FALSE"
The context initiator has not been asked to authenticates itself.
.LE
.LI "\*LGSS_C_REPLAY_FLAG\*O"
.VL
.LI "TRUE"
Replayed signed or sealed messages will be
detected.
.LI "FALSE"
Replayed messages will not be detected.
.LE
.LI "\*LGSS_C_SEQUENCE_FLAG\*O"
.VL
.LI "TRUE"
Out-of-sequence signed or sealed messages will be detected.
.LI "FALSE"
Out-of-sequence signed or sealed messages will not be detected.
.LE
.LI "\*Vtime_req\*O"
Specifies the desired number of seconds for which the context should
remain valid.  To specify the default validity period, use 0 (zero).
.LI "\*Vinput_chan_bindings\*O"
Specifies the bindings set by the context initiator.  Allows the
context initiator to bind the channel identification information
securely to the security context.
.LI "\*Vinput_token\*O"
Specifies the token received from the context acceptor. 
.PP
The first time the application calls the routine, you specify
\*LGSS_NO_BUFFER\*O.  Subsequent calls require a token from the context
acceptor.
.LE
.SS "Input/Output"
.VL
.LI "\*Vcontext_handle\*O"
Specifies the context handle for the new context.
.PP
The first time the application calls the routine, you specify
\*LGSS_C_NO_CONTEXT\*O.  Subsequent calls use the value returned by the
first call.
.LE
.SS "Output"
.VL
.LI "\*Vactual_mech_type\*O"
Returns one of the following values indicating the security mechanism:
.ad l
.ML
.LI
\*LGSS_C_OID_DCE_KRBV5_DES\*O for DCE security
.LI
\*LGSS_C_OID_KRBV5_DES\*O for Kerberos
.LE
.ad b
.LI "\*Voutput_token\*O"
Returns the token to send to the context acceptor.
.PP
If the length field of the returned buffer is 0 (zero), no token is
sent.
.LI "\*Vret_flags\*O"
Returns six independent flags, each of which indicates that the
context supports a service option.  The following symbolic names are
provided to correspond to each flag:
.VL
.LI "\*LGSS_C_DELEG_FLAG\*O"
.VL
.LI "TRUE"
Credentials were delegated to the context acceptor.
.LI "FALSE"
No credentials were delegated.
.LE 
.LI "\*LGSS_C_MUTUAL_FLAG\*O"
.VL
.LI "TRUE"
The context acceptor has been asked to authenticate itself.
.LI "FALSE"
The context acceptor has not been asked to authenticate itself.
.LE
.LI "\*LGSS_C_REPLAY_FLAG\*O"
.VL
.LI "TRUE"
Replayed signed or sealed messages will be detected.
.LI "FALSE"
Replayed messages will not be detected.
.LE
.LI "\*LGSS_C_SEQUENCE_FLAG\*O"
.VL
.LI "TRUE"
Out-of-sequence signed or sealed messages will be detected.
.LI "FALSE"
Out-of-sequence signed or sealed messages will not be detected.
.LE
.LI "\*LGSS_C_CONF_FLAG\*O"
.VL
.LI "TRUE"
Confidentiality service can be invoked by calling the
\*Lgss_seal(\|)\*O routine.
.LI "FALSE"
No confidentiality service is available.  (Confidentiality can be
provided using the \*Lgss_seal(\|)\*O routine, which provides only message
encapsulation, data-origin authentication, and integrity services.)
.LE
.LI "\*LGSS_C_INTEG_FLAG\*O"
.VL
.LI "TRUE"
Integrity service can be invoked by calling either the \*Lgss_sign(\|)\*O or
\*Lgss_seal(\|)\*O routine.
.LI "FALSE"
Integrity service for individual messages is unavailable.
.LE
.LE
.LI "\*Vtime_rec\*O"
Returns the number of seconds for which the context will be valid.  If
the mechanism does not support credential expiration, the routine
returns the value \*LGSS_C_INDEFINITE\*O.  If the credential expiration
time is not required, specify NULL.
.LI "\*Vminor_status\*O"
Returns a status code from the security mechanism.
.LE
.nL
.ne 1.5i
.SH "Description"
The \*Lgss_init_sec_context(\|)\*O routine is the first step in the
establishment of a security context between the context initiator and
the context acceptor.  To ensure the portability of the application, use
its default credential by supplying \*LGSS_C_NO_CREDENTIAL\*O to the
\*Vclaimant_cred_handle\*O parameter.  Specify an explicit credential
when the application needs an additional credential; for example, to use
delegation.
.PP
.ne 8
The first time the application calls the
\*Lgss_init_sec_context(\|)\*O routine, specify the \*Vinput_token\*O
parameter as \*LGSS_NO_BUFFER\*O.  Calls to the routine can return an
\*Voutput_token\*O for transfer to the context acceptor.   The context
acceptor presents the token to the \*Lgss_accept_sec_context(\|)\*O
routine.
.PP
If the context initiator does not require a token,
\*Lgss_init_sec_context(\|)\*O sets the length field of the
\*Voutput_token\*O argument to 0 (zero).
.PP
To complete establishing the context, the calling application can
require one or more reply tokens from the context acceptor.  If
the application requires reply tokens, the \*Lgss_init_sec_context(\|)\*O
routine returns a status value of \*LGSS_S_CONTINUE_NEEDED\*O.  The
application calls the routine again when the reply token is
received from the context acceptor and passes the token to the
\*Lgss_init_sec_context(\|)\*O routine via the \*Vinput_token\*O
parameter.
.PP
The values returned by the \*Vret_flags\*O and \*Vtime_rec\*O
parameters are not defined unless the routine returns the status
\*LGSS_S_COMPLETE\*O.
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*LGSS_S_COMPLETE\*O"
The routine was completed successfully.
.LI "\*LGSS_S_BAD_BINDINGS\*O"
The \*Vinput_token\*O parameter contains different channel
bindings from those specified with the \*Vinput_chan_bindings\*O
parameter.
.LI "\*LGSS_S_BAD_NAMETYPE\*O"
The \*Vtarget_name\*O parameter contains an invalid
or unsupported name type.
.LI "\*LGSS_S_BAD_NAME\*O"
The \*Vtarget_name\*O parameter was incorrectly formed.
.LI "\*LGSS_S_BAD_SIG\*O"
Indicates either that the \*Vinput_token\*O parameter contains an invalid
signature or that the \*Vinput_token\*O parameter contains a signature
that could not be verified.
.LI "\*LGSS_S_CONTINUE_NEEDED\*O"
To complete the context, the
\*Lgss_init_sec_context(\|)\*O routine must be called again with a token
required from the context acceptor.
.LI "\*LGSS_S_CREDENTIALS_EXPIRED\*O"
The referenced credentials have expired.
.LI "\*LGSS_S_DEFECTIVE_CREDENTIAL\*O"
Consistency checks performed on the credential failed.
.LI "\*LGSS_S_DEFECTIVE_TOKEN\*O"
Consistency checks performed on
the \*Vinput_token\*O parameter failed.
.LI "\*LGSS_S_DUPLICATE_TOKEN\*O"
The \*Vinput_token\*O parameter was already
processed.  This is a fatal error that occurs during context
establishment.
.LI "\*LGSS_S_FAILURE\*O"
The routine failed.  See the \*Vminor_status\*O parameter return
value for more information.
.LI "\*LGSS_S_NO_CONTEXT\*O"
The supplied context handle did not refer to a valid
context.
.LI "\*LGSS_S_OLD_TOKEN\*O"
The \*Vinput_token\*O parameter was too old.  This is a
fatal error that occurs during context establishment.
.LE
.nL
.ne 1.5i
.SH "Related Information"
.ad l
Functions:
\*Lgss_accept_sec_context(3sec)\*O, \*Lgss_delete_sec_context(3sec)\*O.
.ad b
