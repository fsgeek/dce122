...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: sec_rgy_attr_lookup_no_expand.3sec,v $
...\" Revision 1.1.4.3  1996/11/19  18:59:44  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:52:52  wardr]
...\"
...\" Revision 1.1.4.2  1996/09/30  19:14:35  millett
...\" 	{def,13229,R1.2.2}
...\" 	clarifying uninitialized cursor
...\" 	[1996/09/30  19:14:17  millett]
...\" 
...\" Revision 1.1.4.1  1996/05/13  19:06:12  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:58:50  wardr]
...\" 
...\" Revision 1.1.2.5  1995/06/21  18:24:28  buckler
...\" 	More 1.1 edits.
...\" 	[1995/06/21  18:15:15  buckler]
...\" 
...\" Revision 1.1.2.4  1995/06/21  13:22:12  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/19  14:58:55  buckler]
...\" 
...\" Revision 1.1.2.3  1994/10/19  20:17:26  neilson
...\" 	CR 10326 - Automatic fix to name of intro ref page
...\" 	[1994/10/19  20:11:45  neilson]
...\" 
...\" Revision 1.1.2.2  1994/10/06  20:41:50  rrizzo
...\" 	expand copyright
...\" 	[1994/10/06  20:08:18  rrizzo]
...\" 
...\" Revision 1.1.2.1  1994/08/15  16:25:24  millette
...\" 	(enh,10056R1.1)
...\" 	Created for ERA
...\" 	[1994/08/15  16:25:06  millette]
...\" 
...\" $EndLog$
.TH sec_rgy_attr_lookup_no_expand 3sec
...\" .iX "\*Lsec_rgy_attr_lookup_no_expand(\|)\*O"
...\" .iX "calls" "\*Lsec_rgy_attr_lookup_no_expand(\|)\*O"
.SH "Name"
\*Lsec_rgy_attr_lookup_no_expand\*O - Reads a specified 
object's attribute(s), without expanding attribute sets into individual 
member attributes
.SH "Synopsis"
.sS
\*L#include <dce/sec_rgy_attr.h>
.sp .4v
\*Lvoid sec_rgy_attr_lookup_no_expand(
.nL
	\*Lsec_rgy_handle_t \*Vcontext\*L,
.nL       
	\*Lsec_rgy_domain_t \*Vname_domain\*L,
.nL
	\*Lsec_rgy_name_t \*Vname\*L,
.nL
	\*Lsec_attr_cursor_t *\*Vcursor\*L,
.nL
	\*Lunsigned32 \*Vnum_attr_keys\*L,
.nL
	\*Lunsigned32 \*Vspace_avail\*L,
.nL
	\*Luuid_t \*Vattr_keys\*O[\|]\*L,
.nL
	\*Lunsigned32 *\*Vnum_returned\*L,
.nL
	\*Lsec_attr_t \*Vattr_sets\*O[\|]\*L,
.nL
	\*Lunsigned32 *\*Vnum_left\*L,
.nL
	\*Lerror_status_t \*Vstatus\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vcontext\*O"
An opaque handle bound to a registry server.  Use
\*Lsec_\%rgy_\%site_\%open(\|)\*O to acquire a bound handle.  
.LI "\*Vname_domain\*O"
A value of type \*Lsec_rgy_domain_t\*O that identifies the domain in 
which the named object resides.  The valid values are as follows:
.VL
.LI "\*Lsec_rgy_domain_principal\*O"
The \*Vname\*O identifies a principal.
.LI "\*Lsec_rgy_domain_group\*O"
The \*Vname\*O identifies a group.
.LI "\*Lsec_rgy_domain_org\*O"
The \*Vname\*O  identifies an organization.
.LE
.PP
This parameter is ignored if \*Vname\*O is \*Lpolicy\*O or \*Lreplist\*O.
.nL
.ne 8
.LI "\*Vname\*O"
A pointer to a \*Lsec_rgy_name_t\*O character string
containing the name
of the person, group, or organization to which the attribute is attached.
.LI "\*Vnum_attr_keys\*O"
An unsigned 32-bit integer that specifies the number of elements in the 
the \*Vattr_keys\*O[\|]\*O array.  If \*Vnum_attr_keys\*O is set 
to 0 (zero), all attribute sets that the caller is authorized to see 
are returned.
.LI "\*Vspace_avail\*O
An unsigned 32-bit integer that specifies the size of the \*Vattrs_sets\*O[\|]\*O array.
.LI "\*Vattr_keys\*O[\|]\*O"
An array of values of type \*Luuid_t\*O that specify the UUIDs of the 
attribute sets to be returned.  
The size of the \*Vattr_keys\*O[\|]\*O array is determined by the 
\*Vnum_attr_keys\*O parameter.
.LE
.SS "Input/Output"
.VL
.LI "\*Vcursor\*O"
A pointer to a \*Lsec_attr_cursor_t\*O.
As an input parameter, \*Vcursor\*O is a pointer to a \*Lsec_attr_cursor_t\*O that 
is initialized by the \*Lsec_rgy_attr_cursor_init\*O.  
As an output parameter, \*Vcursor\*O is a pointer to a \*Lsec_attr_cursor_t\*O that 
is positioned past the attribute sets returned in this call.  
.LE
.SS "Output"
.VL
.LI "\*Vnum_returned\*O"
A pointer to a 32-bit integer that specifies the number of attribute sets 
returned in the \*Vattrs\*O[\|]\*O array.
.LI "\*Vattr_sets\*O
An array of values of type \*Lsec_attr_t\*O that 
contains the attribute sets retrieved by UUID.   
The size of the array is determined by 
\*Vspace_avail\*O and the length by \*Vnum_returned\*O.  
.LI "\*Vnum_left\*O
A pointer to a 32-bit unsigned integer that supplies the number of attribute 
sets that were found but could  
not be returned because of 
space constraints in the \*Vattr_sets\*O[\|]\*O buffer.  To ensure that all the 
attributes will be returned, increase the size of the \*Vattr_sets\*O[\|]\*O 
array by increasing the size of \*Vspace_avail\*O and \*Vnum_returned\*O.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
the routine returns \*Lerror_status_ok\*O.
Otherwise, it returns an error.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lsec_rgy_attr_lookup_no_expand(\|)\*O routine 
reads attribute sets.  This routine is similar to the 
\*Lsec_rgy_attr_lookup_by_id(\|)\*O routine with one exception:  
for attribute sets, the \*Lsec_rgy_attr_lookup_by_id(\|)\*O routine
expands attribute sets and returns a \*Lsec_attr_t\*O 
for each member in the set.   This call does not.  Instead 
it returns a \*Lsec_attr_t\*O 
for the set instance only.
The \*Lsec_\%rgy_\%attr_\%lookup_\%no_\%expand(\|)\*O routine 
is useful for programmatic access.
.PP
\*Vcursor\*O is a cursor of type \*Lsec_attr_cursor_t\*O that 
establishes the point 
in the attribute set list from which the server should start 
processing the query.  Use the \*Lsec_rgy_attr_cursor_init\*O 
function to initialize \*Vcursor\*O.  
.zA "def,13229,R1.2.2,clarify uninit. behavior"
If \*Vcursor\*O 
is uninitialized, the behavior is undefined.
.zZ "def,13229,R1.2.2,clarify uninit. behavior"
.PP
The \*Vnum_left\*O parameter contains the number of 
attribute sets that were found but could not be returned 
because of space constraints of the \*Vattr_sets\*O[\|]\*O array. 
(Note that this number may be inaccurate if 
the target server allows updates between successive queries.)
To obtain all of the remaining attribute sets, set the size of the 
\*Vattr_sets\*O[\|]\*O array so that it is large enough to hold the number of 
attributes listed in \*Vnum_left\*O.
.SS "Permissions Required"
.PP
The \*Lsec_rgy_attr_lookup_no_expand(\|)\*O routine requires 
the query permission 
set for each attribute type identified in the \*Vattr_keys\*O[\|]\*O array. 
These permissions are defined as part of the ACL manager set in the 
schema entry of each attribute type. 
.SH "Files"
.VL
.LI "\*L/usr/include/dce/sec_rgy_attr.idl\*O"
The \*Lidl\*O file from which \*Ldce/sec_rgy_attr.h\*O was derived.
.LE
..." .SH "EXAMPLES"
..." .PP
..." EXAMPLES????????
..." .PP
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Linvalid/unsupported attribute type\*O"
.LI "\*Lregistry server unavailable\*O"
.LI "\*Lunauthorized\*O
.LI "\*Lerror_status_ok\*O"
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsec_intro(3sec)\*O, 
\*Lsec_rgy_attr_lookup_by_id(3sec)\*O,
\*Lsec_rgy_attr_lookup_by_name(3sec)\*O.
.ad b
