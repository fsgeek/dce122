...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: sec_rgy_attr_update.3sec,v $
...\" Revision 1.1.6.2  1996/11/19  19:00:01  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:53:05  wardr]
...\"
...\" Revision 1.1.6.1  1996/05/13  19:06:29  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:59:02  wardr]
...\" 
...\" Revision 1.1.4.2  1996/02/07  20:18:14  rcb
...\" 	R1.2.1: editorial pass following HP revision
...\" 	[1996/02/07  20:14:32  rcb]
...\" 
...\" Revision 1.1.4.1  1996/01/28  22:16:55  weir
...\" 	CR 13293: miscellaneous HP work
...\" 	[1996/01/28  22:15:51  weir]
...\" 
...\" Revision 1.1.2.5  1995/06/21  13:22:25  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/19  14:59:10  buckler]
...\" 
...\" Revision 1.1.2.4  1994/10/19  20:17:27  neilson
...\" 	CR 10326 - Automatic fix to name of intro ref page
...\" 	[1994/10/19  20:11:46  neilson]
...\" 
...\" Revision 1.1.2.3  1994/10/14  20:46:10  millette
...\" 	(enh, 10056, R1.1)
...\" 	HP edits
...\" 	[1994/10/14  20:45:46  millette]
...\" 
...\" Revision 1.1.2.2  1994/06/13  17:16:02  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:49:12  devobj]
...\" 
...\" Revision 1.1.2.1  1994/03/29  19:40:09  millette
...\" 	(enh, 10056, R1.1)
...\" 	Created for ERA
...\" 	[1994/03/29  19:39:49  millette]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" HP History:
...\"	HP revision /main/HPDCE02/1  1995/10/13  16:17 UTC  millett
...\" 	14502 fixes
...\" 
...\"	HP revision /main/millett_doc/1  1995/10/13  16:14 UTC  millett
...\" 	14502:  out_attrs array and space_avail reserved for future use.
...\" 
...\"	HP revision /main/1  1995/04/03  22:30 UTC  arh
...\" 	Add OSF doc sources.
...\" 
...\" 
...\" 
...\" 
...\" 
...\" 
.TH sec_rgy_attr_update 3sec
...\" .iX "\*Lsec_rgy_attr_update(\|)\*O"
...\" .iX "calls" "\*Lsec_rgy_attr_update(\|)\*O"
.SH "Name"
\*Lsec_rgy_attr_update\*O - Creates and updates attribute 
instances for a specified object
.SH "Synopsis"
.sS
\*L#include <dce/sec_rgy_attr.h>
.sp .4v
void sec_rgy_attr_update (
.nL
	\*Lsec_rgy_handle_t \*Vcontext\*L,
.nL
	\*Lsec_rgy_domain_t \*Vname_domain\*L,
.nL
	\*Lsec_rgy_name_t \*Vname\*L,
.nL
	\*Lunsigned32 \*Vnum_to_write\*L,
.nL
	\*Lunsigned32 \*Vspace_avail\*L,
.nL
	\*Lsec_attr_t \*Vin_attrs\*O[\|]\*L,
.nL
	\*Lunsigned32 \*V*num_returned\*L,
.nL
 	\*Lsec_attr_t \*Vout_attrs\*O[\|]\*L,
.nL
	\*Lunsigned32 \*V*num_left\*L,
.nL
	\*Lsigned32 *\*Vfailure_index\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);	
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vcontext\*O"
An opaque handle bound to a registry server.  Use
\*Lsec_\%rgy_\%site_\%open(\|)\*O to acquire a bound handle.
.LI "\*Vname_domain\*O"
A value of type \*Lsec_rgy_domain_t\*O that identifies the registry domain in 
which the object specified 
by \*Vname\*O resides.  
The valid values are as follows:
.VL
.LI "\*Lsec_rgy_domain_person\*O"
The name identifies a principal.
.LI "\*Lsec_rgy_domain_group\*O"
The name identifies a group.
.LI "\*Lsec_rgy_domain_org\*O"
The name identifies an organization.
.LE
.PP 
This parameter is ignored if \*Vname\*O is \*Lpolicy\*O or \*Lreplist\*O.
.LI "\*Vname\*O"
A character string of type \*Lsec_rgy_name_t\*O
specifying the name
of the person, group, or organization to which the attribute is attached.
.nL
.LI "\*Vnum_to_write\*O"
A 32-bit unsigned integer that specifies the number of elements in 
the \*Vin_attrs\*O array.  This integer must be greater than 0 (zero).
.LI "\*Vspace_avail\*O"
Set this parameter to zero. 
It is a 32-bit unsigned integer that specifies the size 
of the \*Vout_attrs\*O array.  
Use of this parameter and its associated \*Vout_attrs\*O array 
is reserved for future use by update trigger servers. 
.LI "\*Vin_attrs[]\*O"
An array of values of type \*Lsec_attr_t\*O that specifies the 
attribute instances to be updated.  The size of the array is determined by 
\*Vnum_to_write\*O.
.LE 
.SS "Output"
.VL
.LI "\*Vnum_returned\*O"
A pointer to an unsigned 32-bit integer that specifies the number of 
attribute instances returned in the \*Vout_attrs\*O[\|]\*O array.
.LI "\*Vout_attrs\*O"
Reserved for future use by update trigger servers.
...\" An array of values of type \*Lsec_attr_t\*O that specifies the updated
...\" attribute instances.  Not that only if these attributes were processed
...\" by an update attribute trigger server will they differ from the attributes 
...\" in the \*Vin_attrs[]\*O array.  The size of the array is determined by 
...\" \*Vspace_avail\*O and the length by \*Vnum_returned\*O.
.LI "\*Vnum_left\*O
A pointer to an unsigned 32-bit integer that supplies the number of 
attributes that could not be returned because of 
space constraints in the \*Vout_attrs\*O[\|]\*O buffer.  To ensure that all the 
attributes will be returned, increase the size of the \*Vout_attrs\*O[\|]\*O 
array by increasing the size of \*Vspace_avail\*O and \*Vnum_returned\*O.
.LI "\*Vfailure_index\*O"
In the event of an error, \*Vfailure_index\*O is a pointer to 
the element in the \*Vin_attrs\*O[\|]\*O array that caused the update to 
fail.  If the failure cannot be attributed to 
a specific attribute, the value of \*Vfailure_index\*O is \*L-1\*O.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
the routine returns \*Lerror_status_ok\*O.
Otherwise, it returns an error.
.LE
.SH "Description"
.PP
The \*Lsec_rgy_attr_update(\|)\*O routine creates new attribute instances 
and updates 
existing attribute instances attached to a 
object specified by name and registry domain.  The instances to be created or 
updated are 
passed as an array of \*Lsec_attr_t\*O data types.
This is an atomic operation:  if the creation of any attribute in the 
\*Vin_attrs\*O[\|]\*O 
array fails, all updates are aborted.  The attribute causing the update to 
fail is identified in 
\*Vfailure_index\*O.  If the failure cannot be attributed to a given attribute, 
\*Vfailure_index\*O contains \*L-1\*O.
.PP
The \*Vin_attrs\*O array, which specifies the attributes to be created, 
contains values of type \*Lsec_attr_t\*O.  These values are as follows:
.VL
.LI "\*Lattr_id\*O"
A Universal Unique Identifier (UUID) that identifies the attribute type
.LI "\*Lattr_value\*O"
Values of \*Lsec_attr_value_t\*O that specify the 
attribute's encoding type and values.
.LE
.PP
If an attribute instance already exists which is identical 
in both \*Lattr_id\*O and \*Lattr_value\*O to an attribute 
specified in \*Vin_attrs\*O, the existing attribute information is 
overwritten by the new information.  For multivalued attributes, 
every instance with the same \*Lattr_id\*O is overwritten with the supplied 
values.  
.PP
If an attribute instance does not exist, it is created.
.PP
For multivalued attributes, 
because every instance of the multivalued attribute is 
identified by the same 
UUID, every instance is overwritten with the supplied 
value.  To change only one of the values, you must supply the values 
that should be unchanged as well as the new value. 
.P
To create instances of multivalued attributes, 
create individual \*Lsec_attr_t\*O 
data types to define each multivalued attribute 
instance and then pass all of them in in the 
input array.
...\" DESCRIBES OUT_ATTRS ARRAY.  PUT BACK IN IF UPDATE TRIGGER 
...\" SERVERS ARE IMPLEMENTED.
...\" If an input attribute is associated with an update 
...\" attribute trigger server, 
...\" the attribute trigger server is invoked (by 
...\" the \*Lsec_attr_trig_update(\|)\*O function) 
...\" and the \*Vin_attr[]\*O array is supplied as input.  
...\" The output attributes from the update attribute trigger server are stored 
...\" in the registry database and returned in the \*Vout_attrs[]\*O array.  
...\" Note that the update attribute trigger server may modify the values 
...\" before they are 
...\" used to update the registry database.  This is the only circumstance under 
...\" which the values in the \*Vout_attrs[]\*O array differ 
...\" from the values in the 
...\" \*Vin_attrs[]\*O array.
.SS "Permissions Required"
.PP
The \*Lsec_rgy_attr_update(\|)\*O routine requires
the \*LU\*O (\*LUpdate\*O) permission 
set for each attribute type identified in the \*Vin_attrs\*O[\|]\*O array. 
These permissions are defined as part of the access control list (ACL)
manager set in the schema entry of each attribute type. 
.SH "Files"
.VL
.LI "\*L/usr/include/dce/sec_rgy_attr.idl\*O"
The \*Lidl\*O file from which \*Ldce/sec_rgy_attr.h\*O was derived.
.LE
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lunauthorized\*O"
.LI "\*Ldatabase read only\*O"
.LI "\*Lserver unavailable\*O"
.LI "\*Linvalid/unsupported attribute type\*O"
.LI "\*Linvalid encoding type\*O"
.LI "\*Lvalue not unique\*O"
.LI "\*Lattribute instance already exists\*O"
.LI "\*Ltrigger server unavailable\*O"
.LI "\*Lsite read only\*O"
.LI "\*Lerror_status_ok\*O"
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsec_intro(3sec)\*O,
\*Lsec_rgy_attr_delete(3sec)\*O, 
\*Lsec_rgy_attr_test_and_update(3sec)\*O.
.ad b
