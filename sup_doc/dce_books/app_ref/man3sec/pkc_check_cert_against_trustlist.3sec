...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: pkc_check_cert_against_trustlist.3sec,v $
...\" Revision 1.1.2.5  1996/12/20  21:59:33  weir
...\" 	Final updates
...\" 	[1996/12/20  21:58:05  weir]
...\"
...\" Revision 1.1.2.4  1996/12/17  20:11:05  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:08:16  damon]
...\" 
...\" Revision 1.1.2.3  1996/11/19  18:56:36  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:49:41  wardr]
...\" 
...\" Revision 1.1.2.2  1996/11/18  19:57:11  weir
...\" 	No change
...\" 	[1996/11/18  19:55:07  weir]
...\" 
...\" Revision 1.1.2.1  1996/10/15  21:10:27  weir
...\" 	Initial submission
...\" 	[1996/10/15  21:09:08  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
.TH pkc_check_cert_against_trustlist 3sec
...\" 
.SH "Name"
\*Lpkc_check_cert_against_trustlist\*O - Checks specified certificate against specified list of trusted keys
...\" 
...\" 
.SH "Synopsis"
.sS
\*L#include <pkc_certs.h>\*O
.sp .4v
\*Lunsigned32 pkc_check_cert_against_trustlist(\*O
.nL
	\*Lpkc_trust_list_t * \*Vtrust_list\*L,
.nL
	\*Lconst Certificate * \*Vcert\*L,
.nL
	\*Lint \*Vrevoked_certs_permitted\*L);
.sE
.nL
...\" 
.ne 1.5i
...\" 
...\" 
...\" 
...\" 
.SH "Parameters"
...\" 
.SS "Input"
...\" 
.VL 1.5i
.LI "\*Vtrust_list\*O"
Specifies list of trusted keys to check certificate against.
...\" 
.LI "\*Vcert\*O"
Specifies certificate to check.
...\" 
.LI "\*Vrevoked_certs_permitted\*O"
Specifies whether revoked certificates should still be trusted for dates
prior to their revocation date.
...\" 
.LE
...\" 
...\" .SS "Output"
...\" 
...\" .VL
...\" .LI "\*V\*O"
...\" 
...\" 
...\" .LE
...\" 
.nL
.ne 1.5i
...\" 
.SH "Description"
.PP
\*Lpkc_check_cert_against_trustlist(3sec)\*O checks the specified certificate against
the specified list of trusted keys. If the certificate is valid and can be verified
from the trust list, its content is added to the trust list. \*Lrevoked_certs_permitted\*O
is a flag that specifies whether revoked certificates should still be trusted for dates
prior to their revocation date.
.VL "\*LNote:\*O"
This routine is a C++ interface. C++ must be used to perform direct certificate
manipulation.
.LE
...\" 
.PP
See also the contents of the \*Lasn.h\*O and \*Lx509.h\*O
header files, which define some of the basic types used by the low-level certificate
manipulation routines.
...\" 
...\" 
.ne 1.5i
.SH "Return Values"
...\" 
.VL 1i
.LI "\*Lpkc_s_success\*O"
Operation successfully completed.
...\" 
.LE
...\" 
...\" 
...\" 
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Errors"
.PP
Refer to the \*EOSF DCE Problem Determination Guide\*O for
complete descriptions of all error messages.
...\" 
...\" 
.SH "Related Information"
.PP
.ad l
Functions:
\*Lpkc_add_trusted_key(3sec)\*O,
\*Lpkc_lookup_key_in_trustlist(3sec)\*O,
\*Lpkc_lookup_keys_in_trustlist(3sec)\*O,
\*Lpkc_prune_trustlist(3sec)\*O,
\*Lpkc_revoke_certificate(3sec)\*O,
\*Lpkc_revoke_certificates(3sec)\*O.
Classes:
\*Lpkc_ca_key_usage.class(3sec)\*O,
\*Lpkc_constraints.class(3sec)\*O,
\*Lpkc_generic_key_usage.class(3sec)\*O,
\*Lpkc_key_policies.class(3sec)\*O,
\*Lpkc_key_policy.class(3sec)\*O,
\*Lpkc_key_usage.class(3sec)\*O,
\*Lpkc_name_subord_constraint.class(3sec)\*O,
\*Lpkc_name_subord_constraints.class(3sec)\*O,
\*Lpkc_name_subtree_constraint.class(3sec)\*O,
\*Lpkc_name_subtree_constraints.class(3sec)\*O,
\*Lpkc_pending_revocation.class(3sec)\*O,
\*Lpkc_revocation.class(3sec)\*O,
\*Lpkc_revocation_list.class(3sec)\*O,
\*Lpkc_trust_list.class(3sec)\*O,
\*Lpkc_trust_list_element.class(3sec)\*O,
\*Lpkc_trusted_key.class(3sec)\*O.
.ad b 
...\" 
...\" 
...\" 
...\" unsigned32 pkc_check_cert_against_trustlist(
...\"                          pkc_trust_list_t * trust_list,
...\"                          const Certificate * cert,
...\"                          int revoked_certs_permitted);
...\" // Checks the specified certificate against the specified list of trusted keys. 
...\" // If the certificate is valid and can be verified from the trustlist, its
...\" // content is added to the trustlist.  revoked_certs_permitted is a flag
...\" // that say whether revoked certificates should still be trusted for dates 
...\" // prior to their revocation date.
...\" 
