...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: sec_rgy_attr_lookup_by_id.3sec,v $
...\" Revision 1.1.6.3  1996/11/19  18:59:41  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:52:50  wardr]
...\"
...\" Revision 1.1.6.2  1996/09/30  19:13:47  millett
...\" 	{def,13229,R1.2.2}
...\" 	clarifying uninitialized cursor
...\" 	[1996/09/30  19:13:18  millett]
...\" 
...\" Revision 1.1.6.1  1996/05/13  19:06:09  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:58:48  wardr]
...\" 
...\" Revision 1.1.4.2  1996/02/07  20:18:10  rcb
...\" 	R1.2.1: editorial pass following HP revision
...\" 	[1996/02/07  20:14:10  rcb]
...\" 
...\" Revision 1.1.4.1  1996/01/28  22:16:50  weir
...\" 	CR 13293: miscellaneous HP work
...\" 	[1996/01/28  22:15:47  weir]
...\" 
...\" Revision 1.1.2.5  1995/06/21  13:22:10  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/19  14:58:53  buckler]
...\" 
...\" Revision 1.1.2.4  1994/10/14  20:40:39  millette
...\" 	(enh, 10056, R1.1)
...\" 	HP edits
...\" 	[1994/10/14  20:40:05  millette]
...\" 
...\" Revision 1.1.2.3  1994/08/15  16:22:40  millette
...\" 	(enh, 10056, R1.1)
...\" 	Updated with spec changes
...\" 	[1994/08/15  16:22:19  millette]
...\" 
...\" Revision 1.1.2.2  1994/06/13  17:15:52  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:48:56  devobj]
...\" 
...\" Revision 1.1.2.1  1994/03/29  19:15:24  millette
...\" 	(enh, 10056, R1.1)
...\" 	Created for ERA
...\" 	[1994/03/29  19:14:39  millette]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" HP History:
...\"	HP revision /main/HPDCE02/2  1995/07/27  19:37 UTC  millett
...\" 	fixes for 15530
...\" 
...\"	HP revision /main/HPDCE02/millett_mothra/1  1995/07/26  19:50 UTC  millett
...\" 	CHFts15521: clarifying resource allocation routine description
...\" 
...\"	HP revision /main/HPDCE02/1  1995/06/15  21:00 UTC  wesfrost
...\" 	Add reference
...\" 
...\"	HP revision /main/1  1995/04/03  22:28 UTC  arh
...\" 	Add OSF doc sources.
...\" 
...\" 
...\" 
...\" 
...\" 
...\" 
.TH sec_rgy_attr_lookup_by_id 3sec
...\" .iX "\*Lsec_rgy_attr_lookup_by_id(\|)\*O"
...\" .iX "calls" "\*Lsec_rgy_attr_lookup_by_id(\|)\*O"
.SH "Name"
\*Lsec_rgy_attr_lookup_by_id\*O - Reads a specified 
object's attributes, expanding attribute sets into individual 
member attributes
.SH "Synopsis"
.sS
\*L#include <dce/sec_rgy_attr.h>
.sp .4v
\*Lvoid sec_rgy_attr_lookup_by_id (
.nL
	\*Lsec_rgy_handle_t \*Vcontext\*L,
.nL
	\*Lsec_rgy_domain_t \*Vname_domain\*L,
.nL
	\*Lsec_rgy_name_t \*Vname\*L,
.nL
	\*Lsec_attr_cursor_t \*V*cursor\*L,
.nL
	\*Lunsigned32 \*Vnum_attr_keys\*L,
.nL
	\*Lunsigned32 \*Vspace_avail\*L,
.nL
	\*Lsec_attr_t \*Vattr_keys\*O[\|]\*L,
.nL
	\*Lunsigned32 \*V*num_returned\*L,
.nL
	\*Lsec_attr_t \*Vattrs\*O[\|]\*L,
.nL
	\*Lunsigned32 \*V*num_left\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);	
.sE
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vcontext\*O"
An opaque handle bound to a registry server.  Use
\*Lsec_\%rgy_\%site_\%open(\|)\*O to acquire a bound handle.
.LI "\*Vname_domain\*O"
A value of type \*Lsec_rgy_domain_t\*O that identifies the registry domain in 
which the object specified by \*Vname\*O resides.  
The valid values are as follows:
.VL
.LI "\*Lsec_rgy_domain_person\*O"
The name identifies a principal.
.LI "\*Lsec_rgy_domain_group\*O"
The name identifies a group.
.LI "\*Lsec_rgy_domain_org\*O"
The name identifies an organization.
.LE
.PP
This parameter is ignored if \*Vname\*O is \*Lpolicy\*O or \*Lreplist\*O.
.LI "\*Vname\*O"
A pointer to a \*Lsec_rgy_name_t\*O character string
containing the name
of the person, group, or organization to which the attribute is attached.
.LI "\*Vnum_attr_keys\*O"
An unsigned 32-bit integer that specifies the number of elements 
in the \*Vattr_keys\*O array.  Set this parameter to 0 (zero) to 
return all of the object's attributes that the caller is authorized to see.  
.LI "\*Vspace_avail\*O"
An unsigned 32-bit integer that specifies the size of the 
\*Vattr_keys\*O array.
.LI "\*Vattr_keys\*O[\|]\*O"
An array of values of type \*Lsec_attr_t\*O that identify the 
attribute type ID of the attribute instance(s) to be looked up.  
If the attribute type is associated with a query attribute trigger, the 
\*Lsec_attr_t\*O \*Lattr_value\*O field can be used to pass in optional 
information required by the attribute trigger query.  If no information is
to be passed in the \*Lattr_value\*O field (whether the type
indicates an attribute trigger query or not), set the attribute's 
encoding type to \*Lsec_\%rgy_\%attr_\%enc_\%void\*O.
.PP
The size of the \*Vattr_keys\*O[\|]\*O array is determined by the 
\*Vnum_attr_keys\*O parameter.
...\" 
...\" HOW IS IT SIZED IF NUM_ATTR_KEYS IS SET TO 0 TO RETURN ALL ATTRIBUTES??
...\" 
.LE 
.nL
.ne 6
.SS "Input/Output"
.VL
.LI "\*Vcursor\*O"
A pointer to a \*Lsec_attr_cursor_t\*O.  
As an input parameter, \*Vcursor\*O is a pointer to a \*Lsec_attr_cursor_t\*O 
initialized by a \*Lsec_\%rgy_\%attr_\%srch_\%cursor_\%init\*O call.  
As an output parameter, \*Vcursor\*O is a pointer to a 
\*Lsec_attr_cursor_t\*O that is positioned past components 
returned in this call.
.LE 
.SS "Output"
.VL
.LI "\*Vnum_returned\*O"
A pointer to a 32-bit unsigned integer that specifies the number of 
attribute instances returned in the \*Vattrs\*O[\|]\*O array.
.LI "\*Vattrs\*O"
An array of values of type \*Lsec_attr_t\*O that 
contains the attributes retrieved by Universal Unique Identifier (UUID). 
The size of the array is determined by 
\*Vspace_avail\*O and the length by \*Vnum_returned\*O.
.LI "\*Vnum_left\*O
A pointer to a 32-bit unsigned integer that supplies the number of attributes 
that were found but could  not be returned because of 
space constraints in the \*Vattrs\*O[\|]\*O buffer.  To ensure that all the 
attributes will be returned, increase the size of the \*Vattrs\*O[\|]\*O 
array by increasing the size of \*Vspace_avail\*O and \*Vnum_returned\*O.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
the routine returns \*Lerror_status_ok\*O, or, if the requested 
attributes were not available, it returns the message \*Lnot_all_available\*O.
Otherwise, it returns an error.
.LE
.SH "Description"
.PP
The \*Lsec_rgy_attr_lookup_by_id(\|)\*O function reads those attributes specified 
by UUID for an object specified by name.  This routine is similar to the 
\*Lsec_rgy_attr_lookup_no_expand(\|)\*O routine with one exception:  
for attribute sets, the \*Lsec_rgy_attr_lookup_no_expand(\|)\*O routine returns 
a \*Lsec_attr_t\*O 
for the set instance only;  
it does not expand the set and return a \*Lsec_attr_t\*O  
for each member in the set.
This call expands attribute sets and returns a \*Lsec_attr_t\*O 
for each member in the set. 
.PP
If the \*Vnum_attr_keys\*O parameter is set to 0 (zero), all 
of the object's attributes that the caller is authorized to see are 
returned.  
This routine is useful for programmatic access.
.PP
After a successful call, free the resources allocated by this routine 
for each attribute returned in the \*Lattrs[\|]\*O parameter 
with the \*Lsec_attr_util_inst_free_ptrs(\|)\*O routine.
.PP
For multivalued attributes, the call returns 
a \*Lsec_attr_t\*O for each value as an individual attribute instance.  
For attribute sets, the call returns a \*Lsec_attr_t\*O for each member 
of the set; it does not return the set instance.
.PP
The \*Vattr_keys\*O[\|]\*O array, which specifies the attributes to be returned, 
contains values of type \*Lsec_attr_t\*O.  These values consist of
the following:
.ML
.LI
\*Lattr_id\*O, a UUID that identifies the attribute type
.LI
\*Lattr_value\*O, values of \*Lsec_attr_value_t\*O that specify the 
attribute's encoding type and values.
.LE
.PP
Use the \*Lattr_id\*O field of each \*Vattr_keys\*O array element, 
to specify the UUID that identifies the attribute type to be 
returned. 
.PP 
.ne 4
If the attribute instance to be read is not 
associated with a query trigger or no additional information is
required by the query trigger, an attribute UUID is all that is required.  
For these attribute instances, supply the attribute 
UUID in the input array and 
set the attribute encoding (in \*Lsec_attr_encoding_t\*O)  
to \*Lsec_\%attr_\%enc_\%void\*O.   
.P
If the attribute instance to be read is associated with a query attribute 
trigger that 
requires additional information before it can process the query request, 
use a \*Lsec_attr_value_t\*O to supply the requested information, as
follows:
.AL
.LI
Set the \*Lsec_attr_encoding_t\*O to an encoding type that is 
compatible with the information required by the query attribute trigger.  
.LI
Set the \*Lsec_attr_value_t\*O to hold the required information.
.LE
.PP
Note that if you set \*Vnum_attr_keys\*O to zero to return all of the 
object's attributes and that attribute is associated with a query attribute 
trigger, the attribute trigger will be called with no input attribute 
information (that would normally have been passed in via the 
\*Lattr_value\*O field).  
.PP
The \*Vcursor\*O parameter specifies a cursor of type \*Lsec_attr_cursor_t\*O 
initialized to the point 
in the attribute list at which to start 
processing the query.  Use the \*Lsec_attr_cursor_init\*O 
function to initialize \*Vcursor\*O.  
.zA "def,13229,R1.2.2,clarify uninit. behavior"
If \*Vcursor\*O 
is uninitialized, the behavior is undefined. 
.zZ "def,13229,R1.2.2,clarify uninit. behavior" 
.PP
The \*Vnum_left\*O parameter contains the number of 
attributes that were found but could not be returned 
because of space constraints in the \*Vattrs\*O[\|]\*O array. 
(Note that this number may be inaccurate if 
the target server allows updates between successive queries.)
To obtain all of the remaining attributes, set the size of the 
\*Vattrs\*O[\|]\*O array so that it is large enough to hold the number of 
attributes listed in \*Vnum_left\*O.
.SS "Permissions Required"
.PP
The \*Lsec_rgy_attr_lookup_by_id(\|)\*O routine requires the \*Lq\*O
(\*Lquery\*O) permission 
set for each attribute type identified in the \*Vattr_keys\*O[\|]\*O array. 
These permissions are defined as part of the access control list
(ACL) manager set in the schema entry of each attribute type. 
...\" .ne 1.5i
...\" .SH "NOTES"
...\" .PP
...\" .br
...\" .ne 1.5i
.SH "Files"
.VL
.LI "\*L/usr/include/dce/sec_rgy_attr.idl\*O"
The \*Lidl\*O file from which \*Ldce/sec_rgy_attr.h\*O was derived.
.LE
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Lunauthorized\*O"
.LI "\*Lregistry server unavailable\*O"
.LI "\*Ltrigger server unavailable\*O"
.LI "\*Lerror_status_ok\*O"
.LE
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsec_intro(3sec)\*O,
\*Lsec_rgy_attr_attr_lookup_by_name(3sec)\*O,
\*Lsec_rgy_attr_lookup_no_expand(3sec)\*O.
.ad b
