...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: pkc_get_key_certifier_info.3sec,v $
...\" Revision 1.1.2.5  1996/12/20  21:59:47  weir
...\" 	Final updates
...\" 	[1996/12/20  21:58:21  weir]
...\"
...\" Revision 1.1.2.4  1996/12/17  20:11:18  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:08:31  damon]
...\" 
...\" Revision 1.1.2.3  1996/11/19  18:56:50  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:49:56  wardr]
...\" 
...\" Revision 1.1.2.2  1996/11/18  19:57:34  weir
...\" 	No change
...\" 	[1996/11/18  19:55:19  weir]
...\" 
...\" Revision 1.1.2.1  1996/10/15  21:10:43  weir
...\" 	Initial submission
...\" 	[1996/10/15  21:09:19  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
.TH pkc_get_key_certifier_info 3sec
...\" 
.SH "Name"
\*Lpkc_get_key_certifier_info\*O - Returns information about a certifier
...\" 
...\" 
.SH "Synopsis"
.sS
\*L#include <pkc_certs.h>\*O
.sp .4v
\*Lunsigned32 pkc_get_key_certifier_info(\*O
.nL
	\*Lkeyinfo_t * \*Vkeyinfobase\*L,
.nL
	\*Lunsigned \*Vkey_index\*L,
.nL
	\*Lunsigned \*Vcertifier_index\*L
.nL
	\*Lchar ** \*Vcertifier_name\*L,
.nL
	\*Lutc_t * \*Vcertification_start\*L,
.nL
	\*Lutc_t * \*Vcertification_expiration\*L,
.nL
	\*Lchar * \*Vcrl_valid\*L,
.nL
	\*Lutc_t * \*Vcrl_last_seen\*L,
.nL
	\*Lutc_t * \*Vnext_crl_expected\*L);
.sE
.nL
...\" 
.ne 1.5i
...\" 
...\" 
...\" 
...\" 
.SH "Parameters"
...\" 
.SS "Input"
...\" 
.VL
.LI "\*Vkeyinfobase\*O"
Information about the key (returned by \*Lpkc_retrieve_keyinfo(3sec)\*O).
...\" 
.LI "\*Vkey_index\*O"
Index of the key.
...\" 
.LI "\*Vcertifier_index\*O"
Index of the certifier about whom information is desired.
.LE
...\" 
.SS "Output"
...\" 
.VL
.LI "\*Vcertifier_name\*O"
The name of the certifier.
...\" 
.LI "\*Vcertification_start\*O"
Time at which certification by this certifier starts.
...\" 
.LI "\*Vcertification_expiration\*O"
Time at which certification by this certifier ends.
...\" 
.LI "\*Vcrl_valid\*O"
If TRUE, there is a certificate revocation list for this
certifier.
...\" 
.LI "\*Vcrl_last_seen\*O"
Time at which certificate revocation list was last seen.
...\" 
.LI "\*Vnext_crl_expected\*O"
Time at which next certificate revocation list is expected.
...\" 
.LE
...\" 
.nL
.ne 1.5i
...\" 
.SH "Description"
.PP
\*Lpkc_get_key_certifier_info(3sec)\*O returns information about a
specific certifier from a key's certification path. Certifier 0 is
the CA that vouched for the key; certifier 1 is the CA that vouched
for certifier 0, etc. The total number of certifiers for a given key
is returned by \*Lpkc_get_key_certifier_count(3sec)\*O.
.PP
The desired information is extracted by the routine from the \*Lkeyinfo_t\*O
structure, which must first be obtained by the caller by a call to the
\*Lpkc_retrieve_keyinfo(3sec)\*O routine.
.PP
Any of the return parameters may be passed as NULL if the corresponding
information is not required.
.PP
Upon successful return, the \*Vcertifier_name\*O parameter will contain
allocated storage which must be released with \*Lpkc_free(3sec)\*O
when the application has finished with it.
...\" 
...\" 
...\" 
.ne 1.5i
.SH "Return Values"
.VL 1i
.LI "\*Lpkc_s_success\*O"
Operation successfully completed.
...\" 
.LE
...\" 
...\" 
...\" 
...\" 
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Errors"
.PP
Refer to the \*EOSF DCE Problem Determination Guide\*O for
complete descriptions of all error messages.
...\" 
...\" 
.SH "Related Information"
.PP
.ad l
Functions:
\*Lpkc_intro(3sec)\*O,
\*Lpkc_append_to_trustlist(3sec)\*O,
\*Lpkc_free(3sec)\*O,
\*Lpkc_free_keyinfo(3sec)\*O,
\*Lpkc_free_trustbase(3sec)\*O,
\*Lpkc_free_trustlist(3sec)\*O,
\*Lpkc_get_key_certifier_count(3sec)\*O,
\*Lpkc_get_key_count(3sec)\*O,
\*Lpkc_get_key_data(3sec)\*O,
\*Lpkc_get_key_trust_info(3sec)\*O,
\*Lpkc_get_registered_policies(3sec)\*O,
\*Lpkc_init_trustbase(3sec)\*O,
\*Lpkc_init_trustlist(3sec)\*O,
\*Lpkc_retrieve_keyinfo(3sec)\*O,
\*Lpkc_retrieve_keylist(3sec)\*O.
.ad b 
...\" 
...\" 
...\" 
...\" /*
...\"  * pkc_get_key_certifier_info
...\"  *
...\"  * Returns information about a specific certifier from a key's
...\"  * certification path.  Certifier 0 is the CA that vouched for
...\"  * the key; certifier 1 is the CA that vouched for certifier 0, etc.
...\"  * The total number of certifiers for a given key is returned by
...\"  * pkc_get_key_certifier_count above.  Any of the return parameters
...\"  * may be passed as NULL if the corresponding information is not
...\"  * required.  On return, the certifier_name parameter will contain
...\"  * PKC-allocated storage which must be released with pkc_free()
...\"  * when the application has finished with it.
...\"  */
...\" 
...\" extern unsigned32 pkc_get_key_certifier_info (keyinfo_t *keyinfobase,
...\"                                               unsigned key_index,
...\"                                               unsigned certifier_index,
...\"                                               char ** certifier_name,
...\"                                               utc_t * certification_start,
...\"                                               utc_t * certification_expiration,
...\"                                               char * crl_valid,
...\"                                               utc_t * crl_last_seen,
...\"                                               utc_t * next_crl_expected);
...\" 
...\" 
...\" 
