...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: pkc_init_trustbase.3sec,v $
...\" Revision 1.1.2.5  1996/12/20  21:59:52  weir
...\" 	Final updates
...\" 	[1996/12/20  21:58:26  weir]
...\"
...\" Revision 1.1.2.4  1996/12/17  20:11:23  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:08:36  damon]
...\" 
...\" Revision 1.1.2.3  1996/11/19  18:56:54  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:50:00  wardr]
...\" 
...\" Revision 1.1.2.2  1996/11/18  19:57:43  weir
...\" 	No change
...\" 	[1996/11/18  19:55:23  weir]
...\" 
...\" Revision 1.1.2.1  1996/10/15  21:10:48  weir
...\" 	Initial submission
...\" 	[1996/10/15  21:09:23  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
.TH pkc_init_trustbase 3sec
...\" 
.SH "Name"
\*Lpkc_init_trustbase\*O - Initializes a trust base
...\" 
...\" 
.SH "Synopsis"
.sS
\*L#include <pkc_api.h>\*O
.sp .4v
\*Lunsigned32 pkc_init_trustbase(\*O
.nL
	\*Ltrustlist_t ** \*Vtr_list\*L,
.nL
	\*Lgss_OID \*Vpolicy_oid\*L,
.nL
	\*Lutc_t \*Vtime\*L,
.nL
	\*Lselection_t * \*Vsel\*L,
.nL
	\*Ltrustbase_t ** \*Vbase\*L);
.sE
.nL
...\" 
.ne 1.5i
...\" 
...\" 
...\" 
...\" 
.SH "Parameters"
...\" 
.SS "Input"
...\" 
.VL
.LI "\*Vtr_list\*O"
Specifies trust list on the basis of which the trust base is to be
initialized.
...\" 
.LI "\*Vpolicy_oid\*O"
Specifies policy to use.
...\" 
.LI "\*Vtime\*O"
Specifies time at which the public key is to be valid. Can be 0.
...\" 
.LI "\*Vsel\*O"
Must be set to 0.
...\" 
.LE
...\" 
.SS "Output"
.VL
.LI "\*Vbase\*O"
Initialized trust base.
...\" 
.LE
...\" 
...\" 
...\" 
.nL
.ne 1.5i
...\" 
.SH "Description"
.PP
\*Lpkc_init_trustbase(3sec)\*O initializes the initial trust base to include
all the certificates initially trusted, given the initial set of trusted
certificates. This routine will also store the cross-certificate pair
certificates found during the creation of the trust base.
.PP
Upon successful return, \*Vbase\*O will contain a PKC-allocated trust base
structure, which should be released with \*Lpkc_free_trustbase(3sec)\*O when
the application has finished with it.
.PP
Users will normally call the \*Lpkc_\*O routines in the following order:
...\" 
...\" 
...\" 
.AL
.LI
\*Lpkc_get_registered_policies(3sec)\*O
.PP
Called once for the lifetime of the application.
...\" 
.LI
\*Lpkc_init_trustlist(3sec)\*O
...\" 
.LI
\*Lpkc_append_to_trustlist(3sec)\*O
.PP
Called one or more times.
...\" 
.PP
Note that steps 2 and 3 together build up an initial trust list.
...\" 
.LI
\*Lpkc_init_trustbase(3sec)\*O
.PP
A trust base is computed, given an initial trust list.
...\" 
.LI
\*Lpkc_retrieve_keylist(3sec)\*O
.PP
Called one or more times, for each individual's public key that needs to be
looked up.
...\" 
.LI
\*Lpkc_free_trustlist(3sec)\*O
...\" 
.LI
\*Lpkc_free_trustbase(3sec)\*O
...\" 
.LE
...\" 
...\" 
...\" 
...\" 
...\" 
.ne 1.5i
.SH "Return Values"
.VL 1i
.LI "\*Lpkc_s_success\*O"
Operation successfully completed.
...\" 
.LE
...\" 
...\" 
...\" 
...\" 
...\" 
.nL 
...\" 
.ne 1.5i
.SH "Errors"
.PP
Refer to the \*EOSF DCE Problem Determination Guide\*O for
complete descriptions of all error messages.
...\" 
...\" 
.SH "Related Information"
.PP
.ad l
Functions:
\*Lpkc_intro(3sec)\*O,
\*Lpkc_append_to_trustlist(3sec)\*O,
\*Lpkc_free(3sec)\*O,
\*Lpkc_free_keyinfo(3sec)\*O,
\*Lpkc_free_trustbase(3sec)\*O,
\*Lpkc_free_trustlist(3sec)\*O,
\*Lpkc_get_key_certifier_count(3sec)\*O,
\*Lpkc_get_key_certifier_info(3sec)\*O,
\*Lpkc_get_key_count(3sec)\*O,
\*Lpkc_get_key_data(3sec)\*O,
\*Lpkc_get_key_trust_info(3sec)\*O,
\*Lpkc_get_registered_policies(3sec)\*O,
\*Lpkc_init_trustlist(3sec)\*O,
\*Lpkc_retrieve_keyinfo(3sec)\*O,
\*Lpkc_retrieve_keylist(3sec)\*O.
.ad b 
...\" 
...\" 
...\" 
...\" /*
...\"  * pkc_init_trustbase: This is to initialize the initial trust
...\"  * list to include all the certificates we initially trust, given
...\"  * the initial set of trusted certificates.
...\"  * This routine will also store the cross-cert pair certificates
...\"  * found during the creationi of the trustbase.
...\"  *
...\"  * Users will normally call the pkc_ API in the following order:
...\"  *
...\"  *  1. pkc_get_registered_policies  (One Time for duration of Appln)
...\"  *
...\"  *  2. pkc_create_empty_trustlist, 
...\"  *  3. One or more pkc_append_to_trustlist
...\"  *
...\"  *  2 & 3 together build up an initial trust list.
...\"  *
...\"  *  4. pkc_init_trustbase.
...\"  *
...\"  *  4 computes a trustbase given an initial trust list.
...\"  *
...\"  *  5. One or more pkc_retrieve_keylist  for each individual's public
...\"  *     key that needs to be looked up.
...\"  *  6. pkc_free_trustlist
...\"  *  7. pkc_free_trustbase
...\"  *
...\"  *
...\"  * tr_list: trust list presented to API
...\"  * policy_oid: distinguishes which policy to use
...\"  * date: time at which the public key is to be valid. Can be 0.
...\"  * sel: has to be set to 0. (this is present for a future version &
...\"  *      ignored currently)
...\"  * base: extended trust list + other things..
...\"  *
...\"  */
...\" 
...\" 
...\" unsigned32 pkc_init_trustbase
...\"   (trustlist_t **tr_list,
...\"    gss_OID policy_oid, 
...\"    utc_t time,
...\"    selection_t *sel,
...\"    trustbase_t **base);
...\" 
...\" 
...\" 
