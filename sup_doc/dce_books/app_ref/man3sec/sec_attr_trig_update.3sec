...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: sec_attr_trig_update.3sec,v $
...\" Revision 1.1.6.2  1996/11/19  18:57:55  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads and added PDG pointer
...\" 	[1996/11/19  18:51:03  wardr]
...\"
...\" Revision 1.1.6.1  1996/05/13  19:04:03  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  18:57:21  wardr]
...\" 
...\" Revision 1.1.4.1  1996/03/15  16:38:42  weir
...\" 	CR 12716: unimplemented function
...\" 	[1996/03/15  16:38:07  weir]
...\" 
...\" Revision 1.1.2.5  1995/06/15  19:28:13  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/15  19:23:48  buckler]
...\" 
...\" Revision 1.1.2.4  1994/10/19  20:16:05  neilson
...\" 	CR 10326 - Automatic fix to name of intro ref page
...\" 	[1994/10/19  20:09:54  neilson]
...\" 
...\" Revision 1.1.2.3  1994/10/14  20:31:27  millette
...\" 	(enh, 10056, R1.1)
...\" 	HP edits
...\" 	[1994/10/14  20:30:57  millette]
...\" 
...\" Revision 1.1.2.2  1994/06/13  17:15:26  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:48:52  devobj]
...\" 
...\" Revision 1.1.2.1  1994/03/29  17:46:06  millette
...\" 	(enh, 10056, R1.1)
...\" 	Created for ERA
...\" 	[1994/03/29  17:45:43  millette]
...\" 
...\" $EndLog$
.TH sec_attr_trig_update 3sec
...\" .iX "\*Lsec_attr_trig_update(\|)\*O"
...\" .iX "calls" "\*Lsec_attr_trig_update(\|)\*O"
.nS Note
This function is not implemented in DCE 1.2.1.
.nE
.SH "Name"
\*Lsec_attr_trig_update\*O - For attributes coded with an attribute trigger type of update, 
passes attribute updates to an update attribute trigger server for evaluation
.SH "Synopsis"
.sS
\*L#include <dce/sec_attr_trig.h>
.sp .4v
\*Lvoid sec_attr_trig_update (
.nL
	\*Lhandle_t \*Vh\*O,
.nL
	\*Lsec_attr_component_name_t \*Vcell_name\*L,
.nL
	\*Lsec_attr_component_name_t \*Vcomponent_name\*L,
.nL
	\*Lunsigned32 \*Vnum_to_write\*L,
.nL
	\*Lunsigned32 \*Vspace_avail\*L,
.nL
	\*Lsec_attr_t \*Vin_attrs\*O[\|]\*L,	
.nL
	\*Lunsigned32 *\*Vnum_returned\*L,
.nL
	\*Lsec_attr_t \*Vout_attrs\*O[\|]\*L,	
.nL
	\*Lunsigned32 *\*Vnum_left\*L,
.nL
	\*Lsigned32 *\*Vfailure_index\*L,
.nL
	\*Lerror_status_t *\*Vstatus\*L);\*O
.sE
.nL
.ne 1.5i
.SH "Parameters"
.SS "Input"
.VL
.LI "\*Vh\*O"
A handle referring to the trigger server to be accessed. 
Use
the trigger binding information specified in the attribute 
encoding to acquire a bound handle.
.LI "\*Vcell_name\*O"
A value of \*Lsec_attr_component_name_t\*O that identifies the 
cell in which the object whose attribute is to be accessed 
resides.  Supply a NULL \*Vcell_name\*O 
to specify the local cell (\*L/.:\*O).
.LI "\*Vcomponent_name\*O"
A value of \*Lsec_attr_component_name_t\*O that identifies the
name of the object whose attribute is to be accessed.
If \*Vcell_name\*O specifies a foreign cell, \*Vcomponent_name\*O is 
interpreted as a UUID in string format since the caller of this
interface knows only the 
UUID, not the name, of the foreign principal.
.LI "\*Vnum_to_write\*O"
An unsigned 32-bit integer that specifies the number of elements in 
the \*Vin_attrs\*O array.  This integer must be greater than 0 (zero).
.LI "\*Vspace_avail\*O
An unsigned 32-bit integer that specifies the size of the \*Vout_attrs\*O array.
.LI "\*Vin_attrs\*O[\|]\*O"
An array of values of type \*Lsec_attr_t\*O that specifies the 
attribute instances to be written.  The size of \*Vin_attrs\*O[\|]\*O 
is determined by \*Vnum_to_write\*O.
.LE 
.SS "Output"
.VL
.LI "\*Vnum_returned\*O"
A pointer to an unsigned 32-bit integer that specifies the number of attribute instances 
returned in the \*Vout_attrs\*O[\|]\*O array.
.LI "\*Vout_attrs\*O[\|]\*O"
An array of values of type \*Lsec_attr_t\*O.  These 
values, supplied by the update attribute trigger server, are 
in a form suitable for storage in the registry database.
.LI "\*Vnum_left\*O
A pointer to an unsigned 32-bit integer that supplies the number of attributes that 
were found but not returned because of 
space constraints in the \*Vout_attrs\*O[\|]\*O buffer.
.LI "\*Vfailure_index\*O"
In the event of an error, \*Vfailure_index\*O is a pointer to 
the element in the \*Vin_attrs\*O[\|]\*O array that caused the update to 
fail.  If the failure cannot be attributed to 
a specific attribute, the value of \*Vfailure_index\*O is -1.
.LI "\*Vstatus\*O"
A pointer to the completion status.  On successful completion,
the routine returns \*Lerror_status_ok\*O.
Otherwise, it returns an error.
.LE
.ne 1.5i
.SH "Description"
The \*Lsec_attr_trig_update(\|)\*O routine 
passes attributes coded with an attribute trigger type of update 
to a user-written update attribute trigger server for evaluation 
before the updates are made to the registry. 
.PP
Although generally this routine it is not called directly, 
this reference page is provided for users who are writing the 
attribute trigger servers that will receive \*Lsec_attr_trig_update(\|)\*O 
input and supply its output.
.PP 
The \*Lsec_attr_trig_update(\|)\*O routine is called by the DCE attribute update code 
for all schema entries that specify an update attribute trigger 
(\*Lsec_\%attr_\%trig_\%type_\%update\*O 
specified with the \*Lsec_attr_trig_type_flags_t\*O data type).  
The attribute update code passes the \*Lsec_attr_trig_update(\|)\*O input parameters 
to a user-written update attribute trigger server and receives the output parameters 
back from the server.  
.nL
.ne 8
The attribute trigger server is responsible for evaluating the 
semantics of the entry in order 
to reject or accept it, and the attribute trigger server may even make 
changes in the output it sends back to the update code to ensure the entry 
adheres to the semantics.  The output received from the attribute trigger server is in 
a form to be stored in the registry.  (Note that update attribute trigger 
servers do not store attribute values.  Attribute values are stored in 
the registry database.)  
.PP  
This is an atomic operation:  if the update of any attribute in the array fails 
to pass the evaluation, all updates are aborted.  
The attribute causing the update to fail is identified in 
\*Vfailure_index\*O.  If the failure cannot be attributed to a given attribute, 
\*Vfailure_index\*O contains -1.
.PP
For objects in the local cell, set the \*Vcell_name\*O parameter to 
\*Lnull\*O, and the \*Vcomponent_name\*O parameter to specify the object's name.
.PP
For objects in a foreign cell, set the \*Vcell_name\*O parameter the the 
name of the foreign cells, and 
the \*Vcomponent_name\*O parameter to specify the UUID in 
string format that identifies the object in the foreign cell.
...\" .SS "Permissions Required"
...\" .PP
...\" The \*Lsec_attr_trig_update(\|)\*O routine requires the \*L?\*O (\*Linsert\*O)
...\" permission on the ?????
...\" .PP
...\" .br
...\" .ne 1.5i
...\" .SH "NOTES"
...\" .PP
...\" .br
...\" .ne 1.5i
.SH "Files"
.VL
.LI "\*L/usr/include/dce/sec_attr_trig.idl\*O"
The \*Lidl\*O file from which \*Ldce/sec_attr_trig.h\*O was derived.
.LE
...\" CAN WE SUPPLY EXAMPLE?????
...\" .SH "EXAMPLES"
...\".PP
...\"CK Create an example of adding a user, PGO item, account and everything.
...\"?????
.nL
.ne 1.5i
.SH "Errors"
.PP
The following describes a partial list of errors that might be returned.
Refer to the \*(Tg for complete descriptions of all error
messages.
.VL
.LI "\*Ldatabase read only\*O"
.LI "\*Lserver unavailable\*O"
.LI "\*Linvalid/unsupported attribute type\*O"
.LI "\*Linvalid encoding type\*O"
.LI "\*Lvalue not unique\*O"
.LI "\*Lsite read only\*O"
.LI "\*Lunauthorized\*O"
.LI "\*Lerror_status_ok\*O"
.LE
.nL
.ne 1.5i
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsec_attr_trig_query(3sec)\*O,
\*Lsec_intro(3sec)\*O.
.ad b
