...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" 
...\" HISTORY
...\" $Log: sigprocmask.3thr,v $
...\" Revision 1.1.4.2  1996/12/17  20:49:04  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  20:46:27  damon]
...\"
...\" Revision 1.1.4.1  1996/11/19  20:26:12  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads
...\" 	[1996/11/19  20:24:24  wardr]
...\" 
...\" Revision 1.1.2.2  1995/06/09  16:22:41  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/09  16:18:11  buckler]
...\" 
...\" Revision 1.1.2.1  1994/09/30  21:28:52  weir
...\" 	New reference pages
...\" 	[1994/09/30  21:28:23  weir]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
...\"*********************************************************************
...\"
...\" The information in this document is subject to change without
...\" notice and should not be construed as a commitment by Open	
...\" Software Foundation.
...\"
...\" ********************************************************************
.TH sigprocmask 3thr
...\" .iX "\*Lsigprocmask(\|)\*O"
.iX "signal" "examine and change blocked"
.SH "Name"
\*Lsigprocmask\*O - Examines and changes blocked signals (POSIX software signal facilities)
.SH "Synopsis"
.sS
\*L#include <signal.h>
.sp .4v
\*Lint sigprocmask(int \*Vhow\*L, const sigset_t\*V *set\*L, sigset_t\*V *oset\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.VL
.LI "\*Vhow\*O"
The manner in which the values in \*Vset\*O are changed as defined 
by one of the described argument values.
.LI "\*Vset\*O"
A set of signals that will be used to change the current thread's signal mask
according to the value in
the \*Vhow\*O parameter.
.LI "\*Voset\*O"
Points to a location in which the signal mask in effect at 
the time of the \*Lsigprocmask(\|)\*O function call is returned.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lsigprocmask(\|)\*O function is used to examine or change (or both)
the signal mask of the calling process.
If the value of the argument \*Vset\*O is not NULL, it points to a set
of signals to be used to change the currently blocked set 
according to the \*Vhow\*O parameter as follows:
.VL
.LI \*LSIG_BLOCK\*O
The resulting signal set is the union of the current set and the
signal set pointed to by the argument \*Vset\*O.
.LI \*LSIG_UNBLOCK\*O
The resulting signal set is the intersection of the current set and the
and the complement of the signal set pointed to by the argument \*Vset\*O.
.LI \*LSIG_SETMASK\*O
The resulting signal set is the
signal set pointed to by the argument \*Vset\*O.
.LE
.PP
If the argument \*Voset\*O is not NULL, the previous mask is stored in the
space pointed to by \*Voset\*O.
.PP
.ne 10
The \*Lsigprocmask(\|)\*O function can be used to inquire about the currently
blocked signals
by specifying a null pointer for \*Vset\*O, since the value
of the argument \*Vhow\*O is not significant and
the signal mask of the process is unchanged unless this parameter is not a null
pointer.
In order for the signal mask in effect at the time of the \*Lsigprocmask(\|)\*O
call to be returned, the \*Voset\*O argument must not be a null pointer.
.PP
If there are any pending unblocked signals after  the call to the
\*Lsigprocmask(\|)\*O function, at least one of those signals shall be
delivered before the \*Lsigprocmask(\|)\*O function returns.
As a system restriction, the SIGKILL and SIGSTOP signals cannot be blocked.
.PP
If the \*Lsigprocmask(\|)\*O function fails, the signal mask of the process
is not changed by this function call.
.nL
.ne 1.5i
.SH "Return Values"
.PP
Possible return values are as follows:
.PP
.TS
center tab(%);
l | l | l
n | l | lw(3.0i).
\*LReturn%Error%Description\*O
_
0%%Successful completion.
\-1%[\*LEINVAL\*O]%The value specified by the \*Vhow\*O parameter is 
%%not equal to one of the defined values.
%%The signal mask of the process remains unchanged.
.TE
.nL
.ne 1.2i
.SH "Related Information"
.PP
.ad l
Functions:
\*Lsigaction(3thr)\*O,
\*Lsigpending(3thr)\*O,
\*Lsigsetops(3)\*O,
\*Lsigsuspend(3)\*O.
.ad b
