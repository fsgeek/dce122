...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: pthread_keycreate.3thr,v $
...\" Revision 1.1.11.1  1996/11/19  20:25:42  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads
...\" 	[1996/11/19  20:24:02  wardr]
...\"
...\" Revision 1.1.9.5  1995/06/09  16:22:17  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/09  16:17:44  buckler]
...\" 
...\" Revision 1.1.9.4  1994/09/30  17:59:20  weir
...\" 	(Defect, 9772, R1.1)
...\" 	Corrected miscellaneous errors
...\" 	[1994/09/30  17:56:58  weir]
...\" 
...\" Revision 1.1.9.3  1994/05/16  14:41:43  willie
...\" 	{edit, R1.1}
...\" 	Fixed RETURN VALUES table, which broke in SGML conversion.
...\" 	[1994/05/16  14:41:26  willie]
...\" 
...\" Revision 1.1.9.2  1993/09/21  14:24:08  weir
...\" 	(defect,7430,R1.0.3)
...\" 	Corrected synopsis.
...\" 	[1993/09/21  14:13:53  weir]
...\" 
...\" Revision 1.1.7.6  1993/02/17  20:29:32  lmk
...\" 	Defect 3070, R1.0.2, changed paragraph in RETURN VALUES	 section
...\" 	[1993/02/17  20:20:42  lmk]
...\" 
...\" Revision 1.1.7.5  1993/02/08  19:35:40  johnson
...\" 	Changes made:  Swapped EAGAIN and ENOMEM return values
...\" 	File name:     /src/app_ref/man3thr/pthread_keycreate.3thr
...\" 	CR number:     6943
...\" 	[1993/02/08  19:33:20  johnson]
...\" 
...\" Revision 1.1.7.4  1993/01/27  20:27:08  cjd
...\" 	Fixing backing build problem
...\" 	[1993/01/27  19:53:36  cjd]
...\" 
...\" Revision 1.1.7.3  1993/01/26  23:19:55  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  22:22:46  cjd]
...\" 
...\" 	Embedded copyright notice
...\" 	[1993/01/26  20:54:26  cjd]
...\" 
...\" Revision 1.1.7.2  1992/10/02  19:47:08  weir
...\" 	Moved into 1.0.2doc tree
...\" 	[1992/10/02  18:53:22  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  15:22:57  oaf]
...\" 
...\" Revision 1.1.5.3  1992/09/16  18:44:13  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.5.2  1992/08/03  23:57:15  oaf
...\" 	Final_edits.__Most_files_unchanged.
...\" 	[1992/08/03  23:19:09  oaf]
...\" 
...\" 	 For all files,
...\" 	...\"       implemented redline edits:
...\" 	...\"       Removed all .ds-.de macros, replaced with simple,
...\" 	...\"               "primitive" spacing.
...\" 	...\"       Changed all tables to "canonical" form,
...\" 	...\"               with format n | l | lw(...).  for errno returns,
...\" 	...\"               with format c | l | lw(...).  for others.
...\" 	...\"       Changed all text in SYNOPSIS to bold or italic - no roman.
...\" 	...\"       Placed 1.5i space requirement (.ne) before "return value" and
...\" 	...\"               "related information" sections (many of ...).
...\" 	...\"       Changed all instances of (\|) to (\|).
...\" 	...\"   (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.
...\" 	[1992/07/29  04:38:33  oaf]
...\" 
...\" Revision 1.1.2.4  1992/06/11  19:27:37  johnson
...\" 	Defect:  4109
...\" 
...\" 	File: src/app_ref/man3thr/pthread_keycreate.3thr
...\" 	Short description:  Changed destructor argument description
...\" 	[1992/06/11  19:26:24  johnson]
...\" 
...\" Revision 1.1  1992/01/29  15:30:09  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" Copyright (c) 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Massachusetts                                             *
...\" All Rights Reserved.                                               *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or        *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
.TH pthread_keycreate 3thr
...\" .iX "\*Lpthread_keycreate(\|)\*O"
.iX "thread-specific data" "generating key value for"
.iX "thread-specific data" "uses for"
.iX "data" "generating key value for"
.iX "data" "uses for"
.iX "creating thread-specific data key value"
.iX "key value" "generating for thread-specific data"
.iX "thread" "thread-specific data of"
.SH "Name"
\*Lpthread_keycreate\*O - Generates a unique thread-specific data key value
.SH "Synopsis"
.sS
\*L#include <pthread.h>
.sp .4v
\*Lint pthread_keycreate(
.nL
	pthread_key_t *\*Vkey\*L,
.nL
	void (*\*Vdestructor\*L) (void *\*Vvalue\*L));
.sE
.nL
.ne 1.5i
.SH "Parameters"
.VL
.LI "\*Vkey\*O"
Value of the new thread-specific data key.
.LI "\*Vdestructor\*O"
Procedure to be called to destroy a data value associated with
the created key when the thread terminates.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lpthread_keycreate(\|)\*O  routine generates a unique thread-specific
 data key value.
This
key value identifies a thread-specific data value, which is an address of
memory generated by the client containing arbitrary data of any size.
.PP
Thread-specific data allows client software to associate information with
the current thread.
.PP
For example, thread-specific data can be used by a language runtime
library that needs to associate a language-specific thread-private
data structure with an individual thread.  The thread-specific data
routines also provide a portable means of implementing the class of
storage called thread-private static, which is needed  to support parallel
decomposition in the FORTRAN language.
.PP
This routine generates and returns a new key value.  Each call to this
routine within a process returns a key value that is unique
within an application invocation.  Calls to \*Lpthread_keycreate(\|)\*O must
occur in initialization code guaranteed to execute only once in each
process.  The \*Lpthread_once(\|)\*O routine provides a way of
specifying such code.
.PP
When multiple facilities share access to thread-specific data, the
facilities must agree on the key value that is associated with the
context.  The key value must be created only once and needs to be stored
in a location known to each facility. (It may be desirable to encapsulate
the creation of a key, and the setting and getting of context values
for that key, within a special facility created for that purpose.)
.PP
When a thread terminates, thread-specific data is automatically
destroyed.  For each thread-specific data currently associated with the
thread, the \*Vdestructor\*O
...\".gL "destructor"
routine associated with the key
value of that context is called.  The order in which per-thread
context destructors are called at thread termination is
undefined.
.nL
.ne 1.5i
.SH "Return Values"
If the function fails, \*Lerrno\*O may be set to one of the
following values:
.PP
.TS
center, tab(%);
l | l | l
n | l | lw(2.5i).
\*LReturn%Error%Description\*O
_
0%%Successful completion.
\-1%[\*LEINVAL\*O]%The value specified by \*Vkey\*O is invalid.
\-1%[\*LEAGAIN\*O]%T{
An attempt was made to allocate a key when the key namespace is exhausted.
This is not a temporary condition.
T}
.sp 4p
\-1%[\*LENOMEM\*O]%Insufficient memory exists to create the key.
.TE
...\" .cS
...\" .nL
...\" .ne 1.5i
...\" .SH "EXAMPLES"
...\" .PP
...\" .oS
...\" int pthread_keycreate(pthread_destructor_t destructor,
...\" 	pthread_key_t *key);
...\" .oE
...\" .cE
.nL
.ne 1.2i
.SH "Related Information"
.PP
.ad l
Functions:
\*Lpthread_getspecific(3thr)\*O,
\*Lpthread_setspecific(3thr)\*O.
.ad b
