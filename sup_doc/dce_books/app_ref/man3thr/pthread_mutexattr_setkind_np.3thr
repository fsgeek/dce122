...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: pthread_mutexattr_setkind_np.3thr,v $
...\" Revision 1.1.9.1  1996/11/19  20:25:55  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads
...\" 	[1996/11/19  20:24:11  wardr]
...\"
...\" Revision 1.1.7.7  1995/06/09  16:22:29  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/09  16:17:56  buckler]
...\" 
...\" Revision 1.1.7.6  1994/09/30  17:59:29  weir
...\" 	(Defect, 9772, R1.1)
...\" 	Corrected miscellaneous errors
...\" 	[1994/09/30  17:57:10  weir]
...\" 
...\" Revision 1.1.7.5  1993/02/17  21:23:57  lmk
...\" 	Defect 7040, R1.0.2, Corrected paragraph in RETURN VALUES section
...\" 	[1993/02/17  21:22:11  lmk]
...\" 
...\" Revision 1.1.7.4  1993/01/27  20:27:36  cjd
...\" 	Fixing backing build problem
...\" 	[1993/01/27  19:54:30  cjd]
...\" 
...\" Revision 1.1.7.3  1993/01/26  23:20:27  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  22:23:44  cjd]
...\" 
...\" 	Embedded copyright notice
...\" 	[1993/01/26  20:55:19  cjd]
...\" 
...\" Revision 1.1.7.2  1992/10/02  19:48:13  weir
...\" 	Moved into 1.0.2doc tree
...\" 	[1992/10/02  18:54:24  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  15:24:59  oaf]
...\" 
...\" Revision 1.1.5.3  1992/09/16  18:44:47  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.5.2  1992/08/03  23:58:18  oaf
...\" 	Final_edits.__Most_files_unchanged.
...\" 	[1992/08/03  23:20:15  oaf]
...\" 
...\" 	 For all files,
...\" 	...\"       implemented redline edits:
...\" 	...\"       Removed all .ds-.de macros, replaced with simple,
...\" 	...\"               "primitive" spacing.
...\" 	...\"       Changed all tables to "canonical" form,
...\" 	...\"               with format n | l | lw(...).  for errno returns,
...\" 	...\"               with format c | l | lw(...).  for others.
...\" 	...\"       Changed all text in SYNOPSIS to bold or italic - no roman.
...\" 	...\"       Placed 1.5i space requirement (.ne) before "return value" and
...\" 	...\"               "related information" sections (many of ...).
...\" 	...\"       Changed all instances of (\|) to (\|).
...\" 	...\"   (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.
...\" 	[1992/07/29  04:42:58  oaf]
...\" 
...\" Revision 1.1.2.3  1992/05/14  18:42:10  buckler
...\" 	Editorial review
...\" 	[1992/05/14  18:39:29  buckler]
...\" 
...\" Revision 1.1.2.2  1992/05/08  21:37:31  johnson
...\" 	Defect:  2655
...\" 
...\" 	File: src/app_ref/man3thr/pthread_mutexattr_setkind_np.3thr
...\" 	Short description:  Added _NP suffix to values.
...\" 	[1992/05/08  21:36:58  johnson]
...\" 
...\" Revision 1.1  1992/01/29  15:30:11  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED.
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Massachusetts                                             *
...\" All Rights Reserved.                                               *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or        *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
.TH pthread_mutexattr_setkind_np 3thr
...\" .iX "\*Lpthread_mutexattr_setkind_np(\|)\*O"
.iX "mutex" "fast"
.iX "mutex" "recursive"
.iX "fast mutex"
.iX "recursive mutex"
.SH "Name"
\*Lpthread_mutexattr_setkind_np\*O - Specifies the mutex type attribute
.SH "Synopsis"
.sS
\*L#include <pthread.h>\*O
.sp .4v
\*Lint pthread_mutexattr_setkind_np\*L(
.nL
	\*Lpthread_mutexattr_t *\*Vattr\*L,
.nL
	\*Lint \*Vkind\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.VL
.LI "\*Vattr\*O"
Mutex attributes object modified.
.LI "\*Vkind\*O"
New value for the mutex type attribute.  The \*Vkind\*O parameter
specifies the type of mutex that is created.  Valid values are
\*LMUTEX_FAST_NP\*O (default), \*LMUTEX_RECURSIVE_NP\*O, and
\*LMUTEX_NONRECURSIVE_NP\*O.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lpthread_mutexattr_setkind_np(\|)\*O
routine sets the mutex type attribute that is used when a mutex is
created.
.PP
A fast mutex is locked and unlocked in the fastest manner possible.
A fast mutex can only be locked (obtained) once.
All subsequent calls to \*Lpthread_\%mutex_\%lock(\|)\*O cause the calling
thread to block until the mutex is freed by the thread that owns it.
If the thread that owns the mutex attempts to lock it again, the
thread waits for itself to release the mutex (causing a deadlock).
.PP
A recursive mutex can be locked more than once by the same thread
without causing that thread to deadlock.  In other words, a single thread can
make consecutive calls to \*Lpthread_mutex_lock(\|)\*O without blocking.
The thread must then call \*Lpthread_mutex_unlock(\|)\*O the same number of
times as it called \*Lpthread_mutex_lock(\|)\*O before another thread can
lock the mutex.
.PP
A nonrecursive mutex is locked only once by a thread, like a
fast mutex.  If the thread tries to lock the mutex again without first
unlocking it, the thread receives an error.  Thus, nonrecursive
mutexes are more informative than fast mutexes because fast mutexes
block in such a case, leaving it up to you to determine why the thread
no longer executes.  Also, if someone other than the owner tries to
unlock a nonrecursive mutex, an error is returned.
.PP
Never use a recursive mutex with condition variables because the
implicit unlock performed for a \*Lpthread_cond_wait(\|)\*O or
\*Lpthread_cond_timedwait(\|)\*O might not actually release the mutex.  In
that case, no other thread can satisfy the condition of the predicate.
.PP
This routine is a new primitive.
.nL
.ne 2.2i
.SH "Return Values"
.PP
If the function fails, \*Lerrno\*O may be set to one of the
following values:
.PP
.TS
center, tab(%);
lb | lb | lb
n | l | lw(2.5i).
Return%Error%Description
_
0%%Successful completion.
\-1%[\*LEINVAL\*O]%The value specified by \*Vattr\*O is invalid.
\-1%[\*LEPERM\*O]%The caller does not have the appropriate privileges.
\-1%[\*LERANGE\*O]%One or more parameters supplied have an invalid value.
.TE
...\" .cS
...\" .nL
...\" .ne 1.5i
...\" .SH "EXAMPLES"
...\" .PP
...\" .oS
...\" int pthread_mutexattr_setkind_np (pthread_mutexattr_t *attr,
...\" 	int kind);
...\" .oE
...\" .cE
.nL
.ne 1.5i
.SH "Related Information"
.PP
.ad l
Functions:  
\*Lpthread_mutex_init(3thr)\*O,
\*Lpthread_mutexattr_create(3thr)\*O,
\*Lpthread_mutexattr_getkind_np(3thr)\*O.
.ad b
