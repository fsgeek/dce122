...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\" HISTORY
...\" $Log: pthread_setscheduler.3thr,v $
...\" Revision 1.1.11.2  1996/11/19  20:26:02  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads
...\" 	[1996/11/19  20:24:17  wardr]
...\"
...\" Revision 1.1.11.1  1996/09/19  15:38:30  millett
...\" 	{def,9772,R1.2.2}
...\" 	Miscellaneous fixes
...\" 	[1996/09/19  15:38:04  millett]
...\" 
...\" Revision 1.1.9.5  1995/06/09  16:22:34  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/09  16:18:03  buckler]
...\" 
...\" Revision 1.1.9.4  1994/09/30  17:59:34  weir
...\" 	(Defect, 9772, R1.1)
...\" 	Corrected miscellaneous errors
...\" 	[1994/09/30  17:57:17  weir]
...\" 
...\" Revision 1.1.9.3  1994/02/01  23:12:07  ezf
...\" 	testing dcedoc1.1 tree
...\" 	[1994/02/01  23:11:51  ezf]
...\" 
...\" Revision 1.1.9.2  1993/09/21  14:24:49  weir
...\" 	(defect,8483,R1.0.3)
...\" 	Corrected statement in Return Values.
...\" 	[1993/09/21  14:19:33  weir]
...\" 
...\" Revision 1.1.7.5  1993/02/18  18:49:00  lmk
...\" 	Defect 7040,R1.0.2, Corrected paragraph in RETURN VALUES section
...\" 	[1993/02/18  18:47:04  lmk]
...\" 
...\" Revision 1.1.7.4  1993/01/27  20:27:55  cjd
...\" 	Fixing backing build problem
...\" 	[1993/01/27  19:55:03  cjd]
...\" 
...\" Revision 1.1.7.3  1993/01/26  23:20:46  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  22:24:22  cjd]
...\" 
...\" 	Embedded copyright notice
...\" 	[1993/01/26  20:55:59  cjd]
...\" 
...\" Revision 1.1.7.2  1992/10/02  19:48:55  weir
...\" 	Moved into 1.0.2doc tree
...\" 	[1992/10/02  19:25:46  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  15:26:07  oaf]
...\" 
...\" Revision 1.1.5.2  1992/08/03  23:58:57  oaf
...\" 	Final_edits.__Most_files_unchanged.
...\" 	[1992/08/03  23:20:55  oaf]
...\" 
...\" 	 For all files,
...\" 	...\"       implemented redline edits:
...\" 	...\"       Removed all .ds-.de macros, replaced with simple,
...\" 	...\"               "primitive" spacing.
...\" 	...\"       Changed all tables to "canonical" form,
...\" 	...\"               with format n | l | lw(...).  for errno returns,
...\" 	...\"               with format c | l | lw(...).  for others.
...\" 	...\"       Changed all text in SYNOPSIS to bold or italic - no roman.
...\" 	...\"       Placed 1.5i space requirement (.ne) before "return value" and
...\" 	...\"               "related information" sections (many of ...).
...\" 	...\"       Changed all instances of (\|) to (\|).
...\" 	...\"   (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.
...\" 	[1992/07/29  04:45:45  oaf]
...\" 
...\" Revision 1.1.3.2  1992/05/14  19:33:09  buckler
...\" 	Editorial review
...\" 	[1992/05/14  19:30:26  buckler]
...\" 
...\" Revision 1.1  1992/01/29  15:29:52  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED.
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Massachusetts                                             *
...\" All Rights Reserved.                                               *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or        *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
.TH pthread_setscheduler 3thr
...\" .iX "\*Lpthread_setscheduler(\|)\*O"
.iX "thread" "setting current scheduling policy and priority of"
.iX "scheduling policy" "setting for thread"
.iX "priority" "setting for thread"
.SH "Name"
\*Lpthread_setscheduler\*O - Changes
the current scheduling policy and priority of a thread
.SH "Synopsis"
.sS
\*L#include <pthread.h>
.sp .4v
\*Lint pthread_setscheduler\*L(
.nL
	\*Lpthread_t \*Vthread\*L,
.nL
	\*Lint \*Vscheduler\*L,
.nL
	\*Lint \*Vpriority\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.VL
.LI "\*Vthread\*O"
Thread whose scheduling policy is to be changed.
.LI "\*Vscheduler\*O"
New scheduling policy value for the thread specified in \*Vthread\*O.
Valid values are as follows:
.VL
.LI "\*LSCHED_FIFO\*O"
(First In, First Out) The highest-priority thread
runs until it blocks.  If there is more than one thread with the same
priority, and that priority is the highest among other threads, the first
thread to begin running continues until it blocks.
.LI "\*LSCHED_RR\*O"
(Round Robin) The highest-priority thread runs until it
blocks; however, threads of equal priority, if that priority is the highest
among other threads, are timesliced.  Timeslicing is a process in which
threads alternate using available processors.
.LI "\*LSCHED_OTHER\*O"
(Default) All threads are timesliced. \*LSCHED_OTHER\*O ensures that
all threads, regardless of priority, receive some scheduling, and thus
no thread is completely denied execution time. (However,
\*LSCHED_OTHER\*O threads can be denied execution time by
\*LSCHED_FIFO\*O or \*LSCHED_RR\*O threads.)
.nL
.ne 8
.LI "\*LSCHED_FG_NP\*O"
(Foreground) Same as \*LSCHED_OTHER\*O.
Threads are timesliced and priorities can be modified dynamically by the
scheduler to ensure fairness.
.LI "\*LSCHED_BG_NP\*O"
(Background) Like \*LSCHED_OTHER\*O, ensures that all threads, regardless of
priority, receive some scheduling.  However, \*LSCHED_BG_NP\*O can be denied
execution by any of the other scheduling policies.
.LE
.LI "\*Vpriority\*O"
New priority value of the thread specified in \*Vthread\*O.  The
priority attribute depends on scheduling policy.  Valid values fall
within one of the following ranges:
.ad l
.ML
.LI
\*LPRI_OTHER_MIN <= \*Vpriority <= \*LPRI_OTHER_MAX\*O
.LI
\*LPRI_FIFO_MIN <= \*Vpriority <= \*LPRI_FIFO_MAX\*O
.LI
\*LPRI_RR_MIN <= \*Vpriority <= \*LPRI_RR_MAX\*O
.LI
\*LPRI_FG_MIN_NP <= \*Vpriority <= \*LPRI_FG_MAX_NP\*O
.LI
\*LPRI_BG_MIN_NP <= \*Vpriority <= \*LPRI_BG_MAX_NP\*O
.LE
.ad b
.LE
.PP
If you create a new thread without specifying a threads attributes
object that contains a changed priority attribute, the default
priority of the newly created thread is the midpoint between
\*LPRI_OTHER_MIN\*O and \*LPRI_OTHER_MAX\*O (the midpoint between the
minimum and the maximum for the \*LSCHED_OTHER\*O policy).
.PP
When you call this routine to specify a minimum or maximum priority,
use the appropriate symbol; for example, \*LPRI_FIFO_MIN\*O or
\*LPRI_FIFO_MAX\*O.  To specify a value between the minimum and
maximum, use an appropriate arithmetic expression.  For example, to
specify a priority midway between the minimum and maximum for the
Round Robin scheduling policy, specify the following concept using
your programming language's syntax:
.oS
pri_rr_mid = (PRI_RR_MIN + PRI_RR_MAX)/2
.oE
.PP
If your expression results in a value outside the range of minimum to
maximum, an error results when you use it.
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lpthread_setscheduler(\|)\*O
routine changes the current scheduling policy and priority of a thread.
Call this routine to change both the priority and scheduling policy of a
thread at the same time.  To change only the priority, call the
\*Lpthread_setprio(\|)\*O routine.
.PP
A thread changes its own scheduling policy and priority
by using the identifier returned by \*Lpthread_self(\|)\*O.
Changing the scheduling policy or priority, or both, of a thread can cause
it to start executing or to be preempted by another thread.
.PP
This routine differs from \*Lpthread_attr_setprio(\|)\*O and
\*Lpthread_attr_setsched(\|)\*O because those routines set the priority and
scheduling policy attributes that are used to establish the priority and
scheduling policy of a new thread when it is created.  This routine, however,
changes the priority and scheduling policy of an existing thread.
.nL
.ne 3.6i
.SH "Return Values"
If successful, the previous scheduling policy value is returned.  If the function
fails, \*Lerrno\*O may be set to one of the following values:
.PP
.zA "def,9772,R1.2.2, policy to priority in ENOTSUP"
.TS
center, tab(%);
lb | lb | lb
n | l | lw(3.0i).
Return%Error%Description
_
Previous policy%%Successful completion.
\-1%[\*LEINVAL\*O]%The value specified by \*Vthread\*O is invalid.
\-1%[\*LENOTSUP\*O]%T{
An attempt is made to set the priority to an unsupported value.
T}
\-1%[\*LESRCH\*O]%T{
The value specified by \*Vthread\*O does not refer to an existing thread.
T}
\-1%[\*LEPERM\*O]%T{
The caller does not have the appropriate privileges to set the scheduling policy
of the specified thread.
T}
.TE
.zA "def,9772,R1.2.2, policy to priority in ENOTSUP"
...\" .cS
...\" .nL
...\" .ne 1.5i
...\" .SH "EXAMPLES"
...\" .PP
...\" .oS
...\" int pthread_setscheduler (pthread_t *thread, int scheduler,
...\" 	int priority);
...\" .oE
...\" .cE
.nL
.ne 1.5i
.SH "Related Information"
.PP
.ad l
Functions:  \*Lpthread_attr_setprio(3thr)\*O,
\*Lpthread_attr_setsched(3thr)\*O,
\*Lpthread_create(3thr)\*O,
\*Lpthread_self(3thr)\*O,
\*Lpthread_setprio(3thr)\*O.
.ad b
