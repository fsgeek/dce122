...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: pthread_create.3thr,v $
...\" Revision 1.1.11.1  1996/11/19  20:25:29  wardr
...\" 	{edit,R1.2.2}
...\" 	Init capped heads
...\" 	[1996/11/19  20:23:52  wardr]
...\"
...\" Revision 1.1.9.5  1995/06/09  16:22:08  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/06/09  16:17:32  buckler]
...\" 
...\" Revision 1.1.9.4  1994/09/30  17:59:11  weir
...\" 	(Defect, 9772, R1.1)
...\" 	Corrected miscellaneous errors
...\" 	[1994/09/30  17:56:48  weir]
...\" 
...\" Revision 1.1.9.3  1994/08/16  15:17:05  weir
...\" 	Removed extra .TH line
...\" 	[1994/08/16  15:16:28  weir]
...\" 
...\" Revision 1.1.9.2  1993/06/01  18:19:00  buckler
...\" 	{defect, 7564, R1.0.3}
...\" 	Turned off fill mode in RELATED INFORMATION section.
...\" 	[1993/05/28  13:13:23  buckler]
...\" 
...\" Revision 1.1.7.6  1993/02/19  17:02:12  lmk
...\" 	Defect7040,R1.0.2, reworded paragraph in RETURN VALUES section; also deleted extraneous RELATED INFORMATION header
...\" 	[1993/02/19  16:29:38  lmk]
...\" 
...\" Revision 1.1.7.5  1993/02/18  20:34:27  johnson
...\" 	Changes made:  Reworded return values section.
...\" 	File name:     /src/app_ref/man3thr/pthread_create.3thr
...\" 	CR number:     7003
...\" 	[1993/02/18  20:23:17  johnson]
...\" 
...\" 	No changes made.
...\" 	[1993/02/08  18:37:13  johnson]
...\" 
...\" 	*** empty log message ***
...\" 	[1992/07/13  17:22:05  johnson]
...\" 
...\" 	ed/xxx
...\" 	Fixed.ZZ
...\" 	[1992/07/09  19:02:43  johnson]
...\" 
...\" 	Defect:  3930
...\" 
...\" 	File: src/app_ref/man3thr/pthread_create.3thr
...\" 	Short description:  Changed value to lowercase.
...\" 	[1992/07/02  19:02:22  johnson]
...\" 
...\" Revision 1.1.7.4  1993/01/27  20:26:41  cjd
...\" 	Fixing backing build problem
...\" 	[1993/01/27  19:52:40  cjd]
...\" 
...\" Revision 1.1.7.3  1993/01/26  23:19:19  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/26  22:21:50  cjd]
...\" 
...\" 	Embedded copyright notice
...\" 	[1993/01/26  20:53:35  cjd]
...\" 
...\" Revision 1.1.7.2  1992/10/02  19:44:51  weir
...\" 	Moved into 1.0.2doc tree
...\" 	[1992/10/02  18:52:33  weir]
...\" 
...\" 	For P/H, now and forever!
...\" 	[1992/09/16  15:21:23  oaf]
...\" 
...\" Revision 1.1.5.3  1992/09/16  18:43:41  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.5.2  1992/08/03  23:56:00  oaf
...\" 	Final_edits.__Most_files_unchanged.
...\" 	[1992/08/03  23:18:12  oaf]
...\" 
...\" 	 For all files,
...\" 	      implemented redline edits:
...\" 	      Removed all .ds-.de macros, replaced with simple,
...\" 	              "primitive" spacing.
...\" 	      Changed all tables to "canonical" form,
...\" 	              with format n | l | lw(...).  for errno returns,
...\" 	              with format c | l | lw(...).  for others.
...\" 	      Changed all text in SYNOPSIS to bold or italic - no roman.
...\" 	      Placed 1.5i space requirement (.ne) before "return value" and
...\" 	              "related information" sections (many of ...).
...\" 	      Changed all instances of (\|) to (\|).
...\" 	  (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.
...\" 	[1992/07/29  04:34:05  oaf]
...\" 
...\" Revision 1.1.2.4  1992/05/14  16:47:16  buckler
...\" 	Editorial review
...\" 	[1992/05/14  16:44:25  buckler]
...\" 
...\" Revision 1.1.2.3  1992/05/11  17:42:43  weir
...\" 	Submitted for DEC.
...\" 	[1992/05/11  17:05:50  weir]
...\" 
...\" Revision 1.1.2.2  1992/05/05  19:14:51  johnson
...\" 	Changes made:  Changed value to lowercase.
...\" 	File name:     /app_ref/man3thr/pthread_create.3thr
...\" 	CR number:     2588
...\" 	[1992/05/05  19:14:11  johnson]
...\" 
...\" Revision 1.1  1992/01/29  15:30:07  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED.
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Massachusetts                                             *
...\" All Rights Reserved.                                               *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or        *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
.TH pthread_create 3thr
...\" .iX "\*Lpthread_create(\|)\*O"
.iX "\*Lpthread_create(\|)\*O"
.iX "thread" "creating"
.iX "creating a thread"
.iX "thread" "events that cause termination"
.iX "thread" "normal termination"
.iX "thread" "error termination"
.iX "termination of a thread" "events that cause"
.iX "termination of a thread" "normal"
.iX "termination of a thread" "error"
.iX "normal termination of a thread"
.iX "error termination of a thread"
.SH "Name"
\*Lpthread_create\*O - Creates a thread object and thread
.SH "Synopsis"
.sS
\*L#include <pthread.h>
.sp .4v
\*Lint pthread_create(\*L
.nL
	\*Lpthread_t *\*Vthread\*L,
.nL
	\*Lpthread_attr_t \*Vattr\*L,
.nL
	\*Lpthread_startroutine_t \*Vstart_routine\*L,
.nL
	\*Lpthread_addr_t \*Varg\*L);
.sE
.nL
.ne 1.5i
.SH "Parameters"
.VL
.LI "\*Vthread\*O"
Handle to the thread object created.
.LI "\*Vattr\*O"
Thread attributes object that defines the characteristics of the
thread being created.  If you specify \*Lpthread_attr_default\*O,
default attributes are used.
.LI "\*Vstart_routine\*O"
Function executed as the new thread's start routine.
.LI "\*Varg\*O"
Address value copied and passed to the thread's start routine.
.LE
.nL
.ne 1.5i
.SH "Description"
.PP
The \*Lpthread_create(\|)\*O 
routine creates a thread object and a thread.  A \*Ethread\*O is a 
...\".gL "thread"
single, sequential flow of control within a program.  It is the active
execution of a designated routine, including any nested routine invocations.
A thread object defines and controls the executing thread.
.SS "Creating a Thread"
.PP
Calling this routine sets into motion the following actions:
.ad l
.ML
.LI
An internal thread object is created to describe the thread.
.LI
The associated executable thread is created with attributes specified by
the \*Vattr\*O parameter (or with default attributes if
\*Lpthread_attr_default\*O is specified).
.LI
The \*Vthread\*O parameter receives the new thread.
.LI
The \*Vstart_routine\*O function is called.  This may occur before this
routine returns successfully.
.LE
.ad b
.SS "Thread Execution"
.PP
The thread is created in the ready state and therefore might immediately
begin executing the function specified by the \*Vstart_routine\*O
parameter.
The newly created thread begins running before \*Lpthread_create(\|)\*O
completes if the new thread follows the \*LSCHED_RR\*O or
\*LSCHED_FIFO\*O scheduling
policy or has a priority higher than the creating thread, or both.
Otherwise, the new thread begins running at its turn, which with sufficient
processors might also be before \*Lpthread_create(\|)\*O returns.
.PP
The \*Vstart_routine\*O parameter is passed a copy of the \*Varg\*O
parameter.  The value of the \*Varg\*O parameter is unspecified.
.PP
The thread object exists until the \*Lpthread_detach(\|)\*O routine is
called or the thread terminates, whichever occurs last.
.PP
The synchronization between the caller of \*Lpthread_create(\|)\*O and the
newly created thread is through the use of the \*Lpthread_join(\|)\*O routine
(or any other mutexes or condition variables they agree to use).
.SS "Terminating a Thread"
.PP
A thread terminates when one of the following events occurs:
.ad l
.ML
.LI
The thread returns from its start routine.
.LI
The thread exits (within a routine) as the result of calling the
\*Lpthread_exit(\|)\*O routine.
.LI
The thread is canceled.
.LE
.ad b
.SS "When a Thread Terminates"
.PP
The following actions are performed when a thread terminates:
.ad l
.ML
.LI
If the thread terminates by returning from its start routine or calling
\*Lpthread_exit(\|)\*O, the return value is copied into the thread object.
If the start routine returns normally and the start routine is a procedure
that does not return a value, then the result obtained by
\*Lpthread_join(\|)\*O is unpredictable.  If the thread has been cancelled, a
return value of \-1 is copied into the thread object.  The return value can
be retrieved by other threads by calling the \*Lpthread_join(\|)\*O
routine.
.LI
A destructor for each thread-specific data point is removed from the list of
destructors for this thread and then is called.  This step destroys all the
thread-specific data associated with the current thread.
.nL
.ne 7
.LI
Each cleanup handler that has been declared by
\*Lpthread_cleanup_push(\|)\*O and not yet removed by
\*Lpthread_cleanup_pop(\|)\*O is called.  The most recently pushed handler
is called first.
.LI
A flag is set in the thread object indicating that the thread has
terminated.  This flag must be set in order for callers of 
\*Lpthread_join(\|)\*O to return from the call.
.LI
A broadcast is made so that all threads currently waiting in a call to
\*Lpthread_join(\|)\*O can return from the call.
.LI
The thread object is marked to indicate that it is no longer needed by
the thread itself.  A check is made to determine if the thread object is no
longer needed by other threads; that is, if \*Lpthread_detach(\|)\*O has
been called.  If that routine is called, then the thread object
is deallocated.
.LE
.ad b
.nL
.ne 1.5i
.SH "Return Values"
.PP
Upon successful completion, this routine stores the identifier of the
created thread at \*Vthread\*O and returns 0. Otherwise, a value of -1 is
returned and no thread is created, the contents of \*Vthread\*O are
undefined, and \*Lerrno\*O may be set to one of the following values:
.PP
.ne 1.5i
.TS
center, tab(%);
lb | lb | lb
l | l | lw(3.0i).
Return%Error%Description
_
0%%Successful completion.
\-1%[\*LEAGAIN\*O]%T{
The system lacks the necessary resources to create another thread.
T}
\-1%[\*LENOMEM\*O]%T{
Insufficient memory exists to create the thread object.  This is not a temporary condition.
T}
.TE
...\" .cS
...\" .nL
...\" .ne 1.5i
...\" .SH "EXAMPLES"
...\" .PP
...\" .oS
...\" int pthread_create (pthread_t *thread, pthread_attr_t attr,
...\" 	pthread_startroutine_t start_routine, pthread_addr_t arg);
...\" .oE
...\" .cE
.nL
.ne 1.2i
.SH "Related Information" 
.ad l
.PP
Functions:  \*Lpthread_attr_create(3thr)\*O, \*Lpthread_cancel(3thr)\*O, 
\*Lpthread_detach(3thr)\*O, 
\*Lpthread_exit(3thr)\*O, \*Lpthread_join(3thr)\*O.
.ad b
