...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: pthreads_add,v $
...\" Revision 1.1.2.6  1994/10/03  19:43:11  steto
...\" 	[enh, 9951, R1.1, Updated the message format for GA.}
...\" 	[1994/10/03  19:42:54  steto]
...\"
...\" Revision 1.1.2.5  1994/09/06  14:59:11  steto
...\" 	{edt, R1.1, Fixed spelling error.}
...\" 	[1994/09/06  14:58:53  steto]
...\" 
...\" Revision 1.1.2.4  1994/09/06  14:20:16  steto
...\" 	{edt, R1.1, Changed the character for the text string.}
...\" 	[1994/09/06  14:19:52  steto]
...\" 
...\" Revision 1.1.2.3  1994/06/13  16:15:44  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  16:09:57  devobj]
...\" 
...\" Revision 1.1.2.2  1994/06/06  17:26:19  digan
...\" 	{enh,CR9951,R1.1}
...\" 	Removed last two lines so they would not be repeated when added to the
...\" 	compiled file.
...\" 	[1994/06/06  17:25:42  digan]
...\" 
...\" Revision 1.1.2.1  1994/06/06  13:03:13  digan
...\" 	{enh, CR 9951, R1.1}
...\" 	This file is to be copy to the beginning of the fully compiled sams
...\" 	file
...\" 	[1994/06/03  15:28:31  digan]
...\" 
...\" $EndLog$
.sp 1
.LI"\*L----------   ------\*O"
.P
\*LSeverity:\*O Notice  \*LComponent:\*O Threads
.P
\*LText:\*O  
Asynchronous or General cancelabilty was off.
.P
\*LExplanation:\*O
A successful attempt was made to set either asynchronous or general
cancelability to off.  
.P
\*LAction:\*O
None required.
.sp 1
.LI"\*L----------    ------\*O"
.P
\*LSeverity:\*O Notice  \*LComponent:\*O Threads
.P
\*LText:\*O  
Asynchronous or General cancelability was on.
.P
\*LExplanation:\*O
A successful attempt was made to set either asynchronous or general
cancelability to on.  
.P
\*LAction:\*O
None required.
.sp 1
.LI"\*L----------    ------\*O"
.P
\*LSeverity:\*O Notice  \*LComponent:\*O Threads
.P
\*LText:\*O
The mutex is locked; therefore, it is not acquired.
.P
\*LExplanation:\*O
An attempt was made to lock a mutex using the
\*Lpthread_mutex_trylock\*O routine.  This occurs if the mutex is
locked by another thread when this routine is called.  Zero (0) is
returned and the thread does not wait to acquire the lock, but takes
whatever action is appropriate.
.P
\*LAction:\*O
None required.  
.sp 1
.LI"\*L----------   ------\*O"
.P
\*LSeverity:\*O Notice  \*LComponent:\*O Threads
.P
\*LText:\*O  
Successful completion.
.P
\*LExplanation:\*O
The requested routine executed successfully.  Generally, zero (0) is 
returned by \*Lerrno\*O. In some cases, the requested attribute value
is returned. 
.P
\*LAction:\*O
None required.
.sp 1
.LI"\*L----------   ------\*O"
.P
\*LSeverity:\*O Notice  \*LComponent:\*O Threads
.P
\*LText:\*O  
Values of thread1 and thread2 designate the same object.
.P
\*LExplanation:\*O
An attempt was made to compare one thread identifier to another thread
identifier using the \*Lpthread_equal\*O routine.
.P
\*LAction:\*O
None required.
.sp 1
.LI"\*L----------   ------\*O"
.P 
\*LSeverity:\*O Notice  \*LComponent:\*O Threads
.P
\*LText:\*O  
Values of thread1 and thread2 do not designate the same object.
.P
\*LExplanation:\*O
An attempt was made to compare one thread identifier to another thread
identifier using the \*Lpthread_equal\*O routine.
.P
\*LAction:\*O
None required.
