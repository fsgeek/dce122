...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\" 
...\" HISTORY
...\" $Log: gds.schema_admin.gpsml,v $
...\" Revision 1.1.4.1  1996/06/18  14:53:36  wardr
...\" 	{enh,R1.2.2}
...\" 	Update for sgml conversion
...\" 	[1996/06/18  14:48:14  wardr]
...\"
...\" Revision 1.1.2.5  1995/08/15  20:10:30  weir
...\" 	Prentice-Hall edits: second pass
...\" 	[1995/08/15  20:09:38  weir]
...\" 
...\" Revision 1.1.2.4  1995/08/02  18:36:04  weir
...\" 	Prentice-Hall edits
...\" 	[1995/08/02  18:35:25  weir]
...\" 
...\" Revision 1.1.2.3  1994/10/25  17:17:21  rnollman
...\" 	added index entries
...\" 	[1994/10/25  17:17:10  rnollman]
...\" 
...\" Revision 1.1.2.2  1994/09/01  17:01:42  rnollman
...\" 	[rnollman] - checkin with editOSF editorial comments
...\" 	[1994/09/01  16:55:10  rnollman]
...\" 
...\" Revision 1.1.2.1  1994/08/04  21:03:56  hal
...\" 	Create DCE GDS Admin Gd & Ref from GDS parts of Adm Gd & Cmd Ref; fix log leaders if needed
...\" 	[1994/08/04  20:11:09  hal]
...\" 
...\" 	Creating GDS Admin Gd & Ref from Admin book.extended, Cmd Ref
...\" 
...\" Revision 1.1.4.12  1994/08/02  20:19:33  rnollman
...\" 	checkin for restructure
...\" 	[1994/08/02  20:11:03  rnollman]
...\" 
...\" Revision 1.1.4.11  1994/05/14  14:40:04  rnollman
...\" 	final final beta submittal
...\" 	[1994/05/14  14:27:31  rnollman]
...\" 
...\" Revision 1.1.4.10  1993/11/11  20:05:05  rnollman
...\" 	update SNI copyright
...\" 	[1993/11/11  20:04:44  rnollman]
...\" 
...\" Revision 1.1.4.9  1993/11/11  18:20:23  rnollman
...\" 	minor editorial fix
...\" 	[1993/11/11  18:20:07  rnollman]
...\" 
...\" Revision 1.1.4.8  1993/10/11  20:06:00  rnollman
...\" 	fixed CR again
...\" 	[1993/10/11  20:05:36  rnollman]
...\" 
...\" Revision 1.1.4.7  1993/10/11  20:02:55  rnollman
...\" 	fixed change bar entry -- CR number
...\" 	[1993/10/11  20:02:04  rnollman]
...\" 
...\" Revision 1.1.4.6  1993/10/11  18:35:58  rnollman
...\" 	added changes from Munich
...\" 	[1993/10/11  18:35:37  rnollman]
...\" 
...\" Revision 1.1.4.5  1993/09/18  17:52:24  tmw
...\" 	Added index entries for second version of master index.
...\" 	[1993/09/18  17:46:39  tmw]
...\" 
...\" Revision 1.1.4.4  1993/08/12  17:25:18  buckler
...\" 	{edit, R1.0.2}
...\" 	Prentice-Hall editorial changes.
...\" 	[1993/08/12  16:26:29  buckler]
...\" 
...\" Revision 1.1.4.3  1993/06/22  14:44:04  lmk
...\" 	{defect, 8125, R1.0.2a}
...\" 	Added .zA and .zZ markers to Figure 10-13 and Figure 10-15 fixes made
...\" 	in the last revision.
...\" 	[1993/06/22  14:43:26  lmk]
...\" 
...\" Revision 1.1.4.2  1993/06/17  21:48:12  rnollman
...\" 	incorporated editorial changes from OSF
...\" 	[1993/06/17  21:47:01  rnollman]
...\" 
...\" Revision 1.1.2.16  1993/03/02  18:47:37  buckler
...\" 	Fixed mismatching .zA and .zZ codes
...\" 	[1993/03/02  18:46:04  buckler]
...\" 
...\" Revision 1.1.2.15  1993/02/26  19:57:55  rnollman
...\" 	last change for final draft
...\" 	[1993/02/26  19:57:10  rnollman]
...\" 
...\" Revision 1.1.2.14  1993/02/23  04:38:01  rnollman
...\" 	last fix for final draft
...\" 	[1993/02/23  04:37:10  rnollman]
...\" 
...\" Revision 1.1.2.13  1993/02/23  04:02:41  rnollman
...\" 	final fixes for final draft
...\" 	[1993/02/23  04:02:14  rnollman]
...\" 
...\" Revision 1.1.2.12  1993/02/22  13:45:00  rnollman
...\" 	small fix for final draft
...\" 	[1993/02/22  13:44:31  rnollman]
...\" 
...\" Revision 1.1.2.11  1993/02/21  18:11:52  rnollman
...\" 	fixed for final draft
...\" 	[1993/02/21  18:11:26  rnollman]
...\" 
...\" Revision 1.1.2.10  1993/02/05  16:59:43  rnollman
...\" 	inc changes for final draft
...\" 	[1993/02/05  16:54:39  rnollman]
...\" 
...\" Revision 1.1.2.9  1993/02/03  16:16:48  steiner
...\" 	Removed page breaks at subsection headings.  Instead, surrounded
...\" 	masks and their titles with .DS/.DE to keep them on the same page.
...\" 	[1993/02/03  16:16:25  steiner]
...\" 
...\" Revision 1.1.2.8  1993/01/28  20:06:49  dbelch
...\" 	Embedding copyright notice
...\" 	[1993/01/28  18:39:55  dbelch]
...\" 
...\" Revision 1.1.2.7  1993/01/27  22:51:24  buckler
...\" 	Fixed cross-refs and figure calls for new book org
...\" 	[1993/01/27  22:50:59  buckler]
...\" 
...\" Revision 1.1.2.6  1993/01/08  23:10:18  rom
...\" 	Fix comment leaders.
...\" 	[1993/01/08  23:05:03  rom]
...\" 
...\" 	Restore leading gds/ to filename arguments to .so.
...\" 	[1993/01/08  22:44:03  rom]
...\" 
...\" Revision 1.1.2.5  1993/01/08  14:38:18  marrek
...\" 	Changes from SSE Dublin.
...\" 	[1993/01/08  14:37:27  marrek]
...\" 
...\" Revision 1.1.2.4  1992/12/14  15:52:50  rnollman
...\" 	    check-in so that Dublin can work on files
...\" 	    [1992/12/14  15:52:23  rnollman]
...\" 
...\" Revision 1.1.2.3  1992/10/26  22:44:36  rnollman
...\" 	    work in progress
...\" 	    [1992/10/26  22:44:05  rnollman]
...\" 
...\" Revision 1.1.2.2  1992/10/19  19:45:53  rnollman
...\" 	    added new file
...\" 	    [1992/10/19  19:45:03  rnollman]
...\" 
...\" $EndLog$
...\" /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
...\" * COPYRIGHT   (C)  SIEMENS NIXDORF INFORMATIONSSYSTEME AG 1993   *
...\" *                  ALL RIGHTS RESERVED                           *
...\" *                                                                *
...\" * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
.H 1 "Schema Administration"
.iX "-[" "schemas" "administration"
.la E
.so gd/screen.mac
.am HX
.la E
.sk nh
..
Schema administration is a central administration task in a directory
system and must be coordinated with all administrators in the system.
.P
The directory schema governs the structure of the directory tree
and consists of a set of rules that define the name structure and
the object classes, as well as the attribute classes and their syntax.
The X.500 directory standard describes only the schema concept and 
not the schema structure and protocol elements for the schema 
administration.
.P
In GDS, the schema is stored as an object in the directory directly under
the root with
.nL
.P
\*LDN : /CN=Schema\*O
.P
.nL
A default schema (see 
...\" appendixes entitled "Structure Rule Table,"
...\" "Object Class Table," and "Attribute Table") 
Appendixes A, B, and C)
is supplied to initialize a directory service system.
.P
After the GDS is configured and initialized, the DIT contains a schema
object with a minimum number of ACLs.  This means that anybody can change
the schema object.  Therefore, it is recommended that, after the object of
the administrator is added, the administrator's DN be entered in the ACL
of the schema object to prevent an unauthorized person from changing or
destroying the schema object.
.nL
.ne 20
.P
The recurring attributes described in the following list
are the most important attributes of the directory schema object in GDS.
These describe the database structure of the directory.
.iX "-[" "Structure Rule Table" "about"
.gL "Structure Rule Table"
.gL "SRT"
.gL "Object Class Table"
.gL "OCT"
.gL "Attribute Table"
.gL "AT"
.VL
.LI "\*LStructure Rule Table\*O (SRT)"
.nL
The SRT describes the structure of the DNs permitted in
the directory and the object classes that can be assigned to objects
with the name structure specified by the structure rule.  Each structure
rule determines the naming attributes for an object.
The DN of the superior object is determined by
the superior structure rule.  The DN of the object is the
DN of the superior object and an RDN whose attribute types
are listed in the structure rule of the object.
The following information is stored for each structure rule:
.P
.ML
.LI
Number of the structure rule
.LI
Number of the superior rule
.LI
Acronyms of the naming attributes
.LI
Acronym of the assigned object class
.LE
.P
The default entries in the SRT supplied with GDS are listed in 
...\" the appendix entitled "Structure Rule Table."
Appendix A.
.iX "-]" "Structure Rule Table" "about"
.iX "Object Class Table" "about"
.iX "attributes" "mandatory"
.LI "\*LObject Class Table\*O (OCT)"
.nL
An object class defines the set of mandatory attributes that must be present
in an entry of a given class, as well as the optional attributes that can
be present in an entry of a given class.
.P
The OCT describes the object classes supported by the directory
(for example, \*LCountry,
Organizational-Person\*O).  The following information is stored for
each object class:
.P
.ML
.LI 
Acronym of the object class
.LI
Acronyms of superclasses
.LI
Object identifier of the object class
.LI
Name of the object class
.LI
Kind of object class
.LI
File number of the relevant object file
.LI
Acronyms of auxiliary object classes
.LI
Acronyms of mandatory attributes
.LI
Acronyms of optional attributes
.LE
.P
An object identifier can be defined by a registration authority such as
the International Organization for Standardization (ISO) or by an
individual for private purposes.
.P
The default entries in the OCT supplied with GDS are listed in 
...\" the appendix entitled "Object Class Table."
Appendix B.
.P
.nS note
The objects can be stored in various object files depending on the file
number component of the object class.  There is
usually one object file for the schema (file number 0) and three object files
for all the other objects in the default schema 
(file numbers 1, 2, and 3).  If an
object class is not stored in a file, this is indicated by file number -1.
.P
It is recommended that all
object classes with several attribute types in common be
stored in the same object file in order to increase performance.  Otherwise,
they should be stored in different object files to save disk space.
.nE
.iX "Attribute Table" "about"
.iX "attributes" "permitted types"
.LI "\*LAttribute Table\*O (AT)"
.nL
The AT describes the attribute types permitted in the directory.  The
following information is stored for each attribute type:
.P
.ML
.LI 
Acronym of the attribute type
.LI
Object identifier of the attribute type
.LI
Attribute name
.LI
Lower and upper bounds of the attribute value
.LI
Maximum number of attribute values allowed
.LI
Attribute syntax
.LI
Flag indicating whether phonetic matching is permitted for the
attribute
.nL
.ne 20
.LI 
Access class of the attributes Public, Standard, and Sensitive
(see 
...\" the section "Access Control" in 
...\" the chapter entitled "Overview of the X.500 Directory Service").
Section 1.5.3)
.LI 
Index level of the attribute
.gL "Index priority"
.LE
.P
The default entries in the AT supplied with GDS are listed in 
...\" the appendix entitled "Attribute Table."
Appendix C.
.LE
.P
The following information is relevant for the attribute table:
.P
.ML
.LI
.iX "-[" "attributes" "syntax"
Attribute Syntax
.P
The attribute syntax defines the syntactic rules for the attribute values.
It includes the data type in ASN.1 and, usually, one or more matching rules
that are used for comparing values.
(For further information, see Recommendation X.520 and X.411.)
.P
Table 9-1 shows the syntaxes that can be applied.
.LI
Phonetic Matching
.P
.iX "phonetic matching"
.iX "attributes" "phonetic matching"
If phonetic matching is permitted for an attribute, some slight
deviations in the attribute value are also tolerated in search queries
(for example, \*LRaier/Reier\*O) on request.
.LI
Index Level
.iX "index levels"
.iX "attributes" "priorities for search queries"  
.P
The user can determine the priority of an attribute in search queries by
using the index level.
GDS first searches for the entries whose attributes with a
higher index level (that is, a higher number is specified)
fulfill the \*Lfilter\*O condition.
Attributes whose
values seldom occur (for example, street and house number), which 
greatly restrict the number of hits, need to be given a high priority
compared to attributes whose values frequently occur
(for example, place of residence).
Index level 0 must be assigned to the attributes
.gL "Filter"
that are never or seldom used as filter attributes.
.P
GDS first searches the directory for the objects according to the
attributes with high priority in order to minimize the number of hits.
.LE
.gL "Access Control List"
.gL "ACL"
.P
.ne 4.0i
.TB "Attribute Syntaxes"
.TS
center,box,tab(@);
lB | lB
l | lw(3i).
Syntax@Description
=
.TH
Case Exact String@T{
A string is either a Printable String or a T.61 String (containing 
only T.61 characters according to X.208, T.61).  Matches 
for equality and substrings.  The matching is case sensitive. 
Uppercase/lowercase is observed.
T}
_
Case Ignore String@T{
A string is either a Printable String or a T.61 String (containing only 
T.61 characters according to X.208, T.61).  Matches for 
equality and substrings.  The matching is 
case sensitive.  Uppercase/lowercase is not observed.
T}
_
Octet String@T{
Octet strings are any byte sequence (according to X.208). 
All characters are permitted.  Matches
for equality, substrings, and ordering.
T}
_
Access\ Control\ List@T{
Attribute values must correspond to the GDS specific attribute syntax. 
The ACL defines DNs and their interpretations (\*LSINGLE OBJECT\*O or 
\*LSUBTREE\*O) for different access classes.
T}
_
Distinguished\ Name@T{
Sequence of RDNs, which themselves are a set of AVAs;
matches for equality.
T}
_
Any@T{
Any byte sequence; no matching.
T}
_
Object Identifier syntax@T{
Attribute value must correspond to the Object Identifier syntax (for example,
85.4.6 used as a hex value); matches for equality.
T}
_
ASN.1 String@T{
Attribute value is represented in ASN.1 format; no matching is defined.
T}
.TE
...\" 
.nL
.ne 20
...\" 
...\" 
...\" 
.TS
center,box,tab(@);
lB | lB
l | lw(3i).
Syntax@Description
=
.TH
Printable\ String@T{
Only printable characters are permitted (according to X.208 standard); matches
for equality, substrings, and ordering.
T}
_
Numeric String@T{
Only digits and space are
permitted (according to X.208 standard); 
matches for equality and substrings 
(space characters are skipped during matching).
T}
_
Case Ignore List@T{
List of Case Ignore Strings.
T}
_
Boolean@T{
Only TRUE and FALSE are permitted 
(according to X.208 standard); matches for equality.
T}
_
Integer@T{
Only integers are permitted 
(according to X.208 standard); matches for equality and ordering.
T}
_
UTC-Time@T{
Absolute time (by X.208 standard); 
matches for equality and ordering (for example, \*VYYMMDDhhmmssZ\*O 
(\*VYY\*O = year, \*VMM\*O = month, \*VDD\*O = day, 
\*Vhh\*O = hour, \*Vmm\*O = minutes, \*Vss\*O = seconds).
T}
_
Telephone Number@T{
Telephone numbers in Printable String format; 
matches for equality and substrings 
(spaces, dashes, slashes are skipped during comparison).
T}
_
Search Guide@T{
Complex recursive attribute syntax; 
components are Object Identifier and Criteria; no matching.
T}
_
Password@T{
Any byte sequence (according to X.208 standard); matches for equality only.
T}
.TE
...\" 
.nL
.ne 20
...\" 
...\" 
...\" 
.TS
center,box,tab(@);
lB | lB
l | lw(3i).
Syntax@Description
=
.TH
Country\ Name@T{
Same as Printable String syntax, 
but country names only according to ISO 3166 
(for further information on Country syntax, see
...\" the Appendix entitled "Valid Characters for GDS Naming Attributes") 
Appendix E); matches for equality.
T}
_
Presentation Address@T{
Consists of a Set of NSAP addresses and, optionally, 
P-Selector, S-Selector and T-Selector; matches for equality.
T}
_
Fax Number@T{
Consists of a telephone number (Printable String) and, 
optionally, the G3 facsimile nonbasic parameters; matches for equality.
T}
_
TTX-ID@T{
Consists of a teletex terminal ID and, optionally, 
the terminal nonbasic parameters; matches for equality.
T}
.TE
...\" 
.sp .5
.P
Refer to 
...\" the Appendixes entitled "Structure Rule Table",
...\" "Object Class Table" and "Attribute Table" 
Appendixes A, B, and C
for examples of the respective tables and a description of the default schema.
.P
.iX "Distinguished Names (DN)" "examples of nonstandard"
The following examples illustrate which DNs can
be stored in the DIT and which DNs do not conform to the
definitions in the standard schema and, as a result, cannot be generated:
.ML
.LI
Object 1, \*L/C=US/O=OSF/OU=Sales/CN=Smith\*O, with its object class equal
to \*LORP\*O conforms to the SRT and can be entered in the DIT.  In contrast,
object 2, \*L/C=US/OU=Sales\*O, with its object class equal to \*LOU\*O does not
conform to the given structure rules.
.P
When adding object 1 to the DIT, it is necessary to specify at least the
mandatory attributes as listed in the OCT
under the entries for object class \*LORP\*O and its superclasses \*LPER\*O
and \*LTOP\*O.  In this table,
the attributes are \*LOCL\*O, \*LCN\*O, and \*LSN\*O.  Furthermore, the
optional attributes listed in the same table for the object class \*LORP\*O
and its superclasses \*LPER\*O and \*LTOP\*O can also be specified.
The values of the attributes must
conform to the lower and upper bound values, the maximum number of values,
and the attribute syntax as specified in the AT.
.nL
.ne 20
.LI
Object 3, \*L/C=US/O=OSF/OU=Sales/CN=Smith,OU=dep.3\*O, with four object
class values, \*LORP\*O, \*LPER\*O, \*LMUS\*O, 
and \*LTOP\*O conforms to all
three tables and can be entered.  In contrast, object 4, \*L/C=US/O=OSF/OU=Sales/CN=Smith,OU=dep.3\*O, with the object class value
\*LAPP\*O does not conform and is refused.
.LI
Object 5, \*L/C=US/O=OSF/OU=Sales/CN=miller/CN=dsa-47\*O, with object
class \*LAPE\*O conforms to the tables only if the superior node,
\*L/C=US/O=OSF/OU=Sales/CN=miller\*O, has the object class value \*LAPP\*O.
It is refused, however, if the latter object class value is an \*LORP\*O.
.LE
.P
The operations of the schema administration are called by selecting 
option number 2 in Mask 3 (see 
...\" Figure 3 in the chapter entitled "Logging On to a DSA or to the Cache"). 
Figure 7-4).
The SRT, OCT, and AT are then loaded automatically
in the memory of the administration program.
.P
Modification of the schema is subject to several restrictions, which are
described throughout this chapter.
.P
It is advisable to save the old data before modifying
the schema (see 
...\" the section "Saving Local Data to Diskette/Tape/File" in 
...\" the chapter entitled "Administering the Directory System").
Section 4.2.1).
.P
After the schema is modified, the initial DSA transfers the
modified schema to all DSAs (if a shadowing job exists for the schema
object).  For further information, see 
...\" the chapter entitled "Shadow Administration."
Chapter 10.
.iX "-]" "schemas" "administration"
.iX "-]" "attributes" "syntax"
.P
.nS note
A schema specification file, \*LXOI_SCHEMA_FILE\*O, is used by
\*Lgdscp\*O to read some of the details related to the attributes and
object classes.  If you change the schema, you must edit this file so
that the attributes displayed by \*Lgdscp\*O reflect the attributes in
the new schema.  Refer to the Appendix K
for information on the format of the file and how to edit it.
.nE
.H 2 "Masks"
This section describes the masks used for schema administration.
.H 3 "Mask 9: Schema Operations"
.iX "Mask 9 (Schema Operations)"
.iX "masks" "schema operations (9)"
.iX "schemas" "administration (mask 9)"
Select the schema administration operation to be executed from
Mask 9 (Figure 9-1).
.P
.ne 4.0i
.in 0
.FG "Mask 9: Schema Operations"
.sS "(Mask 9)" "Schema Administration"
    \c
.us "Operations"
.sp .25
           0   Exit
.sp -.15
           1   Store Schema
.sp -.15
           2   Load Schema
.sp -.15
     (SRT):3   Display SRT
.sp -.15
           4   Add SRT Entry
.sp -.15
           5   Delete SRT Entry
.sp -.15
           6   Modify SRT Entry
.sp -.15
     (OCT):7   Display OCT
.sp -.15
           8   Add OCT Entry
.sp -.15
           9   Delete OCT Entry
.sp -.15
          10   Modify OCT Entry
.sp -.15
     (AT):11   Display AT
.sp -.15
          12   Add AT Entry
.sp -.15
          13   Delete AT Entry
.sp -.15
          14   Modify AT Entry
.sE
.P
.oS
Which operation ?
.oE
.in
.P
Mask 9 displays the following field:
.VL
.LI "\*LWhich operation\*O"
.nL
Select the number of the operation to be executed (0 to 14).
.LE
.P
Depending on the selected operation, one of the following masks is
displayed:
.VL
.LI "\*LStore Schema\*O"
.nL
No mask
.LI "\*LLoad Schema\*O"
.nL
No mask
.LI "\*LDisplay SRT\*O"
.nL
Mask 10 (Section 9.1.5)
.LI "\*LAdd SRT Entry\*O"
.nL
Mask 10 (Section 9.1.5)
.LI "\*LDelete SRT Entry\*O"
.nL
Mask 10 (Section 9.1.5)
.LI "\*LModify SRT Entry\*O"
.nL
Mask 10 (Section 9.1.5)
.LI "\*LDisplay OCT\*O"
.nL
Mask 11 (Section 9.1.6)
.LI "\*LAdd OCT Entry\*O"
.nL
Mask 11 (Section 9.1.6)
.LI "\*LDelete OCT Entry\*O"
.nL
Mask 11 (Section 9.1.6)
.LI "\*LModify OCT Entry\*O"
.nL
Mask 11 (Section 9.1.6)
.LI "\*LDisplay AT\*O"
Mask 12 (Section 9.1.7)
.LI "\*LAdd AT Entry\*O"
.nL
Mask 12 (Section 9.1.7)
.LI "\*LDelete AT Entry\*O"
.nL
Mask 12 (Section 9.1.7)
.LI "\*LModify AT Entry\*O"
.nL
Mask 12 (Section 9.1.7)
.LE
.H 3 "Mask 9a: Structure Rule List Mask"
.iX "Mask 9a (Structure Rule List Mask)"
.iX "-[" "masks" "structure rule list (9a)"
.iX "-[" "schemas" "structure rule list (mask 9a)"
Mask 9a (Figure 9-2) is used to display more than one structure rule
on the screen.  For each structure rule, the
rule number, superior rule number, and acronyms of naming attributes
are displayed on one line. 
.P
When a structure rule is selected from this list,
the structure rule and its remaining component (\*LStructural Object Class\*O)
is displayed in Mask 10.  For example:
.iS
9    4    CN    OU
.iE
.P
In the example \*L9\*O is the rule number, \*L4\*O is the superior rule
number, and \*LCN\*O and \*LOU\*O are acronyms of naming attributes.
.P
.ne 4.0i
.in 0
.FG "Mask 9a: Structure Rule List Mask"
.sS "(Mask 9a)" "Display SRT"
	  \*C1		 0		CN
.sp -.15
	  2		 0		 C
.sp -.15
	  3		 2		 O
.sp -.15
	  4		 3		OU
.sp -.15
	  5		 4		CN
.sp -.15
	  6		 4		CN
.sp -.15
	  7		 4		CN
.sp -.15
	  8		 4		CN
.sp -.15
	  9		 4		CN  OU
.sp -.15
	 10		 7		CN
.sp -.15
	 11		 7		CN
.sp -.15
	 12		 7		CN
.sp -.15
	 13		 7		CN
.sp -.15
	 14		 7		CN
.sp -.15
	 15		 2		 L
.sp -.15
	 16		15		CN
.sE
.in
.P
Each line contains one structure rule.
.P
Use 
.kY "Scroll Up"
and
.kY "Scroll Down"
to page up and down.
.P
Use
.kY "\(ua"
and
.kY "\(da"
to position the cursor on the element
to be selected, and
.kY "Return"
to mark the element.
More than one element can be selected.
To unmark the positioned
element, press
.kY "Return"
again.
.P
Use
.kY "Menu"
to display all the components of the selected structure rules.
.P
If none of the structure rules is selected, it is assumed that all structure
rules have been selected and they will be displayed one at a time in Mask 10.
.P
To exit from Mask 9a, press
.K, "Del" \&.
.iX "-]" "masks" "structure rule list (9a)"
.iX "-]" "schemas" "structure rule list (mask 9a)"
.H 3 "Mask 9b: Object Class List Mask"
.iX "Mask 9b (Object Class List Mask)"
.iX "-[" "masks" "object class list (9b)"
.iX "-[" "Object Class Table" "mask 9b"
.iX "-[" "object class list (mask 9b)"
Mask 9b (Figure 9-3)
is used to display more than one object class entry on the screen.
For each object class, the object class acronym, object class name, and
object identifier are displayed on one line.  For example:
.iS
ALI    Alias    85.6.1
.iE
.P
In the example,
\*LALI\*O is the object class acronym, \*LAlias\*O is the object
class name, and \*L85.6.1\*O is the object identifier.
.P
When an object class is
selected from this list, additional components are displayed in Mask 11.
.P
.ne 4.0i
.in 0
.FG "Mask 9b: Object Class List Mask"
.sS "(Mask 9b)" "Display OCT"
  \*CALI		 Alias				85.6.1		
.sp -.15
  APE		 Application-Entity		85.6.12
.sp -.15
  APP		 Application-Process		85.6.11
.sp -.15
  C		 Country				85.6.2
.sp -.15
  DEV		 Device				85.6.14
.sp -.15
  DSA		 Directory-Service-Agent		85.6.13
.sp -.15
  GON		 Group-of-Names			85.6.9
.sp -.15
  GTP		 GDS-Top				---
.sp -.15
  LOC		 Locality			85.6.3
.sp -.15
  MDL		 MHS-Distribution-List		86.5.1.0
.sp -.15
  MMS		 MHS-Message-Store		86.5.1.1
.sp -.15
  MTA		 MHS-Mess-Transfer-Agent		86.5.1.2
.sp -.15
  MUA		 MHS-User-Agent			86.5.1.4
.sp -.15
  MUS		 MHS-User			86.5.1.3
.sp -.15
  ORG		 Organization		 	85.6.4
.sp -.15
  ORP		 Organizational-Person		85.6.7
.sE
.in
.P
Each line contains one object class.
.P
Use 
.kY "Scroll Up"
and
.kY "Scroll Down"
to page up and down.
.P
Use
.kY "\(ua"
and
.kY "\(da"
to position the cursor on the element
to be selected, and
.kY "Return"
to mark the element.
More than one element can be selected.
.P
To unmark the positioned
element, press
.kY "Return"
again.
.P
Use
.kY "Menu"
to display all the components of the selected object classes.
.P
If none of the object classes is selected, it is assumed that 
all object classes
have been selected and they will be displayed one at a time in Mask 11.
.P
To exit from Mask 9b, press
.K, "Del" \&.
.iX "-]" "masks" "object class list (9b)"
.iX "-]" "object class list (mask 9b)"
.iX "-]" "Object Class Table" "mask 9b"
.H 3 "Mask 9c: Attribute List Mask"
.iX "Mask 9c (Attribute List Mask)"
.iX "-[" "masks" "attribute list (9c)"
Mask 9c (Figure 9-4)
is used to display more than one attribute entry on the screen.
For each attribute, the attribute acronym, attribute name,
and object identifier are displayed on one line.  For example:
.iS
C   Country-Name   85.4.6\*O
.iE
.P
In the example,
\*LC\*O is the attribute acronym, \*LCountry-Name\*O is the
attribute name, and \*L85.4.6\*O is the object identifier.
.P
When attributes
are selected from this list, additional components are displayed
in Mask 12.
.P
.ne 4.0i
.in 0
.FG "Mask 9c: Attribute List Mask"
.sS "(Mask 9c)" "Display AT"
  \*CACL		 Access-Control-List		43.12.2.1107.1.3.4.1
.sp -.15
  AON		 Aliased-Object-Name		85.4.1
.sp -.15
  AT		 Attribute-Table			43.12.2.1107.1.3.4.6
.sp -.15
  BC		 Business-Category		85.4.15
.sp -.15
  C		 Country-Name			85.4.6
.sp -.15
  CDC		 CDS-Cell			43.12.2.1107.1.3.4.13
.sp -.15
  CDR		 CDS-Replica			43.12.2.1107.1.3.4.14
.sp -.15
  CN		 Common-Name			85.4.3
.sp -.15
  DI		 Destination-Indicator		85.4.27
.sp -.15
  DSC		 Description			86.4.13
.sp -.15
  FTN		 Fax-Telephone-Number		85.4.23
.sp -.15
  IIN		 Internat.-ISDN-Number		85.4.25
.sp -.15
  KNI		 Knowledge-Information		85.4.2
.sp -.15
  L		 Locality-Name			85.4.7
.sp -.15
  MDE		 MHS-Deliverable-EITs	 	86.5.2.2
.sp -.15
  MDL		 MHS-Deliv.-Cont.-Length		86.5.2.0
.sE
.in
.P
Each line contains a summary of one attribute.
.P
Use
.kY "Scroll Up"
and
.kY "Scroll Down"
to page up and down.
.P
Use
.kY "\(ua"
and
.kY "\(da"
to position the cursor on the element
to be selected, and
.kY "Return"
to mark the element.
More than one element can be selected.
.P
To unmark the positioned
element, press
.kY "Return"
again.
.P
Use
.kY "Menu"
to display all the components of the selected attributes.
.P
If none of the attributes is selected, it is assumed that all attributes
have been selected and they will be displayed one at a time in Mask 12.
.P
To exit from Mask 9c, press
.K, "Del" \&.
.iX "-]" "masks" "attribute list (9c)"
.H 3 "Mask 10: SRT Mask"
.iX "Mask 10 (SRT Mask)"
.iX "-[" "Structure Rule Table" "mask 10"
.iX "-[" "masks" "Structure Rule Table (10)"
Mask 10 (Figure 9-5) is used to display or
enter the structure rules in the SRT.
.P
.ne 4.0i
.in 0
.FG "Mask 10: SRT Mask"
.sS "(Mask 10)" "\*Voperation\*O"
\*C
      Rule Number:                        - -
      Superior Rule Number:               - -
      Acronyms of Naming Attributes:      - - - - - - - - - -
      Structural Object Class:            - - -

\*O
.sE
.in
.P
The \*Voperation\*O field will be one of the following, depending 
on the operation being performed:
.P
.in+5
\*LDisplay SRT\*O
.nL
\*LAdd SRT Entry\*O
.nL
\*LDelete SRT Entry\*O
.nL
\*LModify SRT Entry\*O
.in-5
.P
If \*Voperation\*O is \*LDelete SRT Entry\*O, only \*LRule Number\*O
is displayed
in the mask.
.P
If \*Voperation\*O is \*LModify SRT Entry\*O, Mask 10 is displayed only with
\*LRule Number\*O.  If the rule number that is entered is a correct one,
Mask 10 is displayed again with all values belonging to that SRT entry.
Afterward, all fields can be modified except \*LRule Number\*O itself.
.P
Mask 10 displays the following fields:
.P
.VL
.LI "\*LRule\ Number\*O"
Enter the number of the structure rule.
.LI "\*LSuperior\ Rule\ Number\*O"
.nL
Enter the number of the superior structure rule.
.LI "\*LAcronyms\ of\ Naming\ Attributes\*O"
.nL
Enter up to three acronyms of naming attributes.  These acronyms
are separated by spaces.  The naming attributes must exist in the AT.
.LI "\*LStructural\ Object\ Class\*O"
.nL
Enter an object class that is assigned to this rule.  It must exist as a
structural object class in the OCT.
.LE
.P
\*LFunction Keys\*O
.P
.VL
.LI "\*L<Menu>\*O"
Perform the selected operation.
(If the operation is \*LDisplay SRT\*O, display the next SRT element.)
.LI "\*L<Return>\*O"
Go to the next field; if the field is the last one, 
perform the operation. (If the operation is
\*LDisplay SRT\*O, display the next SRT element.)
.LI "\*L<Scroll\ Down>\*O"
.nL
Display the next SRT element.
.LI "\*L<Scroll\ Up>\*O"
.nL
Display the previous SRT element.
.LI "\*L<Del>\*O"
Cancel the operation; return to Mask 9.
.LE
.iX "-]" "Structure Rule Table" "mask 10"
.iX "-]" "masks" "Structure Rule Table (10)"
.H 3 "Mask 11: OCT Mask"
.iX "Mask 11 (OCT Mask)"
.iX "-[" "Object Class Table" "mask 11"
.iX "-[" "masks" "Object Class Table (11)"
Mask 11 (Figure 9-6) is used to display or
enter the object classes in the OCT.
.P
.ne 4.0i
.in 0
.FG "Mask 11: OCT Mask"
.sS "(Mask 11)" "\*Voperation\*O"
\*C      Object Class Acronym:       - - -
.sp -.15
      Object Class Name:          - - - - - - - - - - - -
.sp -.15
      Acronyms of Superclasses:   - - - - - - - - - - - -
.sp -.15
                                  - - - - - - - - - - - -
.sp -.15
      Object Identifier:          - - - - - - - - - - - -
.sp -.15
      Object Class Kind:          \*LAbstract
.sp -.15
\*C      File Number:                - -
.sp -.15
      Auxiliary Object Classes:   - - - - - - - - - - - - 
.sp -.15
                                  - - - - - - - - - - - -
.sp -.15
      Mandatory Attributes:       - - - - - - - - - - - -
.sp -.15
                                  - - - - - - - - - - - -
.sp -.15
      Optional Attributes:        - - - - - - - - - - - -
.sp -.15
                                  - - - - - - - - - - - -
.sp -.15
                                  - - - - - - - - - - - -
.sp -.15
                                  - - - - - - - - - - - -
.sp -.15
                                  - - - - - - - - - - - -\*O
.sE
.in
.P
The \*Voperation\*O field will be one of the following, depending on the
operation performed:
.P
.in+5
\*LDisplay OCT\*O
.nL
\*LAdd OCT Entry\*O
.nL
\*LDelete OCT Entry\*O
.nL
\*LModify OCT Entry\*O
.in-5
.P
If \*Voperation\*O is \*LDelete OCT Entry\*O, Mask 11 is displayed
only with \*LObject Class Acronym\*O.
.P
If \*Voperation\*O is \*LModify OCT Entry\*O, Mask 11 is displayed
only with \*LObject Class Acronym\*O.
If the object class
acronym that is entered is an existing one, Mask 11 is displayed
again with all values belonging to that OCT entry.  Afterward, all
fields can be modified except \*LObject Class Acronym\*O itself.
.P
Mask 11 displays the following fields:
.P
.VL
.LI "\*LObject Class Acronym\*O"
.nL
Enter the object class acronym.  No blanks are allowed in this acronym.
.LI "\*LObject Class Name\*O"
.nL
Enter the object class name.  No blanks are allowed in this name.
.LI "\*LAcronyms of Superclasses\*O"
.nL
Enter up to 10 acronyms of object classes.  These acronyms are
separated by spaces.  The object classes must exist in the OCT.
.LI "\*LObject Identifier\*O"
.nL
Enter the object identifier as a printable string, for example,
\*L85.6.12\*O.
.LI "\*LObject Class Kind\*O"
.nL
Select one of the following valid object class kinds:
.ML
.LI
\*LAbstract\*O (for example \*LTOP\*O, \*LPER\*O)
.LI
\*LAlias\*O (for example \*LALI\*O)
.LI
\*LAuxiliary\*O (for example \*LMUS\*O)
.LI
\*LStructural\*O (for example \*LORP\*O)
.LE
.LI "\*LFile Number\*O"
.nL
Enter the number of the file in which the objects of this 
object class are stored.
The number can be greater than 0 (0 is reserved for the schema object)
or -1, which indicates that there are no concrete objects to be stored because
this object class is only an abstract object class, alias object class,
or auxiliary object class.
.LI "\*LAuxiliary Object Classes\*O"
.nL
Enter a list of up to 10 acronyms of object classes. 
These acronyms are separated
by spaces.  They must exist as auxiliary object classes in the OCT.
.LI "\*LMandatory Attributes\*O"
.nL
Enter up to 10 acronyms of mandatory attributes.  These must be
separated by spaces.
.LI "\*LOptional Attributes\*O"
.nL
Enter up to 50 acronyms of optional attributes.  These must be
separated by spaces.
.LE
.P
Mask 11 uses the following function keys:
.VL
.LI "\*L<Menu>\*O"
Performs the selected operation (if the operation is \*LDisplay OCT\*O, 
displays the next OCT element).
.nL
.ne 20
.LI "\*L<Return>\*O"
Goes to the next field.  If the field is the last one, 
performs the operation.  (If the
operation is \*LDisplay OCT\*O, displays the next OCT element.)
.LI "\*L<Scroll Down>\*O"
.nL
Displays the next OCT element.
.LI "\*L<Scroll Up>\*O"
.nL
Displays the previous OCT element.
.LI "\*L<Del>\*O"
Cancels the operation; returns to Mask 9.
.LE
.iX "-]" "Object Class Table" "mask 11"
.iX "-]" "masks" "Object Class Table (11)"
.H 3 "Mask 12: AT Mask"
.iX "Mask 12 (AT Mask)"
.iX "-[" "Attribute Table" "mask 12"
.iX "-[" "masks" "Attribute Table (12)"
Mask 12 (Figure 9-7) is used to display or
enter the attributes in the AT.
.P
.ne 4.0i
.in 0
.FG "Mask 12: AT Mask"
.sS "(Mask 12)" "\*Voperation\*O"
\*C
      Attribute Acronym:          - - -
      Attribute Name:             - - - - - - - - - - - -
      Object Identifier:          - - - - - - - - - - - -
      Lower Bound:                - - - -
      Upper Bound:                - - - -
      Number of Recurring Values: - - - - 
\*C      Attribute Syntax:           \*LCase Ignore String\*O
\*C      Access Class:               \*LStandard\*O
\*C      Index Level:                - -
      Phonetic Matching:          \*LNO\*O
.sE
.in
.P
The \*Voperation\*O field will be one of the following, depending on the operation
being performed:
.P
.in+5
\*LDisplay AT\*O
.nL
\*LAdd AT Entry\*O
.nL
\*LDelete AT Entry\*O
.nL
\*LModify AT Entry\*O
.in-5
.nL
.ne 20
.P
If \*Voperation\*O is \*LDelete AT Entry\*O, only \*LAttribute Acronym\*O
is displayed in the mask.
.P
If \*Voperation\*O is \*LModify AT Entry\*O, Mask 12 is displayed only with
\*LAttribute Acronym\*O.  If the attribute acronym
entered is correct, Mask 12 is displayed again with all values
belonging to that AT entry.  Afterward, all fields can be modified except
\*LAttribute Acronym\*O itself.
.P
Mask 12 displays the following fields:
.P
.VL
.LI "\*LAttribute Acronym\*O"
.nL
Enter the attribute acronym.  No spaces are allowed in the attribute acronym.
.LI "\*LAttribute Name\*O"
.nL
Enter the attribute name.  No spaces are allowed in the attribute name.
.LI "\*LObject Identifier\*O"
.nL
Enter the object identifier as a printable string; for example, \*L85.4.6\*O.
.LI "\*LLower Bound\*O"
.nL
Enter the minimum length of the attribute value (1 to 9999).
.LI "\*LUpper Bound\*O".nL
.nL
Enter the maximum length of the attribute value (1 to 9999).
.LI "\*LNumber of Recurring Values\*O"
.nL
Enter the maximum number of values an attribute can have as follows:
.P
.VL
.LI "0"
Unlimited number of values.
.LI "1"
One value (that is, the attribute is not a recurring attribute).
.LI ">1"
Restricted number of values.
.LE
.P
If the number of recurring values is greater than 1, 
then a fixed amount of space
is reserved.  If the value is 0, no space is reserved; space is acquired
dynamically depending on the number of values entered.
Therefore, it is recommended that 0 be specified if there is a large
number of possible values.
.nL
.ne 20
.LI "\*LAttribute syntax\*O"
.nL
Select one of the following attribute syntaxes by pressing the space bar:
.ML
.LI
Case Ignore String (default)
.LI
Case Exact String
.LI
Octet String
.LI
ACL
.LI
Search Guide 
.LI
Password
.LI
Country Name
.LI
Presentation Address
.LI
Telephone Number 
.LI
Fax Number 
.LI
TTX-ID syntax
.LI
Telex Number 
.LI
Postal Address 
.LI
Case Ignore List
.LI
Boolean 
.LI
Integer 
.LI
UTC Time
.LI
Numeric String
.LI
Printable String
.LI
Object Identifier 
.LI
DN
.LI
Preferred Delivery Method 
.LI
Any 
.LI
ASN.1 
.LI
MHS O/R Address 
.LI
MHS O/R Name 
.LI
MHS DL Submit Permission 
.LI
MHS Preferred Delivery Method 
.LE
.LI "\*LAccess Class\*O"
.nL
Select one of the following access classes by pressing the space bar:
.P
.ML
.LI
\*LPublic\*O
.LI
\*LStandard\*O (default)
.LI
\*LSensitive\*O (defines the priority of an attribute for a search query; 
the range is between a very low priority of 0 and a very high priority of 99)
.LE
.LI "\*LIndex Level\*O"
.nL
Select the index level for the attribute.  The index level defines the 
priority of an attribute for a search query; the
range is between 0 (very low priority) and 99 (very high priority).
.LI "\*LPhonetic Matching\*O"
.nL
Select one of the following phonetic matching flags by pressing the space bar:
.VL
.LI "\*LYES\*O"
The name of the attribute may vary slightly in search queries (for
example, an attribute could be \*LMunchen/Muenchen\*O).
.LI "\*LNO\*O"
No phonetic matching (default).
.LE
.LE
.P
Mask 12 uses the following function keys:
.VL
.LI "\*L<Menu>\*O"
Performs the selected operation.  (If the operation is \*LDisplay AT\*O, 
displays the next AT element.)
.LI "\*L<Return>\*O"
Goes to the next field.  If the field is the last one, 
performs the operation.  (If the
operation is \*LDisplay AT\*O, displays the next AT element.)
.LI "\*L<Scroll\ Down>\*O"
.nL
Displays the next AT element.
.LI "\*L<Scroll\ Up>\*O"
...\" .nL
Displays the previous AT element.
.LI "\*L<Del>\*O"
Cancels the operation; returns to Mask 9.
.LE
.iX "-]" "Attribute Table" "mask 12"
.iX "-]" "masks" "Attribute Table (12)"
.H 2 "Operations"
Each of the following sections deals with one of the operations
used for schema administration.
.H 3 "Store Schema"
.iX "\*Lstore schema\*O operation"
.iX "-[" "schemas" "storing"
The \*LStore Schema\*O operation transfers the (modified) SRT, OCT, and AT from the
memory of the administration program to the DSA.
.P
After the new schema is successfully stored in the DSA, the DIT is reorganized
according to the new schema; for example:
.ML
.LI
If a structure rule is deleted from the SRT of the schema object,
then any object of that structure rule
is also deleted in the DIT.
.LI
If an attribute is deleted from the OCT of the schema object,
all the occurrences of that attribute are also deleted from all objects in
the DIT.
.LI
If the length of an attribute is shortened, the values of the attribute are
also shortened.
.LI
If the actual length of a naming attribute value is shortened, the object
is deleted from the DIT.
.LI
If the actual length of a structured attribute value like
\*LPresentation-Address\*O or \*LSearch-Guide\*O is shortened, the
attribute value is deleted from the object.
.LI
If an attribute with Distinguished Name syntax or an ACL contains
the DN of an object whose name structure no longer
conforms to the SRT, that DN is deleted from the
attribute.
.P
If the ACL no longer contains the name of any object that may access
the attributes of a particular access class, the object is deleted from
the DIT.
.LI
If all attribute values of a particular attribute are deleted, the
attribute is deleted from the object.
.LI
If an attribute is deleted from an object that is mandatory for a
particular object class, the object will no longer belong to that
object class.  If it is the structural object class, the object
will be removed from the DIT.
.LI
If an optional attribute is made mandatory for a particular object class,
then any object of that object class that is missing that attribute
will no longer belong to that object class.  If it is the
structural object class of the object, the object is deleted from
the DIT.
.LI
If an object is deleted from the DIT, all of its subordinates are
deleted also.
.LE
.P
\*LMask Sequence\*O
.VL
.LI "Mask\ 9"
Select option number 1.
.LE
.P
.ne 5
If the operation fails, the old schema is retained in the DSA and the
new schema is stored locally in a file.
The new schema can be loaded
from the file back into the administration program memory with 
the Load Schema operation.
.P
.nS note
The \*LStore Schema\*O operation updates the DSA's schema. The DSA process
(\*Lgdsdsa\*O) then changes the entire DIT and generates (in
\*L/opt/dcelocal/var/directory/gds/dsa/dir\*Vx\*O, where \*Vx\*O is the directory
ID) the \*Lasn1_attr\*O file which is used for ASN.1 encoding and decoding. This
file contains information on attribute types and their representation.
.P
The C-stub process (\*Lgdscstub\*O), which also performs ASN.1 encoding and
decoding on the client side, uses an \*Lasn1_attr\*O file in
\*L/opt/dcelocal/var/adm/directory/gds/conf\*O.  Because the C-stub process is a
client component and the server does not know all its clients, the
\*Lasn1_attr\*O file is not updated after the schema is changed. 
.P
The C-stub's \*Lasn1_attr\*O file contains information on attribute types
and their representation of attributes that are handled by any DSAs
the client ever wants to contact.  The administrator is
responsible for updating the \*Lasn1_attr\*O file and must introduce
at least all the complex attribute syntaxes.  The information can be taken from
the appropriate \*Lasn1_attr\*O file used by the DSA.  The administrator 
must also update the
first line of the DSAs \*Lasn1_attr\*O file with the total number of
attributes stored in the \*Lasn1_attr\*O file.
.nE
.iX "-]" "schemas" "storing"
.H 3 "Load Schema"
.iX "\*Lload schema\*O operation"
.iX "schemas" "loading"
If a schema is stored in a file because a \*LStore Schema\*O operation failed,
then the \*LLoad Schema\*O operation transfers it back
into the administration program memory.
.P
\*LMask Sequence\*O
.VL
.LI "Mask\ 9"
Select option number 2.
.LE
.H 3 "Display SRT"
.iX "Structure Rule Table" "viewing"
.iX "\*Ldisplay SRT\*O operation"
The \*LDisplay SRT\*O operation displays the elements of the SRT.
.P
\*LMask Sequence\*O
.P
.VL
.LI "Mask\ 9"
Select option number 3.
.LI "Mask\ 9a"
Select the element to be displayed.
.LI "Mask\ 10"
Displays the element of the SRT.
.LE
.P
Figure 9-8 shows a sample mask sequence that displays all
the structure rules of the default schema (in Mask 9a) and that later
displays one specific structure rule in Mask 10 (the structure rule
that was selected in Mask 9a).  The administrator's selections are
highlighted in bold.
.P
After the administrator selects the second item in Mask 9a 
(by pressing \*L<Return>\*O with the
cursor on that item) and switches to the detailed information of that
structure (by pressing \*L<F1>\*O), Mask 10 is displayed containing
the information shown in the figure.
.nL
.ne 30
.P
.in 0
...\" .DS
.FG "Sample Display SRT Operation"
.sp
...\" .so gd/Pics/fig21.displaysrt.pic
.PS
scale = 106.667
"\fH\s6O\s0\fP"  at 373, 437
"\fH\s6OU\s0\fP"  at 377, 425
"\f(HB\s6C\s0\fP"  at 373, 449
line   from 0, 0 \
	to 317, 0 
line   from 317, 237 \
	to 317, 0 
"\fH\s6Schema Administration\s0\fP"  at 269, 514
"\fH\s6(Mask 9)\s0\fP"  at 23, 514
line   from 0, 524 \
	to 0, 287 
"\f(HB\s63\s0\fP"  at 87, 274
line   from 0, 237 \
	to 0, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 107, 228
line   from 0, 287 \
	to 302, 287 
line   from 317, 524 \
	to 317, 486 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 451, 476
line   from 302, 469 \
	to 615, 469 
line   from 1, 237 \
	to 317, 237 
line   from 0, 221 \
	to 317, 221 
line   from 0, 221 \
	to 317, 221 
line   from 1, 237 \
	to 317, 237 
"\fH\s6Which Function?\s0\fP"  at 45, 274
"\fH\s6\s0\fP"  at 275, 345
line   from 0, 508 \
	to 317, 508 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 514
line   from 1, 524 \
	to 317, 524 
line   from 0, 0 \
	to 261, 0 
line   from 0, 237 \
	to 0, 0 
line   from 317, 237 \
	to 317, 215 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 297
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 310
"\fH\s612  Add AT Entry\s0\fP"  at 73, 322
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 335
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 347
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 360
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 374
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 387
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 399
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 412
line   from 22, 491 \
	to 65, 491 
"\fH\s6Operations:\s0\fP"  at 41, 497
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 424
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 436
"\fH\s62  Load Schema\s0\fP"  at 74, 449
"\fH\s61  Store Schema\s0\fP"  at 75, 463
"\fH\s60  Exit\s0\fP"  at 56, 475
"\fH\s6Display SRT\s0\fP"  at 588, 476
"\fH\s6(Mask 9a)\s0\fP"  at 326, 476
"\fH\s6Display SRT\s0\fP"  at 291, 228
"\fH\s6Rule Number:\s0\fP"  at 39, 197
"\fH\s6Superior Rule Number:\s0\fP"  at 57, 181
"\fH\s6Structural Object Class:\s0\fP"  at 60, 146
"\fH\s6Acronyms of Naming Attributes\s0\fP"  at 77, 164
"\fH\s6(Mask 10)\s0\fP"  at 23, 228
box  wid 313 ht 239 at 458.5, 366.5
"\fH\s61\s0\fP"  at 317, 458
"\fH\s63\s0\fP"  at 317, 434
"\f(HB\s62\s0\fP"  at 317, 446
"\fH\s64\s0\fP"  at 317, 422
"\fH\s65\s0\fP"  at 317, 409
"\fH\s66\s0\fP"  at 318, 397
"\fH\s67\s0\fP"  at 318, 385
"\fH\s68\s0\fP"  at 319, 374
"\fH\s69\s0\fP"  at 319, 361
"\fH\s610\s0\fP"  at 319, 348
"\fH\s62\s0\fP"  at 347, 435
"\fH\s63\s0\fP"  at 347, 424
"\fH\s64\s0\fP"  at 348, 385
"\fH\s64\s0\fP"  at 348, 375
"\fH\s67\s0\fP"  at 348, 349
"\fH\s67\s0\fP"  at 348, 337
"\fH\s67\s0\fP"  at 347, 325
"\fH\s67\s0\fP"  at 347, 314
"\fH\s611\s0\fP"  at 320, 336
"\fH\s612\s0\fP"  at 320, 324
"\fH\s613\s0\fP"  at 321, 312
"\fH\s614\s0\fP"  at 321, 300
"\fH\s615\s0\fP"  at 320, 287
"\fH\s616\s0\fP"  at 320, 272
"\fH\s615\s0\fP"  at 346, 273
"\fH\s67\s0\fP"  at 347, 301
"\fH\s62\s0\fP"  at 346, 288
"\fH\s64\s0\fP"  at 348, 361
"\fH\s64\s0\fP"  at 347, 398
"\fH\s64\s0\fP"  at 347, 411
"\f(HB\s60\s0\fP"  at 348, 447
"\fH\s60\s0\fP"  at 348, 458
"\fH\s6CN\s0\fP"  at 376, 459
"\fH\s6CN\s0\fP"  at 377, 412
"\fH\s6CN\s0\fP"  at 377, 399
"\fH\s6CN\s0\fP"  at 377, 385
"\fH\s6CN\s0\fP"  at 377, 375
"\fH\s6CN\s0\fP"  at 377, 362
"\fH\s6CN\s0\fP"  at 377, 349
"\fH\s6CN\s0\fP"  at 377, 337
"\fH\s6CN\s0\fP"  at 376, 324
"\fH\s6CN\s0\fP"  at 376, 314
"\fH\s6CN\s0\fP"  at 375, 302
"\fH\s6CN\s0\fP"  at 376, 274
"\fH\s6L\s0\fP"  at 373, 287
"\fH\s6OU\s0\fP"  at 399, 362
"\fH\s60\s0\fP"  at 162, 178
"\fH\s62\s0\fP"  at 162, 194
"\fH\s6C\s0\fP"  at 163, 163
"\fH\s6C\s0\fP"  at 163, 145
.PE
...\" 
.S 12
...\" .DE
.in
.P
.H 3 "Add SRT Entry"
.iX "Structure Rule Table" "adding rules"
.iX "\*Ladd SRT entry\*O operation"
The \*LAdd SRT Entry\*O operation adds a new structure rule
to the SRT.
.P
The operation adds the new structure rule in memory only.
The \*LStore Schema\*O operation must be called to add the structure
rules to the DSA.
.P
.ne 1.5i
\*LMask sequence\*O
.VL
.LI "Mask\ 9"
Select option number 4.
.LI "Mask\ 10"
Enter the structure rule.
.LE
.P
The following conditions must exist for this operation to 
complete successfully:
.ML
.LI
The Naming Attributes must do the following:
.ML
.LI
Exist in the AT
.LI
Belong to an object class
.LI
Cannot be real recurring attributes (that is, with an unlimited number of attribute values)
.LI
Have either Case Ignore String, Case Exact String, Printable String, or T61 String syntax.
.LE
.LI
The object class must exist as a structural object class
in the OCT.
.LI
The superior rule must exist in the SRT.
.LE
.P
Figure 9-9 shows a sample mask sequence that creates 
a new structure rule, \*L17\*O, which represents an 
\*LOrganization\*O under \*LROOT\*O.  The administrator's input is highlighted
in bold.
.P
.in 0
...\" .DS
.FG "Sample Add SRT Entry Operation"
.sp
...\" .so gd/Pics/fig21.addsrtentry.pic
.PS
scale = 106.667
line   from 0, 42 \
	to 250, 42 
"\f(HB\s60\s0\fP"  at 418, 181
"\fH\s6Add SRT Entry\s0\fP"  at 530, 227
line   from 250, 221 \
	to 567, 221 
line   from 250, 0 \
	to 567, 0 
line   from 567, 237 \
	to 567, 0 
line   from 250, 237 \
	to 250, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 357, 228
line   from 251, 237 \
	to 567, 237 
line   from 250, 221 \
	to 567, 221 
line   from 251, 237 \
	to 567, 237 
line   from 250, 0 \
	to 511, 0 
line   from 567, 237 \
	to 567, 215 
"\fH\s6Rule Number:\s0\fP"  at 289, 197
"\fH\s6Superior Rule Number:\s0\fP"  at 307, 181
"\fH\s6Structural Object Class:\s0\fP"  at 310, 146
"\fH\s6Acronyms of Naming Attributes\s0\fP"  at 327, 164
"\fH\s6(Mask 10)\s0\fP"  at 273, 228
"\f(HB\s6O\s0\fP"  at 418, 164
"\f(HB\s6ORG\s0\fP"  at 424, 144
"\f(HB\s617\s0\fP"  at 420, 195
line   from 250, 237 \
	to 250, 0 
"\f(HB\s64\s0\fP"  at 87, 29
"\fH\s6Schema Administration\s0\fP"  at 269, 269
"\fH\s6(Mask 9)\s0\fP"  at 23, 269
line   from 0, 279 \
	to 0, 42 
"\fH\s6Which Function?\s0\fP"  at 45, 29
"\fH\s6\s0\fP"  at 275, 100
line   from 0, 263 \
	to 317, 263 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 269
line   from 1, 279 \
	to 317, 279 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 52
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 65
"\fH\s612  Add AT Entry\s0\fP"  at 73, 77
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 90
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 102
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 115
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 129
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 142
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 154
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 167
line   from 22, 246 \
	to 65, 246 
"\fH\s6Operations:\s0\fP"  at 41, 252
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 179
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 191
"\fH\s62  Load Schema\s0\fP"  at 74, 204
"\fH\s61  Store Schema\s0\fP"  at 75, 218
"\fH\s60  Exit\s0\fP"  at 56, 230
line   from 317, 279 \
	to 317, 236 
.PE
...\" 
.S 12
...\" .DE
.in
.P
.H 3 "Delete SRT Entry"
.iX "Structure Rule Table" "deleting rules"
.iX "\*Ldelete SRT entry\*O operation"
The \*LDelete SRT Entry\*O operation deletes a structure rule from the SRT.
.P
The operation deletes the structure rule from memory only.
The \*LStore Schema\*O operation must then be called to delete it from the DSA.
.P
\*LMask Sequence\*O
.VL
.LI "Mask\ 9"
Select option number 5.
.LI "Mask\ 10"
Enter the rule number of the structure rule to be deleted.
.LE
.P
A structure rule can only be deleted if
it is not one of the structure rules in the default schema or if it is not
used as a superior rule in any other structure rule.
.P
Figure 9-10 shows a sample mask sequence that deletes structure
rule 17.  The administrator's input is highlighted in bold.
.P
.in 0
...\" .DS
.FG "Sample Delete SRT Entry Operation"
.sp
...\" .so gd/Pics/fig21.deleteentry.pic
.PS
scale = 106.667
"\f(HB\s65\s0\fP"  at 87, 29
"\fH\s6Delete SRT Entry\s0\fP"  at 581, 228
line   from 0, 42 \
	to 298, 42 
line   from 317, 279 \
	to 317, 237 
line   from 298, 0 \
	to 615, 0 
line   from 615, 237 \
	to 615, 0 
line   from 298, 237 \
	to 298, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 405, 228
line   from 299, 237 \
	to 615, 237 
line   from 298, 221 \
	to 615, 221 
line   from 298, 221 \
	to 615, 221 
line   from 299, 237 \
	to 615, 237 
line   from 298, 0 \
	to 559, 0 
line   from 298, 237 \
	to 298, 0 
line   from 615, 237 \
	to 615, 215 
"\fH\s6Rule Number:\s0\fP"  at 337, 197
"\fH\s6(Mask 10)\s0\fP"  at 321, 228
"\fH\s6Schema Administration\s0\fP"  at 269, 269
"\fH\s6(Mask 9)\s0\fP"  at 23, 269
line   from 0, 279 \
	to 0, 42 
"\fH\s6Which Function?\s0\fP"  at 45, 29
"\fH\s6\s0\fP"  at 275, 100
line   from 0, 263 \
	to 317, 263 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 269
line   from 1, 279 \
	to 317, 279 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 52
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 65
"\fH\s612  Add AT Entry\s0\fP"  at 73, 77
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 90
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 102
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 115
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 129
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 142
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 154
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 167
line   from 22, 246 \
	to 65, 246 
"\fH\s6Operations:\s0\fP"  at 41, 252
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 179
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 191
"\fH\s62  Load Schema\s0\fP"  at 74, 204
"\fH\s61  Store Schema\s0\fP"  at 75, 218
"\fH\s60  Exit\s0\fP"  at 56, 230
"\f(HB\s617\s0\fP"  at 418, 197
.PE
...\" 
.S 12
...\" .DE
.in
.P
.H 3 "Modify SRT Entry"
.iX "Structure Rule Table" "modifying rules"
.iX "\*Lmodify SRT entry\*O operation"
The \*LModify SRT\*O operation modifies an existing structure rule in the SRT.
.P
The operation modifies the structure rule in memory only. The
\*LStore Schema\*O operation must then be called to modify the rule in the DSA.
.P
\*LMask Sequence\*O
.P
.VL
.LI "Mask\ 9"
Select option number 6.
.LI "Mask\ 10"
Only the \*LRule Number\*O field is displayed initially.
When a correct rule number is entered, Mask 10
is redisplayed with all values belonging to the SRT entry.
Fields can then be modified.
.LE
.P
Structure rules contained in the default schema cannot be modified.
.P
Figure 9-11 shows a sample mask sequence that modifies structure rule
17 by assigning a new superior rule 15.  The administrator's input is highlighted
in bold.
.nL
.ne 30
.in 0
...\" .DS
.FG "Sample Modify SRT Entry Operation"
.sp
...\" .so gd/Pics/fig21.modifyentry.pic
.PS
scale = 106.667
"\f(HB\s617\s0\fP"  at 169, 195
"\fH\s615\s0\fP"  at 169, 182
"\fH\s6(Mask 10)\s0\fP"  at 321, 493
"\fH\s6Rule Number:\s0\fP"  at 337, 462
line   from 615, 502 \
	to 615, 480 
line   from 298, 502 \
	to 298, 265 
line   from 298, 265 \
	to 559, 265 
line   from 299, 502 \
	to 615, 502 
line   from 298, 486 \
	to 615, 486 
line   from 298, 486 \
	to 615, 486 
line   from 299, 502 \
	to 615, 502 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 405, 493
line   from 298, 502 \
	to 298, 265 
line   from 615, 502 \
	to 615, 265 
line   from 298, 265 \
	to 615, 265 
line   from 0, 307 \
	to 298, 307 
line   from 317, 544 \
	to 317, 502 
"\fH\s6Schema Administration\s0\fP"  at 269, 534
"\fH\s6(Mask 9)\s0\fP"  at 23, 534
line   from 0, 544 \
	to 0, 307 
"\fH\s6Which Function?\s0\fP"  at 45, 294
"\fH\s6\s0\fP"  at 275, 365
line   from 0, 528 \
	to 317, 528 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 534
line   from 1, 544 \
	to 317, 544 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 317
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 330
"\fH\s612  Add AT Entry\s0\fP"  at 73, 342
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 355
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 367
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 380
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 394
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 407
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 419
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 432
line   from 22, 511 \
	to 65, 511 
"\fH\s6Operations:\s0\fP"  at 41, 517
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 444
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 456
"\fH\s62  Load Schema\s0\fP"  at 74, 469
"\fH\s61  Store Schema\s0\fP"  at 75, 483
"\fH\s60  Exit\s0\fP"  at 56, 495
line   from 1, 0 \
	to 318, 0 
line   from 318, 237 \
	to 318, 0 
line   from 1, 237 \
	to 1, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 108, 228
line   from 2, 237 \
	to 318, 237 
line   from 1, 221 \
	to 318, 221 
line   from 1, 221 \
	to 318, 221 
line   from 2, 237 \
	to 318, 237 
line   from 1, 0 \
	to 262, 0 
line   from 1, 237 \
	to 1, 0 
line   from 318, 237 \
	to 318, 215 
"\fH\s6Rule Number:\s0\fP"  at 40, 197
"\fH\s6Superior Rule Number:\s0\fP"  at 58, 181
"\fH\s6Structural Object Class:\s0\fP"  at 61, 146
"\fH\s6Acronyms of Naming Attributes\s0\fP"  at 78, 164
"\fH\s6(Mask 10)\s0\fP"  at 24, 228
"\f(HB\s66\s0\fP"  at 87, 294
"\fH\s6O\s0\fP"  at 169, 164
"\fH\s6ORG\s0\fP"  at 175, 144
"\fH\s617\s0\fP"  at 460, 463
"\fH\s6Modify SRT Entry\s0\fP"  at 577, 493
"\fH\s6Modify SRT Entry\s0\fP"  at 281, 227
.PE
...\" 
.S 12
...\" .DE
.in
.P
The administrator enters option number 6 from Mask 9.
.P
Mask 10 is displayed and the administrator enters 
the structure rule number of the rule to be
modified.  After the administrator presses \*L<Menu>\*O or
\*L<Return>\*O, Mask 10 is displayed again with existing information about
the rule to be modified.  This information can then be overwritten
with new information (for example, a new superior rule number).
.H 3 "Display OCT"
.iX "Object Class Table" "viewing"
.iX "\*Ldisplay OCT\*O operation"
The \*LDisplay OCT\*O operation displays the elements of the OCT.
.P
\*LMask Sequence\*O
.P
.VL
.LI "Mask\ 9"
Select option number 7.
.LI "Mask\ 9b"
Select the object class to be displayed.
.LI "Mask\ 11"
Displays the selected element of the OCT.
.LE
.P
Figure 9-12 shows a sample mask sequence that displays 
all the object classes of the default schema in Mask 9b.  
Then in Mask 11, one specific object
(selected in Mask 9b) is displayed.  The administrator's 
selections are highlighted in  bold.
.P
.in 0
...\" .DS
.FG "Sample Display OCT Operation"
.sp
...\" .so gd/Pics/fig21.displyoct.pic
.PS
scale = 106.667
"\fH\s6(Mask 9b)\s0\fP"  at 326, 476
"\fH\s685.5.1.1\s0\fP"  at 487, 322
"\fH\s685.6.3\s0\fP"  at 484, 353
"\fH\s6---\s0\fP"  at 482, 364
"\fH\s685.6.9\s0\fP"  at 485, 374
"\fH\s685.6.13\s0\fP"  at 487, 387
"\fH\s685.6.1\s0\fP"  at 483, 451
"\fH\s685.6.11\s0\fP"  at 486, 426
"\f(HB\s685.6.2\s0\fP"  at 484, 413
"\fH\s685.6.14\s0\fP"  at 486, 401
"\fH\s685.6.12\s0\fP"  at 485, 439
"\fH\s6DSC  SG  CDC  CDR\s0\fP"  at 198, 77
"\fH\s6C\s0\fP"  at 156, 101
"\fH\s61\s0\fP"  at 155, 135
"\fH\s6Structural\s0\fP"  at 171, 149
"\fH\s685.6.2\s0\fP"  at 166, 161
"\fH\s6GTP\s0\fP"  at 162, 179
"\fH\s6Country\s0\fP"  at 170, 191
"\fH\s6C\s0\fP"  at 158, 202
"\fH\s6Optional Attributes:\s0\fP"  at 55, 78
"\fH\s6Mandatory Attributes:\s0\fP"  at 59, 101
"\fH\s6Auxiliary Object Classes:\s0\fP"  at 65, 121
"\fH\s6File Number:\s0\fP"  at 41, 133
"\fH\s6Object Class Kind:\s0\fP"  at 54, 145
"\fH\s6Object Identifier:\s0\fP"  at 49, 158
"\fH\s6Acronyms Of Super Classes:\s0\fP"  at 72, 177
"\fH\s6Object Class Name:\s0\fP"  at 54, 189
"\fH\s6Object Class Acronym:\s0\fP"  at 59, 202
"\fH\s6Display OCT\s0\fP"  at 290, 228
"\fH\s6Display OCT\s0\fP"  at 588, 476
"\f(HB\s67\s0\fP"  at 87, 274
line   from 0, 0 \
	to 317, 0 
"\fH\s6Schema Administration\s0\fP"  at 269, 514
"\fH\s6(Mask 9)\s0\fP"  at 23, 514
line   from 0, 524 \
	to 0, 287 
line   from 0, 237 \
	to 0, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 107, 228
line   from 0, 287 \
	to 302, 287 
line   from 317, 524 \
	to 317, 486 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 451, 476
line   from 302, 469 \
	to 615, 469 
line   from 1, 237 \
	to 317, 237 
line   from 0, 221 \
	to 317, 221 
line   from 0, 221 \
	to 317, 221 
line   from 1, 237 \
	to 317, 237 
"\fH\s6Which Function?\s0\fP"  at 45, 274
"\fH\s6\s0\fP"  at 275, 345
line   from 0, 508 \
	to 317, 508 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 514
line   from 1, 524 \
	to 317, 524 
line   from 0, 0 \
	to 261, 0 
line   from 0, 237 \
	to 0, 0 
line   from 317, 237 \
	to 317, 215 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 297
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 310
"\fH\s612  Add AT Entry\s0\fP"  at 73, 322
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 335
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 347
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 360
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 374
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 387
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 399
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 412
line   from 22, 491 \
	to 65, 491 
"\fH\s6Operations:\s0\fP"  at 41, 497
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 424
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 436
"\fH\s62  Load Schema\s0\fP"  at 74, 449
"\fH\s61  Store Schema\s0\fP"  at 75, 463
"\fH\s60  Exit\s0\fP"  at 56, 475
"\fH\s6(Mask 11)\s0\fP"  at 23, 228
"\fH\s6APP\s0\fP"  at 323, 425
"\f(HB\s6C\s0\fP"  at 323, 411
"\fH\s6DEV\s0\fP"  at 324, 399
"\fH\s6DSA\s0\fP"  at 324, 386
"\fH\s6GON\s0\fP"  at 324, 373
"\fH\s6GTP\s0\fP"  at 323, 360
"\fH\s6LOC\s0\fP"  at 322, 347
"\fH\s6MDL\s0\fP"  at 323, 334
"\fH\s6MMS\s0\fP"  at 324, 320
"\fH\s6MTA\s0\fP"  at 322, 306
"\fH\s6MUA\s0\fP"  at 323, 293
"\fH\s6MUS\s0\fP"  at 323, 281
"\fH\s6ORG\s0\fP"  at 324, 268
"\fH\s6ORP\s0\fP"  at 324, 257
"\fH\s6Application-Process\s0\fP"  at 383, 425
"\f(HB\s6Country\s0\fP"  at 360, 411
"\fH\s6MHS-Distribution-List\s0\fP"  at 387, 335
"\fH\s6MHS-Message-Store\s0\fP"  at 385, 320
"\fH\s6MHS-Mess-Transfer-Agent\s0\fP"  at 397, 306
"\fH\s6MHS-User-Agent\s0\fP"  at 378, 293
"\fH\s6MHS-User\s0\fP"  at 364, 280
"\fH\s6Organization\s0\fP"  at 368, 268
"\fH\s6Locality\s0\fP"  at 358, 348
"\fH\s6GDS-Top\s0\fP"  at 363, 360
line   from 317, 237 \
	to 317, 0 
"\fH\s6Device\s0\fP"  at 357, 399
"\fH\s6Group-of-Names\s0\fP"  at 377, 372
"\fH\s6Directory-Service-Agent\s0\fP"  at 393, 385
"\fH\s6Organization-Person\s0\fP"  at 384, 257
"\fH\s6ALI        Alias\s0\fP"  at 340, 451
box  wid 313 ht 239 at 458.5, 366.5
"\fH\s6APE      Application-Entity\s0\fP"  at 366, 438
"\fH\s686.5.1.0\s0\fP"  at 486, 337
"\fH\s686.5.1.2\s0\fP"  at 486, 307
"\fH\s685.6.4\s0\fP"  at 483, 270
"\fH\s685.6.7\s0\fP"  at 483, 258
"\fH\s686.5.1.4\s0\fP"  at 486, 293
"\fH\s686.5.1.3\s0\fP"  at 486, 281
.PE
...\" 
.S 12
...\" .DE
.in
.H 3 "Add OCT Entry"
.iX "Object Class Table" "adding entries"
The \*LAdd OCT Entry\*O operation adds a new object class
in the OCT.
.P
The operation adds the new object class in the memory only.
The \*LStore Schema\*O operation must be called when adding objects in the DSA.
.P
.ne 1.5i
\*LMask sequence\*O
.VL
.LI "Mask\ 9"
Select option number 8.
.LI "Mask\ 11"
Enter the new object class information.
.LE
.P
All attributes must already be in the AT, and the
superclasses and auxiliary object classes must
already be in the OCT.
.P
Figure 9-13 shows a sample mask sequence that creates a new
object class \*LEmployee\*O (note that the mandatory attribute with
acronym \*LPOS\*O must already exist in the AT).  The administrator's
input is highlighted in bold.
.P
.in 0
...\" .DS
.FG "Sample Add OCT Entry Operation"
.sp
...\" .so gd/Pics/fig21.addoctentry.pic
.PS
scale = 106.667
"\f(HB\s6CN\s0\fP"  at 460, 169
"\fH\s6Optional Attributes:\s0\fP"  at 344, 39
"\fH\s6Mandatory Object Classes:\s0\fP"  at 357, 69
"\fH\s6Auxiliary Object Classes:\s0\fP"  at 354, 97
"\fH\s6File Number:\s0\fP"  at 330, 113
"\fH\s6Object Class Kind:\s0\fP"  at 343, 129
"\fH\s6Object Class Identifier:\s0\fP"  at 350, 151
"\fH\s6Object Class Name:\s0\fP"  at 344, 183
line   from 297, 0 \
	to 614, 0 
"\f(HB\s6POS\s0\fP"  at 465, 69
"\f(HB\s6-1\s0\fP"  at 460, 113
"\f(HB\s6Auxiliary\s0\fP"  at 471, 128
"\f(HB\s643.12.2.1107.1.3.6.1\s0\fP"  at 493, 152
"\f(HB\s6Employee\s0\fP"  at 472, 184
"\f(HB\s6EMP\s0\fP"  at 463, 200
"\fH\s6Acronyms of Superclasses\s0\fP"  at 368, 169
"\fH\s6Object Class Acronym:\s0\fP"  at 349, 199
"\fH\s6Schema Administration\s0\fP"  at 269, 270
"\fH\s6(Mask 9)\s0\fP"  at 23, 270
line   from 0, 280 \
	to 0, 43 
"\fH\s6Which Function?\s0\fP"  at 45, 30
"\fH\s6\s0\fP"  at 275, 101
line   from 0, 264 \
	to 317, 264 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 270
line   from 1, 280 \
	to 317, 280 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 53
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 66
"\fH\s612  Add AT Entry\s0\fP"  at 73, 78
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 91
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 103
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 116
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 130
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 143
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 155
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 168
line   from 22, 247 \
	to 65, 247 
"\fH\s6Operations:\s0\fP"  at 41, 253
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 180
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 192
"\fH\s62  Load Schema\s0\fP"  at 74, 205
"\fH\s61  Store Schema\s0\fP"  at 75, 219
"\fH\s60  Exit\s0\fP"  at 56, 231
line   from 614, 237 \
	to 614, 0 
line   from 297, 237 \
	to 297, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 404, 228
line   from 298, 237 \
	to 614, 237 
line   from 297, 221 \
	to 614, 221 
line   from 297, 221 \
	to 614, 221 
line   from 298, 237 \
	to 614, 237 
line   from 297, 0 \
	to 558, 0 
line   from 297, 237 \
	to 297, 0 
line   from 614, 237 \
	to 614, 215 
"\fH\s6(Mask 11)\s0\fP"  at 320, 228
line   from 317, 280 \
	to 317, 237 
line   from 0, 43 \
	to 297, 43 
"\f(HB\s68\s0\fP"  at 87, 30
"\fH\s6Add OCT Entry\s0\fP"  at 580, 228
.PE
...\" 
.S 12
...\" .DE
.in
.P
.H 3 "Delete OCT Entry"
.iX "Object Class Table" "deleting entries"
The \*LDelete OCT Entry\*O operation deletes an object class from the OCT.
.P
The operation deletes the object class from memory only.
The \*LStore Schema\*O operation must then be called to delete it from the DSA.
.P
\*LMask Sequence\*O
.VL
.LI "Mask\ 9"
Select option number 9.
.LI "Mask\ 11"
Select the object class to be deleted.
.LE
.P
An object class can only be deleted if the following conditions exist:
.ML
.LI
It has no subordinate object classes.
.LI
The object class is not referenced in an SRT entry.
.LI
It is not one of the standard object classes.
.LI
It is not used as auxiliary object class.
.LE
.P
Figure 9-14 shows a sample mask sequence that deletes the object class
\*LEmployee\*O by entering its acronym \*LEMP\*O in Mask 11.
.P
.in 0
...\" .DS
.FG "Sample Delete OCT Entry Operation"
.sp
...\" .so gd/Pics/fig21.deleteoctentry.pic
.PS
scale = 106.667
"\f(HB\s69\s0\fP"  at 87, 30
"\f(HB\s6EMP\s0\fP"  at 471, 199
"\fH\s6Object Class Acronym:\s0\fP"  at 354, 199
line   from 0, 43 \
	to 297, 43 
line   from 317, 280 \
	to 317, 237 
"\fH\s6(Mask 11)\s0\fP"  at 320, 228
line   from 614, 237 \
	to 614, 215 
line   from 297, 237 \
	to 297, 0 
line   from 297, 0 \
	to 558, 0 
line   from 298, 237 \
	to 614, 237 
line   from 297, 221 \
	to 614, 221 
line   from 297, 221 \
	to 614, 221 
line   from 298, 237 \
	to 614, 237 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 404, 228
line   from 297, 237 \
	to 297, 0 
line   from 614, 237 \
	to 614, 0 
line   from 297, 0 \
	to 614, 0 
"\fH\s60  Exit\s0\fP"  at 56, 231
"\fH\s61  Store Schema\s0\fP"  at 75, 219
"\fH\s62  Load Schema\s0\fP"  at 74, 205
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 192
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 180
"\fH\s6Operations:\s0\fP"  at 41, 253
line   from 22, 247 \
	to 65, 247 
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 168
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 155
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 143
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 130
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 116
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 103
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 91
"\fH\s612  Add AT Entry\s0\fP"  at 73, 78
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 66
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 53
line   from 1, 280 \
	to 317, 280 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 270
line   from 0, 264 \
	to 317, 264 
"\fH\s6\s0\fP"  at 275, 101
"\fH\s6Which Function?\s0\fP"  at 45, 30
line   from 0, 280 \
	to 0, 43 
"\fH\s6(Mask 9)\s0\fP"  at 23, 270
"\fH\s6Schema Administration\s0\fP"  at 269, 270
"\fH\s6Delete OCT Entry\s0\fP"  at 576, 228
.PE
...\" 
.S 12
...\" .DE
.in
.P
.H 3 "Modify OCT Entry"
.iX "Object Class Table" "modifying entries"
The \*LModify OCT Entry\*O operation modifies an existing object class in the OCT.
.P
The operation modifies the object class entry in memory only. The
\*LStore Schema\*O operation must then be called to change the entry in the DSA.
.P
\*LMask Sequence\*O
.P
.VL
.LI "Mask\ 9"
Select option number 10.
.LI "Mask\ 11"
Only the \*LObject Class Acronym\*O field is displayed initially.
When a correct object class acronym is entered, Mask 12
is redisplayed with all values belonging to the OCT entry.
Fields can then be modified.
.LE
.P
If the object class is contained in the default schema, then the following 
restrictions apply:
.ML
.LI
The \*LObject Identifier\*O, \*LFile Number\*O, \*LSuperclasses\*O, and
\*LObject Class Kind\*O fields cannot be modified.
.LI
Mandatory attributes cannot be removed.
.LE
.P
Figure 9-15 shows a sample mask sequence that modifies the object
class \*LEmployee\*O by entering its object class acronym, 
\*LEMP\*O, in Mask 11 and changing its values in Mask 11.
.nL
.ne 30
.in 0
...\" .DS
.FG "Sample Modify OCT Entry Operation"
.sp
...\" .so gd/Pics/fig21.modifyoctentry.pic
.PS
scale = 106.667
"\f(HB\s6CN\s0\fP"  at 157, 172
"\fH\s6\s0\fP"  at 161, 171
"\fH\s6Optional Attributes:\s0\fP"  at 52, 46
"\fH\s6Mandatory Attributes:\s0\fP"  at 55, 76
"\fH\s6File Number:\s0\fP"  at 37, 121
"\fH\s6Auxiliary Object Classes:\s0\fP"  at 62, 103
"\fH\s6Object Class Kind:\s0\fP"  at 51, 140
"\fH\s6Object Identifier:\s0\fP"  at 46, 155
"\fH\s6Object Class Name:\s0\fP"  at 53, 185
"\fH\s6Schema Administration\s0\fP"  at 269, 525
"\f(HB\s6EMP\s0\fP"  at 448, 454
"\fH\s6Object Class Acronym:\s0\fP"  at 355, 454
"\fH\s6(Mask 11)\s0\fP"  at 320, 483
line   from 614, 492 \
	to 614, 470 
line   from 297, 492 \
	to 297, 255 
line   from 297, 255 \
	to 558, 255 
line   from 298, 492 \
	to 614, 492 
line   from 297, 476 \
	to 614, 476 
line   from 297, 476 \
	to 614, 476 
line   from 298, 492 \
	to 614, 492 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 404, 483
line   from 297, 492 \
	to 297, 255 
line   from 614, 492 \
	to 614, 255 
line   from 297, 255 \
	to 614, 255 
"\fH\s6Modify OCT Entry\s0\fP"  at 575, 483
"\fH\s6(Mask 9)\s0\fP"  at 23, 525
line   from 0, 535 \
	to 0, 298 
"\fH\s6Which Function?\s0\fP"  at 45, 285
"\fH\s6\s0\fP"  at 275, 356
line   from 0, 519 \
	to 317, 519 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 525
line   from 1, 535 \
	to 317, 535 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 308
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 321
"\fH\s612  Add AT Entry\s0\fP"  at 73, 333
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 346
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 358
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 371
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 385
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 398
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 410
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 423
line   from 22, 502 \
	to 65, 502 
"\fH\s6Operations:\s0\fP"  at 41, 508
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 435
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 447
"\fH\s62  Load Schema\s0\fP"  at 74, 460
"\fH\s61  Store Schema\s0\fP"  at 75, 474
"\fH\s60  Exit\s0\fP"  at 56, 486
line   from 317, 535 \
	to 317, 492 
line   from 0, 298 \
	to 297, 298 
"\f(HB\s610\s0\fP"  at 87, 285
"\fH\s6Modify OCT Entry\s0\fP"  at 279, 228
line   from 1, 0 \
	to 318, 0 
line   from 318, 237 \
	to 318, 0 
line   from 1, 237 \
	to 1, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 108, 228
line   from 2, 237 \
	to 318, 237 
line   from 1, 221 \
	to 318, 221 
line   from 1, 221 \
	to 318, 221 
line   from 2, 237 \
	to 318, 237 
line   from 1, 0 \
	to 262, 0 
line   from 1, 237 \
	to 1, 0 
line   from 318, 237 \
	to 318, 215 
"\fH\s6(Mask 11)\s0\fP"  at 24, 228
"\fH\s6Object Class Acronym:\s0\fP"  at 59, 199
"\fH\s6Acronyms of Superclasses:\s0\fP"  at 77, 171
"\f(HB\s6EMP\s0\fP"  at 160, 198
"\f(HB\s6OSF-Employee\s0\fP"  at 181, 185
"\f(HB\s643.12.2.1107.1.3.6.1\s0\fP"  at 189, 157
"\f(HB\s6Auxiliary\s0\fP"  at 167, 142
"\f(HB\s6POS\s0\fP"  at 162, 74
"\f(HB\s6-1\s0\fP"  at 154, 121
.PE
...\" 
.S 12
...\" .DE
.in
.P
.H 3 "Display AT"
.iX "Attribute Table" "viewing"
The \*LDisplay AT\*O operation displays the elements of the AT.
.P
\*LMask Sequence\*O
.P
.VL
.LI "Mask\ 9"
Select option number 11.
.LI "Mask\ 9c"
Select the attribute to be displayed.
.LI "Mask\ 12"
Displays the selected element of the AT.
.LE
.nL
.ne 20
.P
Figure 9-16 shows a sample mask sequence that displays 
all the attributes of the default schema in Mask 9c.  A specific 
attribute is selected in Mask 9c and displayed in Mask 12.
The administrator's selections are highlighted in bold.
.P
.in 0
...\" .DS
.FG "Sample Display AT Operation"
.sp
...\" .so gd/Pics/fig21.displayat.pic
.PS
scale = 106.667
"\fH\s6CDS-Replica\s0\fP"  at 380, 382
"\fH\s6Attribute Acronym:\s0\fP"  at 60, 195
"\fH\s6(Mask 9c)\s0\fP"  at 326, 476
"\fH\s6Attribute Name:\s0\fP"  at 52, 179
"\fH\s6Object Identifier:\s0\fP"  at 54, 163
"\fH\s6Lower Bound:\s0\fP"  at 50, 148
"\fH\s6Upper Bound:\s0\fP"  at 51, 132
"\fH\s6Number of Recurring Values:\s0\fP"  at 79, 118
"\fH\s6Access Class:\s0\fP"  at 50, 89
"\fH\s6Index Level:\s0\fP"  at 48, 73
"\fH\s6Phonetic Matching:\s0\fP"  at 61, 58
"\fH\s6Attribute Syntax:\s0\fP"  at 58, 104
"\fH\s6(Mask 12)\s0\fP"  at 23, 228
"\fH\s6Display AT\s0\fP"  at 290, 228
line   from 1, 237 \
	to 317, 237 
"\fH\s6Display AT\s0\fP"  at 588, 476
"\f(HB\s611\s0\fP"  at 87, 274
line   from 0, 0 \
	to 317, 0 
line   from 317, 237 \
	to 317, 0 
"\fH\s6Schema Administration\s0\fP"  at 269, 514
"\fH\s6(Mask 9)\s0\fP"  at 23, 514
line   from 0, 524 \
	to 0, 287 
line   from 0, 237 \
	to 0, 0 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 107, 228
line   from 0, 287 \
	to 302, 287 
line   from 317, 524 \
	to 317, 486 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 451, 476
line   from 302, 469 \
	to 615, 469 
box  wid 313 ht 239 at 458.5, 366.5
line   from 0, 221 \
	to 317, 221 
line   from 0, 221 \
	to 317, 221 
line   from 1, 237 \
	to 317, 237 
"\fH\s6Which Function?\s0\fP"  at 45, 274
"\fH\s6\s0\fP"  at 275, 345
line   from 0, 508 \
	to 317, 508 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 514
line   from 1, 524 \
	to 317, 524 
line   from 0, 0 \
	to 261, 0 
line   from 0, 237 \
	to 0, 0 
line   from 317, 237 \
	to 317, 215 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 297
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 310
"\fH\s612  Add AT Entry\s0\fP"  at 73, 322
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 335
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 347
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 360
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 374
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 387
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 399
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 412
line   from 22, 491 \
	to 65, 491 
"\fH\s6Operations:\s0\fP"  at 41, 497
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 424
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 436
"\fH\s62  Load Schema\s0\fP"  at 74, 449
"\fH\s61  Store Schema\s0\fP"  at 75, 463
"\fH\s60  Exit\s0\fP"  at 56, 475
"\f(HB\s6ACL\s0\fP"  at 321, 453
"\fH\s6AON\s0\fP"  at 321, 441
"\fH\s6AT\s0\fP"  at 318, 429
"\fH\s6BC\s0\fP"  at 318, 415
"\fH\s6C\s0\fP"  at 317, 404
"\fH\s6CDC\s0\fP"  at 323, 393
"\fH\s6CDR\s0\fP"  at 323, 381
"\fH\s6CN\s0\fP"  at 320, 367
"\fH\s6DI\s0\fP"  at 319, 354
"\fH\s6DSC\s0\fP"  at 324, 342
"\fH\s6FTN\s0\fP"  at 322, 330
"\fH\s6IIN\s0\fP"  at 321, 317
"\fH\s6KNI\s0\fP"  at 322, 306
"\fH\s6L\s0\fP"  at 317, 295
"\fH\s6MDE\s0\fP"  at 324, 284
"\fH\s6MDL\s0\fP"  at 324, 270
"\f(HB\s6Access-Control-List\s0\fP"  at 393, 454
"\fH\s6Aliased-Object-Name\s0\fP"  at 394, 441
"\fH\s6CDS-Cell\s0\fP"  at 374, 394
"\fH\s6Country-Name\s0\fP"  at 383, 406
"\fH\s6Business-Category\s0\fP"  at 389, 418
"\fH\s6Attribute-Table\s0\fP"  at 382, 430
"\fH\s6Common-Name\s0\fP"  at 384, 368
"\fH\s6Destination-Indicator\s0\fP"  at 395, 354
"\fH\s6Internat.-ISDN-Number\s0\fP"  at 399, 318
"\fH\s6Fax-Telephone-Number\s0\fP"  at 399, 331
"\fH\s6Description\s0\fP"  at 375, 342
"\fH\s6Knowledge-Information\s0\fP"  at 398, 306
"\fH\s6Locality-Name\s0\fP"  at 380, 295
"\fH\s6MHS-Deliverable-EITs\s0\fP"  at 396, 284
"\fH\s6MHS-Deliv.-Cont.-Length\s0\fP"  at 405, 270
"\fH\s643.12.2.1107.1.3.4.6\s0\fP"  at 517, 429
"\f(HB\s643.12.2.1107.1.3.4.1\s0\fP"  at 518, 452
"\fH\s686.5.2.0\s0\fP"  at 494, 269
"\fH\s686.5.2.2\s0\fP"  at 494, 282
"\fH\s685.4.7\s0\fP"  at 491, 294
"\fH\s685.4.2\s0\fP"  at 491, 305
"\fH\s685.4.25\s0\fP"  at 493, 317
"\fH\s685.4.23\s0\fP"  at 493, 330
"\fH\s685.4.13\s0\fP"  at 493, 341
"\fH\s685.4.27\s0\fP"  at 492, 354
"\fH\s685.4.3\s0\fP"  at 491, 368
"\fH\s643.12.2.1107.1.3.4.14\s0\fP"  at 520, 381
"\fH\s643.12.2.1107.1.3.4.13\s0\fP"  at 520, 393
"\fH\s685.4.6\s0\fP"  at 490, 403
"\fH\s685.4.15\s0\fP"  at 492, 416
"\fH\s685.4.1\s0\fP"  at 491, 441
"\fH\s6ACL\s0\fP"  at 155, 195
"\fH\s6Access-Control-List\s0\fP"  at 186, 181
"\fH\s643.12.2.1107.1.3.4.1\s0\fP"  at 185, 165
"\fH\s61\s0\fP"  at 148, 151
"\fH\s620500\s0\fP"  at 157, 134
"\fH\s61\s0\fP"  at 147, 118
"\fH\s6ACL Syntax\s0\fP"  at 168, 103
"\fH\s6Public\s0\fP"  at 154, 89
"\fH\s60\s0\fP"  at 145, 75
"\fH\s6NO\s0\fP"  at 149, 58
.PE
...\" 
.S 12
...\" .DE
.in
.nL
.ne 20
.H 3 "Add AT Entry"
.iX "Attribute Table" "adding entries"
The \*LAdd AT Entry\*O operation adds a new attribute in the AT.
.P
The operation adds the new attribute in memory only.
The \*LStore Schema\*O operation must then be called for changes
in the DSA.
.P
\*LMask Sequence\*O
.VL
.LI "Mask\ 9"
Select option number 12.
.LI "Mask\ 12"
Enter the data for the new attribute.
.LE
.P
Figure 9-17 shows a sample mask sequence that will create 
a new attribute \*LPosition\*O with the information shown.
The administrator's input is highlighted in bold.
.P
.in 0
...\" .DS
.FG "Sample Add AT Entry Operation"
.sp
...\" .so gd/Pics/fig21.addatentry.pic
.PS
scale = 106.667
"\f(HB\s6NO\s0\fP"  at 470, 58
"\f(HB\s6Case Ignore String\s0\fP"  at 500, 103
"\f(HB\s6Standard\s0\fP"  at 480, 90
"\f(HB\s60\s0\fP"  at 466, 75
"\f(HB\s63\s0\fP"  at 464, 117
"\f(HB\s625\s0\fP"  at 468, 134
"\f(HB\s61\s0\fP"  at 465, 150
"\f(HB\s643.12.2.1107.1.3.4.20\s0\fP"  at 504, 164
"\f(HB\s6Position\s0\fP"  at 478, 180
"\f(HB\s6POS\s0\fP"  at 472, 197
"\fH\s6Attribute Acronym:\s0\fP"  at 354, 195
line   from 317, 277 \
	to 317, 237 
line   from 0, 40 \
	to 294, 40 
line   from 295, 237 \
	to 611, 237 
line   from 295, 237 \
	to 611, 237 
"\fH\s6Schema Administration\s0\fP"  at 269, 267
"\fH\s6(Mask 9)\s0\fP"  at 23, 267
line   from 0, 277 \
	to 0, 40 
"\fH\s6Which Function?\s0\fP"  at 45, 27
"\fH\s6\s0\fP"  at 275, 98
line   from 0, 261 \
	to 317, 261 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 267
line   from 1, 277 \
	to 317, 277 
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 50
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 63
"\fH\s612  Add AT Entry\s0\fP"  at 73, 75
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 88
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 100
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 113
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 127
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 140
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 152
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 165
line   from 22, 244 \
	to 65, 244 
"\fH\s6Operations:\s0\fP"  at 41, 250
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 177
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 189
"\fH\s62  Load Schema\s0\fP"  at 74, 202
"\fH\s61  Store Schema\s0\fP"  at 75, 216
"\fH\s60  Exit\s0\fP"  at 56, 228
"\fH\s6Attribute Name:\s0\fP"  at 346, 179
"\fH\s6Object Identifier:\s0\fP"  at 348, 163
"\fH\s6Lower Bound:\s0\fP"  at 344, 148
"\fH\s6Upper Bound:\s0\fP"  at 345, 132
"\fH\s6Number of Recurring Values:\s0\fP"  at 373, 118
"\fH\s6Access Class:\s0\fP"  at 344, 89
"\fH\s6Index Level:\s0\fP"  at 342, 73
"\fH\s6Phonetic Matching:\s0\fP"  at 355, 58
"\fH\s6Attribute Syntax:\s0\fP"  at 352, 104
"\fH\s6(Mask 12)\s0\fP"  at 317, 228
line   from 294, 0 \
	to 611, 0 
line   from 611, 237 \
	to 611, 0 
line   from 294, 237 \
	to 294, 0 
line   from 294, 221 \
	to 611, 221 
line   from 294, 221 \
	to 611, 221 
line   from 294, 0 \
	to 555, 0 
line   from 294, 237 \
	to 294, 0 
line   from 611, 237 \
	to 611, 215 
"\f(HB\s612\s0\fP"  at 87, 27
"\fH\s6Add AT Entry\s0\fP"  at 580, 228
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 447, 228
.PE
...\" 
.S 12
...\" .DE
.in
.nL
.ne 20
.H 3 "Delete AT Entry"
.iX "Attribute Table" "deleting entries"
The \*LDelete AT Entry\*O operation deletes an attribute from the AT.
.P
The operation deletes the attribute in memory only.
The \*LStore Schema\*O operation must then be called for changes
in the DSA.
.P
\*LMask Sequence\*O
.VL
.LI "Mask\ 9"
Select option number 13.
.LI "Mask\ 12"
Enter the attribute acronym of the attribute to be deleted.
.LE
.P
An attribute can only be deleted from the AT if the following conditions exist:
.ML
.LI
It is not referenced as a naming attribute in the SRT.
.LI
It is not referenced as a mandatory or an optional attribute in an OCT
entry.
.LI
It is not one of the standard attributes.
.LE
.P
Figure 10-18 shows a sample mask sequence that deletes the attribute
\*LPosition\*O by specifying its acronym, \*LPOS\*O, in Mask 12.
The administrator's input is highlighted in bold.
.P
.in 0
...\" .DS
.FG "Sample Delete AT Entry Operation"
.sp
...\" .so gd/Pics/fig21.deleteatentry.pic
.PS
scale = 106.667
"\fH\s6Attribute Acronym:\s0\fP"  at 354, 195
line   from 611, 237 \
	to 611, 215 
line   from 294, 237 \
	to 294, 0 
line   from 294, 0 \
	to 555, 0 
line   from 294, 221 \
	to 611, 221 
line   from 294, 221 \
	to 611, 221 
line   from 294, 237 \
	to 294, 0 
line   from 611, 237 \
	to 611, 0 
line   from 294, 0 \
	to 611, 0 
"\fH\s6(Mask 12)\s0\fP"  at 317, 228
"\fH\s60  Exit\s0\fP"  at 56, 228
"\fH\s61  Store Schema\s0\fP"  at 75, 216
"\fH\s62  Load Schema\s0\fP"  at 74, 202
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 189
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 177
"\fH\s6Operations:\s0\fP"  at 41, 250
line   from 22, 244 \
	to 65, 244 
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 165
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 152
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 140
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 127
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 113
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 100
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 88
"\fH\s612  Add AT Entry\s0\fP"  at 73, 75
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 63
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 50
line   from 1, 277 \
	to 317, 277 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 267
line   from 0, 261 \
	to 317, 261 
"\fH\s6\s0\fP"  at 275, 98
"\fH\s6Which Function?\s0\fP"  at 45, 27
line   from 0, 277 \
	to 0, 40 
"\fH\s6(Mask 9)\s0\fP"  at 23, 267
"\fH\s6Schema Administration\s0\fP"  at 269, 267
line   from 295, 237 \
	to 611, 237 
line   from 295, 237 \
	to 611, 237 
line   from 0, 40 \
	to 294, 40 
line   from 317, 277 \
	to 317, 237 
"\f(HB\s613\s0\fP"  at 87, 27
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 447, 228
"\fH\s6Delete AT Entry\s0\fP"  at 573, 228
"\f(HB\s6POS\s0\fP"  at 449, 195
.PE
...\" 
.S 12
...\" .DE
.nL
.ne 20
.H 3 "Modify AT Entry"
.iX "Attribute Table" "modifying entries"
The \*LModify AT Entry\*O operation modifies an existing attribute in the AT.
.P
The operation modifies the attribute entry in memory only. The
\*LStore Schema\*O operation must then be called to change the entry in the DSA.
.P
\*LMask Sequence\*O
.P
.VL
.LI "Mask\ 9"
Select option number 14.
.LI "Mask\ 12"
Only the \*LAttribute Acronym\*O field is displayed initially.
When a correct attribute acronym is entered, Mask 12
is redisplayed with all values belonging to the AT entry.
Fields can then be modified.
.LE
.P
If the attribute is contained in the default schema, then its
\*LObject Identifier\*O and \*LAttribute Syntax\*O fields cannot be modified.
.P
If the attribute is used as a naming attribute in the SRT, its syntax
cannot be changed (naming attributes always have \*LCase Ignore String\*O
syntax).
.P
Figure 9-19 shows a sample mask sequence that modifies the upper bound
of the attribute \*LPosition\*O by entering its acronym, \*LPOS\*O, in Mask 12.
The administrator's input is highlighted in bold.
.nL
.ne 20
.in 0
...\" .DS
.FG "Sample Modify AT Entry Operation"
.sp
...\" .so gd/Pics/fig21.modifyatentry.pic
.PS
scale = 106.667
"\fH\s6Attribute Acronym:\s0\fP"  at 62, 248
"\fH\s6Attribute Acronym:\s0\fP"  at 353, 520
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 154, 281
line   from 319, 290 \
	to 319, 268 
line   from 2, 290 \
	to 2, 53 
line   from 2, 53 \
	to 263, 53 
line   from 2, 274 \
	to 319, 274 
line   from 2, 274 \
	to 319, 274 
line   from 2, 290 \
	to 2, 53 
line   from 319, 290 \
	to 319, 53 
line   from 2, 53 \
	to 319, 53 
"\fH\s6(Mask 12)\s0\fP"  at 25, 281
"\fH\s6Attribute Syntax:\s0\fP"  at 60, 157
"\fH\s6Phonetic Matching:\s0\fP"  at 63, 111
"\fH\s6Index Level:\s0\fP"  at 50, 126
"\fH\s6Access Class:\s0\fP"  at 52, 142
"\fH\s6Number of Recurring Values:\s0\fP"  at 81, 171
"\fH\s6Upper Bound:\s0\fP"  at 53, 185
"\fH\s6Lower Bound:\s0\fP"  at 52, 201
"\fH\s6Object Identifier:\s0\fP"  at 56, 216
"\fH\s6Attribute Name:\s0\fP"  at 54, 232
line   from 3, 290 \
	to 319, 290 
line   from 3, 290 \
	to 319, 290 
"\fH\s6Modify AT Entry\s0\fP"  at 281, 281
"\fH\s60  Exit\s0\fP"  at 56, 555
"\fH\s61  Store Schema\s0\fP"  at 75, 543
"\fH\s62  Load Schema\s0\fP"  at 74, 529
"\fH\s6(SRT):3  Display SRT\s0\fP"  at 59, 516
"\fH\s64  Add SRT Entry\s0\fP"  at 78, 504
"\fH\s6Operations:\s0\fP"  at 41, 577
line   from 22, 571 \
	to 65, 571 
"\fH\s65  Delete SRT Entry\s0\fP"  at 80, 492
"\fH\s66  Modify SRT Entry\s0\fP"  at 83, 479
"\fH\s6(OCT):7  Display OCT\s0\fP"  at 59, 467
"\fH\s68  Add OCT Entry\s0\fP"  at 78, 454
"\fH\s69  Delete OCT Entry\s0\fP"  at 81, 440
"\fH\s610  Modify OCT Entry\s0\fP"  at 81, 427
"\fH\s6(AT):11  Display AT\s0\fP"  at 57, 415
"\fH\s612  Add AT Entry\s0\fP"  at 73, 402
"\fH\s613  Delete AT Entry\s0\fP"  at 77, 390
"\fH\s614  Modify AT Entry\s0\fP"  at 78, 377
line   from 1, 604 \
	to 317, 604 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 141, 594
line   from 0, 588 \
	to 317, 588 
"\fH\s6\s0\fP"  at 275, 425
"\fH\s6Which Function?\s0\fP"  at 45, 354
line   from 0, 604 \
	to 0, 367 
"\fH\s6(Mask 9)\s0\fP"  at 23, 594
"\fH\s6Schema Administration\s0\fP"  at 269, 594
line   from 0, 367 \
	to 294, 367 
"\f(HB\s614\s0\fP"  at 87, 354
"\fH\s6Modify AT Entry\s0\fP"  at 572, 553
line   from 294, 562 \
	to 610, 562 
line   from 294, 562 \
	to 610, 562 
"\fH\s6(Mask 12)\s0\fP"  at 316, 553
line   from 293, 325 \
	to 610, 325 
line   from 610, 562 \
	to 610, 325 
line   from 293, 562 \
	to 293, 325 
line   from 293, 546 \
	to 610, 546 
line   from 293, 546 \
	to 610, 546 
line   from 293, 325 \
	to 554, 325 
line   from 293, 562 \
	to 293, 325 
line   from 610, 562 \
	to 610, 540 
"\fH\s6DIRECTORY SYSTEM\s0\fP"  at 445, 553
line   from 317, 604 \
	to 317, 562 
"\f(HB\s6POS\s0\fP"  at 466, 519
"\fH\s6\s0\fP"  at 397, 3
"\fH\s6Case Ignore String\s0\fP"  at 197, 156
"\fH\s6Standard\s0\fP"  at 176, 141
"\fH\s6NO\s0\fP"  at 166, 109
"\fH\s60\s0\fP"  at 162, 125
"\fH\s63\s0\fP"  at 162, 171
"\fH\s630\s0\fP"  at 165, 185
"\fH\s61\s0\fP"  at 161, 202
"\fH\s643.12.2.1107.1.3.4.20\s0\fP"  at 200, 214
"\fH\s6Position\s0\fP"  at 176, 230
"\fH\s6POS\s0\fP"  at 169, 246
.PE
...\" 
.S 12
...\" .DE
.in
