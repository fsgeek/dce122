...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: x500obj.8gds,v $
...\" Revision 1.1.4.1  1996/06/18  15:51:46  wardr
...\" 	{enh,R1.2.2}
...\" 	Update for sgml conversion
...\" 	[1996/06/18  15:50:23  wardr]
...\"
...\" Revision 1.1.2.9  1995/08/16  18:37:10  weir
...\" 	Prentice-Hall edits: pass 2
...\" 	[1995/08/16  18:36:08  weir]
...\" 
...\" Revision 1.1.2.8  1995/08/14  16:30:31  weir
...\" 	Prentice-Hall edits
...\" 	[1995/08/14  16:30:00  weir]
...\" 
...\" Revision 1.1.2.7  1994/11/04  00:03:13  neilson
...\" 	Substituted macros for book names in cross refs.
...\" 	[1994/11/03  12:23:25  neilson]
...\" 
...\" Revision 1.1.2.6  1994/10/18  16:25:19  rnollman
...\" 	editorial changes from munich
...\" 	[1994/10/18  16:25:07  rnollman]
...\" 
...\" Revision 1.1.2.5  1994/10/12  16:51:06  rnollman
...\" 	another last minute fix from munich
...\" 	[1994/10/12  16:50:47  rnollman]
...\" 
...\" Revision 1.1.2.4  1994/10/12  16:06:14  rnollman
...\" 	fixed gdscp.h header file reference
...\" 	[1994/10/12  16:06:02  rnollman]
...\" 
...\" Revision 1.1.2.3  1994/10/12  16:00:22  rnollman
...\" 	last minute editorial changes from munich
...\" 	[1994/10/12  16:00:08  rnollman]
...\" 
...\" Revision 1.1.2.2  1994/09/01  16:20:32  rnollman
...\" 	[rnollman] - checkin after munich comments incorp
...\" 	[1994/09/01  16:14:56  rnollman]
...\" 
...\" Revision 1.1.2.1  1994/08/04  21:04:30  hal
...\" 	Create DCE GDS Admin Gd & Ref from GDS parts of Adm Gd & Cmd Ref; fix log leaders if needed
...\" 	[1994/08/04  20:11:58  hal]
...\" 
...\" 	Creating GDS Admin Gd & Ref from Admin book.extended, Cmd Ref
...\" 
...\" Revision 1.1.2.4  1994/06/13  18:41:19  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  18:39:01  devobj]
...\" 
...\" Revision 1.1.2.3  1994/05/14  23:01:27  rnollman
...\" 	last beta update
...\" 	[1994/05/14  22:56:22  rnollman]
...\" 
...\" Revision 1.1.2.2  1994/05/09  19:26:38  rnollman
...\" 	udpated from Munich trip
...\" 	[1994/05/09  19:26:19  rnollman]
...\" 
...\" Revision 1.1.2.1  1994/04/07  17:21:40  rnollman
...\" 	new reference page
...\" 	[1994/04/07  17:21:23  rnollman]
...\" 
...\" $EndLog$
'\" /*****************************************************************
'\" *                                                                *
'\" * COPYRIGHT   (C)  SIEMENS NIXDORF INFORMATIONSSYSTEME AG 1994   *
'\" *                  ALL RIGHTS RESERVED                           *
'\" *                                                                *
'\" *****************************************************************/
.TH x500obj 8gds
.iX "Global Directory Service commands" "x500obj"
.SH "NAME"
\*Lx500obj\*O - represents the X500 directory objects on which \*Lgdscp\*O operations are performed
.SH "SYNOPSIS"
.sS
[\*Lx500obj\*O] \*Lbind\*O [\*L-cache\*O] [\*L-dirid\*O \*Edirectory-ID\*O] [\*L-dsa\*O \*Edsa-name\*L]
.nL
[\*L-psap\*O \*Epsap-address\*O] [\*L-user\*O \*Eusername\*O] [\*L-password\*O \*Epassword\*O]
.nL
[\*L-authentication\*O \*Eauthentication-method\*O]

[\*Lx500obj\*O] \*Lcompare\*O [\*Edit-object-name\*O] \*L-attribute\*O \*Eattribute-information\*O

[\*Lx500obj\*O] \*Lcreate\*O \*Edit-object-name\*O [\*L-attribute\*O \*Eattribute-information\*O ...]

[\*Lx500obj\*O] \*Ldelete\*O \*Edit-object-name\*O

[\*Lx500obj\*O] \*Lhelp\*O [\*Eoperation-name\*O] [\*L-verbose\*O]

[\*Lx500obj\*O] \*Llist\*O [\*Edit-object-name\*O] [\*L-pretty\*O]

[\*Lx500obj\*O] \*Lmodify\*O [\*Edit-object-name\*O] \*L-addattr\*O \*Eattribute-information\*O 

[\*Lx500obj\*O] \*Lmodify\*O [\*Edit-object-name\*O] {\*L-changeattr\*O \*Eold-attribute-information\*O
.nL
\*Enew-attribute-information\*O} ...

[\*Lx500obj\*O] \*Lmodify\*O [\*Edit-object-name\*O] \*L-removeattr\*O \*Eattribute-information\*O ...

[\*Lx500obj\*O] \*Lmodify\*O [\*Edit-object-name\*O] \*L-rdn\*O \*Eattribute-information\*O 

[\*Lx500obj\*O] \*Loperations\*O

[\*Lx500obj\*O] \*Lsearch\*O [\*Edit-object-name\*O] [\*L-pretty\*O] [\*L-types\*O]
.nL
[\*L-attribute\*O \*Eattribute-type\*O ...] [\*L-filter\*O \*Efilter\*O] [\*L-allattr\*O]
.nL
[\*L-baseobject\*O | \*L-onelevel\*O |\*L-subtree\*O] [\*L-noaliases\*O]

[\*Lx500obj\*O] \*Lshow\*O [\*Edit-object-name\*O] [\*L-pretty] [\*L-types\*O] [\*L-attribute\*O \*Eattribute-type\*O ...]
.sE
.PP
The \*Lx500obj\*O argument is optional. If you do not include it, \*Lgdscp\*O
defaults to the \*Lx500obj\*O object.
.nL
.ne 20
.SH "OPERATIONS"
.PP
.VL .75i
.LI "\*Lbind\*O"
Binds \*Lgdscp\*O to a directory server. All subsequent directory
requests are directed to this server. You must execute a \*Lbind\*O command
before you attempt to perform any operation on the \*Lx500obj\*O object.If a
bind operation to the directory server has been performed earlier, this command
makes an implicit unbind operation and then proceeds to perform the new bind
operation. You can perform a \*Lbind\*O operation with user credentials.
.PP
If you do not specify an option, \*Lgdscp\*O sends an anonymous bind request to
the default DSA. The \*L-dsa\*O and \%\*L-psap\*O options are mutually exclusive.
Use the \%\*L-dsa\*O option to specify the name of the DSA to which the bind is
to be made. Use the \%\*L-psap\*O option to specify the PSAP address of the DSA
to which the bind is to be made.
.PP
Use the \%\*L-dirid\*O option to specify the directory identifier to which the
bind is to be made. If you do not specify a directory identifier, \*Lgdscp\*O
uses the default directory. When you use the \%\*L-dirid\*O option, you must also
use either the \*L-dsa\*O, \*L-psap\*O, or \%\*L-cache\*O option.
.PP
If you use the \%\*L-cache\*O option, the bind refers to the DUA cache. You
should not use the \*L-user\*O, \*L-password\*O, \*L-dsa\*O, \*L-psap\*O, or
\%\*L-authentication\*O options with the \%\*L-cache\*O option.
.PP
The \%\*L-authentication\*O option takes the value \*LDCE\*O or \*LSIMPLE\*O.
Specify the \*L-user\*O and \%\*L-password\*O options for simple authentication.
If DCE authentication is required, you should not specify \*L-user\*O and
\*L-password\*O. If you do not specify an authentication mechanism, then an
anonymous bind is made.
.LI "\*Lcompare\*O"
Compares an attribute name and value with the attribute names and values of an
object in the DIT. The \*Lcompare\*O command returns TRUE if the attribute name
and value you specify matches the attribute name and value of the object you
specify in the DIT. Otherwise, it returns FALSE.
.PP
.LI "\*Lcreate\*O"
Creates an object entry in the DIT.
.PP
.LI "\*Ldelete\*O"
Removes an object entry from the DIT.
.PP
.LI "\*Lhelp\*O"
Displays help text for the \*Lx500obj\*O object.
.PP
If \*Lhelp\*O is invoked without any argument or an option, then it returns a
one-line-per-operation help message as shown below:
.PP
.oS
bind            Binds to the directory server.
compare         Checks if the object has the specified
                attribute values.
create          Creates an object in the directory.
delete          Removes the specified object entry from
                the DIT.
list            Lists all the children of the specified
                object.
modify          Modifies the attribute values of an object
                in the DIT.
search          Searches for objects (normally which
                satisfy certain conditions).
show            Reads attributes of an object.
help            Displays help text for the x500obj object
                and its operations.
operations      Lists the operations that can be performed
                on x500obj object.
.oE
.PP
If \*Lhelp\*O is invoked with an operation name as the argument, it returns a
one-line-per-option help message.
.PP 
For example:
.PP
.oS
% \*Lhelp show\*C

-attribute  To request specific attribute values from the
            DSA.
-types      To request only attribute types and no values
            from the DSA. 
-pretty     To display the result in a structured format.
.oE
.PP
Finally, if you invoke the \*Lhelp\*O command with the \*L-verbose\*O
option, it displays a one paragraph description of what the
\*Lx500obj\*O object represents and how to use it.
.LI  "\*Llist\*O"
Displays the children of the object you specify. For example:
.PP
.oS
\*Llist\*O
.oE
.PP
lists the children of the current object. Assuming that the current object 
is \*L/C=de/O=sni/OU=ap11\*O, the returned TCL list would be as shown below:
.PP
.ps -2
.oS
/C=de/O=sni/OU=ap11/CN=mueller  /C=de/O=sni/OU=ap11/CN=schmid
.oE
.ps +2
.PP
In general, each item in the returned TCL list will contain a DN.
.PP
If you specify the \%\*L-pretty\*O option, the output would appear as follows:
.nL
.ne 20
.oS
1) /C=de/O=sni/OU=ap11/CN=mueller
2) /C=de/O=sni/OU=ap11/CN=schmid
.oE
.PP
.nS note
\*Lgdscp\*O renames the TCL \*Llist\*O command to \*Lllist\*O so that it does
not conflict with the \*Lgdscp\*O \*Llist\*O command.
.nE
.LI "\*Lmodify\*O"
Modifies the attribute values of an object in the DIT. The \*Lmodify\*O
operation has four modes of operation depending on the option you specify.
The options are:
.VL
.LI "\*L-addattr\*O"
Adds a new attribute or attribute values to an existing attribute. You should
only specify one attribute type with one or more values. If the attribute you
specify does not exist, the attribute is created.
.LI "\*L-changeattr\*O"
Modifies an existing value of an attribute. You can change more than one attribute
value for more than one attribute type in a single execution.
.LI "\*L-removeattr\*O"
Deletes an existing attribute or attribute values from a specified object entry.
If you specify only the attribute type, the command deletes the attribute from
the object entry. You can delete more than one attribute type in a single execution.
.LI "\*L-rdn\*O"
Modifies the RDN of an object in the DIT.
.LE
.PP
The \*Lmodify\*O options are mutually exclusive, and only one of them must
be used during a \*Lmodify\*O operation.
.LI "\*Loperations\*O"
Displays a list of operations that can be performed on the \*Lx500obj\*O object
type.
.LI "\*Lsearch\*O"
Starts a search from the object you specify and searches the DIT for
entries that match a filter. The object you specify in the command is the base
object. Use only one of the mandatory options: \%\*L-baseobject\*O, \%\*L-onelevel\*O,
or \%\*L-subtree\*O to limit the scope of the search to the base object, the next
level of objects, or the subtree below the base object.
.PP
The search operation returns the name of all entries without attribute information
by default. Use the \%\*L-attribute\*O option to request specific attributes. Use
the \%\*L-allattr\*O option to request all attributes. Use the \%\*L-types\*O option
to request attribute types only. The \*L-attribute\*O, \*L-allattr\*O, and
\%\*L-types\*O options are mutually exclusive.
.nL
.ne 20
.PP
For example:
.PP
.oS
\*Lsearch  /C=de/O=siemens/OU=dap11  -onelevel  -attribute  SN  TN \\
        -filter {{(CN=s*) && (SN=*schmid*)}}\*O
.oE
.PP
This command searches at the next level of \*L/C=de/O=siemens/OU=dap11\*O all the
objects whose common name starts with \*Ls\*O and whose surname contains \*Lschmid\*O.
.PP
The returned TCL list would appear as follows:
.PP
.oS
{/C=de/O=siemens/OU=dap11/CN=schmid  {SN=Henry Schmid} \\
TN=122345;789378}
.oE
.PPx
In general, each item in the returned TCL list will contain the complete
entry information of an object in the DIT. Furthermore, each entry
information is also a TCL list of items, with the first item as the DN,
and the subsequent items as attribute information.
.PP
If you specify the \%\*L-pretty\*O option, the output is formatted. If you do not
specify the \%\*L-pretty\*O option, the output is presented as a TCL list.
.LI "\*Lshow\*O"
Reads an object entry and displays the values of the attribute types you specify.
The \*Lshow\*O operation returns all the attributes and their values by default.
Use the \%\*L-types\*O option to request attribute types only. Use the
\%\*L-attribute\*O option to specify particular attributes. If you specify the
\%\*L-pretty\*O option, the output is formatted.
.PP
If you do not specify the \%\*L-pretty\*O option, the output is presented as a
TCL list. The first item in the list is the DN; subsequent items contain attribute
information.
.LE
.SH "ARGUMENTS"
.VL .75i
.LI "\*Vdit-object-name\*O"
.PP
Specifies the \*Vdit-object-name\*O of an \*Lx500obj\*O object in one of the
following formats:
.ML
.LI
A complete object name relative to the root of the DIT
.PP
The object name must start with the backslash (/).
.PP
For example:
.PP
.oS
\*L"/C=de/O=dbp/OU=dap11/CN=mueller"\*O
.oE
.LI
An object name relative to the current position in the DIT
.PP
To build a complete object name, \*Lgdscp\*O appends the specified object name
to the object name of the current position in the DIT. To specify the relative
name, omit the beginning backslash (/) and start with the naming attribute
abbreviation.
.PP
For example:
.PP
.oS
\*L"CN=mueller,OU=sni"\*O
.oE
.PP
If the current object name is \*L/C=de/O=dbp/OU=dap11\*O, then
\*L/C=de/O=dbp/OU=dap11/CN=mueller,OU=sni\*O is the target object name.
.PP
The default current object is the root of the DIT. Specify the current object
in the DIT by setting the global variable \*Lgdscp_cwo\*O. \*Lgdscp_cwo\*O is
initialized with the specified value only if the object exists in the DIT.
Otherwise, an error is returned.
.PP
For example:
.PP
.oS
set gdscp_cwo /C=de/O=dbp/OU=dap11
.oE
.LI
No object name specified in the command
.PP
The current object is the target object.
.LE
.PP
Refer to the section entitled \*VStrings Representing a Distinguished Name\*O
for complete information on the string syntax.
...\" 
...\" 
...\" 
.LI "\*Vdirectory-ID\*O"
Specifies the ID number of the Directory Service to which a \*Lbind\*O operation
is performed (1-20).
.LI "\*Vdsa-name\*O"
Specifies the distinguished name of the DSA to which a \*Lbind\*O operation is
performed. It must be a pathname starting from \*Lroot\*O (for example,
\*L/C=de/O=dbp\OU=dap11\CN=dsa\CN=dsa-m1\*O. Refer to the section entitled
\*VStrings Representing a Distinguished Name\*O for information on strings
used to represent DNs.
.LI "\*Vpsap-address\*O"
Specifies the Presentation Service Access Point Address (PSAP) of the DSA to
which a \*Lbind\*O operation is performed. Refer to Appendix H for a description
of how to format a PSAP address. An example of a PSAP address follows:
.PP
.oS
\*L"TS=Server, NA=TCP/IP!internet=127.0.0.1+port=21011"\*O
.oE
.LI "\*Vusername\*O"
Specifies the distinguished name of the user on whose behalf the bind request
is made. The \*Vusername\*O and \*Vpassword\*O values form the user credentials
for \*LSIMPLE\*O authentication. \*Vusername\*O requires a value with \*LDN\*O
syntax. It must be a pathname starting from \*Lroot\*O. For example:
.PP
.oS
\*L/C=de/O=sni/OU=dap11/CN=miller\*O
.oE
.PP
Refer to the section entitled \*VStrings Representing a Distinguished Name\*O
for information on strings used to represent DNs.
.LI "\*Vpassword\*O"
Specifies the user password of the user on whose behalf the bind request had
been made for \*Lsimple\*O authentication. For example:
.PP
.oS
\*Lschmid\*O
.oE
.PP
or
.PP 
.oS
\*L\ex6e\ex61\ex69\ex6b\*O
.oE
.LI "\*Vauthentication-method\*O"
Specifies the authentication method used in a \*Lbind\*O request. Valid values
are
.ML
.LI
\*LDCE\*O
.LI
\*LSIMPLE\*O (requires a \*Vusername\*O and a \*Vpassword\*O)
.LE
.LI "\*Vattribute-information\*O"
The combination of attribute type and value separated by an equal sign (=).
For example:
.PP
.oS
SN=schmid or 85.4.4=schmid
.oE
.PP
Refer to the sections entitled \*VStrings Representing GDS Attribute
Information\*O and \*VStrings Representing Structured GDS Attribute
Information\*O for more information on string syntax.
.LI "\*Eattribute-type\*O"
Specifies the attribute type to be read from the DIT in \*Lshow\*O and
\*Lsearch\*O commands. Specify an attribute type by entering an attribute
abbreviation or attribute object identifier. For example, \*LSN\*O (an
attribute abbreviation) and \*L85.4.4\*O (an attribute object identifier)
are synonymous.
.LI "\*Voperation-name\*O"
Specifies the operation for which help text is displayed.
.nL
.ne 20
.LI "\*Vfilter\*O
Specifies a filter expression. Refer to the section entitled \*VStrings
Representing Expressions\*O for complete information on string syntax for
filters.
.LE
.SH "OPTIONS"
.PP
Options contain a leading dash (-) and are a full word. Some options take a
value that immediately follow the option. If the option allows multiple values,
you can specify the values immediately after the option as separate
arguments, as a single TCL list argument, or as a combination of both
as shown in the following examples:
.PP
.oS
\*Lgdscp> x500obj create CN=schmid -attribute tn=1234 dsc=Engineer SN=schmid
gdscp> x500obj create CN=schmid -attribute {tn=1234 dsc=Engineer SN=schmid}
gdscp> x500obj create CN=schmid -attribute {tn=1234 dsc=Engineer} SN=schmid\*O
.oE
.PP
If you use a space character in a value, you must enclose the entire
value within two sets of braces as shown in the following examples:
.PP
.oS
\*Lgdscp> x500obj create CN=schmid -attribute {{dsc= Software Engineer}}
gdscp> x500obj create CN=schmid -attribute {{dsc= Software Engineer} tn=1234}\*O
.oE
.PP
The \*Lx500obj\*O object supports the following options:
.VL
.LI "\*L-addattr\*O"
Adds attributes in a \*Lmodify\*O operation.
.LI "\*L-allattr\*O"
Searches for all attributes.
.LI "\*L-attribute\*O"
Specifies the attribute information or attribute types.
.LI "\*L-authentication\*O
Specifies the authentication mechanism in a \*Lbind\*O operation.
.LI "\*L-baseobject\*O"
Restricts the scope of a search to base object only.
.LI "\*L-cache\*O"
Binds to the DUA cache.
.LI "\*L-changeattr\*O"
Changes attributes in a \*Lmodify\*O operation.
.LI "\*L-dirid\*O"
Specifies a directory identifier.
.LI "\*L-dsa\*O"
Specifies a DSA name.
.LI "\*L-filter\*O"
Uses the specified filter in a search operation.
.LI "\*L-noaliases\*O"
Specifies that aliases are not to be dereferenced in a \*Lsearch\*O operation.
.LI "\*L-onelevel\*O"
Restricts the scope of a search to all children of the base object.
.LI "\*L-password\*O"
Specifies a user password.
.LI "\*L-pretty\*O"
Presents a result in structured format.
.LI "\*L-psap\*O"
Specifies a PSAP address.
.LI "\*L-rdn\*O"
Modifies a leaf RDN in a \*Lmodify\*O operation.
.LI "\*L-removeattr\*O"
Deletes attributes in a \*Lmodify\*O operation.
.LI "\*L-subtree\*O"
Specifies the scope of a search as the whole subtree of the base object
(including the base object).
.LI "\*L-types\*O"
Restricts a \*Lsearch\*O or \*Lshow\*O request to attribute types and no
values.
.LI "\*L-user\*O"
Specifies a user name.
.LI "\*L-verbose\*O"
Displays a description of the \*Lx500obj\*O object when used with the
\*Lhelp\*O command.
.LE
.SH "DESCRIPTION"
.PP
The \*Lx500obj\*O object represents X.500 directory objects in the DIT
on which \*Lgdscp\*O commands perform Directory operations (such as
\*Lcreate\*O, \*Lmodify\*O, and \*Ldelete\*O). You can perform
SQL-like \*Lsearch\*O operations. You can also manipulate the objects
in the DUA cache.
.PP
You can specify the DIT object names and attributes easily by using
strings. The \*Lx500obj\*O object type always remembers the current
object in the DIT so that you do not have to specify the DIT object
name with every operation or can specify the DIT object relative to
the current object. You can also specify the attribute values as \*LT.61\*O
strings or strings in Local Code (ISO8859-1).
...\" 
.SS "Support for T.61 Strings"
.PP
The \*Lgdscp\*O command assumes by default that strings are specified
with the Local Code Set (ISO8859-1). This implies that you can specify
a value such as \*LCN=M\(u:ller\*O. However, you can set the TCL global
variable \*Lgdscp_t61\*O to TRUE so that \*Lgdscp\*O interprets strings
to be of type \*LT.61\*O. If you set \*Lgdscp_t61\*O to FALSE or do not
define it, \*Lgdscp\*O assumes Local Strings.
...\" 
.SS "Specifying String Syntax with gdscp Commands"
.PP
You can specify DIT object names and attributes using one of the
following syntax types:
.PP
.ML
.LI
Strings representing GDS attribute information
.LI
Strings representing structured GDS attribute information
.LI
Strings representing a distinguished name
.LI
Strings representing expressions
.LE
.SS "Strings Representing GDS Attribute Information"
.PP
These strings are used to associate the attributes with their values. 
They are of the form:
.PP
.oS
\*L<Attribute Type> = <Attribute Value>\*O
.oE
.PP
The attribute types can either be specified as abbreviations or object 
identifier strings. An object identifier string is defined as a series 
of digits separated by the dot character. If attribute abbreviations are 
used, they are case insensitive. For example:
.PP
.oS
\*Lcn=schmid\*O   or   \*L85.4.3=schmid\*O
.oE
.PP
Object class values can also be specified as an abbreviation string.
For example, an object class for \*LResidential Person\*O can be specified
as \*LOCL=REP\*O or \*LOCL='\ex55\ex06\ex0A'\*O.
.PP
All leading and trailing whitespace (surrounding the attribute type, the
equal (=) character, and the attribute value) is ignored.
.PP
The following are the reserved characters for such strings:
.PP
.VL .5i
.LI \*L'\*O
These can be used to enclose the attribute values. If this character is used,
all other reserved characters within the quoted string except the \*L\e\*O
character are not interpreted (for example, \*Lcn='henry mueller'\*O).
.LI \*L;\*O
To separate multiple values of a recurring attribute. All leading and trailing
whitespace surrounding the semicolon (;) is ignored. For example:
.PP
.oS
\*LTN=899898;979779\*O
.oE	
.LI \*L=\*O
To associate the attribute with its value.
.LI \*L\ex\*Vnn\*O
Used to specify hexadecimal data. After the \*L\ex\*O, the next
two characters are read as the hexadecimal value.
.LI \*L\e\*O
Used to escape any of the reserved characters above.
.LE
.SS "Strings Representing Structured GDS Attribute Information"
.PP
These strings are used to associate the structured attribute and its
components with their values. They are of the form:
.PP
.oS
\*L<Structured Attribute Type> = {<Comp1 = Value>, <Comp2 = Value>, ..}\*O
.oE
.PP
The structured attribute type can either be specified as abbreviations
or object identifier strings. An object identifier string is defined
as a series of digits separated by the dot character. If attribute
abbreviations are used, they are case insensitive. \*VComp1\*O,
\*VComp2\*O, and so on, are the components of the structured attribute.
They should be specified as abbreviations. For example:
.PP
.oS
\*LTXN={TN=977999, CC=345, AB=8444}\*O
.oE
.PP
Specify the recurring values for structured attributes using
a semicolon (;) as follows:
.PP
.oS
\*LTXN={TN=977999, CC=345, AB=8444};{TN=123444,CC=345, AB=8444}\*Ox
.oE
.PP
Specify the recurring values for the components as follows:
.PP
.oS
\*LTXN={TN=977999; 274424, CC=345, AB=8444}\*O
.oE
.PP
If any of the components are further structured, enclose them within
braces as follows:
.PP
.oS
\*LFTN={PA={FR=1,TD=1}, PN=67899}\*O
.oE
.PP
All leading and trailing whitespace surrounding the structured attribute
type, the component abbreviation, the equal (=) character, the open brace ({)
, the comma (,), and the closed brace (}) is ignored.
.PP
Specify attributes and components with distinguished name syntax as follows:
.PP
.oS
\*LAON={/c=de/o=sni/ou=ap11/cn=mueller}
ACL={MPUB={INT=0, USR={/c=de/o=sni/cn=mueller, sn=schmid}}}\*O
.oE
.PP
Specify the object class value as an abbreviation string as follows:
.PP
.oS
\*LSG={OCL=REP} or SG={OCL='\ex55\ex06\ex0A'}\*O
.oE
.PP
Attributes of type Presentation Address are handled by using the PSAP macro
utility. Specify the value for such an attribute as follows:
.PP
.oS
\*LPSA={TS=Server, NA='TCP/IP!internet=127.0.0.1+port=12345'}\*O
.oE
.PP
Refer to Appendix H for further information on network address format.
.PP
The following are the reserved characters for strings with structured
attribute information:
.P
.VL .5i
.LI \*L'\*O
Encloses the attribute values.
If the \*L'\*O character is used, all other reserved characters
within the quoted string except the \*L\e\*O character are not 
interpreted. For example:
.PP
.oS
\*Lcn='henry mueller'\*O
.oE
.LI \*L/\*O
Specifies an attribute value with DN Syntax. For example:
.PP
.oS
\*LAON = {/c=de/o=sni/ou=ap22/cn=mayer}\*O
.oE
.LI \*L{\*O
Indicates the start of a structured attribute value block.
.LI \*L}\*O
Indicates the end of a structured attribute value block.
.LI \*L,\*O
Separates the components of a structured attribute. For example:
.PP
.oS
\*LTN=977999, CC=345, AB=8444\*O
.oE
.PP   
It can also be used to specify multiple AVAs in the case of
attributes with DN syntax.
.LI \*L;\*O
Separates multiple values of a recurring attribute or the recurring
components of the structured attribute. All leading and trailing whitespace
surrounding the semicolon (;) is ignored. For example:
.PP
.oS
\*LTXN={TN=977999,CC=345,AB=8444};{TN=53533,CC=242,AB=44242}\*O
.oE
.LI \*L=\*O
Associates the components with their value and the components to the
structured attribute.
.LI \*L\ex\*Vnn\*O
Specifies hexadecimal data. After the \*L\ex\*O, the next two characters
are read as the hexadecimal value.
.LI \*L\e\*O
Escapes any of the reserved characters above.
.LE
.SS "Strings Representing a Distinguished Name"
.PP
Use these strings to represent the DN of the object in the following format:
.PP
.oS
\*L/\*VAttribute Type\*O = \*VNaming Attribute Value\*O\*O ....
.nL
or 
.nL
\*L/\*VAttribute Value/\*VAttribute Value\*O\*O ....
.oE
.PP
Specify the attribute types as abbreviations or object identifier strings. An
object identifier string is defined as a series of digits separated by a dot (.).
Attribute abbreviations, are case insensitive. Specify multiple AVAs by
separating the naming attribute values with a comma (,).
.PP
You can specify the first RDN as the DCE global root string \*L/...\*O,
which is a sequence of the backslash (/) character followed by three
dots (...). Some examples are shown below:
.PP
.oS
\*L/c=de/o=sni/ou=ap11, l=munich/85.4.3=schmid
.nL
/c=us/o=osf/ou=abc/subsystems/server/xyz
.nL
/.../c=us/o=osf/ou=abc/subsystems/server/xyz\*O
.oE
.PP
The first nonspace character should always be the backslash (/) character.
All leading and trailing whitespace surrounding the backslash (/), 
attribute type, the equal (=) character, and the attribute value) 
is ignored.
.PP
The following are the reserved characters:
.VL .5i
.LI \*L'\*O
Enclose the naming attribute values. If you use this character, all other
reserved characters within the quoted string except the \e character are not
interpreted. For example:
.PP
.oS
\*Lcn='henry mueller'\*O
.oS
.LI \*L/\*O
Used as a delimiter between RDNs.
.LI \*L,\*O
Specifies multiple AVAs. All leading and trailing whitespace surrounding
the comma (,) character is ignored. For example:
.PP
.oS
\*L/c=de/o=dbp/ou=dap11/cn=schmid, ou=ap11\*O
.oE
.LI \*L=\*O
Associates the object with its naming attribute value.
.LI \*L\exnn\*O
Specifies hexadecimal data. After the \*L\ex\*O, the next two characters
are read as the hexadecimal value.
.LI \*L\e\*O
Escapes any of the reserved characters above.
.LE
.SS "Strings Representing Expressions"
.PP
These strings are used to specify an SQL-like expression in a \*Lsearch\*O
operation. The following example searches for any \*LOrganizational-Person\*O
(\*LORP\*O) or \*LResidential-Person\*O (\*LREP\*O) whose name approximately
matches \*Lschmid\*O and whose surname is not \*Lronnie\*O:
.PP
.oS
\*L(CN~=schmid) && (OCL=ORP || OCL=REP) && !(SN=ronnie)\*O
.oE
.PP
You can use object identifiers instead of attribute type abbreviations. The
object identifier string is a series of numbers separated by a dot (.)
.PP
All leading and trailing whitespace surrounding the attribute types, the
operators, and the attribute values is ignored.
.PP
Additionally the presence of an attribute can also be tested in either of
the following ways:
.PP
.oS
\*Lc = de && cn
.nL
c = de && cn = *\*O
.oE
.PP
The following are the reserved characters:
.VL .5i
.LI \*L'\*O
Indicates the start/end of an attribute value string. You should use it when
spaces are part of the data. If this character is used, all other reserved
characters within the quoted string except the \*L\e\*O character are not
interpreted. For example:
.PP
.oS
\*LOU=sni && cn='Henri Mueller' && tn=89989\*O
.oE
.LI /
Specifies an attribute value with DN Syntax. For example:
.PP
.oS
AON = {/c=de/o=sni/ou=ap22/cn=mayer}
.oE
.LI \*L=\*O
Associates the attribute with its value.
.LI \*L&&\*O
Logically ANDs two conditions.
.LI \*L||\*O
Logically ORs two conditions.
.LI \*L!\*O
Logically negates a condition.
.LI \*L~=\*O
Specifies phonetic matching during a search.
.LI \*L\*~<\*O
Matches values less than a specified value.
.LI \*L\*~>\*O
Matches values greater than a specified value.
.LI \*L>=\*O
Matches values greater than or equal to a specified value.
.LI \*L<=\*O
Matches values less than or equal to a specified value.
.LI \*L*\*O
Specifies substrings during a search.
.LI \*L(\*O
Used for nesting of filters.
.LI \*L)\*O
Used for nesting of filters.
.LI \*L{\*O
Indicates the start of a structured attribute value block.
.LI \*L}\*O
Indicates the end of a structured attribute value block.
.LI \*L,\*O
Separates the components of a structured attribute.  For example:
.PP
.oS
\*LTN=977999, CC=345, AB=8444\*O
.oE
.PP
You can also use it to specify multiple AVAs in the case of
attributes with DN syntax.
.LI \*L\exnn\*O
Specifies hexadecimal data. After the \*L\ex\*O, the next
two characters are read as the hexadecimal value.
.LI \*L\e\*O
Escapes any of the reserved characters above.
.LE
.PP
While evaluating an expression during \*Lsearch\*O operations, the following
precedence of operators prevail:
.PP
(\|)
.nL
!
.nL
&&
.nL
||
.PP
The \*L(\*O and \*L)\*O have the highest precedence and \*L||\*O has the lowest.
...\" 
.SS "The gdscp Reserved Characters Interpreted by TCL"
Some of the reserved characters used by \*Lgdscp\*O (namely,
braces ({}), the backslash (\\) and semicolon (;)) are also interpreted by
the TCL interpreter. To avoid the interpretation of these characters
by the TCL interpreter, the user can surround the argument with
braces ({}) or use the TCL reserved character, slash (\\), to escape
these characters.
.PP
For example, if the value of an attribute is \*L\\x35\\x36\\x37\*O, you can use
.oS
\*Lmodify -addattr {dsc=\\x35\\x36\\x37}\*O  or
\*Lmodify -addattr dsc=\\\\x35\\\\x36\\\\x37\*O
.oE
.SS "Filters"
You can create complex filters by using expressions described in the previous section
for search operations on an \*Lx500obj\*O object. Construct filter expressions from
the following types of items:
.VL .5i
.LI "Complete matching (=)"
Use the format: \*Eattribute type\*O = \*Eattribute-value\*O. For example:
.PP
.oS
\*LSN=schmid\*O
.oE
.PP
(which is the same as: 85.4.4=schmid).
.LI "Substring matching (=)"
.VL .5i
.LI "Substring match at the end"
Use the format: \*Eattribute-type\*O = \*E*partial-attribute-value\*O. For example:
.PP
.oS
\*LSN = *id\*O
.oE
.LI "Substring match in the beginning"
Use the format: \*Eattribute-type\*O = \*Epartial-attribute-value*\*O. For example:
.PP
.oS
\*LSN = sc*\*O
.oE
.LI "Substring match anywhere"
Use the format: \*Eattribute-type\*O = \*E*partial-attribute-value*\*O. For example:
.PP
.oS
\*LSN = *hm*\*O
.oE
.LE
.LI "Greater than or equal to matching (>=)"
Use the format: \*Eattribute-type\*O >= \*Eattribute-value\*O. For example:
.PP
.oS
\*LCN >= S\*O
.oE
.LI "Less than or equal to matching (<=)"
Use the format: \*Eattribute-type\*O <= \*Eattribute-value\*O. For example:
.oS
\*LCN <= T\*O
.oE
.LI "Present matching (=)
Use the format: \*Eattribute-type\*O = *. For example:
.PP
.oS
\*LDSC = *\*O
.oE
.LI "Approximate match based on phonetic extension (~=)"
Use the format: \*Eattribute-type\*O ~= \*Eattribute-value\*O. For example:
.PP
.oS
\*LL ~= muenchen\*O
.oE
.LE
.PP
Use the following operators to combine filter items to generate filter
expressions:
.ML
.LI 
&& (AND)
.LI 
|| (OR)
.LI 
! (NOT)
.LE
.PP
For example, the \*Lsearch\*O expression: 
.PP
\*LCN ~= mueller && ((OCL = ORP) || (OCL = REP)) && !(SN = henry) && (HBY = *)\*O
.PP
looks for an object that satisfies the following filter criteria:
.AL
.LI 
\*LCommon-Name\*O (\*LCN\*O) matches approximately to "mueller"
.LI 
Object class is \*LOrganization-Person\*O (\*LORP\*O) or \*LResidential-Person\*O (\*LREP\*O)
.LI 
\*LSurname\*O (\*LSN\*O) is not "henry"
.LI 
Object has \*LHobby\*O (\*LHBY\*O) attribute
.LE
.SH "EXAMPLES"
.PP
.VL
.LI "\*Lbind\*O"
The following example demonstrates a \*Lbind\*O command which performs a bind
with user credentials to the specified DSA for directory identifier 2:
.PP
.oS
\*Lbind -dirid 2 -dsa /C=de/O=sni/OU=ap11/CN=dsa/CN=dsa15 \e
-user /C=de/O=siemens/OU=dap11/CN=miller -password xxx \e
-authentication simple\*O
.oE
.LI "\*Lcompare\*O"
The following example returns TRUE if the current object has \*Lschmid\*O as
one of the values of the \*LSN\*O attribute:
.PP
.oS
\*Lcompare -attribute SN=schmid\*O
.oE
.LI "\*Lcreate\*O"
The following example creates an object (the current object is
\*L/C=de/O=sni/OU=ap11\*O) \*L/C=de/O=sni/OU=ap11/CN=mueller\*O with the
specified attributes:
.PP
.oS
\*Lcreate CN=mueller -attribute "OCL=ORP;PER" SN=schmid\*O
.oE
.LI "\*Ldelete\*O"
The following example deletes the child of the current object which has
\*LCN=mueller\*O. \*LCN=mueller\*O is the object name relative to the current
position:
.PP
.oS
\*Ldelete CN=mueller\*O
.oE
.LI "\*Lhelp\*O"
The following example displays help text for the \*Lbind\*O operation:
.PP
.oS
\*Lhelp show\*O

-attribute  To request specific attribute values from the DSA.
-types      To request only attribute types and no values from the DSA.
-pretty     To display the result in a structured format.
.oE
.LI "\*Llist\*O"
The following example displays the children of the current object,
\*L/C=de/O=siemens/OU=ap11\*O:
.PP
.ps -2
.oS
\*Llist\*O
.nL
/C=de/O=siemens/OU=ap11/CN=mueller  /C=de/O=siemens/OU=ap11/CN=schmid
.oE
.ps +2
.PP
If you specify the \%\*L-pretty\*O option, the output appears as follows:
.PP
.oS
1) /C=de/O=siemens/OU=ap11/CN=mueller 
2) /C=de/O=siemens/OU=ap11/CN=schmid
.oE
.LI "\*Lmodify\*O"
The following example adds the attribute \*LDescription\*O (if it does not
already exist) with the values \*Lxxx\*O and \*Lyyy\*O. Otherwise, it adds the
values to the existing attribute:
.PP
.oS
\*Lmodify /C=de/O=siemens/OU=dap11/CN=mueller \e
-addattr "DSC=xxx;yyy"\*O
.oE
.PP
The following example changes the value of the \*LSN\*O attribute from
\*Lxxx\*O to \*Lyyy\*O and changes the value of the \*LDSC\*O attribute from
\*Laaa\*O to \*Lbbb\*O:
.PP
.oS
\*Lmodify CN=mueller -changeattr SN=xxx SN=yyy \e
-changeattr DSC=aaa DSC=bbb\*O
.oE
.PP
The following example deletes the two values of the \*LDescription\*O (\*LDSC\*O)
attribute and deletes the attributes \*LLocality\*O (\*LL\*O) and
\*LBusiness-Category (\*LBC\*O) from the object entry:
.PP
.oS
\*Lmodify CN=mueller -removeattr "DSC=xxx;yyy" L BC\*O
.oE
.PP
The following example changes the specified object 
(assuming the current object to be \*L/C=de/O=siemens/OU=dap11\*O) 
to \*L/C=de/O=siemens/OU=dap11/CN=mueller,OU=sni\*O:
.PP
.oS
\*Lmodify CN=mueller -rdn "CN=mueller,OU=sni"\*O
.oE
.LI "\*Loperations\*O"
The following example shows the output of an \*Loperations\*O operation:
.PP
.oS
\*Loperations\*O

bind compare create delete list modify search show help operations
.oE
.LI "\*Lsearch\*O"
The following example searches at the next level in the DIT from
\*L/C=de/O=siemens/OU=dap11\*O all the objects with \*LCommon Name\*O
starting with \*LS\*O and \*LSurname\*O containing \*Lschmid\*O:
.PP
.oS
\*Lsearch /C=de/O=siemens/OU=dap11 -onelevel -attribute SN TN -filter
     {{(CN=s*) && (SN=*schmid*)}}\*O
.oE
.PP
The returned TCL list appears as follows:
.PP
.oS
{/C=de/O=siemens/OU=dap11/CN=schmid {SN=Henry Schmid} \e
TN=122345;789378}
.oE
.PP
If you specify the \%\*L-pretty\*O option, the output is formatted as
follows:
.PP
.oS
         1) /C=de/O=siemens/OU=ap11/CN=schmid
            Surname             :  Henry Schmid
            Telephone -Number   :  122345
                                :  789378
.oE
.PP
The following example shows the output of a \*Lsearch\*O command that
searches the subtree starting from the object
\*L/C=de/O=siemens/OU=ap11\*O for all attributes with the
\*LCommon-Name\*O \*LBrown\*O or \*LAndrews\*O. The example also
demonstrates the formatting produced by \%\*L-pretty\*O option:
.PP
.oS
% \*Lsearch /C=de/O=siemens/OU=ap11 -pretty -subtree \e
\-filter {{CN=Brown || CN=Andrews}} -allattr\*O
.oE
.PP
.ps -2
.oS
 1) /C=de/O=sni/OU=ap11/CN=Brown 
    Object-Class              : MHS-Distribution-List 
                              : Top 
    Common-Name               : Brown 
    MHS-DL-Submit-Permission  
      Permission-Type         : 0
.nL
.ne 20
      Individual   
        Directory-Name        : /C=de/O=sni     
        ADMD-Name             : dbp      
        Common-Name           : Alfred Brown   
        Country-Name          : de  
        Domain-Type-1         : MS MAIL 
        Domain-Value-1        : Brown 
        Generation            : 396  
        Given-Name            : Alfred 
        Initials              : P.  
        Organization          : Siemens Nixdorf 
        Organizational-Unit-1 : Munich 
        Organizational-Unit-2 : P1 
        Organizational-Unit-3 : P4 
        Organizational-Unit-4 : ap113 
        PRMD-Name             : sni 
        Surname               : Brown
    MHS-OR-Address                  
      ADMD-Name               : admd
      Country-Name            : de   
      PRMD-Name               : prmd  
    Description               : Software Consultant    
 2) /C=de/O=sni/OU=ap11/CN=Andrews 
    Object-Class              : MHS-Distribution-List 
                              : Top 
    Common-Name               : Andrews  
    MHS-DL-Submit-Permission        
      Permission-Type         : 0  
      Individual              
        Directory-Name        : /C=de/O=sni   
        ADMD-Name             : dbp    
        Common-Name           : Peter Andrews 
        Country-Name          : de  
        Domain-Type-1         : MS MAIL
        Domain-Value-1        : Peter 
        Generation            : 396 
        Given-Name            : Peter 
        Initials              : P. 
        Organization          : Siemens Nixdorf  
      Permission-Type         : 0 
      Individual       
        Directory-Name        : /C=de/O=sni  
        ADMD-Name             : dbp   
        Common-Name           : Peter Andrews   
        Country-Name          : de
        Domain-Type-1         : MS MAIL 
        Domain-Value-1        : Peter 
        Generation            : 396  
        Given-Name            : Peter  
        Initials              : P.  
        Organization          : Siemens Nixdorf  
        Organizational-Unit-1 : Munich   
        Organizational-Unit-2 : P1  
        Organizational-Unit-3 : P4 
        Organizational-Unit-4 : ap113 
        PRMD-Name             : sni 
        Surname               : Andrews  
    MHS-OR-Address              
      ADMD-Name               : admd 
      Country-Name            : de 
      PRMD-Name               : prmd  
    Description               : Project Leader     
.oE
.ps +2
.LI "\*Lshow\*O"
The following example reads the current object and displays the values
for the \*LSN\*O and \*LBC\*O attributes:
.PP
.oS
\*Lshow -attribute SN BC\*O
.oE
.PP
The example produces the following TCL list:
.PP
.oS
{/C=de/O=sni/OU=ap11/CN=schmid SN=schmid {BC=Software \e
Consultancy}}
.oE
.nL
.ne 20
.PP
The \%\*L-pretty\*O option produces the following output for the previous
example:
.PP
.oS
         1)  /C=de/O=sni/OU=ap11/CN=schmid
             Surname           : schmid
             Business-Category : Software Consultancy
.oE
.LE
.SH "RETURN VALUES"
Each operation on the \*Lx500obj\*O object returns one of the following:
.ML
.LI 
A list of information requested by the user (such as the results of a
\*Lsearch\*O operation)
.LI 
NULL (indicating successful completion of an operation)
.LI 
An error message string
.LE
.PP
The \*Lgdscp\*O command uses the TCL native error handling facility to log
additional error information. This additional information is stored in the
two variables: \*EerrorInfo\*O and \*EerrorCode\*O. The \*EerrorInfo\*O
variable contains a stack trace of each of the nested calls to the TCL
interpreter when the error occurred. The \*EerrorCode\*O variable is a TCL
list containing two elements: \*LGDSCP\*O (identifying the \*Lgdscp\*O program)
and the numeric value of the error code. You can use the TCL \*Lcatch\*O
command to determine the successful completion or failure of the various
\*Lgdscp\*O commands. Refer to \*Lgdscp.h\*O header file for a description
of the error codes.
.PP
Use the \%\*L-pretty\*O option to view the results in a structured format (for
example, after a successful \*Lsearch\*O operation). The output of a command
result in structured format is output in pages of 23 lines in length.
.PP
If you specify the \%\*L-pretty\*O option, the return value of the command
will be \*LNULL\ and not a TCL list.
.PP
You can scan through the output by using special \*Lgdscp\*O scrolling commands:
.VL
.LI "\*Ln\*O"
View the \*Vn\*Oth page
.LI "\*L-n\*O"
Skip \*Vn\*O pages backward
.LI "\*L+n\*O"
Skip \*Vn\*O pages forward
.LI "\*L$\*O"
View the last page
.LI "\*Lq\*O"
Quit
.nL
.ne 20
.LI "\*L<Space Key>\*O"
Advance to the next page
.LI "\*L<CR>\*O"
Advance one line
.LE
.SH "RELATED INFORMATION"
Refer to the \*(Ac for information about the basic concepts and features of TCL.
.PP
Refer to the \*Lgdscp\*O, the \*Lx500abbr\*O, and the \*Lx500svc\*O reference pages.
