%!PS-Adobe-2.0
%%BoundingBox: 0 0 250.00 110.00
-36.00 0.00 translate
% original bounding box was  0 0 612 792
%%Title: /afs/tr/doc/osf/dfs_pix/cmd_elem.ps
%%Creator: IslandDraw for wvh
%%CreationDate: Wed Nov 13 07:57:59 1991
%%Pages: 1
%%EndComments
save
2 -72 mul 9.25 -72 mul translate
/tempdict 300 dict def
tempdict begin
%% catch nocurrentpoint error for:
%% pathbbox
    /ncpoint errordict /nocurrentpoint get def
    errordict begin
    /nocurrentpoint {
	dup /pathbbox load eq
	{ pop 0 0 1 1 }
	{ ncpoint }
	ifelse
    } bind def
    end

    /image_raster { %% sw sh dw dh xs ys
	translate scale /sh exch def /sw exch def
	/imagebuf sw 7 add 8 idiv string def
	sw sh 1 [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop }
	image
    } bind def
    /m {moveto} bind def
    /l {lineto} bind def
    /c {curveto} bind def
    /n {newpath} bind def
    /cl {closepath} bind def
    /ar { %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll translate rotate scale
	n 0 0 1 5 3 roll arc setmatrix
    } bind def
    /arn { %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll translate rotate scale
	n 0 0 1 5 3 roll arcn setmatrix
    } bind def
    /el { %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll translate rotate scale
	n 0 0 1 0 360 arc setmatrix cl
    } bind def
    /bp {setlinejoin setlinewidth setgray} bind def
    /lw {setlinewidth} bind def
    /lj {setlinejoin} bind def
    /gr {setgray} bind def
%% pattern stuff
    /BPSIDE 32 def	%% pixels per pattern side
    /PATFREQ 3.0 def	%% pattern pixels per mm
    /dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
    /dp_pw BPSIDE def	%% pattern pixel width
    /dp_ph BPSIDE def	%% pattern pixel height
    /dp_w dp_pw PATFREQ div def	%% pattern mm width
    /dp_h dp_ph PATFREQ div def	%% pattern mm height
    /dp_bs 1 def		%% pattern bits per pixel

    /savemat matrix def
    /topmat matrix def
    /patmat matrix def

    /patpath {
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy exch dp_h div floor cvi def
	/hx exch dp_w div floor cvi def
	/ly exch dp_h div floor cvi def
	/lx exch dp_w div floor cvi def
	lx 1 hx {
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		exch dup 3 1 roll exch
		patmat currentmatrix pop
		translate
		dp_pw dp_ph dp_bs
		dp_mat dp_proc image
		patmat setmatrix
	    } for
	    pop
	} for
    } bind def
% setpattern  brush of patterns instead of gray
   /setpattern {
         /freq    exch def
         /bwidth  exch def
         /bpside  exch def
         /bstring exch def
         /onbits 0 def  /offbits 0 def
         freq 0 {/y exch def
                 /x exch def
                 /xindex x 1 add 2 div bpside mul cvi def
                 /yindex y 1 add 2 div bpside mul cvi def
                 bstring yindex bwidth mul xindex 8 idiv add get not
                 1 7 xindex 8 mod sub bitshift and 0 ne
                 {/onbits  onbits  1 add def 1}
                 {/offbits offbits 1 add def 0}
                 ifelse
                }
                setscreen
         {} settransfer
         offbits offbits onbits add div setgray
        } bind def
    /dmatrix matrix def
    /dpi    72 0 dmatrix defaultmatrix dtransform
        dup mul exch   dup mul add   sqrt
    def

    /B {gsave bp stroke grestore} bind def %% brush: gr lw lj
    /F {gsave setgray eofill grestore} bind def %% fill: gr
    /PB {gsave setlinejoin setlinewidth setpattern stroke grestore} bind def
    /PF {gsave eoclip patpath grestore} bind def
    /BB {gsave strokepath clip patpath grestore} bind def
%! IslandDraw text prolog Version 1.0
%%
/BLACK { 0.0 } bind def
/CP {closepath} bind def
/FI {eofill} bind def
/E {exch} bind def
/FF {findfont} bind def
/GR {grestore} bind def
/GS {gsave} bind def
/MF {makefont} bind def
/NP {newpath} bind def
/RO {rotate} bind def
/ST {stroke} bind def
/SC {scale} bind def
/SF {setfont} bind def
/SG {setgray} bind def
/SLC {setlinecap} bind def
/SLJ {setlinejoin} bind def
/SLW {setlinewidth} bind def
/TR {translate} bind def
/WHITE { 1.0 } bind def
/m {moveto} bind def
/r {rmoveto} bind def
/l {lineto} bind def
/sp {x 0 rmoveto} bind def
/rl {rlineto} bind def
/s {show} bind def
/box { NP m l l l CP } bind def
/pageboundary { NP m l l l CP } bind def
/BS {   % black stroke
GS SLJ SLW BLACK SG ST GR
} bind def
/WS {   % white stroke
GS SLJ SLW WHITE SG ST GR
} bind def
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names E def
/new_font_name E def
/base_font_name E def
/base_font_dict base_font_name FF def
/newfont base_font_dict maxlength dict def
base_font_dict {
E dup /FID ne
{ dup /Encoding eq
{ E dup length array copy newfont 3 1 roll put }
{ E newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
228 /ograve
229 /otilde
230 /registered
231 /scaron
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
242 /ydieresis
243 /zcaron
244 /Aacute
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
E dup (ZapfDingbats) eq
{ cvn E cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn E cvn extended_Symbol ReencodeSmall }
{ cvn E cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/getfont {
/f E def f cvn where
{ begin f cvx cvn exec SF end }
% { f 0 f length 8 sub getinterval (LocalFont) extend_font
%/LocalFont FF
{ f 0 f length 8 sub getinterval dup
dup length 1 add string /localfont exch def
localfont exch 0 exch putinterval
localfont dup length 1 sub (X) putinterval
localfont extend_font
localfont FF
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] MF dup f cvn E def
SF
}
ifelse
} bind def
/ul { % space drop thickness
GS currentpoint currentlinewidth 
currentpoint NP m 6 -3 roll 
SLW 0 E r
0 rl ST SLW m
GR 
} bind def
/ss { currentpoint pop E m } bind def
/image_raster { % sw sh dw dh xs ys
TR SC /sh E def /sw E def
/imagebuf sw 7 add 8 idiv string def
sw sh 1 [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop }
image
} bind def
/nx { /x E def } bind def
0. nx
%%EndFixedProlog
%%EndProlog

%%Page: 1 1
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
% Text
n savemat currentmatrix pop [1 0 0 1 58.7172 23.3052] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Bold02400240) getfont () s
0.00 SG  ($  bak adddump -level) s (Times-Roman02400240) getfont ( ) s (Times-Italic02400240) getfont (dump) s (Times-Roman02400240) getfont (_) s (Times-Italic02400240) getfont (level) s (Times-Bold02400240) getfont (...) s (Times-Roman02400240) getfont ([) s (Times-Bold02400240) getfont (-expires) s (Times-Roman02400240) getfont ( ) s (Times-Italic02400240) getfont (date) s (Times-Bold02400240) getfont (...]) s
savemat setmatrix
% Text
n savemat currentmatrix pop [1 0 0 1 127.919 11.794] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Optional) s
savemat setmatrix
% Text
n savemat currentmatrix pop [1 0 0 1 54.9216 34.8791] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Command) s
0 0 m 229 ss (Times-Roman02000200) getfont (Suite) s
savemat setmatrix
% Text
n savemat currentmatrix pop [1 0 0 1 72.0766 34.8791] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Command) s
0 0 m 229 ss (Times-Roman02000200) getfont (Name) s
savemat setmatrix
% Text
n savemat currentmatrix pop [1 0 0 1 90.3153 34.8791] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Option) s
savemat setmatrix
% Text
n savemat currentmatrix pop [1 0 0 1 128.988 34.8791] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Multiple Arguments) s
0 0 m 229 ss (Times-Roman02000200) getfont (are Allowed) s
savemat setmatrix
% Text
n savemat currentmatrix pop [1 0 0 1 103.555 34.8791] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Argument) s
savemat setmatrix
% Group
n 66.5464 25.2288 m
66.5464 31.5264 l
0 0 0 B
n 78.1353 25.2288 m
78.1353 31.5264 l
0 0 0 B
n 94.557 25.2288 m
94.557 31.5264 l
0 0 0 B
n 109.921 25.2288 m
109.921 31.5264 l
0 0 0 B
% Group
n savemat currentmatrix pop [1 0 0 1 53.8504 7.74588] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Shell) s
0 0 m 229 ss (Times-Roman02000200) getfont (Prompt) s
savemat setmatrix
n 59.7185 12.77 m
59.7185 19.0676 l
0 0 0 B
n savemat currentmatrix pop [1 0 0 1 66.563 11.794] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m

0 0 m 0 ss (Times-Roman02000200) getfont () s
0.00 SG  (Command) s
savemat setmatrix
n 71.275 12.77 m
71.275 19.0676 l
0 0 0 B
n 67.4445 19.0676 m
75.3003 19.0676 l
0 0 0 B
% Group
n 133.831 12.5534 m
120.877 20.1064 l
0 0 0 B
n 133.862 12.5752 m
147.496 20.1714 l
0 0 0 B
% Group
n 134.216 31.6929 m
147.17 24.2044 l
0 0 0 B
n 134.185 31.6713 m
120.551 24.14 l
0 0 0 B
userdict /#copies 1 put
showpage
grestore

%%Trailer
end % tempdict
restore

