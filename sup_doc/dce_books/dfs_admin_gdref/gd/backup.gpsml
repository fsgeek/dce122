...\"
...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: backup.gpsml,v $
...\" Revision 1.1.11.1  1996/05/14  19:52:06  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/14  19:51:01  wardr]
...\"
...\" Revision 1.1.8.7  1995/12/29  17:23:12  wfl
...\" 	{edit, R1.2.1}
...\" 	made copy edits
...\" 	[1995/12/29  17:22:25  wfl]
...\" 
...\" Revision 1.1.8.6  1995/10/13  14:44:32  wfl
...\" 	{edit,R1.2.1}
...\" 	Fixed Change Bar Problem
...\" 	[1995/10/13  14:43:52  wfl]
...\" 
...\" Revision 1.1.8.5  1995/10/04  15:54:20  wfl
...\" 	{def, 13140, R1.2.1}
...\" 	Fixed quotes in change markers
...\" 	[1995/10/04  15:54:00  wfl]
...\" 
...\" Revision 1.1.8.4  1995/09/16  16:06:21  wfl
...\" 	{enh,13106,R1.2.1}
...\" 	Update backup system
...\" 	{enh,13111,R1.2.1}
...\" 	Support for sparse files
...\" 	[1995/09/16  16:05:58  wfl]
...\" 
...\" Revision 1.1.8.3  1995/08/25  17:32:00  jeff
...\" 	Testing some more.
...\" 	[1995/08/25  17:31:38  jeff]
...\" 
...\" Revision 1.1.8.2  1995/08/25  15:59:24  jeff
...\" 	More testing (4, 5, 6, ...)
...\" 	[1995/08/25  15:59:07  jeff]
...\" 
...\" Revision 1.1.8.1  1995/08/25  15:57:01  wfl
...\" 	Testing (1,2,3...)
...\" 	[1995/08/25  15:56:33  wfl]
...\" 
...\" Revision 1.1.6.14  1995/07/24  18:42:35  weir
...\" 	Prentice-Hall corrections
...\" 	[1995/07/24  18:41:58  weir]
...\" 
...\" Revision 1.1.6.12  1994/10/14  19:35:29  jeff
...\" 	{defect, 12535, R1.1}
...\" 	Incorporate dcecp commands in DFS documentation.
...\" 	[1994/10/14  19:32:19  jeff]
...\" 
...\" Revision 1.1.6.11  1994/08/10  17:09:59  jeff
...\" 	Editorial and related corrections.
...\" 	[1994/08/10  17:09:31  jeff]
...\" 
...\" Revision 1.1.6.10  1994/07/08  17:23:05  jeff
...\" 	Correct editorial problems.
...\" 	[1994/07/08  17:22:02  jeff]
...\" 
...\" Revision 1.1.6.9  1994/05/19  20:53:53  jeff
...\" 	{defect, 10688, R1.1}
...\" 	Correct Tape Coordinator configuration steps.
...\" 
...\" 	{defect, 8118, R1.1}
...\" 	Correct use of double quotes.
...\" 	[1994/05/19  20:53:03  jeff]
...\" 
...\" Revision 1.1.6.8  1994/05/06  13:52:15  jeff
...\" 	{defect, 10552, R1.1}
...\" 	Fix index entry inconsistencies.
...\" 	[1994/05/06  13:49:02  jeff]
...\" 
...\" Revision 1.1.6.7  1994/04/28  22:22:18  jeff
...\" 	{defect, 10439, R1.1}
...\" 	Correct cross-references for reorganization of DFS documentation.
...\" 	[1994/04/28  22:17:24  jeff]
...\" 
...\" Revision 1.1.6.6  1993/10/14  12:31:33  kdu
...\" 	{def,9099,R1.0.3}
...\" 	Fix fms examples.
...\" 	[1993/10/14  12:30:27  kdu]
...\" 
...\" Revision 1.1.6.5  1993/10/13  20:51:48  tmw
...\" 	Added index entries for second version of master index.
...\" 	[1993/10/13  20:50:35  tmw]
...\" 
...\" Revision 1.1.6.4  1993/09/16  11:31:15  kdu
...\" 	{def,5778,R1.0.3}
...\" 	Short forms of machine names.
...\" 	[1993/09/16  11:30:45  kdu]
...\" 
...\" Revision 1.1.6.3  1993/08/11  00:34:28  jeff
...\" 	Changed versions for defect fixes from 1.0.2A to 1.0.3.
...\" 	[1993/08/11  00:19:22  jeff]
...\" 
...\" Revision 1.1.6.2  1993/07/30  18:06:21  kdu
...\" 	{def,8386,R1.0.3}
...\" 	Incorporate OSF editorial comments into DFS Admin Guide and related
...\" 	documentation.
...\" 	[1993/07/30  18:05:11  kdu]
...\" 
...\" Revision 1.1.4.8  1993/02/24  00:57:38  jeff
...\" 	Fix for defects 5795, 6832, and 6835.
...\" 	[1993/02/24  00:56:44  jeff]
...\" 
...\" Revision 1.1.4.7  1993/02/09  01:44:58  jeff
...\" 	Fix for defect 7156, correct dump/restore restrictions.
...\" 	[1993/02/09  01:42:08  jeff]
...\" 
...\" Revision 1.1.4.6  1993/02/04  01:45:54  jeff
...\" 	Fix for defect 7073.
...\" 	[1993/02/04  01:45:24  jeff]
...\" 
...\" Revision 1.1.4.5  1993/01/28  19:06:14  dbelch
...\" 	Embedding copyright notice
...\" 	[1993/01/28  18:30:18  dbelch]
...\" 
...\" Revision 1.1.4.4  1993/01/27  21:10:15  buckler
...\" 	Fixed cross-refs and figure calls for new book org
...\" 	[1993/01/27  21:07:15  buckler]
...\" 
...\" Revision 1.1.4.3  1993/01/10  21:03:23  jeff
...\" 	Small editorial changes; no explicit defect.
...\" 	[1993/01/10  21:02:52  jeff]
...\" 
...\" Revision 1.1.4.2  1992/08/26  12:10:55  weir
...\" 	Moved to dce1.0.2doc
...\" 	[1992/08/26  12:04:43  weir]
...\" 
...\" Revision 1.1.2.7  1992/07/05  20:55:27  jeff
...\" 	Reformatted table.
...\" 	[1992/07/05  20:54:52  jeff]
...\" 
...\" 	Reformatted table for consistency.
...\" 	[1992/07/05  20:46:30  jeff]
...\" 
...\" Revision 1.1.2.6  1992/07/02  17:11:01  jeff
...\" 	Corrected ACL permissions and small editorial stuff.
...\" 	[1992/07/02  17:02:51  jeff]
...\" 
...\" Revision 1.1.2.5  1992/06/07  02:08:48  jeff
...\" 	Clarified the description of the DCE pathname used to
...\" 	specify a machine name.
...\" 	[1992/06/07  01:44:40  jeff]
...\" 
...\" Revision 1.1.2.4  1992/05/12  16:20:15  jeff
...\" 	Verified and/or modified italics and other editorial
...\" 	aspects of the file.
...\" 	[1992/05/12  14:36:49  jeff]
...\" 
...\" Revision 1.1.2.3  1992/04/22  13:21:43  jeff
...\" 	Fixed some small formatting problems (to parallel fixes
...\" 	in second backup chapter).
...\" 	[1992/04/21  21:02:33  jeff]
...\" 
...\" Revision 1.1.2.2  1992/04/16  22:09:01  jeff
...\" 	No changes.
...\" 	[1992/04/16  22:07:17  jeff]
...\" 
...\" Revision 1.1  1992/01/29  16:14:56  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
..."Copyright (C) 1989, 1991, Transarc Corporation
..."The Gulf Tower
..."707 Grant Street
..."Pittsburgh, PA  15219
...\" CHANGED
...\" 12-10-91:  In Section 9.3.3.1.3, Step 2, changed Any to All.
...\" 12-10-91:  In Section 9.3.1.1, 9.3.4, and 9.4.1, changed "m or -" to
...\"            "m or M" (changed em dashes to Ms).
...\" 12-10-91:  In Section 9.2.2.3, removed 2 dashes from second line of
...\"            example output for fms command.
...\" END CHANGED
...\"DOCUMENTSTYLE [12pt]{book}
.H 1 "Configuring the Backup System"
.iX "-[" "Backup System" "about"
.P
The DFS Backup System can help you automate the process of making permanent
copies of filesets on tape.  You can create a full backup, which includes all
of the data from every file in a fileset, or you can back up data
incrementally, copying only those files that have changed since a previous
dump.  In the same fashion, you can restore filesets completely, or you can do
an incremental, date-specific restore, which recreates the filesets as they
were before a specific date.  Because both DCE LFS filesets and exported
non-LFS file systems have entries in the Fileset Location Database (FLDB),
the DFS Backup System can be used with both types of filesets.
.P
This chapter introduces the DFS Backup System.  It describes configuration
issues related to the performance of backup and restore operations.  Chapter
10 provides specific details about listing information from the Backup
Database, backing up and restoring data, and administering the Backup Database.
Refer to this chapter for information about configuring the Backup System and
preparing it for backing up and restoring data; refer to Chapter 10 for
information about backing up and restoring data.
.H 2 "Introduction to the Backup System"
.iX "incremental dumps" "about"
.iX "full dumps"
.iX "dump sets" "about"
.P
With the DFS Backup System, you control many aspects of the backup process,
including how often backups are performed, which filesets are backed up, and
whether full or incremental backups are made.  A dump or dump set
is the result of performing a backup operation; it includes data from all
of the filesets that were copied onto tape at the same time.  A full dump 
includes data from every file in a fileset; an incremental dump includes only 
those files in the fileset that changed since a previous dump was made.  The 
backup process is also referred to as \*Edumping a fileset family\*O or 
\*Ecreating a dump set\*O.
.P
Once a fileset has been dumped, the DFS Backup System can be used to restore
it.  When restoring a fileset, the DFS Backup System first restores a full dump
of the fileset.  It then restores the changes to the fileset from any
incremental dumps that were made since the full dump.  Two types of restores
are possible: a \*Efull restore\*O, which recreates the fileset as it was at
its last dump, including changes from the last full dump and any incremental
dumps that were made since the last full dump; and a \*Edate-specific
restore\*O, which recreates the fileset as it was at the time of its last dump
before an indicated date. The Backup System restores the last full dump and any
incremental dumps of the fileset that were done before the specified date, so
the fileset is current according to the last dump made before that date.
.iX "sparse file support" "about"
.P
Sparse files contained in the backup fileset remain mostly
sparse when dumped or restored.  Any 64 KB chunk of a file that contains
actual data expands to fill 64 KB on the disk.  However, if a 64 KB chunk
does not contain data it does not require physical space on the
disk. This 64 KB granularity is imposed to ensure high-performance data access.
.P
.iX "stackers" "support for"
.iX "jukeboxes" "support for"
The Backup System can be used in conjunction with a variety of
automated backup devices, including stackers and jukeboxes.  Through a
user-defined configuration file, you can specify parameters to
configure the Backup System's Tape Coordinator to control automated
backup equipment.  The Tape Coordinator can then call executable
routines, change tapes, select the proper tape, and handle errors.
.P
The Backup System can be used to dump and restore data between different types
of file systems.  For example, data dumped from a DCE LFS fileset can be
restored to a DCE LFS fileset or to any type of non-LFS fileset.  Likewise,
data dumped from a non-LFS fileset can be restored to a DCE LFS fileset or to
a different type of non-LFS fileset.  Note that incompatible information may 
be lost when a fileset is dumped and restored between file system types; for 
example, ACLs on objects in a DCE LFS fileset may be lost if the fileset is 
restored to a file system that does not support ACLs. (Refer to your vendor's
documentation to verify the level of support for dump and restore operations
between different types of file systems.)
.nL
.ne 20
.P
.iX "Backup Database" "about"
.iX "Backup Server" "about"
The Backup Database records the schedule for backups, the locations of the
Backup System's Tape Coordinators, the groups of filesets (fileset families)
that can be dumped, and other administrative information.  One Backup Database
exists per cell; it is used to back up data from all administrative domains in
the cell.  A master copy of the Backup Database is maintained on one machine
and replicated on other machines in the cell.  Ubik creates and synchronizes
the master and secondary copies of the database. (See Chapter 2 for more
information about Ubik.) In addition, the DFS Backup System provides facilities
to back up the database by copying it to tape so that it can be restored if
necessary.  You can also remove specific configuration and dump information
from the database if needed.
.P
.iX "\*Ladmin.bak\*O file"
The Backup Database is maintained by the Backup Server, or \*Lbakserver\*O
process.  The Backup Server must run on each machine that stores a copy of the
Backup Database.  Only the administrative users and members of the groups
included in the \*Ladmin.bak\*O administrative list can issue \*Lbak\*O
commands, which are used to configure and administer the Backup System and to
back up and restore data.  Like the Backup Database, the \*Ladmin.bak\*O file is
installed on one machine (usually the System Control machine) and copied to all
machines that house copies of the Backup Database.
.P
Some operating systems have their own backup commands. If your operating system
has commands named \*Lbak\*O, make certain that you use the complete pathname
(\*Vdceshared\*L/bin/bak\*O) when issuing DFS \*Lbak\*O commands.  Note that
\*Lbak\*O commands can presently be used to affect the Backup Database in the
local cell only.
.iX "-]" "Backup System" "about"
.H 3 "Tape Coordinator Machines"
.iX "-[" "Tape Coordinator machines" "about"
.iX "\*Lbutc\*O program"
.P
A Tape Coordinator machine is a machine on which backup and restore operations
are physically conducted.  To qualify as a Tape Coordinator machine, a machine
.ML
.LI
Should be in a physically secure location.
.LI
Must have one or more tape drives attached.
.LI
Must be configured as at least a DCE client machine. Fewer configuration steps
are required if the machine is also configured as some type of DFS server
machine.
.LI
Must be properly configured as a Tape Coordinator machine. For example, it
must house the required configuration file, and it must have the necessary
entries in the Backup Database.
.LI
If you are using automated backup equipment (such as a stacker or
jukebox), the Tape Coordinator machine must house the user-defined
configuration file (which has the necessary parameters to control the
specialized backup equipment).
.LI
Must run one instance of the \*Lbutc\*O (BackUp Tape Coordinator or just Tape
Coordinator) process for each tape drive.
.LE
.P
The \*Lbutc\*O program must be active when you issue a \*Lbak\*O command that
involves either a tape drive or an operation being performed by a tape drive.
For optimum efficiency, run several tape drives (and their Tape Coordinators).
Start one \*Lbutc\*O process on a Tape Coordinator machine for each tape drive
attached to the machine.  Each Tape Coordinator controls the behavior of its
associated drive and accepts service requests from the \*Lbak\*O program.
.P
.iX "Tape Coordinator IDs (TCIDs)" "about" 
A Tape Coordinator ID (TCID) identifies a Tape Coordinator; each TCID must be
unique in the Backup System of the local cell.  When you issue \*Lbak\*O
commands, specify a Tape Coordinator by specifying its TCID with the
\*L\-tcid\*O option.  Depending on the command, the \*Lbak\*O or \*Lbutc\*O
program contacts one or more of the following: the Backup Database (by way of
the Backup Server), the FLDB, or Fileset Server processes.
.H 3 "Fileset Families and Fileset Family Entries"
.iX "fileset families" "about"
.iX "wildcards" "use in Backup System"
.P
When creating backups, you copy groups of filesets, known as \*Vfileset families\*O,
to tape.  A fileset family includes all of the filesets that you want to dump
together onto the same tape (or tapes, if the fileset family contains a large
number of filesets).  All of the filesets in a fileset family are dumped to
tape with the same frequency (for example, once a day or once a week).
.P
Fileset family entries (also referred to as \*Vfileset entries\*O) define the
filesets included in a fileset family.  Each entry has three fields: the File
Server machine name, the aggregate name, and the fileset name.  Because filesets
can be moved from File Server to File Server, the first two fields are usually
designated with a \*L.*\*O wildcard, so a person backing up the filesets does
not need to know the File Server machine and aggregate on which they reside.
The last field, fileset name, is often specified with a regular expression
pattern that matches certain fileset names.
Within the Backup System, regular expression characters and the \*L.*\*O wildcard
can be used in many arguments. (See Section 9.3.3 for a description of these
characters and their interpretations.)
.P
With the Backup System, regular expression characters and the \*L.*\*O wildcard
can be used in many arguments. (See Section 9.3.2 for a description of these
characters and their interpretations.)
.iX "-]" "Tape Coordinator machines" "about"
.H 3 "Dump Hierarchies and Dump Levels"
.iX "dump hierarchies" "about"
.iX "incremental dumps" "parent dump level"
.iX "dump levels" "about"
.iX "dump sets" "about"
.P
A dump hierarchy is a logical structure that helps define the
relationship between full and incremental dumps.  As mentioned previously, an
incremental dump includes only the files that changed since the fileset was 
last dumped; when creating an incremental dump, the Backup System uses a 
previous dump, known as the dump's \*Vparent\*O, to serve as a reference point 
on which to base the incremental dump.
.P
A dump set is the product of dumping a fileset family at a certain dump
level, which is an entry in the dump hierarchy.  The dump set is a collection of
data from filesets dumped at the same time and in the same manner (fully or
incrementally).  To create a dump set, you specify (with the \*Lbak dump\*O
command) both the fileset family and the dump level.  The Backup System keeps
all of the data in a dump set together on a tape (or set of tapes, if the 
dump set is too large to fit on a single tape).  The name of the dump set 
consists of the name of the fileset family and the last component of the name 
of the dump level joined by a dot
(\*Vfileset_family_name\*L.\*Vdump_level\*O).
.P
Each dump level can be associated with an expiration date that specifies when
a tape containing data from that dump level can be overwritten.  The expiration
date is transferred to any backup tape that contains a dump made at that level.
When dumping to tape, the system checks the tape for an expiration date.  If
the tape's expiration date has not expired (if it is in the future), the system
does not overwrite the tape; if no expiration date is defined for the tape or
if the tape's expiration date has expired (if it is in the past), the system
overwrites the tape, but only with a dump set of the same name.
.H 3 "Command and Monitoring Windows"
.iX "command windows" "in Backup System"
.iX "monitoring windows" "in Backup System"
.iX "Tape Coordinators" "monitoring"
.P
A single terminal session can be used to issue \*Lbak\*O commands to the Tape
Coordinators on all Tape Coordinator machines.  The session corresponds to a
command shell called the \*Vcommand window\*O, which can be opened and closed
without affecting the Tape Coordinators.  This session can be run from any
machine in the cell.  Multiple command windows can be used, but they are not
necessary.
.nL
.ne 20
.P
A separate terminal session must be used for each Tape Coordinator and
associated tape drive running on a machine; a terminal session of this type is
referred to as a Tape Coordinator's \*Vmonitoring window\*O.  The window must be a
connection to the Tape Coordinator machine whose Tape Coordinator and tape
drive it is monitoring.  The Tape Coordinator runs in the foreground, so no
further commands can be issued in the monitoring window.  The monitoring window
must remain open while the Tape Coordinator runs so that you can see the Tape
Coordinator's prompts.
.nS "Note"
When using automated backup equipment, such as a stacker or jukebox,
you can set parameters in the user-defined configuration file to use
default responses for all questions.  This allows the automated backup
equipment to run unattended. See Section 9.3.2 for more information.
.nE
.H 3 "Privileges Required to Use the Backup System"
.iX "administrative lists" "in Backup System"
.iX "\*Ladmin.bak\*O file"
.iX "\*Ladmin.fl\*O file"
.iX "\*Ladmin.ft\*O file"
.P
Three administrative lists, or \*Ladmin\*O files, determine the users who can
perform specific backup and restore operations.  Depending on the operation to
be performed, you must be included in one or more of the following files:
.ML
.LI
The \*Ladmin.bak\*O file on each server machine on which the Backup Database
is stored.  You must be listed in this file for any operation initiated by a
\*Lbak\*O command.
.LI
The \*Ladmin.fl\*O file on each server machine on which the FLDB is stored.
You must be included in this file for any operation that involves the Fileset
Location Server (FL Server), such as backing up or restoring filesets.
.LI
The \*Ladmin.ft\*O file on any File Server machine from which you dump filesets
or to which you restore filesets.  You must be listed in this file for any
command that involves the Fileset Server, such as backing up or restoring
filesets.
.LE
.P
To avoid confusion, include any user who works with the Backup System on all
three administrative lists on the appropriate machines.  The operations in this
chapter direct users to verify that they, meaning they or a group to which
they belong, are included in the appropriate administrative lists
(\*Ladmin.bak\*O, \*Ladmin.fl\*O, and \*Ladmin.ft\*O).  Use the \*Lbos
lsadmin\*O command to display the members of an administrative list.
.P
.nS "note"
If you have not included users who are to issue \*Lbak\*O
commands on all three of these administrative lists, some commands may not
work as detailed in this and the following chapter.
.nE
.H 2 "Standard Information in this Chapter"
.P
The following subsections present standard options and arguments common to many
of the commands described in this chapter.  They also present some common
operations repeated throughout this chapter.
.H 3 "Standard Options and Arguments"
.iX "fileset families" "name format"
.iX "dump levels" "name format"
.P
The following options and arguments are used with many of the commands
described in this chapter.  If an option or argument is not described with a
command in the text, a description of it appears here. (See Part 2 of this
guide and reference for complete details about each command.)
.ML
.LI
The \*L\-tapehost\*O \*Vmachine\*O option is the machine for which a Tape
Coordinator is to be added.  You can specify the machine's DCE pathname (for
example, \*L/.../abc.com/hosts/bak1\*O), its host name (for example,
\*Lbak1.abc.com\*O), or its IP address (for example, \*L11.22.33.44\*O).
.LI
The \*L\-family\*O \*Vfileset_family_name\*O option is the name of the 
fileset family to be used in the command.  The name must be unique within the 
Backup Database of the local cell.  It can be no longer than 31 characters.  It 
can include any characters, but to avoid confusion when dump set names are 
created, it should not include a \*L.\*O (dot).  Any regular expression 
characters entered on the shell command line must be escaped with a \*L\e\*O 
(backslash); for example, \*Lusr\e*\*O for a fileset family named \*Lusr*\*O. 
To make it easier to track the contents of a fileset family, its name should 
give some indication of the contents of the fileset entries it contains;
for example, use the name \*Luser\*O for the fileset family that includes 
all user filesets in the file system.
.LI
The \*L\-level\*O \*Vdump_level\*O option is the name of the dump level to be 
used in the command.  The complete pathname of a dump level must always 
be specified.  There are two types of dump levels:
.nL
.ne 20
.ML
.LI
Full dumps, which consist of a name preceded by a single \*L/\*O (slash) (for
example, \*L/full\*O).
.LI
Incremental dumps, which consist of multiple elements that resemble a UNIX 
pathname listing the dump levels that serve as the parents of the dump level, 
starting with a full dump level and proceeding in order down the hierarchy; for
example, \*L/full/weekly/monday\*O.  An incremental dump level can consist of
any number of elements; when defining a new dump level, all of the elements
except the last one must already exist.  Each level in a dump level name must
be preceded by a \*L/\*O (slash).
.LE
.P
Dump levels should have meaningful names that give some indication of their
purpose.  A single element in a dump level name can be no longer than 28
characters, and the complete name can be no longer than 256 characters.  Dump
level names can include any characters, but to avoid confusion when dump set
names are created, they should not include a \*L.\*O (dot).  Regular
expression characters included in a dump level name must be escaped with a
\*L\e\*O (backslash) or \*L"\|"\*O (double quotes).  The complete pathname of
each dump level must be unique within the Backup Database of the local cell.
.iX "dump levels" "expiration dates"
.LI
The \*L\-expires\*O \*Vdate\*O option is the expiration date for a dump level. 
Expiration dates can be specified in one of two ways:
.ML
.LI
Relative expiration dates, which use the keyword \*Lin\*O to indicate a number
of years, months, or days to be added to the current date to calculate the
expiration date.  When the system dumps a fileset at this level, it calculates
the time at which the dump set expires by adding the values to the start time
of the dump operation.  Relative expiration dates are expressed as follows:
.iS
\*Lin\*O [\*Vinteger\*Ly\*O] [\*Vinteger\*Lm\*O] [\*Vinteger\*Ld\*O]
.iE
.P
At least one value must be provided; multiple values must be listed in the
order shown, with the appropriate unit abbreviation (\*Ly\*O, \*Lm\*O, or
\*Ld\*O) used with each value.  For example, \*Lin 1y 6m 2d\*O causes the
system to add 1 year, 6 months, and 2 days to the current date to calculate
the expiration date.
.nL
.ne 20
.LI
Absolute expiration dates, which use the keyword \*Lat\*O to represent a
specific date and, optionally, time to use as the expiration date.  Absolute
expiration dates are expressed as follows:
.iS
\*Lat \*Vmm\*L/\*Vdd\*L/\*Vyy\*O [\*Vhh\*L:\*Vmm\*O]
.iE
.P
If you specify a time, you must use 24-hour time. For example, \*Lat 11/22/92
11:36\*O specifies an expiration date and time of 22 November 1992 at 11:36
a.m.  If no time is provided, a default time of 00:00 (12:00 a.m.) on the
indicated date is used.
.LE
.P
If you omit the \*L\-expires\*O option from a command, tapes created at dump
levels specified with the command have no expiration dates; they can be
overwritten at any time.  Also, although the \*L\-expires\*O options are 
followed by ellipses, you can specify only one expiration date.  The 
ellipses are included only to accommodate the DFS command parser.
.LI
The \*L\-tcid\*O \*Vtc_number\*O option is the TCID of the Tape Coordinator to 
be used for the command.  Legal values are integers from 0 (zero) to 1023.  If 
this option is omitted, the Tape Coordinator with a TCID of 0 is used to 
execute the command by default.
.LE
.H 3 "Standard Commands and Operations"
.P
The following subsections describe commands and operations that are used 
frequently in this chapter.  If a command or operation is described in detail 
here, it generally is not described in depth in later sections of this 
chapter where it is used.
.H 4 "Starting a Tape Coordinator"
.P
Before performing a backup or restore operation, you must install at least
one tape drive on a Tape Coordinator machine and define its corresponding Tape
Coordinator in both the \*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file and
the Backup Database. (See Section 9.3.1 for a description of these and other
configuration operations that must be performed.) This section explains how to
start a Tape Coordinator.  You must have a Tape Coordinator running any time you
access a tape drive for use with the Backup System.
.AL
.LI
Make certain that you have the \*Lw\*O (write) and \*Lx\*O (execute) 
permissions on the \*Vdcelocal\*L/var/dfs/backup\*O directory, which is the 
directory in which the Tape Coordinator creates its \*LTL\*O (log) and 
\*LTE\*O (error) files.
.LI
Start a new terminal session on the Tape Coordinator machine to use as the
monitoring window for the Tape Coordinator.  It must remain open while the Tape
Coordinator runs.
.LI
In the newly opened window, issue the \*Lbutc\*O command to start the Tape
Coordinator.  The binary file for the \*Lbutc\*O program resides in the
\*Vdceshared\*L/bin\*O directory.
.iS
\*C$ \*Lbutc\*O [\*L\-tcid \*Vtc_number\*O] [\*L\-debuglevel \*Vtrace_level\*O]
.iE
.P
The \*L\-debuglevel\*O \*Vtrace_level\*O option specifies the type of 
messages to be displayed.  There are two valid arguments:
.VL .75i
.LI "1"
Indicates that the Tape Coordinator is to report on its activities as 
it restores filesets, in addition to prompting for new tapes as necessary.
.LI "0"
Indicates that the Tape Coordinator is only to prompt for new tapes; it also
displays some output as necessary for operations that it executes.  This is the
default.
.LE
.LE
.P
.nS "Note"
If you are using an automated backup device, such as a stacker or
jukebox, you can create a user-defined configuration file to control
that device. This file is read by the \*Lbutc\*O command and is used
to configure a Tape Coordinator. (See Section 9.3.2.for more information.)
.nE
.P
.H 4 "Stopping a Tape Coordinator"
.P
When you are finished using a Tape Coordinator, you should stop it from
running.  To stop a Tape Coordinator process, enter an interrupt signal
(\*L<Ctrl-c>\*O or its equivalent) in the Tape Coordinator's monitoring window.
.nL
.ne 20
.H 4 "Determining Tape Size and End-of-File Mark Size"
.iX "-[" "tapes" "determining size"
.iX "-[" "EOF marks" "determining size"
.P
The size of a tape determines the amount of data the Backup System can place
on it.  The tape size differs for different tape drives.  In addition, the
Backup System appends an end-of-file (EOF) mark after each fileset it dumps
to tape.  The size of the mark also affects the amount of space available for
backup data on a tape.  The values used for both of these figures are specified 
in the \*LTapeConfig\*O file once for each tape drive.  Note that an EOF mark 
is appended after each fileset, not after each file.
.P
If you do not know the tape capacity or EOF mark size for a tape drive, use
the \*Lfms\*O (file mark size) command to determine these values.  The binary
file for this command resides in the \*Vdceshared\*L/bin\*O directory.  This 
command produces terminal output and an \*LFMSLog\*O file in the current 
directory; both the output and the \*LFMSLog\*O file list the tape capacity 
and the size of the EOF mark for the drive.
.nS "note"
Because this command inserts file marks onto the entire tape, it can take from
several hours to more than a day to complete.
.nE
.P
To determine the EOF mark size for a tape drive, do the following:
.AL
.LI
Make certain you have the \*Lw\*O (write), \*Lx\*O (execute), and \*Li\*O
(insert) ACL permissions on the directory from which the command is issued. 
If the \*LFMSLog\*O file already exists in the directory, you need to have 
only the \*Lw\*O permission on the file.
.LI
Insert a tape into the tape drive.  The tape is overwritten while the command
executes; you may want to use a blank tape or one that can be recycled.
.LI
Enter the \*Lfms\*O command:
.iS
\*C$ \*Lfms -device \*Vdevice_name\*O
.iE
.P
The \*L\-device\*O \*Vdevice_name\*O option specifies the name of the tape 
drive.
.P
An example of this command and its terminal output follows; the
command also writes similar information to the \*LFMSLog\*O file.
In the example, the tape size for the drive named
\*L/dev/rmth1h\*O is 2,136,604,672 bytes; the EOF mark size for the
drive is 1,910,220 bytes.
.nL
.ne 20
.iS
\*C$ \*Lfms /dev/rmth1h\*O
.iE
.P
.oS
wrote block: 130408
Finished data capacity test - rewinding
wrote 1109 blocks, 1109 file marks
Finished file mark test
Tape capacity is 2136604672 bytes
File marks are 1910220 bytes
.oE
.P
.LE
.iX "-]" "tapes" "determining size"
.iX "-]" "EOF marks" "determining size"
.H 4 "Using the Interactive Interface"
.P
You can use the \*Lbak\*O commands in regular command mode or in interactive
mode.  If you use interactive mode, not the following:
.ML
.LI
You do not need to enter the string \*Lbak\*O with each \*Lbak\*O command; 
the \*Cbak>\*O prompt replaces the command shell prompt.
.LI
You do not have to escape regular expression characters; in regular command
mode, you must place all regular expressions and wildcards in "\|" (double 
quotes) or escape each with a \*L\e\*O (backslash).
.LI
You can track executing and pending operations with the \*Lbak jobs\*O
command; in regular command mode, you cannot track operations.
.LI
You can cancel currently executing and pending operations with the \*Lbak
kill\*O command; in regular command mode, you cannot use the \*Lbak kill\*O
command.
.LI
You do not have to establish a new connection each time you issue a command,
so execution time is quicker; in regular command mode, each command establishes
new connections to the \*Lbakserver\*O and \*Lflserver\*O processes, as
necessary.
.LE
.P
Most of the operations described in this chapter are presented in regular
command mode.  Where appropriate, some operations include steps introduced as
\*EOptional\*O to indicate where working in interactive mode could be useful.
The \*Lbak jobs\*O and \*Lbak kill\*O commands can be entered \*Eonly\*O in
interactive mode.
.nL
.ne 20
.H 5 "Entering Interactive Mode"
.P
Enter the \*Lbak\*O command:
.iS
\*C$ \*Lbak\*O
.iE
.H 5 "Leaving Interactive Mode"
.P
Enter the \*Lquit\*O command at the \*Cbak>\*O prompt:
.iS
\*Cbak> \*Lquit\*O
.iE
.H 2 "Configuring the Backup System"
.iX "-[" "Backup System" "configuring"
.P
Before using the Backup System for backing up and restoring data, you must
ensure that certain conditions have been met.  The following subsections 
explain in detail how to perform the following prerequisite tasks:
.ML
.LI
Configuring Tape Coordinator machines
.LI
Defining fileset families and fileset family entries
.LI
Defining a dump hierarchy of dump levels
.LI
Labeling tapes, if necessary
.LE
.P
See Chapter 10 for information on inspecting the status of these prerequisites.
If all of the prerequisites are met, turn to the appropriate section in Chapter
10 for information on using the Backup System.
.nL
.ne 20
.H 3 "Configuring a Tape Coordinator Machine"
.iX "-[" "Tape Coordinator machines" "configuring"
.P
Setting up a Tape Coordinator machine consists of using \*Lbak\*O commands to
configure the Tape Coordinators for the machine.  You must also create the
\*LTapeConfig\*O file, which includes a line for each Tape Coordinator on the
machine.  Each line defines the
.ML
.LI
Size of tapes used in the drive, in kilobyte, megabyte, or gigabyte units.
.LI
End-of-file (EOF) mark size for the drive.  EOF marks are placed between
filesets on a tape.  The size of the EOF mark can differ for each type of tape
drive.
.LI
Device name (for example, \*L/dev/rst0\*O) of the drive.
.LI
Tape Coordinator ID (TCID) of the drive.
.LE
.P
Each tape drive and its Tape Coordinator must be assigned a TCID in the range
from 0 to 1023; the TCID must be unique in the Backup Database of the local
cell.  When assigning the TCID, you must define the ID number in the Backup
Database with the \*Lbak addhost\*O command; you must also include the TCID
in the entry for the tape drive in the \*LTapeConfig\*O file on the local disk
of the Tape Coordinator machine.
.P
Perform the following tasks once, when you initially configure a Tape
Coordinator machine:
.AL
.LI
Prepare the tape drives.
.LI
Create the \*LTapeConfig\*O file that defines the tape parameters for each
drive.
.LI
Create an entry in the Backup Database for the Tape Coordinator for each drive.
.LE
.P
The following subsections describe the steps necessary to configure a machine
as a Tape Coordinator machine.  The instructions in Section 9.3.1.1 are required
only if the machine to be configured as a Tape Coordinator machine is not a DFS
server machine of some type (the machine must at least be a DCE client).  The
instructions in Section 9.3.1.2 are required for any machine to be configured
as a Tape Coordinator machine.
.nL
.ne 20
.H 4 "Steps Required for a Client-Only Machine"
.P
You must perform the following steps to configure a DCE client that is not a
DFS server machine of some type (for example, a File Server machine or a Backup
Database machine) as a Tape Coordinator machine.  For a client-only machine,
perform these steps before you perform the steps in Section 9.3.1.2; perform
the steps on the machine that is to be configured as a Tape Coordinator
machine.  Do not perform these steps for a machine that is configured as some
type of DFS server machine.
.AL
.LI
Verify that the \*Vdcelocal\*L/var/dfs\*O and \*Vdcelocal\*L/var/dfs/backup\*O
directories exist on the machine.  Create the directories if they do not already
exist.
.LI
Verify that you have the permissions necessary to create and modify principals
and accounts in the Registry Database (for example, you need the \*Li\*O
(insert) permission to create a principal in the \*Lhosts/\*Vhostname\*O
directory, where \*Vhostname\*O is the name of the machine to be configured
as a Tape Coordinator machine).  If necessary, use the \*Ldcecp acl show\*O
command to determine your permissions for a directory.
.LI
Use the \*Ldcecp principal create\*O command to create a DFS server principal
for the client machine that is to be configured as a Tape Coordinator machine:
.iS
\*C$ \*Ldcecp\*O
\*Cdcecp> \*Lprincipal create hosts/\*Vhostname\*L/dfs-server\*O
.iE
.P
In the command, \*Vhostname\*O is the name of the machine to be configured
as a Tape Coordinator machine (for example, \*Lclient1\*O).  The DFS server
principal created in this step is used in all subsequent steps that require
the DFS server principal of the machine. (Machines configured as some type of
DFS server machine receive DFS server principals when they are configured.)
.nL
.ne 20
.LI
Use the \*Ldcecp account create\*O command to create an account for the DFS
server principal of the machine:
.iS
\*Cdcecp> \*Laccount create hosts/\*Vhostname\*L/dfs-server \\
\*C> \*L-group subsys/dce/dfs-admin -org none \\
\*C> \*L-password \*Vacct_password\*L -mypwd \*Vyour_password\*O
.iE
.P
In the command, \*Lhosts/\*Vhostname\*L/dfs-server\*O is the DFS server
principal for which an account is to be created.  The remaining options provide
the following information:
.ML
.LI
The \*L-group subsys/dce/dfs-admin\*O option specifies that the primary group
of the account is to be the group named \*Lsubsys/dce/dfs-admin\*O. (The DFS
server principals of all machines configured as some type of DFS server machine
are added to this group when the machines are configured.)
.LI
The \*L-org none\*O option specifies that the organization of the account is
to be the organization named \*Lnone\*O.
.LI
The \*L-password \*Vacct_password\*O option provides the password for the
account of the DFS server principal.  Choose a string that you can remember.
You use the \*Ldcecp keytab add\*O command to generate a random password for
the account later in these instructions, so you do not need to enter a complex
password at this time.
.LI
The \*L-mypwd \*Vyour_password\*O option is your password (the password for
the DCE account to which you are currently authenticated).
.LE
.nL
.ne 20
.LI
Use the \*Ldcecp keytab add\*O command to add a server encryption key for the
DFS server principal to the default local keytab file, \*L/krb5/v5srvtab\*O.
The \*Ldced\*O process recognizes the keytab file by the name \*Lself\*O.  The
command creates the keytab file if the file does not already exist.  Use the
\%\*L-member\*O option to specify the name of the DFS server principal, and
use the \%\*L-key\*O option to specify the password that you entered for the
principal's account in the previous step.
.iS
\*Cdcecp> \*Lkeytab add self -member hosts/\*Vhostname\*L/dfs-server \\
\*C> \*L-key \*Vacct_password\*O
.iE
.LI
Use the \*Ldcecp keytab add\*O command to create a new server encryption key
for the DFS server principal.  Use the \%\*L-member\*O option to specify the name
of the DFS server principal.  The \%\*L-random\*O option directs the command to
generate a random string for use as the principal's server encryption key,
and the \%\*L-registry\*O option directs the command to update the password
of the principal's account in the registry database to match the randomly
generated encryption key.
.iS
\*Cdcecp> \*Lkeytab add self -member hosts/\*Vhostname\*L/dfs-server \\
\*C> \*L-random -registry\*O
.iE
.LI
Use the \*Ldcecp acl modify\*O command with the \%\*L-add\*O option to add an
entry for the group \*Lsubsys/dce/dfs-admin\*O to the ACL of the entry for the
DFS server principal in the security namespace.  The \*L\-add\*O option provides
the ACL entry to be added to the ACL of the principal's entry.  The permissions
included in the ACL entry allow members of the specified group to perform all
required operations on the principal's entry.
.iS
\*Cdcecp> \*Lacl modify /.../\*Vcellname\*L/sec/principal/hosts/\*Vhostname\*L/dfs-server \\
\*C> \*L-add {group subsys/dce/dfs-admin rcDnfmag}\*O
\*Cdcecp> \*Lexit\*O
.iE
.LE
.P
Once you have completed these steps, perform all of the steps in Section
9.3.1.2.
.H 4 "Steps Required for All Machines"
.P
You must perform the following steps to configure any machine as a Tape
Coordinator machine.  If the machine to be configured is a DCE client but
not a DFS server machine of some type, you must perform all of the steps in
Section 9.3.1.1 before performing the steps in this section.  If the machine
is configured as some type of DFS server machine, you do not need to perform
the steps in Section 9.3.1.1.
.AL
.LI
Install one or more drives on the machine according to the manufacturer's
instructions.  The Backup System can track a maximum of 1024 drives in a cell.
.nL
.ne 20
.LI
Verify that you have the \*Lw\*O (write) and \*Lx\*O (execute) permissions on 
the \*Vdcelocal\*L/var/dfs/backup\*O directory (the directory in which you must
create the \*LTapeConfig\*O file).
.LI
Create the \*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file on the machine
with a text editor.  Use a single line in the file for each tape drive attached
to the Tape Coordinator machine, recording the following information:
.ML
.LI
.iX "tapes" "recommended size"
The tape size of the tapes to be used in the drive.  The Tape Coordinator uses
this capacity as the size of all tapes used in the drive.  It is recommended
that you use a number 10 to 15% lower than the actual tape capacity to allow
for tape variations.  The following abbreviations can be used for the tape size
unit of measurement (the default is kilobytes); do not leave a space between
the number and the letter.
.ML
.LI
Kilobytes: k or K (for example, 2k or 2K)
.LI
Megabytes: m or M (for example, 2m or 2M)
.LI
Gigabytes: g or G (for example, 2g or 2G)
.LE
.nL
.ne 20
.LI
.iX "EOF marks" "range of sizes"
The EOF mark size for the type of tape to be used in the
drive.  The Backup System appends an EOF mark after each fileset dumped to
tape.  The size of this mark can affect the amount of space available for
backup data.  The EOF mark size can vary from 2 kilobytes to more than 2
megabytes, depending on the type of tape drive used.  It is recommended that
you increase the actual file mark size by 10 to 15% to allow for tape
variations.
.P
If you do not specify a unit of measurement, the default unit used for the
EOF size is bytes (\*Enot\*O kilobytes, as for tape capacity).  To indicate
other units, use the same abbreviations as for tape capacity.
.LI
The device name of the tape drive.  The format of this name varies with each
operating system.  For example, in the UNIX operating system, a valid device
name is \*L/dev/rst0\*O.
.LI
.iX "Tape Coordinator IDs (TCIDs)" "about"
The TCID for the Tape Coordinator associated with the drive.  The Backup
System can track a maximum of 1024 tape drives; legal values are integers from
0 to 1023.  You do not have to assign the numbers in sequence, and you
can skip numbers.  The TCID for any Tape Coordinator must be unique among all
TCIDs in the local cell.
.P
Because the \*Lbak\*O commands that require you to specify a TCID always use a
default TCID of 0, assign a TCID of 0 to the Tape Coordinator for
the drive that you will use most often; this enables you to omit the 
\*L\-tcid\*O option as often as possible.
.LE
.P
If you do not know the tape size or the EOF mark size for the tape drive,
determine them by using the \*Lfms\*O command, as described in Section
9.2.2.3.
.P
Following is an example listing of the contents of the \*LTapeConfig\*O file
for a machine with two drives.  The tape size for each drive is 2 gigabytes;
the EOF mark size for each drive is 1 megabyte.  The respective TCIDs of the
two drives are 0 and 1.
.oS
\*C2g 1m /dev/rmth0h 0\*O
\*C2G 1M /dev/rmth1h 1\*O
.oE
.nL
.ne 20
.LI
Ensure that the \*Lbak\*O and \*Lbutc\*O binary files are stored on the local
machine.  The \*Lbak\*O file should be stored in the \*Vdcelocal\*L/bin\*O
directory; the \*Lbutc\*O file should be stored in the \*Vdceshared\*L/bin\*O
directory (a symbolic link to the file may exist from the \*Vdcelocal\*L/bin\*O
directory).
.LI
Verify that the individuals who are to use the Backup System are included in
the appropriate administrative lists (see Section 9.1.5); if necessary, issue
the \*Lbos lsadmin\*O command to check.  You also need to ensure that you are
included in the \*Ladmin.bak\*O list to issue the \*Lbak addhost\*O command
that follows.  To add someone to a list, issue the \*Lbos addadmin\*O command.
.LI
Verify that the \*Lbakserver\*O process is running on the cell's Backup
Database machines.  If necessary, issue the \*Lbos status\*O command to check.
.LI
\*EOptional\*O.  At this point, you can issue the \*Lbak\*O command at the
system prompt to enter interactive mode.  The advantages of interactive mode
are described in Section 9.2.2.4.  The command in the following step assumes
that regular command mode is used, not interactive mode.
.LI
Enter the \*Lbak addhost\*O command to create an entry in the Backup Database
for each Tape Coordinator, defining its TCID:
.iS
\*C$ \*Lbak addhost -tapehost \*Vmachine\*O [\*L\-tcid \*Vtc_number\*O]
.iE
.P
Repeat the \*Lbak addhost\*O command for each Tape Coordinator to be added.
.LE
.iX "-]" "Tape Coordinator machines" "configuring"
.H 3 "Creating a User-Defined Configuration File"
.iX "stackers" "about"
.iX "jukeboxes" "about"
.iX "-[" "Backup System" "user-defined configuration file"
.iX "-[" "user-defined configuration file" "use with Backup System"
.P
You can create a user-defined configuration file to support automated
backup equipment, such as stackers and jukeboxes.  These devices
automatically switch tapes during a dump. Jukeboxes can also
automatically fetch the proper tapes for a restore operation. To
handle the varying requirements of automated backup equipment, the
user-defined configuration file calls executable routines that you
create to operate your backup equipment. Through the user-defined
configuration file, you can select the level of automation you want
the Tape Coordinator to use.
.P
Each backup device on a Tape Coordinator machine can have its own
user-defined configuration file. The file must reside in the
\*Vdcelocal\*L/var/dfs/backup\*O directory and it must have a
name in of the form \*Lconf_\*O\*Vtape_device\*O, where
\*Vtape_device\*O specifies
the relevant device. A separate file is required
for each backup device.
.P
.iX "\*Lbutc\*O program" "interaction with user-defined configuration program"
When starting a Tape Coordinator, the \*Lbutc\*O program reads the
\*Lconf_\*O\*\Vtape_device\*O file and configures the Tape Coordinator
based on the parameter settings it finds in the file. The
configuration file parameters are the following:
.VL 1.25in
.LI "\*LMOUNT\*O"
Names a file that contains an executable routine.  The routine can
mount an automated backup device, such as a stacker or jukebox.
.LI "\*LUNMOUNT\*O"
Names a file that contains an executable routine to perform tape
unmount operations for an automated backup device.
.LI "\*LASK\*O"
Can be used to force all Backup System prompts to accept the
default answers rather than query the operator.  This does not affect
the initial prompt to mount the first tape. This parameter is useful
for fully automating the backup process.
.LI "\*LAUTOQUERY\*O"
Can be used to disable the initial Tape Coordinator prompt to mount the
first tape. This parameter is also useful for fully automating the
backup process.
.LI "\*LNAME_CHECK\*O"
Can be set to prevent the Backup System from checking tape names.
.LI "\*LFILE\*O"
Can be used to direct the dump to tape or to a specified file.
.LE
.P
The following sections define each of the parameters in
detail. Section 9.3.2.7 contains annotated sample scripts that
illustrate typical routines to control automated backup equipment.
.H 4 "The MOUNT Parameter"
.iX "user-defined configuration program" "\*LMOUNT\*O parameter"
By default, the Backup System prompts the operator to mount a tape
before opening the tape device file.  However, the \*LMOUNT\*O
parameter provides a mechanism to load a tape through an automated
backup device.  The \*LMOUNT\*O parameter takes an absolute pathname as
an argument:
.P
 \*LMOUNT /\*Vpathname\*O
.P
The specified file contains the executable routine to load the
tape.  
.P
The following information is passed from the Backup System to
the executable routine:
.ML
.LI
The tape device pathname.
.LI
The tape operation, which is selected by issuing one of the
corresponding \*Lbak\*O commands. The set of tape operations follows:
.ML
.LI
\*Ldump\*O
.LI
\*Llabeltape\*O
.LI
\*Lreadlabel\*O
.LI
\*Lrestore\*O
.LI
\*Lrestoredb\*O
.LI
\*Lsavedb\*O
.LI
\*Lscantape\*O
.LE
.LI
The number of times the tape has been requested. If an error occurs
when the tape device is opened, this value is incremented by one and
the executable routine is called again.
.LI
The tape name. If no tape name is specified, \*Lnone\*O is passed to
the executable routine.
.LI
The dump ID. This is a unique indentification code assigned by the Backup
System. If no dump ID is specified, \*Lnone\*O is passed to
the executable routine.
.LE
.P
.nS "Notes"
If you do not specify the \*LMOUNT\*O parameter, the Backup System
prompts the operator to mount the first tape.
.P
You can use the \*LAUTOQUERY\*O parameter to prevent the Backup
System from prompting the operator to mount the first tape. Section
9.3.2.4 discusses this parameter.
.P
If the executable routine returns an exit code of 0, the backup
process continues. An exit code of 1 aborts the backup
process. Any other exit code causes the backup process to prompt the
operator for the correct tape.
.P
To abort the \*LMOUNT\*O parameter routine, type an \*La\*O
(for abort) in the Tape Coordinator monitoring window. The process
then aborts the executable routine and prompts the operator to mount
the correct tape.
.P
.nE
.H 4 "The UNMOUNT Parameter"
.iX "user-defined configuration file" "\*LUNMOUNT\*O parameter"
.P
Like the \*LMOUNT\*O parameter, the \*LUNMOUNT\*O parameter specifies
a file that contains an executable routine. In this case, the
executable routine is used to remove a tape from an automated
backup device. The \*LUNMOUNT\*O parameter takes an absolute pathname
as an argument:
.P
\*LUNMOUNT /\*Vpathname\*O
.P
The file specified by the \*LUNMOUNT\*O parameter is executed when the
Backup System closes a tape device (whether the
close operation succeeds or fails). 
.P
The Backup System passes the following information to the executable
routine:
.ML
.LI
The tape device file path and name.
.LI
The tape operation, which in this case is \*Lunmount\*O. 
.LE
.P
.H 4 "The ASK Parameter"
.iX "user-defined configuration file" "\*ASK\*O parameter"
The \*LASK\*O parameter determines whether the Backup System should
prompt the operator when an error occurs or simply use the default
responses. The \*LASK\*O parameter does not disable the initial prompt
to mount a tape.  The parameter takes the following arguments:
.VL .5in
.LI "\*LYES\*O"
Enables operator prompts for all error cases. Not specifying the
\*LASK\*O parameter has the same result.
.LI "\*LNO\*O"
Disables operator prompts for all error cases and assumes the default
responses.
.LE
.P
The possible error conditions are:
.ML
.LI
A \*Lbak restore\*O operation fails to restore a volume.  The
\*LYES\*O argument causes the Backup System to ask whether the
operator wishes to continue the restore operation. The \*LNO\*O
argument continues the restore.
.LI
A \*Lbak dump\*O operation fails to dump a volume.  The \*LYES\*O
argument causes the Backup System to ask whether the dump for that
volume should be retried, the volume should be omitted, or the dump
operation should be aborted. The \*LNO\*O argument proceeds with the
dump but omits the volume.
.LI
A \*Lbak scantape\*O operation cannot determine whether there is a next
tape in the dump set. The \*LYES\*O argument causes the Backup System
to ask whether there are more tapes to be dumped. The \*LNO\*O argument
assumes that there are more tapes.
.LI
A \*Lbak labeltape\*O operation attempts to label a non-expired
tape. The \*LYES\*O argument causes the Backup System to ask whether
the operation should proceed.  The \*LNO\*O argument does not label the
tape. 
.LE
.P
.H 4 "The AUTOQUERY Parameter"
.iX "user-defined configuration file" "\*LAUTOQUERY\*O parameter"
.P
The \*LAUTOQUERY\*O parameter disables the Backup System's initial
prompt to mount a tape. Use the \*LAUTOQUERY\*O parameter in
conjunction with the \*LASK\*O parameter to disable all prompting from
the Backup System. The \*LAUTOQUERY\*O parameter has the following
arguments:
.VL .5in
.LI "\*LYES\*O"
Enables the operator prompt for the first tape in the dump set. Not
specifying the \*LAUTOQUERY\*O parameter provides the same result.
.LI "\*LNO\*O"
Disables the operator prompt for the first tape. A \*LNO\*O argument
is similar to the \*L\-noautoquery\*O option for the \*Lbutc\*O command. 
.LE
.P
.H 4 "The NAME_CHECK Parameter"
.iX "user-defined configuration file" "\*LNAME_CHECK\*O parameter"
.P
The \*LNAME_CHECK\*O parameter prevents the Backup System from
checking tape names. The parameter has the following valid arguments:
.VL .5in
.LI "\*LYES\*O"
Enables tape name checking. The Tape Coordinator verifies that the
tape name is either \*LNULL\*O or the same name as the dump set.  Not
specifying the \*LNAME_CHECK\*O parameter provides the same result.
.LI "\*LNO\*O"
Disables tape name checking. Any non-expired tape is acceptable. 
.LE
.P
Disabling name checking is useful for recycling tapes without first
relabeling them.
.H 4 "The FILE Parameter"
.iX "user-defined configuration file" "\*LFILE\*O parameter"
The \*LFILE\*O parameter specifies whether the dump and restore
operations will write to or read from a tape or a file. The parameter
has the following valid arguments:
.P
.VL .5in
.LI "\*LYES\*O"
Dump and restore operations use a file. The target pathname
is specified in the
\*L/opt/dcelocal/var/dfs/backup/TapeConfig\*O file. 
.LI "\*LNO\*O"
Dump and restore operations use a tape device. Not specifying the
\*LFILE\*O parameter provides the same result.
.LE
.P
Keep these points in mind when using this parameter:
.P
.ML
.LI
If the Tape Coordinator needs another file to continue an operation,
it prompts the operator to mount another tape but then continues the
operation using the pathname specified in the
\*L/opt/dcelocal/var/dfs/backup/TapeConfig\*O file. A good practice is
to specify a pathname that is a link to another file. If you must
then provide another file name, you can take advantage of the prompt
for a new tape to change the link to a new pathname.
.LI
Do not specify the \*LYES\*O argument when using a tape device or the \*LNO\*O
argument when using a file.  Neither arrangement works.
.LI
If you specify \*LYES\*O, all \*Lioctl\*O calls are removed. Data is
still written in 16 KB blocks; however, the position of database
records is not a filemark position (as is normal with
tapes). Positioning to a volume is done directly with a \*Lseek\*O
call.
.LE
.P
.H 4 "Sample User-Defined Configuration Files"
.iX "-[" "user-defined configuration file" "example files"
.P
The following sample \*Lconf_\*O\*\Vtape_device\*O files show how
you might structure configuration files for stackers, jukeboxes, or
file dumps. They are examples only and are not recommendations.
.P
There are two general considerations concerning the
\*Lconf_\*O\*\Vtape_device\*O files (these considerations are
discussed in detail in section 9.3.2.1.), as follows:
.P
.AL
.LI
The Backup System passes the following parameters to the
\*Lconf_\*O\*\Vtape_device\*O file:
.ML
.LI
The tape device pathname
.LI
The tape operation
.LI
The number of times the tape has been requested
.LI
The tape name
.LI
The dump ID
.LE
.P
.LI
The Backup System responds to exit codes from the
\*Lconf_\*O\*\Vtape_device\*O file in the following ways:
.VL 1.5in
.LI "Exit code 0"
Continue the backup process.
.LI "Exit code 1"
Abort the backup process.
.LI "Any other exit code"
Prompt the operator for the correct tape.
.LE
.LE
.P
.H 5 "\*LSample conf_\*O\*\Vtape_device\*L File for Stackers\*O"
.P
The following is an example of a configuration file
for dealing with stacker-type automated backup equipment:
.P
.iS
\*CAUTOQUERY NO 
ASK YES
MOUNT /opt/backup/stacker0.1
NAME_CHECK NO\*O
.iE
.P
This file specifies the following:
.P
.ML
.LI
The \*LAUTOQUERY\*O parameter tells the Backup System not to prompt
the operator to mount the first tape.
.LI
The \*LASK\*O parameter tells the Backup System to prompt the operator
when an error occurs during the backup process.
.LI
The \*LMOUNT\*O parameter tells the Backup System to call the file
\*L/opt/backup/stacker0.1\*O and execute the routine in that file to
initialize the stacker.
.LI
The \*LNAME_CHECK\*O parameter tells the Backup System not to ensure
that the name of the next tape in the stack matches the dump set name.
.LE
.P
The previous example calls the \*L/opt/backup/stacker0.1\*O file to
initialize the stacker and load a tape. The following is an example of
the routine that might be contained in that file:
.P
.iS
\*C#! /bin/csh -f

set devicefile = $1
set operation  = $2
set trys       = $3
set tapename   = $4
set tapeid     = $5

set exit_continue    = 0
set exit_abort       = 1
set exit_interactive = 2

# -----------------------------------------------------

if (${trys} > 1) then
   echo "Too many tries"
   exit ${exit_interactive}
endif

if ((${operation} == "dump")       | \\
    (${operation} == "savedb"))    then

   stCmd_NextTape ${devicefile}
   if (${status} != 0) exit ${exit_interactive}
   echo "Will continue"
   exit ${exit_continue}
endif

if ((${operation} == "labeltape")  | \\
    (${operation} == "readlabel")) then
   echo "Will continue"
   exit ${exit_continue}
endif

echo "Prompt for tape"
exit ${exit_interactive}\*O
.iE
.P
This routine makes use of only two of the parameters passed to it by
the Backup System: \*Ltrys\*O and \*Loperation\*O. It is a good
practice to watch the number of attempts and exit if it exceeds one
(which implies that the stacker is out of tapes). Note that this
routine calls \*LstCmd_NextTape\*O for \*Ldump\*O or \*Lsavedb\*O
operations; however, your file should call whatever routine is
required to load the next tape for your stacker. Also note that the
routine sets the appropriate exit code to prompt an operator to load a
tape if either the stacker cannot load a tape or a restore operation
is in process.
.P
.H 5 "\*LSample conf_\*O\*\Vtape_device\*L File for Jukeboxes\*O"
.P
The following sample \*Lconf_\*O\*\Vtape_device\*O file configures
the Backup System to control a jukebox device, and includes an
\*LUNMOUNT\*O parameter:
.P
.iS
\*CMOUNT /opt/backup/jukebox0.1
UNMOUNT /opt/backup/jukebox0.1
ASK NO
NAME_CHECK NO\*O
.iE
.P
This file specifies the following:
.ML
.LI
The \*LMOUNT\*O parameter tells the Backup System to call the file
\*L/opt/backup/jukebox0.1\*O and execute the routine in that file to
mount a tape.
.LI
When the Backup System closes a tape device, it calls the file
\*L/opt/backup/jukebox0.1\*O and executes the routine to remove the
tape from the jukebox.
.LI
The \*LASK\*O parameter tells the Backup System not to prompt the
operator for the initial tape.
.LI
The \*LNAME_CHECK\*O parameter tells the Backup System not to ensure
that the name of the next tape in the stack matches the dump set name.
.LE
.P
The following sample \*Lconf_\*O\*\Vtape_device\*O file shows the use
of the \*Ltrys\*O and \*Loperation\*O parameters:
.P
.P
.iS
\*C#! /bin/csh -f

set devicefile = $1
set operation  = $2
set trys       = $3
set tapename   = $4
set tapeid     = $5

set exit_continue    = 0
set exit_abort       = 1
set exit_interactive = 2

# -----------------------------------------------------

if (${trys} > 1) then
   echo "Too many trys"
   exit ${exit_interactive}
endif

if ((${operation} == "labeltape")  | \\
    (${operation} == "readlabel")) then
   echo "Won't read or write a tape label"
   exit ${exit_abort}
endif

if ((${operation} == "unmount") then
   jbComd_UnMountTape $(devicefile)
   exit
endif
.iE
.P
This routine makes use of two of the parameters passed to it by
the Backup System: \*Ltrys\*O and \*Loperation\*O. The \*Ltrys\*O
parameter monitors the number of attempts to load a tape. If the
number of attempt exceeds one, the jukebox is unable to load a tape
and the routine will exit and return an exit code of 2 (which will
cause the Backup System to prompt the operator to load a tape).
.P
In this scenario, tape names are not checked before using a tape as
part of a dump set (recall that the \*LNAMECHECK\*O parameter was set
to \*LNO\*O, disabling tape name checking). Therefore, if the
\*Llabeltape\*O or \*Lreadlabel\*O operations are attempted the
routine echoes a message saying that these operations cannot be
performed. The executable routine then returns an exit code of 1,
which causes the Backup System to abort the operation.
.P
If an \*Lunmount\*O is executed, the routine calls the 
\*LjbComd_UnMountTap\*O function to remove the tape from the drive.
.P
.H 5 "\*LSample conf_\*O\*\Vtape_device\*L File for Dump to File\*O"
.P
The following sample \*Lconf_\*O\*\Vtape_device\*O file configures
the Backup System to dump directly to a file.
.P
.iS
\*CMOUNT /opt/backup/file
FILE YES\*O
.iE
.P
This file specifies the following:
.P
.ML
.LI
The \*LMOUNT\*O parameter calls an executable routine in the
\*L/opt/backup/file\*O file.
.LI
The \*LFILE\*O parameter is set to \*LYES\*O, indicating that the
information should be dumped directly to a file.  The pathname for the
target dump file is set in the
\*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file.
.LE
.P
The following is an example of a routine that might be contained
\*Lopt/backup/file\*O that demonstrates how to configure the Backup
System to handle dumps to a file.
.P
.iS
\*C#! /bin/csh -f

set devicefile = $1
set operation  = $2
set trys       = $3
set tapename   = $4
set tapeid     = $5

set exit_continue    = 0
set exit_abort       = 1
set exit_interactive = 2

# -----------------------------------------------------

if (${trys} > 1) then
   echo "Too many trys"
   exit ${exit_interactive}
endif

if (${operation} == "labeltape") then
   echo "Won't label a tape/file"
   exit ${exit_abort}
endif

if ((${operation} == "dump")       | \\
    (${operation} == "restore")    | \\
    (${operation} == "savedb")     | \\
    (${operation} == "restoredb")) then

   /bin/rm -f ${devicefile}
   /bin/ln -s /hsm/${tapename}_${tapeid} ${devicefile}
   if (${status} != 0) exit ${exit_abort}
endif
exit ${exit_continue}\*O
.iE
.P
This routine makes use of two of the parameters passed to it by
the Backup System: \*Ltrys\*O and \*Loperation\*O. The \*Ltrys\*O
parameter monitors the number of attempts to write to or read from a
file. If the number of attempts exceeds one, the Backup System is
unable to write to or read from the file specified in the
\*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file. The routine
then exits and returns an exit code of 2 (which causes the Backup
System to prompt the operator to load a tape). The operator can use
this opportunity to change the name of the file specified in the
\*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file. 
.P
In this scenario, tape names are not checked before using a tape as
part of a dump set (recall that the \*LNAMECHECK\*O parameter was set
to \*LNO\*O, disabling tape name checking). Therefore, if the
\*Llabeltape\*O or \*Lreadlabel\*O operations are attempted the
sample routine echoes a message saying that these operations
cannot be performed. The executable routine then returns an exit code
of 1, which causes the Backup System to abort the operation.
.P
A \*Ldump\*O, \*Lrestore\*O, \*Lsavedb\*O, or \*Lrestoredb\*O
operation links to a new file using the \*Ltapename\*O and
\*Ltapeid\*O to build the file name.  The \*Ltapename\*O and
\*Ltapeid\*O are used so that \*Lrestore\*O operations can easily link
to the proper file. 
.iX "-]" "Backup System" "user-defined configuration file"
.iX "-]" "user-defined configuration file" "use with Backup System"
.iX "-]" "user-defined configuration file" "example files"
.H 3 "Defining Fileset Families and Fileset Family Entries"
.iX "fileset families" "name format"
.iX "-[" "wildcards" "in fileset family entries"
.iX "-[" "fileset families" "entries"
.P
Before actually performing a backup, you must create one or more fileset
families in the Backup Database.  A fileset family defines the groups of
filesets that are to be dumped together.  Fileset family names can be no 
longer than 31 characters, and they can include any characters.  Avoid using a 
dot in the name of a fileset family; when a dump set is transferred to 
tape, the fileset family name and the last component of the dump level name 
are automatically joined by a dot to form the name of the dump set.
.nL
.ne 20
.P
In regular command (noninteractive) mode, characters from the regular
expression character set used in the name of a fileset family must be escaped
with a \*L\e\*O (backslash) to prevent the command shell from expanding them;
for example, \*Lusr\e*\*O for a fileset family named \*Lusr*\*O.  Because they
have no meaning in the name of a fileset family, regular expression characters
are not recommended.
.P
Once you define a fileset family, you must then define the fileset family
entries in the family.  Each fileset family entry is defined in terms of one or
more filesets and the location of each fileset on a File Server machine and
aggregate.  Each fileset family entry consists of three fields, with each field
separated by a space.  Following are the legal values for each field in a
fileset family entry:
.ML
.LI
File Server Machine Name: The name of the File Server machine that houses
the filesets.  You can specify the machine's DCE pathname (for example,
\*L/.../abc.com/hosts/fs1\*O), its host name (for example, \*Lfs1.abc.com\*O),
or its IP address (for example, \*L11.22.33.44\*O).  You can also use the
special \*L.*\*O wildcard for this field; this wildcard matches all of the
File Server machines in the cell.
.LI
Aggregate Name: The device name or aggregate name of the aggregate on
which the filesets reside.  You can use the \*L.*\*O wildcard for this field; 
the wildcard matches all aggregate names.
.LI
Fileset Name: The names of the filesets to be backed up.  You can use the 
\*L.*\*O wildcard for this field to match all fileset names.  The following 
regular expression characters can also be used in this field of an entry: 
.ML
.LI
The \*L*\*O (asterisk) character matches any number of repetitions of the 
previous character.
.LI
The \*L[ ]\*O (brackets) characters around a list of characters match any 
single instance of the characters in the list but no other characters.
.LI
The \*L^\*O (circumflex) character as the first character in a bracketed set 
of characters matches any single character other than the characters that 
follow it in the list.
.nL
.ne 20
.LI
The \*L?\*O (question mark) character matches any single character or no 
character.
.LI
The \*L.\*O (dot) character matches any single character, but a character 
must be present.
.LI
The \*L\e\*O (backslash) character before any other regular expression 
character, including itself, matches the literal value of the character.
.LE
.P
In noninteractive mode, you must surround an entire string with "\|" (double
quotes) if it contains regular expression characters or you must escape each
regular expression character with a \*L\e\*O (backslash); for example, use
\*L"user\e..*\e.bak"\*O or \*Luser\e\e..\e*\e\e.bak\*O to indicate all of the
filesets that begin with the prefix \*Luser.\*O and end with the extension
\*L.bak\*O.  Otherwise, the command shell attempts to resolve the regular
expression characters rather than pass them to the \*Lbak\*O command
interpreter for resolution.  Note that the \*L.*\*O notation is interpreted as
a single wildcard that must be surrounded with double quotes in noninteractive
mode (\*L".*"\*O).  Characters specified in regular expressions are case
sensitive.
.LE
.P
All fileset family names must be unique within the Backup Database of the
local cell.  Create and delete fileset families with the \*Lbak addftfamily\*O
and \*Lbak rmftfamily\*O commands.  Create and delete fileset family entries
with the \*Lbak addftentry\*O and \*Lbak rmftentry\*O commands.
.iX "-]" "wildcards" "in fileset family entries"
.H 4 "Suggestions for Creating Fileset Family Entries"
.iX "-[" "\*Lbak\*O command suite" "\*Laddftentry\*O"
.P
The \*Lbak addftentry\*O command has arguments that correspond to the three
fields in a fileset family entry: \*L\-server\*O for the File Server machine
name field, \*L\-aggregate\*O for the aggregate name field, and
\*L\-fileset\*O for the fileset name field.  By combining these arguments in
different ways, you can create fileset entries for different groupings of
filesets.  Table 9-1 summarizes some suggested groupings.
.br
.nL
.ne 20
.in -.5i
\s-1
.TB "Suggestions for Creating Fileset Family Entries"
.TS
center, tab(@), allbox;
lB | lB | lB
lw(1.75i) | lw(1.75i) | lBw(1.4i).
For Entries That Include:@Use:@For Example:
_
.TH
T{
All filesets in the cell's file
system
T}@T{
The wildcard for all three
arguments
T}@T{
".*"
.br
".*"
.br
".*"
T}
...\" _
T{
Every fileset on a specific File
Server machine
T}@T{
Machine name with
\*L\-server\*O and wildcard for
\*L\-aggregate\*O and
\*L\-fileset\*O
T}@T{
/.../abc.com/hosts/fs1
.br
".*"
.br
".*"
T}
...\" _
T{
Filesets on aggregates of the
same name
T}@T{
The aggregate name with
\*L\-aggregate\*O and the wildcard
for \*L\-server\*O and \*L\-fileset\*O
T}@T{
".*"
.br
/dev/lv01
.br
".*"
T}
...\" _
T{
Every fileset with a common
string of letters (such as a
\*L.backup\*O extension)
T}@T{
The wildcard for \*L\-server\*O and
\*L\-aggregate\*O, and a character
string/regular expression for
\*L\-fileset\*O
T}@T{
".*"
.br
".*"
.br
".*\e.backup"
T}
...\" _
T{
All filesets on an aggregate
T}@T{
The machine name with
\*L\-server\*O, the aggregate name
with \*L\-aggregate\*O, and the
wildcard for \*L\-fileset\*O
T}@T{
/.../abc.com/hosts/fs2
.br
/dev/lv02
.br
".*"
T}
...\" _
T{
Every fileset on each File
Server machine's similarly
named aggregate that includes
a common string of letters in
its name (such as a \*Luser.\*O
prefix)
T}@T{
The wildcard for \*L\-server\*O, the
aggregate name with
\*L\-aggregate\*O, and a character
string/regular expression for
\*L\-fileset\*O
T}@T{
".*"
.br
/dev/lv03
.br
"user\e..*"
T}
...\" _
T{
Every fileset on one aggregate
with a common string of letters
in its name (such as a \*Lsys\*O
prefix and a \*L.readonly\*O
extension)
T}@T{
The machine name with
\*L\-server\*O, the aggregate name
with \*L\-aggregate\*O, and a
character string/regular
expression for \*L\-fileset\*O
T}@T{
/.../abc.com/hosts/fs3
.br
/dev/lv04
.br
"sys.*\e.readonly"
T}
.TE
\s+1
.in +.5i
.nL
...\" 
.P
Include in a fileset family only those filesets that you wish to dump to the 
same tape at the same time (for example, weekly or daily) and in the same 
manner (fully or incrementally).
.P
The two main types of fileset families are those based on a common fileset
location (File Server machine and aggregate) and those based on similar
contents (as reflected by a fileset name).  Because filesets can be moved
between machines and aggregates, use name-based fileset family entries rather
than location-based ones.  For name-based entries, specify the \*L.*\*O 
wildcard for the \*L\-server\*O and \*L\-aggregate\*O arguments of the \*Lbak 
addftentry\*O command.
.iX "-]" "\*Lbak\*O command suite" "\*Laddftentry\*O"
.iX "-]" "fileset families" "entries"
.H 4 "Adding a Fileset Family to the Backup Database"
.iX "\*Lbak\*O command suite" "\*Laddftfamily\*O"
.iX "fileset families" "basis for forming"
.iX "fileset families" "adding to Backup Database"
.P
To add a fileset family to the Backup Database, do the following:
.AL
.LI
Verify that you are included in the appropriate administrative lists.
If necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Issue the \*Lbak addftfamily\*O command to create the fileset
family.  The fileset family remains empty until you use the \*Lbak
addftentry\*O command to define entries in it.
.iS
\*C$ \*Lbak addftfamily -family \*Vfileset_family_name\*O
.iE
.P
.LE
.H 4 "Adding a Fileset Family Entry to a Fileset Family"
.iX "fileset families" "adding entries"
.iX "-[" "Backup Database" "fileset families"
.P
To add a fileset family entry to a fileset family, do the following:
.AL
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.nL
.ne 20
.LI
Define the entries in a fileset family that was previously created with the 
\*Lbak addftfamily\*O command; the Backup System automatically assigns each 
entry an index number, starting with 1 for the first entry in each fileset 
family.  This number is used if the fileset entry needs to be removed.
.iS
\*C$ \*Lbak addftentry -family \*Vfileset_family_name\*L -server \*Vmachine \\
\*L\-aggregate \*Vname\*L -fileset \*Vname\*O
.iE
.P
The \*L\-server\*O \*Vmachine\*O option is the File Server machine that houses
the filesets to be included in the entry.  Legal values for a specific machine
are the machine's DCE pathname, the machine's host name, or the machine's IP
address.  You can also use the \*L.*\*O wildcard, which matches all machine
names.
.P
The \*L\-aggregate\*O \*Vname\*O option is the device name or aggregate name
of the aggregate that houses the filesets to be included in the entry.  The
\*L.*\*O wildcard can be used to match the names of all aggregates.
.P
The \*L\-fileset\*O \*Vname\*O option is the name of a fileset to be included
in the entry.  The \*L.*\*O wildcard or any of the regular expression characters
described previously can be used to match the names of multiple filesets.
.LE
.H 4 "Deleting Fileset Families from the Backup Database"
.iX "fileset families" "deleting from Backup Database"
.iX "\*Lbak\*O command suite" "\*Lrmftfamily\*O"
.P
To delete a fileset family from the Backup Database, do the following:
.AL
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Issue the \*Lbak rmftfamily\*O command to delete each fileset family that you 
no longer need.  It is not necessary to delete the fileset entries in each 
fileset family first; they are deleted automatically when the family is 
removed.
.iS
\*C$ \*Lbak rmftfamily -family \*Vfileset_family_name\*O...
.iE
.P
.LE
.nL
.ne 20
.H 4 "Deleting a Fileset Family Entry from a Fileset Family"
.iX "fileset families" "deleting entries"
.iX "\*Lbak\*O command suite" "\*Llsftfamilies\*O"
.P
To delete a fileset family entry from a fileset family, do the following:
.AL
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Issue the \*Lbak lsftfamilies\*O command to determine the index number of the
entry that you want to delete.  This is necessary only if the fileset family 
contains multiple entries, in which case this command is used to list the 
entries; if the family contains a single entry, the index is 1.
.iS
\*C$ \*Lbak lsftfamilies -family \*Vfileset_family_name\*O
.iE
.P
.LI
Use the \*Lbak rmftentry\*O command to delete the entry:
.iS
\*C$ \*Lbak rmftentry -family \*Vfileset_family_name\*L -entry \*Vfileset_entry_index\*O
.iE
.P
The \*L\-entry\*O \*Vfileset_entry_index\*O option is the index for the entry
that you want to delete.
.LE
.iX "-]" "Backup Database" "fileset families"
.H 3 "Defining a Dump Hierarchy of Dump Levels"
.iX "-[" "dump hierarchies" "establishing"
.iX "incremental dump levels"
.iX "parent dump level"
.P
A dump hierarchy consists of one or more full dump levels and any incremental
dump levels that you create with the \*Lbak adddump\*O command.  The dump levels
define how fileset families are to be dumped; all fileset family entries in a
fileset family are dumped at the same time and in the same way (fully or
incrementally).  A dump of a fileset family at a particular dump level produces
a dump set.  To create a dump set, specify the name of the fileset family and
the level at which that family is to be dumped when you initiate the dump with
the \*Lbak dump\*O command. (See Chapter 10 for a description of the \*Lbak
dump\*O command.)
.nL
.ne 20
.P
A dump hierarchy is defined by the dump levels it contains.  The term \*Vfull
dump level\*O refers to a dump level used when creating full dumps, the term
\*Vincremental dump level\*O refers to a dump level used when creating
incremental dumps, and the term \*Vparent dump level\*O refers to a dump level that
serves as the reference point for an incremental dump level.  Both full dump
levels and incremental dump levels can serve as parent dump levels.
.P
Each dump level in the hierarchy can be associated with an expiration date
that specifies the date and time at which a tape that contains a dump set made
at that level can be overwritten.  Expiration dates are specified with the
\*Lbak adddump\*O or \*Lbak setexp\*O command.  A dump level's expiration date
is automatically placed on a tape that contains a dump made at that level to
provide an extra level of protection against accidental erasure of the
information on the tape.
.P
Whenever a tape is used, the Backup System always checks to see whether the
tape already contains a dump set.  If the tape contains a dump set, the Backup
System overwrites the tape only with a dump set of the same name.  If the
Backup System determines that it can overwrite the dump set, it then determines
whether an expiration date exists on the tape; if no expiration date is 
associated with a tape or if the expiration date associated with a tape has 
expired, the system overwrites the dump set on the tape with a dump set of 
the same name.  However, if the tape's expiration date has not expired, the
system refuses to overwrite the tape.
.iX "-[" "dump hierarchies" "general issues"
.iX "dump hierarchies" "structure and format"
.P
Following are some general issues to consider when building a dump hierarchy:
.ML
.LI
A dump level can have any number of elements.  The \*L/\*O (slash) is used as a
metacharacter to separate different levels in the dump hierarchy.  Regardless
of its level in the dump hierarchy (full or incremental), each element in a
dump level name must be preceded by a \*L/\*O (slash).
.LI
Any characters can be included in a dump level name.  Regular expression
characters included in a name must be properly escaped with a \*L\e\*O
(backslash) or \*L"\|"\*O (double quotes).
.LI
Do not include a \*L.\*O (dot) in the name of a dump level.  When a dump set 
is transferred to tape, the last component of the dump level name becomes part 
of the dump set name.  The elements of the dump set name (the fileset family 
name and the last component of the dump level name) are joined by a dot.  For
example, if a fileset family named \*Lsys\*O is dumped at the incremental dump
level \*L/weekly/monday\*O, the dump set name is \*Lsys.monday\*O.
.nL
.ne 20
.LI
The maximum length for any single element in a dump level name is 28
characters.  This does not include the / (slash) that precedes the element.
.LI
The maximum length for the complete name of a dump level (full or incremental)
is 256 characters.  This includes any / (slashes) that are part of the name.
.LI
A dump level is specified by its pathname.  A level can share parents, but the
level itself must have a unique name.  Following are examples of different dump
specifications:
.ML
.LI
The \*L/full\*O specification defines a full dump level.
.LI
The \*L/full/week1\*O specification defines an incremental dump level, 
\*L/week1\*O, with \*L/full\*O as its parent.
.LI
The \*L/full/week1/thursday\*O specification defines \*L/thursday\*O as a 
dump level that refers to \*L/week1\*O as its parent; \*L/week1\*O refers 
to \*L/full\*O as its parent.
.LE
.LI
The dump level that you use as the parent for an incremental dump must already
exist in the hierarchy when you define the incremental dump.  The complete
pathname of each dump level must be unique within the Backup Database of the
local cell.
.LI
A dump hierarchy can contain more than one full dump level; each level defines
a separate subhierarchy in which you can create different relationships between
the dump levels.  The following two common methods are available to relate the
incremental dumps in a subhierarchy to the full dump level and to one another:
.ML
.LI
Each incremental dump refers to the same full dump as its parent.  With this
method, the dump sets created at each of the incremental levels contain all
of the files in the fileset family that changed since the family was last 
dumped at the full level.
.LI
Each incremental dump level (other than the first) refers to a preceding
incremental dump level as its parent, rather than to the full dump level.  With
this method, each incremental dump includes only those files modified since a
dump was last done at its parent level.  When you restore files dumped in this
fashion, however, you must access more tapes: the tape that contains the full
dump and the tape for each incremental dump done afterward.
.LE
.nL
.ne 20
.P
The two types of hierarchies can be mixed within a single subhierarchy by
setting some incremental dumps to refer to the full dump level as their parent
and setting others to refer to preceding incremental levels.
.LI
There is no implied relationship between a fileset family and a dump
subhierarchy; you can dump any fileset family at any level in any subhierarchy.
When dumping a fileset, \*Edo not\*O alternate between incremental dumps from
different subhierarchies.  To dump a fileset according to a different
subhierarchy, start at the full dump level.
.LI
Use names in the hierarchy that correspond to real-world times; these can help
you remember when to create dumps at the different levels.  However, the Backup
System does not automatically back up filesets according to the names assigned
in the dump hierarchy; it does not interpret dump level names, nor does it
automatically perform an incremental dump on Thursday simply because there is
a dump level called \*Lthursday\*O.
.LE
.P
A few general guidelines for using a dump hierarchy follow:
.ML
.LI
To set up a group of tapes for archiving, make certain that you use unique dump
names; for example, \*Lmonday1\*O, \*Ltuesday1\*O, \*Lmonday2\*O, or
\*Ltuesday2\*O.
.LI
To recycle tapes, use dump levels with the same name; for example,
\*Lmonday\*O or \*Ltuesday\*O.
.LI
To archive tapes and recycle them at a later time, simply perform backups
with a new set of tapes; the old set of tapes can then be archived.  This
creates multiple entries for the dump in the Backup Database.  To restore
filesets with multiple entries in the database, use the correct dump date to
restore the correct information.
.LE
.P
The Backup System prevents you from using out-of-date configuration
information.  For example, if a user deletes a full dump level in a hierarchy,
and another user tries to start an incremental backup based on that full dump
level, the incremental backup fails.  The second user must view the dump
hierarchy with the \*Lbak lsdumps\*O command.  This command updates the
hierarchy with the most recent changes and lets the user determine another
dump level to use with the command. (See Chapter 10 for more information on
the \*Lbak lsdumps\*O command.)
.iX "-]" "dump hierarchies" "general issues"
.nL
.ne 20
.H 4 "Examples of Dump Hierarchies"
.iX "dump hierarchies" "examples"
.iX "\*Lbak\*O command suite" "\*Ladddump\*O"
.P
Following are examples of two possible dump hierarchies. Each hierarchy backs
up data in a different way.
.P
The first dump hierarchy is used to back up user data (data from
user filesets).  Because this data changes frequently, it is dumped at the
end of each working day, starting with a full dump at the beginning of
the week (Sunday) and continuing with incremental dumps Monday through
Friday.  Each incremental dump refers to the full dump as its parent,
rather than to the previous day's incremental dump.  As a result, each
incremental dump contains all of the data that has changed since the full dump
was performed.  The following commands are used to establish this dump
hierarchy:
.iS
\*C$ \*Lbak adddump /sunday\*O
\*C$ \*Lbak adddump /sunday/monday\*O
\*C$ \*Lbak adddump /sunday/tuesday\*O
\*C$ \*Lbak adddump /sunday/wednesday\*O
\*C$ \*Lbak adddump /sunday/thursday\*O
\*C$ \*Lbak adddump /sunday/friday\*O
.iE
.iX "\*Lbak\*O command suite" "\*Llsdumps\*O"
.P
You can use the \*Lbak lsdumps\*O command to display the dump hierarchy. In
the following example, \*L/sunday\*O is the full dump used for the hierarchy:
.iS
\*C$ \*Lbak lsdumps\*O
.iE
.P
.oS
\*C/sunday\*O
\*C\ \ \ \ \ \ /monday\*O
\*C\ \ \ \ \ \ /tuesday\*O
\*C\ \ \ \ \ \ /wednesday\*O
\*C\ \ \ \ \ \ /thursday\*O
\*C\ \ \ \ \ \ /friday\*O
.oE
.nL
.ne 20
.P
The second dump hierarchy is used to back up filesets containing
system binary files.  Because these files do not change often, they are
backed up only once a week, starting with a full dump at the beginning
of the month and followed by an incremental dump at the beginning of each
subsequent week.  Each weekly dump refers to the previous week's dump as
its parent, rather than to the initial full dump.  Therefore, each weekly
dump contains only those files that changed in the past week, rather
than everything that changed since the full dump was performed.  The
following commands establish this dump hierarchy:
.iX "\*Lbak\*O command suite" "\*Ladddump\*O"
.iS
\*C$ \*Lbak adddump /month\*O
\*C$ \*Lbak adddump /month/week1\*O
\*C$ \*Lbak adddump /month/week1/week2\*O
\*C$ \*Lbak adddump /month/week1/week2/week3\*O
\*C$ \*Lbak adddump /month/week1/week2/week3/week4\*O
.iE
.P
You can use the \*Lbak lsdumps\*O command to display the dump hierarchy. The
following example shows \*L/month\*O as the full dump for the hierarchy:
.iS
\*C$ \*Lbak lsdumps\*O
.iE
.P
.oS
\*C/month\*O
\*C\ \ \ \ \ \ /week1\*O
\*C\ \ \ \ \ \ \ \ \ \ \ \ /week2\*O
\*C\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ /week3\*O
\*C\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ /week4\*O
.oE
.P
.iX "-]" "dump hierarchies" "establishing"
.H 4 "Defining a Dump Level"
.iX "dump levels" "defining"
.P
To define a dump level, do the following:
.AL
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Issue the \*Lbak adddump\*O command to define one or more dump levels:
.iS
\*C$ \*Lbak adddump -level \*Vdump_level\*O... [\*L\-expires \*Vdate\*O...]
.iE
.P
.LE
.nL
.ne 20
.H 4 "Changing a Dump Level's Expiration Date"
.iX "dump levels" "expiration dates"
.P
To change a dump level's expiration date, do the following:
.AL
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Issue the \*Lbak setexp\*O command to set the expiration dates of one or more
dump levels:
.iS
\*C$ \*Lbak setexp -level \*Vdump_level\*O... \*L\-expires \*Vdate\*O...
.iE
.P
.LE
.H 4 "Deleting a Dump Level"
.iX "dump levels" "deleting"
.iX "\*Lbak\*O command suite" "\*Lrmdump\*O"
.P
To delete a dump level, do the following:
.AL
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Issue the \*Lbak rmdump\*O command to delete a dump level.  All dump levels
for which the level serves as the parent, either directly or indirectly, are
also deleted automatically.
.iS
\*C$ \*Lbak rmdump -level \*Vdump_level\*O
.iE
.P
.LE
.H 3 "Labeling Tapes"
.iX "-[" "tapes" "labeling"
.P
A tape's magnetic label provides information about the tape and the data it
contains.  The Backup System checks each tape before it writes to it; if
the label on the tape is unacceptable, the dump cannot proceed until you insert
an acceptable tape in the drive.  A tape's label records the following
information:
.ML
.LI
The name of the tape, indicating its contents.  The name of the tape is composed
of three fields, all of which are separated by dots: 
\*Vfileset_family_name\*L.\*Vdump_level\*L.\*Vindex\*O (the dump set name with an 
additional tape index).  The following three types of tape names are 
acceptable: 
.ML
.LI
The complete name of the tape in the form 
\*Vfileset_family_name\*L.\*Vdump_level\*L.\*Vindex\*O, where the values of
\*Vfileset_family_name\*O and \*Vdump_level\*O match values that you 
provide with the \*Lbak dump\*O command.  The \*Vindex\*O is this tape's place 
in the sequence of tapes used for the complete dump set; if the dump set 
fits on one tape, the index for that tape is the numeral 1.
.LI
An indicator of empty, or null, created with the \*Lbak labeltape\*O command.
The Backup System replaces the null indicator with the correct name when it
puts dump sets onto the tape.
.LI
No name, indicating it is an unused tape.  Again, the Backup System generates
the correct name as it transfers a dump set to the tape.
.LE
.LI
The size of the tape.  Use a number and a letter (k or K for kilobytes, m or M
for megabytes, or g or G for gigabytes) to indicate a size, as described in
Section 9.3.1 for the \*LTapeConfig\*O file.  Because the Backup System always
uses the size specified in the \*LTapeConfig\*O file, the size you include in
the label of the tape is intended for information purposes only.
.LE
.P
When you label a tape, you can specify its name only, its size only, or both
its name and its size.  When you dump data to a tape, the expiration date of
the dump level at which you dump the data is copied to the label of the tape.
If a tape has an expiration date that has not expired, the Backup System
refuses to overwrite the tape.  If the tape's expiration date has expired, or
if the tape contains no expiration date, the Backup System overwrites the
tape with a dump set that has an acceptable name.
.P
It is not essential to prelabel tapes before data is transferred to them; the
Backup System can use unlabeled tapes or partially labeled tapes, which
are tapes that include only the name of the tape or the size of the tape. 
However, you may want to prelabel a tape in the following situations:
.ML
.LI
You want to automate the backup process as much as possible. For
manually loaded tape drives, if tapes are prelabeled with the correct
name, the individual performing backups needs to respond to prompts
only when the system requests a tape. For automated backup devices, if
the tapes are prelabeled the backup process will proceed
uninterrupted.
.LI
You wish to reuse a tape, putting a different dump set on it.  The Backup System
will not use a tape if the label reflects the name of a different dump set or
if the label contains an unexpired expiration date.  Labeling a tape 
overwrites its expiration date, as well as its name and size.
.LE
.P
.nS "Note"
You can force the Backup System to ignore the tape label and use any
unexpired tape for dumps.  See Section 9.3.2.5 for information about the
\*LNAME_CHECK\*O parameter in the user-defined configuration file.
.nE
.P
.H 4 "Reading the Label on a Tape"
.iX "tapes" "reading labels"
.iX "\*Lbak\*O command suite" "\*Lreadlabel\*O"
.P
To read the label on a tape, do the following:
.AL
.LI
If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 9.2.2.1 for information
on using the \*Lbutc\*O command to start a Tape Coordinator.)
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Place the tape in the drive, and issue the \*Lbak readlabel\*O command to read
the label on the tape.
.iS
\*C$ \*Lbak readlabel \*O[\*L\-tcid \*Vtc_number\*O]
.iE
.P
.LE
.H 4 "Labeling a Tape"
.iX "\*Lbak\*O command suite" "\*Llabeltape\*O"
.P
To label a tape, do the following:
.AL
.LI
If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 9.2.2.1 for information
on using the \*Lbutc\*O command to start a Tape Coordinator.)
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Issue the \*Lbak labeltape\*O command to label the tape.  This command executes
in the background. (See Chapter 10 for more information about commands that
execute in the background.)
.iS
\*C$ \*Lbak labeltape \*O[\*L\-tape \*Vtape_name\*O] [\*L\-size \*Vtape_size\*O] [\*L\-tcid \*Vtc_number\*O]
.iE
.P
The \*L\-tape\*O \*Vtape_name\*O option is the name of the tape. It must have 
the form \*Vfileset_family_name\*L.\*Vdump_level\*L.\*Vindex\*O.  If this 
option is omitted, the tape is marked as empty with the null indicator.
.nL
.ne 20
.P
The \*L\-size\*O \*Vtape_size\*O option is the capacity of the tape. The 
default unit is kilobytes.  You can add a g or G to the number to indicate 
gigabytes or an m or M to indicate megabytes.  This is for information purposes
only; the Backup System uses the tape size recorded in the \*LTapeConfig\*O
file whenever it uses a tape drive.  If this option is omitted, the tape size
specified for the drive in the \*LTapeConfig\*O file is used.
.LI
Place the tape in the drive, and press \*L<Return>\*O in the corresponding Tape
Coordinator's monitoring window.
.LE
.iX "-]" "tapes" "labeling"
.H 2 "Adding and Removing Tape Coordinators"
.P
As mentioned in Section 9.3.1, a separate Tape Coordinator process is
associated with each tape drive on a Tape Coordinator machine.  Each Tape
Coordinator has an associated port, or address.  You must assign the port a
TCID and use that number in any commands issued to the Tape Coordinator;
\*Lbak\*O commands that involve a tape drive have a \*L\-tcid\*O option for
this purpose.  The Backup System identifies and contacts a Tape Coordinator by
its TCID.
.P
The Backup System can track a maximum of 1024 tape drives.  Valid TCIDs are the
integers from 0 to 1023.  You do not have to assign the numbers in sequence, and
you can skip numbers.  The drive with the TCID of 0 is used by default.  You can
use the \*Lbak lshosts\*O command to list the Tape Coordinators that have
entries in the Backup Database.
.P
Section 9.4.1 describes the steps used to add a Tape Coordinator to an existing
Tape Coordinator machine.  The steps assume that you have already configured the
Tape Coordinator machine to which the Tape Coordinator is to be added according
to the instructions in Section 9.3.1.  You use the \*Lbak addhost\*O command to
add an entry for a Tape Coordinator to the Backup Database.
.P
Section 9.4.2 describes the steps used to remove an existing Tape Coordinator.
You use the \*Lbak rmhost\*O command to remove an entry for a Tape Coordinator
from the Backup Database.
.P
Remember to edit the \*LTapeConfig\*O file accordingly when you add or remove
a Tape Coordinator.  The \*LTapeConfig\*O file defines the mapping between a
Tape Coordinator and a tape drive on a Tape Coordinator machine.
.nL
.ne 20
.H 3 "Adding a Tape Coordinator"
.iX "-[" "Tape Coordinators" "adding"
.P
To add a Tape Coordinator to an \*Eexisting\*O Tape Coordinator machine,
perform the following steps on the Tape Coordinator machine:
.AL
.LI
Install the drive on the machine according to the manufacturer's instructions.
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.LI
Verify that you have the \*Lw\*O (write) permission on the 
\*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file.
.LI
.iX "\*Lbak\*O command suite" "\*Llshosts\*O"
Choose the TCID for the drive.  Enter the \*Lbak lshosts\*O command to check
previously assigned TCIDs:
.iS
\*C$ \*Lbak lshosts\*O
.iE
.P
.LI
Using a text editor, add a line for the new tape drive to the
\*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file.  Use a single line in the
file for each tape drive, recording the following information:
.ML
.LI
The tape size of the tapes to be used in the drive.  The Tape Coordinator uses
this capacity as the size of all tapes used in the drive.  It is recommended
that you use a number 10 to 15% lower than the actual tape capacity to allow
for tape variations.  The following abbreviations can be used for the tape size
unit of measurement (the default is kilobytes); do not leave a space between
the number and the letter.
.ML
.LI
Kilobytes: k or K (for example, 2k or 2K)
.LI
Megabytes: m or M (for example, 2m or 2M)
.LI
Gigabytes: g or G (for example, 2g or 2G)
.LE
.nL
.ne 20
.LI
The EOF mark size for the type of tape to be used in the drive.  The Backup
System appends an EOF mark after each fileset dumped to tape.  The size of this
mark can affect the amount of space available for backup data.  The EOF mark
size can vary from 2 kilobytes to more than 2 megabytes, depending on the type
of tape drive used.  It is recommended that you increase the actual file mark
size by 10 to 15% to allow for tape variations.
.iX "end of file mark size"
.iX "EOF mark size"
.P
If you do not specify a unit of measurement, the default used for the EOF size
is bytes (\*Enot\*O kilobytes, as for tape capacity).  To indicate other units,
use the same abbreviations as for tape capacity.
.LI
The device name of the tape drive.  The format of this name varies with each
operating system.
.LI
The TCID for the Tape Coordinator associated with the drive.  Legal values are
integers from 0 to 1023.
.LE
.P
If you do not know the tape size or EOF mark size for the tape drive, determine
them by using the \*Lfms\*O command described in Section 9.2.2.3.
.LI
.iX "\*Lbak\*O command suite" "\*Laddhost\*O"
Enter the \*Lbak addhost\*O command to define an entry in the Backup Database
for the Tape Coordinator:
.iS
\*C$ \*Lbak addhost -tapehost \*Vmachine\*O [\*L\-tcid \*Vtc_number\*O]
.iE
.LE
.iX "-]" "Tape Coordinators" "adding"
.H 3 "Removing a Tape Coordinator"
.iX "-[" "Tape Coordinators" "removing"
.P
To remove a Tape Coordinator from a Tape Coordinator machine, perform the
following steps on the Tape Coordinator machine:
.AL
.LI
Verify that you are included in the appropriate administrative lists.  If
necessary, issue the \*Lbos lsadmin\*O command to check.
.nL
.ne 20
.LI
Verify that you have the \*Lw\*O (write) permission on the
\*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file.
.LI
Using a text editor, remove the line that defines the Tape Coordinator from
the \*Vdcelocal\*L/var/dfs/backup/TapeConfig\*O file.
.iX "\*Lbak\*O command suite" "\*Lrmhost\*O"
.LI
Enter the \*Lbak rmhost\*O command to delete the entry for the Tape Coordinator
from the Backup Database:
.iS
\*C$ \*Lbak rmhost \*O[\*L\-tcid \*Vtc_number\*O]
.iE
.LE
.iX "-]" "Tape Coordinators" "removing"
.iX "-]" "Backup System" "configuring"
