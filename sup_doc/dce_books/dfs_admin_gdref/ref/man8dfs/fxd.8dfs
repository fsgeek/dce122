...\"
...\"  @OSF_COPYRIGHT@
...\"  COPYRIGHT NOTICE
...\"  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  Copyright (C) 1989, 1991, 1992, 1993 Transarc Corporation
...\"  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\"  src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: fxd.8dfs,v $
...\" Revision 1.1.10.2  1996/09/17  13:21:31  wfl
...\" 	Added editorial changes
...\" 	[1996/09/17  13:21:12  wfl]
...\"
...\" Revision 1.1.10.1  1996/08/20  18:57:24  wfl
...\" 	{enh,13605,R1.2.2}
...\" 	Security enhancement
...\" 	[1996/08/20  18:54:05  wfl]
...\" 
...\" Revision 1.1.8.7  1995/07/24  17:33:09  weir
...\" 	Prentice-Hall corrections
...\" 	[1995/07/24  17:32:18  weir]
...\" 
...\" Revision 1.1.8.6  1995/07/24  14:15:06  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/07/24  14:13:23  buckler]
...\" 
...\" Revision 1.1.8.5  1995/07/13  23:01:14  buckler
...\" 	no change
...\" 	[1995/07/13  22:58:47  buckler]
...\" 
...\" Revision 1.1.8.4  1994/04/28  20:21:35  jeff
...\" 	{defect, 10439, R1.1}
...\" 	Correct cross-references for reorganization of DFS documentation.
...\" 	[1994/04/28  20:19:08  jeff]
...\" 
...\" Revision 1.1.8.3  1993/10/08  15:04:01  weir
...\" 	Inserted Transarc copyright
...\" 	[1993/10/08  14:59:52  weir]
...\" 
...\" Revision 1.1.8.2  1993/08/04  19:00:47  tmw
...\" 	Added index entries for second version of master index.
...\" 	[1993/08/04  18:42:51  tmw]
...\" 
...\" Revision 1.1.6.9  1993/02/20  02:36:39  jeff
...\" 	Fix for defect 7219, review comments.
...\" 	[1993/02/20  02:35:55  jeff]
...\" 
...\" Revision 1.1.6.8  1993/02/04  01:35:26  jeff
...\" 	Fix for defects 6888 and 4016.
...\" 	[1993/02/04  01:34:15  jeff]
...\" 
...\" Revision 1.1.6.7  1993/01/28  02:35:23  dbelch
...\" 	Embedding copyright notice
...\" 	[1993/01/28  00:53:03  dbelch]
...\" 
...\" Revision 1.1.6.6  1993/01/09  18:35:24  jeff
...\" 	Fix for defect 6326, update Ubik and related information.
...\" 	[1993/01/09  18:35:08  jeff]
...\" 
...\" Revision 1.1.6.5  1992/12/21  23:26:18  jeff
...\" 	Fix for defect 6542, improve descriptions of principal and
...\" 	group options.
...\" 	[1992/12/21  23:25:06  jeff]
...\" 
...\" Revision 1.1.6.4  1992/11/06  21:25:43  jeff
...\" 	Fix for defect 4499, add implications of kernel procs and threads.
...\" 	[1992/11/06  21:25:07  jeff]
...\" 
...\" Revision 1.1.6.3  1992/10/29  18:08:52  jeff
...\" 	Fix for defect 1069, remove FileLog file from documentation, and to
...\" 	repair mistakes introduced by PH work.
...\" 	[1992/10/29  18:08:25  jeff]
...\" 
...\" Revision 1.1.6.2  1992/09/10  15:48:43  weir
...\" 	Removed change bar macros; moved into 1.0.2doc tree
...\" 	[1992/09/10  14:26:40  weir]
...\" 
...\" Revision 1.1.4.2  1992/09/08  19:09:51  casey
...\" 	Prentice Hall production
...\" 	[1992/09/08  17:00:32  casey]
...\" 
...\" Revision 1.1.2.5  1992/07/04  15:12:09  jeff
...\" 	Documented that inclusion in the fxd admingroup is not the
...\" 	equivalent of being logged in as root.
...\" 	[1992/07/04  15:11:31  jeff]
...\" 
...\" Revision 1.1.2.4  1992/06/09  21:28:42  jeff
...\" 	Included IBM 1.0.1 review comments.
...\" 	[1992/06/09  16:58:00  jeff]
...\" 
...\" Revision 1.1.2.3  1992/06/06  16:45:45  jeff
...\" 	Updated the file to accurately describe the administrative
...\" 	privileges associated with inclusion in the -admingroup
...\" 	group.
...\" 	[1992/06/06  00:37:57  jeff]
...\" 
...\" Revision 1.1.2.2  1992/05/10  17:54:16  jeff
...\" 	Verified and/or modified italics and other editorial
...\" 	aspects of the file.
...\" 	[1992/05/10  17:38:49  jeff]
...\" 
...\" Revision 1.1  1992/01/29  15:52:25  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
.TH "fxd" "8dfs" "" "" ""
...\"DOCUMENTSTYLE [12pt]{book}
.iX "-[" "\*Lfxd\*O command" 
.iX "-[" "File Exporter" "initializing"
.SH "NAME"
\*Lfxd\*O \- Initializes the File Exporter and starts associated kernel daemons
.SH "SYNOPSIS"
.sS
\*Lfxd -admingroup \*Vgroup\*O [\*L-mainprocs \*Vnumber_of_background_daemons\*O]
.nL
[\*L-tokenprocs \*Vnumber_of_token_daemons\*O] [\*L-hostlife \*Vclient_timeout\*O]
.nL
[\*L-hostrpc \*Vclient_rpc_timeout\*O] [\*L-pollinterval \*Vserver_poll_period\*O]
.zA "enh, 13605, R1.2.2, Security enhancements"
.nL
[\*L-maxlife \*Vmax_hostlife\*O] [\*L-maxrpc \*Vmax_hostrpc\*O] [\*L-notsr\*O] [\*L-minlocalprotectlevel\*O 
.nl
\*Vlevel\*O] [\*L-maxlocalprotectlevel\*O \*Vlevel\*O] [\*L-minremoteprotectlevel\*O \*Vlevel\*O] 
[\*L-maxremoteprotectlevel\*O \*Vlevel\*O] [\*L-verbose\*O] [\*L-help\*O]
.zZ "enh, 13605, R1.2.2, Security enhancements"
.sE
.SH "OPTIONS"
.VL
.LI "\*L-admingroup \*Vgroup\*O"
Specifies the name of the group that can administer the File Exporter on this 
machine.  Members of the specified group can effectively change the permissions,
owner, and owning group of any file system object exported from the machine.  A
group from the local cell can be specified by a full or abbreviated group name
(for example, \*L/.../\*Ecellname\*L/\*Egroup_name\*O or just
\*Egroup_name\*O); a group from a foreign cell can be specified only by a full
group name.  The \*L\-admingroup\*O option performs a function similar to that
of the administrative lists associated with DFS server processes, such as the
Fileset Server and the Fileset Location Server, that run in the user space.
.LI "\*L-mainprocs \*Vnumber_of_background_daemons\*O"
Specifies the number of main kernel processes (File Exporter kernel daemons)
to run on the machine.  These File Exporter kernel daemons are responsible for
receiving and servicing RPC requests for data and tokens from DFS clients.
Specify an integer greater than 0 (zero) to indicate the number of main kernel
daemons to perform these services.  If this option is omitted, four main kernel
daemons perform these services.
.LI "\*L-tokenprocs \*Vnumber_of_token_daemons\*O"
Specifies the number of token-revocation kernel processes (File Exporter kernel
daemons) to run on the machine.  These File Exporter kernel daemons are
responsible for responding to RPCs from DFS clients that are themselves
responding to token revocation requests.  Specify an integer greater than 0
(zero) to indicate the number of kernel daemons to perform these services.  If
this option is omitted, two kernel daemons perform these services.
.nL
.ne 10
.LI "\*L-hostlife \*Vclient_timeout\*O"
Specifies the host lifetime the File Exporter assigns to each client that
contacts it.  The host lifetime is the length of time for which the File
Exporter considers a client to be alive.  Each client must contact the File
Exporter within this amount of time to renew its host lifetime.  As long as a
client's host lifetime has not expired, the File Exporter cannot revoke its
tokens without its permission.
.PP
By default, the File Exporter assigns each client a host lifetime of 2 minutes.
Specify an integer to indicate a number of seconds to serve as the host
lifetime.  The host lifetime must be greater than 0 (zero) and less than or
equal to the maximum host lifetime (specified with the \%\*L-maxlife\*O option)
and the host RPC lifetime (specified with the \%\*L-hostrpc\*O option).
.LI "\*L-hostrpc \*Vclient_rpc_timeout\*O"
Specifies the host RPC lifetime the File Exporter assigns to each client that
contacts it.  The host RPC lifetime is the length of time for which the File
Exporter guarantees to attempt an RPC to a client before it revokes its tokens.
The File Exporter can revoke the tokens of any client whose host RPC lifetime
has expired without contacting the client.
.PP
By default, the File Exporter assigns each client a host RPC lifetime of 2
minutes.  Specify an integer to indicate a number of seconds to serve as the
host RPC lifetime.  The host RPC lifetime must be greater than or equal to the
host lifetime (specified with the \%\*L-hostlife\*O option) and less than or
equal to the maximum host RPC lifetime (specified with the \*L-maxrpc\*O
option).
.LI "\*L-pollinterval \*Vserver_poll_period\*O"
Specifies the polling interval the File Exporter assigns to each client that
contacts it.  The polling interval is the frequency with which each client that
has tokens from the File Exporter is to poll it in the event that it cannot be
reached.  Each client sends an RPC to the File Exporter with this frequency
until it can again contact it.
.PP
By default, the File Exporter assigns each client a polling interval of 3
minutes.  Specify an integer greater than 0 (zero) to indicate a number of
seconds to serve as the polling interval.
.LI "\*L-maxlife \*Vmax_hostlife\*O"
Specifies the maximum host lifetime the File Exporter can grant a client.
A client can request a host lifetime larger than that specified with the
\%\*L-hostlife\*O option, but the File Exporter will not grant a host lifetime
greater than the value specified with this option.
.PP
.ne 10
By default, the File Exporter uses a value of 2 minutes as the maximum host
lifetime.  Specify an integer to indicate a number of seconds to serve as the
maximum host lifetime.  The maximum host lifetime must be greater than or equal
to the host lifetime (specified with the \%\*L-hostlife\*O option) and less than
or equal to the maximum host RPC lifetime (specified with the \*L-maxrpc\*O
option).
.LI "\*L-maxrpc \*Vmax_hostrpc\*O"
Specifies the maximum host RPC lifetime the File Exporter can grant a client.
A client can ask for a host RPC lifetime larger than that specified with the
\%\*L-hostrpc\*O option, but the File Exporter will not grant a host RPC lifetime
greater than the value specified with this option.
.PP
By default, the File Exporter uses a value of 2 minutes as the maximum host
RPC lifetime.  Specify an integer to indicate a number of seconds to serve as
the maximum host RPC lifetime.  The maximum host RPC lifetime must be greater
than or equal to the host RPC lifetime (specified with the \*L-hostrpc\*O
option) and the maximum host lifetime (specified with the \*L-maxlife\*O
option).
.LI "\*L-notsr\*O"
Specifies that the File Exporter is to forego token state recovery when it is
restarted.  If this option is specified, the File Exporter accepts requests
for new tokens as soon as it can again be contacted by clients.  By default, it
provides a brief token state recovery period during which it accepts requests
only to reestablish tokens from clients that held them before it was
restarted. (It bases the duration of its period of token state recovery on the
greater of its \*L\-pollinterval\*O or \*L\-maxlife\*O, plus 20 seconds.)
.PP
\*EThis option is useful primarily for debugging purposes.\*O Use it sparingly,
as it prevents the File Exporter from maintaining consistent token state across
File Server machine restarts.
.zA "enh, 13605, R1.2.2, Security enhancements"
.LI "\*L-minlocalprotectlevel\*O \*Vlevel\*O"
Specifies the minimum acceptable DCE RPC authentication level for
communications between the File Exporter and clients within the
same cell. The \*Vlevel\*O is set either as an integer value between 0 and 6, the complete string defining the authentication level, or an abbreviation of that string. For a description of the various DCE RPC levels, see the Security subsection in the Description section.
.LI "\*L-maxlocalprotectlevel\*O \*Vlevel\*O"
Specifies the maximum acceptable DCE RPC authentication level for
communications between the File Exporter and clients in the local cell. The \*Vlevel\*O is set either as an integer value between 0 and 6, the complete string defining the authentication level, or an abbreviation of that string. For a description of the various DCE RPC levels, see the Security subsection in the Description section.
.LI "\*L-minremoteprotectlevel\*O \*Vlevel\*O"
Specifies the minimum acceptable DCE RPC authentication level for
communications between the File Exporter and clients in foreign cells. The \*Vlevel\*O is set either as an integer value between 0 and 6, the complete string defining the authentication level, or an abbreviation of that string. For a description of the various DCE RPC levels, see the Security subsection in the Description section.
.LI "\*L-maxremoteprotectlevel\*O \*Vlevel\*O"
Specifies the maximum acceptable DCE RPC authentication level for
communications between the File Exporter and clients in foreign cells. The \*Vlevel\*O is set either as an integer value between 0 and 6, the complete string defining the authentication level, or an abbreviation of that string. For a description of the various DCE RPC levels, see the Security subsection in the Description section.
.zZ "enh, 13605, R1.2.2, Security enhancements"
.LI "\*L-verbose\*O"
Directs \*Lfxd\*O to produce more detailed information about its actions
during initialization and as it creates kernel daemons.
.LI "\*L-help\*O"
Prints the online help for this command.  All other valid options specified
with this option are ignored.
.PP
The \*Lhelp\*O and \*Lapropos\*O commands available with all command suites
are also available with the \*Lfxd\*O command.  See the \*Lbos help\*O and
\*Lbos apropos\*O reference pages for examples using these commands.
.LE
.SH "DESCRIPTION"
The \*Lfxd\*O command initializes the File Exporter on a File Server machine
and starts all kernel daemons, such as those for garbage collection, required
by the File Exporter.  During initialization, it also passes the File Exporter
such information as the name of the local cell, information about the local
Fileset Database machines, and the identity of the group that can administer
the File Exporter.  The File Exporter uses this information to communicate with
other processes, such as the Fileset Location (FL) Servers on Fileset Database
machines, and to ensure that only privileged users administer data in filesets
exported from the machine.
.PP
The File Exporter must be run on all machines that export data for use in the
global namespace.  A machine that runs the File Exporter, the Fileset Server
(\*Lftserver\*O process), and the \*Ldfsbind\*O process is considered to be
a DFS File Server machine.  The File Exporter is typically run by adding the
\*Lfxd\*O command to the proper start-up file (\*L/etc/rc\*O or its
equivalent).  The \*Ldfsbind\*O process must be run before the \*Lfxd\*O
process in a start-up file.  The binary file for the \*Lfxd\*O process resides
in \*Edcelocal\*L/bin/fxd\*O.  The process automatically places itself in the
background once its initialization is complete.
.PP
The \*L-mainprocs\*O and \%\*L-tokenprocs\*O options can be used to alter the
default number of kernel daemons running on the server machine, as follows:
.ad l
.ML
.LI
The \%\*L-mainprocs\*O option specifies the number of main kernel daemons that
run on the machine to service RPC requests for data and tokens from DFS
clients.  The default number of main kernel daemons is four, which is usually
sufficient to handle RPC requests from many DFS client machines.  Use the
\%\*L-mainprocs\*O option to increase the number of main kernel daemons dedicated
to servicing RPC requests if the machine is to support a large number of DFS
clients.
.LI
The \%\*L-tokenprocs\*O option specifies the number of kernel daemons dedicated
to responding to RPCs from DFS clients that are themselves responding to token
revocation requests from the File Exporter.  The default number of kernel
daemons dedicated to this task is two.  If the \%\*L-mainprocs\*O option is used
to increase the number of main kernel daemons, use the \%\*L-tokenprocs\*O option
to increase the number of kernel daemons dedicated to handling responses to
token revocation requests accordingly.
.LE
.ad b
.PP
On most system types, these kernel daemons appear as nameless entries in the
output of the \*Lps\*O command (or its equivalent).  However, because some
of the kernel daemons run as threads rather than processes, not all of them
show up in the output of the \*Lps\*O command.
.PP
.ne 10
The \%\*L-admingroup\*O option is used to associate system administrators with
the \*Lfxd\*O process.  Members of the group specified with the
\%\*L-admingroup\*O option have the necessary ACL and UNIX permissions to change
the permissions of any file or directory object exported from the machine. 
They have the equivalent of the ACL \*Lc\*O permission on the objects in each
exported DCE LFS fileset, and they can effectively change the mode bits on the
objects in each exported non-LFS fileset. (To change the permissions on an
object that resides in a lower-level directory of an exported fileset, a
member of the group may need to provide the group with the necessary
permissions on directories in the path that leads to the object.) Members of
the group can also change the owner and owning group of any object exported
from the machine.  Note that, while similar in many respects, inclusion in the
group specified with the \%\*L-admingroup\*O option and being logged in as
\*Lroot\*O are \*Enot\*O equivalent.
.PP
Place only highly trusted users in the group associated with the \*Lfxd\*O
process.  Members of the group generally constitute a subset of the users in
other DFS administrative lists such as the \*Ladmin.bos\*O file.  For
simplified administration, the same group can be specified with the
\*L\-admingroup\*O options of all \*Lfxd\*O commands issued in a domain.
.PP
The \*Lfxd\*O command includes a number of options that affect the File Exporter's
management of tokens.  The following two sections describe only those
token-related issues germane to the \*Lfxd\*O command's options.  Tokens, their
management by the File Exporter, and their benefits and implications are
described in Part 1 of this manual.
.SS "Token Management"
.PP
Token management refers to the File Exporter's use of tokens to synchronize
access to data and metadata on a File Server machine.  The File Exporter uses
tokens to track the clients that have accessed data from the machine and the
types of operations they are permitted to perform on the data.  When a client
wants to access or change data on a File Server machine, it contacts the File
Exporter on the machine to request the necessary tokens for the data.  If the
File Exporter can grant the client the requested tokens, the client in turn
can use the tokens to access the data from the File Exporter.
.PP
Many factors affect the File Exporter's ability to grant a client's request
for tokens.  The File Exporter can always grant requests for tokens that do
not conflict with those already held by another client.  If requested tokens do
conflict with existing tokens held by another client, the File Exporter tries
to revoke the existing tokens.  If it can revoke the existing tokens, it grants
those requested; if it cannot, it either places the request in a queue or
refuses it.  (The choice is the client's.)
.PP
.ne 10
When its tokens are revoked, a client such as the Cache Manager flushes cached
data for which the tokens applied, writing any modified data back to the File
Server machine.  Among the factors that affect the File Exporter's ability to
revoke existing tokens are the various lifetimes it associates with the tokens
it grants and the clients to which it grants them.  The following list briefly
introduces these values, of which the latter two can be modified with options
of the \*Lfxd\*O command:
.VL
.LI "Token lifetime
Specifies the length of time for which a token is valid.  The File Exporter
needs to revoke only valid tokens.  Once a token has expired, the File Exporter
does not need to revoke it; it can simply grant new tokens as if the expired
token did not exist.
.LI "Host lifetime"
Specifies the length of time for which the File Exporter considers a client to
be alive.  A client must contact the File Exporter to renew its host lifetime
before it expires.  As long as a client's host lifetime has not expired, the
File Exporter cannot revoke its tokens without its permission.
.LI "Host RPC lifetime"
Specifies the length of time for which the File Exporter agrees to attempt to
make an RPC to a client before it revokes its tokens.  The client's response to
the RPC renews its host lifetime, meaning the File Exporter cannot revoke its
tokens without its permission.  If the client fails to respond to the RPC but
its host lifetime has not expired, the File Exporter cannot revoke its tokens;
if it fails to respond and its host lifetime has expired, the File Exporter can
revoke any tokens it holds without contacting it further.  The File Exporter
can revoke a client's tokens without contacting it once its host RPC lifetime
has expired.  A client's host RPC lifetime must be at least as long as its host
lifetime.
.LE
.PP
In general, the following rules apply to the File Exporter's revocation of
valid tokens:
.AL
.LI
If the client's host lifetime has not expired, the File Exporter tries to
contact the client; it must have the client's permission to revoke its tokens.
.LI
If the client's host lifetime has expired but its host RPC lifetime has not,
the File Exporter tries to contact the client one time.  If the client responds,
the File Exporter cannot revoke its tokens without its permission; otherwise,
the File Exporter can revoke any tokens held by the client without contacting
it further.
.LI
If the client's host RPC lifetime has expired, the File Exporter can revoke
its tokens without contacting it.
.LE
.PP
The following options of the \*Lfxd\*O command can be used to modify the
lifetimes the File Exporter assigns to its clients.  By default, the File
Exporter use values of 2 minutes for each of these lifetimes.
.VL
.LI "\*L-hostlife\*O"
Specifies each client's default host lifetime.  The \*L-hostlife\*O must be
greater than 0 (zero) and less than or equal to both the \*L-maxlife\*O and
the \*L-hostrpc\*O.
.LI "\*L-maxlife\*O"
Specifies the maximum host lifetime the File Exporter will grant to a client
that asks for one larger than the default specified with the \*L\-hostlife\*O
option.  The \*L\-maxlife\*O must be greater than or equal to the
\*L\-hostlife\*O and less than or equal to the \*L\-maxrpc\*O.
.LI "\*L-hostrpc\*O"
Specifies each client's default host RPC lifetime.  The \*L-hostrpc\*O must be
greater than or equal to the \*L-hostlife\*O and less then or equal to the
\*L-maxrpc\*O.
.LI "\*L-maxrpc\*O"
Specifies the maximum host RPC lifetime the File Exporter will grant to a
client that asks for one larger than the default specified with the
\%\*L-hostrpc\*O option.  The \*L\-maxrpc\*O must be greater than or equal to
both the \*L-maxlife\*O and the \*L-hostrpc\*O.
.LE
.PP
If you use one of these options to modify a default lifetime value, be careful
not to violate any of the dependency rules described in the previous list.  In
some cases, the command can adjust values not modified by the user to ensure
that the dependencies are not violated, as follows:
.ad l
.ML
.LI
If you increase the value of \*L-hostlife\*O without specifying \*L-maxlife\*O,
\*L-hostrpc\*O, or \*L-maxrpc\*O, the command increases the other three values
as necessary.
.LI
If you increase the value of \*L-maxlife\*O without specifying \*L-maxrpc\*O,
the command increases the value of \*L-maxrpc\*O as necessary.
.LI
If you increase the value of \*L-hostrpc\*O without specifying \*L-maxrpc\*O,
the command increases the value of \*L-maxrpc\*O as necessary.
.LI
If you decrease the value of \*L-maxlife\*O without specifying \*L-hostlife\*O,
the command decreases the value of \*L-hostlife\*O as necessary.
.LI
If you decrease the value of \*L-maxrpc\*O without specifying \*L-hostrpc\*O,
the command decreases the value of \*L-hostrpc\*O as necessary.
.LI
If you specify multiple values that explicitly violate one or more of the
dependency rules, the command fails.
.LI
If you specify a value that implicitly violates one or more of the dependency
rules and the command cannot adjust other values to compensate for the
violation, the command fails.
.LE
.ad b
.PP
The command displays an appropriate message if it adjusts a value that was not
specified or if it fails because specified values violate the previously
defined rules.
.SS "Token State Recovery"
.PP
Token state recovery refers to clients regaining their tokens following a
network failure or File Server machine restart.  In either of these situations,
each client that cannot contact the File Exporter polls the File Exporter at
regular intervals.  When it can again reach the File Exporter, the client
attempts to recover tokens it had before it lost contact.  The frequency with
which each client tries to contact the File Exporter in these cases is defined
with the \%\*L-pollinterval\*O option of the \*Lfxd\*O command; by default, each
client polls the File Exporter every 3 minutes.
.PP
In the case of a network failure, a client may be unable to prevent its host
lifetime from expiring before it can again contact the File Exporter.  Once
communication is restored, the client must either reclaim its tokens or
request new ones, as necessary.  The client may need to compete for its tokens
with other clients to which the tokens were granted while it could not reach
the File Exporter.
.PP
In the case of a File Exporter restart, the File Exporter loses all knowledge
of tokens it granted.  For a brief period after it restarts, it refuses all
requests for new tokens from all clients.  During this period, it accepts
requests only to reestablish tokens from those clients that held them before
it was restarted.  The File Exporter gives those clients that held tokens
before it was restarted the chance to recover their tokens without having to
compete with other clients that could request the same tokens.
.PP
The File Exporter bases the length of its period of token state recovery
after a restart on the \*L-maxlife\*O or the \*L-pollinterval\*O, whichever
is greater (it adds 20 seconds to the value it chooses to compensate for its
own initialization time).  The larger of these two values ensures that each
client that had tokens has an opportunity to contact the File Exporter before
the File Exporter accepts requests for new tokens from all clients. (Within
this time, each client will contact the File Exporter either to renew its host
lifetime or to poll the File Exporter.)
.PP
If the File Exporter receives many requests to reestablish tokens just prior
to the end of its token state recovery period, it dynamically extends the
original length of the period.  If many clients continue to contact it during
the extension, the File Exporter continues to extend the period incrementally,
to a maximum of twice its original length.
.PP
(Note that, if a client is restarted for any reason, it loses all knowledge of
the tokens it possessed prior to the restart; recovery of its tokens is not
possible.)
.nL
.SS "Security"
.zA "enh, 13605, R1.2.2, Security enhancements"
The \*L-minlocalprotectlevel\*O, \*L-maxlocalprotectlevel\*O, \*L-minremoteprotectlevel\*O, and \*L\-maxremoteprotectlevel\*O options set the minimum and maximum RPC authentication bounds for communications between the File Exporter and clients. These bounds are used in negotiating an RPC authentication level for communications with clients.  Two sets of bounds are maintained: a set that governs communications with clients within the same cell, and a second set that governs communications with clients in foreign cells.
.PP
In operation, the File Exporter and client (Cache Manager) interact to arrive at
a mutually acceptable authentication level for communications. The
negotiation starts with an RPC using the initial authentication level
sent from the Cache Manager to the File Exporter.  If the initial
authentication level is outside the minimum or maximum bounds set through the \*Lfxd\*O command, the File Exporter returns a response to the Cache
Manager specifying that the authentication level is either too low or too
high.  The Cache Manager then decreases or increases its
authentication level accordingly and retries the RPC.  This process
continues until the Cache Manager either adjusts its RPCs to an
acceptable security level or the File Exporter requests a security level
below the minimum set at the Cache Manager (causing the Cache Manager
to refuse communications with the File Exporter). Once the Cache Manager
and File Exporter have negotiated a security level, the Cache Manager
stores this information so that it does not need to renegotiate this
level for further communications with the File Exporter.
.PP
In addition, administrators can also
set advisory bounds on a per-fileset basis.  At
present, these advisory levels serve only to bias the Cache Manager's
selection of an initial authentication level (they may be enforced in a future version of DFS).  Advisory bounds are set
through the \*Lfts setprotectlevels\*O command and are stored in the FLDB record for that fileset.
.PP
Note that the use of this command does not preclude communications with 
File Servers running earlier versions of DFS.  
.PP
The various authentication levels are set by specifying either an integer value between
0 and 6, a complete string specifying the authentication level, or an abbreviation of that string as the \*Vlevel\*O argument for the various command options.  The 
following lists the various authentication levels:
.ad l
.ML
.LI
\*Lrpc_protect_level_default\*O or \*Ldefault\*O or \*L0\*O: Use the DCE default authentication level.
.LI 
\*Lrpc_protect_level_none\*O or \*Lnone\*O or \*L1\*O: Perform no authentication.
.LI 
\*Lrpc_protect_level_connect\*O or \*Lconnect\*O or \*L2\*O: Authenticate only when the Cache Manager establishes a 
connection with the File Server.
.LI 
\*Lrpc_protect_level_call\*O or \*Lcall\*O or \*L3\*O: Authenticate only at the beginning of each RPC received.
.LI 
\*Lrpc_protect_level_pkt\*O or \*Lpkt\*O or \*L4\*O: Ensure that all data received is from the expected host.
.LI 
\*Lrpc_protect_level_pkt_integrity\*O or \*Lpkt_integrity\*O or \*L5\*O: Authenticate and verify that none of the data transferred has been modified.
.LI
\*Lrpc_protect_level_pkt_privacy\*O or \*Lpkt_privacy\*O or \*L6\*O: Perform authentication as specified by all of the previous levels and also encrypt each RPC argument value.
.LE 
.ad b
.PP
Note that there is a trade-off between selecting higher security and 
performance.  The higher levels of security require more overhead and 
increase the response time in file operations with File Servers.
.PP
The default values of the File Exporter and Cache Manager are such that, if they are not changed, the File Exporter and Cache Manager will negotiate to the packet integrity level. The default File Exporter values are as follows: 
.PP
.ML
.LI
The default minimum authentication level for communications with clients in the local cell is set to none.
.LI
The default maximum authenticationn level for communications with clients in the local cell is set to packet privacy.
.LI
The default minimum authentication level for communications with clients in foreign cells is set to none.
.LI
The default maximum authentication level for communications with clients in foreign cells is set to packet privacy.
.LE
The default Cache Manager settings are as follows:
.ML
.LI
The default initial authentication level for communications with File Exporters in the local cell is set to packet integrity.
.LI
The default minimum authentication level for communications with File Exporters in the local cell is set to none.
.LI
The default initial authentication level for communications with File Exporters in foreign cells is set to packet integrity.
.LI
The default minimum authentication level for communications with File Exporters in foreign cells is set to packet.
.LE
.PP
Given that both Cache Manager default initial authentication levels are set to packet integrity and that this level is within the default bounds set at the File Exporter, the default authentication level is therefore packet integrity. If you set the minimum bound at the File Exporter higher than packet integrity, any Cache Managers from a version of DFS previous to 1.2.2 will not be able to communicate with that File Exporter.
.PP
.zZ "enh, 13605, R1.2.2, Security enhancements" 
.SS "Privilege Required"
.PP
The issuer must be logged in as \*Lroot\*O on the local machine.
.SH "CAUTIONS"
If you restart the File Exporter with the \*Lfxd\*O command's \*L-notsr\*O
option, the File Exporter does not enter token state recovery; clients do not
have a protected opportunity to reestablish their tokens after the restart.
Similarly, if you restart the File Exporter using different values for the
command's lifetime or polling interval values, the File Exporter may not remain
in token state recovery long enough to provide all clients an opportunity to
reestablish their tokens after it is restarted.  (Until they reestablish
contact with the File Exporter, clients continue to use the previous lifetime
and polling interval values, which may be too long if the File Exporter is
directed to use shorter values when it is restarted.)
.PP
.zA "enh, 13605, R1.2.2, Security enhancements"
If you set the minimum RPC authentication level for communications with clients in either local or foreign cells to higher than packet integrity, the affected clients that are running a version of DFS previous to 1.2.2 will not be able to communicate with the File Exporter. 
.zZ "enh, 13605, R1.2.2, Security enhancements"
.SH "OUTPUT"
The command sends error messages to standard error output (\*Lstderr\*O) if
problems are encountered during initialization.  It also displays error messages
if you specify values for its lifetime-related options that violate the
dependencies mentioned in the section on Token Management.  Finally, it displays
warning messages if it adjusts one or more of its lifetime values to compensate
for an option you specify.
.SH "EXAMPLES"
The following line, entered in the appropriate initialization file
(\*L/etc/rc\*O or its equivalent) on a File Server machine, starts the
\*Lfxd\*O process on the local machine.  The \*Lcell_fileset\*O group is
specified as the administrative group for the File Exporter on the machine.
The \*Ldfsbind\*O process must be run before the \*Lfxd\*O process in a
start-up file.
.iS
\*Cfxd -admin cell_fileset\*O
.iE
.PP
The previous command line can be modified as follows to increase the host RPC
lifetime, maximum host lifetime, and maximum host RPC lifetime associated with
the File Exporter:
.iS
\*Cfxd -admin cell_fileset -hostrpc 180 -maxlife 240\*O
.iE
.PP
These options change the File Exporter's lifetime values, as follows:
.ad l
.ML
.LI
The \%\*L-hostrpc\*O option explicitly increases the host RPC lifetime to 3
minutes.
.LI
The \%\*L-maxlife\*O option explicitly increases the maximum host lifetime to
4 minutes.  It also causes the command to implicitly increase the maximum host
RPC lifetime to 4 minutes. (Note that, had the \%\*L-maxlife\*O option been
omitted, the command would have implicitly increased the maximum host RPC
lifetime to 3 minutes to match the increase to the host RPC lifetime.)
.LE
.ad b
.SH "RELATED INFORMATION"
.ad l
Commands:
\*Ldfsbind(8dfs)\*O,
\*Lftserver(8dfs)\*O
\*Lfts_setprotectlevels(8dfs)\*O.
.ad b
.iX "-]" "\*Lfxd\*O command" 
.iX "-]" "File Exporter" "initializing"

