...\"
...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\"  Copyright (C) 1989, 1991, 1992, 1993 Transarc Corporation
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: salvage.8dfs,v $
...\" Revision 1.1.8.8  1995/07/24  14:15:10  buckler
...\" 	1.1 edits and Prentice Hall reformat
...\" 	[1995/07/24  14:13:29  buckler]
...\"
...\" Revision 1.1.8.7  1995/07/13  23:01:19  buckler
...\" 	no change
...\" 	[1995/07/13  22:58:53  buckler]
...\" 
...\" Revision 1.1.8.6  1994/08/23  19:49:30  jeff
...\" 	Editorial changes.
...\" 	[1994/08/23  19:45:41  jeff]
...\" 
...\" Revision 1.1.8.5  1994/08/16  20:24:31  jeff
...\" 	Small editorial tweaks.
...\" 	[1994/08/16  20:23:47  jeff]
...\" 
...\" Revision 1.1.8.4  1994/05/19  20:42:24  jeff
...\" 	{defect, 8118, R1.1}
...\" 	Correct use of double quotes.
...\" 	[1994/05/19  20:41:52  jeff]
...\" 
...\" Revision 1.1.8.3  1993/10/08  15:04:10  weir
...\" 	Inserted Transarc copyright
...\" 	[1993/10/08  14:59:58  weir]
...\" 
...\" Revision 1.1.8.2  1993/08/04  19:01:34  tmw
...\" 	Added index entries for second version of master index.
...\" 	[1993/08/04  18:46:05  tmw]
...\" 
...\" Revision 1.1.6.5  1993/02/04  01:42:34  jeff
...\" 	Fix for defects 7023, 6960, 6837, and 4013.
...\" 	[1993/02/04  01:41:20  jeff]
...\" 
...\" Revision 1.1.6.4  1993/01/28  02:35:35  dbelch
...\" 	Embedding copyright notice
...\" 	[1993/01/28  00:53:22  dbelch]
...\" 
...\" Revision 1.1.6.3  1992/12/03  09:42:22  jeff
...\" 	Fix for defect 5383, correct aggregate command privileges.
...\" 	[1992/12/03  09:42:04  jeff]
...\" 
...\" Revision 1.1.6.2  1992/09/10  15:49:40  weir
...\" 	Removed change bar macros; moved into 1.0.2doc tree
...\" 	[1992/09/10  14:29:40  weir]
...\" 
...\" Revision 1.1.4.2  1992/09/08  19:10:40  casey
...\" 	Prentice Hall production
...\" 	[1992/09/08  17:01:12  casey]
...\" 
...\" Revision 1.1.2.4  1992/07/02  19:21:00  jeff
...\" 	Corrected ACL permissions and small editorial stuff.
...\" 	[1992/07/02  19:19:42  jeff]
...\" 
...\" Revision 1.1.2.3  1992/05/20  19:52:39  jeff
...\" 	Corrected referenced OT defect number (3369 to 3669).
...\" 	[1992/05/20  19:31:17  jeff]
...\" 
...\" 	Modified existing text and added new text to document the
...\" 	command's new -norecover and -nosalvage options and their
...\" 	functionality.
...\" 	[1992/05/20  19:24:57  jeff]
...\" 
...\" Revision 1.1.2.2  1992/05/10  17:52:12  jeff
...\" 	Verified and/or modified italics and other editorial
...\" 	aspects of the file.
...\" 	[1992/05/10  17:46:55  jeff]
...\" 
...\" Revision 1.1  1992/01/29  15:54:30  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\" CHANGED
...\" 12-09-91:  In RELATED INFORMATION section, changed SalvageLog(8dfs) to
...\"            SalvageLog(4dfs).
...\" END CHANGED
.TH "salvage" "8dfs" "" "" ""
...\"DOCUMENTSTYLE [12pt]{book}
.iX "-[" "\*Lsalvage\*O command"
.iX "-[" "Salvager" "invoking"
.iX "-[" "aggregates" "repairing structure"
.iX "-[" "aggregates" "analyzing structure"
.SH "NAME"
\*Lsalvage\*O \- Uses the DFS Salvager to recover, verify, or salvage the
structure of a DCE LFS aggregate
.SH "SYNOPSIS"
.sS
\*Lsalvage -aggregate \*Ename\*O [\*L-recoveronly\*O] [{\*L-verifyonly\*O |
\*L-salvageonly\*O}] [\*L-force\*O]
.nL
[\*L-verbose\*O] [\*L-help\*O]
.sE
.SH "OPTIONS"
.VL
.LI "\*L-aggregate \*Vname\*O"
Specifies the device name or aggregate name of the DCE LFS aggregate to be
verified, recovered, or salvaged.  These names are specified in the first and
second fields of the entry for the aggregate in the
\*Edcelocal\*L/var/dfs/dfstab\*O file.
.LI "\*L-recoveronly\*O"
Directs the Salvager to recover the specified aggregate.  The Salvager replays
the log of metadata changes that resides on the aggregate.  See the Description
section for information about using and combining the command's options.
.LI "\*L-verifyonly\*O"
Directs the Salvager to verify the specified aggregate.  The Salvager examines
the structure of the aggregate to determine if it contains any inconsistencies,
reporting any that it finds.  See the Description section for information about
using and combining the command's options.
.LI "\*L-salvageonly\*O"
Directs the Salvager to salvage the specified aggregate.  The Salvager attempts
to repair any inconsistencies it finds on the aggregate.  See the Description
section for information about using and combining the command's options.
.LI "\*L-force\*O"
Executes the Salvager in noninteractive mode.  By default, the Salvager prompts
for confirmation before proceeding in certain situations (for example, if it
believes an aggregate on which it is run may be a nonLFS partition).  Use this
option to direct the Salvager to proceed with all operations without asking
whether it should continue.  Use this option with care; the Salvager's changes
can be unpredictable if this option is used with an invalid aggregate.
.LI "\*L-verbose\*O"
Directs the Salvager to produce detailed information about the aggregate as it
executes.  The information is useful primarily for debugging purposes.  It is
displayed on standard output (which can be redirected).  Use this option alone
or with any combination of the available options.
.LI "\*L-help\*O"
Prints the online help for this command.  All other valid options specified with
this option are ignored.
.PP
The \*Lhelp\*O and \*Lapropos\*O commands available with all command suites
are also available with the \*Lsalvage\*O command.  See the \*Lbos help\*O and
\*Lbos apropos\*O reference pages for examples using these commands.
.LE
.SH "DESCRIPTION"
The \*Edcelocal\*L/bin/salvage\*O command invokes the DFS Salvager on the DCE
LFS aggregate specified with the \*L\-aggregate\*O option.  Following a system
restart, the Salvager employs the DCE LFS log mechanism to return consistency
to a file system by running recovery on the aggregate on which the file system
resides.  Recovery is the replaying of the log on the aggregate; the log records
all changes made to metadata as a result of operations such as file creation
and deletion.  If problems are detected in the basic structure of the aggregate,
if the log mechanism is damaged, or if the storage medium of the aggregate is
suspect, the \*Lsalvage\*O command must be used to verify or repair the
structure of the aggregate.
.PP
Use the command's \*L-recoveronly\*O, \*L-verifyonly\*O, and \*L-salvageonly\*O
options to indicate the operations the Salvager is to perform on the specified
aggregate, as follows:
.ad l
.ML
.LI 
Specify the \%\*L-recoveronly\*O option
to run recovery on the aggregate without attempting to find or repair any
inconsistencies found on it.  Recovery is the replaying of the log on the
aggregate.  Use this option to quickly return consistency to an aggregate that
does not need to be salvaged; this represents the normal production use of the
Salvager.  Unless the contents of the log or the physical structure of the
aggregate is damaged, replaying the log is an effective guarantee of a file
system's integrity.
.LI 
Specify the \%\*L-verifyonly\*O option
to determine whether the structure of the aggregate contains any
inconsistencies without running recovery or attempting to repair any
inconsistencies found on the aggregate.  Use this option to assess the extent
of the damage to an aggregate.  The Salvager makes no modifications to an
aggregate during verification.  Note that it is normal for the Salvager to
find errors when it verifies an aggregate that has not been recovered; the
presence of an unrecovered log on an aggregate makes the findings of the
Salvager, positive or negative, of dubious worth.
.nL
.ne 15
.LI 
Specify the \*L-recoveronly\*O and \%\*L-verifyonly\*O options
to run recovery on the aggregate and then analyze its structure without
attempting to repair any inconsistencies found on it.  Use these options if
you believe replaying the log can return consistency to the aggregate, but
you want to verify the consistency of the aggregate after recovery is run.
Recovering an aggregate and then verifying its structure represents a cautious
application of the Salvager.
.LI 
Specify the \%\*L-salvageonly\*O option
to attempt to repair any inconsistencies found in the structure of the
aggregate without first running recovery on it.  Use this option if you believe
the log is damaged or replaying the log will not return consistency to the
aggregate and may in fact further damage it.  Under normal circumstances, do not
salvage an aggregate without first recovering it.
.LI 
Omit the \*L-recoveronly\*O, \*L-verifyonly\*O, and \%\*L-salvageonly\*O options
to run recovery on the aggregate and then attempt to repair any inconsistencies
found in the structure of the aggregate.  Because recovery eliminates
inconsistencies in an undamaged file system, an aggregate is typically
recovered before it is salvaged.  In general, it is good first to recover and
then to salvage an aggregate if a machine panics or experiences a hardware
failure.
.PP
Omit these three options if you believe the log should be replayed before
attempts are made to repair any inconsistencies found on the aggregate.
(Omitting the three options is equivalent to specifying the \*L-recoveronly\*O
and \*L\-salvageonly\*O options.)
.LE
.ad b
.PP
The following rule summarizes the interaction of the \*L-recoveronly\*O,
\*L-verifyonly\*O, and \*L\-salvageonly\*O options: The \*Lsalvage\*O command
runs recovery on an aggregate and attempts to repair it \*Eunless\*O one of
the three options is specified; once one of these options is specified, you
must explicitly request any operation you want the Salvager to perform on the
aggregate.
.PP
The basic function of the Salvager is similar to that of the UNIX \*Lfsck\*O
program.  The Salvager recovers a DCE LFS aggregate and repairs problems it
detects in the structure of the aggregate.  It does not verify or repair the
format of user data contained in files on the aggregate.  If it makes changes,
the Salvager displays the pathnames of the files affected by the modifications,
when the pathnames can be determined.  The owners of the files can then verify
the files' contents, and the files can be restored from backups if necessary.
.PP
.ne 10
The Salvager verifies the structure of an aggregate by examining all of the
anodes, directories, and other metadata in each fileset on the aggregate.  An
anode is an area on the disk that provides information used to locate data
such as files, directories, ACLs, and other types of file system objects.  Each
fileset contains an arbitrary number of anodes, all of which must reside on
the same aggregate.  By following the links between the various types of anodes,
the Salvager can determine whether the organization of an aggregate and the
filesets it contains is correct and make repairs if necessary.
.PP
Not all aggregates can be salvaged.  In cases of extensive damage to the
structure of the metadata on an aggregate or damage to the physical disk that
houses an aggregate, the Salvager cannot repair inconsistencies.  Also, the
Salvager cannot verify or repair damage to user data on an aggregate.  The
Salvager cannot detect problems that modified the contents of a file but did
not damage the structure of an aggregate or change the metadata of the
aggregate.
.PP
Like the UNIX \*Lfsck\*O command, the Salvager analyzes the consistency of
an aggregate by making successive passes through the aggregate.  With each
successive pass, the Salvager examines and extracts a different type of
information from the blocks and anodes on the aggregate.  Later passes of the
Salvager use information found in earlier passes to help in the analysis.
.PP
Unlike the \*Lfsck\*O command, the Salvager does not normally prompt for
additional information as it executes.  It typically performs the requested
operation without prompting for input or pausing to verify any changes before
it makes them.  It prompts for confirmation only in the following cases:
.ad l
.ML
.LI
It believes the specified aggregate does not contain a DCE LFS file system.
This can occur if it finds a nonLFS superblock whose creation time is more
recent than the creation time of the DCE LFS superblock.
.LI
It finds that the size of the aggregate recorded in the DCE LFS superblock
exceeds the capacity of the partition on which the aggregate resides.
.LE
.ad b
.PP
At the prompt, you can choose to cancel or continue the operation.  If you
continue the operation under either of these circumstances and the aggregate
proves to be invalid, unpredictable results can ensue.  The best response in
either case is to cancel the operation and attempt to determine the cause of
the problem.
.PP
If you are confident that you want the Salvager to continue in any case, you
can include the \*L\-force\*O option with the command.  This option directs the
Salvager to perform the requested operation without prompting for confirmation.
Exercise caution when using the \%\*L-force\*O option; the Salvager can produce
unpredictable results if this option is used with an invalid aggregate.
.PP
.ne 10
In general, the Salvager exits with an error code of at least \*L16\*O without
analyzing a partition that it is sure is not a DCE LFS aggregate.  It also
exits with an error code of \*L16\*O if an aggregate to be recovered or salvaged is
currently exported to the global namespace, or if a fileset on the aggregate
to be recovered or salvaged is mounted locally. (If necessary, you can use the
\*Ldfsexport\*O command to detach an exported aggregate from the namespace.)
.PP
As the Salvager executes, it maintains a number of internal lists.  Each list
consists of anodes that failed verification in specific ways.  When it initially
scans an aggregate, the Salvager marks as "unsafe" anodes with which it
encounters problems.  The Salvager later attempts to determine the actual
pathnames associated with these anodes to include the pathnames in the lists.
When it has finished salvaging, the Salvager displays any nonempty lists.  It
also returns one of a number of informative exit codes, depending on the
inconsistencies it found and the repairs it made.  More information about the
lists and exit codes displayed by the Salvager appears later in this reference
page.
.PP
Internal structures maintained by the Salvager require a minimum of 1 megabyte
of swap space.  However, the total amount of swap space required by the Salvager
depends largely on the size of the aggregate being salvaged and the extent of
the damage to the aggregate.
.SS "Privilege Required"
.PP
The privileges required depend on whether the \*L-recoveronly\*O,
\*L-verifyonly\*O, or \*Lsalvageonly\*O option is specified with the command:
If just the \%\*L-verifyonly\*O option is included, the issuer needs only the
read permission for the specified device (aggregate); if the \*L-recoveronly\*O
or \%\*L-salvageonly\*O option is included, or if all three of these options are
omitted, the issuer must have both the read and write permissions for the
specified device.  An issuer who is logged in as \*Lroot\*O on the machine on
which the specified device resides always has the necessary privilege to issue
the command.
.SH "CAUTIONS"
The Salvager can be used to salvage only DCE LFS aggregates.  If it is executed
on a nonLFS partition, it exits with an error code of at least \*L16\*O without
performing any operations.  Use the UNIX \*Lfsck\*O program or its equivalent
to verify or restore consistency to nonLFS disk partitions.
.PP
By default, the Salvager asks for confirmation before proceeding with
operations on aggregates that it suspects are nonLFS partitions or whose
indicated sizes exceed the capacities of the partitions on which they reside.
The command's \%\*L-force\*O option can be used to direct the Salvager to
continue without prompting in these cases.  Do not include the \*L-force\*O
option under normal conditions; the Salvager can make undesirable changes if
the option is used with an invalid aggregate.
.PP
.ne 10
If the Salvager is used to recover or salvage an aggregate that is currently
exported, it exits with an error code of \*L16\*O without performing the operation.
Use the \*Ldfsexport\*O command to detach an aggregate from the global
namespace if necessary before recovering or salvaging it. (The Salvager can
be used to verify the structure of a currently exported aggregate, but this
is not a good practice; the results may be misleading.) The Salvager also
exits with an error code of \*L16\*O if a fileset on an aggregate to be recovered
or salvaged is mounted locally.
.SH "OUTPUT"
The Salvager sends output to both \*Lstdout\*O and \*Lstderr\*O.  When it is
started, the Salvager displays the device name of the aggregate on which it is
run and the operation it is to perform.  For example, the Salvager displays the
following message if it is directed to recover an aggregate:
.oS
\*CWill run recovery on \*Edevice\*O
.oE
.PP
Similarly, the Salvager displays the following message if it is directed to
verify an aggregate:
.oS
\*CVerifying \*Vdevice\*O
.oE
.PP
If you specify the \%\*L-verbose\*O option with the command, the Salvager
generates the following information about the aggregate:
.ad l
.ML
.LI
Physical information about the configuration of the aggregate
.LI
Header information from the aggregate, including the major and minor number of
the device on which the aggregate was created, and the date and time at which
the aggregate was created
.LI
Information about how space in the aggregate is allocated, including 
.ML
.LI
The total size of the aggregate in blocks
.LI
The block size
.LI
The fragment size
.LI
The number of the first block in the aggregate
.LI
The location of the principal superblock for the aggregate
.LI
The number of logical blocks in the aggregate
.LE
.LE
.ad b
.PP
.ne 15
If you use the Salvager to recover an aggregate and the log on the aggregate
does not need to be replayed, the Salvager displays only the introductory
message described previously.  If the log does need to be replayed and the
Salvager can successfully recover the aggregate, the Salvager displays the
following messages:
.oS
\*CRecovery statistics\*O
\*C \ \ \*Estatistics\*O
\*CRan recovery on \*Edevice\*O
.oE
In the output, \*Estatistics\*O consists of a few lines of information about
the log and its replaying, and \*Edevice\*O is the device name of the
aggregate.  If it cannot run recovery for any reason, the Salvager displays an
appropriate exit code.  (All Salvager exit codes are listed at the end of this
section.)
.PP
The Salvager can display much more output if it is asked to verify or salvage
an aggregate on which it finds metadata errors.  As it verifies or salvages a
damaged aggregate, it displays a message similar to the following for each
fileset in which it encounters metadata problems:
.oS
\*CIn volume \*Efileset\*C (avl #\*Einteger\*C)\*O
\*C \ \ in anode (#\*Einteger\*C)\*O
\*C \ \ \ \ \ \*Edescription\*O
.oE
.PP
It displays the first line once for each fileset, repeating the second and
third lines once for each problem anode in the fileset.  The output provides
the following information:
.VL
.LI "\*Efileset\*O"
The name and ID number of each affected fileset.
.LI "\*Lavl #\*Einteger\*O"
A pointer to the anode for the fileset.
.LI "\*Lin anode (#\*Einteger\*L)\*O"
A pointer to the anode for a file or other object in the fileset.
.LI "\*Edescription\*O"
A brief description of the problem the Salvager found with the anode.  If it
was used to salvage the aggregate, the Salvager also describes any actions it
took to repair the anode.
.LE
.PP
When it has finished executing, the Salvager lists each file whose metadata
it found to be damaged, many of which it likely repaired if it salvaged the
aggregate.  For each file, it displays a line of the form
.oS
\*Econdition\*O \ \ \*Efileset\*C:\*Epathname\*C volume index: \*Einteger\*C anode index: \*Einteger\*O
.oE
.P
The output provides the following information:
.VL
.LI "\*Econdition\*O"
A string that describes the state of the file or its metadata. (Information
about the possible conditions follows this list.)
.LI "\*Efileset\*O"
The name of the fileset in which the affected file resides.  In some cases, the
Salvager cannot determine the fileset name.
.LI "\*Epathname\*O"
The pathname of the file, relative to the root directory of the fileset.  In
some cases, the Salvager cannot reconstruct the pathname for a file.
.LI "\*Lvolume index\*O"
A pointer to the anode for the fileset. (This information can be used to
identify earlier message displayed by the Salvager that are related to this
file.)
.LI "\*Lanode index\*O"
A pointer to the anode for the file. (This information can be used to identify
earlier message displayed by the Salvager that are related to this file.)
.LE
.P
The following conditions accompany the files most in need of attention:
.VL
.LI "\*LoughtRestore\*O"
Files in which one or more block references in the associated anode were
removed or changed.  Because it is unlikely such files contain all of their
original data, these files should be restored from existing backups.  This
condition applies only to files on salvaged aggregates.
.LI "\*LmayRestore\*O"
Files to which modifications were made (for example, files whose ACLs or
property lists were changed).  The owners of these files should verify their
contents, or a system administrator should simply restore them from backups if
a directory listing indicates that they have not been modified since the last
backup was made.  This condition also applies only to files on salvaged
aggregates.
.LI "\*LzeroLinkCnt\*O"
Files whose link counts should be 0 (zero).  These files were deleted but not
closed when the system crashed or were orphaned by the Salvager as it made
repairs to the file system.  The system will delete them when the aggregate is
exported.
.LI "\*LbadLinkCnts\*O"
Files whose link counts were inconsistent with the number of references found
to them.  These files should be examined, if possible, or simply restored.
.LE
.PP
The Salvager can list a file more than once if it determines that multiple
conditions apply to the file.  It can also display one or more additional
conditions (such as \*LbadAcls\*O or \*LbadPlists\*O), but files with which
the additional conditions are associated are typically already covered by one
or more of the conditions just described.  Information in the additional lists
is useful primarily for debugging purposes.
.PP
The Salvager also returns one of various exit codes to summarize its actions
and findings.  It returns the exit codes in the form of bits, which it uses to
indicate the state of the aggregate.  It can set multiple bits, but, in general,
the higher the bit, the greater the severity of the aggregate's problems.  (The
higher bit always takes precedence when interpreting the output.)  The Salvager
can return the following exit codes:
.VL
.LI "All bits off"
The Salvager found no problems.  It displays a message that includes \*LDone\*O
and \*LChecks out\*O.  The command need not be run again.
.LI "First bit (\*L0x1\*O) set"
The Salvager found one or more problems.  It displays a message that includes
\*LDone\*O and \*LSome inconsistencies found\*O.  Run the command on the
aggregate without the \%\*L-verifyonly\*O option to attempt to correct the
problems.
.LI "Second bit (\*L0x2\*O) set"
The Salvager found one or more problems and fixed them.  It displays a message
that includes \*LDone\*O and \*LSome inconsistencies repaired\*O.  The command
need not be run again. (Note that if the second bit is set, the first bit is
usually also set; because the higher bit takes precedence, you do not need to
run the command again.)
.LI "Third bit (\*L0x4\*O) set"
The Salvager found one or more problems and fixed some of them.  It displays a
message that includes \*LIncomplete\*O and \*LSome repairs made\*O.  Some
problems were more severe and require a subsequent salvage to be repaired; run
the command on the aggregate without the \*L\-verifyonly\*O option to attempt
to correct the problems.
.LI "Fourth bit (\*L0x8\*O) set"
The Salvager found the aggregate to be irreparably damaged.  It displays a
message that begins \*LProblem\*O.  Use the \*Lnewaggr\*O command to
reinitialize the aggregate, and reconstruct the data from existing backups if
possible.
.LI "Fifth bit (\*L0x10\*O) set"
The Salvager found some serious problem that prevents it from running on the
aggregate; for example, the attempted recovery of the aggregate failed because
of damage to the log, or the attempted salvage of the aggregate failed because
the aggregate is not a DCE LFS aggregate, it is currently exported, or it
contains a locally mounted fileset.  The Salvager displays a message that
begins \*LProblem\*O.  Attempt to determine the cause of the problem.
.LE
.PP
Including the \%\*L-verbose\*O option with the command produces more detailed
information about the aggregate as the command executes.  However, the
additional information is useful primarily for debugging purposes.
.SH "EXAMPLES"
The following command instructs the Salvager to recover the DCE LFS aggregate
whose device name is \*L/dev/lv01\*O.  This example represents the most-common
application of the Salvager.
.iS
\*C# \*Lsalvage /dev/lv01 -recover\*O
.iE
.PP
The following command instructs the Salvager to analyze the structure of the
aggregate to determine if it contains any inconsistencies without running
recovery or attempting to repair the inconsistencies:
.iS
\*C# \*Lsalvage /dev/lv01 -verify\*O
.iE
.PP
The following command directs the Salvager to repair any inconsistencies it
finds on the aggregate without first running recovery:
.iS
\*C# \*Lsalvage /dev/lv01 -salvage\*O
.iE
.SH "RELATED INFORMATION"
.ad l
Commands:
\*Ldfsexport(8dfs)\*O,
\*Lnewaggr(8dfs)\*O.
.ad b
.PP
Files:
\*Ldfstab(4dfs)\*O.
.iX "-]" "\*Lsalvage\*O command"
.iX "-]" "Salvager" "invoking"
.iX "-]" "aggregates" "repairing structure"
.iX "-]" "aggregates" "analyzing structure"
