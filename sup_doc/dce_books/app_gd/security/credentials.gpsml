...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: credentials.gpsml,v $
...\" Revision 1.1.5.1  1996/03/27  13:53:07  wardr
...\" 	{edit R1.2.1}
...\" 	More Release Edits
...\" 	[1996/03/27  13:52:40  wardr]
...\"
...\" Revision 1.1.2.5  1995/06/07  14:40:49  rcb
...\" 	PRENTICE HALL reformat; final edits and changes
...\" 	[1995/06/05  19:59:45  rcb]
...\" 
...\" 	PRENTICE HALL reformat; small changes
...\" 	[1995/05/08  21:15:46  rcb]
...\" 
...\" 	PRENTICE HALL reformat
...\" 	[1995/05/08  19:23:21  rcb]
...\" 
...\" 	incorporated 1.1 edits
...\" 	[1995/05/08  19:14:58  rcb]
...\" 
...\" Revision 1.1.2.4  1994/10/21  14:18:26  jshirley
...\" 	Removed a 'TBD' and fixed page format problem.
...\" 	[1994/10/21  14:18:15  jshirley]
...\" 
...\" Revision 1.1.2.3  1994/09/07  21:41:58  rjohnson
...\" 	Changes made: Fixed table-formatting problems.
...\" 	[1994/09/07  21:41:30  rjohnson]
...\" 
...\" Revision 1.1.2.2  1994/06/13  18:20:46  devobj
...\" 	cr10872- fix copyright
...\" 	[1994/06/13  18:18:25  devobj]
...\" 
...\" Revision 1.1.2.1  1994/05/09  10:56:29  rjohnson
...\" 	Changes made: New GSSAPI chapter, R1.1.
...\" 	File name: app_gd/security/credentials.gpsml
...\" 	[1994/05/05  20:07:50  rjohnson]
...\" 
...\" $EndLog$ 
.H 1 "GSSAPI Credentials"
.iX "credentials" "GSSAPI"
.PP
A GSSAPI \*Vcredential\*O is a data structure that provides proof of an
application's claim to a principal name.  An application uses a
credential to establish its global identity.  The global identity can be,
but is not necessarily, related to the local user name under which the
application (either the initiator or the acceptor) is running.
.PP
.iX "credentials" "and principal types"
A credential can consist of either of the following: 
.ML
.LI
DCE login context
.LI
Principal name 
.LE
.PP
There are three types of credentials, as shown in Table 26-1.
.iX "credentials" "types"
.iX "credentials" "\*LACCEPT\*O credential type"
.iX "credentials" "\*LBOTH\*O credential type"
.iX "credentials" "\*LINITIATE\*O credential type"
.iX "\*LACCEPT\*O credential type" "defined"
.iX "\*LBOTH\*O credential type" "defined"
.iX "\*LINITIATE\*O credential type" "defined"
.PP
.ne 4i
.TB "Credential Types"
.na
.TS
center allbox tab(@);
lb | lb
lb | lw(3.5i).
Credential@Content
_
INITIATE@T{
A login context only.  This credential identifies applications
that only initiate security contexts.
T}
ACCEPT@T{
Principal name and an associated entry key table.  This credential
identifies applications that only accept security contexts.
T}
BOTH@T{
A login context and principal name with a key table entry.  This
credential identifies applications that can either initiate or accept
security contexts.
T}
.TE
.ad
.sp .5
.PP
Credentials are maintained internally to GSSAPI.  When they 
establish a security context, applications use
credential handles to point to the credentials they need.
.PP
When an application initiates or accepts a security context, it can use
GSSAPI routines with either a default credential or a specific credential
handle.  This chapter discusses how applications do the following:
.ML
.LI
Use default credentials
.LI
Create credential handles to refer to specific credentials
.LI
Delegate credentials
.LE
.PP
For detailed information on the GSSAPI routines referred to in this
chapter, see the \*(Dr.
.H 2 "Using Default Credentials" 
.iX "credentials" "default"
.iX "-: credentials" "default credentials"
.iX "credentials" "portability of applications and"
.PP
A \*Vdefault credential\*O is a credential that is 
.ML
.LI
Generated by either of the following routines:
.ML
.LI
\*Lgss_init_sec_context(\|)\*O 
.LI
\*Lgss_accept_sec_context(\|)\*O 
.LE
.LI
Based on the following information:
.ML
.LI
The DCE default login context for the application (for \*LINITIATE\*O type
credentials)
.LI
The registered principal name in the token (for \*LACCEPT\*O or \*LBOTH\*O type
credentials).
.LE
.PP
When an application calls the GSSAPI routine to either initiate
(\*Lgss_init_sec_context(\|)\*O) or accept (\*Lgss_accept_sec_context(\|)\*O) a
security context, it can specify the use of its default credential.
.PP
Use default credentials to help ensure the portability of your
applications.  
...\"
.H 3 "Initiating a Security Context"
.iX "credentials" "using defaults to initiate a security context"
.iX "credentials" "context initiators"
.PP
To use a default credential when initiating a security context, an
application calls the \*Lgss_init_sec_context(\|)\*O routine and specifies
\*LGSS_\%C_\%NO_\%CREDENTIAL\*O as the input claimant credential handle to the
routine.  The routine uses the initiator's DCE default login context to
generate the default credential.  The credential is an \*LINITIATE\*O type
credential.
.PP
You can change the default login context by calling the DCE 
\*Lsec_login_\*V*\*L(\|)\*O routines.  For information on these routines, see
see the appropriate \*Lsec_login_\*V*\*L(3sec)\*O reference page.
...\"
.H 3 "Accepting a Security Context"
.iX "credentials" "using defaults to accept a security context"
.PP
To use a default credential when accepting a security context, an
application calls the \*Lgss_accept_security_context(\|)\*O routine and
specifies \*LGSS_\%C_\%NO_\%CREDENTIAL\*O as the verifier credential handle to
the routine.  The GSSAPI uses a principal name registered for the context
acceptor to generate the default credential handle.  The credential is
an \*LACCEPT\*O credential type.
...\"
.H 2 "Creating New Credential Handles"
.iX "credentials" "creating credential handles"
.iX "credentials" "\*Lgss_acquire_cred(\|)\*O routine"
.PP
An application can create a new credential handle to pass to the 
\*Lgss_init_sec_context(\|)\*O routine or the
\*Lgss_accept_sec_context(\|)\*O routine.  An
application might create a credential handle rather than use
the default credential for the following reasons:
.ML
.LI
Limit the identities the application can use
.LI
Provide an additional identity for the application
.LE
...\"
.H 3 "Initiating a Security Context with New Credential Handles"
.iX "credentials" "creating \*LINITIATE\*O type credentials"
.iX "\*LINITIATE\*O credential type" "creating"
.PP
To create a credential handle for an \*LINITIATE\*O credential type, the
application calls the \*Lgssdce_login_context_to_cred(\|)\*O routine and 
specifies its login context as input to the routine.  The routine creates a
credential handle that points to the credential consisting of that login
context.
.PP
An application can also use a \*LBOTH\*O type credential to initiate a
security context.  Use the \*Lgss_acquire_cred(\|)\*O routine to create a
\*LBOTH\*O type credential, as explained in the next section.
.PP
When the application uses a \*LBOTH\*O credential, the
\*Lgss_acquire_cred(\|)\*O routine creates a login context from the key
table infromation.  Then, it uses the login context to create the 
credential.  For more details, see the \*Lgss_acquire_cred(3sec)\*O
reference page.
.H 3 "Accepting a Security Context Using New Credential Handles"
.iX "credentials" "creating \*LBOTH\*O type credentials"
.iX "credentials" "creating \*LACCEPT\*O type credentials"
.iX "\*LACCEPT\*O credential type" "creating"
.iX "\*LBOTH\*O credential type" "creating"
.iX "credentials" "registering principal names for"
.PP
To create new credential handle for an \*LACCEPT\*O or 
\*LBOTH\*O type credential,
an application calls the \*Lgss_acquire_cred(\|)\*O routine.
.PP
The \*Lgss_acquire_cred(\|)\*O routine uses a principal name and its entry
in the key table to generate the credential handle. 
If the principal name has not yet been registered
(using \*Lgssdce_register_acceptor_identity(\|)\*O or the
\*Lrpc_server_register_auth_info(\|)\*O routines), the 
\*Lgss_acquire_cred(\|)\*O routine automatically registers it. 
...\"
...\"
.H 2 "Delegating Credentials"
.iX "credentials" "delegating"
.iX "delegation" "and GSSAPI credentials"
.iX "GSSAPI" "and delegation"
.iX "security" "contexts" "and delegation"
.PP
In delegation, an initiator forwards its identity to an acceptor
so that the acceptor can use the identity to act as an agent for the
initiator.  There are two forms of delegation:
.ML
.LI
Impersonation delegation
.LI
Traced delegation
.LE
.PP
...\"For definitions of impersonation and traced delegation, and details
...\"about delegation in general, see [REFERENCE TBD].
...\"
.H 3 "Initiating a Security Context to Delegate Credentials"
.PP
An application indicates that it wants to delegate credentials when it
calls the \*Lgss_init_sec_context(\|)\*O routine and sets the
\*LGSS_C_DELEG_FLAG\*O flag to TRUE.
Notes added to the initiator's login context can indicate the type of
delegation used and any restrictions in effect (for traced delegation
only).  If no delegation notes are included with the login context and
the \*LGSS_C_DELEG_FLAG\*O flag is set, impersonation delegation is used.
...\"
.H 3 "Accepting a Security Context with Delegated Credentials"
.PP
If the \*LGSS_C_DELEG_FLAG\*O flag has been set when the security
context was intiated, the \*Lgss_accept_sec_context(\|)\*O routine will pass
a credential to the acceptor.  The routine does the following:
.AL
.LI
Uses information from the input token to create the appropriate 
delegated credential 
.LI
Creates an impersonation or traced delegation credential with an
\*LINITIATE\*O credential type
.LI
Passes the delegated \*LINITIATE\*O credential to the acceptor
.LE
.PP
The principal named in the delegated \*LINITIATE\*O credential is the name of
the initiator (for impersonation delegation) or the acceptor acting
\*Efor\*O the initiator (for traced delegation).  The acceptor uses the
credential to act for the initiator, initiating security contexts as
appropriate.
