...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990-1996 Open Software Foundation, Inc. 
...\" ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
...\" src directory for the full copyright text. 
...\" 
...\" HISTORY
...\" $Log: 10_pwd.gpsml,v $
...\" Revision 1.1.6.1  1996/12/17  19:54:28  damon
...\" 	Expanded OSF C O P Y R I G H T   N O T I C E
...\" 	[1996/12/17  19:53:35  damon]
...\"
...\" Revision 1.1.4.2  1996/03/27  14:13:29  wardr
...\" 	{edit R1.2.1}
...\" 	More Release Edits
...\" 	[1996/03/27  14:13:04  wardr]
...\" 
...\" Revision 1.1.4.1  1996/03/21  20:57:43  wardr
...\" 	{edit R1.2.1}
...\" 	Release Edits
...\" 	[1996/03/21  20:57:34  wardr]
...\" 
...\" Revision 1.1.2.7  1995/06/07  14:46:32  rcb
...\" 	edited 1.1 version, PRENTICE HALL reformat
...\" 	[1995/06/07  14:45:55  rcb]
...\" 
...\" 	PRENTICE HALL reformat
...\" 	[1995/05/15  19:01:13  rcb]
...\" 
...\" 	incorporated 1.1 edits
...\" 	[1995/05/15  18:56:13  rcb]
...\" 
...\" Revision 1.1.2.6  1994/11/09  21:17:20  neilson
...\" 	Added index entries.
...\" 	[1994/11/09  21:17:03  neilson]
...\" 
...\" Revision 1.1.2.5  1994/11/03  23:34:48  neilson
...\" 	Substituted macros for book names in cross refs.
...\" 	[1994/11/03  01:39:03  neilson]
...\" 
...\" 	Substituted macros for book names in cross refs.
...\" 
...\" Revision 1.1.2.4  1994/10/21  16:31:33  jshirley
...\" 	Fixed cross-refs.
...\" 	[1994/10/21  16:31:22  jshirley]
...\" 
...\" Revision 1.1.2.3  1994/10/19  14:28:07  norb
...\" 	no changes
...\" 	[1994/10/19  14:27:37  norb]
...\" 
...\" Revision 1.1.2.2  1994/10/18  21:02:57  hal
...\" 	changes to make Extended Login figures print properly
...\" 	[1994/10/18  21:02:32  hal]
...\" 
...\" Revision 1.1.2.1  1994/10/13  17:52:08  norb
...\" 	added for pwd mgmt
...\" 	[1994/10/13  17:51:21  norb]
...\" 
...\" $EndLog$
...\" 
.H 1 "The Password Management API"
.iX "password management"
.iX "API" "password management"
.P
User passwords are the weakest link in the chain of DCE security. Users,
unless their choices are restricted, typically choose passwords that 
are easy for them to remember; unfortunately, these memorable passwords 
are also easy for attackers to ``crack.''
.P
The password management facility is intended to reduce this risk by providing 
the tools necessary to develop customized password management servers, and
to call them from client password change programs.
This facility enables cell administrators to
.ML
.LI
Enforce stricter constraints on users' password choices 
than those in DCE standard policy
.LI
Offer, or force, automatic generation of user passwords
.LE
.P
The password management facility includes the following APIs:
.ML
.LI
The password management interface, \*Lsec_pwd_mgmt_\*V*\*L(\|)\*O, which enables
clients to retrieve a principal's password management ERA values and to request
strength-checking and generation of passwords.
.LI
The password management network interface, \*Lrsec_pwd_mgmt_\*V*\*L(\|)\*O, 
which
enables a password management server to accept and process password strength
checking and generation requests.
.LE
.P
Figure 36-1 provides a schematic view of the relationships and usages of these
interfaces, as well as some relevant security registry APIs.  This chapter first
discusses the client API and then the network API.
.P
.ne 4i
.FG "Use of Password Management Facility APIs"
.pI ../security/figures/10_pwd_10.ps 0 0 1
.P
For information on how to administer password generation and strength-checking,
see the \*(Ac.
.H 2 "The Client-Side API"
.P
The DCE control program, \*Ldcecp\*O, 
and \*Lrgy_edit\*O provide support for password generation based on a
principal's password validation type ERA. However, if you want to 
enhance your own password
change program (such as the UNIX \*Lpasswd\*O program), you will 
need to use the client-side \*Lsec_pwd_mgmt_\*V*\*L(\|)\*O API.
.P
.ne 3
This API provides functions that 
retrieve a principal's password management ERA values and request password
strength checking and generation from a password management server.
.P
The \*Lsec_pwd_mgmt_\*V*\*L(\|)\*O API 
is defined in the \*Lsec_pwd_mgmt.idl\*O file.
.P
The general procedure for using the client-side password management API 
.iX "client-side password management API"
.iX "password management API" "client side"
in a password change program is as follows.  Refer to Figure 36-1
as you read the following steps:
.AL
.LI
The client calls \*Lsec_pwd_mgmt_setup(\|)\*O, specifying the login name of the principal
.iX "password management API" "\*Lsec_pwd_mgmt_setup(\|)\*O"
whose password is being changed.  The registry service returns the
\*Lpwd_val_type\*O
and \*Lpwd_mgmt_binding\*O ERAs as well as the registry standard (password) policy for the 
principal to the client's security runtime, which is stored in
a password management handle (an opaque data type).
.LI
The client calls \*Lsec_pwd_mgmt_get_val_type(\|)\*O, specifying the handle returned by
.iX "password management API" "\*Lsec_pwd_mgmt_get_val_type(\|)\*O"
\*Lsec_pwd_mgmt_setup(\|)\*O in step 1. The value of the principal's \*Lpwd_val_type\*O ERA is
extracted from the handle and returned to the client.
.LI
The client analyzes the principal's \*Lpwd_val_type\*O ERA to determine
whether a generated password is required.  If so, 
it calls \*Lsec_pwd_mgmt_gen_pwd(\|)\*O, specifying the number of passwords
.iX "password management API" "\*Lsec_pwd_mgmt_gen_pwd(\|)\*O"
needed, and the handle returned by \*Lsec_pwd_mgmt_setup\*O.  The client
security runtime makes an RPC call to the password management server,
which generates passwords that adhere to the principal's password policy.
.LI
The client calls \*Lsec_rgy_acct_passwd(\|)\*O (or some other form), specifying
.iX "password management API" "\*Lsec_rgy_acct_passwd(\|)\*O"
the new password (either input by the user or generated by 
\*Lsec_pwd_mgmt_gen_pwd(\|)\*O).  If the 
principal's \*Lpwd_val_type\*O ERA mandates it, the registry service makes an
RPC call to the password management server, specifying the name of the
principal and the password to be strength checked.  The password
management server checks the format of the password according to the
user's password policy and accepts or rejects it.
.LI
The client calls \*Lsec_pwd_mgmt_free_handle(\|)\*O to free the memory associated
.iX "password management API" "\*Lsec_pwd_mgmt_free_handle(\|)\*O"
with the password management handle.
.LE
.P
.ne 20
Following is an example of a password change program that calls the 
\*Lsec_pwd_mgmt_\*V*\*L(\|)\*O API as previously described.
.nE 
.oS
sec_pwd_mgmt_setup(&pwd_mgmt_h, context, login_name,
    login_context, NULL, &st);
if (GOOD_STATUS(&st)) {
    sec_pwd_mgmt_get_val_type(pwd_mgmt_h, &pwd_val_type, &st);
}
if (GOOD_STATUS(&st)) {
    switch (pwd_val_type) {
        case 0: /* NONE */
        case 1: /* USER_SELECT */
            ... get password ...
            break;
        case 2: /* USER_CAN_SELECT */
            ... if user does not want generated password ... {
                ... get password ...
                break;
            }
        case 3: /* GENERATION_REQUIRED */
            sec_pwd_mgmt_gen_pwd(pwd_mgmt_h, 1, &num_returned,
                &passwd, &st);
            ... display generated password to user - possibly
                prompting for confirmation ...
            break;
    } 
}
if (GOOD_STATUS(&st)) {
    sec_rgy_acct_passwd(context, &login_name, &caller_key, 
        &passwd, new_keytype, &new_key_version, &st);
}

sec_pwd_mgmt_free_handle(&pwd_mgmt_h, &st);
.oE
.H 2 "The Password Management Network Interface"
.iX "password management" "network interface"
.P
The password management interface, \*Lrsec_pwd_mgmt_\*V*\*L(\|)\*O, provides a DCE-common
interface to password management servers.  It is the interface exported by the
sample password management server provided with DCE Version 1.1 
(\*Lpwd_strengthd\*O), and it
is the interface that application developers should use to write their own
password management servers.  Developers should use the sample code provided
as a base for enhancements.
.P
The API is defined in the \*Lrsec_pwd_mgmt.idl\*O file.
.P
Implementations must conform to the \*Lrsec_pwd_mgmt_gen_pwd(3sec)\*O
and \*Lrsec_pwd_mgmt_str_chk(3sec)\*O reference pages.
.P
The \*Lrsec_pwd_mgmt_\*V*\*L(\|)\*O routines are
.ML
.LI 
\*Lrsec_pwd_mgmt_gen_pwd(\|)\*O
.P
Generates one or more passwords for a given principal.
.iX "password management API" "\*Lrsec_pwd_mgmt_gen_pwd(\|)\*O"
.LI
\*Lrsec_pwd_mgmt_str_chk(\|)\*O
.P
Strength checks a principal's password according to policy.
.iX "password management API" "\*Lrsec_pwd_mgmt_str_chk(\|)\*O"
.LE 
