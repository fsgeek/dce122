...\"
...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: 3_sample_prog_dts.gpsml,v $
...\" Revision 1.1.6.4  1995/06/07  14:37:00  rcb
...\" 	PRENTICE HALL reformat (no 1.1 edit changes)
...\" 	[1995/05/01  20:54:36  rcb]
...\"
...\" Revision 1.1.6.3  1993/01/28  18:42:02  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/28  18:01:36  cjd]
...\" 
...\" Revision 1.1.6.2  1992/11/20  19:21:06  weir
...\" 	Moved into 1.0.2doc tree
...\" 	[1992/11/20  19:18:18  weir]
...\" 
...\" Revision 1.1.4.5  1992/11/11  23:47:50  buckler
...\" 	Corrected index entries
...\" 	[1992/11/11  22:51:23  buckler]
...\" 
...\" Revision 1.1.4.4  1992/10/10  15:46:15  casey
...\" 	Index changes for PH
...\" 	[1992/10/10  15:36:19  casey]
...\" 
...\" Revision 1.1.4.3  1992/10/08  16:45:09  lmk
...\" 	Prentice-Hall final edits only
...\" 	[1992/10/08  15:05:02  lmk]
...\" 
...\" Revision 1.1.4.2  1992/09/18  19:44:41  oaf
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.3.2  1992/09/18  19:43:22  oaf
...\" 	updated, moved to dce1.0.1PHdoc.
...\" 
...\" Revision 1.1.2.3  1992/05/27  20:37:53  h_hoff
...\" 	R3724 -- Corrected build faults
...\" 	[1992/05/26  18:59:33  h_hoff]
...\" 
...\" Revision 1.1.2.2  1992/05/14  13:40:07  h_hoff
...\" 	The following files have been fixed, Postscript proofed, and verified as
...\" 	specified in CR2843:
...\" 
...\" 	  Submitted by Heinz A. Hoffmann - DOC; User name: h_hoff
...\" 	  Date: 5/14/92
...\" 	  Number of files: 1.
...\" 
...\" 	1. 3_sample_prog_dts.gpsml, pp 3-1, 1st bullet: CR2843 -- Change wording for
...\" 	clarity
...\" 
...\" 	2. 3_sample_prog_dts.gpsml, pp 3-1, 4th bullet: CR2843 -- Change order of
...\" 	listing for clarity
...\" 
...\" 	3. 3_sample_prog_dts.gpsml, pp 3-1: header file reference: CR2843 -- Change
...\" 	include header file reference
...\" 
...\" 	4. 3_sample_prog_dts.gpsml, pp 3-4, function call, 2 places: CR2843 -- Add
...\" 	space after comma in function arguments
...\" 	[1992/05/14  13:39:18  h_hoff]
...\" 
...\" Revision 1.1  92/01/29  16:06:21  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Fri Oct 25, 1991                 Initial File Submission for final
...\"                                    integration at IBM
...\"
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Mass.                                                     *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or       *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
.H 1 "DTS API Routines Programming Example"
.iX "DTS" "API routines"
.PP
This chapter contains a C programming example showing a practical application
of the DTS API programming routines.  The program performs the following
actions:
.ML
.LI
Prompts the user to enter two sets of time coordinates corresponding to
the timestamps of two ``events.''
.LI
Stores those coordinates in a \*Ltm\*O structure.
.LI
Converts the \*Ltm\*O structure to a \*Lutc\*O structure.
.LI
Prints out the \*Lutc\*O structure in ISO text format.
.LI
Determines which event occurred first.
.LI
Determines if Event 1 may have caused Event 2 by comparing the intervals.
.LE
.oS
.ne 20
#include time.h       /* time data structures              */
#include dce/utc.h    /* utc structure definitions         */

void ReadTime();
void PrintTime();

/* This program requests user input about events, then prints
 * out information about those events.
 */
main()
{
    struct utc event1,event2;
    enum utc_cmptype relation;

    /* Read in the two events.
     */
    ReadTime(&event1);
    ReadTime(&event2);

    /* Print out the two events.
     */
    printf("The first event is : ");
    PrintTime(&event1);
    printf("\\nThe second event is : ");
    PrintTime(&event2);
    printf("\\n");

    /* Determine which event occurred first.
     */
    if (utc_cmpmidtime(&relation,&event1,&event2))
        exit(1);

.ne 15
    switch( relation )
    {
        case utc_lessThan:
        printf("comparing midpoints: Event1 < Event2\\n");
        break;
        case utc_greaterThan:
        printf("comparing midpoints: Event1 > Event2\\n");
        break;
        case utc_equalTo:
        printf("comparing midpoints: Event1 == Event2\\n");
        break;
        default:
        exit(1);
        break;
    }

    /* Could Event 1 have caused Event 2?  Compare the 
     * intervals.
     */
    if (utc_cmpintervaltime(&relation,&event1,&event2))
        exit(1);

    switch( relation )
    {
        case utc_lessThan:
        printf("comparing intervals: Event1 < Event2\\n");
        break;
        case utc_greaterThan:
        printf("comparing intervals: Event1 > Event2\\n");
        break;
        case utc_equalTo:
        printf("comparing intervals: Event1 == Event2\\n");
        break;
        case utc_indeterminate:
        printf("comparing intervals: Event1 ? Event2\\n");
        default:
        exit(1);
        break;
    }
}

.ne 6
/* Print out a utc structure in ISO text format.
 */
void PrintTime(utcTime)
struct utc *utcTime;
{
    char   string[50];

    /* Break up the time string.
     */
    if (utc_ascgmtime(string,      /* Out: Converted time  */
                      50,          /* In:  String length   */
                      utcTime))    /* In:  Time to convert */
        exit(1);
    printf("%s\\n",string);
}

/* Prompt the user to enter time coordinates.  Store the 
 * coordinates in a tm structure and then convert the tm 
 * structure to a utc structure.
 */
void ReadTime(utcTime)
struct utc *utcTime;
{
struct tm tmTime,tmInacc;
    (void)memset((void *)&tmTime,  0, sizeof(tmTime));
    (void)memset((void *)&tmInacc, 0, sizeof(tmInacc));
    (void)printf("Year? ");
    (void)scanf("%d",&tmTime.tm_year);
    tmTime.tm_year -= 1900;
    (void)printf("Month? ");
    (void)scanf("%d",&tmTime.tm_mon);
    tmTime.tm_mon -= 1;
    (void)printf("Day? ");
    (void)scanf("%d",&tmTime.tm_mday);
    (void)printf("Hour? ");
    (void)scanf("%d",&tmTime.tm_hour);
    (void)printf("Minute? ");
    (void)scanf("%d",&tmTime.tm_min);
    (void)printf("Inacc Secs? ");
    (void)scanf("%d",&tmInacc.tm_sec);

.ne 8
    if (utc_mkanytime(utcTime,
                      &tmTime,
                      (long)0,
                      &tmInacc,
                      (long)0,
                      (long)0))
        exit(1);
}
.oE
