...\"
...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: 6_gds.xds.gpsml,v $
...\" Revision 1.1.12.1  1996/09/03  18:40:57  wardr
...\" 	{enh,R1.2.2}
...\" 	Update for sgml conversion
...\" 	[1996/09/03  18:39:58  wardr]
...\"
...\" 	{enh,R1.2.2}
...\" 	removed changebars
...\" 	[1996/05/10  21:18:30  wardr]
...\"
...\" Revision 1.1.10.1  1996/03/19  15:23:58  wardr
...\" 	{edit R1.2.1}
...\" 	Release Edits
...\" 	[1996/03/19  15:20:16  wardr]
...\" 
...\" Revision 1.1.8.15  1995/06/15  16:27:16  rcb
...\" 	edited 1.1 version, PRENTICE HALL reformat
...\" 	[1995/06/13  19:36:48  rcb]
...\" 
...\" 	edited 1.1 version, PRENTICE HALL reformat
...\" 	[1995/06/12  18:59:23  rcb]
...\" 
...\" Revision 1.1.8.14  1994/11/15  20:47:43  neilson
...\" 	Converted book title references to macro form.
...\" 	[1994/11/15  18:57:44  neilson]
...\" 
...\" Revision 1.1.8.13  1994/11/03  23:32:23  neilson
...\" 	Substituted macros for book names in cross refs.
...\" 	[1994/11/03  01:38:29  neilson]
...\" 
...\" 	Substituted macros for book names in cross refs.
...\" 
...\" Revision 1.1.8.12  1994/10/20  17:09:52  rnollman
...\" 	last checkin to be safe
...\" 	[1994/10/20  17:09:37  rnollman]
...\" 
...\" Revision 1.1.8.11  1994/10/18  17:35:49  rnollman
...\" 	editorial changes requested by Dave Treff
...\" 	[1994/10/18  17:35:32  rnollman]
...\" 
...\" Revision 1.1.8.10  1994/10/18  17:19:07  rnollman
...\" 	editorial comments from Dublin
...\" 	[1994/10/18  17:18:54  rnollman]
...\" 
...\" Revision 1.1.8.9  1994/10/14  16:06:35  rnollman
...\" 	incorporated technical changes from Dublin
...\" 	[1994/10/14  16:06:21  rnollman]
...\" 
...\" Revision 1.1.8.8  1994/10/14  14:36:40  rnollman
...\" 	incorporated technical changes from DublinX
...\" 	[1994/10/14  14:36:27  rnollman]
...\" 
...\" Revision 1.1.8.7  1994/08/05  15:58:31  rnollman
...\" 	[rnolman] - Checkin after OSF edits
...\" 	[1994/08/05  15:57:51  rnollman]
...\" 
...\" 	[rnollman] - checkin afaterafter incorporating OSF edits
...\" 
...\" Revision 1.1.8.4  1994/05/14  22:43:40  rnollman
...\" 	last beta submittal
...\" 	[1994/05/14  22:40:01  rnollman]
...\" 
...\" Revision 1.1.8.3  1994/05/10  21:35:49  rnollman
...\" 	final update for beta
...\" 	[1994/05/10  21:35:32  rnollman]
...\" 
...\" Revision 1.1.8.2  1993/11/11  21:49:30  rnollman
...\" 	updated SNI copyright
...\" 	[1993/11/11  21:49:10  rnollman]
...\" 
...\" Revision 1.1.8.1  1993/10/27  15:35:44  rnollman
...\" 	replaced old version with new version from Dublin
...\" 	[1993/10/27  15:35:29  rnollman]
...\" 
...\" Revision 1.1.6.6  1993/02/22  18:34:13  marrek
...\" 	fix for OT 6723 and OT 7290
...\" 	[1993/02/19  14:50:41  marrek]
...\" 
...\" Revision 1.1.6.5  1993/01/28  18:39:48  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/28  17:59:07  cjd]
...\" 
...\" Revision 1.1.6.4  1993/01/08  13:14:52  marrek
...\" 	*** empty log message ***
...\" 
...\" Revision 1.1.6.3  1992/12/18  18:52:05  rom
...\" 	For "Default DSX_C_GDS_CONTEXT" table, change .TS to .TS H.
...\" 	[1992/12/18  18:51:41  rom]
...\" 
...\" Revision 1.1.6.2  1992/11/19  21:54:13  weir
...\" 	Moved into 1.0.2doc tree
...\" 	[1992/11/19  21:50:11  weir]
...\" 
...\" Revision 1.1.4.6  1992/11/11  23:42:28  buckler
...\" 	Corrected index entries
...\" 	[1992/11/11  22:46:08  buckler]
...\" 
...\" Revision 1.1.4.5  1992/11/02  20:12:59  lmk
...\" 	Prentice-Hall index entries only
...\" 	[1992/11/02  20:12:24  lmk]
...\" 
...\" Revision 1.1.4.4  1992/11/02  19:51:26  lmk
...\" 	Prentice-Hall index entries only
...\" 	[1992/11/02  19:50:02  lmk]
...\" 
...\" Revision 1.1.4.3  1992/10/20  22:26:44  buckler
...\" 	Pre-Prentice-Hall editorial review
...\" 	[1992/10/20  22:25:12  buckler]
...\" 
...\" Revision 1.1.4.2  1992/10/02  18:08:57  steiner
...\" 	First edit pass for P-H, edits from Eddie.
...\" 	[1992/10/02  18:08:39  steiner]
...\" 
...\" Revision 1.1.2.4  1992/06/15  15:20:58  buckler
...\" 	Fixed various formatting problems
...\" 	[1992/06/15  15:17:58  buckler]
...\" 
...\" Revision 1.1.2.3  1992/06/12  20:28:05  buckler
...\" 	Incorporated changes from Brian Keane (Dublin) markup
...\" 	[1992/06/12  20:26:49  buckler]
...\" 
...\" Revision 1.1.2.2  1992/06/10  21:19:02  marty
...\" 	Doc drop from Dublin
...\" 	[1992/06/10  21:15:14  marty]
...\" 
...\" $EndLog$
.H 1 "GDS Package"
...\" /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
...\" * COPYRIGHT   (C)  SIEMENS NIXDORF INFORMATIONSSYSTEME AG 1994   *
...\" *                  ALL RIGHTS RESERVED                           *
...\" *                                                                *
...\" * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
The Global Directory Service (GDS) package
(GDSP) is an OSF extension to the XDS
interface.  Applications must negotiate use of this
package with \*Lds_version(\|)\*O before using any of the
additional features.  If an application attempts to use features specific
to this package without first negotiating its use,
then an appropriate error (for example, \*LOM_NO_SUCH_CLASS\*O)
is returned by the Object Management function.
.P
The object identifier associated with the GDSP is
.iS
\*L{iso(1) identified-organization(3) icd-ecma(0012) member-company(2)
siemens-units(1107) sni(1) directory(3) xdsapi(100) gdsp(0)}\*O
.iE
.P
It takes the following encoding:
.iS
\ex2B\exC\ex2\ex88\ex53\ex1\ex3\ex64\ex0
.iE
.P
The identifier is represented by the constant \*LDSX_GDS_PKG\*O. The
C constants associated with this package are contained in the \*Lxdsgds.h\*O
header file.
.P
.ne 5
The concepts and notation used are first mentioned in Chapter 11.
They are also fully explained in Chapters 17 through 19.
The attribute types are introduced first, followed by the object classes. 
Next, the OM class hierarchy and OM class definitions required to
support the new attribute types are described.
.H 2 "GDSP Attribute Types"
This section presents the additional directory attribute types that are
used with GDSP. Each attribute type has an object identifier, which is the
value of the OM attribute \*LDS_ATTRIBUTE_TYPE\*O.  These object identifiers
are represented in the interface by constants with the same name as the
directory attribute, and they are prefixed by \*LDSX_A_\*O so that they can be
easily identified.
.P
This section contains two tables that are used to indicate the object
identifiers for GDSP attribute types (see Table 15-1), and the values for
GDSP attribute
types (see Table 15-2), respectively.
Following these two tables is a brief description of
each attribute. (See Chapter 12
for information on
general matching rules.)
.P
Table 15-1 shows the names of the GDSP attribute types, together
with the BER encoding of the object identifiers associated with each of them.
.nS "note"
The third column of Table 15-1 contains the contents octets
of the BER encoding of the object identifier in hexadecimal.
All these object identifiers stem from the root \*L{iso(1)
identified-organization(3) idc-ecma(0012) member-company(2)
siemens-units(1107) sni(1) directory(3) attribute-type(4)}\*O.
.nE
.P
.ne 5i
.TB "Object Identifiers for GDSP Attribute Types"
.TS
center,box,tab(@);
lB | lB | cB
l | l |
lB | lB | cB
l | lB | c.
@@Object Identifier BER
@@_@_
Package@Attribute Type@Hexadecimal
=
GDSP@DSX_A_ACL@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex01
_
GDSP@DSX_A_AT@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex06
_
GDSP@DSX_A_CDS_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex0D
@CELL
_
GDSP@DSX_A_CDS_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex0E
@REPLICA
_
GDSP@DSX_A_CLIENT@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex0A
_
GDSP@DSX_A_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex08
@DEFAULT_DSA
_
GDSP@DSX_A_DNLIST@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex0B
_
GDSP@DSX_A_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex09
@LOCAL_DSA
_
GDSP@DSX_A_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex00
@MASTER_
@KNOWLEDGE
_
GDSP@DSX_A_OCT@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex05
_
GDSP@DSX_A_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex03
@SHADOWED_
@BY
_
GDSP@DSX_A_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex0C
@SHADOWING_
@JOB
_
GDSP@DSX_A_SRT@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex04
_
GDSP@DSX_A_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex04\ex02
@TIME_STAMP
.TE
.P
Table 15-2 shows the names of the attribute types, together with
the OM value syntax used in the interface to represent values of that
attribute type.  The table also includes the range of lengths permitted for
the string types, indicates whether the attribute can be multivalued,
and lists which matching rules are provided for the syntax.
.P
.ne 7.0i
.TB "Representation of Values for GDSP Attribute Types"
.ps 11
.vs 13
.TS
center,box,tab(@);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
lB | l | c | c | c.
@@Value@Multi-@Matching
Attribute Type@OM Value Syntax@Length@Valued@Rules
=
DSX_A_ACL@Object\*L(DSX_\*O@\*(EM@no@E
@\*LC_GDS_ACL)\*O
_
DSX_A_AT@String\*L(OM_S_\*O@1-101@yes@E,S
@\*LPRINTABLE_\*O
@\*LSTRING)\*O
_
DSX_A_CDS_@String\*L(OM_S_\*O@1-284@no@E
CELL@\*LOCTET_STRING)\*O
_
DSX_A_CDS_@String\*L(OM_S_\*O@1-905@yes@E
REPLICA@\*LOCTET_STRING)\*O
_
DSX_A_@Only a@\*(EM@\*(EM@\*(EM
CLIENT@cache attribute
_
DSX_A_@Only a@\*(EM@\*(EM@\*(EM
DEFAULT_DSA@cache attribute
_
DSX_A_@Object\*L(DS_C_\*O@\*(EM@yes@E,S
DNLIST@\*LDS_DN)\*O
_
DSX_A_@Only a@\*(EM@\*(EM@\*(EM
LOCAL_DSA@cache attribute
_
DSX_A_MASTER_@Object\*L(DS_C_\*O@\*(EM@no@E,S
KNOWLEDGE@\*LDS_DN)\*O
_
DSX_A_OCT@String\*L(OM_S_\*O@1-397@yes@E,S
@\*LPRINTABLE_\*O
@\*LSTRING)\*O
_
DSX_A_@Not used yet@\*(EM@\*(EM@\*(EM
SHADOWED_BY
_
DSX_A_@Not used yet@\*(EM@\*(EM@\*(EM
SHADOWING_
JOB
_
DSX_A_SRT@String\*L(OM_S_\*O@1-29@yes@E,S
@\*LPRINTABLE_\*O
@\*LSTRING)\*O
_
DSX_A_@String\*L(OM_S_UTC_\*O@11-17@no@E,O
TIME_STAMP@\*LTIME_STRING)\*O
.TE
.ps 12
.vs 14
.P
.nS note
With the exception of the \*LDSX_A_ACL\*O attribute, the GDSP attributes
in Table 15-2 are only to be manipulated through the GDS
administration interface (see the \*(Ax.)
.nE
.P
Descriptions of the GDSP attributes follow:
.P
.ML
.LI
\*LDSX_A_ACL\*O
.P
This attribute
describes the access rights for one or more directory service users.
.LI
\*LDSX_A_AT\*O
.P
This attribute
describes the attribute types permitted in GDS. 
For further information, see the \*(Ax.
.LI
\*LDSX_A_CDS_CELL\*O and \*LDSX_A_CDS_REPLICA\*O
.P
These two attributes always exist together in the same object. They describe
the information necessary for contacting a remote DCE cell.
.LI
\*LDSX_A_CLIENT\*O
.P
This attribute only applies to the cache. It identifies an entry that
holds the DUA's presentation address.  Its OM syntax is
\*LOM_\%S_\%PRINTABLE_\%STRING\*O and it's value is \*LCLIENT\*O.
.LI
\*LDSX_A_DEFAULT_DSA\*O
.P
This attribute only applies to the cache. It identifies an entry that
holds the DN of the DUA's default DSA.  Its OM syntax is
\*LOM_\%S_\%PRINTABLE_\%STRING\*O and its value is \*LDEFAULT-DSA\*O.
.LI
\*LDSX_A_DNLIST\*O
.P
This attribute is used internally by the GDS DSA.
.LI
\*LDSX_A_LOCAL_DSA\*O
.P
This attribute only applies to the cache. It identifies an entry that
holds the DN of the DUA's local DSA. Its OM syntax is
\*LOM_\%S_\%PRINTABLE_\%STRING\*O and it's value is \*LLOCAL-DSA\*O.
.LI
\*LDSX_A_MASTER_KNOWLEDGE\*O
.P
This attribute
contains the DN of the DSA that holds the master copy of
this entry.
.LI
\*LDSX_A_OCT\*O
.P
This attribute
describes the object classes supported by the GDS DSA. 
For further information, see the \*(Ax.
.LI
\*LDSX_A_SHADOWED_BY\*O and \*LDSX_A_SHADOWING_JOB\*O
.P
These two GDSP attributes are intended for future use.
.LI
\*LDSX_A_SRT\*O
.P
This attribute
describes the structure of the DNs permitted in GDS.
.LI
\*LDSX_A_TIME_STAMP\*O
.P
This attribute is
part of the \*LDSX_O_SCHEMA\*O object.  It contains the creation time of
the \*LDSX_O_SCHEMA\*O object.
.LE
.H 2 "GDSP Object Classes"
.P
The only additional GDSP object class is \*LDSX_O_SCHEMA\*O (see
Table 15-3).  It is stored
in GDS as an object directly under root.  The most important attributes
of the \*LDSX_O_SCHEMA\*O object are the three recurring attributes
\*LDSX_A_OCT\*O, \*LDSX_A_AT\*O, and \*LDSX_A_SRT\*O.  These three objects
describe the GDS DIT structure.  For a more detailed explanation of the
GDSP \*LDSX_O_SCHEMA\*O object, see the \*(Ax.
.nS "note"
The third column of Table 15-3 contains the contents octets
of the BER encoding of the object identifier in hexadecimal.  This
object identifier stems from the root \*L{iso(1)
identified-organization(3) idc-ecma(0012) member-company(2)
siemens-units(1107) sni(1) directory(3) object-class(6)}\*O.
.nE
.P
.ne 1.4i
.TB "Object Identifier for GDSP Object Classes"
.TS
center,box,tab(@);
lB | lB | cB 
l | l | l 
lB | lB | cB
l | lB | l.
@@Object Identifier BER
@@_@_
Package@Attribute Type@Hexadecimal
=
GDSP@DSX_O_@\ex2B\ex0C\ex02\ex88\ex53\ex01\ex03\ex06\ex00
@SCHEMA
.TE
.H 2 "GDSP OM Class Hierarchy"
The remainder of this chapter defines the additional OM classes used by
GDSP.
This section shows the hierarchical organization of the OM classes that
are defined in the following sections, and it shows which classes inherit
additional OM attributes from their OM superclasses.  In the following list,
subclassification is indicated by indentation, and the names of abstract
OM classes are represented in italics.
.P
\*VOM_C_OBJECT\*O (defined in the OM package)
.ML
.LI
\*LDS_C_SESSION\*O (defined in the directory service package)
.ML
.LI
\*LDSX_C_GDS_SESSION\*O
.LE
.LI
\*LDS_C_CONTEXT\*O (defined in the directory service package)
.ML
.LI
\*LDSX_C_GDS_CONTEXT\*O
.LE
.LI
\*LDSX_C_GDS_ACL\*O
.LI
\*LDSX_C_GDS_ACL_ITEM\*O
.LE
.P
None of the OM classes in the preceding list are encodable by using
\*Lom_encode(\|)\*O and \*Lom_decode(\|)\*O.
.H 2 "DSX_C_GDS_ACL"
An instance of OM class \*LDSX_C_GDS_ACL\*O describes up to five
categories of rights for one or more directory users.
.P
An instance of this OM class has the OM attributes of its superclass,
\*VOM_C_OBJECT\*O, in addition to the OM attributes listed in Table 15-4.
.P
.ne 3.0i
.TB "OM Attributes of DSX_C_GDS_ACL"
.TS
center,box,tab(@);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
lB | l | c | c | c.
@@Value@Value@Value
OM Attribute@Value Syntax@Length@Number@Initially
=
DSX_MODIFY_@Object\*L(DSX_C_\*O@\*(EM@0-4@\*(EM
PUBLIC@\*LGDS_ACL_ITEM)\*O
_
DSX_READ_@Object\*L(DSX_C_\*O@\*(EM@0-4@\*(EM
STANDARD@\*LGDS_ACL_ITEM)\*O
_
DSX_MODIFY_@Object\*L(DSX_C_\*O@\*(EM@0-4@\*(EM
STANDARD@\*LGDS_ACL_ITEM)\*O
_
DSX_READ_@Object\*L(DSX_C_\*O@\*(EM@0-4@\*(EM
SENSITIVE@\*LGDS_ACL_ITEM)\*O
_
DSX_MODIFY_@Object\*L(DSX_C_\*O@\*(EM@0-4@\*(EM
SENSITIVE@\*LGDS_ACL_ITEM)\*O
.TE
.P
The OM attributes of \*LDSX_C_GDS_ACL\*O are as follows:
.P
.ML
.LI
\*LDSX_MODIFY_PUBLIC\*O
.P
This attribute
specifies the user, or subtree of users, that can modify attributes
classified as public attributes.
.LI
\*LDSX_READ_STANDARD\*O
.P
This attribute
specifies the user, or subtree of users, that can read attributes classified
as standard attributes.
.LI
\*LDSX_MODIFY_STANDARD\*O
.P
This attribute
specifies the user, or subtree of users, that can modify attributes
classified as standard attributes.
.LI
\*LDSX_READ_SENSITIVE\*O
.P
This attribute
specifies the user, or subtree of users, that can read attributes
classified as sensitive attributes.
.LI
\*LDSX_MODIFY_SENSITIVE\*O
.P
This attribute
specifies the user, or subtree of users, that can modify attributes
classified as sensitive attributes.
.LE
.H 2 "DSX_C_GDS_ACL_ITEM"
An instance of OM class \*LDSX_C_GDS_ACL_ITEM\*O is a component of
an instance of OM class \*LDSX_C_GDS_ACL\*O.  It specifies the user, or subtree of users, to
whom an access right applies.
.P
An instance of this OM class has the OM attributes of its superclass,
\*VOM_C_OBJECT\*O, in addition to the OM attributes listed in Table 15-5.
.P
.ne 10
.TB "OM Attributes of DSX_C_GDS_ACL_ITEM"
.TS
center,box,tab(@);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
lB | l | c | c | c.
@@Value@Value@Value
OM Attribute@Value Syntax@Length@Number@Initially
=
DSX_@Enum\*L(DSX_\*O@\*(EM@1@\*(EM
INTERPRETATION@\*LInterpretation)\*O
_
DSX_USER@Object\*L(DS_C_\*O@\*(EM@1@\*(EM
@\*LDS_DN)\*O
.TE
.P
The OM attributes of a \*LDSX_C_GDS_ACL_ITEM\*O are as follows:
.P
.ML
.LI
\*LDSX_INTERPRETATION\*O
.P
This attribute
specifies the scope of the access right.
It can have one of the following values:
.ML
.LI
\*LDSX_SINGLE_OBJECT\*O,
meaning that the access right is granted to the user specified in the
\*LDSX_USER\*O OM attribute.
.LI
\*LDSX_ROOT_OF_SUBTREE\*O,
meaning that the access right is granted to all users in the subtree below
the name specified in the \*LDSX_USER\*O OM attribute.
.LE
.LI
\*LDSX_USER\*O
.P
This attribute is the DN of the user, or subtree of users, to whom an
access right applies.
.LE
.H 2 "DSX_C_GDS_CONTEXT"
An instance of OM class
\*LDSX_C_GDS_CONTEXT\*O comprises per-operation arguments
.iX "GDS" "package" "context"
.iX "context" "GDS" "package"
that are accepted by most of the interface functions.  GDS
supports additional service controls that are defined by the
.iX "service" "controls"
\*LDSX_C_GDS_CONTEXT\*O OM class.
.P
An instance of this OM class has the OM attributes of its superclasses,
\*VOM_C_OBJECT\*O and \*LDS_C_CONTEXT\*O,
in addition to the OM attributes listed in Table 15-6.
.P
.ne 4.5i
.TB "OM Attributes of DSX_C_GDS_CONTEXT"
.ps 11
.vs 13
.TS
center,box,tab(@);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
cB   s     s    s    s
lB  | lB | c | c | cB.
@@Value@Value@Value
OM Attribute@Value Syntax@Length@Number@Initially
_
Service Controls
=
DSX_@OM_S_@\*(EM@1@OM_FALSE
DUAFIRST@BOOLEAN
_
DSX_DONT_@OM_S_@\*(EM@1@OM_TRUE
STORE@BOOLEAN
_
DSX_NORMAL_@OM_S_@\*(EM@1@OM_FALSE
CLASS@BOOLEAN
_
DSX_PRIV_@OM_S_@\*(EM@1@OM_FALSE
CLASS@BOOLEAN
_
DSX_RESIDENT_@OM_S_@\*(EM@1@OM_FALSE
CLASS@BOOLEAN
_
DSX_USEDSA@OM_S_@\*(EM@1@OM_TRUE
@BOOLEAN
_
DSX_DUA_@OM_S_@\*(EM@1@OM_FALSE
CACHE@BOOLEAN
_
DSX_PREFER_@OM_S_@\*(EM@1@OM_FALSE
ADM_FUNCS@BOOLEAN
DSX_SIGN_@\*OEnum\*L(DSX_Sign_\*O@\*(EM@0-1@\*(EM
MECHANISM@Mechanism)
_
DSX_PROT_@\*OEnum\*L(DSX_Prot_\*O@\*(EM@0-1@\*(EM
REQUEST@Request)
.TE
.ps 12
.vs 14
.P
.ne 8
The OM attributes of the \*LDSX_C_GDS_CONTEXT\*O OM class
are as follows:
.P
.ML
.LI
\*LDSX_DUAFIRST\*O
.P
This attribute
defines whether the DUA cache or the DSA needs to be
read first for query operations. 
The default value is \*LOM_FALSE\*O; that is, search the DSA first, if not
found then search the DUA cache.
.LI
\*LDSX_DONT_STORE\*O
.P
This attribute specifies whether the information
read from the DSAs by the query
functions also needs to be stored in the DUA cache.  When this service control
is set to \*LOM_TRUE\*O (default value), nothing is stored in the DUA cache.
.P
When this service control is set to \*LOM_FALSE\*O,
the information read is stored in the DUA cache.
The objects returned by \*Lds_list(\|)\*O and \*Lds_compare(\|)\*O
are stored in the cache without their associated attribute information. 
The objects returned by \*Lds_read(\|)\*O and \*Lds_search(\|)\*O 
are stored in the cache with all their \*Ecacheable\*O attributes; these
are all public attributes that do not exceed 4Kbytes in length. 
.P
This information is only cached when
a list of requested attributes is supplied.  If all attributes are requested,
then nothing is stored in the cache.
.LE
.P
The DUA cache categorizes the information stored into three different
memory classes.  The user specifies the category with the following service
controls:
.ML
.LI
\*LDSX_NORMAL_CLASS\*O
.P
If this attribute is set to \*LOM_TRUE\*O,
the entry in the DUA cache is assigned to the class of normal
objects.  If the number of entries in this class exceeds a maximum value, the 
entry that is not addressed for the longest period of time is removed
from the DUA cache.
.LI
\*LDSX_PRIV_CLASS\*O
.P
If this attribute is set to \*LOM_TRUE\*O,
the entry in the DUA cache is assigned to the class of privileged
objects.  Entries can be removed from the class in the same way as normal 
objects.  By using this memory sparingly, the user can protect entries from 
deletion.
.LI
.ne 7
\*LDSX_RESIDENT_CLASS\*O
.P
If this attribute is set to \*LOM_TRUE\*O, the entry in the DUA cache
is assigned to the class of resident objects.  An entry in this memory
class is never removed automatically; instead, it can only be removed
with \*Lds_remove_entry(\|)\*O.  The number of entries is limited; if
this limit is exceeded, \*Lds_add_entry(\|)\*O reports an error.
.LE
.P
Only the service control of one memory class can be set.
The \*Lds_add_entry(\|)\*O function also evaluates these service control bits if the
function is used on the DUA cache.
.ML
.LI
\*LDSX_DUA_CACHE\*O and \*LDSX_USEDSA\*O
.P
These attributes define whether the entries in the
DUA cache or in the DSA, or both, need to be used when providing the service.
Depending on the values of these attributes, the following
situations can arise:
.P
.ML
.LI
\*LDSX_DUA_CACHE\*O and \*LDSX_USEDSA\*O, both \*LOM_TRUE\*O
.P
The \*Lds_add_entry(\|)\*O and \*Lds_remove_entry(\|)\*O functions
report an error.
.P
The query functions evaluate the service controls 
\*LDS_DONT_USE_COPY\*O and
.iX "service" "controls"
.iX "controls" "service"
\*LDSX_DUAFIRST\*O.  When \*LDS_\%DONT_\%USE_\%COPY\*O is \*LOM_\%FALSE\*O, then
\*LDSX_\%DUAFIRST\*O determines whether the DUA cache or the DSA is read first.
When \*LDS_\%DONT_\%USE_\%COPY\*O is 
\*LOM_\%TRUE\*O, information from the DSA only is read.
.LI 
\*LDSX_DUA_CACHE\*O, \*LOM_TRUE\*O and \*LDSX_USEDSA\*O, \*LOM_\%FALSE\*O
.P
The \*Lds_add_entry(\|)\*O
and \*Lds_remove_entry(\|)\*O functions and the query
functions only go to the DUA cache.
.LI 
\*LDSX_DUA_CACHE\*O, \*LOM_FALSE\*O and \*LDSX_USEDSA\*O, \*LOM_\%TRUE\*O
.P
The \*Lds_add_entry(\|)\*O
and \*Lds_remove_entry(\|)\*O functions and the query
functions only go to the DSA.
.LI 
.ne 6
\*LDSX_DUA_CACHE\*O and \*LDSX_USEDSA\*O, both \*LOM_FALSE\*O
.P
The \*Lds_add_entry(\|)\*O
and \*Lds_remove_entry(\|)\*O functions and the query
functions report an error.
.LE
.P
All other functions always operate on the DSA currently connected.
.LI
\*LDSX_PREFER_ADM_FUNCS\*O
.P
GDS uses the three following optional attributes:
.P
.ML
.LI
\*LDSX_A_MASTER_KNOWLEDGE\*O, which contains the DN of the
DSA that holds the master copy of an entry.
.LI
\*LDSX_A_ACL\*O, which is used for GDS access control.
.LI
\*LDS_A_USER_PASSWORD\*O as an attribute of the \*LDS_O_DSA\*O
object class, which is used by the GDS shadowing mechanism.
.LE
.P
The \*LDSX_A_MASTER_KNOWLEDGE\*O and \*LDSX_A_ACL\*O attributes are present
in every GDS entry.
.P
When an application requests all attributes, it can prevent any of
these three optional attributes from being
returned by setting this service control to \*LOM_FALSE\*O.
.P
If GDS applications (for example, GDS administration) require
these attributes, they are obtained by setting this service control to
\*LOM_TRUE\*O.
.LI 
\*LDSX_SIGN_MECHANISM\*O
.P
This attribute is reserved for future use.
.LI
\*LDSX_PROT_REQUEST\*O
.P
This attribute is reserved for future use.
.LE
.P
Applications can assume that an object of OM class
\*LDSX_C_GDS_CONTEXT\*O,
created with default values of all its OM attributes, works with all
the interface functions.  The constant \*LDS_DEFAULT_CONTEXT\*O
can be used as an argument to functions instead of creating an OM object
with default values.
.P
The default \*LDSX_C_GDS_CONTEXT\*O is defined in
Table 15-7.
.P
.ne 5i
.TB "Default DSX_C_GDS_CONTEXT"
.TS 
center,box,tab(@);
lB | cB
c s
lB | lB.
OM Attribute@Default Value
=
Common Arguments
_
DS_OPERATION_PROGRESS@DS_OPERATION_
@NOT_STARTED
DS_ALIASED_RDNS@0
_
.T&
c s.
Service Controls
_
.T&
lB | lB.
DS_CHAINING_PROHIB@OM_TRUE
DS_DONT_DEREFERENCE_@OM_FALSE
ALIASES
DS_DONT_USE_COPY@OM_TRUE
DS_LOCAL_SCOPE@OM_FALSE
DS_PREFER_CHAINING@OM_FALSE
DS_PRIORITY@DS_MEDIUM
_
.T&
c s.
Local Controls
_
.T&
lB | lB.
DS_ASYNCHRONOUS@OM_FALSE
DS_AUTOMATIC_CONTINUATION@OM_TRUE
_
.T&
c s.
Private Extensions
_
.T&
lB | lB.
DSX_DUAFIRST@OM_FALSE
DSX_DONT_STORE@OM_TRUE
DSX_NORMAL_CLASS@OM_FALSE
DSX_PRIV_CLASS@OM_FALSE
DSX_RESIDENT_CLASS@OM_FALSE
DSX_USEDSA@OM_TRUE
DSX_DUA_CACHE@OM_FALSE
DSX_PREFER_ADM_FUNCS@OM_FALSE
DSX_SIGN_MECHANISM@\*OAbsent\*L
DSX_PROT_REQUEST@\*OAbsent\*L
.TE
.H 2 "DSX_C_GDS_SESSION"
An instance of OM class \*LDSX_C_GDS_SESSION\*O
.iX "GDS" "package" "session"
.iX "session" "GDS" "package"
.iX "-: GDS" "GDSP (GDS package)"
identifies a particular link from
an application program to a GDS DUA. This additional OM class is
.iX "GDS" "DUA"
necessary if the user either wants to specify an authentication mechanism
or wants to specify the GDS directory identifier, or alternatively
wants to specify both an authentication mechanism and the directory identifier.
\*LDSX_C_GDS_SESSION\*O can be passed as an argument to \*Lds_bind(\|)\*O.
.P
An instance of this OM class has the OM attributes of its superclasses,
\*VOM_C_OBJECT\*O and \*LDS_C_SESSION\*O,
in addition to the OM attributes listed in Table 15-8.
.P
.ne 3.2i
.TB "OM Attributes of DSX_C_GDS_SESSION"
.TS
center,box,tab(@);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
lB | l | c | c | c.
@@Value@Value@Value
OM Attribute@Value Syntax@Length@Number@Initially
_
DSX_PASSWORD@String\*L(OM_S_\*O@\*(EM@0 or 1@\*(EM
@\*LOCTET_\*O
@\*LSTRING)\*O
_
DSX_DIR_ID@\*LOM_S_\*O@\*(EM@1@1
@\*LINTEGER\*O
_
DSX_AUTH_@Enum\*L(DSX_\*O@\*(EM@0-1@\*(EM
MECHANISM@\*LAuth_\*O
@\*LMechanism)\*O
_
DSX_AUTH_@String\*L(OM_S_\*O@\*(EM@0-1@\*(EM
INFO@\*LOCTET_\*O
@\*LSTRING)\*O
.TE
.P
The OM attributes of \*LDSX_C_GDS_SESSION\*O are as follows:
.P
.ML
.LI
\*LDSX_PASSWORD\*O
.P
This attribute indicates the password for the user credentials.
.LI
\*LDSX_DIR_ID\*O
.P
This attribute contains
an identifier for distinguishing between several configurations of the
directory service within a GDS installation.  The valid range is
from 1 to 20.
.LI
.ne 7
\*LDSX_AUTH_MECHANISM\*O
.P
If this attribute is present, then it identifies the authentication
mechanism that the application requests.  If it is absent or has
the value \*LDSX_NONE_AT_ALL\*O, then 
a \*Lds_bind(\|)\*O without credentials (anonymous bind) is requested. 
The values which this attribute can take are as follows:
.ML
.LI
\*LDSX_NONE_AT_ALL\*O.  No authentication.
.LI
\*LDSX_DEFAULT\*O.  The default authentication mechanism is to use DCE
authentication, therefore, \*LDSX_DEFAULT\*O defaults to 
\*LDSX_DCE_AUTH\*O.  The value for \*LDSX_DEFAULT\*O can be modified
through an environment variable \*LXDS_\%DEF_\%AUTH_\%MECH\*O.  
The value of this
environment variable is checked by the XDS software following a
\*Lds_initialize(\|)\*O function call.
.LI
\*LDSX_SIMPLE\*O.  This requests simple authentication by using the
\*LDS_REQUESTOR\*O and \*LDSX_PASSWORD\*O attributes of the 
\*LDSX_C_GDS_SESSION\*O object.
.LI
\*LDSX_SIMPLE_PROT1\*O.  This is reserved for future use.
.LI
\*LDSX_SIMPLE_PROT2\*O.  This is reserved for future use.
.LI
\*LDSX_DCE_AUTH\*O.  This requests the use of the DCE authentication mechanism.
.LI
\*LDSX_STRONG\*O.  This is reserved for future use.
.LE
.P
If an authentication mechanism is selected that is not currently 
supported, then \*Lds_bind(\|)\*O returns a \*LDS_E_NOT_SUPPORTED\*O error.
If the selected authentication mechanism requires the user's credentials
that cannot be assembled, then a \*LDS_E_NO_INFO\*O error is returned.
.LI
\*LDSX_AUTH_INFO\*O
.P
This attribute is Reserved for future use.
.LE
.P
.ne 5
Applications can assume that an object of OM class
\*LDSX_\%C_\%GDS_\%SESSION\*O, created
with default values of all its OM attributes, works with all the
interface functions.  Such a session can be created by passing the constant
\*LDS_DEFAULT_SESSION\*O as an argument to \*Lds_bind(\|)\*O, having already
negotiated the GDS package.
.P
Table 15-9 defines \*LDSX_C_GDS_SESSION\*O.
.P
.ne 2i
.TB "Default DSX_C_GDS_SESSION"
.TS
center,box,tab(@);
lB | lB
lB | l.
OM Attribute@Default Value
=
DS_DSA_ADDRESS@Value obtained from the cache or absent
DS_DSA_NAME@Value obtained from the cache or absent
DS_FILE_DESCRIPTOR@\*LDS_NO_VALID_FILE_DESCRIPTOR\*O
DSX_DIR_ID@1
DSX_AUTH_MECHANISM@Absent
DSX_AUTH_INFO@Absent
.TE
.nS note
The values of \*LDS_DSA_ADDRESS\*O and \*LDS_DSA_NAME\*O are taken from the
cache of Directory ID 1.
.nE
