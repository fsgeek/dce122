...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: 3_om.xom.gpsml,v $
...\" Revision 1.1.8.7  1995/06/15  16:26:43  rcb
...\" 	edited 1.1 version, PRENTICE HALL reformat
...\" 	[1995/06/13  19:36:30  rcb]
...\"
...\" 	edited 1.1 version, PRENTICE HALL reformat
...\" 	[1995/06/12  21:03:07  rcb]
...\"
...\" Revision 1.1.8.6  1994/08/05  15:58:27  rnollman
...\" 	[rnolman] - Checkin after OSF edits
...\" 	[1994/08/05  15:57:22  rnollman]
...\" 
...\" 	[rnollman] - checkin afaterafter incorporating OSF edits
...\" 
...\" Revision 1.1.8.3  1994/05/14  22:42:35  rnollman
...\" 	last beta submittal
...\" 	[1994/05/14  22:38:23  rnollman]
...\" 
...\" Revision 1.1.8.2  1994/05/10  21:29:16  rnollman
...\" 	final update for beta
...\" 	[1994/05/10  21:29:00  rnollman]
...\" 
...\" Revision 1.1.8.1  1993/10/27  15:25:15  rnollman
...\" 	replaced old version with new version from Dublin
...\" 	[1993/10/27  15:25:00  rnollman]
...\" 
...\" Revision 1.1.6.3  1993/01/28  18:39:25  cjd
...\" 	Embedded copyright notice
...\" 	[1993/01/28  17:58:43  cjd]
...\" 
...\" Revision 1.1.6.2  1992/11/19  21:53:35  weir
...\" 	Moved into 1.0.2doc tree
...\" 	[1992/11/19  21:49:42  weir]
...\" 
...\" Revision 1.1.4.6  1992/11/12  22:24:28  rom
...\" 	Correct index entries.
...\" 	[1992/11/12  22:20:32  rom]
...\" 
...\" Revision 1.1.4.5  1992/11/11  23:41:51  buckler
...\" 	Corrected index entries
...\" 	[1992/11/11  22:45:21  buckler]
...\" 
...\" Revision 1.1.4.4  1992/10/30  21:20:25  lmk
...\" 	Prentice-Hall index entries only
...\" 	[1992/10/30  21:18:27  lmk]
...\" 
...\" Revision 1.1.4.3  1992/10/20  22:27:12  buckler
...\" 	Pre-Prentice-Hall editorial review
...\" 	[1992/10/20  22:25:02  buckler]
...\" 
...\" Revision 1.1.4.2  1992/10/06  20:44:05  steiner
...\" 	First P-H edit pass, edits from Eddie.
...\" 	[1992/10/06  20:43:47  steiner]
...\" 
...\" Revision 1.1.2.5  1992/07/17  19:26:51  weir
...\" 	Fixed a typo.
...\" 	[1992/07/17  19:26:24  weir]
...\" 
...\" Revision 1.1.2.4  1992/06/15  15:20:33  buckler
...\" 	Fixed various formatting problems
...\" 	[1992/06/15  15:17:13  buckler]
...\" 
...\" Revision 1.1.2.3  1992/06/12  21:00:15  buckler
...\" 	Incorporated changes from Brian Keane (Dublin) markup
...\" 	[1992/06/12  20:59:16  buckler]
...\" 
...\" Revision 1.1.2.2  1992/06/10  21:18:37  marty
...\" 	Doc drop from Dublin
...\" 	[1992/06/10  21:14:57  marty]
...\" 
...\" $EndLog$
...\"
.H 1 "Object Management Package"
.P
......\" * COPYRIGHT   (C)  SIEMENS NIXDORF INFORMATIONSSYSTEME AG 1994*
...\" *                  ALL RIGHTS RESERVED                           *
...\" *                                                                *
...\" * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
This chapter defines the object management package (OMP).
The object identifier
(referred to as \*Lom\*O) assigned to the package,
as defined by this guide, is the object identifier specified in ASN.1 as
.iS
{joint-iso-ccitt(2) mhs-motis(6) group(6) white(1) api(2) om(4)}
.iE
.H 2 "Class Hierarchy"
.P
This section shows the hierarchical organization of the OM classes.
.iX "class" "OM"
Subclassification is indicated by indentation, and
the names of abstract classes are in
italics.
Thus, for example, \*LOM_C_ENCODING\*O is an immediate subclass of
\*VOM_C_OBJECT\*O,
an abstract class.
The names of classes to which \*Lom_encode(\|)\*O applies are in
boldface. (DCE XOM does not support the encoding of any OM classes.)
The \*Lom_create(\|)\*O function applies to all concrete classes.
.ML
.ne 5
.LI
\*VOM_C_OBJECT\*O
.ML
.LI
\*LOM_C_ENCODING\*O
.LI
\*LOM_C_EXTERNAL\*O
.LE
.LE
.H 2 "Class Definitions"
.P
The following subsections define the OM classes.
.H 3 "OM_C_ENCODING"
.P
An instance of class
\*LOM_C_ENCODING\*O
is an object represented in a form suitable for transmission between
workspaces, for transport via a network, or for storage in a file.
Encoding can also be a
suitable way of indicating to an intermediate service provider (for example, a
directory, or message transfer system) an object that it does not recognize.
.P
This class has the attributes of its superclass,
\*VOM_C_OBJECT\*O,
in addition to the specific attributes
listed in Table 19-1.
.P
.ne 3.5i
.TB "Attributes Specific to OM_C_ENCODING"
.TS
center,box,tab(#);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
lB | l | c | c | c.
##Value#Value#Value
Attribute#Value Syntax#Length#Number#Initially
=
OM_OBJECT_#String\*L(OM_S_\*O#\*(EM#1#\*(EM
CLASS#\*LOBJECT_\*O
#\*LIDENTIFIER_\*O
#\*LSTRING)\*O
_
OM_OBJECT_#String\s-2\u1\d\s+2#\*(EM#1#\*(EM
ENCODING
_
OM_RULES#String\*L(OM_S_\*O#\*(EM#1#\*Lber\*O
#\*LOBJECT_\*O
#\*LIDENTIFIER_\*O
#\*LSTRING)\*O
.TE
.VL .2i
.LI "\s-11\s0"
If the \*LRules\*O attribute is
\*Lber\*O or \*Lcanonical-ber\*O,
the syntax of the present attribute must be
\*OString\*L(OM_S_ENCODING_STRING)\*O.
.LE
.sp .5
.iX "canonical-ber"
.P
.ML
.LI
\*LOM_OBJECT_CLASS\*O
.P
.iX "OM" "classes"
.iX "class" "OM"
This attribute
identifies the class of the object that the \*LObject Encoding\*O attribute encodes.
The class must be concrete.
.LI
\*LOM_OBJECT_ENCODING\*O
.P
.iX "object" "encoding OM"
This attribute is the encoding itself.
.LI
\*LOM_RULES\*O
.P
.iX "rules" "OM object encoding"
This attribute
identifies the set of rules that are followed to produce the \*LObject Encoding\*O attribute.  Among the defined values of this attribute are those represented as follows:
.ML
.LI
\*LOM_BER\*O
.iX "ASN.1"
.P
This value is specified in ASN.1 as
.iS
{joint-iso-ccitt(2) asn1(1) basic-encoding(1)}
.iE
.P
.ne 5
This value indicates the BER.
(See Clause 25.2 of
Recommendation X.209, ``Specification of Basic Encoding Rules for Abstract
Syntax Notation 1 (ASN.1),'' \*VCCITT Blue Book\*O,
Fascicle VIII.4, International Telecommunications Union, 1988.
Also published by ISO as \*VISO 8825\*O.)
.iX "ISO"
.gl "CCITT"
.gl "ISO"
.LI
\*LOM_CANONICAL_BER\*O
.P
This value is specified in ASN.1 as
.iS
{joint-iso-ccitt(2) mhs-motis(6) group(6) white(1) api(2) om(4)
canonical-ber(4)}
.iE
This value indicates the canonical BER.
(See Clause 8.7 of
Recommendation X.509, ``The Directory: Authentication Framework,''
.I "CCITT Blue Book,"
International Telecommunications Union, 1988.  Also published by ISO as
\*VISO 9594-8\*O.)
.LE
.LE
.P
.nS note
In general, an instance of this class cannot appear as a value whose
syntax is Object (\*VC\*O) if
\*VC\*O
is not \*LOM_C_ENCODING\*O, even if the class of the object encoded is
\*VC\*O.
.nE
.H 3 "OM_C_EXTERNAL"
.P
.iX "external type"
An instance of class \*LOM_C_EXTERNAL\*O is a data value and one or more
information items that describe the data value and identify its data type. 
This class corresponds to ASN.1's External type, and thus the class and the
attributes specific to it are described indirectly in the
specification of ASN.1.  (See Clause 34 of
Recommendation X.208, ``Specification of
Abstract Syntax Notation 1 (ASN.1),'' \*VCCITT Blue Book\*O,
Fascicle VIII.4, International Telecommunications Union, 1988.  Also published
by ISO as \*VISO 8824\*O.)
.iX "CCITT"
.iX "ISO"
.P
This class has the attributes of its superclass,
\*VOM_C_OBJECT\*O,
in addition to the OM attributes specific to this class that are
listed in Table 19-2.
.P
.ne 30
.TB "Attributes Specific to OM_C_EXTERNAL"
.TS
center,box,tab (#);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
lB | l | c | c | c.
##Value#Value#Value
Attribute#Value Syntax#Length#Number#Initially
=
OM_#String\*L(OM_S_\*O#\*(EM#0 or 1\s-2\u1\d\s+2#\*(EM
ARBITRARY_#\*LBIT_STRING)\*O
ENCODING
_
OM_ASN1_#String\*L(OM_S_\*O#\*(EM#0 or 1\s-2\u1\d\s+2#\*(EM
ENCODING#\*LENCODING_\*O
#\*LSTRING)\*O
_
OM_DATA_#String\*L(OM_S_\*O#\*(EM#0 or 1#\*(EM
VALUE_#\*LOBJECT_\*O
DESCRIPTOR#\*LDESCRIPTOR_\*O
#\*LSTRING)\*O
_
OM_DIRECT_#String\*L(OM_S_\*O#\*(EM#0 or 1#\*(EM
REFERENCE#\*LOBJECT_\*O
#\*LIDENTIFIER_\*O
#\*LSTRING)\*O
_
OM_INDIRECT_#\*LOM_S_\*O#\*(EM#0 or 1#\*(EM
REFERENCE#\*LINTEGER\*O
_
OM_OCTET_#String\*L(OM_S_\*O#\*(EM#0 or 1\s-2\u1\d\s+2#\*(EM
ALIGNED_#\*LOCTET_\*O
ENCODING#\*LSTRING)\*O
.TE
.VL .2i
.LI "\s-1\u1\d\s0"
Only one of these three attributes is present.
.LE
.sp .5
.P
.ML
.LI
\*LOM_ARBITRARY_ENCODING\*O
.P
This attribute is
a representation of the data value as a bit string.
.LI
\*LOM_ASN1_ENCODING\*O
.P
The data value.
This attribute can be present only if the data type is an ASN.1 type.
.P
If this attribute value's syntax is an Object syntax,
the data value's representation is that produced by
\*Lom_encode(\|)\*O
when its \*VObject\*O parameter
is the attribute value and its \*VRules\*O parameter is \*Lber\*O.
Thus, the object's class must be one to which \*Lom_encode(\|)\*O
applies.
.LI
.ne 3
\*LOM_DATA_VALUE_DESCRIPTOR\*O
.P
This attribute contains
a description of the data value.
.LI
\*LOM_DIRECT_REFERENCE\*O
.P
This attribute contains
a direct reference to the data type.
.LI
\*LOM_INDIRECT_REFERENCE\*O
.P
This attribute contains
an indirect reference to the data type.
.LI
\*LOM_OCTET_ALIGNED_ENCODING\*O
.P
This attribute contains
a representation of the data value as an octet string.
.LE
.H 3 "OM_C_OBJECT"
.P
The class \*VOM_C_OBJECT\*O
represents information objects of any variety.
This abstract class is distinguished by the fact that it has
no superclass and that all other classes are its subclasses.
.P
The attribute specific to this class is listed in Table 19-3.
.TB "Attribute Specific to OM_C_OBJECT"
.TS
center,box,tab (#);
lB | lB | lB | lB | lB
lB | lB | lB | lB | lB
lB | l | c | c | c.
##Value#Value#Value
Attribute#Value Syntax#Length#Number#Initially
=
OM_CLASS#String\*L(OM_S_\*O#\*(EM#1#\*(EM
#\*LOBJECT_\*O
#\*LIDENTIFIER_\*O
#\*LSTRING)\*O
.TE
.P
.ML
.LI
\*LOM_CLASS\*O
.P
This attribute identifies the object's class.
.LE

