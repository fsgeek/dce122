# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: README,v $
# Revision 1.1.4.1  1996/12/17  20:10:43  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  20:07:58  damon]
#
# Revision 1.1.2.1  1994/10/21  14:57:47  weir
# 	New versions without headers
# 	[1994/10/21  14:57:17  weir]
# 
# $EndLog$
# 
# 
------------------------------------------------------------------------------
# [3.VIII.94]                                                                #
#                               -77 cols-                                    #
------------------------------------------------------------------------------
# 
# 
# 
# 
# 
# 
Directory:

  <dce-root-dir>/dce/doc/dcedoc/src/dce_books/app_gd/style_gd/sample_code/context_app

This directory contains source files for the context handle example
application code described and discussed in the OSF DCE Application
Development Guide -- Introduction and Style Guide volume.

The following files are contained in this directory:

    sample_code/context_app/Makefile
    sample_code/context_app/README
    sample_code/context_app/context.acf
    sample_code/context_app/context.idl
    sample_code/context_app/context_client.c
    sample_code/context_app/context_manager.c
    sample_code/context_app/context_server.c


------------------------------------------------------------------------------

                  RUNNING THE CONTEXT APPLICATION

Very little is required in the way of preparation to run this applica-
tion:

    1. You must have a DCE cell up and running.

    2. You must create the following CDS directory:

           /.:/sample

    3. You must create the following namespace entry for the application
       server:

           /.:/sample/context_server_entry

    4. On the client machine (or winow, if you're running the application
       on a single machine), you must set the value of the environment
       variable RPC_DEFAULT_ENTRY to the pathname of the server's name-
       space entry.


Note that the server entry pathname is determined by the value of the
EXPORT_ENTRY string constant defined at the top of the context_server.c
file; you can change the value of the latter, in which case you must make
the corresponding change in the pathname given in steps 2 and 3 above.

Steps 2 and 3 can be accomplished as follows:


    1. Login as the cell administrator:

           $ dce_login cell_admin -dce-

       Note that the password at your site will probably be different from
       that given above (as the last parameter). For further information
       about the use of dce_login, see the OSF DCE Administration Guide.

    2. Create the CDS entry that will be used to hold the server's binding
       information. For example (using the names given above):

           $ cdscp create directory /.:/sample
           $ rpccp add entry /.:/sample/context_server_entry

       For further information about cdscp and rpccp, see the OSF DCE Admini-
       stration Guide -- Core Components, and the OSF DCE Administration Ref-
       erence.


That's all there is to it. In order to keep things simple, the application
makes no use at all of DCE Security; hence there is no need to set up the
ACL on the server entry, or to create a keytab file, and so on.

Once the above steps have been completed, the server can be invoked as
follows:

        # ./context_server

The client can be invoked (either from another machine in the cell, or from
another window if on the same machine) as follows:

        # setenv RPC_DEFAULT_ENTRY /.:/sample/context_server_entry
        # ./context_client <message>

where <message> is a string that the client will write to and read from
a storage area opened and maintained by the server; the client accesses
this storage area by a context handle returned to it by the server.


