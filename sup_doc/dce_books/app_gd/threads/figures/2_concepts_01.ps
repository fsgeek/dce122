%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 134.00 192.00
-18.00 -18.00 translate
% original bounding box was  18 18 152 210
%%Title: ARTLIB:ZK-3552A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Fri May 31 12:09:58 1991
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
%% ********************************************************************
%%                                                                    *
%% COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
%% Maynard, Massachusetts                                             *
%% All Rights Reserved.                                               *
%%                                                                    *
%% This document is furnished under a license and may be used and     *
%% copied only in accordance with the terms of such license and with  *
%% the inclusion of the above copyright notice. No title to or        *
%% ownership of the document is hereby transferred.                   *
%%                                                                    *
%% The information in this document is subject to change without      *
%% notice and should not be construed as a commitment by Digital      *
%% Equipment Corporation.                                             *
%%                                                                    *
%% ********************************************************************
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF
{ findfont } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 210.456 tr
1 -1 sc
0.800 0.800 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 167.474 240.570 Crop
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Helvetica@ISO LF [10 0 0 -10 0 0] SF
4 0.25606 (read) 134.164 128.613 Text
4 0.23045 (lock) 27.758 148.969 Text
11 0.75537 (mutex_ready) 94.378 155.445 Text
8 0.52492 (Thread A) 1.851 236.869 Text
0.925 slw
0 slc
122.136 29.146 19.431 29.146 Line st
122.136 62.456 122.136 29.146 Line st
121.210 134.627 121.210 116.121 Line st
44.413 17.580 0.000 121.210 152.207 Ellipse st
np 69.395 150.819 mo 
69.395 150.819 li 
69.395 155.445 li 
69.395 155.445 li 
74.947 152.670 li 
74.947 152.670 li gs
0.000 0.000 0.000 rgb
fi gr
0 slc
69.395 154.983 69.395 150.356 Line st
74.947 152.207 69.395 154.983 Line st
69.395 150.356 74.947 152.207 Line st
0 slc
19.431 152.207 71.246 152.207 Line st
19.431 216.976 19.431 152.207 Line st
13.879 37.473 13.879 20.819 Line st
121.210 87.438 24.982 Circle st
np 119.360 119.360 mo 
119.360 119.360 li 
123.986 119.360 li 
123.986 119.360 li 
121.210 114.734 li 
121.210 114.734 li gs
0.000 0.000 0.000 rgb
fi gr
0 slc
123.986 118.897 119.360 118.897 Line st
121.210 114.271 123.986 118.897 Line st
119.360 118.897 121.210 114.271 Line st
6 0.38409 (ready=) 107.331 85.125 Text
2 0.20485 (NO) 113.808 96.228 Text
np 20.356 31.459 mo 
20.356 31.459 li 
20.356 26.833 li 
20.356 26.833 li 
15.730 29.609 li 
15.730 29.609 li gs
0.000 0.000 0.000 rgb
fi gr
20.356 26.370 20.356 30.997 Line st
15.730 29.146 20.356 26.370 Line st
20.356 30.997 15.730 29.146 Line st
4 0.24326 (wait) 60.143 11.103 Text
8 0.47371 (\(unlock\)) 51.815 24.982 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000
