%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: -18.0 -18.0 185.00 -3.00
-36.00 -36.00 translate
% original bounding box was  18 18 221 33
%%Title: ARTLIB:GS-0380.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Fri Apr 12 10:50:52 1991
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
%% ********************************************************************
%%                                                                    *
%% COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
%% Maynard, Massachusetts                                             *
%% All Rights Reserved.                                               *
%%                                                                    *
%% This document is furnished under a license and may be used and     *
%% copied only in accordance with the terms of such license and with  *
%% the inclusion of the above copyright notice. No title to or        *
%% ownership of the document is hereby transferred.                   *
%%                                                                    *
%% The information in this document is subject to change without      *
%% notice and should not be construed as a commitment by Digital      *
%% Equipment Corporation.                                             *
%%                                                                    *
%% ********************************************************************
0 72 mul 0.25 72 mul translate
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF
{ findfont } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 32.804 tr
1 -1 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 202.634 14.804 Crop
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Helvetica@ISO LF [10 0 0 -10 0 0] SF
1 0.10242 (D) 1.851 11.103 Text
1 0.08962 (B) 52.740 11.103 Text
1 0.10242 (C) 102.705 11.103 Text
1 0.08962 (A) 154.520 11.103 Text
0 slc
48.114 7.865 12.954 7.865 Line st
98.079 7.865 62.918 7.865 Line st
200.784 7.865 165.623 7.865 Line st
148.969 7.865 113.808 7.865 Line st
np 42.562 6.477 mo 
42.562 6.477 li 
42.562 11.103 li 
42.562 11.103 li 
48.114 8.327 li 
48.114 8.327 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
0 slc
42.562 10.641 42.562 6.014 Line st
48.114 7.865 42.562 10.641 Line st
42.562 6.014 48.114 7.865 Line st
np 92.527 6.477 mo 
92.527 6.477 li 
92.527 11.103 li 
92.527 11.103 li 
98.079 8.327 li 
98.079 8.327 li gs
0.000 0.000 0.000 rgb
fi gr
92.527 10.641 92.527 6.014 Line st
98.079 7.865 92.527 10.641 Line st
92.527 6.014 98.079 7.865 Line st
np 143.417 6.477 mo 
143.417 6.477 li 
143.417 11.103 li 
143.417 11.103 li 
148.969 8.327 li 
148.969 8.327 li gs
0.000 0.000 0.000 rgb
fi gr
143.417 10.641 143.417 6.014 Line st
148.969 7.865 143.417 10.641 Line st
143.417 6.014 148.969 7.865 Line st
np 195.232 6.477 mo 
195.232 6.477 li 
195.232 11.103 li 
195.232 11.103 li 
200.784 8.327 li 
200.784 8.327 li gs
0.000 0.000 0.000 rgb
fi gr
195.232 10.641 195.232 6.014 Line st
200.784 7.865 195.232 10.641 Line st
195.232 6.014 200.784 7.865 Line st
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000
