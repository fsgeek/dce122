...\"
...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: 11_cds_gda.gpsml,v $
...\" Revision 1.1.8.2  1996/09/27  13:43:05  wardr
...\" 	{def,R1.2.2}
...\" 	fixed broken index hits
...\" 	[1996/09/27  13:41:42  wardr]
...\"
...\" Revision 1.1.8.1  1996/09/19  15:14:19  sherman
...\" 	{def,13578,R1.2.2}
...\" 	Replaced cdscp with dcecp commands
...\" 	[1996/09/19  15:13:23  sherman]
...\" 
...\" Revision 1.1.6.17  1995/05/25  19:01:49  rcb
...\" 	PRENTICE HALL reformat: final changes
...\" 	[1995/05/25  13:14:11  rcb]
...\" 
...\" 	PRENTICE HALL reformat -- index entries, odds and ends
...\" 	[1995/03/27  19:50:09  rcb]
...\" 
...\" 	PRENTICE HALL reformat
...\" 	[1995/03/01  16:47:32  rcb]
...\" 
...\" 	incoroporated 1.1 edits
...\" 	[1995/03/01  16:21:29  rcb]
...\" 
...\" Revision 1.1.6.16  1994/11/03  23:26:57  neilson
...\" 	Substituted macros for book names in cross refs.
...\" 	[1994/11/03  01:38:03  neilson]
...\" 
...\" 	Substituted macros for book names in cross refs.
...\" 
...\" Revision 1.1.6.15  1994/10/20  00:15:53  zahn
...\" 	{edt,10578,R1.1}
...\" 
...\" 	Added technical review comments.
...\" 	[1994/10/20  00:15:25  zahn]
...\" 
...\" Revision 1.1.6.14  1994/10/19  21:55:20  neilson
...\" 	Automatic fix to mistake in .zA-.zZ
...\" 	[1994/10/19  21:54:27  neilson]
...\" 
...\" Revision 1.1.6.13  1994/10/19  20:56:42  wardr
...\" 	{edit R1.1}
...\" 	Final GA release edits
...\" 	[1994/10/19  20:55:13  wardr]
...\" 
...\" Revision 1.1.6.12  1994/10/03  15:17:44  rjohnson
...\" 	Removed sentence saying that "DCE does not support cells that are registered
...\" 	simultaneously in GDS and DNS" from introductory paragraph.
...\" 	[1994/10/03  15:17:22  rjohnson]
...\" 
...\" Revision 1.1.6.11  1994/09/15  20:03:59  rjohnson
...\" 	Changes made: Edited MX example in Section 12.3.1 in response to
...\" 	CR7494.
...\" 	[1994/09/15  20:03:27  rjohnson]
...\" 
...\" Revision 1.1.6.10  1994/09/06  21:42:05  steto
...\" 	{enh, CR10014, R1.1, Prepared for final review.}
...\" 	[1994/09/06  21:41:48  steto]
...\" 
...\" Revision 1.1.6.9  1994/08/12  19:46:17  steto
...\" 	{edt, R1.1, Edited for final review.}
...\" 	[1994/08/12  19:45:28  steto]
...\" 
...\" Revision 1.1.6.8  1994/07/12  18:32:02  jshirley
...\" 	{def,10220,R1.1}
...\" 	Remove reference to rpcd and sec_clientd
...\" 	[1994/07/12  18:31:41  jshirley]
...\" 
...\" Revision 1.1.6.7  1994/05/18  13:04:06  wardr
...\" 	{edit R1.1}SGML fixes
...\" 	[1994/05/18  13:03:49  wardr]
...\" 
...\" Revision 1.1.6.6  1994/05/15  00:36:05  steto
...\" 	{enh, 10014, edt, R1.1}
...\" 	Prepared for Beta.
...\" 	[1994/05/15  00:33:44  steto]
...\" 
...\" Revision 1.1.6.5  1994/05/11  19:12:54  rjohnson
...\" 	No changes made.
...\" 	[1994/05/11  19:10:01  rjohnson]
...\" 
...\" 	Changes made: None
...\" 	File name: admin_gd/directory/cds/11_cds_gda.gpsml
...\" 
...\" Revision 1.1.6.4  1993/08/24  01:37:44  tmw
...\" 	Added index entries for second version of master index.
...\" 	[1993/08/24  01:32:56  tmw]
...\" 
...\" Revision 1.1.6.3  1993/07/06  18:34:01  buckler
...\" 	{edit, R1.0.2}
...\" 	Prentice-Hall editorial changes.
...\" 	[1993/07/06  18:24:21  buckler]
...\" 
...\" 	{edit, R1.0.2}
...\" 	More Prentice-Hall edits.
...\" 	[1993/06/29  21:27:37  buckler]
...\" 
...\" Revision 1.1.6.2  1993/06/01  18:15:40  buckler
...\" 	{edit, R1.0.2}
...\" 	Prentice-Hall editorial review.
...\" 	[1993/06/01  18:08:38  buckler]
...\" 
...\" Revision 1.1.4.8  1993/02/21  21:40:15  lipsky
...\" 	Changes made:  Fixed typo in example
...\" 	File name:  src/admin_gd/directory/cds/11_cds_gda.gpsml
...\" 	[1993/02/21  21:39:38  lipsky]
...\" 
...\" Revision 1.1.4.7  1993/02/15  19:11:26  buckler
...\" 	Changed .P! to .pI and added Postscript boundary boxes
...\" 	[1993/02/15  19:10:29  buckler]
...\" 
...\" Revision 1.1.4.6  1993/01/28  19:06:36  dbelch
...\" 	Embedding copyright notice
...\" 	[1993/01/28  18:31:09  dbelch]
...\" 
...\" Revision 1.1.4.5  1993/01/27  16:04:31  buckler
...\" 	Fixed cross-refs and figure calls for new book org
...\" 	[1993/01/27  15:59:36  buckler]
...\" 
...\" Revision 1.1.4.4  1993/01/10  19:05:29  lipsky
...\" 	Changes made:  Added MX example
...\" 	File name:  src/admin_gd/directory/cds/11_cds_gda.gpsml
...\" 	CR#: 6023
...\" 	[1993/01/10  19:04:32  lipsky]
...\" 
...\" Revision 1.1.4.3  1992/08/26  13:29:04  weir
...\" 	Test
...\" 	[1992/08/26  13:27:37  weir]
...\" 
...\" 	Removed change bars
...\" 	[1992/08/26  13:24:39  weir]
...\" 
...\" Revision 1.1.4.2  1992/08/25  20:33:20  weir
...\" 	Moved to dce1.0.2doc
...\" 	[1992/08/25  20:25:52  weir]
...\" 
...\" Revision 1.1.2.3  1992/07/04  11:34:18  lipsky
...\" 	Changes made:  Add information cr# 3914
...\" 	File name:  src/admin_gd/directory/cds/11_cds_gda.gpsml
...\" 	Change request #: 3914
...\" 	[1992/07/04  11:33:25  lipsky]
...\" 
...\" Revision 1.1  1992/01/29  16:16:27  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Fri.  Dec 6, 1991                 Update file submission for
...\"                                    final integration at IBM.
...\"                                   
...\"
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Massachusetts                                             *
...\" All Rights Reserved.                                               *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or        *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
.H 1 "Managing Intercell Naming"
.P
.iX "-[" "lookups" "between cells"
To find names outside of the local cell, CDS clerks must have
a way to locate directory servers in other cells.  The Global Directory Agent 
(GDA) enables intercell communications by serving as a connection to other
cells through the global naming environment.  This chapter describes how
the GDA works and how to manage it.  The chapter
also describes how to define the local cell in either 
of the global naming environments (GDS or DNS), which is a step that
is necessary to make the local cell accessible to other cells. 
.H 2 "How the Global Directory Agent Works"
.P
.iX "-[" "GDA" "how it works"
.iX "-[" "CDS" "clerks" "interaction with GDA"
The GDA is an intermediary between CDS clerks in the local cell and CDS 
servers in other cells.  A CDS clerk treats the GDA like any other name
server, passing it name lookup requests.  However, the GDA 
provides the clerk with only one specific service; it looks up a 
cell name in the GDS or DNS namespace and returns the results to 
the clerk.  The clerk then uses those results to contact a CDS server in the 
foreign cell.
.P
.ne 5
A GDA must exist inside any cell that wants to communicate with other
cells.  It can be on the same system as a CDS server, or it can exist
independently on another system.  You can configure more than one GDA in a
cell for increased availability and reliability.  Like a CDS server, a GDA
is a principal and must authenticate itself to clerks.
.P
CDS finds a GDA by reading address information that is stored in the
\*LCDS_GDAPointers\*O attribute associated with the cell root
directory.  Whenever a GDA process starts, it creates a new entry or updates
an existing entry in the \*LCDS_GDAPointers\*O attribute.  The entry contains
the address of the host on which the GDA is currently running.  If multiple
GDAs exist in a cell, they each create and maintain their own address
information in the \*LCDS_GDAPointers\*O attribute. 
.P
When a CDS server receives a request for a name that is not in the local
cell, the server examines the \*LCDS_GDAPointers\*O
attribute of the cell root directory to find the location of one or
more GDAs.  Figure 22-1 shows how a CDS clerk and CDS server interact to
find a GDA.
.P
.FG "How the CDS Clerk Finds a GDA"
.pI ../directory/cds/figures/11_cds_gda_10.ps 3.5i 2.75i
.sp .5
.P
The following steps summarize the GDA search that is illustrated
in the preceding figure: 
.AL
.LI
On Node A, a client application passes a global name,
beginning with the \*L/...\*O prefix, to the CDS clerk.
.LI
The clerk passes the lookup request to a CDS server that
it knows about on Node B.
.LI
The server's clearinghouse contains a replica of the cell root directory,
so the server reads the \*LCDS_GDAPointers\*O
attribute and returns the address of Node C, where 
a GDA is running.
.LI
The clerk passes the lookup request to the GDA.
.LE
.P
Figure 22-2 shows how CDS and a GDA interact to find a name in a foreign
cell that is defined in DNS.  Suppose the name is
\*L/.../widget.com/printsrv1\*O, which represents a print server in the
foreign cell.
.P
.FG "How the GDA Helps CDS Find a Name"
.pI ../directory/cds/figures/11_cds_gda_20.ps 4.5i 3.7i
.sp .5
.P
.ne 2
The following steps summarize the name search
that is illustrated in the preceding figure:
.AL
.LI
The client application passes the name \*L/.../widget.com/printsrv1\*O to the
CDS clerk.
.LI 
The clerk passes a lookup request to a CDS server that it knows about on
Node B.
.LI
The server's clearinghouse contains a replica of the cell root directory,
so the server looks up the \*LCDS_GDAPointers\*O attribute and returns the
address of Node C, where a GDA is running.
.LI
The clerk passes the lookup request to the GDA.
...\" The request includes the
...\" resolved portion of the name (\*L/...\*O) and the unresolved portion 
...\" (\*Lwidget.com/printsrv1\*O).
.LI
The GDA recognizes that the name is a DNS-style name, so it assumes 
that the second component is a cell name that is
defined in DNS.  It passes that portion of the name 
(\*Lwidget.com\*O) to DNS.  For simplicity, the figure shows
only one DNS server; more than one DNS server can actually be
involved in resolving a global cell name.
.nS "note"
Although this example concerns the lookup of a DNS-style name,
the sequence and execution of operations is nearly identical for a
GDS name or a hierarchical cell name.
If the GDA recognizes that a name is a GDS-style name, it passes the
name to a GDS server, rather than to a DNS server.  If the GDA recognizes
that a name is a hierarchical cell name, it passes it to the CDS
server of the topmost cell in the hierarchy, which is registered
in one of the global namespaces.  The CDS server in this cell
``walks down'' the cell hierarchy to locate the name.
.nE
.LI
DNS looks up and returns to the GDA information 
that is associated with the \*Lwidget.com\*O cell entry.  The information
includes the addresses of servers that maintain replicas of
the root directory of the \*L/.../widget.com\*O cell namespace.
.LI
The GDA passes the information about the foreign cell to the clerk.
.LI
The clerk contacts the CDS server on Node E in the foreign cell, passing it
a lookup request.
...\" with both the resolved portion of the name 
...\" (\*L/.../widget.com\*O) and the unresolved portion (\*Lprintsrv1\*O).
.LI
.ne 6
The Node E server's clearinghouse contains a replica of the root directory, so
the server looks up the entry for \*Lprintsrv1\*O in the root and passes the 
requested information
to the clerk on Node A.  For simplicity, this example shows the clerk 
contacting only
one server in the foreign cell.  While resolving a full name, the clerk may 
actually receive referrals to several servers in the foreign cell.
.LI
The clerk passes the information to the client application that requested it.
.LE
.P
Note that
both of the previous examples (Figures 22-1 and 22-2)
represent initial lookups.  The
CDS clerk caches the locations of GDAs once it discovers
them.  The clerk also caches the addresses of servers in foreign cells that
it learns about, enabling it to contact the foreign servers directly on 
subsequent requests for names in the same cell.
.P
Note also that a GDA knows its own cell name and can therefore avoid contacting
a global directory service to look up names in its own cell.  Furthermore,
the GDA can recognize whether a cell name conforms to the
GDS or DNS naming syntax, and it
uses that knowledge to route a lookup request to the appropriate global
directory service.
.iX "-]" "lookups" "between cells" 
.iX "-]" "GDA" "how it works"
.iX "-]" "CDS" "clerks" "interaction with GDA"
.H 2 "Managing the Global Directory Agent"
.iX "-[" "GDA" "managing"
.P
Use the DCE configuration program to configure the GDA;
the GDA requires little management once it is configured.  (See 
...\" the \*VPlanning, Configuring, and Starting Up DCE\*O 
...\" module of this guide 
the \*(Ai
for details on configuring the GDA.)
.P
...\" Note to Licensee Writers: Many vendors offer customizable startup scripts
...\" that contain commands to start and halt network processes.  If you ship such
...\" scripts, you might mention them here as the recommended method of
...\" starting and stopping the GDA.  The following is a suggested wording:
...\" .P
.iX "\*Lgdad\*O process"
The GDA is typically started and stopped automatically by scripts that 
execute as part of normal system startup and shutdown procedures.  Sometimes,
however, you may want to use commands to stop and restart
a GDA.  Once you have configured GDA with the DCE configuration
program, you can use these steps to start and stop GDA.
.P
The GDA runs as a process called \*Lgdad\*O.  
To start the \*Lgdad\*O process, follow these steps:
.P
.AL
.LI
Make sure that a CDS server is already running somewhere within the cell.
.LI
Log into the system as superuser (\*Lroot\*O).
.LI
.ne 4
Enter the following command to see if the \*Ldced\*O process is already
running:
.iS
\*C# \*Lps
.iE
.P
If the \*Ldced\*O process appears on the list of active processes,
proceed to step 5.  If the \*Ldced\*O process does not appear on the list
of active processes,
enter the following command to start the process:
.iS
\*C# \*Ldced
.iE
.LI
Enter the following command to start the \*Lcdsadv\*O process:
.iS
\*C# \*Lcdsadv
.iE
.LI
Enter the following command to start the \*Lgdad\*O process:
.iX "\*Lgdad\*O command"
.iS
\*C# \*Lgdad\*O
.iE
.LE
.P
To stop the GDA, enter the following command,
where \*Vpid\*O is the process identifier of the \*Lgdad\*O process:
.P
\*C#\*L kill \*Vpid\*O
.P
.iX "-]" "GDA" "managing"
.H 2 "Enabling Other Cells to Find Your Cell"
.iX "-[" "cells" "contacting foreign"
.P
The GDA is the mechanism that allows CDS clerks in your local cell to find
other cells.  To make your cell accessible to others,
you must create an entry for it in one of the currently supported
global naming environments.  Before you do this, obtain a unique cell name
from the appropriate naming authority.  (See 
...\" the \*VPlanning, Configuring, and Starting Up DCE\*O 
...\" module of this guide. 
the \*(Ai for details.)
.P
.ne 8
.zA "def,13578,R1.2.2,Replaced cdscp with dcecp"
After you configure a cell, name it, and initialize the cell namespace, you
can use the \*Ldcecp directory show\*O command to
obtain the data you need to create or modify the cell entry in DNS or
GDS.  The data in a cell entry is what the GDA passes to CDS after looking
up a cell 
name.  CDS, in turn, uses the information to contact servers in the
cell.  The following subsections describe 
how to define and maintain a cell entry in DNS or GDS.  These sections
assume a basic familiarity with DNS and GDS; for details, see the
appropriate documentation for each global name service.
.zZ "def,13578,R1.2.2,Replaced cdscp with dcecp"
.P
You can also define and maintain a cell entry in the CDS namespace
of another cell; this type of definition exists in a hierarchical
cell configuration.  Section 21.6 in this guide describes how to define
a cell in the CDS namespace of another cell.
.H 3 "Defining a Cell in the Domain Name System"
.iX "-[" "DNS" "defining cell names"
.iX "-[" "resource records"
.P
Names in DNS are associated with one or more data structures called
\*Eresource records\*O.  The resource records are stored in a 
data file whose name and location are implementation specific.  To create
a cell entry, you must edit the data file and 
create two resource records for each CDS server that maintains a 
replica of the cell namespace root.
.P
The first resource record, whose type can be AFSDB or MX,
contains the host name of the system where the CDS server
resides.  You can use MX as an alternative to using AFSDB.  
The second record, of type TXT, contains the following information 
about the replica of the root directory that the server maintains:
.ML
.LI
The UUID of the cell namespace, in hexadecimal notation
.LI
The type of the replica (master or read-only)
.LI
The global CDS name of the clearinghouse where the replica resides
.LI
The UUID of the clearinghouse, in hexadecimal notation
.LI
The DNS name of the host where the clearinghouse resides
.LE
.P
.ne 10
The following example shows a set of AFSDB resource records for a cell 
that is named \*Lcs.tech.edu\*O,
in which two replicas of the root directory exist.  Note that only the first
resource record contains the cell name; the second, third, and fourth records 
are assumed to be associated with the same cell because they do not contain a
cell name.  The \*LTTL\*O heading stands for time-to-live, which is a value, in
seconds, after which the data is no longer considered valid in a DNS
cache.  (The value shown specifies a default value of 1 week.)  The \*LIN\*O
class indicates that the protocol is Internet, and the subtype of 
\*L2\*O indicates that a name server exists on the host named in the record.
.oS
.ps 10
.vs 12
;First Replica:
;Name            TTL       Class     Type     Subtype   Host      
cs.tech.edu      604800    IN        AFSDB     2        fox.cs.tech.edu
;Name            TTL       Class     Type     Rdata       
                 604800    IN        TXT      (1        ;version
                 fd3328c4-2a4b-11ca-af85-09002b1c89bb   ;ns uuid
                 Master                                 ;Replica1 type
                 /.../cs.tech.edu/cs1_ch                ;ch name
                 fd3328c5-2a4b-11ca-af85-09002b1c89bb   ;ch uuid
                 fox.cs.tech.edu)                       ;host    
;Second Replica: 
                 604800    IN        AFSDB     2        rox.cs.tech.edu
                 604800    IN        TXT      (1        ;version
                 fd3328c4-2a4b-11ca-af85-09002b1c89bb   ;ns uuid
                 Read-only                              ;Replica2 type
                 /.../cs.tech.edu/cs2_ch                ;ch name
                 fd3429c4-2a4b-11ca-af87-09002b1c89bb   ;ch uuid
                 rox.cs.tech.edu)                       ;host
.ps 12
.vs 14
.oE
.P
You can use MX as an alternative to using AFSDB.  The following
example shows a set of MX resource records for the same cell, 
\*Lcs.tech.edu\*O, in which two replicas of the root directory exist.
.oS
.ps 10
.vs 12
.ne 18
;First Replica:
;Name            TTL       Class     Type    Preference   Exchange      
cs.tech.edu.     604800    IN        MX      1            fox.cs.tech.edu.
;Name            TTL       Class     Type    Rdata       
                 604800    IN        TXT     (1           ;version
                 fd3328c4-2a4b-11ca-af85-09002b1c89bb     ;ns uuid
                 Master                                   ;Replica1 type
                 /.../cs.tech.edu/cs1_ch                  ;ch name
                 fd3328c5-2a4b-11ca-af85-09002b1c89bb     ;ch uuid
                 fox.cs.tech.edu)                         ;host    
;Second Replica: 
                 604800    IN        MX      2            rox.cs.tech.edu.
                 604800    IN        TXT     (1           ;version
                 fd3328c4-2a4b-11ca-af85-09002b1c89bb     ;ns uuid
                 Read-only                                ;Replica2 type
                 /.../cs.tech.edu/cs2_ch                  ;ch name
                 fd3429c4-2a4b-11ca-af87-09002b1c89bb     ;ch uuid
                 rox.cs.tech.edu)                         ;host
.ps 12
.vs 14
.oE
.iX "-]" "resource records"
.iX "\*Ldcecp\*O commands" "\*Ldirectory show\*O"
.P
.zA "def,13578,R1.2.2,Replaced cdscp with dcecp"
After you configure a cell, you can use the
\*Ldcecp directory show\*O command to display the
information that is required to construct resource records like those shown
in the previous example.  The following is an example \*Ldirectory show\*O
command that displays output for a cell named
\*L/.../cs.tech.edu\*O. 
.iS
\*Cdcecp>\*L directory show /.../cs.tech.edu\*O
.iE
.P
To create a new resource record in the DNS namespace, use the
information from the \*L directory show\*O command and place the 
properly-formatted data into the DNS data file.
.iX "-]" "DNS" "defining cell names"
.H 3 "Defining a Cell in the Global Directory Service"
.P
.iX "-[" "GDS" "defining cell names"
In GDS, cell information is contained in two attributes:
\*LCDS-Cell\*O and \*LCDS-Replica\*O.  You can cause an existing
GDS name to become a cell entry by adding these two attributes to the
name.  If the name you want to use for the cell does not yet exist, you must
create it and then add the attributes.  The GDS administration program uses
numbered screens called \*Emasks\*O to accept user input.  Use the object
administration masks to create a cell entry.
(See the \*(Ax for details.)
.P
After you configure a cell, you can use the \*Ldcecp directory show\*O 
command to obtain the data that 
you need to supply when you are creating the \*LCDS-Cell\*O 
and \*LCDS-Replica\*O attributes.
The following is an example \*Ldirectory show\*O command and the resulting
GDS-formatted output for a cell that is named \*L/.../C=US/O=ABC/OU=Sales\*O:
.iS
.ne 18
\*Cdcecp> \*Ldirectory show /.../C=US/O=ABC/OU=Sales\*O
.iE
.oS
{RPC_ClassVersion {01 00}}
{CDS_CTS 1996-04-18-20:11:02.385764100/08-00-09-85-01-22}
{CDS_UTS 1996-08-01-18:01:37.408282100/08-00-09-85-01-22}
{CDS_ObjectUUID 68f0755c-9956-11cf-9da3-080009850122}
{CDS_Replicas
 {{CH_UUID 59eb61fc-9956-11cf-9da3-080009850122}
  {CH_Name /.../c=us/o=abc/ou=sales/dcegecko_ch}
  {Replica_Type Master}
  {Tower {ncadg_ip_udp 15.22.50.148}}
  {Tower {ncacn_ip_tcp 15.22.50.148}}}}
{CDS_AllUpTo 1996-08-01-14:39:36.404042100/08-00-09-85-01-22}
{CDS_Convergence medium}
{CDS_ParentPointer
 {{Parent_UUID 5a824f54-9956-11cf-9da3-080009850122}
  {Timeout
   {expiration 1996-08-02-14:01:36.251}
   {extension +1-00:00:00.000I0.000}}
  {myname /.../c=us/o=abc/subsys}}}
{CDS_DirectoryVersion 3.0}
{CDS_ReplicaState on}
{CDS_ReplicaType Master}
{CDS_LastSkulk 1996-08-01-14:39:36.404042100/08-00-09-85-01-22}
{CDS_LastUpdate 1996-08-01-18:01:37.408282100/08-00-09-85-01-22}
{CDS_Epoch 68fdf042-9956-11cf-9da3-080009850122}
{CDS_ReplicaVersion 3.0}
\*Cdcecp>\*O
.oE
.P
To create a new resource record in GDS, use the information from the
\*Ldirectory show\*O command to fill in the fields of Mask 21 (\*LCDS-Cell\*O) 
and Mask 22 (\*LCDS-Replica\*O) in the GDS administration program.
.iX "-]" "GDS" "defining cell names"
.iX "-]" "cells" "contacting foreign"
.zZ "def,13578,R1.2.2,Replaced cdscp with dcecp"
