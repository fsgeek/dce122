...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: subtree.gpsml,v $
...\" Revision 1.1.4.1  1996/09/19  15:01:02  sherman
...\" 	{def,13575,R1.2.2}
...\" 	Miscellaneous dcecp fixes
...\" 	[1996/09/19  15:00:27  sherman]
...\"
...\" Revision 1.1.2.11  1995/05/25  19:04:06  rcb
...\" 	PRENTICE HALL reformat: final changes
...\" 	[1995/05/25  13:15:05  rcb]
...\" 
...\" 	PRENTICE HALL reformat -- index entries, odds and ends
...\" 	[1995/03/27  19:49:58  rcb]
...\" 
...\" 	prevented hyphenation of option names
...\" 	[1995/03/09  15:01:02  rcb]
...\" 
...\" 	PRENTICE HALL reformat
...\" 	[1995/03/01  15:52:33  rcb]
...\" 
...\" 	incoroporated 1.1 edits
...\" 	[1995/03/01  14:39:20  rcb]
...\" 
...\" Revision 1.1.2.10  1994/10/19  20:56:44  wardr
...\" 	{edit R1.1}
...\" 	Final GA release edits
...\" 	[1994/10/19  20:55:15  wardr]
...\" 
...\" Revision 1.1.2.9  1994/10/14  18:38:06  steto
...\" 	{edt, R1.1, Incorporated review comments.}
...\" 	[1994/10/14  18:37:35  steto]
...\" 
...\" Revision 1.1.2.8  1994/09/14  15:40:06  steto
...\" 	{enh, CR 10014, R1.1, Inc'd. add'l. engineer's comments.}
...\" 	[1994/09/14  15:39:34  steto]
...\" 
...\" Revision 1.1.2.7  1994/09/06  21:35:15  steto
...\" 	{enh, CR10014, R1.1, Prepared for final review.}
...\" 	[1994/09/06  21:34:53  steto]
...\" 
...\" Revision 1.1.2.6  1994/08/19  22:13:51  steto
...\" 	[enh, CR10014, R1.1, Changed for final review.}
...\" 	[1994/08/19  22:13:29  steto]
...\" 
...\" Revision 1.1.2.5  1994/06/28  20:25:47  steto
...\" 	{CR10014,R1.1}
...\" 	Updated the chapter so procedures use dcecp instead of cdscp.  Was an extensive rewrite because dcecp does not use a temp or log file and recovery is different.  Also, dcecp does not preserve the source object ACLs, therefore these have to be recreated at the target.
...\" 	[1994/06/28  20:25:20  steto]
...\" 
...\" Revision 1.1.2.4  1994/06/13  17:24:18  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  17:24:06  devobj]
...\" 
...\" Revision 1.1.2.3  1994/05/24  11:36:18  wardr
...\" 	{edit R1.1}
...\" 	fixed build problem
...\" 	[1994/05/24  11:35:36  wardr]
...\" 
...\" Revision 1.1.2.2  1994/05/13  19:16:03  rjohnson
...\" 	Changes made: Changed names of figure files
...\" 	File name: admin_gd/directory/cds/subtree.gpsml
...\" 	CR#: 10606
...\" 	[1994/05/13  19:15:44  rjohnson]
...\" 
...\" Revision 1.1.2.1  1994/05/12  13:32:45  rjohnson
...\" 	Changes made: New subtree chapter
...\" 	File name: admin_gd/directory/cds/subtree.gpsml
...\" 	CR#: 10606
...\" 	[1994/05/12  13:32:24  rjohnson]
...\" 
...\" $EndLog$
.H 1 "Using the CDS Subtree Commands to Restructure CDS Directories"
.P
.iX "merging CDS directories" "overview"
.iX "directories" "merging"
.iX "subtrees" "merging"
Sometimes, because of corporate restructuring or for other reasons, you 
need to combine or rearrange various directories or subtrees of
directories in your CDS namespace.
.P
For example, suppose the engineering group in your
organization, \*L/.:/eng\*O, is combined with the research and development
group, \*L/.:/rnd\*O, and that the two groups begin to share a
common set of applications and other network resources.  You can reflect
this organizational change in your namespace hierarchy by merging the
contents of these directories.
.P
Similarly, if the engineering group becomes subordinate to the research
and development group, you can reflect this change by creating an empty
directory named 
\*L/.:/rnd/eng\*O
and then merging the contents of the
\*L/.:/eng\*O
directory into
\*L/.:/rnd/eng\*O,
effectively appending
\*L/.:/eng\*O
below
\*L/.:/rnd\*O.
.H 2 "Overview of the Merge and Append Procedures"
.P
.iX "merging" "overview of procedure"
.iX "interim file"
To merge or append CDS directories, you use the DCE control program
(\*Ldcecp\*O) \*Ldirectory merge\*O command.  The basic steps for both
procedures are as follows:
.AL
.LI
At your system prompt, enter \*Ldcecp\*O to invoke the DCE control program.
.LI
Merge or append one existing directory with another existing
directory.  To do this, use the \*Ldirectory merge\*O command
to combine the directory's information about its descendants (object
entries, soft links, and child directories) with
another directory's information or to append the information below
an existing bottom-level directory.
.LI
Delete the source directory or subtree (and its contents) that you merged
in step 2 from its old location in the hierarchy by using the
\*Ldirectory delete\*O command.  Replace the deleted directory information
with a single soft link of the same name to redirect lookups of the
information at the new location by using the \*Llink create\*O command.
.LE
.P
.nS "note"
The presence of clearinghouses, duplicate names, or
unreachable names in a merged directory requires special handling.
The \*Lmerge\*O and \*Lappend\*O operations described in the following
sections assume that no duplicate names exist in the source and target
directory or subtree, and that the clearinghouses that store the master
replicas of affected directories are enabled and reachable at the time the
operations are initiated.
.nE
.P
The example \*Lmerge\*O and \*Lappend\*O
operations described in this section are
based on an example namespace, shown in the following figure. 
.P
.ne 2.25i
.FG "Example Namespace Hierarchy"
.pI ../directory/cds/figures/subtree_namespace.ps 2.2i 1.75i
.sp .5
.P
The example namespace consists of two directories under
the root:
\*L/.:/eng\*O
and
\*L/.:/rnd\*O.
The source directory
(\*L/.:/eng\*O)
contains two entries:
\*L/.:/eng/obj1\*O and
\*L/.:/eng/link1\*O.
The target directory
(\*L/.:/rnd\*O)
also contains two entries:
\*L/.:/rnd/obj2\*O and
\*L/.:/rnd/link2\*O.
.H 2 "Merging CDS Directories"
.P
.zA "def,13575,R1.2.2,Replaced command with operation"
.iX "CDS" "merging directories"
The following procedure merges the source directory
\*L/.:/eng\*O
into the target directory
\*L/.:/rnd\*O:
.AL
.LI
Perform a skulk on the \*L/.:/eng\*O directory before merging it with the
\*L/.:/rnd\*O directory.  This synchronization of the source directory's
replicas can prevent errors that cause the merge operation to fail.
.iS
\*Cdcecp> \*Ldirectory synchronize  /.:/eng\*O
\*Cdcecp>
.iE
.LI
Run the \*Ldirectory merge\*O command to merge the \*L/.:/eng\*O and
\*L/.:/rnd\*O directories:
.iS
\*Cdcecp> \*Ldirectory merge  /.:/eng  -into  /.:/rnd\*O
\*Cdcecp>
.iE
.P
Note that the \*Ldirectory merge\*O command merges only the immediate
contents of the source directory named in the command-line argument 
(that is, the object entries, soft links, and child directories
in these directories).
.P
.ne 6
To copy the descendants of any child directories of
a directory to a target location, you must use
the \%\*L-tree\*O option of the command.  For example,
if the \*L/.:/eng\*O directory in the previous example included the child
directories \*Ldev\*O and \*Lqa\*O, and you wanted to merge the contents
of these directories into the target directory \*L/.:/rnd\*O, you would
enter the following command line:
.iS
\*Cdcecp> \*Ldirectory merge  /.:/eng  -into  /.:/rnd  -tree\*O   
\*Cdcecp>
.iE
.P
By default, the \*Ldirectory merge\*O command places all object entries,
soft links, and child directories in the target directory's master
clearinghouse.  You can, however, place child directories in another
clearinghouse.  To do this, you use the \%\%\*L-clearinghouse\*O option
of the command to specify the name of the other clearinghouse.
.P
Note that you are allowed to specify only one alternate clearinghouse in the
\%\%\*L-clearinghouse\*O option.  If you wish to place child directories in
different alternate clearinghouses, you must issue separate
\*Ldirectory merge\*O commands for each clearinghouse, or you must issue
a single \*Ldirectory merge\*O command to place all the child directories
in one clearinghouse, then relocate the directories after
the merge operation.
.nS "note"
The CDS objects created by the \*Ldirectory merge\*O command
retain all of the writable attribute values and some of the read-only attribute
values of the source objects.  However, these objects do not
inherit the ACLs of the source objects.  If the merged object is a directory,
the \*Ldirectory merge\*O command gives it the default ACLs of the
initial container.  If the merged object is any other CDS object type, the
\*Ldirectory merge\*O command gives it the default ACLs of the initial object.
.nE
.P
If the \*Ldirectory merge\*O command encounters problems with the merge
operation, it behaves in one of two ways.  If you include the 
\%\*L-nocheck\*O option, the command does not check for errors before
performing the operation.  It proceeds immediately to perform
the operation, and, if it encounters an error, stops.
If you omit the \%\*L-nocheck\*O option, the command checks 
for certain error conditions
before starting the merge.  If it finds errors, it displays messages
for the errors and stops; otherwise, it proceeds
with the merge.
.P
.ne 6
Error messages returned by the \*Ldirectory merge\*O command identify
the CDS entity causing the problem and provide a brief description of
the problem.  You should fix any problems that the command encounters,
before running it again.  (See
Section 20.3 for more information on the types of errors that can occur
during a merge operation.)
.LI
After the merge operation, the \*L/.:/eng\*O
directory (and its contents) still exists at the source location.  Run the
following commands to delete the \*L/.:/eng\*O directory from its original
location and create a soft link named \*L/.:/eng\*O in place of the deleted
directory.  The soft link will redirect lookups of the \*Lobj1\*O and
\*Llink1\*O object entries to their new locations in the \*L/.:/rnd\*O
directory.
.P
It is recommended that you perform a skulk on a source
directory before deleting it.  This synchronization of the directory's
replicas can prevent errors that cause the delete operation to fail.
.P
The sequence of commands to synchronize and delete the \*L/.:/eng\*O directory
and then create soft links for the former contents are as follows:
.iS
\*Cdcecp> \*Ldirectory synchronize  /.:/eng\*O
\*Cdcecp> \*Ldirectory delete  /.:/eng  -tree\*O
\*Cdcecp> \*Llink create  /.:/eng  -to  /.:/rnd
\*Cdcecp>
.iE
.P
The \*Ldirectory delete\*O command invoked with the \%\*L-tree\*O option deletes
a directory and all the object entries, soft links, and
child directories beneath that directory.  If you use the
the \*Ldirectory delete\*O command without the \%\*L-tree\*O option, all of
the directories to be deleted must be empty, or errors will occur.
.P
Figure 20-2 shows the structure of the example namespace before and 
after the merge operation in our example.
.P
.ne 2.5i
.FG "Example Namespace Before and After the Merge Operation"
.pI ../directory/cds/figures/subtree_merge.ps 1.75i 5i
.sp .5
.LE
.H 3 "Appending CDS Directories"
.P
.iX "CDS" "appending directories"
The following procedure appends the source directory
\*L/.:/eng\*O to the \*L/.:/rnd\*O directory
(that is, copies the \*L/.:/eng\*O
directory into the empty target directory \*L/eng\*O under the
\*L/.:/rnd\*O directory):
.AL
.LI
Run the \*Ldirectory create\*O command to create a new empty directory
named \*L/.:/rnd/eng\*O into which the contents of the source directory
\*L/.:/eng\*O can be placed:
.P
.iS
\*Cdcecp> \*Ldirectory create  /.:/rnd/eng
\*Cdcecp>
.iE
.P
By default, the \*Ldirectory create\*O command creates new directories in
the same clearinghouse as the parent directory.  If you wish to create a
directory in another clearinghouse, you must use the \%\*L-clearinghouse\*O
option of the command to specify the other clearinghouse.
.LI
Perform a skulk on the \*L/.:/eng\*O directory before appending it to the
\*L/.:/rnd\*O directory.  This synchronization of the source directory's
replicas can prevent errors that cause the append operation to fail:
.iS
\*Cdcecp> \*Ldirectory synchronize  /.:/eng\*O
\*Cdcecp>
.iE
.LI
Run the \*Ldirectory merge\*O command to append the source directory
\*L/.:/eng\*O to the \*L/.:/rnd\*O directory (or merge it into the
new \*L/.:/rnd/eng\*O directory):
.iS
\*Cdcecp> \*Ldirectory merge  /.:/eng  -into  /.:/rnd/eng\*O
\*Cdcecp>
.iE
.P
.ne 5
If the source directory contains any child directories whose contents
you want to copy over, you must specify the \%\*L-tree\*O option in
the \*Ldirectory merge\*O command line.  Additionally, you need to specify the
\%\%\*L-clearinghouse\*O option if you wish to place the child directory
and its contents in a different clearinghouse from the
\*L/.:/rnd/eng\*O directory.
.P
If the merge operation is not successful, you can delete any partially merged
information at the target location and run the command again.  Be sure,
though, to delete any duplicate names and to make certain that connectivity
to the affected clearinghouses can be maintained.
.nS "note"
The CDS objects created by the \*Ldirectory merge\*O command
retain all of the writable attribute values and some of the read-only attribute
values of the source objects.  However, these objects do not
inherit the ACLs of the source objects.  The ACLs on the target objects
are either those that are inherited from the initial container (the parent
directory into which the objects are merged) or the initial object.
.nE
.LI
After the append operation, the \*L/.:/eng\*O directory (and its contents)
still exists at the source location.  You need to delete the
\*L/.:/eng\*O directory from its original location and create 
a soft link named \*L/.:/eng\*O in place of the deleted directory.
The soft link will redirect lookups of the \*Lobj1\*O and
\*Llink1\*O object entries to their new locations in the \*L/.:/rnd/eng\*O
directory.
.P
It is recommended that you perform a skulk on a source directory
before deleting it.  This synchronization of the directory's replicas can
prevent errors that cause the delete operation to fail.
.P
The sequence of \*Ldcecp\*O commands for removing the
\*L/.:/eng\*O directory from the source location is the following:
.iS
\*Cdcecp> \*Ldirectory synchronize  /.:/eng\*O
\*Cdcecp> \*Ldirectory delete  /.:/eng\*O\*O
\*Cdcecp> \*Llink create  /.:/eng  -to  /.:/rnd/eng\*O
\*Cdcecp>
.iE
.P
Figure 20-3 shows the structure of our example namespace before and after
the append operation.
.P
.ne  5.25i
.FG "Example Namespace Before and After the Append Operation"
.pI ../directory/cds/figures/subtree_append.ps 2i 5i
.sp .5
.LE
.H 3 "Modifying ACLs at the Target Location"
.P
To preserve the access by principals to the merged information in the
target directories, the ACLs on the newly
created objects at the target location need to match those of the objects
in the source directories.  Because the \*Ldirectory merge\*O command
does not recreate the source ACLs on the CDS objects at the new location,
you may need to modify the target ACLs after the
merge operation.  To modify these ACLs, use the \*Ldcecp\*O 
\*Lacl replace\*O or \*Lacl modify\*O command, depending on whether you
want to replace an entire ACL or just modify ACL entries. 
.H 2 "Handling Errors"
.P
.iX "directories" "appending errors"
.iX "directories" "merging errors"
Most of the errors that the \*Ldirectory merge\*O command encounters during
its operations are caused by the following:
.ML
.LI
Duplicate names that are detected during the merge
.LI
Names in the source subtree whose master clearinghouses were
not reachable when the command was executing
.LI
Entries not created in the target location due to insufficient
permissions
.LE
.P
The following subsections explain how to recover from these errors.
.H 3 "Duplicate Names"
.P
.iX "directories" "merging" "duplicate name problems"
If the full name of a CDS object entry or soft link is identical to a full
name of an object entry or soft link at the target location, the
\*Ldirectory merge\*O command lists these duplicate names and stops.  Duplicate
names are not merged to avoid overwriting and destroying the identical names in
the target directory.
.P
If duplicate names exist, you need to decide which names you want to
preserve: the names in the source subtree or the names in the target
subtree.  Once you have made your decision, proceed in
the following manner:
.AL
.LI
Use the \*Ldcecp\*O \*Lcreate\*O
operations to recreate (under a new name) any duplicate object entry
or soft link as a new object entry or soft link
in the source or target subtree.  Then delete the duplicate name.
.LI
When you are certain that connectivity to the affected clearinghouses
can be maintained, rerun the \*Ldirectory merge\*O command to merge the
contents of the source and target directories.
.LE
.H 3 "Unreachable Name Failures"
.P
.iX "directories" "merging" "handling unreachable name failures"
Sometimes, the clearinghouse that stores the master replica of a directory
you are trying to merge is disabled or unreachable when you
enter the \*Ldirectory merge\*O command.  When this happens, the command
cannot create the directory and the entries it contains at the new target
location.
.P
When unable to merge a name for this reason, the
\*Ldirectory merge\*O command displays an error message
specifying the name that could not be created and terminates.
.H 3 "Insufficient Permissions"
.P
.iX "directories" "merging" "handling insufficient permissions"
The \*Ldirectory merge\*O command cannot create CDS objects at a target
location if it lacks the appropriate permissions.  If the command returns
error messages indicating insufficient permissions, you need to
examine the ACLs for the target clearinghouse, directories, and object
entries to see the current permissions and change the inappropriate ones.
.P
.ne 2
Table 20-1 shows the permissions required to create directories and
other CDS object entries at the target.
.P
.ne 14
.TB "Permissions Required To Create Target Objects"
.TS
center, box, tab(@);
lB | lB
l | l.
Objects@Required Permissions
=
directory@T{
Write permission to the clearinghouse that is to store the
master replica of the new directory.
.sp .3
Insert and read permissions to the parent of the new directory.
.sp .3
Insert and read permissions to the initial container for the new directory.
.sp .3
The server principal also needs read and insert permissions to the parent
directory of the new directory.
T}
_
other CDS object@T{
Insert and read permissions to the directory where it is to be created.
.sp .3
Insert and read permissions to the initial object for its object type.
T}
.TE
.H 2 "Merging CDS Directories into a Foreign Cell"
.P
.iX "directories"  "merging into foreign cells"
You can also use the \*Ldirectory merge\*O command
to merge CDS directories into the namespace of a foreign cell.
In general, the procedure you follow is the same as the procedure you
use to merge directories or subtrees in the same namespace.  There are,
however, some additional considerations to keep in mind:
.ML
.ne 3
.LI
You need to establish cross-cell authentication in advance.
.LI
You need to merge the entire directory hierarchy in the source and target 
cells.
.LE
.P
Also, you need to modify the ACLs of the newly created target objects as
when you merge directories in the same namespace. 
.H 3 "Establishing Cross-Cell Authentication"
.P
If you want users and applications in the source cell to be able to
continue accessing their merged information in the target
cell conveniently, make sure that an agreement of cross-cell authentication
exists between the source cell and foreign (target) cell.  Otherwise,
principals from the source cell requesting newly merged information will not
be permitted to communicate with the target cell.  See Part 6
for complete information on how to set up cross-cell authentication.
.H 3 "Performing a Merge Operation into a Foreign Cell
.P
To merge CDS data into the namespace of a foreign cell, follow these steps:
.AL
.LI
While logged into a privileged account (\*Lcell_admin\*O or a member of
\*Lcds-admin\*O group) on the target machine in the foreign cell, run the
\*Ldirectory merge\*O command to merge the contents of the source cell's
directory with an existing directory. 
.LI
If you intend to continue accessing the merged information from the source
cell, delete the uppermost directory in the source subtree
and replace the deleted information with a single soft link of the same
name as that directory.  This redirects lookups of the information to its
new location in the foreign cell.
.LE
.H 2 "Restoring Merged CDS Directories"
.P
.iX "CDS" "restoring merged directories"
You can use the \*Ldcecp\*O \*Llink delete\*O and
\*Ldirectory merge\*O commands to restore deleted directories and their
contents to your namespace.
.P
First run the \*Llink delete\*O command to remove the soft links in the
former source location, then use the \*Ldirectory merge\*O
command to append the copy of the directory back under its former parent
directory.
.P
If the directory has slave replicas, use the
\*Ldirectory create\*O command to create a new replica of the directory
in each of the clearinghouses from which the directory was deleted.
.P
Remember that the \*Ldirectory merge\*O
command affects only directories and their contents.  It does not
copy clearinghouses or their associated clearinghouse object entries
and therefore cannot be used to restore clearinghouses or to
account for discrepancies in information among individual replicas resident on
different clearinghouses.  Furthermore, the directory information in a
particular location may have changed since the time of the original merge
operation.
.zZ "def,13575,R1.2.2,Replaced command with operation"
