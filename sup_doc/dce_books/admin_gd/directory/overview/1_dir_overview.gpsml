...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\" 
...\" HISTORY
...\" $Log: 1_dir_overview.gpsml,v $
...\" Revision 1.1.8.1  1996/09/19  14:22:49  sherman
...\" 	{def,13576,R1.2.2}
...\" 	Removed text for making cell alias the primary name
...\" 	[1996/09/19  14:21:40  sherman]
...\"
...\" Revision 1.1.6.1  1995/07/19  19:50:12  wardr
...\" 	{edit R1.2.1}
...\" 	fixed broken index hit
...\" 	[1995/07/19  19:49:59  wardr]
...\" 
...\" Revision 1.1.4.24  1995/05/25  19:04:16  rcb
...\" 	PRENTICE HALL reformat: final changes
...\" 	[1995/05/25  13:12:32  rcb]
...\" 
...\" 	1.1 edit; terminology fix
...\" 	[1995/04/10  18:47:58  rcb]
...\" 
...\" 	PRENTICE HALL reformat -- index entries, odds and ends
...\" 	[1995/03/27  19:49:14  rcb]
...\" 
...\" 	PRENTICE HALL reformat
...\" 	[1995/03/23  19:46:17  rcb]
...\" 
...\" 	incorporated 1.1 edits
...\" 	[1995/03/23  19:07:18  rcb]
...\" 
...\" 	fixes to header capitalization
...\" 	[1995/03/08  16:19:58  rcb]
...\" 
...\" Revision 1.1.4.23  1994/10/19  13:05:03  wardr
...\" 	{edit R1.1}
...\" 	oops, one lase edit
...\" 	[1994/10/19  13:04:50  wardr]
...\" 
...\" Revision 1.1.4.22  1994/10/19  12:57:23  wardr
...\" 	{edit R1.1}
...\" 	Final GA release edits
...\" 	[1994/10/19  12:57:10  wardr]
...\" 
...\" Revision 1.1.4.21  1994/10/19  12:53:28  wardr
...\" 	{edit R1.1}
...\" 	Final GA release edits
...\" 	[1994/10/19  12:53:15  wardr]
...\" 
...\" Revision 1.1.4.20  1994/10/04  19:48:06  wardr
...\" 	{edit R1.1}
...\" 	Fixed figure path problem (Fig 11-2)
...\" 	[1994/10/04  19:47:45  wardr]
...\" 
...\" Revision 1.1.4.19  1994/10/01  20:32:06  zahn
...\" 	{edt,10578,R1.1}
...\" 
...\" 	Added more information on hierarchical
...\" 	cells and cell aliasing and made a few
...\" 	changes for consistency between descriptions
...\" 	of this technology in Intro to DCE, Admin Guide
...\" 	Intro, and other chapters in Admin Guide Core.
...\" 
...\" 	Changed all figure and section references from
...\" 	"2-whatever" to "11".
...\" 
...\" 	Updated cross-references to new DCE doc set.
...\" 
...\" 	Fixed typos in hcell and cell alias sections.
...\" 	[1994/10/01  20:31:47  zahn]
...\" 
...\" Revision 1.1.4.18  1994/09/20  14:34:57  steto
...\" 	{edt, R1.1, Fixed a bad index entry.}
...\" 	[1994/09/20  14:34:41  steto]
...\" 
...\" Revision 1.1.4.17  1994/09/20  14:29:54  steto
...\" 	[edt, R1.1, Fixed bad index entry.}
...\" 	[1994/09/20  14:29:05  steto]
...\" 
...\" Revision 1.1.4.16  1994/09/13  21:40:20  steto
...\" 	{edt, R1.1, Fixed bad index markup.}
...\" 	[1994/09/13  21:40:02  steto]
...\" 
...\" Revision 1.1.4.15  1994/09/08  19:51:21  steto
...\" 	{enh, CR10014, R1.1, Edited for final review.}
...\" 	[1994/09/08  19:49:50  steto]
...\" 
...\" Revision 1.1.4.14  1994/08/30  20:14:05  rjohnson
...\" 	Changes made: No changes.
...\" 	[1994/08/30  20:13:43  rjohnson]
...\" 
...\" Revision 1.1.4.13  1994/08/30  17:13:50  rjohnson
...\" 	Changes made: Revised section 2.4.4 - Cell-Relative Naming in a
...\" 	Standalone Cell.  Also added new section 2.4.5 - Cell-Relative
...\" 	Naming in a Hierarchy of Cells.
...\" 	[1994/08/30  17:13:26  rjohnson]
...\" 
...\" Revision 1.1.4.12  1994/08/24  15:19:19  rjohnson
...\" 	Changes made: None.
...\" 	[1994/08/24  15:18:40  rjohnson]
...\" 
...\" Revision 1.1.4.11  1994/08/22  21:23:21  rjohnson
...\" 	Changes made: None.
...\" 	[1994/08/22  21:23:01  rjohnson]
...\" 
...\" Revision 1.1.4.10  1994/08/22  20:49:20  rjohnson
...\" 	Changes made: Incorporated review comments.
...\" 	[1994/08/22  20:47:17  rjohnson]
...\" 
...\" Revision 1.1.4.9  1994/05/11  19:18:53  rjohnson
...\" 	Updated to include CR#10578.
...\" 	[1994/05/11  19:18:35  rjohnson]
...\" 
...\" Revision 1.1.4.8  1994/05/10  14:50:49  wardr
...\" 	Fix Doc Build Probs
...\" 	[1994/05/10  14:49:11  wardr]
...\" 
...\" Revision 1.1.4.7  1994/05/09  12:09:04  rjohnson
...\" 	Changes made: Added info on hierarchial cells for release 1.1.
...\" 	File name: admin_gd/directory/overview/1_dir_overview.gpsml
...\" 	[1994/05/02  15:58:12  rjohnson]
...\" 
...\" Revision 1.1.4.6  1993/08/13  03:32:34  tmw
...\" 	Added index entries for second version of master index.
...\" 	[1993/08/13  03:31:04  tmw]
...\" 
...\" Revision 1.1.4.5  1993/07/06  18:35:45  buckler
...\" 	{edit, R1.0.2}
...\" 	More Prentice-Hall edits.
...\" 	[1993/06/29  16:16:33  buckler]
...\" 
...\" Revision 1.1.4.4  1993/05/21  19:24:51  weir
...\" 	{edit, R1.0.2}
...\" 	Prentice-Hall editorial review.
...\" 	[1993/05/21  19:23:57  weir]
...\" 
...\" Revision 1.1.4.3  1993/05/20  15:30:05  buckler
...\" 	{edit, R1.0.2}
...\" 	Corrected several index entries per Prentice-Hall editorial review.
...\" 	[1993/05/20  15:29:23  buckler]
...\" 
...\" Revision 1.1.4.2  1993/05/20  14:48:43  weir
...\" 	Checked in for Julie
...\" 	[1993/05/20  14:47:41  weir]
...\" 
...\" Revision 1.1.2.9  1993/02/22  19:07:54  steiner
...\" 	Comments from Peter Keegan, noted that GDA is by default configured
...\" 	on a CDS server machine and fixed figure 2, showing interaction among
...\" 	CDS, GDAs, DNS/GDS.  (Previous figure made it look like the global
...\" 	directory servers forwarded messages to the foreign CDS servers,
...\" 	which they don't.)
...\" 	[1993/02/22  19:04:32  steiner]
...\" 
...\" Revision 1.1.2.8  1993/02/22  16:19:51  steiner
...\" 	Elaborate on GDS naming conventions, from rnollman.
...\" 	[1993/02/22  16:19:33  steiner]
...\" 
...\" Revision 1.1.2.7  1993/02/22  16:07:41  steiner
...\" 	Comments for improving GDS name syntax, from Howard and
...\" 	Wolfgang Schmid via rnollman.
...\" 	[1993/02/22  16:07:22  steiner]
...\" 
...\" Revision 1.1.2.6  1993/02/15  16:42:49  buckler
...\" 	Changed .P! to .pI and added Postscript boundary boxes
...\" 	[1993/02/15  16:42:22  buckler]
...\" 
...\" Revision 1.1.2.5  1993/02/08  15:07:12  rom
...\" 	Add a change originally made by Lipsky for CR 6154 in Rev. 1.1.5.2 of
...\" 	1_ds_overview.gpsml, 1993/01/10: Added multiple slash description.
...\" 	[1993/02/08  15:05:19  rom]
...\" 
...\" Revision 1.1.2.4  1993/01/28  20:07:25  dbelch
...\" 	Embedding copyright notice
...\" 	[1993/01/28  18:40:49  dbelch]
...\" 
...\" Revision 1.1.2.3  1993/01/27  16:14:26  buckler
...\" 	Fixed cross-refs and figure calls for new book org
...\" 	[1993/01/27  16:13:51  buckler]
...\" 
...\" Revision 1.1.2.2  1992/08/31  18:36:02  weir
...\" 	Removed change bar macros
...\" 	[1992/08/31  18:34:01  weir]
...\" 
...\" $EndLog$
...\"
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Tues Oct 29, 1991                Initial File Submission for final
...\"                                    integration at IBM
...\"
...\" ********************************************************************
...\"                                                                    *
...\" COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
...\" Maynard, Massachusetts                                             *
...\" All Rights Reserved.                                               *
...\"                                                                    *
...\" This document is furnished under a license and may be used and     *
...\" copied only in accordance with the terms of such license and with  *
...\" the inclusion of the above copyright notice.  No title to or        *
...\" ownership of the document is hereby transferred.                   *
...\"                                                                    *
...\" The information in this document is subject to change without      *
...\" notice and should not be construed as a commitment by Digital      *
...\" Equipment Corporation.                                             *
...\"                                                                    *
...\" ********************************************************************
...\" 
...\" 
...\" 
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 1 "Introduction to the DCE Directory Service"
...\" ----------------------------------------------------------------------
...\" 
.P
Distributed processing involves the interaction of multiple systems to do work
that is done on one system in a traditional computing environment.  One 
challenge resulting from this network-wide working environment is the need 
for a universally consistent way to identify and locate people and resources 
anywhere in the network. 
.P
The DCE Directory Service makes it possible to
contact people and to use resources such as disks, print queues, and servers
anywhere in the network without knowing their physical location.  The 
directory service is much like a telephone directory assistance service 
that provides a phone
number when given a person's name.  Given the unique name
of a person, server, or resource, it can return the network address and other
information associated with that name.
.P
The DCE Directory Service stores addresses and other relevant information as
.gL "attributes"
\*Eattributes\*O of the name.  For example, attributes can 
contain the name of an
organizational unit, such as European Sales; a location, such as the first
floor of Building A; or a telephone number.  Users can search for a name by
supplying one or more of its attributes.  For example, given the search 
criteria of \*LJohn Smith\*O and \*LChicago\*O, the directory service could 
produce a list of telephone numbers for users in Chicago named John Smith. 
.nS note
Search capabilities are currently limited to 
the global part of the DCE Directory Service environment.
.nE
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 2 "How the DCE Components Use the DCE Directory Service"
...\" ----------------------------------------------------------------------
...\" 
.iX "-: RPC" "remote procedure call"
.iX "-[" "RPC" "interaction with directory service"
.P
The DCE Directory Service is a fundamental service that applications can rely
on and use to their advantage.  This section describes how other DCE components
use the DCE Directory Service.
.P
The DCE remote procedure call (RPC) interface facilitates the development and
use of distributed applications that follow a client/server model.  In the RPC
model,
.gL "clients"
\*Eclients\*O are programs that make remote procedure calls, and
.gL "servers"
\*Eservers\*O are programs that carry out the procedures.  The DCE RPC software
stores information in the directory service about the addresses of RPC servers
and the interfaces they support.
.P
When an RPC client wants to make a call to a particular server, it can query
the directory service for the information necessary to contact that server.  If
the client wants to access a specific resource that is named in the directory
service, it can query for that specific name.  If a client application 
knows the type of service that it wants, 
such as C compilers, printers, or employee information,
but does not know the address of a specific server, 
it can also use the directory service to find that information.
.iX "-]" "RPC" "interaction with directory service"
.P
.iX "security" "service" "interaction with directory service"
The DCE Security Service, which verifies the identity of users when they log in,
uses the directory service to store the addresses of its authentication servers.
.P
.iX "-: DFS" "Distributed File Service"
.iX "DFS" "interaction with directory service"
The Distributed File Service (DFS) provides a location service for
filesets (logical groups of files) so that users can access remote files as if
they are on the local system.  DFS uses the DCE Directory Service to find 
out how to contact its fileset location servers.
.gL "filesets"
.P
.iX "-: DTS" "Distributed Time Service"
.iX "DTS" "interaction with directory service"
The Distributed Time Service (DTS) is responsible for synchronizing system
clocks in the network.  Synchronized clocks are important to any distributed
application that needs to keep track of the order in which events occur across
multiple systems.  DTS uses the DCE Directory Service to find out how 
to locate its time servers.
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 2 "How to Use DCE Directory Services"
...\" ----------------------------------------------------------------------
...\" 
.iX "-[" "directory service" "how used"
.P
Other than DCE administrators, the people who use directory services normally
do so indirectly, through an application interface.  An application can
interact with the directory service on behalf of users who create a name for a
resource and subsequently refer to it by that name.  The following examples,
both real and hypothetical, explain some of the ways that users can use the
directory service:
.ML
.LI
A user invokes a spell-checking application on a new document.  The application
contains DCE RPC client code on the user's local system.
The RPC client contacts the directory service for information on an available
spell-checking server.  The directory service returns the address of the server,
the protocol type it uses to communicate, and a Universal Unique Identifier
(UUID) that represents an interface.  Using this information, the RPC client makes
a remote call to the server and the server checks the spelling in the user's
document.  The user is unaware that use of the spell checker involved a call to
the directory service and interaction with a remote server.
.LI
A user logging into a system enters a name and password.  The directory service
helps the login program locate an authentication server, which verifies 
the user's identity in an authentication database.
.LI
A user enters a file specification.  The directory service provides the address of
a DFS fileset location database, which contains the network address of a server
that allows the user to access the file.
.LI
A user enters the name of a computer conference or electronic bulletin board and
the directory service provides an address, allowing the application to connect to
the conference service.
.LI
By entering a name or some information about a printer's capabilities, a user can
learn the printer's network address.  For example, the user may want to find the
address of the closest and fastest available color printer.
.LI
A user needs information from an employee in the marketing department.  The user
remembers that the employee's last name is Wong, but cannot remember the first
name.  By entering the last name and department name in an employee locator
application, the user can check the directory service for information on all
Wongs in the marketing department and find out how to contact the employee.
.LI
A user enters a report in a problem-tracking database.  Although the database was
recently moved to a new node, the user is not aware of the change because the
database is always referred to by its name only.  The directory service stores
the current network address and provides it to the problem-tracking application
and any other application that requests it.
.LE
.iX "-]" "directory service" "how used"
.P
The remainder of this chapter explains how
the DCE Directory Service environment works with regard to cells.
It introduces the main directory service components: the
Cell Directory Service (CDS), the Global Directory Service (GDS),
and the Global Directory Agent (GDA), which is a gateway
between the local and global naming environments.  The chapter
also discusses DCE support for the Domain Name System (DNS),
which is a global name service that is not a part of the DCE
technology offering.
...\" 
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 2 "Directory Services and the Cell Environment"
...\" ----------------------------------------------------------------------
...\" 
.iX "directory service" "cell environment"
.P
This section introduces the following main components
of the DCE naming environment and explains their relationship to the cell:
.ML
.LI
CDS 
.LI
GDS
.LI
DNS
.LI
GDA
.LE
.P
.iX "-: CDS" "Cell Directory Service"
.iX "CDS" "about"
CDS is a high-performance distributed service that provides a consistent,
location-independent method for naming and using resources inside a cell
(intracell).  CDS can also be used for communication between cells (intercell)
when cells are connected into a hierarchy.
.P
.iX "-: GDS" "Global Directory Service"
.iX "GDS" "about" 
GDS supports the global naming environment inside cells
(intracell) and outside of cells (intercell).  GDS is
an implementation of a directory service standard known
as X.500.  This standard is specified by the
International Organization for Standardization (ISO) 9594
and the International Telegraph and Telephone Consultative
Committee (CCITT) X.500 series.  Because it is based on a
worldwide standard, GDS offers the opportunity for a
universally interoperable global directory.
.P
Figure 11-1 represents a hypothetical configuration
of two cells that each use GDS to
access names in the other cell.  Names that are stored
directly in GDS also are accessible
from each cell.  CDS is the directory service
within each cell.  The same organization
administers both cells, which are configured based
on geographic location and network topology.
.P
.FG "Cell and Global Naming Environments"
.pI ../directory/overview/figures/1_ds_overview_10.ps 0 0 1
.P
.iX "directory service" "cell environment"
.iX "-: DNS" "Domain Name System"
.iX "DNS" "about"
DNS is a widely used existing global name service for which DCE offers support.
Many networks currently use DNS primarily as a name service for Internet host names.
Although DNS is not a part of the DCE technology offering, the 
directory service contains support for cells to interoperate through DNS.
.iX "-: GDA" "Global Directory Agent"
.iX "GDA" "about"
.P
The GDA is the DCE component that makes cell interoperation possible.
The GDA enables CDS to access a name in another cell through one
of the global naming environments (GDS or DNS), or through the CDS
of the parent cell, if the cell is part of a hierarchical cell configuration.
The GDA is an independent process that can exist on
a system separate from a CDS server,
although by default the DCE configuration script
configures the GDA on the same machine as a CDS server.
CDS needs to be able to contact at least one GDA to participate
in the global naming environment.
.P
.ne 10
Figure 11-2 shows how the GDA helps CDS access names outside of a cell.  When
CDS determines that a name is not in its own cell, it passes the name to a GDA, which
searches the appropriate naming environment (CDS, GDS, or DNS) for
more information about the name.
...\" 
...\" 
The GDA returns information that enables the original CDS server
to contact the CDS server in whose cell the name resides.
The GDA can help CDS find
names in a cell that is registered in DNS (Scenario A), a cell that
is registered in GDS (Scenario B), or a cell that is registered in
the originating cell's parent cell (not shown).
...\" 
...\" 
The GDA decides which name service to use based on the syntax of 
the name.  Section 11.5 describes name syntaxes in detail.
.P
.FG "Interaction of CDSs, GDAs, and Global Directory Services"
.sp
.PS < ../directory/overview/pic/cds_gda.pic
.sp .5
.P
.iX "directory service" "cell environment"
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 2 "How Cells Determine Naming Environments"
...\" ----------------------------------------------------------------------
...\" 
.iX "cells" "naming environments"
.P
In addition to delineating security and administrative boundaries for users
and resources, cells determine the boundaries for sets of names.  Because
different naming components operate in a cell and outside of a cell, naming
conventions in the cell and global environments differ as well.  The DCE naming
environment supports two kinds of names: \*Eglobal\*O 
names and \*Ecell-relative\*O, or
\*Elocal\*O, names.  The following subsections introduce the concept of global
and local names.  Section 11.5 describes CDS, GDS, and DNS names in detail.
.gL "cell-relative"
...\" 
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 3 "Global Names"
...\" ----------------------------------------------------------------------
...\" 
.iX "global names" "about"
.P
All entries in the DCE Directory Service have a global name that is universally
meaningful and usable from anywhere in the DCE naming environment.  The prefix
\*L/...\*O indicates that a name is global.  A global name can refer to an object
within a cell (named in CDS) or an object outside of a cell (named in GDS).
.P
The following example shows the global name for an entry created in GDS.  The name
represents user Ellie Bloggs, who works in the administrative organization unit of
the Widget organization, a British corporation.
.oS
/.../C=GB/O=Widget/OU=Admin/CN=Ellie Bloggs
.oE
...\" 
...\" 
.P
The GDS name syntax consists of a global prefix \*L/...\*O 
and a set of elements, called Relative Distinguished Names (RDNs). 
Each RDN consists of one or more pairs of parts
separated by an \*L=\*O (equal sign) character. 
The items that are separated by an equal sign are multiple AVAs
(Attribute Value Assertions).  See the \*(Ax for more information
about AVAs.
The first part of a pair is an abbreviation
that indicates a type of information. 
Some common abbreviations are Country (\*LC\*O),
Organization (\*LO\*O), Organization Unit (\*LOU\*O), 
and Common Name (\*LCN\*O).  The
second part of the pair is a value. 
(See Section 11.5.2 for more information on GDS names.)
...\" 
...\" 
.P
The following example shows a global name for a price database server named in
CDS.  The server is used by the Portland sales branch of XYZ Company,
an organization in the United States.
.P
.pI ../directory/overview/figures/1_ds_overview_30.ps 0 0 1
.iX "cell names" "about" 
...\" 
.P
As the example illustrates, 
global names for entries that are created in CDS look slightly
different from pure GDS-style names.  The first portion of the name,
\*L/.../C=US/O=XYZ/OU=Portland\*O, is a global 
.gL "cell name"
cell name that exists in GDS.  The remaining portion,
\*L/subsys/PriceMax/price_server1\*O, is a CDS name.
.P
The cell name exists because cells must have names
to be accessible in the global naming environment.
The GDA looks up the cell name in the process of helping CDS
in one cell find a name in another cell.  Cell names are established
during initial configuration of the DCE components.
Before configuring a cell that will participate in
standard intercell communication (that is, via the
DNS or GDS global directory services), the DCE administrator
must obtain a unique cell name from either of the global
naming environments, depending on whether the cell needs
to be accessed through GDS or DNS.
.P
The next example shows the global name of a host at ABC Corporation.
The global name of the company's cell, \*L/.../abc.com\*O, exists in DNS.
.P
.pI ../directory/overview/figures/1_ds_overview_40.ps 0 0 1
.iX "global names" "about"  
...\" 
...\" ----------------------------------------------------------------------
.H 3 "Hierarchical Cell Names"
...\" ----------------------------------------------------------------------
...\" 
.iX "hierarchical cells" "naming conventions"
.iX "child" "cells" "naming"
.P 
In a hierarchy of cells, the names of one or more cells,
called \*Echild cells\*O, are registered in a cell's
CDS; this cell is called the \*Eparent cell\*O. The cell
at the top of the hierarchy must be registered in a
global directory service (GDS or DNS), but the cells
underneath do not need to be since they use CDS to
communicate.  A child has one and only one parent
at any given time, while a parent can have more
than one child.
.P
The GDA is the communications gateway between the CDS
namespaces of cells in a hierarchy, as it is between
CDS and the global directory services.
When the GDA receives a request for information about a
cell, and the cell is a child cell, the GDA returns
information about the CDS in the parent cell.  The CDS
of the parent cell provides the pointers to the child cell.
.P
A child cell's name begins with the parent's global
cell name; that is, the name of the cell beginning
at the global root \*L/...\*O prefix. (This name is also known
as the parent cell's \*Efully-qualified\*O name.)
It ends with the specific child cell name.
The parent's global name can contain CDS syntax as well
as GDS or DNS syntax, depending on where the parent cell
is located in the hierarchy.
.P
The following example shows the global cell names
of two child cells:  
.oS
                  Global Cell Name for Sales1
  ------------------------^---------------------------
 /                                                    \

           Parent Global Cell Name          Child Cell
  --------------^--------------------------   --^--
 /                                         \ /     \
 |                                          ||     |
 /.../C=US/O=XYZ/OU=Portland/subsys/PriceMax/Sales1


                 Global Cell Name for Marketing
  _______________________^____________________________
 /                                                    \

           Parent Global Cell Name           Child Cell
  --------------^--------------------------   ---^--
 /                                         \ /      \
 |                                          ||       |
   /.../C=US/O=XYZ/OU=Portland/subsys/PriceMax/Marketing
.oE 
.P
The global cell name for each child includes
.ML
.LI
The parent's global name, \*L/.../C=US/O=XYZ/OU=Portland\*O
.LI
The child's unique CDS name, \*L/Sales1\*O or \*L/Marketing\*O
.LE
.P
If a DCE administrator is establishing a hierarchy of cells
during initial cell configuration, he or she must obtain
a unique GDS or DNS cell name for the cell at the top of
the hierarchy from the GDS or DNS global directory service
authorities.  All of the cells beneath this cell share this name.
The \*(Ai provides details on how to obtain GDS and DNS cell names.
.P
If a DCE administrator establishes a hierarchy of cells
after the cells have been configured, the global names
of the child cells change to point to the parent's cell name.
Chapter 21 of this guide provides details on how to
establish a hierarchy of cells.
...\" 
...\" ----------------------------------------------------------------------
.H 3 "Alias Cell Names" 
...\" ----------------------------------------------------------------------
...\" 
.iX "alias cell names" 
.iX "cell aliases" 
.P
You can give a cell more than one global name by creating
an \*Ealias\*O name for the cell.  In this case, the cell has
a \*Eprimary name\*O, which is the name that DCE services
return for the cell when queried, and one or more cell
aliases that the DCE services recognize in addition to
the primary name.  For example, if your cell is registered
in the DNS global directory service, and you want to
register it in GDS as well, you obtain a GDS name for
the cell and set it up as a cell alias.  The DNS name
remains the primary name.
.P
.zA "def,13576,R1.2.2,removed text - cell alias cannot become primary name"
...\"	You can also change between primary and alias names
...\"	for a cell; to return to the previous example, you
...\"	can make the newly created GDS cell alias the primary name
...\"	for the cell, and change the DNS name to a cell alias.
...\"	Another case in which you may need to make a cell's
...\"	alias name its primary name is when creating a cell
...\"	hierarchy from existing independent cells.  
.zZ "def,13576,R1.2.2,removed text - cell alias cannot become primary name"
Chapter 6 of this guide explains how to use the \*Ldcecp cellalias\*O
task object to manage your cell names.  Chapter 21 of this guide
explains how to create a hierarchical cell.
.P 
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 3 "Cell-Relative Naming in a Standalone Cell"
...\" ----------------------------------------------------------------------
...\" 
.iX "cell-relative names" "about"
.P
In addition to their global names, all CDS entries have a cell-relative, or
local, name that is meaningful and usable only from within the 
local cell where that
entry exists.  The local name is a shortened form of a global name, and thus is
a more convenient way to refer to resources within a user's own cell.  Local
names have the following characteristics:
...\" 
.ML
.LI
They do not include a global cell name.
.LI
.iX "\*L/.:\*O prefix" 
They begin with the \*L/.:\*O prefix.
.LE
...\" 
.P
.ne 8
Local names do not include a global cell name because the 
\*L/.:\*O prefix indicates that the name being referred to is 
within the local cell.  When CDS encounters a
\*L/.:\*O prefix on a name, it automatically replaces 
the prefix with the local cell's name, forming the global name.  
CDS can handle both global and local names, but it is
more convenient to use the local 
name when referring to a name in the local cell.  For
example, these
names are equally valid when used within the cell named
\*L/.../C=US/O=XYZ/OU=Portland\*O:
.iS
/.../C=US/O=XYZ/OU=Portland/subsys/PriceMax/price_server1

/.:/subsys/PriceMax/price_server1
.iE
.P
The naming conventions 
required for the interaction of local and global directory
services may at first seem confusing. 
In an environment where references to names
outside of the local cell are necessary, 
the following simple guidelines can help
make the conventions easy to remember and use:
.ML
.LI
Know your cell name.
.LI
Know whether a name that you are referring to is in your cell.
.LI
When using a name that is within your cell, 
you can omit the cell name and include the \*L/.:\*O prefix.
.LI
When using a name that is
outside of your cell, enter its global syntax, including the
\*L/...\*O prefix and the cell name.
.LI
When someone asks for the name of a resource in your cell, 
give its global name,
including the \*L/...\*O prefix.
.LI 
When storing a name in persistent storage (for example, in a shell script),
use its global name, including the \*L/...\*O prefix.  Local names 
(that is, names with a \*L/.:\*O prefix) 
are intended only for interactive use and should
not be stored.  (If a local name is referenced from within a foreign cell,
the \*L/.:\*O prefix is resolved to the name of the foreign cell and the
resulting name lookup either fails or produces the wrong name.)
.LE
...\"
...\" 
...\" ----------------------------------------------------------------------
.H 3 "Cell-Relative Naming in a Hierarchy of Cells" 
...\" ----------------------------------------------------------------------
...\"
.P 
In a hierarchy of cells, cell-relative names and local names may not
be the same.  A parent cell can reference a name in a child cell
by using cell-relative naming (\*L/.:\*O).  Consequently, you can no longer
determine whether a cell is in your local cell by merely looking at its
name.  In the following example, the child cell (\*Leng\*O) is named 
relative to its parent cell:
.iS
/.:/eng 
.iE 
.P
This type of naming allows 
you to access names in a child cell (for example,
\*L/.:/eng/hosts/admin\*O) from the parent cell, without having to
specify the global name of the cell.  
.nS note
When referencing names in a child cell from a parent cell, you should
be mindful that your status is that of a foreign user.  Therefore,
the child cell may have access controls imposed on it that will 
deny you access to its namespace. 
.nE 
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 3 "Local Filenames"
...\" ----------------------------------------------------------------------
...\" 
.iX "\*L/:\*O prefix"
.P
When referring to pathnames of files in the local cell, you can shorten a local
name even further by using the \*L/:\*O prefix.  This prefix translates to the
root of the cell file system.  The default name of the file system root is
\*L/.:/fs\*O, which is one level down from the root of the cell namespace.
So, for example, the following are all valid ways to refer to the same file
from within the \*L/.../widget.com\*O cell:
...\" 
.iS
/.../widget.com/fs/smith/myfile

/.:/fs/smith/myfile

/:/smith/myfile
.iE
...\" 
.P
(See the \*(Ad
for more information on local file system abbreviations.)
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 2 "An In-Depth Analysis of DCE Names"
...\" ----------------------------------------------------------------------
...\" 
.P
The rest of this chapter describes in depth the different kinds of
names that make up the DCE namespace.  Appendix A 
and the \*(Ax
contain further details about valid characters and naming conventions in CDS,
GDS, and DNS names.
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 3 "CDS Names"
...\" ----------------------------------------------------------------------
...\" 
.iX "CDS" "servers" "about"
.iX "namespace" "about"
.gL "CDS server"
.P
Every cell contains at least one server that is running a
CDS server.  A CDS server stores and maintains 
names and handles requests to create,
modify, and look up data.  The total collection of names shared by 
CDS servers in a cell is called a
.gL "cell namespace"
\*Ecell namespace\*O.  The cell namespace 
administrator can organize CDS names into a hierarchical structure of
.gL "directories"
.iX "directories" "about"
directories.  CDS directories, which 
are conceptually similar to the directories in
your operating system's file system, are a logical way 
to group names for ease of management and use.
...\" 
.P
.iX "directories" "parent"
.iX "directories" "child"
.iX "directories" "cell root"
In a cell namespace, any directory that has a directory 
beneath it is considered the
.gL "parent"
\*Eparent\*O of the directory beneath it. 
Any directory that has a directory above it is considered a 
.gL "child"
\*Echild\*O of the directory above it. 
The top level of the cell namespace is called the \*Ecell root\*O. 
.gL "cell root"
You can refer to the cell root either by the global name of the cell or
by the short-form \*L/.:\*O prefix.
...\" 
.P
Figure 11-3 shows a simple cell namespace hierarchy, starting at the 
cell root.  The cell root (\*L/.:\*O) is the parent of the directories 
named \*L/.:/hosts\*O and \*L/.:/subsys\*O.  The \*L/.:/subsys\*O 
directory is a child of the cell root directory
and the parent of the \*L/.:/subsys/dce\*O directory.
...\" 
.P
.ne 3i
.FG "Sample CDS Namespace Hierarchy"
.pI ../directory/overview/figures/1_ds_overview_50.ps 0 0 1
.sp .5
.P
.iX "full names"
.iX "simple names"
The complete specification of a CDS name, going 
left to right from the cell root to
the entry being named, is called the
.gL "full name"
\*Efull name\*O.  Each element within a full name is separated by
a / (slash) and is called a
.gL "simple name"
\*Esimple name\*O.  For example, suppose the \*L/.:/hosts\*O directory 
shown in Figure 11-3 contains an entry for a host whose simple name is 
\*Lbargle\*O.  The CDS full name of that entry is  \*L/.:/hosts/bargle\*O.  
Multiple consecutive slashes are turned into a single slash in a full name.
...\" 
...\" 
.P
Multiple directory levels enable flexibility in distributing, 
controlling access to, and managing many names.  A directory hierarchy 
also reduces the probability of duplicate names.  For example, the names
\*L/.:/subsys/Hypermax/printQ/server1\*O and
\*L/.:/subsys/ABC/spell/server1\*O are unique.
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 3 "GDS Names"
...\" ----------------------------------------------------------------------
...\" 
.iX "global names" "GDS format"
.P
The operation of GDS is similar to that of CDS, but some important differences exist
in the structure of names and the ways they can be looked up.
...\" 
.iX "-: DSA" "Directory System Agent"
.iX "DSA" "about"
Like CDS, GDS has a server process that provides access to and management of names.
This process is called a
.gL "directory system agent"
Directory System Agent (DSA).  The combined knowledge of all DSAs that participate in
the same global directory service implementation is called the
.gL "directory information base"
.iX "-: DIB" "Directory Information Base"
.iX "DIB" "about" 
Directory Information Base (DIB).  This collective knowledge is viewed 
as a single global directory consisting of many entries.
...\" 
.P
.ne 7
.iX "-: DIT" "Directory Information Tree"
.iX "DIT"
Information exists in the global directory in the form of a 
rooted hierarchy that is called a
.gL "directory information tree"
Directory Information Tree (DIT). 
The DIT is similar to a CDS namespace.  However, unlike
a namespace, which has no inherent rules 
regarding structure and content, the GDS hierarchy
is influenced by a set of rules that is called a 
.gL "schema"
.iX "schema" "about"
.iX "namespace" "compared to GDS hierarchy"
.iX "X.500" "DCE implementation"
\*Eschema\*O.  Every X.500 DSA must define a standard schema to 
which all of the entries in its portion of the DIB conform.
.P
Although the X.500 standard does not mandate a specific schema, 
it does make general recommendations that are
based largely on existing X.400 standards for electronic mail.  For
example, countries and organizations 
should be named close to the root of the DIT;
people, applications, and devices should be named 
further down in the hierarchy.  GDS
supplies a default schema that complies with these recommendations.
...\" 
.iX "-: DN" "Distinguished Names"
.iX "DN"  "about"
.P
Every GDS entry has a
.gL "distinguished name"
distinguished name, which uniquely and unambiguously identifies that entry.  The
distinguished name consists of a sequence of valid
.gL "relative distinguished names"
.iX "-: RDN" "Relative Distinguished Names"
.iX "RDN" "about"
Relative Distinguished Names (RDNs).
...\" 
...\" 
Each RDN consists of one or more assertions of the type and 
value of an attribute
at a particular position in the DIT.  Attribute types indicate the 
nature of the information that is stored in the attribute value.  
A pair consisting of an attribute type
and value is known as an Attribute Value Assertion (AVA). 
RDNs can have multiple AVAs.  For example, the distinguished name
.iX "-: AVA" "Attribute Value Assertions"
.iX "AVA"
...\" 
.iS
/C=us/O=osf/OU=branch1/CN=nollman,OU=doc-team
.iE
...\" 
consists of four RDNs.  The final RDN consists of two AVAs that are separated by
a comma.
...\" 
...\" 
.iX "local" "names" "about"
.P
Figure 11-4 illustrates the concepts of RDNs and distinguished names and how they
relate to the DIT.  The figure shows the following:
...\" 
.ML
.LI
A DIT consisting of a hierarchy of schema-defined attribute types
.LI
RDNs that result from assertions of an attribute type and value
.LI
Distinguished names that result from a concatenation of the RDNs
.LE
...\" 
.P
.ne 3.5i
.FG "RDNs and Distinguished Names"
.pI ../directory/overview/figures/1_ds_overview_60.ps 0 0 1
.sp .5
.P
The shaded boxes in the DIT represent the entries that are named in the column
labeled Relative Distinguished Name.  The schema dictates that countries are named
directly below the root, followed by organizations, organization units, and names
of users.  Each attribute value that makes up an RDN (and thus a distinguished name)
is called a
.gL "distinguished value"
.iX "distinguished value"
\*Edistinguished value\*O.
.P
As the rightmost column in the figure illustrates, the distinguished name of
the entry at each level of the DIT is a concatenation of RDNs from the root of
the global directory to that entry's level.  The lowest entry in the hierarchy,
\*L/.../C=US/O=ABC/OU=Sales/CN=Smith\*O, represents the name of a user,
John Smith, who works in the sales division of ABC Company, an
organization in the United States.  The abbreviated attribute type labels stand
for Country (\*LC\*O), Organization (\*LO\*O), Organization Unit (\*LOU\*O), and
Common Name (\*LCN\*O).
.P
Note that the figure shows the global DCE convention for distinguished names.  Each
distinguished name starts with the representation of the global root (\*L/...\*O).
Attribute types and values are separated by equal signs, and RDNs are separated by
slashes.
...\" 
...\" 
.iX "X.500" "DCE implementation"
These conventions for specifying names are not followed by all X.500 implementations.
In addition, these conventions are only used at the GDS adminstration interface level.
Internally, distinguished names are specified in other ways.
...\" 
...\" 
.P
.ne 5
.iX "attributes" "in CDS and GDS names"
.iX "local" "names" "attributes"
.iX "global names" "attributes"
The structure of GDS names points out another important difference 
between GDS and CDS.  A CDS name is distinct from its attributes; 
that is, it consists of a string of directory names ending with the 
simple name of the entry.  In contrast, a GDS name
consists solely of a series of attribute types and their values.
.P
.iX "full names"
Figure 11-5 illustrates this difference in the construction 
of CDS and GDS names.  The CDS full name 
\*L/.:/Admin/Personnel/Employee_DB\*O is the complete directory
specification of an entry with the simple name \*LEmployee_DB\*O.  
Attributes and their values are not a part of the CDS full name.  
The GDS distinguished name \*L/.../C=US/O=ABC/OU=Sales\*O is a 
concatenation of attribute types and values,
one from each level of a DIT schema.
.P
.FG "Comparison of CDS and GDS Names"
.pI ../directory/overview/figures/1_ds_overview_70.ps 0 0 1
.iX "DN" "structure (figure)"
.P
.iX "GDS" "searching via attributes"
GDS supports the ability to search for names by supplying the values of one or more
attributes.  This results in what is called \*Edescriptive naming\*O; in a sense, users
can describe the name they are looking for.  Although the search capability is valuable,
it can be expensive and time consuming, so GDS allows users to restrict the scope of a
search.  Support for the search operation is limited to the GDS environment.
...\" .iX "-[" "Distinguished Names (DN)" "about"
...\" .iX "-]" "global names" "GDS format"
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 3 "DNS Names"
...\" ----------------------------------------------------------------------
...\" 
.iX "-[" "DNS" "about"
.P
The DCE naming environment supports the version of DNS that is based on Internet
Request for Comments (RFC) 1034 and RFC 1035.  Many networks currently use DNS primarily
as a name service for host names.  The most commonly used implementation of DNS is the
Berkeley Internet Naming Domain (BIND).  The BIND namespace is a hierarchical tree with
its topmost levels under the control of the Network Information Center (NIC).  (See
...\" 
...\" the \*EPlanning, Configuring, and Starting Up DCE\*O module of this guide
...\" 
the \*(Ai for information on how to contact
the NIC Domain Registrar to register a domain name.)
.P
.iX "BIND namespace" "structure"
The names directly under the root of the BIND namespace 
include 2-letter codes for countries, such as 
\*Lus\*O and \*Lgb\*O, as defined in
ISO Standard 3166, ``Codes for the Representation of Names 
of Countries.'' Other names
one level below the root include several generic administrative 
categories, such as
\*Lcom\*O (commercial), \*Ledu\*O (educational), 
\*Lgov\*O (government), and \*Lorg\*O (other organizations).  
The owners of these names can grant permission to companies and
organizations to create new subordinate names. 
Figure 11-6 shows a sample portion of the
BIND namespace.  (The double quotes indicate that the root of the namespace has a
null name and is not addressable.)  Note that, 
like CDS names, DNS names are not typed;
that is, they do not consist of pairs of attribute types and values.
.P
.FG "Sample Portion of the BIND Namespace"
.pI ../directory/overview/figures/1_ds_overview_80.ps 0 0 1
.sp .5
.P
.ne 6
A DNS name consists of a string of hierarchical names 
that are separated by \*L.\*O (dots)
and arranged right to left from the root of the namespace. 
For example, the name
\*Lai.mit.edu\*O represents the branch of the namespace owned by 
the Massachusetts Institute of Technology artificial intelligence 
department.  Note that the order of
elements in the name is the reverse of the order for CDS and GDS names.
.P
To use a DNS cell name as part of a global DCE name, specify the DNS name intact
between two slashes.  For example, a cell whose DNS name is \*Lai.mit.edu\*O might
contain a directory whose CDS name is \*L/.:/profiles\*O.  Users should enter
\*L/.../ai.mit.edu/profiles\*O to refer to the directory by its global name.
.iX "-]" "DNS" "about"
...\" 
...\" 
...\" ----------------------------------------------------------------------
.H 3 "Names Outside of the DCE Directory Service"
...\" ----------------------------------------------------------------------
...\" 
.iX "junctions"
.iX "directory service" "names outside"
.P
Not all DCE names are stored directly in the DCE Directory Service.  Some
services connect into the cell namespace by means of specialized CDS entries
called \*Ejunctions\*O.  A junction entry contains binding information that
enables a client to connect to a server outside of the directory service.
.P
For example, the security service keeps a database of principals (users and 
servers) and information about them, such as their passwords. 
The default name of the security service junction is \*L/.:/sec\*O.
.P
The following example illustrates the parts of a global DCE principal 
name:
.P
.pI ../directory/overview/figures/1_ds_overview_90.ps 0 0 1
.P
The cell name, \*L/.../C=US/O=ABC/OU=west\*O, is a GDS name.  The \*Lsec\*O
portion is the junction entry in CDS, and \*Lprincipals/mozart\*O is 
a principal name that is stored in the security service database.
.P
.ne 4
Another service that uses junctions is DFS.  The DFS fileset location service 
.iX "global names" "outside directory service"
keeps a database that 
maps DFS filesets to the servers where they reside.  The junction to this
database has a default name of \*L/.:/fs\*O.  The following example
illustrates the parts of a global DCE filename:
.P
.pI ../directory/overview/figures/1_ds_overview_100.ps 0 0 1
.P
The global name contains a DNS cell name, \*L/.../ai.mit.edu\*O.  The 
\*Lfs\*O portion is the file system junction entry in CDS, and 
\*L/users/mozart/myfile\*O is the name of a file.
.P
Thus, the DCE namespace is a connected tree of many kinds of names from many
different sources.  The GDA component of the directory service provides connections
out of the cell and to other cells through a global namespace, such as GDS or DNS.
In a similar manner, junctions enable connections downward from the cell namespace
to other services.
...\" 
...\" 
...\" 
...\" ----------------------------------------------------------------------
