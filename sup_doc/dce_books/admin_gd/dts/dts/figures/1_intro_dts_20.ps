%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 321.00 275.00
-18.00 -18.00 translate
% original bounding box was  18 18 339 293
%%Title: ARTLIB:ZK-3855A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Fri Aug 16 13:05:14 1991
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
%% ********************************************************************
%%                                                                    *
%% COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
%% Maynard, Massachusetts                                             *
%% All Rights Reserved.                                               *
%%                                                                    *
%% This document is furnished under a license and may be used and     *
%% copied only in accordance with the terms of such license and with  *
%% the inclusion of the above copyright notice. No title to or        *
%% ownership of the document is hereby transferred.                   *
%%                                                                    *
%% The information in this document is subject to change without      *
%% notice and should not be construed as a commitment by Digital      *
%% Equipment Corporation.                                             *
%%                                                                    *
%% ********************************************************************
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 293.268 tr
1 -1 sc
0.700 0.700 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 458.934 393.240 Crop
0.925 slw
0 slc
315.517 263.239 79.573 263.239 Line st
1.851 slw
362.706 94.378 139.716 94.378 Line st
348.827 142.492 301.638 142.492 Line st
313.667 190.606 138.791 190.606 Line st
86.975 238.720 288.684 238.720 Line st
422.849 262.777 2.776 262.777 Line st
288.684 309.040 139.716 309.040 Line st
2.776 slw
251.674 103.168 251.674 87.438 Line st
325.695 151.282 325.695 135.552 Line st
226.691 199.396 226.691 183.666 Line st
187.830 247.510 187.830 231.780 Line st
214.663 317.830 214.663 302.101 Line st
%%RGBCustomColor: 0.500 0.500 0.500  0.500_0.500_0.500
0.500 0.500 0.500 rgb
164.698 309.503 164.698 21.744 Line st
1.851 slw
[ 8 4 8 4 ] 0 sd
0.000 0.000 0.000 rgb
288.684 309.040 288.684 21.281 Line st
139.716 309.040 139.716 21.281 Line st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [12 0 0 -12 0 0] SF
4 0.33288 (Time) 433.027 266.478 Text
2 0.20485 (CT) 297.937 310.891 Text
0.925 slw
[] 0 sd
289.610 324.307 289.610 327.083 Line st
284.983 331.709 289.610 327.083 Line st
214.663 336.336 219.289 331.709 Line st
210.036 331.709 214.663 336.336 Line st
214.663 336.336 214.663 338.186 Line st
139.716 327.083 144.342 331.709 Line st
139.716 324.307 139.716 327.083 Line st
210.036 330.784 144.342 330.784 Line st
284.983 331.709 219.289 331.709 Line st
15 0.99863 (Intersection of) 181.353 362.706 Text
17 1.15227 (correct intervals) 175.801 375.660 Text
15 1.12666 (\(computed time\)) 176.727 388.614 Text
3 0.30727 (UTC) 154.520 12.029 Text
np 420.073 260.926 mo 
427.475 263.702 li 
420.073 265.553 li 
420.073 260.926 li gs
0.000 0.000 0.000 rgb
fi gr
0 slc
427.475 263.239 420.073 260.464 Line st
420.073 265.090 427.475 263.239 Line st
420.073 260.464 420.073 265.090 Line st
2 0.12803 (t1) 373.809 98.079 Text
2 0.12803 (t2) 358.080 146.193 Text
2 0.12803 (t3) 323.845 193.382 Text
2 0.12803 (t4) 299.788 241.496 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000 0.500_0.500_0.500
