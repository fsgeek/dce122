...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: task_cellalias.gpsml,v $
...\" Revision 1.1.4.1  1996/09/19  14:08:26  sherman
...\" 	{def,13576,R1.2.2}
...\" 	Changed text - cell renaming not allowed
...\" 	[1996/09/19  14:07:53  sherman]
...\"
...\" Revision 1.1.2.9  1995/05/25  19:11:44  rcb
...\" 	prevented hyphenation of option names
...\" 	[1995/03/09  14:59:32  rcb]
...\" 
...\" 	PRENTICE HALL reformat
...\" 	[1995/03/02  16:27:39  rcb]
...\" 
...\" 	incoroporated 1.1 edits
...\" 	[1995/03/02  15:59:05  rcb]
...\" 
...\" Revision 1.1.2.8  1994/10/28  14:38:56  wardr
...\" 	{edit R1.1}
...\" 	added index hits
...\" 	[1994/10/28  14:38:27  wardr]
...\" 
...\" Revision 1.1.2.7  1994/10/18  20:36:13  wardr
...\" 	{edit R1.1}
...\" 	Final fixes for the GA release
...\" 	[1994/10/18  20:35:52  wardr]
...\" 
...\" Revision 1.1.2.6  1994/10/16  20:35:09  zahn
...\" 	{edt,12399,R1.1}
...\" 
...\" 	Added a cross-reference to Chapter 21,
...\" 	which describes how to create a cell
...\" 	hierarchy.
...\" 	[1994/10/16  20:34:55  zahn]
...\" 
...\" Revision 1.1.2.5  1994/10/07  20:07:35  wardr
...\" 	{edit R1.1}
...\" 	Added newline at end of file
...\" 	[1994/10/07  20:07:15  wardr]
...\" 
...\" Revision 1.1.2.4  1994/10/07  20:03:08  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	Prepared for final draft review
...\" 	[1994/10/07  20:02:26  wardr]
...\" 
...\" Revision 1.1.2.3  1994/10/06  20:40:27  rrizzo
...\" 	expand copyright
...\" 	[1994/10/06  20:07:33  rrizzo]
...\" 
...\" Revision 1.1.2.2  1994/09/02  17:37:20  wardr
...\" 	{edit R1.1}
...\" 	fixed sml coding problem
...\" 	[1994/09/02  17:37:06  wardr]
...\" 
...\" Revision 1.1.2.1  1994/09/02  17:13:24  wardr
...\" 	{edit R1.1}
...\" 	creating cellalias info and renumbering part number
...\" 	[1994/09/02  17:12:54  wardr]
...\" 
...\" $EndLog$
.H 1 "Managing Your Cell Name"
.P
.iX "task objects" "\*Lcell_alias\*O"
.iX "cells" "managing the names of"
.iX "cell names" "managing"
.iX "cell aliases" "managing with the \*Lcellalias\*O task object"
.zA "def,13576,R1.2.2,Changed text -- cell renaming not allowed"
...\" ---------------------------------------------------------------------
...\" ---------------------------------------------------------------------
...\" -------This old text describes cell renaming,------------------------ 
...\" -------renaming, which is no longer allowed  ------------------------
...\" -------                                      ------------------------
...\" -------New text follows the old stuff        ------------------------
...\" ---------------------------------------------------------------------
...\" ---------------------------------------------------------------------
...\" Although cell names tend to be stable, there are times when you want
...\" to change them.  Imagine that, shortly after you install and configure a
...\" new cell, a corporate reorganization makes your cell name inaccurate.
...\" Your old cell name \*L/.../sales.goodco.com\*O doesn't reflect your
...\" new divisional organization in which the cell name
...\" \*L/.../polyline.goodco.com\*O would be more appropriate.  What's
...\" more, the Goodco company has just acquired new, international
...\" affiliations.  However, their cells are registered in an X.500
...\" directory service which, unfortunately, does not interconnect with
...\" DNS, the Domain Name System in which your cell is registered.
...\" .P
...\" As the cell administrator, you can solve either or both of these
...\" problems by using a cell alias name.  Cell alias names offer the
...\" flexibility you need to manage your cell name, letting you change the
...\" name of your cell or just add a second cell name as an alias that can
...\" be registered in another global directory service.
...\" .P
...\" You can use the \*Lcellalias\*O task object to create and manage cell
...\" alias names, updating all of the DCE services that store the name of
...\" your cell.
...\" .P
...\" Cells must have two (or more) cell names to be registered in more than
...\" one global directory service.  If you are changing your cell name
...\" (instead of simply adding an alias), you must also set the new name to
...\" be the \*Eprimary cell name\*O.  In this case, the \*Lcellalias\*O
...\" object updates CDS, the DCE Security Service, and DCE hosts with the new
...\" primary cell name.
...\" .P
...\" .ne 4
...\" Note that a previously existing cell name is not
...\" eliminated from the cell's services.  CDS and the DCE Security Service
...\" must retain the old name so that they can respond appropriately to any
...\" client requests bearing the old name.
...\" .P
...\" This chapter discusses various aspects of global names and CDS names.
...\" If you are not already familiar with the structure of global names and
...\" CDS names, you should read more about them now in Part 4 of this guide.
...\" Ant Liners
Although cell names tend to be stable, at times you may want to create
and display alternative names for cells. Cell aliases can be managed by
the \*Lcellalias\*O task object. You can create multiple
aliases for a single cell, but only one per \*Lcellalias\*O command.
.P
When you create an alias, the \*Lcellalias\*O task object forms a new principal
(to represent the cell alias) in the registry, verifies the registry to
make sure the cell's Security replicas are current, creates an alias name
in CDS and updates each CDS replica. The \*Lcellalias\*O task object also
performs a \*Lhostdata\*O operation on each host in the cell for which you are 
creating the alias. All dced objects, as well as the dcelocal/dce_cf.db and 
dcelocal/etc/security/pe_site files, are updated to reflect the new alias name.
If your cell contains many hosts, this action can take a long time to complete.
.zZ "def,13576,R1.2.2,Changed text -- cell renaming not allowed"
.H 2 "Registering in Multiple Global Directory Services"
.P
.iX "cell names" "multiple names for"
You can make your cell resources available to users or applications in
other DCE cells by registering your cell in a global directory service
such as DNS (Domain Name System) or GDS (an X.500 global directory
service).  Once your cell is registered, users in remote cells can
access your cell's resources (provided they have the necessary
permissions) by using global names.  The following example shows a
global DNS name identifying an ASCII line printer in a cell managed by
the fictitious Goodco company:
.iS
/.../sales.goodco.com/subsys/bldg6/resources/floor2/printer_ascii
.iE
.P
But let's say you also want to register your cell in GDS so that
foreign cells that have access to only an X.500 global directory
service can access your cell's resources.  Now, your cell needs a
second X.500-style name and, for this, you must establish an alias
like the following:
.oS
\*L/.../C=us/O=goodco/OU=sales\*O
.oE
.P
Use a \*Lcellalias create\*O operation to create a second name for
your cell.  This operation creates a new cell principal in the
registry service and performs a \*Lregistry verify\*O operation to
ensure that all the replicas are up-to-date.  Next, it creates a cell
alias name in CDS by using the \*Lcdsalias\*O object.  Finally, it
performs a \*Lhostdata\*O operation on each host in the cell, updating
each \*Vdcelocal\*L/dce_cf.db\*O file and
\*Vdcelocal\*L/etc/security/pe_site\*O file with the cell alias name.  This
last step can take a long time to complete in a cell with many hosts.
.P
.ne 3
The following creates the cell alias name \*L/.../C=us/O=goodco/OU=sales\*O:
.oS
dcecp> \*Lcellalias create /.../C=us/O=goodco/OU=sales\*C
\*Cdcecp>\*O
.oE
.P
Once you have completed this operation, you can register your cell
name with the authority responsible for the particular global service.
.zA "def,13576,R1.2.2,Changed text -- cell renaming not allowed"
...\" .H 2 "Changing Your Cell Name"
...\" .P
...\" .iX "cells" "changing the names of"
...\" Although cell names tend to be relatively stable, there might be a
...\" situation where you want to change your cell name.  For instance, your
...\" company name has changed and you want that name reflected in your cell
...\" name.  Whatever the reason, changing your cell name is a two-step
...\" process. 
...\" .P
...\" The first step is using a \*Lcellalias create\*O operation to create a
...\" new alias name for your cell.  The second step is using a \*Lcellalias
...\" set\*O operation to set the new alias name to be the \*Eprimary cell
...\" name\*O.  The following example illustrates the necessary steps 
...\" and assumes you want to change your old cell name
...\" \*L/.../sales.goodco.com\*O to \*L/.../polyline.goodco.com\*O: 
...\" .AL
...\" .LI
...\" Use a \*Lcellalias create\*O operation to create a second name for
...\" your cell.  This operation creates a new cell principal in the registry
...\" service and synchronizes the registry.  Next, it creates a cell alias
...\" name in CDS by using the \*Lcdsalias\*O object.  Finally, it uses the
...\" \*Lhostdata\*O object to update the \*Vdcelocal\*L/dce_cf.db\*O 
...\" and \*Vdcelocal\*L/etc/security/pe_site\*O files on each host in
...\" the cell with the new cell alias.
...\" .P
...\" The following creates the cell alias name \*L/.../polyline.goodco.com\*O:
...\" .oS
...\" dcecp> \*Lcellalias create /.../polyline.goodco.com\*C
...\" .oE
...\" .LI
...\" Use a \*Lcellalias set\*O operation to set the new name to be the
...\" \*Eprimary cell name\*O.  This operation modifies the new cell
...\" principal name so that it's not an alias and performs a \*Lregistry
...\" verify\*O operation to ensure that all the replicas are up-to-date.
...\" Next, it uses the \*Lcdsalias\*O object to set the alias name in CDS
...\" to be the primary cell name and synchronizes the CDS replicas.
...\" Finally, it performs a \*Lhostdata\*O operation on each host in the
...\" cell, interchanging the values stored in the \*Lcell_name\*O and
...\" \*Lcell_aliases\*O data items respectively.
...\" .P
...\" .ne 3
...\" The following example sets the new alias name,
...\" \*L/.../polyline.goodco.com\*O, to be the primary cell name.  The old cell
...\" name (\*L/.../sales.goodco.com\*O) becomes a cell alias name.
...\" .oS
...\" dcecp> \*Lcellalias set /.../polyline.goodco.com\*C
...\" .oE
...\" .LE
.H 2 "Modifying or Extending the cellalias Object"
.P
.iX "cell aliases" "extending the \*Lcellalias\*O task object"
.iX "\*Lcellalias\*O object" "extending"
.iX "extending" "the \*Lcellalias\*O task object" 
.iX "task objects" "\*Lcell\*O" "extending"
The \*Lcellalias\*O task object is implemented as a script so that
administrators can modify or extend it on a per-site basis.  Here are
a few examples of possible modifications or extensions you can make:
.ML
.LI
Extend the script to create hierarchical cells.  Chapter 21 
describes the procedure to create a hierarchy of cells.
.LI
Add a \%\*L-verbose\*O option to display the results of each step as it
completes. 
.LE
.P
Part 1 of this guide discusses ways to create new \*Ldcecp\*O objects
or modify existing objects written with the \*Ldcecp\*O language.
.zZ "def,13576,R1.2.2,Changed text -- cell renaming not allowed"
