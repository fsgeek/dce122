...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: rpc_intro.1rpc,v $
...\" Revision 1.1.4.1  1996/10/28  14:50:59  wardr
...\" 	{edit,R1.2.2}
...\" 	inadvertant checkout
...\" 	[1996/10/28  14:50:44  wardr]
...\"
...\" Revision 1.1.2.7  1995/12/18  17:23:24  rcb
...\" 	PH1.1: final fixes
...\" 	[1995/12/18  13:36:22  rcb]
...\" 
...\" Revision 1.1.2.6  1995/10/09  15:08:11  rcb
...\" 	PH1.1: editorial improvement and Prentice-Hall publish formatting
...\" 	[1995/10/09  15:08:07  rcb]
...\" 
...\" Revision 1.1.2.5  1995/09/22  18:37:12  rcb
...\" 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2
...\" 	[1995/09/22  18:20:32  rcb]
...\" 
...\" Revision 1.1.2.4  1994/08/26  20:18:36  jshirley
...\" 	No change.
...\" 	[1994/08/26  20:16:02  jshirley]
...\" 
...\" Revision 1.1.2.3  1994/06/13  18:41:31  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  18:39:18  devobj]
...\" 
...\" Revision 1.1.2.2  1994/05/05  18:35:55  zahn
...\" 	{def,10534,R1.1}
...\" 
...\" 	Removed nidl_to_idl documentation from
...\" 	this reference page because NCS compatibility
...\" 	is no longer supported.
...\" 	[1994/05/05  18:35:38  zahn]
...\" 
...\" Revision 1.1.2.1  1994/04/11  20:36:36  rom
...\" 	{def, 10326, R1.1}
...\" 	Rename intro.1rpc to rpc_intro.1rpc.
...\" 	[1994/04/11  19:18:10  rom]
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Fri Nov 8, 1991                 Initial file submission to HP
...\"                                   for final integration at IBM.
...\"                                   
...\"
...\" ********************************************************************
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *
...\" All rights reserved.                                               *
...\" ********************************************************************
...\" .cS
...\" .nr H1 1  -- Commented out because it undesirably reset a chapter counter.
...\" .cE
.TH rpc_intro 1rpc
.SH "NAME"
.PP
\*Lrpc_intro\*O - Introduction to the DCE RPC programmer commands
.SH "DESCRIPTION"
.PP
The DCE remote procedure call (RPC) component
provides the following programmer commands:
.iX "programmer commands"
.iX "RPC" "programmer commands"
.iX "DCE RPC" "programmer commands"
.iX "commands" "for RPC programmers"
.VL 1i
.LI "\*Lidl\*O"
Invokes the Interface Definition Language (IDL) compiler to
convert an interface definition, written in IDL, to output files.
.iX "\*Lidl\*O command"
.iX "commands" "\*Lidl\*O"
.iX "IDL compiler"
.iX "Interface Definition Language compiler"
.LI "\*Luuidgen\*O"
Creates a Universal Unique Identifier (UUID) string that you assign to an
object to uniquely distinguish it from other objects.
.iX "\*Luuidgen\*O command"
.iX "commands" "\*Luuidgen\*O"
.LE
.PP
See each command's reference page for further information.
.SS IDL Base Data Types and IDL-to-C Type Mappings
.PP
.iX "data types" "of IDL"
.iX "data types" "IDL-to-C mappings"
.iX "IDL" "base data types"
.iX "IDL" "IDL-to-C data type mappings"
...\"  *****************
...\" WRITER'S NOTE: The remainder of this section, begining with
...\" The following table lists the IDL base data type specifiers.
...\" is shared with the rpc_intro(3rpc) reference page.
...\" Changes to either copy of the text apply to both copies.
...\"  *****************
The following table lists the IDL base data type specifiers.  Where applicable,
the table shows the size of the corresponding transmittable type and the type
macro emitted by the IDL compiler for resulting declarations.
.iX "\*Lidl_\*O macros"
.iX "macros" "\*Lidl_\*O"
.PP
Note that you can use the \*Lidl_\*O macros in the code you write for
an application to ensure that your type declarations are consistent
with those in the stubs, even when the application is ported to
another platform.  The \*Lidl_\*O macros are especially useful when
passing constant values to RPC calls.  For maximum portability, all
constants passed to RPC calls declared in your network interfaces
should be cast to the appropriate type because the size of integer
constants (like the size of the \*Lint\*O data type) is
unspecified in
the C language.
.PP
The \*Lidl_\*O macros are defined in \*Ldce/idlbase.h\*O, which
is included by header files that the IDL compiler generates.
.iX "\*Lidlbase.h\*O"
.PP
...\" .TB "Base Data Type Specifiers\(emrpc_intro(1rpc)"
.TS
center, box, tab(@);
cb s s s s
cb cb lb | lb | lb
lb lb lb | lb | lb
lb | lb | lb | l | lb.
Base Data Type Specifiers\(emrpc_intro(1rpc)
_
@Specifier@@@Type Macro
(sign)@(size)@(type)@Size@Emitted by idl
=
@small@int@8 bits@idl_small_int
@short@int@16 bits@idl_short_int
@long@int@32 bits@idl_long_int
@hyper@int@64 bits@idl_hyper_int
unsigned@small@int@8 bits@idl_usmall_int
unsigned@short@int@16 bits@idl_ushort_int
unsigned@long@int@32 bits@idl_ulong_int
unsigned@hyper@int@64 bits@idl_uhyper_int
@@float@32 bits@idl_short_float
@@double@64 bits@idl_long_float
@@char@8 bits@idl_char
@@boolean@8 bits@idl_boolean
@@byte@8 bits@idl_byte
@@void@\(em@idl_void_p_t
@@handle_t@\(em@\(em
.TE
.SH "RELATED INFORMATION"
.PP
.ad l
Commands: \*Lidl(1rpc)\*O, \*Luuidgen(1rpc)\*O.
.PP
Books:  \*(Dg, \*(Tg.
.ad b
