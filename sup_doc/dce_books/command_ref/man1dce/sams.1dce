...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: sams.1dce,v $
...\" Revision 1.1.6.3  1996/10/28  14:52:25  wardr
...\" 	{def,13588,R1.2.2}
...\" 	Add Pointer to Problem Determination Guide
...\" 	[1996/10/28  14:51:59  wardr]
...\"
...\" Revision 1.1.6.2  1996/09/16  15:42:47  millett
...\" 	{def,13572,public]
...\" 	 add -g option
...\" 	[1996/09/16  15:42:18  millett]
...\" 
...\" Revision 1.1.6.1  1996/05/13  16:44:46  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  16:44:37  wardr]
...\" 
...\" Revision 1.1.4.2  1996/02/07  20:18:24  rcb
...\" 	R1.2.1: editorial pass following HP revision
...\" 	[1996/02/07  20:15:18  rcb]
...\" 
...\" Revision 1.1.4.1  1996/02/02  19:47:55  weir
...\" 	CR 13293: miscellaneous HP revisions
...\" 	[1996/02/02  19:47:30  weir]
...\" 
...\" Revision 1.1.2.10  1995/10/18  13:50:55  rcb
...\" 	PH1.1: editorial improvement and Prentice-Hall publish formatting
...\" 	[1995/10/18  13:35:29  rcb]
...\" 
...\" Revision 1.1.2.9  1995/10/06  20:46:13  rcb
...\" 	1.1PH: interim edits
...\" 	[1995/10/06  20:44:09  rcb]
...\" 
...\" Revision 1.1.2.8  1995/09/22  18:37:09  rcb
...\" 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2
...\" 	[1995/09/22  18:20:14  rcb]
...\" 
...\" Revision 1.1.2.7  1994/11/03  23:52:58  neilson
...\" 	Substituted macros for book names in cross refs.
...\" 	[1994/11/03  02:40:27  neilson]
...\" 
...\" Revision 1.1.2.6  1994/10/17  18:05:55  hileman
...\" 	Added corrections from Rich Salz, John Bowe, and
...\" 	Julie Salamone.
...\" 	[1994/10/17  18:04:03  hileman]
...\" 
...\" Revision 1.1.2.5  1994/10/17  14:06:38  weir
...\" 	No change
...\" 	[1994/10/17  14:06:04  weir]
...\" 
...\" Revision 1.1.2.4  1994/08/23  23:17:45  bmoy
...\" 	Added index tags.
...\" 	[1994/08/23  23:17:35  bmoy]
...\" 
...\" Revision 1.1.2.3  1994/06/13  18:41:29  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  18:39:16  devobj]
...\" 
...\" Revision 1.1.2.2  1994/05/10  03:15:47  willie
...\" 	{enh, 8441, R1.1}
...\" 	Incorporated review comments for beta release
...\" 	[1994/05/10  03:15:23  willie]
...\" 
...\" Revision 1.1.2.1  1994/04/01  19:56:25  rom
...\" 	{enh, 10269, R1.1}
...\" 	Moved to dce_books/admin_ref/man1dce/sams.1dce from
...\" 	dce_books/app_ref/man1dce/sams.1dce.
...\" 	[1994/04/01  17:45:46  rom]
...\" 
...\" $EndLog$
...\"
...\" 
...\" 
...\" HP History:
...\"	HP revision /main/1  1995/03/08  02:06 UTC  arh
...\" 	Add OSF doc sources.
...\" 
...\" 
...\" 
...\" 
...\" 
...\" 
...\"
.TH sams 1dce
.iX "commands" "\*Lsams\*O"
.iX "\*Lsams\*O command"
.iX "messages" "system files" "\*Lsams\*O command"
.iX "files" "\*Lsams\*O"
.SH "NAME"
.PP
\*Lsams\*O - Builds DCE message system files
.SH "SYNOPSIS"
.PP
.iX "\*Lsams\*O command" "synopsis"
.iX "directories" "\*Lsams\*O command"
.zA "def,13572,R1.2.2,add -g option"
.sS
\*Lsams\*O [\*L-d \*Vdest_dir\*O] [\*L-f\*O] [\*L-g \*Vgencat_command\*O] [\*L-I \*Vinterface\*O] [\*L-m\*O] [\*L-n \*Voutput_name\*O] 
.nL
[\*L-o \*Voutput_files\*O] [\*L-s \*Vstyle\*O] [\*L-t \*Vtable\*O] [\*L-x\*O] \*Vinput_file\*O
.zZ "def,13572,R1.2.2,add -g option"
.sE
.SH "OPTIONS"
.PP
.VL 1.25i
.LI "\*L\-d \*Vdest_dir\*O"
Specifies the directory in which files are to be created.
The default is the current directory.
.LI "\*L-f\*O"
Turns off text-field filtering for the \*L<a|b>\*O construct (described later in this
reference page).
.zA "def,13572,R1.2.2,add -g option"
.LI "\*L-g \*Vgencat_command\*O"
Invokes the platform-specific \*Lgencat\*O command specified by 
\*Vgencat_command\*O.  Enclose \*Lgencat\*O command strings that 
contain spaces in single quotes.  For example to 
invoke \*Lgencat\*O when \*Lsams\*O is invoked, use 
the \*L-g\*O option in the form: \*L-g 'gencat -m'\*O.
.zZ "def,13572,R1.2.2,add -g option"
.LI "\*L-I \*Vinterface\*O"
Names the Interface Definition Language (IDL) \*Vinterface\*O that 
is to contain \*Lconst\*O declarations for all message numbers.
.LI "\*L-m\*O"
Generates one documentation file for each message.
Each filename is named by the symbolic message code.
.LI "\*L-n \*Voutput_name\*O"
Specifies the base name of the output files.
.LI "\*L-o \*Voutput_files\*O"
Specifies which files to generate.  The default is to generate all files.
.LI "\*L-s \*Vstyle\*O"
Specifies the order in which documentation entries are to be generated.
The order is indicated by one of the following letters:
.VL .5i
.LI "\*La\*O"
Alphabetic by message name.
.LI "\*Ln\*O"
Numeric by message number.
.LI "\*Lt\*O"
Alphabetic by message text.
.LE
.LI "\*L-t \*Vtable\*O"
Generates an in-core message table that includes only those messages
that are in the specified \*Vtable\*O.
The default is to include all messages.
.LI "\*L-x\*O"
Checks each message string that contains
more than one \*Lprintf\*O-style
argument specification to make sure that it follows the XPG4
convention of \*L%\*Vd\*L$\*O, where \*Vd\*O is a digit.
Note that message text should normally not have to use the XPG4 conventions
because \*Lsams\*O  will automatically insert them when generating the catalog.
.LE
.nL
.SH "ARGUMENTS"
.PP
.VL
.LI "\*Vinput_file\*O"
Specifies the message input file.
.LE
.SH "DESCRIPTION"
.PP
The \*Lsams\*O utility
reads the specified input file and creates a number of output files.
The name \*Lsams\*O stands for 
.iX "symbols" "\*Lsams\*O command"
.iX "messages" "strings" "\*Lsams\*O command"
.iX "files" "input" "\*Lsams\*O command"
.iX "files" "output" "\*Lsams\*O command"
\*Esymbols and message strings\*O, which is what the program manipulates.
The input file consists of keywords, numbers, and text.
Whitespace, except in quoted strings, is used only to separate tokens.
If the text is a simple word, it can be entered unquoted.
Text that is a keyword or that spans multiple lines must be
enclosed within quotes.
Within such quoted text, leading and trailing newlines are ignored, and
the usual C escapes (for example, \*L\et\*O for a tab) are accepted.
In addition, spaces and tabs after a newline are ignored.  If you need 
leading whitespace, use the two-character sequence \*L\en\*O followed
by the spaces.
.PP
An unquoted \*L#\*O (number sign) introduces a comment.
Everything from the \*L#\*O (number sign) to the end of the line is ignored.
.nL
.ne 4
.SS "Generated Output"
.PP
A DCE message identifier is a 32-bit number that is divided into three
parts:  a technology, a component, and the message code.
The technology and component fields are assigned by OSF; the message code
is assigned by \*Lsams\*O or specified in the input file.
.PP
The technology and component determine the name of all files generated by
\*Lsams\*O, including the message catalog.
The \*Ldce_msg_\*V*\*L(3dce)\*O routines know how to 
parse a message identifier and
reconstruct the message catalog name and retrieve the desired text by
using the code field.
.PP
For DCE and Distributed File System (DFS)
source code, the technology will be \*Ldce\*O or \*Ldfs\*O
and the component will be a three-letter name.
For application code, the technology is part of the component, which is
a number specified by OSF, but the name \*Ldce\*O is always used.
.PP
.iX "files" "output"
The \*Lsams\*O utility
creates a number of output files, as specified by the \*L\-o\*O flag.
This flag takes a set of letters, picked from the following table.
The \*Lcomponent\*O (and \*Ltechnology\*O) headers determine part of the
filenames.  This can be overridden by using the \*L-n\*O flag to specify the
base name.  Note that this does not replace the name under which the 
message catalog must be installed.
.iX "files" "message"
.iX "files" "header"
.iX "files" "catalog"
.iX "files" "reference page"
.iX "files" "problem determination"
.iX "files" "serviceability table"
.iX "files" "header file" "serviceability"
For example, given \*Ldce\*O as the technology and \*LXXX\*O as 
the component name, the following files would be created:
.PP
.sp
.TS
center, allbox, tab(@);
lb lb lb
lb | lb | l.
Letter@File@Description
_
c@dceXXX.cat@T{
Catalog created by gencat; the message file is
assumed to have already been generated
T}
d@dceXXXmsg.man@Subset of a UNIX style reference page
h@dceXXXmsg.h@T{
Header file mapping codes to message numbers
T}
i@interface.idl@IDL file defining message identifier constants
m@dceXXX.msg@Message file for gencat program
p@dceXXXmsg.sml@Problem determination guide
s@dceXXXsvc.c@Serviceability table
S@dceXXXsvc.h@Serviceability header file
t@dceXXXmsg.c@T{
Table mapping message numbers to short text;
this is the in-core table of default message texts
T}
u@dceXXXmac.h@Serviceability-use convenience macros
x@dceXXX.idx@T{
Index file for building a problem determination book
T}
.TE
.sp
.SS "Input format"
.PP
The input file is divided into three parts; the second part is optional.
.PP
The first part of the input file specifies a set of headers in the
following format:
.iX "headers"
.iS
\*Vheader value\*O
.iE
They must be chosen from the following set:
.VL .5i
.LI "\*Lcollection size \*Vvalue\*O"
The number of messages in each collection.
The default value is 100.
.LI "\*Lcomponent \*Vcomp\*O"
The name of the component for which the messages are being generated for
the DCE or DFS technology provided by OSF.  Component names must 
be three characters long.
.LI "\*Lcomponent code \*Vvalue\*O"
The numeric value of the component, for application code.
.LI "\*Ldefault \*Vflags\*O"
The default flags that should be assigned to all messages that do
not specify their own flags.
The flags should be chosen from the following set:
.VL 1.25i
.LI "\*Lincatalog\*O"
Put the message in the message catalog.
.LI "\*Lintable\*O"	
Put the message in the in-core text table.
.LI "\*Llongtext\*O"
Message text is long, usually meaning it will not 
be returned as a status code, but instead used only as a message to be
displayed to the user.
.LI "\*Lundocumented\*O"	
Do not put this message in any generated documentation files (that is, 
reference pages or the \*(Tg).
.LI "\*Lobsolete\*O"	
Reserve a number for this message but do not output any reference to it.
.LI "\*Lreserved\*O"
Same action as \*Lobsolete\*O.
.LE
.PP
Each flag may be preceeded by the word \*Lnot\*O or a 
\*L!\*O (exclamation point) to reverse its meaning.
This header is optional; the default value is \*Lintable incatalog
not\ undocumented not\ obsolete\*O.
.LI "\*Ltechnology \*Vtech\*O"
The name of the technology provided by OSF for which the messages are 
being generated.  This header may be omitted; the default value is \*Ldce\*O. 
Technology names must be three characters long.
.LI "\*Lvalue \*Vstart\*O"
The low-order bits of the status code to be assigned to messages.
This header may be omitted; the default value is 1.
.LI "\*Ltable \*Vvarname\*O"
The name of the in-core message table that is created.
This header may be omitted; the default value is 
\*VXXX\*L_msg_table\*O where \*VXXX\*O is the component name or just
\*Lmsg_table\*O for application code.
.LE
.PP
.iX "header file"
.iX "files" "header"
A typical header might look like the following:
.oS
technology	dce
component	dts
table		dts_msg_table
.oE
.PP
The optional second part of the input file is used to specify the DCE
serviceability table and handle.  It should appear in the following format:
.iX "serviceability table" "\*Lsams\*O command"
.sS
.ta .6i
\*Lserviceability table \*Vname \*Lhandle \*Vhandle_name 
.nL
\*Lstart\*O
.nL
	\*Vsubcomponent_list\*O
.nL
\*Lend\*O
.sE
The \*Ltable\*O \*Vname\*O field specifies the name of the
subcomponent table, as described in the \*Lservice.idl\*O interface.
The \*Lhandle \*Vhandle_name\*O field specifies the name of the 
serviceability handle to be used with this component.  (For more 
information, see the \*Ldce_svc_register(3dce)\*O reference page.)
.PP
The \*Vsubcomponent_list\*O argument is a series of lines in 
the following format:
.iS
\*Lsub-component \*Vtable_index subcomp full_descr_id\*O
.iE
.iX "\*L#define\*O"
where:
.VL
.LI "\*Vtable_index\*O"
is the name of a \*L#define\*O 
(put in the serviceability header file)
that will be used as the subscript into the table.
.LI "\*Vsubcomp\*O"
is a single word (in quotes, if needed, so that it
will not be mistaken for a \*Lsams\*O keyword) that names the subcomponent
and is used to group related messages.
.nL
.LI "\*Vfull_descr_id\*O"
is the \*Lcode\*O for the message that contains
the full description of the subcomponent.  
.LE
.PP
For example:
.oS
serviceability table dst_svc_table handle dts_svc_handle
start
    subcomponent dts_s_general  "general"  dts_i_svc_general
    subcomponent dts_s_provider "provider" dts_i_svc_provider
end
.oE
.PP
This indicates that there are two subcomponents.
.PP
Note that each subcomponent must have an entry somewhere in the 
third part of the file (described in the following section)
that is a standard message code that contains the full text 
describing the subcomponent.  For example:
.oS
## Messages for serviceability table
start	!intable undocumented
code	dts_i_svc_general
text	"General administrative actions"
end

start	!intable undocumented
code	dts_i_svc_provider
text	"Interactions with time-providers"
end
.oE
.PP
.ne 7
The third part of the input file is usually the largest part.
It consists of a series of records where each record specifies one message.
Each record is of the following form:
.sS
\*Lstart\*O [\*Vflags\*O]
.nL
\*Vfield_list\*O
.nL
\*Lend\*O
.sE
The \*Vflags\*O are optional and are as previously described for the \*Ldefault\*O
header.  If specified, they are used instead of the default value. 
A common mistake is to believe that they act as additions to the \*Ldefault\*O
flags specified in the first part of the file.
.PP
The \*Vfield_list\*O is a set of key-value pairs from the following list:
.VL .5i
.LI "\*Laction \*Vtext\*O"
The text describes the action that should be taken when this error
occurs.  The text appears in the generated documentation.
This field is optional and ignored if the message is undocumented.
.LI "\*Lattributes \*Vtext\*O"
The text describes the attributes for this message.
If this field and the \*Lsub-component\*O field 
described later in this section are both present, then a convenience macro 
will be generated that provides all of the
arguments to the serviceability messaging routine.
This is described in more detail later in this section.
.LI "\*Lcode \*Vname\*O [\*L=\*Vvalue\*O]"
This is the symbolic name of the message.
It is used to create a header file that has \*L#define\*O statements that
map all symbolic message names to their numeric value.
It also appears in the generated documentation.
An optional value may be given when needed to ensure compatibility with
older message versions.
By default, values are assigned by a simple counter in the order in which
messages appear in the file.
.LI "\*Lengineer \*Vtext\*O"
This is used to specify the software engineer responsible for the code
where this message could occur.  This field is optional and is never output.
.LI "\*Lexplanation \*Vtext\*O"
This is a verbose description of the message; it can be blank if the
message is not for an error condition.
It appears in the documentation files and should provide additional information
that can be used for fault isolation.
This field is optional if the message is undocumented.
.LI "\*Lnotes \*Vtext\*O"
Optional notes for translators.
This text, if it exists, appears as comments in the message catalog.
.LI "\*Lsub-component \*Vtable_index\*O"
This field is used in conjunction with the \*Lattributes\*O field.
It specifies which subcomponent the message is assigned to.
The \*Vtable_index\*O must be one of the indices that is specified in the
serviceability table portion of the file.
.LI "\*Ltables (\*Vname\*O ...\*L)"
If a single component is used for several executables, the message table
can get unreasonably large, containing texts that will never be used.
This keyword may be used to specify a space-separated list of tables for
which the message is appropriate; the table to be generated is specified
by the \*L\-t\*O flag.  If this keyword is not used or if the 
\*L\-t\*O flag is not given, then the message will appear in the table.
Otherwise, the message will appear in the table only if the table
specified by the flag is also specified on this line.
.LI "\*Ltext \*Vtext\*O"
The message itself.
It is stored in the in-core message table (unless the \*Lnot intable\*O flag is given)
and in the message catalog.  It is intended to be returned by
\*Ldce_error_inq_text(\|)\*O and related routines 
(see the \*Ldce_msg_intro(3dce)\*O reference page).
Unless the \*Llongtext\*O flag is given, the text must be shorter than the
size of the \*Ldce_error_string_t\*O typedef defined in \*Ldce/dce_error.h\*O.
.LI "\&"
The text field is used as a \*Lprintf\*O-style format string and
is generated in documentation.
To support this dual-use, \*Lsams\*O provides a \*L<a|b>\*O
construct.  When generating message strings to be used in a program,
the \*La\*O text is used; when generating documentation, the \*Lb\*O text
is used.  The following is an example:
.iS
text "Function <%s|func> failed, status=<0x%8.8lx|code>"
.iE
If the text includes a space, you must enclose it in double quotes.  Newlines 
are removed and whitespace is changed to one space.  To write a 
single less-than sign, prefix it with a backslash.
.LE
.PP
Two typical message records might look like the following:
.oS
start
code		dts_s_ok
text		"Successful completion"
notes		"Ok, yes, etc."
explanation	"Operation performed."
action		"None required."
end

.ne 7
start
code		dts_s_bad_timestring
text		"Invalid time string"
explanation	"The given string could not be parsed as a
		valid time specification."
action		"Correct input and try again."
end
.oE
.PP
In addition, the following constructs are accepted, but ignored.
This is for compatibility with other systems that might need such fields.
.iS
administrator response \*Vtext\*L
operator response \*Vtext\*L
programmer response \*Vtext\*L
severity \*Vtext\*L
system response \*Vtext\*L
user response \*Vtext\*L
vendor \*Vname text\*L
.iE
.PP
Many messages can also be assigned to a single subcomponent and used
with a single set of attributes.  This is the 
largest part of the serviceabilty work.
If a message has both the \*Lattributes\*O and \*Lsub-component\*O fields
specified, then a convenience macro will be generated that specifies
the initial parameters to the \*Ldce_svc_printf(\|)\*O call.
.PP
The following is a sample message definition:
.oS
start
code		dts_s_out_of_range
attributes	"svc_c_sev_fatal | svc_c_action_exit_bad"
subcomponent	dts_s_provider
text		"illegal value %ld from %s provider"
explanation	"Received illegal value from local time-provider."
action		"Fix provider and restart server."
end
.oE
.PP
The following is an example of using the definition to generate 
a serviceability message:
.oS
dce_svc_printf(DTS_S_OUT_OF_RANGE_MSG, 123, "Sundial");
.oE
.nL
.SS "Allowing for Growth"
.PP
It is good practice to group related messages together, but you should 
leave space to allow additional messages to be added later.
The \*Lsams\*O utility provides two ways to do this.
.PP
First, the message numbering can be explicitly set by using the following
construct:
.iS
\*Lset value = \*Vnumber\*O
.iE
.PP
Note that the number used in this construct specifies the code field
as in the \*Lvalue\*O header, and not the full message identifier, as can
be assigned by giving a value in the \*Lcode\*O field.
.PP
Second, messages can group into a collection, which is similar to an
XPG4 message catalog set.
To indicate the start of a collection, use the following construct:
.iS
\*Lstart collection \*Vnumber\*O
.iE
.PP
This is equivalent to using the first construct, except that the \*Vnumber\*O
is multiplied by the collection size.
A common practice is to have at least one collection for each serviceability
subcomponent.
.zA "def,13588,R1.2.2,Add Pointer to Problem Determination Guide"
.SH ERRORS
.PP
A representative list of errors that might be returned is not shown
here.  Refer to the \*(Tg for complete descriptions of all error
messages.
.zZ "def,13588,R1.2.2,Add Pointer to Problem Determination Guide"
.SH "RELATED INFORMATION"
.PP
.ad l
Commands:
\*Lgencat(1)\*O.
.PP
Functions:
\*Ldce_error_inq_text(3dce)\*O, 
\*Ldce_svc_printf(3dce)\*O.
.ad b
