...\"
...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
...\" src directory for the full copyright text.
...\"
...\"
...\" HISTORY
...\" $Log: rpccp.8rpc,v $
...\" Revision 1.1.6.13  1995/12/18  17:24:47  rcb
...\" 	PH1.1: final fixes
...\" 	[1995/12/18  13:42:00  rcb]
...\"
...\" Revision 1.1.6.12  1995/10/09  21:57:02  rcb
...\" 	PH1.1: editorial improvement and Prentice-Hall publish formatting
...\" 	[1995/10/09  21:56:57  rcb]
...\" 
...\" Revision 1.1.6.11  1995/09/22  18:39:10  rcb
...\" 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2
...\" 	[1995/09/22  18:29:50  rcb]
...\" 
...\" Revision 1.1.6.10  1994/11/03  23:59:28  neilson
...\" 	Substituted macros for book names in cross refs.
...\" 	[1994/11/03  02:43:52  neilson]
...\" 
...\" Revision 1.1.6.9  1994/10/04  15:14:14  steto
...\" 	{def, CR10401, R1.1, Fixed xrefs to App.  Dev. and Admin. guides.}
...\" 	[1994/10/04  15:13:54  steto]
...\" 
...\" Revision 1.1.6.8  1994/09/08  16:37:23  hileman
...\" 	Added caveat and list of subcommands
...\" 	that do not have dcecp equivalents
...\" 	[1994/09/08  16:36:40  hileman]
...\" 
...\" Revision 1.1.6.7  1994/07/13  18:03:11  jshirley
...\" 	{def,10220,R1.1} Remove reference to rpcd and sec_clientd
...\" 	[1994/07/13  18:02:34  jshirley]
...\" 
...\" Revision 1.1.6.6  1993/08/17  14:53:52  buckler
...\" 	{defect, 8217, R1.0.3}
...\" 	Changed "cell_profile" to "cell-profile".
...\" 	[1993/08/12  21:19:51  buckler]
...\" 
...\" Revision 1.1.6.5  1993/07/16  20:12:55  tmw
...\" 	Added index entries for second version of master index.
...\" 	[1993/07/16  17:57:31  tmw]
...\" 
...\" Revision 1.1.6.4  1993/06/25  20:10:50  lmk
...\" 	{defect,7587,R1.0.2a}
...\" 	Added information about the add mapping command
...\" 	[1993/06/25  20:10:09  lmk]
...\" 
...\" Revision 1.1.6.3  1993/06/17  18:50:16  buckler
...\" 	{defect, 7519, R1.0.3}
...\" 	Changed examples from csh to sh/ksh.
...\" 	[1993/06/03  17:26:43  buckler]
...\" 
...\" 	{defect, 7517, R1.0.3}
...\" 	Changed example from add entry to add element, to properly
...\" 	demonstrate the use of options and arguments in the free ordering
...\" 	of a command line.
...\" 	[1993/06/03  16:28:05  buckler]
...\" 
...\" Revision 1.1.6.2  1993/06/01  18:18:09  buckler
...\" 	{defect, 7518, R1.0.3}
...\" 	Changed a footnote within a table to a Note: after the table.
...\" 	[1993/05/28  14:19:19  buckler]
...\" 
...\" Revision 1.1.4.7  1993/01/28  02:37:02  dbelch
...\" 	Embedding copyright notice
...\" 	[1993/01/28  00:55:34  dbelch]
...\" 
...\" Revision 1.1.4.6  1993/01/07  21:54:10  buckler
...\" 	Bug 6742: Made UUIDs lowercase
...\" 	[1993/01/07  21:49:17  buckler]
...\" 
...\" Revision 1.1.4.5  1992/12/02  19:07:41  h_hoff
...\" 	defect,5240,R1.0.2, The add_entry routine does not support the -i option
...\" 	[1992/12/02  19:05:17  h_hoff]
...\" 
...\" Revision 1.1.4.4  1992/11/27  17:27:25  h_hoff
...\" 	Corrected entry name syntax and wrongly formatted change notices as follows:
...\" 	"defect,5989,R1.0.2, Correct entry name syntax"
...\" 	[1992/11/27  17:25:33  h_hoff]
...\" 
...\" Revision 1.1.4.2  1992/09/10  16:42:33  weir
...\" 	Removed change bar macros; moved into 1.0.2doc tree
...\" 	[1992/09/10  16:28:14  weir]
...\" 
...\" Revision 1.1.2.2  1992/09/08  21:46:37  casey
...\" 	Prentice Hall production - index corrections
...\" 	[1992/09/08  17:20:55  casey]
...\" 
...\" 	Prentice Hall production
...\" 	[1992/08/14  19:24:38  casey]
...\" 
...\" Revision 1.1  1992/01/29  15:58:17  damon
...\" 	Initial revision
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\" (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED
...\"   HISTORY COMMENTS:
...\"
...\"   DATE:                            COMMENT:
...\"
...\"	Fri Nov 8, 1991                 Initial file submission to HP
...\"                                   for final integration at IBM.
...\"                                   
...\"
...\"
...\" "~/rpc/RPCCP/rpccp_8rpc.rsml"
...\" HP/DIGITAL -- DCE RPC Version 1.0 , final draft
...\" ********************************************************************
...\"                                                                    *
...\" Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp.
...\" All rights reserved.
...\"                                                                    *
...\" ********************************************************************
.TH "rpccp"8rpc
.iX "-[" "RPC control program" "initializing"
.SH "NAME"
.PP
\*Lrpccp\*O - Starts the DCE remote procedure call (RPC) control program
.SH "SYNOPSIS"
.sS
\*Lrpccp\*O [\*Vrpccp-command\*O]
.sE
.SH "ARGUMENTS"
.iX "-[" "\*Lrpccp\*O commands" "summary"
.VL 
.LI "\*Vrpccp-command\*O"
Specifies one of the following control program commands:
.VL 1.5
.LI "\*Ladd element\*O"
Adds an element to a profile in a name service entry; if
the specified entry does not exist, creates the entry.
.LI "\*Ladd entry\*O"
Adds an entry to the name service database.
.LI "\*Ladd mapping\*O"
Adds or replaces server address information in the local endpoint map.
.LI "\*Ladd member\*O"
Adds a member to a group in a name service entry; if
the specified entry does not exist, creates the entry.
.LI "\*Lexit\*O"
Leaves the RPC control program.
.LI "\*Lexport\*O"
Exports binding information for an interface identifier, object Universal
Unique Identifiers (UUIDs), or both
to a server entry; if the specified entry does not exist, creates the
entry.
.LI "\*Lhelp  \*O"
Displays a list of commands or the possible options of a specified command.
.LI "\*Limport\*O"
Imports binding information and an object UUID from a server entry.
.LI "\*Lquit\*O"
Leaves the RPC control program.
.LI "\*Lremove element\*O"
Removes selected elements from a profile.
.LI "\*Lremove entry\*O"
Removes an entry from the name service database.
.LI "\*Lremove group\*O"
Removes all group members and the group from the specified entry.
.LI "\*Lremove mapping\*O"
Removes specified elements from the local endpoint map
or from the endpoint map of a specified remote host.
.LI "\*Lremove member\*O"
Removes a selected member from a group.
.LI "\*Lremove profile\*O"
Removes all profile elements and the profile from the specified entry.
.LI "\*Lshow entry\*O"
Shows the Name Service Interface (NSI) attributes of an entry.
.LI "\*Lshow group\*O"
Shows the members of a group.
.LI "\*Lshow mapping\*O"
Shows the elements of the local endpoint map.
.LI "\*Lshow profile\*O"
Shows the elements of a profile.
.LI "\*Lshow server\*O"
Shows the binding information, interface identifier, and object UUIDs in a
server entry.
.LI "\*Lunexport\*O"
Removes binding information, interface identifiers, and object UUIDs from a
server entry.
.iX "-]" "\*Lrpccp\*O commands" "summary"
.LE
.LE
.nL
.ne 10
.SH "DESCRIPTION"
.nS note
With the exception of the \*Lhelp\*O subcommand,
this facility is superceded by the DCE control program (\*Ldcecp\*O) 
in OSF DCE Version 1.1. This command may
be fully replaced by the \*Ldcecp\*O command in a future release of
DCE, and may no longer be supported at that time.
.nE
.PP
.iX "Name Service Interface (NSI)" "managing for RPC applications"
.iX "endpoint maps" "managing"
The RPC control program, \*Lrpccp\*O, provides a set of commands
for managing name service use for RPC applications
and for managing the endpoint map.
.P
You can use control program commands from within the control program or from
the system prompt.  To use the control program commands
from inside the control program,
Start and enter the control program by using the \*Lrpccp\*O command alone,
without any argument.  The control program then displays
the control program prompt, \*Lrpccp>\*O, as follows:
.iS
rpccp\*C
rpccp>
.iE
You can then enter any control program command, as in the following example:
.oS
rpccp> \*Lshow entry /.:/LandS/anthro/pr_server_node3
.oE
Leave the control program and return to the system prompt by using the
\*Lexit\*O or \*Lquit\*O command.
If you enter invalid input, the control program displays
the valid commands.
.P
To use the control program commands from the system prompt,
enter the \*Lrpccp\*O command
with an internal command of the control program as the first argument.
You can do this either interactively or in a command procedure.
For example, you can enter the \*Lshow entry\*O
command as follows:
.iS
rpccp show entry /.:/LandS/anthro/pr_server_node3\*O
.iE
.SS "Arguments and Options"
Except for the \*Lexit\*O and \*Lquit\*O commands, \*Lrpccp\*O commands
have one or more options.  Each option is identified by a \*L-\*O (dash)
followed by a letter; for example, \%\*L-s\*O.  Some options require
arguments.
.P
.ne 10
Commands that access NSI operations also require the
name of a name service entry as an argument.
The order of arguments and the entry-name option is arbitrary; for example,
the following placements of arguments and options are equivalent:
.oS
.ne 6
rpccp> \*Ladd element  /.:/LandS/anthro/mis_node_2  \\
       -i ec1eeb60-5943-11c9-a309-08002b102989,1.0\*C

rpccp> \*Ladd element -i ec1eeb60-5943-11c9-a309-08002b102989,1.0 \\
       /.:/LandS/anthro/mis_node_2\*O
.oE
...\" When an option without an argument precedes another option, separate
...\" them with a dash (-).
.SS "Environmental Influences on Command Syntax"
There are variations in the action of the control program, depending on whether
commands are entered from the system prompt or from within the control program.
For example, entering the annotation field of profile elements from the 
system prompt allows you to include internal spaces in an annotation. 
.sp
.TS
center, box, tab(%);
lb |lb |lb
l |l |l.
Function%At System Prompt%Inside rpccp
=
Strings within quotation marks%Supported%Not required
_
Wildcard substitution%Supported%Unsupported
.TE
.sp
.nS note
Some UNIX systems require that 
you place a \*L\e\*O (backslash) before string binding delimiters such as 
\*L[\ ]\*O (brackets) or that you place the delimiters within \*L'\ '\*O 
or \*L"\ "\*O (single or double quotation marks) at the system prompt.
.nE
.PP
The following table describes the scope of the RPC control program commands.
.iX "-["  "\*Lrpccp\*O commands" "scope"
.sp
.TS
box, center, tab(%);
lB |lB
l |lB.
Scope%Command
=
All entries%add entry
%remove entry
%show entry
_
Server entry%export
%import
%show server
%unexport
_
Group%add member
%remove group
%remove member
%show group
_
Profile%add element
%remove element
%remove profile
%show profile
_
Endpoint map%add mapping
%remove mapping
%show mapping
.TE
.sp
.iX "-]" "\*Lrpccp\*O commands" "scope"
...\"  the ~/rpc/concepts/*.gpsml header files are shared with the
...\"   NSI usage chapter of RPC Part A of the Appl.  Devel.  Gde.
.SS "Environment Variables"
.iX "-[" "RPC control program" "enviornment variables"
.iX "-[" "variables" "in \*Lrpccp\*O"
The control program supports environment variables.
Using environment variables facilitates interactive use of the control program.
.P
To distinguish environment variables, \*Lrpccp*(8rpc)\*O
reference pages follow the convention of using all uppercase letters for
examples of environment variables.
Note that UNIX environment variables are case sensitive.
.VL .5i
.LI "\*LUser-defined environment variables\*O"
You can set an environment variable to represent values to \*Lrpccp\*O.
Using an environment variable is helpful for specifying a long
string such as the following:
.ad l
.ML
.LI
A string representation of binding information (\*Vbinding string\*O)
.LI
A string representation of an object or interface UUID (\*Estring UUID\*O)
.LI
An \*Vinterface identifier\*O (the interface UUID and version numbers)
.LI
The name of a name service entry
.LE
.ad b
.nL
.ne 8
In the following example, the environment
variable \*LJANE_CAL\*O represents an object UUID, while 
\*L/.:/LandS/anthro/Cal_host_2\*O, the target name service entry, 
is in the local cell:
.iS
JANE_CAL=47f40d10-e2e0-11c9-bb29-08002b0f4528
export JANE_CAL
rpccp\*C
rpccp> \*Lexport -o JANE_CAL /.:/LandS/anthro/Cal_host_2
.iE
.LI "\*LDCE RPC environment variables\*O"
.VL 
.LI "\*LNLSPATH\*O"
The environment variable \*LNLSPATH\*O must point to the location of
\*Ldcerpc.cat\*O and \*Ldcedcs.cat\*O.  Otherwise, any run-time status codes
returned by the control program will be hexadecimal, rather than 
textual.
form.  The value of this variable must include both the pathname of the
directory where the \*L.cat\*O files reside and the string \*L%N\*O.
.LI \*LRPC_DEFAULT_ENTRY_SYNTAX\*O
.iX "local names" "overriding CDS syntax"
.iX "Name Service Interface (NSI)"
The \*Ldce\*O name syntax is the only syntax currently supported by the DCE
Cell Directory Service (CDS).  However, NSI is independent of any specific
name service and, in the future, may support name services that use other
name syntaxes.  When alternative
name syntaxes are supported, you can override the standard default with a
process-specific default by setting the \*LRPC_DEFAULT_ENTRY_SYNTAX\*O
environment variable.  When this variable is set for a process, the control
program uses it to find out the default syntax for the process.  You can
override this default in any NSI command of the control program by
using the \%\*L-s\*O option to specify an alternative entry syntax.
.p
Setting \*LRPC_DEFAULT_ENTRY_SYNTAX\*O requires
specifying the integer 3 to indicate the \*Ldce\*O syntax. 
To set \*LRPC_DEFAULT_ENTRY_SYNTAX\*O, 
use the \*Vname\*L=\*Vvalue\*O command to define an environment
variable.  The following command specifies 
\*Ldce\*O as the default name syntax in a login command file:
.iS
# .login command file
# setting dce as default name syntax,
RPC_DEFAULT_ENTRY_SYNTAX=3
.iE
.nL
.ne 4
.LI "\*LRPC_DEFAULT_ENTRY\*O"
For the \*Limport\*O command, you can use this environment variable to
indicate the entry where the search operation starts.
Usually, the starting entry is a profile.
.iX "-]" "RPC control program" "enviornment variables"
.iX "-]" "variables" "in \*Lrpccp\*O"
.LE
.LE
.SS "The Name Service Interface"
.PP
.iX "-[" "Name Service Interface (NSI)" "command syntax"
The remainder of this
description contains information to help you use commands
that call NSI to access name service entries.
.P
DCE NSI is independent of any particular name
service.  CDS, however, is the only name service available for 
DCE Version 1.0 RPC
applications.  For more details on NSI, see the \*(Dk.  For a description
of CDS, see the \*(Ac. 
.SS "Name Service Entries"
...\" "Name Service Entries Defined by the RPC Name Service Interface"
...\ ~/rpc/concepts/ns-entries-of-NSI.gpsml
To store information about RPC servers, interfaces, and objects, NSI
defines the following name service entries:
.VL
...\" .gL "server entry"
.LI "\*Lserver entry\*O "
Stores binding information, interface identifiers, and
object UUIDs for an RPC server 
...\" .LI "o"
...\" .gL "group"
.LI "\*Lgroup\*O "
Corresponds to one or more RPC servers
that offer a common RPC interface, type of RPC object, or both
...\" .LI "o"
...\" .gL "profile"
.LI "\*Lprofile\*O "
Defines search paths for looking in a name service database for a
server that offers a particular RPC interface and object
.LE
.P
Note that when NSI is used with CDS, the name service
entries are CDS object entries
.SS "Structure of Entry Names"
Each entry in a name service database is identified by a unique
\*Eglobal name\*O made up of a cell name and a cell-relative name.
.P
A  \*Ecell\*O is a group of users, systems, and resources that share common DCE
services.  A cell configuration includes at least one cell directory server, one
security server, and one time server.  A cell's size can range from one
system to thousands of systems.  For information on cells, see the CDS portion
of this book. 
.P
The following is an example of a global name:
.iX "-[" "global names" "conventions"
.iS
/.../C=US/O=uw/OU=MadCity/LandS/anthro/Stats_host_2\*O
.iE
.nL
.ne 8
The parts of a global name are as follows:
.ML
.iX "cell names" "conventions"
.iX "local names" "conventions"
.LI
cell name
.PP
The cell name must use X.500 name syntax.  
The symbol \*L/...\*O begins a cell name.
The letters before each \*L=\*O (equal sign) are abbreviations for 
country (\*LC\*O), organization (\*LO\*O), and organization unit (\*LOU\*O).
For example:
.iS
/.../C=US/O=uw/OU=MadCity\*O
.iE
.P
For entries in the local cell, the cell name can be represented by a \*L/.:\*O
prefix, in place of the actual cell name, as in the following example:
.iS
/.:/LandS/anthro/Stats_host_2
.iE
For NSI operations on entries in the local cell you can omit the cell name.
.LI
cell-relative name
.PP
...\" .gL "cell-relative name"
.iX "directory pathnames" "conventions"
Each name service entry requires a
cell-relative name, which contains a directory pathname and a leaf name.
.ML
.LI
directory pathname
.PP
Follows the cell name and
...\" .gL "directory pathname"
indicates the hierarchical relationship of the entry to the cell root.
.P
The directory pathname is the middle portion of the global name.
The cell name precedes the directory pathname,
and the leaf name follows it, as follows:
.iS
\*Vcell-name\*O \*L+\*O \*Vdirectory-pathname\*O \*L+\*O \*Vleaf-name\*O
.iE
The directory pathname contains the names of any
subdirectories in the path; each subdirectory name begins with a \*L/\*O
(slash), as follows:
.iS
/\*Vsub-dir-a-name\*L/\*Vsub-dir-b-name\*L/\*Vsub-dir-c-name\*O
.iE
Directory paths are created by name service administrators.  If an appropriate
directory path does not exist, ask your name service administrator to extend an
existing path or create a new path.  In a directory path, the name of a
subdirectory should reflect its relationship to its
\*Eparent directory\*O (the directory that contains the subdirectory).
...\" .gL "leaf name"
.iX "-[" "leaf names" "conventions"
.LI
leaf name
.PP
Identifies the specific entry.
The leaf name is the right-hand part of global name
beginning with the rightmost slash.
.LE
.P
.ne 5
In the following example, \*L/.../C=US/O=uw/OU=MadCity\*O is
the cell name, \*L/LandS/anthro\*O is the directory pathname,
and \*L/Cal_host_4\*O is the leaf name:
.iS
/.../C=US/O=uw/OU=MadCity/LandS/anthro/Cal_host_4
.iE
.P
If a name service entry is located at the cell root,
the leaf name directly follows the cell name;
for example, \*L/.:/cell-profile\*O.
.LE
.P
Note that
when NSI is used with CDS, the cell-relative name is a CDS name.
.iX "-]" "leaf names" "conventions"
.iX "-]" "global names" "conventions"
.LE
.SS "Guidelines for Constructing Names of Name Service Entries"
.P
.iX "-[" "Name Service Interface (NSI)" "naming guidelines"
A global name includes both a cell name and a cell-relative name composed of a
directory pathname and a leaf name.  The cell name is assigned to a cell root at
its creation.  When you specify only a cell-relative name to an NSI command, the
NSI automatically expands the name into a global name by inserting the local
cell name.  When returning the name of a name service entry, a group member, or
member in a profile element, NSI operations return global names.
.PP
The directory pathname and leaf name uniquely identify a name service
entry.  The leaf name should somehow describe the entry\(emby identifying its
owner or its contents, for example.  The remainder of this section contains 
guidelines for choosing leaf names.  Note that directory pathnames and 
leaf names are case sensitive.  
.PP
\*LNaming a Server Entry\*O
.PP
.iX "servers" "naming"
For a server entry that advertises an RPC interface or service offered by a
server, the leaf name must distinguish the entry from the equivalent entries of
other servers.  When a single server instance runs on a host, you can ensure a
unique name by combining the name of the service, interface (from the interface
definition), or the system name for the server's host system.
.P
For example,
consider two servers, one offering a calendar service on host JULES and one
on host VERNE.
.P
The server on JULES uses the following leaf name:
.iS
calendar_JULES
.iE
The server on VERNE uses the following leaf name:
.iS
calendar_VERNE
.iE
For servers that perform tasks on or for a specific system,
an alternative approach is to create server entries in a system-specific host
directory within the name service database.  Each host directory
takes the name of the host to which it corresponds.
.P
.ne 4
Because the directory name identifies the system, the leaf name of the server
entry name need not include the host name, as in the following example:
.iS
/.:/LandS/host_1/Process_control\*O
.iE
.P
To construct names for the server entries used by distinctive server instances
on a single host, you can construct unique server entry names by combining the
following information: the name of the server's service, interface, or object;
the system name of the server's host system, and a reusable instance
identifier, such as an integer.
.P
For example, the following leaf names
distinguish two instances of a calendar service on the JULES system:
.iS
calendar_JULES_01

calendar_JULES_02 \*O
.iE
.P
Avoid automatically generating entry names for the server
entries of server instances\(emfor example, by using unique data 
such as a time stamp (\*Lcalendar_verne_15OCT91_21:25:32\*O) 
or process identifier
(\*Lcalendar_\%jules_\%208004D6\*O).
When a server incorporates such unique data into its
server entry names, each server instance creates a separate server entry,
causing many server entries.
When a server instance stops running, it leaves an obsolete server
entry that is not reused.  The creation of a new entry whenever
a server instance starts may impair performance.
.PP
A server can use multiple server entries to advertise different combinations of
interfaces and objects.  For example, a server can create a separate server
entry for a specific object (and the associated interfaces).  The name of
such a server entry should correspond to a well-known name for
the object.  For example, consider a server that offers a horticulture bulletin
board known to users as \*Lhorticulture_bb\*O.  The server exports the
\*Lhorticulture_bb\*O object, binding information, and  
the associated bulletin-board
interface to a server entry whose leaf name identifies the object, as
follows:
.iS
horticulture_bb
.iE
Note that an RPC server that uses RPC 
authentication can choose identical names for its
principal name and its server entry.  Use of identical names permits a client
that calls the \*Lrpc_binding_set_auth_info\*O routine to automatically
determine a server's principal name (the client will assume the principal name
to be the same as the server's entry name).  If a server uses different
principal and server entry names, users must explicitly supply the principal
name.  For an explanation of principal names, see the \*(Dg.
.PP
.ne 8
\*LNaming a Group\*O
.PP
.iX "groups" "naming"
The leaf name of
a group should indicate the interface,
service, or object that determines membership in the group.  For example, for
a group whose members are selected because they advertise
an interface named \*LStatistics\*O, the following is an 
effective leaf name:
.iS
Statistics
.iE
For a group whose members advertise laser-printer print queues as objects, 
the following is an effective leaf name:
.iS
laser-printer
.iE
.PP
\*LNaming a Profile\*O
.PP
.iX "profiles" "naming"
The leaf name of a profile should indicate the profile users; for example, for
a profile that serves the members of an accounting department,
the following is an effective leaf name:
.iS
accounting_profile
.iX "-]" "Name Service Interface (NSI)" "naming guidelines"
.iE
.LE
.SS "Privileges Required"
To use NSI commands to access entries in a CDS database, you need
access control list (ACL) permissions.
Depending on NSI operation, you need ACL permissions to the parent
directory or the CDS object entry (the name service entry) or both.
The ACL permissions are as follows:
.ad l
.ML
.LI
To create an entry, you need \*Li\*O (\*Linsert\*O) 
permission to the parent directory.
.LI
To read an entry, you need \*Lr\*O (\*Lread\*O) permission to 
the CDS object entry.
.LI
To write to an entry, you need \*Lw\*O (\*Lwrite\*O)
permission to the CDS object entry.
.LI
To delete an entry, you need \*Ld\*O (\*Ldelete\*O) 
permission either to the CDS object entry or to the parent directory.
.LE
.ad b
.PP
Note that \*Lwrite\*O permission does not imply \*Lread\*O permission.
.PP
ACL permissions for NSI commands of the control program
are described in the reference pages.
.nL
.ne 5
.SH "NOTES"
.PP
A \*Lserver entry\*O equates to an NSI binding attribute and, optionally, 
an object attribute; a \*Lgroup\*O equates to an NSI group attribute;
and a \*Lprofile\*O equates to an NSI profile attribute.
Typically, each server's entries, groups, and profiles
reside in distinct name service entries.
.nL
.SH "EXAMPLES"
.PP
.AL
.LI
The following command starts the RPC control program:
.iS
rpccp
.iE
.LI
The following command, entered at the system prompt rather than in
\*Lrpccp\*O, removes the entry \*L/.:/LandS/anthro/Cal_host_2\*O:
.iS
rpccp remove entry \*L/.:/LandS/anthro/Cal_host_2
.iE
.LE
.SH "RELATED INFORMATION"
.PP
.ad l
Commands: 
\*Lrpccp_add_element(8rpc)\*O,
\*Lrpccp_add_entry(8rpc)\*O,
\*Lrpccp_add_mapping(8rpc)\*O,
\*Lrpccp_add_member(8rpc)\*O,
\*Lrpccp_export(8rpc)\*O,
\*Lrpccp_import(8rpc)\*O,
\*Lrpccp_remove_element(8rpc)\*O,
\*Lrpccp_remove_entry(8rpc)\*O,
\*Lrpccp_remove_group(8rpc)\*O,
\*Lrpccp_remove_mapping(8rpc)\*O,
\*Lrpccp_remove_member(8rpc)\*O,
\*Lrpccp_remove_profile(8rpc)\*O,
\*Lrpccp_show_entry(8rpc)\*O,
\*Lrpccp_show_group(8rpc)\*O,
\*Lrpccp_show_mapping(8rpc)\*O,
\*Lrpccp_show_profile(8rpc)\*O,
\*Lrpccp_show_server(8rpc)\*O,
\*Lrpccp_unexport(8rpc)\*O,
\*Ldcecp(8dce)\*O. 
.ad b
.iX "-]" "Name Service Interface (NSI)" "command syntax"
.iX "-]" "RPC control program" "initializing"
