...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: rpcgroup.8dce,v $
...\" Revision 1.1.8.4  1996/10/28  14:56:43  wardr
...\" 	{def,13588,R1.2.2}
...\" 	Add Pointer to Problem Determination Guide
...\" 	[1996/10/28  14:55:05  wardr]
...\"
...\" Revision 1.1.8.3  1996/07/09  20:08:09  millett
...\" 	{def,13527,R1.2.2}
...\" 	argument is list of names
...\" 	[1996/07/09  20:07:31  millett]
...\" 
...\" Revision 1.1.8.2  1996/06/03  20:28:43  millett
...\" 	{def,CR13377,R1.2.2}
...\" 	HP review edits
...\" 	[1996/06/03  20:28:21  millett]
...\" 
...\" Revision 1.1.8.1  1996/05/13  15:48:51  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  15:47:09  wardr]
...\" 
...\" Revision 1.1.5.6  1996/03/27  19:04:02  weir
...\" 	Updated change markers
...\" 	[1996/03/27  19:02:42  weir]
...\" 
...\" Revision 1.1.5.5  1996/03/19  20:57:56  weir
...\" 	Test
...\" 	[1996/03/19  20:57:38  weir]
...\" 
...\" Revision 1.1.5.4  1996/02/02  19:58:32  weir
...\" 	checking in for HP
...\" 	[1996/02/02  19:56:27  weir]
...\" 
...\" Revision 1.1.5.3  1995/12/29  19:39:19  weir
...\" 	Temporarily checked back in for HP
...\" 	[1995/12/29  19:37:46  weir]
...\" 
...\" Revision 1.1.5.2  1995/12/14  17:53:08  weir
...\" 	1.2.1 additions/changes added
...\" 	[1995/12/14  17:51:50  weir]
...\" 
...\" Revision 1.1.5.1  1995/12/14  15:06:47  weir
...\" 	Initial check-in to secure dcecp manpages in 1.2. tree
...\" 	[1995/12/14  15:04:51  weir]
...\" 
...\" Revision 1.1.2.12  1995/12/13  14:39:50  rcb
...\" 	1.1, 1.2 tech changes by weir; editorial backfill by rcb; ready for 1.2 checkout
...\" 	[1995/12/13  14:39:44  rcb]
...\" 
...\" Revision 1.1.2.11  1995/10/09  13:41:41  rcb
...\" 	1.1PH: editorial pass including outstanding 1.1 edits
...\" 	[1995/10/06  20:39:21  rcb]
...\" 
...\" Revision 1.1.2.10  1995/09/22  18:38:44  rcb
...\" 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2
...\" 	[1995/09/22  18:27:55  rcb]
...\" 
...\" Revision 1.1.2.9  1994/10/21  21:44:51  hileman
...\" 	Fixed -noupdate description.
...\" 	[1994/10/21  21:44:34  hileman]
...\" 
...\" Revision 1.1.2.8  1994/10/20  02:43:34  hileman
...\" 	Incorporated review corrections.
...\" 	[1994/10/20  02:43:18  hileman]
...\" 
...\" Revision 1.1.2.7  1994/07/15  20:59:23  wardr
...\" 	{enh, CR10014, R1.1}dcecp changes
...\" 	[1994/07/15  20:56:51  wardr]
...\" 
...\" 	{enh, CR10014, R1.1}dcecp changes
...\" 
...\" Revision 1.1.2.6  1994/06/13  18:40:59  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  18:38:36  devobj]
...\" 
...\" Revision 1.1.2.5  1994/05/06  19:01:10  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	updating reference pages
...\" 	[1994/05/06  18:58:59  wardr]
...\" 
...\" Revision 1.1.2.4  1994/03/15  21:01:21  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	initial DCECP ref page work
...\" 	[1994/03/15  20:59:33  wardr]
...\" 
...\" Revision 1.1.2.3  1994/03/14  20:54:23  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	initial DCECP ref page work
...\" 	[1994/03/14  20:53:28  wardr]
...\" 
...\" Revision 1.1.2.2  1994/03/11  20:34:50  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	initial refpage work
...\" 	[1994/03/11  16:33:31  wardr]
...\" 
...\" Revision 1.1.2.1  1994/03/09  20:01:21  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	Creating new dcecp reference page
...\" 	[1994/03/09  19:49:22  wardr]
...\" 
...\" $EndLog$
.TH rpcgroup 8dce   
.iX "\*Ldcecp\*O commands" "\*Lrpcgroup\*O"  
.iX "rpcgroup" "administering"  
.SH "NAME"  
.PP  
\*Lrpcgroup\*O - A \*Ldcecp\*O object that manages an RPC group entry in CDS 
.zA "def,13377,R1.2.2,literary edit"
.SH "SYNOPSIS"  
.PP  
.sS  
\*Lrpcgroup add \*Vrpcgroup_name_list\*L -member \*Vmember_name_list\*O  
.PP  
\*Lrpcgroup create \*Vrpcgroup_name_list\*O  
.PP  
\*Lrpcgroup delete \*Vrpcgroup_name_list\*O  
.PP  
\*Lrpcgroup help \*O[\*Voperation\*O | \*L-verbose\*O]   
.PP  
.zA  "Def,13377,R1.2.2, clarify syntax"  
\*Lrpcgroup import \*Vrpcgroup_name_list\*O \*L-interface \*Vinterface_id\*O  
.nL  
[\*L-object \*Vobject_uuid\*O]  [\*L-max \*Vinteger\*O] [\*L-noupdate\*O]  
.zZ  "Def,13377,R1.2.2, clarify syntax"  
.PP  
.zA  "Def,13377,R1.2.2, clarify syntax"  
\*Lrpcgroup list \*Vrpcgroup_name_list\*O [\*L-member \*Vmember_name_list\*O]   
.nL  
[\*L-noupdate\*O]  
.zZ  "Def,13377,R1.2.2, clarify syntax"  
.PP  
\*Lrpcgroup operations\*O  
.PP  
\*Lrpcgroup remove \*Vrpcgroup_name_list\*L -member \*Vmember_name_list\*O  
.sE  
.SH "ARGUMENTS"  
.VL  
.LI "\*Voperation\*O"  
The name of the \*Lrpcgroup\*O operation for which to display 
help information.  
.LI "\*Vrpcgroup_name_list\*O"  
Specifies a list of one or more names of the RPC groups to be operated  
on.  
.LE  
.SH "DESCRIPTION"  
.PP 
.zA "def,13527,R1.2.2,argument is list of names" 
The \*Lrpcgroup\*O object represents a remote procedure call  
(RPC) group entry in the Cell Directory Service (CDS).    
Each RPC group is named in the DCE namespace;  
therefore, each operation takes as an argument a list of names of    
group entries to manipulate.    
An RPC group is a container that contains only the names of RPC  
server entries or the names of other RPC groups; it contains no other data.
.zZ "def,13527,R1.2.2,argument is list of names"
.SH "DATA STRUCTURES"  
.VL  
.LI "\*Vinterface_id\*O"  
The interface identifier of an RPC interface.  The interface identifier  
takes the following form:  
.iS  
\*Vinterface-uuid\*O\*L,\*O\*Vmajor-version\*O\*L.\*O\*Vminor-version\*O  
.iE  
The version numbers are optional. If you omit a version number,  
the default is \*L0\*O.  
The UUID is a hexadecimal string and the version numbers are decimal strings.    
For example:  
.iS  
\&-interface ec1eeb60-5943-11c9-a309-08002b102989,3.11  
.iE  
Leading zeros in version numbers are ignored.  
.PP  
Alternatively, you can use \*Ldcecp\*O string syntax.  For example:  
.iS  
\&-interface {458ffcbe-98c1-11cd-bd93-0000c08adf56 1.0}  
.iE  
.LI "\*Vobject_uuid\*O"  
The UUID of an object.  The UUID is a hexadecimal string,  
for example:  
.iS  
\&-object 3c6b8f60-5945-11c9-a236-08002b102989  
.iE  
.PP  
Alternatively, you can use \*Ldcecp\*O string syntax.  For example:  
.iS  
\&-object {3c6b8f60-5945-11c9-a236-08002b102989}  
.iE  
.LE  
.SH "ERRORS"
.PP
A representative list of errors that might be returned is not shown
here.  Refer to the \*(Tg for complete descriptions of all error
messages.
.SH "OPERATIONS"  
.SS "rpcgroup add"  
.PP  
Adds a member to the specified group entry in CDS.  
The syntax is as follows:  
.sS  
\*Lrpcgroup add \*Vrpcgroup_name_list\*L -member \*Vmember_name_list\*O  
.sE  
.PP  
\*LOptions\*O  
.PP  
.VL  
.LI "\*L-member \*Vmember_name_list\*O"  
This required option declares the name of a member to be added to the  
specified group entry.  The \*Vmember_name_list\*O argument is a list  
of names of one or more members to be added to all of the specified  
groups.  (The names need not exist when they are added.)  All members  
are added to all groups.  
.LE  
.PP  
The \*Ladd\*O operation adds a member to the specified group  
entry in CDS.  The required \*Vrpcgroup_name_list\*O   
argument is a list of one or more full CDS  
names of the groups to which you want to add members.  This operation  
returns an empty string on success.  If \*Vmember_name_list\*O   
contains the names of duplicate or existing members, the   
duplicates are ignored and no errors are generated.  
.PP  
\*LPrivileges Required\*O  
.PP  
You need \*Li\*O (\*Linsert\*O) permission to the parent directory.   
You also need both \*Lr\*O (\*Lread\*O) permission and \*Lw\*O   
(\*Lwrite\*O) permission   
to the CDS object entry (the target group entry).  
.PP  
\*LExamples\*O  
.PP  
The following command adds the member  
\*L/.:/LandS/anthro/Cal_host_3\*O to the group  
\*L/.:/LandS/anthro/Calendar_group\*O:  
.oS  
dcecp> \*Lrpcgroup add /.:/LandS/anthro/Calendar_group\*O \\  
\*C> \*L-member /.:/LandS/anthro/Cal_host_3\*C
dcecp>    
.oE  
.SS "rpcgroup create"  
.PP  
Creates an empty RPC group entry in CDS.   
The syntax is as follows:  
.sS  
\*Lrpcgroup create \*Vrpcgroup_name_list\*O  
.sE  
.PP  
The \*Lcreate\*O operation creates a new (empty) RPC group  
entry in CDS.  Since an empty group is the same  
as an empty RPC entry or RPC profile, calling \*Lrpcgroup create\*O is  
the same as calling \*Lrpcentry create\*O or \*Lrpcprofile create\*O.  
The \*Vrpcgroup_name_list\*O  
argument is a list of names of RPC groups to be created.  The operation  
returns an empty string on success.  If the RPC group already exists, an error  
is returned.  
.PP  
\*LPrivileges Required\*O  
.PP  
You need \*Li\*O (\*Linsert\*O) permission to the  
parent directory.  
.PP  
\*LExamples\*O  
.PP  
The following command creates a new group called  
\*L/.:/LandS/anthro/Calendar_group\*O:  
.oS  
dcecp> \*Lrpcgroup create /.:/LandS/anthro/Calendar_group\*C
dcecp>   
.oE  
.SS "rpcgroup delete"  
.PP  
Removes the specified group from CDS.  The  
syntax is as follows:  
.sS  
\*Lrpcgroup delete \*Vrpcgroup_name_list\*O  
.sE  
.PP  
The \*Ldelete\*O operation removes the specified group entry  
from CDS.  The \*Vrpcgroup_name_list\*O argument is a list of names of  
RPC group entries to be deleted.  This operation  
returns an empty string on success.  
If the RPC group entry does not exist, an error is generated.  
.PP  
\*LPrivileges Required\*O  
.PP  
You need \*Lw\*O (\*Lwrite\*O) permission to the CDS object entry  
(the target group entry).  
.PP  
\*LExamples\*O  
.PP  
The following command removes the group  
\*L/.:/LandS/anthro/Calendar_group\*O from CDS.  
.oS  
dcecp> \*Lrpcgroup delete /.:/LandS/anthro/Calendar_group\*C
dcecp>  
.oE  
.SS "rpcgroup help"  
.PP  
Returns help information about the \*Lrpcgroup\*O object and its operations.  
The syntax is as follows:  
.sS  
\*Lrpcgroup help \*O[\*Voperation\*O | \*L-verbose\*O]   
.sE  
\*LOptions\*O  
.PP  
.VL  
.LI "\*L-verbose\*O"  
Displays information about the \*Lrpcgroup\*O object.  
.LE  
.PP  
Used without an argument or option, the  
\*Lrpcgroup help\*O command returns brief information about each  
\*Lrpcgroup\*O operation.   
The optional \*Voperation\*O argument is the name of an operation  
about which you want  
detailed information.    
Alternatively, you can use the \%\*L-verbose\*O option for more detailed  
information about the \*Lrpcgroup\*O object itself.  
.PP  
\*LPrivileges Required\*O  
.PP  
No special privileges are needed to use the \*Lrpcgroup help\*O  
command.  
.PP  
\*LExamples\*O  
.oS  
dcecp> \*Lrpcgroup help\*C  
add                 Adds members to a list of RPC groups.  
create              Creates a list of empty RPC groups.  
delete              Deletes a list of RPC groups.  
import              Returns the bindings from a list of RPC groups.  
list                Returns the members of a list of RPC groups.  
remove              Removes members from a list of RPC groups.  
help                Prints a summary of command-line options.  
operations          Returns a list of the valid operations for this command.
dcecp>   
.oE  
.SS "rpcgroup import"  
.PP  
Returns a string binding from the specified RPC group.    
The syntax is as follows:  
.sS  
\*Lrpcgroup import \*Vrpcgroup_name_list\*O \*L-interface \*Vinterface_id\*O   
.nL  
[\*L-object \*Vobject_uuid\*O]  [\*L-max \*Vinteger\*O] [\*L-noupdate\*O]  
.sE  
.PP  
\*LOptions\*O  
.PP  
.VL  
.LI "\*L-interface \*Vinterface_id\*O"  
Declares the interface identifier of one RPC interface.  
.PP  
See \*LDATA STRUCTURES\*O for the format of the interface identifier.  
...\" .LI "\*L-version \*Vversions\*O"  
...\" Specifies interface version numbers to be returned with an \*Lrpcentry  
...\" import\*O operation.  Specify versions by using one of the following values  
...\" for the \%\*L-version\*O option:   
...\" \*Lall\*O,   
...\" \*Lexact\*O,   
...\" \*Lcompatible\*O,   
...\" \*Lmajor_only\*O,   
...\" and   
...\" \*Lupto\*O.  
...\" .PP  
...\" See \*LDATA STRUCTURES\*O for the exact behavior of the version values.  
.LI "\*L-object \*Vobject_uuid\*O"  
Declares the UUID of one object.  The UUID is a hexadecimal  
string.    
.PP  
See \*LDATA STRUCTURES\*O for the format of the object UUID.  
.LI "\*L-max \*Vinteger\*O"  
Specifies the maximum number of string bindings to return.  A value  
greater than one returns a list containing up to the number of  
bindings specified by the value.   
.LI "\*L-noupdate\*O"  
Normally, name service data is cached locally on each machine in a  
cell.  If a name service inquiry can be satisfied by data in the local  
CDS cache, this cached data is returned.  However, locally cached  
copies of name service data might not include a recent CDS update.   
If the \%\*L-noupdate\*O option is not specified, \*Ldcecp\*O  
goes to one or more CDS servers to retrieve the required data, updating the  
local CDS cache.  Use the \%\*L-noupdate\*O   
option to avoid taking the time to update the  
local cache when you have reason to believe that the local cache is  
up to date.  
.LE  
.PP  
The \*Limport\*O operation   
returns a string binding from the specified RPC group.  The   
\*Vrpcgroup_name_list\*O argument is a  
list of names of RPC groups to import from.  The operation uses   
the \%\*L-interface\*O and \%\*L-object\*O   
options to specify matching bindings.  
The operation also accepts the \%\*L-max\*O  
option to specify a number of string bindings to return.    
The order of bindings returned is arbitrary.  
.PP   
\*LPrivileges Required\*O  
.PP  
You need \*Lr\*O (\*Lread\*O) permission to the specified CDS object entry  
(the starting name service entry)  
and to any CDS object entry in the resulting search path.  
.PP  
\*LExamples\*O  
.PP  
The following command imports a binding:  
.oS  
\*Cdcecp> \*Lrpcgroup import /.:/ortho_group \\  
\*C> \*L-interface {ec1eeb60-5943-11c9-a309-08002b102989 1.1} \\  
\*C> \*L-object 30dbeea0-fb6c-11c9-8eea-08002b0f4528\*C 
{ncadg_ip_udp 15.22.48.25}
{ncacn_ip_tcp 15.22.48.25} 
dcecp> 
.oE  
.SS "rpcgroup list"  
.PP  
Returns a list of the names of all members of the specified group.  
The syntax is as follows:  
.sS  
.zA  "Def,13377,R1.2.2, clarify syntax"  
\*Lrpcgroup list \*Vrpcgroup_name_list \*O[\*L-member \*Vmember_name_list\*O]  
.nL  
[\*L-noupdate\*O]  
.zZ  "Def,13377,R1.2.2, clarify syntax"  
.sE  
.PP  
\*LOptions\*O  
.PP  
.VL  
.LI "\*L-member \*Vmember_name_list\*O"  
Specifies a list of names of one or more  
members to be returned from all groups named in the  
\*Vrpcgroup_name_list\*O argument.  Use this option to check for  
specific member names.  The \*Vmember_name_list\*O argument  
specifies a list of names of RPC entries, RPC groups, or  
RPC profiles; they are only references stored in the RPC group and  
do not have to exist outside of the group.  All members  
specified are listed from all RPC groups specified in the argument.
.LI "\*L-noupdate\*O"  
Use \*L-noupdate\*O to avoid taking the time to   
update the local cache.    
.PP  
See \*Lrpcgroup import\*O for more information.     
.LE  
.PP  
The \*Llist\*O operation returns a list of the names of all  
members of the specified group.  The names returned are fully  
qualified and are returned in an arbitrary order.  The   
\*Vrpcgroup_name_list\*O argument  
is a list of names of RPC groups whose members' names are to be  
returned.    
.PP   
\*LPrivileges Required\*O  
.PP  
You need \*Lr\*O (\*Lread\*O) permission to the CDS object entry  
(the target group entry).  
.PP  
\*LExamples\*O  
.PP  
The following example lists all the members of the group  
\*L/.:/subsys/applications/infobases\*O, in the order in which they were  
added to the group:  
.oS  
dcecp> \*Lrpcgroup list /.:/subsys/applications/infobases\*C  
/.../my_cell.goodcompany.com/subsys/applications/video_server  
/.../my_cell.goodcompany.com/subsys/applications/bbs_server  
/.../my_cell.goodcompany.com/subsys/applications/audio_server1  
/.../my_cell.goodcompany.com/subsys/applications/audio_server2  
/.../my_cell.goodcompany.com/subsys/applications/clipart_server  
/.../my_cell.goodcompany.com/subsys/applications/photo_server1  
/.../my_cell.goodcompany.com/subsys/applications/photo_server2 
dcecp>  
.oE  
.PP  
The following example uses the \%\*L-member\*O option to list a specific  
member of the group \*L/.:/subsys/applications/infobases\*O:  
.oS  
dcecp> \*Lrpcgroup list /.:/subsys/applications/infobases \\\*C  
> \*L-member /.:/subsys/applications/bbs_server\*C  
/.../my_cell.goodcompany.com/subsys/applications/bbs_server 
dcecp>   
.oE  
.SS "rpcgroup operations"  
.PP  
Returns a list of the operations supported by the   
\*Lrpcgroup\*O   
object.  
The syntax is as follows:  
.sS  
\*Lrpcgroup operations\*O  
.sE  
.PP  
The list of available operations is in alphabetical order    
except for \*Lhelp\*O and \*Loperations\*O, which are listed last.  
.PP   
\*LPrivileges Required\*O  
.PP  
No special privileges are needed to use the   
\*Lrpcgroup   
operations\*O  
command.  
.PP  
\*LExamples\*O  
.PP  
.oS  
dcecp> \*Lrpcgroup operations\*C  
add create delete import list remove help operations 
dcecp>  
.oE  
.SS "rpcgroup remove"  
.PP  
Removes one or more members from the specified group.    
The syntax is as follows:  
.sS  
\*Lrpcgroup remove \*Vrpcgroup_name_list\*L -member \*Vmember_name_list\*O  
.sE  
.PP  
\*LOptions\*O  
.PP  
.VL  
.LI "\*L-member \*Vmember_name_list\*O"  
This required option lets you specify a list of names of one or more  
members to be removed from all groups named in the  
\*Vrpcgroup_name_list\*O argument.  The \*Vmember_name_list\*O argument  
specifies a list of names of RPC entries, RPC groups, or  
RPC profiles; these are only references stored in the RPC group and  
need not exist outside of the group.  All members  
specified are removed from all RPC groups specified in the argument.  
.LE  
.PP  
The \*Lremove\*O operation   
removes one or more members from the specified group.  The   
\*Vrpcgroup_name_list\*O argument is a  
list of names of RPC groups to have members removed from.  The value of the  
required \%\*L-member\*O option is a list of names of RPC entries, RPC  
groups, or RPC profiles.  If a specified member does  
not exist in an RPC group, an error is returned.  This operation returns   
an empty string on success.  
.PP   
\*LPrivileges Required\*O  
.PP  
You need \*Lr\*O (\*Lread\*O) permission and   
\*Lw\*O (\*Lwrite\*O) permission to the CDS object entry  
(the target group entry).  
.PP  
\*LExamples\*O  
.PP  
The following command removes the member  
\*L/.:subsys/applications/video_server\*O from the RPC group  
\*L/.:/subsys/applications/infobases\*O:  
.oS  
dcecp> \*Lrpcgroup remove /.:/subsys/applications/infobases \\\*C  
> \*L-member /.../my_cell.goodcompany.com/subsys/applications/video_server \*C 
dcecp> 
.oE  
.SH "RELATED INFORMATION"  
.PP  
Commands:  
.ad 1  
\*Ldcecp(8dce)\*O,   
...\" \*Ldcecp_endpoint(8dce)\*O,  
...\" \*Ldcecp_rpcentry(8dce)\*O,  
...\" \*Ldcecp_rpcprofile(8dce)\*O.  
\*Lendpoint(8dce)\*O,  
\*Lrpcentry(8dce)\*O,  
\*Lrpcprofile(8dce)\*O.  
.ad b  
.zZ "def,13377,R1.2.2,literary edit"  
 

