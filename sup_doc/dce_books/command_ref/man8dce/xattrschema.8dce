...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" HISTORY
...\" $Log: xattrschema.8dce,v $
...\" Revision 1.1.7.4  1996/10/28  14:56:54  wardr
...\" 	{def,13588,R1.2.2}
...\" 	Add Pointer to Problem Determination Guide
...\" 	[1996/10/28  14:55:16  wardr]
...\"
...\" Revision 1.1.7.3  1996/07/19  19:40:10  millett
...\" 	{edt,R1.2.2}
...\" 	 OSF edits
...\" 	[1996/07/19  19:35:34  millett]
...\" 
...\" Revision 1.1.7.2  1996/06/03  20:48:15  millett
...\" 	{def,CR13377,R1.2.2}
...\" 	HP review edits
...\" 	[1996/06/03  20:47:55  millett]
...\" 
...\" Revision 1.1.7.1  1996/05/13  15:49:03  wardr
...\" 	{enh,R1.2.2}
...\" 	Removed changebars
...\" 	[1996/05/13  15:47:18  wardr]
...\" 
...\" Revision 1.1.5.7  1996/03/27  19:04:11  weir
...\" 	Updated change markers
...\" 	[1996/03/27  19:02:51  weir]
...\" 
...\" Revision 1.1.5.6  1996/02/09  20:02:19  millett
...\" 	{CR, 13265, R1.2.1}
...\" 	fixed typo; no change bar used
...\" 	[1996/02/09  20:01:34  millett]
...\" 
...\" Revision 1.1.5.5  1996/02/07  20:18:33  rcb
...\" 	R1.2.1: editorial pass following HP revision
...\" 	[1996/02/07  20:16:00  rcb]
...\" 
...\" Revision 1.1.5.4  1996/02/02  19:51:54  weir
...\" 	CR 13293: miscellaneous HP revisions
...\" 	[1996/02/02  19:51:26  weir]
...\" 
...\" Revision 1.1.5.3  1995/12/29  19:39:27  weir
...\" 	Temporarily checked back in for HP
...\" 	[1995/12/29  19:37:54  weir]
...\" 
...\" Revision 1.1.5.2  1995/12/14  17:53:17  weir
...\" 	1.2.1 additions/changes added
...\" 	[1995/12/14  17:51:59  weir]
...\" 
...\" Revision 1.1.5.1  1995/12/14  15:07:04  weir
...\" 	Initial check-in to secure dcecp reference pages in 1.2. tree
...\" 	[1995/12/14  15:04:59  weir]
...\" 
...\" Revision 1.1.2.6  1995/12/12  21:11:32  rcb
...\" 	1.1, 1.2 tech changes by weir; editorial backfill by rcb; ready for 1.2 checkout
...\" 	[1995/12/12  21:10:08  rcb]
...\" 
...\" Revision 1.1.2.5  1995/10/09  14:06:31  rcb
...\" 	PH1.1: minor typo fix
...\" 	[1995/10/09  14:06:12  rcb]
...\" 
...\" Revision 1.1.2.4  1995/10/09  13:41:47  rcb
...\" 	1.1PH: editorial pass including outstanding 1.1 edits
...\" 	[1995/10/06  20:39:53  rcb]
...\" 
...\" Revision 1.1.2.3  1995/09/22  18:38:51  rcb
...\" 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2
...\" 	[1995/09/22  18:28:27  rcb]
...\" 
...\" Revision 1.1.2.2  1994/10/20  02:41:31  hileman
...\" 	Updated with Howard's corrections.
...\" 	[1994/10/20  02:41:08  hileman]
...\" 
...\" Revision 1.1.2.1  1994/07/26  16:34:23  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	renaming from schema.8dce to xattrschema.8dce
...\" 	[1994/07/26  16:33:43  wardr]
...\" 
...\" Revision 1.1.2.7  1994/07/15  20:59:25  wardr
...\" 	{enh, CR10014, R1.1}dcecp changes
...\" 	[1994/07/15  20:56:54  wardr]
...\" 
...\" 	{enh, CR10014, R1.1}dcecp changes
...\" 
...\" Revision 1.1.2.6  1994/06/13  18:41:03  devobj
...\" 	cr10872 - fix copyright
...\" 	[1994/06/13  18:38:38  devobj]
...\" 
...\" Revision 1.1.2.5  1994/05/19  19:09:17  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	incorporating draft edits
...\" 	[1994/05/19  19:08:50  wardr]
...\" 
...\" Revision 1.1.2.4  1994/05/06  19:01:13  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	updating reference pages
...\" 	[1994/05/06  18:59:02  wardr]
...\" 
...\" Revision 1.1.2.3  1994/03/15  21:01:24  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	initial DCECP ref page work
...\" 	[1994/03/15  20:59:35  wardr]
...\" 
...\" Revision 1.1.2.2  1994/03/11  20:34:52  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	initial refpage work
...\" 	[1994/03/11  16:33:33  wardr]
...\" 
...\" Revision 1.1.2.1  1994/03/09  20:01:24  wardr
...\" 	{enh, CR10014, R1.1}
...\" 	Creating new dcecp reference page
...\" 	[1994/03/09  19:49:23  wardr]
...\" 
...\" $EndLog$
...\" 
...\" 
...\" 
...\" 
.TH xattrschema 8dce  
.iX "\*Ldcecp\*O commands" "\*Lxattrschema\*O" 
.iX "xattrschema" "administering" 
.iX "schema" "administering" 
.SH "NAME" 
.PP 
\*Lxattrschema\*O - A \*Ldcecp\*O object that manages  
schema information for ERAs 
.zA "def,13377,R1.2.2,literary edit"
.SH "SYNOPSIS" 
.zA "def,13377,R1.2.2,clarify syntax"
.sS 
\*Lxattrschema catalog \*Vschema_name\*L\*O [\*L-simplename\*O] 
.PP 
\*Lxattrschema create \*Vschema_entry_name_list\*O 
.nL 
{\*L-attribute \*Vattribute_list\*O | \*L-\*Vattribute \*Vvalue\*O} 
.PP 
\*Lxattrschema delete \*Vschema_entry_name_list\*O 
.PP 
\*Lxattrschema help \*O[\*Voperation\*O | \*L-verbose\*O] 
.PP 
\*Lxattrschema modify \*Vschema_entry_name_list\*O 
.nL 
{\*L-change \*Vattribute_list\*O | \*L-\*Vattribute \*Vvalue\*O} 
.PP 
\*Lxattrschema operations\*O 
.PP 
\*Lxattrschema rename \*Vschema_entry_name\*L -to \*Vnew_schema_entry_name\*L 
.PP 
\*Lxattrschema show \*Vschema_entry_name_list\*O 
.sE 
.zZ "def,13377,R1.2.2,clarify syntax"
.SH "ARGUMENTS" 
.VL 
.LI "\*Voperation\*O" 
The name of the \*Lxattrschema\*O operation for which to display help information. 
.LI "\*Vschema_entry_name\*O" 
The name of a single schema entry type.  
.LI "\*Vschema_entry_name_list\*O 
A list of one or more schema entry types to act on.  
.LI "\*Vschema_name\*O 
The name of the schema that defines the schema entry types named in  
\*Vschema_entry_name_list\*O.  Two schemas are currently supported:  
.iS  
/.../\*Vcell_name\*O/sec/xattrschema\*O 
.iE 
.iS 
/.../\*Vcell_name\*O/hosts/\*Vhostname\*O/config/xattrschema\*O 
.iE 
.LE 
.SH "DESCRIPTION" 
.PP 
The \*Lxattrschema\*O object represents the schema information for an 
extended registry attribute (ERA).  This command manipulates the  
schema type that defines ERAs.  Schema types are identified by name. 
Other \*Ldcecp\*O commands manipulate individual instances of ERAs.    
ERA instances are an attribute of a given schema type that has been attached to an  
object and assigned a value.    
.PP 
You can attach ERAs  
to principal, group, and organization objects and to server configuration and server execution 
objects supported by \*Ldced\*O.   
.PP 
ERA entry types for principal, group, and organization objects  
have the following default name: 
.iS 
/.:/sec/xattrschema/\*Vschema_entry_name 
.iE 
.PP 
ERA types for \*Ldced\*O server objects have the following name: 
.iS  
/.:/hosts/\*Vhostname\*L/config/xattrschema/\*Vschema_entry_name 
.iE 
.PP 
ERA types are defined to be attached to only those objects supported by specified  
ACL managers.   
.nL 
.ne 6 
.SH "ATTRIBUTES" 
.VL .5i 
.LI "\*Laclmgr \*Vdescription\*O" 
A set that lists the ACL managers that support the object types on which 
ERAs of this type can be created.  For each ACL manager type, the 
permissions required for attribute operations are also specified.  Each ACL 
manager is described with a list, in the following format: 
.iS 
{\*Vuuid queryset updateset testset deleteset\*L} 
.iE 
.P 
where the first element is the Universal Unique Identifier (UUID)  
of the ACL manager, and the rest are the sets 
of permissions (concatenated permission strings as found in an ACL) required 
to perform each type of operation.  The value of this attribute is actually 
a list of these lists.  For example: 
.oS 
{8680f026-2642-11cd-9a43-080009251352 r w t D} 
{18dbdad2-23df-11cd-82d4-080009251352 r w t mD} 
.oE 
.P 
This attribute is modifiable after creation, but only in a limited way. 
New ACL managers can be added, but existing ones cannot be removed or 
changed.   
This attribute must be specified on creation. 
.LI "\*Lannotation \*Vstring\*O" 
A comment field used to store information about the schema entry. 
It is a Portable Character Set (PCS) string.  
.zA "def,13377,R1.2.2,add default"  
The default is an empty string (that is, blank). 
.zZ "def,13377,R1.2.2,add default"  
.LI "\*Lapplydefs \*O{\*Lyes\*O | \*Lno\*O}" 
Indicates that if this ERA does not exist for a given object on an 
attribute query, the system-defined default value (if any) for this 
attribute will be returned.  If set to \*Lno\*O, an attribute query 
returns an attribute instance only if it exists on the object named in the 
query.  The value of this attribute must be \*Lyes\*O or \*Lno\*O. 
.zA "def,13377,R1.2.2,add default"  
The default is \*Lno\*O. 
.zZ "def,13377,R1.2.2,add default"  
This attribute is only advisory in DCE Version 1.1.  Future versions of DCE 
will support this functionality. 
.LI "\*Lencoding \*Vtype\*O"   
The type of the ERA.  This attribute cannot be modified after creation, and  
must be specified on creation. 
Legal values are one of the following: 
.VL 
.LI "\*Lany\*O" 
The value of the ERA can take on any encoding.  This encoding type is only 
legal for the definition of an ERA in a schema entry.  All instances 
of an ERA must have an encoding of some other value. 
.LI "\*Lattrset\*O" 
The value of the ERA is a list of attribute type UUIDs used to retrieve 
multiple related attributes by specifying a single attribute type on a 
query.  
.LI "\*Lbinding\*O" 
The value of the ERA contains authentication, authorization, and 
binding information suitable for communicating with a DCE server.  The 
syntax is a list of two elements.   
.PP 
The first element is a list of security information in which the first 
element is the authentication type, either \*Lnone\*O or \*Ldce\*O, 
followed by information specific for each type.  The type \*Lnone\*O 
has no further information.  The type \*Ldce\*O is followed by a principal 
name, a protection level (\*Ldefault\*O, \*Lnone\*O, 
\*Lconnect\*O, \*Lcall\*O, \*Lpkt\*O, \*Lpktinteg\*O, or 
\*Lpktprivacy\*O), an authentication service 
(\*Ldefault\*O, \*Lnone\*O, or \*Lsecret\*O), and an 
authorization service (\*Lnone\*O, \*Lname\*O, or 
\*Ldce\*O).  Examples of three security information lists are as follows: 
.ne 6 
.oS 
{none} 
{dce /.:/melman default default dce} 
{dce /.:/melman pktprivacy secret dce} 
.oE 
.P 
The second element is a list of binding 
information, in which binding information can be string bindings or 
server entry names.  Two examples of binding information are as follows: 
.oS 
{/.:/hosts/\*Vhostname\*C/dce-entity 
 /.:/subsys/dce/sec/master} 
{ncadg_ip_udp:130.105.96.3  
 ncadg_ip_udp:130.105.96.6} 
.oE 
.LI "\*Lbyte\*O" 
The value of the ERA is a string of bytes.  The byte string is assumed to 
be \*Lpickle\*O or is otherwise a self-describing type. 
.PP 
It is unlikely that attributes of this 
type will be entered manually.  The format of 
output is hexadecimal bytes separated by spaces with 20 bytes per 
line.  For example, the input attribute name \*Lbindata\*O might  
produce the following output: 
.oS 
{bindata 
{00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 
22 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 12 11 12 13}} 
.oE 
The braces indicate that \*Lbindata\*O has one value. 
On input all whitespace is compressed so 
that users can enter the data as bytes or words or any 
combination, whichever is more convenient.  Therefore, a 
user could enter the following: 
.iS 
{bindata 
{00010203 0405 06070809 0a0b 0c0d0e0f 10111213 
22212223 2425 26272829 2a2b 2c2d2e2f 12111213}} 
.iE 
...\" .cS 
...\" .LI "\*Lconfidential\*O" 
...\" The value of the ERA is a string of bytes encrypted under the key of the 
...\" principal to which this attribute is attached.  Like a plaintext byte 
...\" string this is assumed to be a self describing type.  This encoding type is 
...\" only useful for an attribute instance attached to a principal object where 
...\" it will be decrypted and reencrypted every time the password associated 
...\" with the node is changed. 
...\" .PP 
...\" Although it is unlikely that administrators will enter attributes of 
...\" this type manually, the DCE control program does support entering 
...\" binary data via the following notations: \*V\\ddd\*O where \*Vddd\*O 
...\" can be one, two, or three octal digits, and \\x\*Vhh\*O where \*Vhh\*O 
...\" can be any number of hexadecimal digits. 
...\" .cE    
.LI "\*Li18ndata\*O" 
The value of the ERA is a string of bytes with a tag identifying the (OSF 
registered) codeset used to encode the data.   
.PP 
Although it is unlikely that administrators will enter attributes of 
this type manually, the DCE control program does support entering 
binary data via the following notations: \*V\\ddd\*O where \*Vddd\*O 
can be one, two, or three octal digits, and \\x\*Vhh\*O where \*Vhh\*O 
can be any number of hexadecimal digits. 
.LI "\*Linteger\*O" 
The value of the ERA is a signed 32-bit integer. 
.LI "\*Lprintstring\*O" 
The value of the ERA is a printable Interface Definition Language (IDL) 
character string using PCS. 
.LI "\*Lstringarray\*O" 
An array of PCS strings; represented as a Tcl list of strings. 
.LI "\*Luuid\*O" 
The value of the ERA is a UUID. 
.LI "\*Lvoid\*O" 
The ERA has no value.  It is simply a marker that is either present 
or absent. 
.LE 
.LI "\*Lintercell \*Vvalue\*O" 
Specifies the action that should be taken by the privilege server when 
reading ERAs from a foreign cell.  Possible values are as follows: 
.VL 
.LI "\*Laccept\*O" 
Accepts ERAs from foreign cells.  The only check  
applied is uniqueness if indicated by the \*Lunique\*O attribute. 
.LI "\*Lreject\*O"  
Discards ERAs from foreign cells.  
.LI "\*Levaluate\*O" 
Invokes a trigger function to a server that would 
decide whether the ERA should be kept, discarded, or mapped to another 
value.  
.LE 
.zA "def,13377,R1.2.2,add default"  
The default is \*Lreject\*O. 
.zZ "def,13377,R1.2.2,add default"  
.PP 
This attribute is only advisory in DCE Version 1.1.  Future versions of DCE 
will support this functionality. 
.LI "\*Lmultivalued \*O{\*Lyes\*O | \*Lno\*O}" 
Indicates that ERAs of this type may be multivalued (that is, multiple 
instances of the same attribute type may be attached to a single registry 
object).  The value of this attribute must be \*Lyes\*O or \*Lno\*O. 
This attribute is not modifiable after creation. 
.zA "def,13377,R1.2.2,add default"  
The default is \*Lno\*O. 
.zZ "def,13377,R1.2.2,add default"  
.LI "\*Lreserved \*O{\*Lyes \*O|\*L no\*O}" 
If set, this schema entry may not be deleted through any interface by 
any user.  The value of this attribute must be \*Lyes\*O or \*Lno\*O.   
.zA "def,13377,R1.2.2,add default"  
The default is \*Lno\*O. 
.zZ "def,13377,R1.2.2,add default"  
.LI "\*Lscope \*Vstring\*O" 
Indicates the name of a security directory or object in the registry.  If 
it is an object, instances of this ERA can be attached only to this object.  
If it is a directory, instances of this ERA can be attached only to 
descendants of this 
directory.  The default is 
an empty string, which does not limit which objects ERAs may be attached 
to.  For example, if this attribute is set to \*Lprincipal/org/dce\*O only 
principals with a prefix of \*Lorg/dce\*O in the name may have this type of 
ERA.  You cannot modify this attribute after it is created.  
.zA "def,13377,R1.2.2,add default"  
The default is the empty string (that is, blank). 
.zZ "def,13377,R1.2.2,add default"  
.PP 
This attribute is only advisory in DCE Version 1.1.  Future versions of DCE 
will support this functionality. 
.LI "\*Ltrigtype \*Vtype\*O" 
Identifies whether there is a trigger and if so what type it is.  
The possible values are: \*Lnone\*O, \*Lquery\*O, and \*Lupdate\*O. 
If this attribute is anything other than \*Lnone\*O, then 
\*Ltrigbind\*O must be set.  This attribute is not modifiable after 
creation.   
.zA "def,13377,R1.2.2,add default"  
The default is \*Lnone\*O. 
.zZ "def,13377,R1.2.2,add default"  
.LI "\*Ltrigbind \*Vbinding\*O" 
Contains binding information for the server that will support the trigger 
operations.  This field must be set if \*Ltrigtype\*O is not 
\*Lnone\*O or if \*Lintercell\*O is set to \*Levaluate\*O.  The 
value of this attribute is of the format described by the \*Lbinding\*O 
encoding type.   
.zA "def,13377,R1.2.2,add default"  
The default is the empty string (that is, blank). 
.zZ "def,13377,R1.2.2,add default"  
.LI "\*Lunique \*O{\*Lyes \*O| \*Lno\*O}" 
Indicates that each instance of the ERA must have a unique value 
within the cell for a particular object type (for instance, 
principal).  The value of this attribute must be \*Lyes\*O or \*Lno\*O. 
This attribute is not modifiable after creation.   
.zA "def,13377,R1.2.2,add default"  
The default is \*Lno\*O. 
.zZ "def,13377,R1.2.2,add default"  
.PP 
This attribute is only advisory in DCE Version 1.1.  Future versions of DCE 
will support this functionality. 
.LI "\*Luuid \*Vuuid\*O" 
The internal identifier of the ERA.  The value is a UUID.  This attribute 
is not modifiable after creation.  If not specified on the \*Lcreate\*O operation, 
a value is generated by the system. 
.LE 
.PP 
...\" See the \*VOSF DCE Administration Guide\*O for more information about \*Lxattrschema\*O attributes.   
See the \*(Ag for more information about \*Lxattrschema\*O attributes. 
.SH "ERRORS"
.PP
A representative list of errors that might be returned is not shown
here.  Refer to the \*(Tg for complete descriptions of all error
messages.
.SH "OPERATIONS" 
.SS "xattrschema catalog" 
.PP 
Returns a list of all the schema entry types defined in the specified schema. 
The syntax is as follows: 
.sS 
\*Lxattrschema catalog \*Vschema_name\*O [\*L-simplename\*O] 
.sE 
.PP 
\*LOptions\*O 
.VL 
.LI "\*L-simplename\*O" 
Returns only the residual part of the schema name. 
.LE 
.PP 
The \*Lcatalog\*O operation  
returns a list of the names of all the schema entry types defined 
in the named schema.  Use the \%\*L-simplename\*O option to return only the residual part  
of the names, instead of the fully qualified names. 
.PP 
\*LPrivileges Required\*O 
.PP 
You must have \*Lr\*O (\*Lread\*O) permission to the schema container object 
(\*L/.:/sec/xattrschema\*O or 
\*L/.:/hosts/\*Vhostname\*L/config/xattrschema\*O). 
.PP 
\*LExamples\*O 
.PP 
.oS 
dcecp> \*Lxattrschema catalog /.:/sec/xattrschema\*C 
/.../my_cell/sec/xattrschema/pre_auth_req 
/.../my_cell/sec/xattrschema/pwd_val_type 
/.../my_cell/sec/xattrschema/pwd_mgmt_binding 
/.../my_cell/sec/xattrschema/X500_DN 
/.../my_cell/sec/xattrschema/X500_DSA_Admin 
/.../my_cell/sec/xattrschema/disable_time_interval 
/.../my_cell/sec/xattrschema/max_invalid_attempts 
/.../my_cell/sec/xattrschema/passwd_override 
/.../my_cell/sec/xattrschema/test_any 
/.../my_cell/sec/xattrschema/test_void 
/.../my_cell/sec/xattrschema/test_printstring 
/.../my_cell/sec/xattrschema/test_printstring_array 
/.../my_cell/sec/xattrschema/test_integer 
/.../my_cell/sec/xattrschema/test_bytes 
/.../my_cell/sec/xattrschema/test_i18n_data 
/.../my_cell/sec/xattrschema/test_uuid 
/.../my_cell/sec/xattrschema/test_attr_set 
/.../my_cell/sec/xattrschema/test_binding 
dcecp> 
.oE 
.SS "xattrschema create" 
.PP 
Creates a new schema entry type.  The syntax is as follows: 
.sS 
\*Lxattrschema create \*Vschema_entry_name_list\*O 
.nL 
.zA "def,13377,R1.2.2,clarify syntax"
{\*L-attribute \*Vattribute_list\*O | \*L-\*Vattribute value\*O} 
.zZ "def,13377,R1.2.2,clarify syntax"
.sE 
.PP 
\*LOptions\*O 
.PP 
.VL
.zA "def,13377,R1.2.2,Clarify -attribute"
.LI "\*L-\*Vattribute value\*O"
As an alternative to using the \*L-attribute\*O option with an attribute list, you 
can change individual attribute options by prepending a hyphen (\*L-\*O) to any 
attributes listed in \*LATTRIBUTES\*O.  
.LI "\*L-attribute \*Vattribute_list\*O"  
Allows you to specify attributes by using an attribute list rather than  
using the \*L-\*Vattribute value\*O option. The format of an attribute list is as follows:  
.iS   
{{\*Vattribute \*Vvalue\*O}...{\*Vattribute \*Vvalue\*O}} 
.iE 
.zZ "def,13377,R1.2.2,Clarify -attribute" 
.LE 
.PP 
The \*Lcreate\*O operation  
creates a new schema entry for an ERA.  The argument is a list of one 
or more names of schema entry types to be created.  Attributes for the 
created schema entry types can be specified via attribute lists 
or attribute options.  If the command 
argument contains more than one schema name, you cannot specify a UUID 
attribute.  All attributes are applied to all entry types to be created. 
This operation returns an empty string on success. 
.PP 
\*LPrivileges Required\*O 
.PP 
You must have \*Li\*O (\*Linsert\*O) permission to the container object 
(\*L/.:/sec/xattrschema\*O or 
\*L/.:/hosts/\*Vhostname\*L/config/xattrschema\*O). 
.PP 
\*LExamples\*O 
.PP 
.oS 
dcecp> \*Lxattrschema create /.:/sec/xattrschema/test_integer \e\*C 
> \*L-encoding integer -aclmgr {group r r r r} \*C
dcecp> 
.oE 
.SS "xattrschema delete"  
.PP  
Deletes a schema entry type.  The syntax is as follows: 
.sS 
\*Lxattrschema delete \*Vschema_entry_name_list\*O  
.sE  
.PP  
The \*Ldelete\*O operation  
deletes a schema entry.  The argument is a list of names of schema 
entry types to be deleted.  This command also deletes all ERA instances of 
the schema entry.  If the entry types do not exist, an error is generated. 
This operation returns an empty string on success. 
.PP 
\*LPrivileges Required\*O 
.PP 
You must have \*Ld\*O (\*Ldelete\*O) permission to the container object 
(\*L/.:/sec/xattrschema\*O or 
\*L/.:/hosts/\*Vhostname\*L/config/xattrschema\*O). 
.PP 
\*LExamples\*O 
.PP 
.oS 
dcecp> \*Lxattrschema delete /.:/sec/xattrschema/test_integer \*C
dcecp> 
.oE 
.SS "xattrschema help" 
.PP 
Returns help information about the \*Lxattrschema\*O object and its 
operations.  The syntax is as follows: 
.sS 
\*Lxattrschema help \*O[\*Voperation\*O | \*L-verbose\*O] 
.sE 
.PP 
\*LOptions\*O 
.VL 
.LI "\*L-verbose\*O" 
Displays information about the \*Lxattrschema\*O object. 
.LE 
.PP 
Used without an argument or option, the 
\*Lxattrschema help\*O command returns brief information about each 
\*Lxattrschema\*O operation.  
The optional \*Voperation\*O argument is the name of an operation 
about which you want detailed information.   
Alternatively, you can use the \%\*L-verbose\*O option for more detailed 
information about the \*Lxattrschema\*O object itself. 
.PP 
.ne 4 
\*LPrivileges Required\*O 
.PP 
No special privileges are needed to use the \*Lxattrschema help\*O 
command. 
.PP 
\*LExamples\*O 
.oS 
dcecp> \*Lxattrschema help\*C 
catalog             Returns a list of all entries in a schema. 
create              Creates a schema entry. 
delete              Deletes a schema entry. 
modify              Modifies an existing schema entry. 
rename              Renames an existing schema entry. 
show                Returns the attributes of a schema entry. 
help                Prints a summary of command-line options. 
operations          Returns a list of the valid operations for this command. 
dcecp> 
.oE 
.SS "xattrschema modify" 
.PP 
This operation changes the attributes of a schema entry type.  
The syntax is as follows: 
.sS 
\*Lxattrschema modify \*Vschema_entry_name_list\*O 
.nL 
.zA "def,13377,R1.2.2,clarify syntax"
{\*L-change \*Vattribute_list\*O | \*L-\*Vattribute value\*O} 
.zZ "def,13377,R1.2.2,clarify syntax"
.sE 
.PP 
\*LOptions\*O 
.PP 
.VL 
.zA "def,13377,R1.2.2,Clarify -attribute"
.LI "\*L-\*Vattribute value\*O"
As an alternative to using options with an attribute list, you 
can change individual attribute options by prepending a hyphen (\*L-\*O) to any 
attributes listed in \*LATTRIBUTES\*O. 
.LI "\*L-change\*O \*Vattribute_list\*O" 
Allows you to modify attributes by using an attribute list rather than  
using individual attribute options.  The format of an attribute list is as follows:  
.iS  
\*O{{\*Vattribute value\*O}...{\*Vattribute value\*O}} 
.iE  
.PP   
See \*LATTRIBUTES\*O for descriptions of the attributes. 
.zZ "def,13377,R1.2.2,Clarify -attribute"
.LE 
.PP 
The \*Lmodify\*O operation  
changes attributes of schema entry types in the security service only.  The 
argument is a list of names of schema entry types to be operated on.  All 
modifications are applied to all schema entry types named in the argument. 
Schema entry types are modified in the order they are listed, and all 
modifications to an individual schema entry are atomic. 
Modifications to multiple schema entry types are not atomic.  A failure for any 
one schema entry in a list generates an error and aborts 
the operation.  This operation 
returns an empty string on success. 
.P 
The \%\*L-change\*O option modifies attributes.  Its value is an attribute list 
describing the new values for the specified attributes.  The command 
supports attribute options as well. 
.PP 
\*LPrivileges Required\*O 
.PP 
You must have \*Lm\*O (\*Lmgmt_info\*O) permission to the container object 
\*L/.:/sec/xattrschema\*O. 
.PP 
.ne 4 
\*LExamples\*O 
.PP 
.oS 
dcecp> \*Lxattrschema modify /.:/sec/xattrschema/test_integer \e\*C 
> \*L-aclmgr {organization r r r r} \*C
dcecp> 
.oE 
.SS "xattrschema operations" 
.PP 
Returns a list of the operations supported by the  
\*Lxattrschema\*O  
object. 
The syntax is as follows: 
.sS 
\*Lxattrschema operations\*O 
.sE 
.PP 
The list of available operations is in alphabetical order   
except for \*Lhelp\*O and \*Loperations\*O, which are listed last. 
.PP  
\*LPrivileges Required\*O 
.PP 
No special privileges are needed to use the  
\*Lxattrschema  
operations\*O 
command. 
.PP 
\*LExamples\*O 
.PP 
.oS 
dcecp> \*Lxattrschema operations\*C 
catalog create delete modify rename show help operations 
dcecp> 
.oE 
.SS "xattrschema rename" 
.P 
Changes the name of a specified schema entry type.  The syntax is as follows: 
.sS 
\*Lxattrschema rename \*Vschema_entry_name\*L -to \*Vnew_schema_entry_name\*O 
.sE 
.PP 
\*LOptions\*O 
.VL 
.LI "\*L-to \*Vnew_schema_entry_name\*O" 
Specifies the new name.  Specify the name in simple format,  
without the container-object portion (that is, without \*L/.:/sec/xattrschema\*O). 
.LE 
.PP 
The \*Lrename\*O operation changes the name of a specified ERA in the security service 
only.  The argument is a single name of an ERA to be renamed.  The 
\*Vnew_schema_entry_name\*O argument to the required \%\*L-to\*O 
option specifies the new name; this argument cannot 
be a list.  This operation returns an empty string on success. 
.PP 
\*LPrivileges Required\*O 
.PP 
You must have \*Lm\*O (\*Lmgmt_info\*O) permission to the container object 
\*L/.:/sec/xattrschema\*O. 
.PP 
\*LExamples\*O 
.PP 
.oS 
dcecp> \*Lxattrschema rename /.:/sec/xattrschema/test_integer -to test_int \*C
dcecp> 
.oE 
.SS "xattrschema show" 
.P 
Returns an attribute list describing the specified schema 
entry type.  The syntax is as follows: 
.sS 
\*Lxattrschema show \*Vschema_entry_name_list\*L\*O  
.sE 
.PP 
The \*Lshow\*O operation 
returns an attribute list describing the specified schema 
entry types.  The argument is a list of names of schema entry types to be operated 
on.  If more than one schema entry is given, the attributes are 
concatenated.  Attributes are returned in arbitrary order. 
.PP 
\*LPrivileges Required\*O 
.PP 
You must have \*Lr\*O (\*Lread\*O) permission to the container object 
(\*L/.:/sec/xattrschema\*O or 
\*L/.:/hosts/\*Vhostname\*L/config/xattrschema\*O). 
.PP 
.ne 14 
\*LExamples\*O 
.PP 
.oS 
dcecp> \*Lxattrschema show /.:/sec/xattrschema/test_integer\*C 
{aclmgr {principal {{query r} {update r} {test r} {delete r}}}} 
{annotation {test_integer: encoding type integer}} 
{applydefs yes} 
{encoding integer} 
{intercell reject} 
{multivalued yes} 
{reserved no} 
{scope {}} 
{trigbind {none {}}} 
{trigtype none} 
{unique no} 
{uuid 5f439154-2af1-11cd-8ec3-080009353559} 
dcecp> 
.oE 
.SH "RELATED INFORMATION" 
.PP 
.ad l 
Commands: 
...\" \*Ldcecp(8dce)\*O, 
...\" \*Ldcecp_account(8dce)\*O, 
...\" \*Ldcecp_group(8dce)\*O, 
...\" \*Ldcecp_organization(8dce)\*O, 
...\" \*Ldcecp_principal(8dce)\*O.
\*Laccount(8dce)\*O, 
\*Ldcecp(8dce)\*O, 
\*Lgroup(8dce)\*O,
\*Lorganization(8dce)\*O,   
\*Lprincipal(8dce)\*O. 
.ad b 
.zZ "def,13377,R1.2.2,literary edit"
