%!PS-Adobe-1.0
%%Creator: troff->tpscript
%%CreationDate: Wed Nov 27 10:59:52 1991
%%Pages: (atend)
%%EndComments
/angledict 1 dict def
/angleset{
 angledict begin
0.0
end
}def
%! @(#) a4.ps 1.3
/resdict 1 dict def
/setres{
 resdict begin
 /respunit 10 def               % respunit = res/PU_INCH
 respunit
 end
}def

/scaledict 1 dict def
/setscale{
 scaledict begin
 1 setres div                    % scale = 1/respunit
 end
}def
 
/vmstat save def 
initmatrix
/a4 [ [300 72 div 0 0 -300 72 div -52 3436 ] 292 3365
100 15 {dup mul exch dup mul add 1.0 exch sub} /setscreen load
{} /settransfer load /initgraphics load /erasepage load ] cvx
statusdict begin bind end readonly def
a4
setscale dup scale   
angleset rotate
clippath pathbbox pop pop exch pop 0 exch translate
clippath pathbbox /pgtop exch def pop pop pop
/page { pop showpage restore save home } def
/home { newpath 0 pgtop banner moveto } def
/mf { statusdict /manualfeed true put
 usertime 5000 add { dup usertime lt { pop exit } if } loop
 } def
/af { statusdict /manualfeed false put } def
af
/banner {dup pop } def
%! @(#) tpscript.ps 1.5
0 0 moveto
2 setlinecap
/y { neg 0 exch rmoveto } def
/X { currentpoint exch pop moveto } def
/Y { pgtop exch sub currentpoint pop exch moveto } def
/s { show } def
/l { neg rlineto currentpoint stroke moveto } def
/c {
2 div /rad exch def currentpoint /y0 exch def /x0 exch def
newpath x0 rad add y0 rad 0 360 arc stroke
x0 rad add rad add y0 moveto
 } def
/a {
/y2 exch neg def /x2 exch def /y1 exch neg def /x1 exch def
x1 y1 rmoveto currentpoint
currentpoint
x2 x2 mul y2 y2 mul add sqrt
y1 neg x1 neg atan
y2 x2 atan
newpath arc stroke moveto x2 y2 rmoveto
} def
/e {
2 div /yrad exch def 2 div /xrad exch def
currentpoint /y0 exch def /x0 exch def
x0 xrad add y0 translate
xrad yrad scale
newpath 0 0 1 0 360 arc
savematrix setmatrix
stroke
x0 xrad add xrad add y0 moveto
} def
/spln {
rcurveto currentpoint stroke moveto
} def
/reencsmalldict 20 dict def
/ReEncodeSmall
{ reencsmalldict begin
  /newcodesandnames exch def
  /newfontname exch def
  /basefontname exch def
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength dict def
  basefontdict
   { exch dup /FID ne
    { dup /Encoding eq
     { exch dup length array copy newfont 3 1 roll put }
     { exch newfont 3 1 roll put }
     ifelse
    }
    { pop pop }
    ifelse
   } forall
  newfont /FontName newfontname put
  newcodesandnames aload pop
  newcodesandnames length 2 idiv
   { newfont /Encoding get 3 1 roll put }
   repeat
  newfontname newfont definefont pop
  end
} def
/germvec [
8#321 /adieresis
8#322 /odieresis
8#323 /udieresis
8#324 /Adieresis
8#325 /Odieresis
8#326 /Udieresis
8#327 /Thorn
8#330 /thorn
8#331 /Eth
8#332 /eth
] def
/Times-Roman /Times-Roman-Germ germvec
  ReEncodeSmall
/Times-Italic /Times-Italic-Germ germvec
  ReEncodeSmall
/Times-Bold /Times-Bold-Germ germvec
  ReEncodeSmall
/Times-BoldItalic /Times-BoldItalic-Germ germvec
  ReEncodeSmall
/Helvetica /Helvetica-Germ germvec
  ReEncodeSmall
/Helvetica-Bold /Helvetica-Bold-Germ germvec
  ReEncodeSmall
/Helvetica-Oblique /Helvetica-Oblique-Germ germvec
  ReEncodeSmall
/Helvetica-BoldOblique /Helvetica-BoldOblique-Germ germvec
  ReEncodeSmall
/Courier /Courier-Germ germvec
  ReEncodeSmall
/Courier-Bold /Courier-Bold-Germ germvec
  ReEncodeSmall
/Courier-Oblique /Courier-Oblique-Germ germvec
  ReEncodeSmall
/Courier-BoldOblique /Courier-BoldOblique-Germ germvec
  ReEncodeSmall
/ft { /fonttype exch def /xsiz exch def /ysiz exch def /sl exch def
 fonttype [ xsiz pt 0 sl sin sl cos div ysiz pt mul ysiz pt 0 0 ]
 makefont setfont
 xsiz 1.7 div setlinewidth } def
/pt {setres  mul} def
/savematrix matrix currentmatrix def 
/BracketFontDict 9 dict def /$workingdict 10 dict def
BracketFontDict begin
/FontType 3 def
/FontName (Bracket) cvn def
/FontMatrix [ 0.001 0 0 0.001 0 0] def
/FontBBox [ -50 -250 1000 1000 ] def
/Encoding 256 array def 0 1 255 { Encoding exch /.notdef put } for
Encoding
dup 65 /Cbv put
dup 66 /Clt put
dup 67 /Clk put
dup 68 /Clb put
dup 69 /Crt put
dup 70 /Crk put
dup 71 /Crb put
dup 72 /Clc put
dup 73 /Clf put
dup 74 /Crc put
dup 75 /Crf put
dup 76 /Cbr put
dup 77 /Crn put
dup 78 /Cci put
dup 79 /C|| put
dup 80 /C^^ put
dup 81 /Cr1 put
dup 82 /Cr2 put
dup 83 /Cvs put
pop
/CharProcs 30 dict dup begin
setres 
/psresun exch def
/setC { 0 -50 -250 500 1000 setcachedevice} def
/C.bv {220 -250 moveto 0 1000 rlineto
60 0 rlineto 0 -1000 rlineto fill } def
/C.barc { 750 moveto 180 0 rlineto 0 -60 rlineto -180 0 rlineto fill } def
/C.barf { -250 moveto 180 0 rlineto 0 60 rlineto -180 0 rlineto fill } def
/C.brk.end { 1 setlinewidth moveto rlineto rcurveto
reversepath 60 0 rlineto rlineto rcurveto fill } def
/C.setl {dup dtransform exch round exch idtransform pop setlinewidth } def
/Cbv {
50 psresun mul setC
C.bv
} def
/Clt {
50 psresun mul setC
  0 150 50 210 140 250   0 730  0 150 50 250 200 250   0 750   220 -250   C.brk.end
} def
/Clk {
50 psresun mul setC
  1 setlinewidth  220 -250 moveto  0 400 rlineto  0 50 -50 100 -100 100 rcurveto  50 0 100 50 100 100 rcurveto  0 400 rlineto  60 0 rlineto  0 -400 rlineto  0 -50 -50 -100 -100 -100 rcurveto  50 0 100 -50 100 -100 rcurveto  0 -400 rlineto  closepath fill
} def
/Clb {
50 psresun mul setC
  0 -150 50 -210 140 -250   0 -730  0 -150 50 -250 200 -250   0 -750   220 750   C.brk.end
} def
/Crt {
50 psresun mul setC
  0 150 -50 250 -200 250   0 750   0 150 -50 210 -140 250   0 730  220 -250   C.brk.end
} def
/Crk {
50 psresun mul setC
  1 setlinewidth  220 -250 moveto  0 400 rlineto  0 50 50 100 100 100 rcurveto  -50 0 -100 50 -100 100 rcurveto  0 400 rlineto  60 0 rlineto  0 -400 rlineto  0 -50 50 -100 100 -100 rcurveto  -50 0 -100 -50 -100 -100 rcurveto  0 -400 rlineto  fill
} def
/Crb {
50 psresun mul setC
  0 -150 -50 -250 -200 -250   0 -750   0 -150 -50 -210 -140 -250   0 -730  220 750   C.brk.end
} def
/Clc {
50 psresun mul setC
  C.bv   280   C.barc
} def
/Clf {
50 psresun mul setC
  C.bv 280 C.barf
} def
/Crc {
50 psresun mul setC
  C.bv 40 C.barc
} def
/Crf {
50 psresun mul setC
  C.bv 40 C.barf
} def
/Cbr {
0 psresun mul 0 -50 -250 0 psresun mul 1000 setcachedevice
  40 C.setl  0 -250 moveto  0 1000 rlineto  stroke
} def
/Crn {
50 psresun mul setC
  40 C.setl  0 895 moveto  500 0 rlineto  stroke
} def
/Cci {
100 psresun mul 0 -50 -250 100 psresun mul 1000 setcachedevice
  40 C.setl  500 250   400   0 360 arc   stroke
} def
/C|| {
17 psresun mul 0 -50 -250 17 psresun mul 1000 setcachedevice

} def
/C^^ {
8 psresun mul 0 -50 -250 8 psresun mul 1000 setcachedevice

} def
/Cr1 {
80 psresun mul 0 -50 -250 80 psresun mul 1000 setcachedevice
  40 C.setl  0 setlinejoin  700 180 moveto -650 currentlinewidth add 0 rlineto 200 -200 rlineto  50 360 moveto 650 currentlinewidth sub 0 rlineto -200 200 rlineto  stroke
} def
/Cr2 {
80 psresun mul 0 -50 -250 80 psresun mul 1000 setcachedevice
  40 C.setl  2 setlinejoin  217 18 moveto    -150 150 rlineto 150 150 rlineto -150 -150 rlineto  633 0 rlineto  50 360 moveto  633 0 rlineto  -150 150 rlineto 150 -150 rlineto -150 -150 rlineto  stroke
} def
% the first 60 is the width of the character
/Cvs { 60 psresun mul setC 0 0 moveto
	0 100 rlineto 40 0  rlineto 0 -60 rlineto
	320 0 rlineto 0 60  rlineto 40 0  rlineto
	0 -100 rlineto -400 0 rlineto closepath fill
} def
end def
/BuildChar
{
	$workingdict begin
	/charcode exch def
	/fontdict exch def
	fontdict /CharProcs get begin
	fontdict /Encoding get
	charcode get load
	gsave
	0 setlinecap 0 setgray newpath
	exec
	grestore
	end end
} def end
/BracketFont BracketFontDict definefont pop

save
home 
%%EndProlog

0 Y
%%Page: 1 1
 /f.R /Times-Roman-Germ findfont def 
0 X
100 Y
0.0 10 10 f.R ft(--)s
5334 X(--)s
576 X
1150 Y
0.0 30 30 f.R ft(Index)s
576 X
1270 Y
/Cru {   0 ysiz pt 5 div 2 copy rmoveto   (_) show  neg rmoveto } def

Cru
696 X
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
Cru
576 X
2240 Y
936 X(C)s
576 X
2500 Y
936 X
0.0 11 11 f.R ft(calls)s
576 X
2630 Y
1296 X(r_abinev,)s
1735 X(0-10)s
576 X
2760 Y
1296 X(r_aborq,)s
1692 X(0-12)s
576 X
2890 Y
1296 X(r_atach,)s
1673 X(0-14)s
576 X
3020 Y
1296 X(r_binrq,)s
1675 X(0-22)s
576 X
3150 Y
1296 X(r_binrs,)s
1663 X(0-26)s
576 X
3280 Y
1296 X(r_bncnev,)s
1759 X(0-29)s
576 X
3410 Y
1296 X(r_bninev,)s
1742 X(0-32)s
576 X
3540 Y
1296 X(r_cwait,)s
1680 X(0-35)s
576 X
3670 Y
1296 X(r_dtach,)s
1680 X(0-38)s
576 X
3800 Y
1296 X(r_erinev,)s
1716 X(0-39)s
576 X
3930 Y
1296 X(r_errrq,)s
1654 X(0-42)s
576 X
4060 Y
1296 X(r_gtdcs,)s
1675 X(0-45)s
576 X
4190 Y
1296 X(r_invrq,)s
1675 X(0-46)s
576 X
4320 Y
1296 X(r_ivinev,)s
1718 X(0-51)s
576 X
4450 Y
1296 X(r_logof,)s
1675 X(0-54)s
576 X
4580 Y
1296 X(r_logon,)s
1694 X(0-55)s
576 X
4710 Y
1296 X(r_logwr,)s
1699 X(0-57)s
576 X
4840 Y
1296 X(roerrv.h,)s
1701 X(0-88)s
576 X
4970 Y
1296 X(ros,)s
1486 X(0-1)s
576 X
5100 Y
1296 X(r_prbuf,)s
1680 X(0-58)s
576 X
5230 Y
1296 X(r_rbinev,)s
1723 X(0-60)s
576 X
5360 Y
1296 X(r_redrq,)s
1673 X(0-61)s
576 X
5490 Y
1296 X(r_resrq,)s
1661 X(0-65)s
576 X
5620 Y
1296 X(r_rjurq,)s
1656 X(0-68)s
576 X
5750 Y
1296 X(r_rpinev,)s
1723 X(0-70)s
576 X
5880 Y
1296 X(r_rsinev,)s
1711 X(0-73)s
576 X
6010 Y
1296 X(r_ruinev,)s
1723 X(0-76)s
576 X
6140 Y
1296 X(r_ubcnev,)s
1759 X(0-78)s
576 X
6270 Y
1296 X(r_ubinev,)s
1742 X(0-80)s
576 X
6400 Y
1296 X(r_ubnrq,)s
1699 X(0-82)s
576 X
6530 Y
1296 X(r_ubnrs,)s
1687 X(0-85)s
576 X
6660 Y
1296 X(r_wake,)s
1673 X(0-87)s
576 X
6790 Y
1296 X(tp2_005_close,)s
1993 X(0-91)s
576 X
6920 Y
1296 X(tp2_oo2_read,)s
1955 X(0-93)s
2863 X
2240 Y
3583 X(tp2_001_open,)s
4268 X(0-92)s
2863 X
2370 Y
3583 X(tp2_003_write,)s
4280 X(0-95)s
2863 X
3020 Y
3223 X
0.0 30 30 f.R ft(I)s
2863 X
3280 Y
3223 X
0.0 11 11 f.R ft(intro,)s
3487 X(0-1)s
2863 X
3930 Y
3223 X
0.0 30 30 f.R ft(R)s
2863 X
4190 Y
3223 X
0.0 11 11 f.R ft(r_abinev,)s
3662 X(0-10)s
2863 X
4320 Y
3223 X(r_aborq,)s
3619 X(0-12)s
2863 X
4450 Y
3223 X(r_atach,)s
3600 X(0-14)s
2863 X
4580 Y
3223 X(r_binrq,)s
3602 X(0-22)s
2863 X
4710 Y
3223 X(r_binrs,)s
3590 X(0-26)s
2863 X
4840 Y
3223 X(r_bncnev,)s
3686 X(0-29)s
2863 X
4970 Y
3223 X(r_bninev,)s
3669 X(0-32)s
2863 X
5100 Y
3223 X(r_cwait,)s
3607 X(0-35)s
2863 X
5230 Y
3223 X(r_dtach,)s
3607 X(0-38)s
2863 X
5360 Y
3223 X(r_erinev,)s
3643 X(0-39)s
2863 X
5490 Y
3223 X(r_errrq,)s
3581 X(0-42)s
2863 X
5620 Y
3223 X(r_gtdcs,)s
3602 X(0-45)s
2863 X
5750 Y
3223 X(r_invrq,)s
3602 X(0-46)s
2863 X
5880 Y
3223 X(r_ivinev,)s
3645 X(0-51)s
2863 X
6010 Y
3223 X(r_logof,)s
3602 X(0-54)s
2863 X
6140 Y
3223 X(r_logon,)s
3621 X(0-55)s
2863 X
6270 Y
3223 X(r_logwr,)s
3626 X(0-57)s
2863 X
6400 Y
3223 X(roerrv.h,)s
3628 X(0-88)s
2863 X
6530 Y
3223 X(r_prbuf,)s
3607 X(0-58)s
2863 X
6660 Y
3223 X(r_rbinev,)s
3650 X(0-60)s
576 X
7713 Y(27 November 1991)s
4531 X(Index)s /f.S /Symbol findfont def 
0.0 11 11 f.S ft(-)s
0.0 11 11 f.R ft(1)s
7920 Y
2 page /f.R /Times-Roman-Germ findfont def 
0.0 11 11 f.R ft
%%Page: 2 2

0 X
100 Y
0.0 10 10 f.R ft(--)s
5334 X(--)s
576 X
490 Y
0.0 11 11 f.R ft(DCE Technical Supplement)s
576 X
847 Y
936 X(r_redrq,)s
1313 X(0-61)s
576 X
977 Y
936 X(r_resrq,)s
1301 X(0-65)s
576 X
1107 Y
936 X(r_rjurq,)s
1296 X(0-68)s
576 X
1237 Y
936 X(r_rpinev,)s
1363 X(0-70)s
576 X
1367 Y
936 X(r_rsinev,)s
1351 X(0-73)s
576 X
1497 Y
936 X(r_ruinev,)s
1363 X(0-76)s
576 X
1627 Y
936 X(r_ubcnev,)s
1399 X(0-78)s
576 X
1757 Y
936 X(r_ubinev,)s
1382 X(0-80)s
576 X
1887 Y
936 X(r_ubnrq,)s
1339 X(0-82)s
576 X
2017 Y
936 X(r_ubnrs,)s
1327 X(0-85)s
576 X
2147 Y
936 X(r_wake,)s
1313 X(0-87)s
576 X
2797 Y
936 X
0.0 30 30 f.R ft(T)s
576 X
3057 Y
936 X
0.0 11 11 f.R ft(tp2_005_close,)s
1633 X(0-91)s
576 X
3187 Y
936 X(tp2_001_open,)s
1621 X(0-92)s
576 X
3317 Y
936 X(tp2_002_read,)s
1595 X(0-93)s
576 X
3447 Y
936 X(tp2_003_write,)s
1633 X(0-95)s
576 X
7713 Y(Index)s /f.S /Symbol findfont def 
0.0 11 11 f.S ft(-)s
0.0 11 11 f.R ft(2)s
4048 X(27 November 1991)s
0 X
8015 Y
0.0 10 10 f.R ft(--)s
5334 X(--)s
8015 Y
-1 page /f.R /Times-Roman-Germ findfont def 
0.0 10 10 f.R ft
%%Trailer
count { pop } repeat % a little cleanup is necessary
vmstat restore
