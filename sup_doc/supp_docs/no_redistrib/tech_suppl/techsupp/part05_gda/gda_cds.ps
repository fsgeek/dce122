%!PS-Adobe-2.1
%%Creator: DECwrite V1.0
%%+Copyright (c) 1989 DIGITAL EQUIPMENT CORPORATION.  
%%+All Rights Reserved.
%%DocumentFonts: (atend)
%%EndComments
%%BeginProcSet DEC_WRITE 1.05
/DEC_WRITE_dict 150 dict def DEC_WRITE_dict begin/$D save def/$I 0 def/$S 0
def/$C matrix def/$R matrix def/$L matrix def/$E matrix
def/beginEPS{/level0 save def/showpage{}def/EPSname exch
def}def/endEPS{level0 restore}def/pat1{/px exch def/pa 8 array def 0 1
7{/py exch def/pw 4 string def 0 1 3{pw exch px py 1 getinterval
putinterval}for pa py pw put}for}def/pat2{/pi exch def/cflag exch def save
cflag 1 eq{eoclip}{clip}ifelse newpath{clippath pathbbox}stopped not{/ph
exch def/pw exch def/py exch def/px exch def/px px 3072 div floor 3072 mul
def/py py 3072 div floor 3072 mul def px py translate/pw pw px sub 3072 div
floor 1 add cvi def/ph ph py sub 3072 div floor 1 add cvi def pw 3072 mul
ph 3072 mul scale/pw pw 32 mul def/ph ph 32 mul def/px 0 def/py 0 def pw ph
pi[pw 0 0 ph 0 0]{pa py get/px px 32 add def px pw ge{/px 0 def/py py 1 add
8 mod def}if}pi type/booleantype eq{imagemask}{image}ifelse}if
restore}def/PS{/_op exch def/_np 8 string def 0 1 7{/_ii exch def/num _op
_ii get def _np 7 _ii sub num -4 bitshift PX num 15 and 4 bitshift -4
bitshift PX 4 bitshift or put}for _np}def/PX{[15 7 11 3 13 5 9 1 14 6 10 2
12 4 8 0]exch get}def/FR{0.7200 0 $E defaultmatrix dtransform/yres exch
def/xres exch def xres dup mul yres dup mul add sqrt}def/SU{/_sf exch
def/_sa exch def/_cs exch def/_mm $C currentmatrix def/rm _sa $R rotate
def/sm _cs dup $L scale def sm rm _mm _mm concatmatrix _mm concatmatrix pop
1 0 _mm dtransform/y1 exch def/x1 exch def/_vl x1 dup mul y1 dup mul add
sqrt def/_fq FR _vl div def/_na y1 x1 atan def _mm 2 get _mm 1 get mul _mm
0 get _mm 3 get mul sub 0 gt{{neg}/_sf load concatprocs/_sf exch def}if _fq
_na/_sf load setscreen}def/BO{/_yb exch def/_xb exch def/_bv _bs _yb _bw
mul _xb 8 idiv add get def/_mk 1 7 _xb 8 mod sub bitshift def _bv _mk and 0
ne $I 1 eq xor}def/BF{DEC_WRITE_dict begin/_yy exch def/_xx exch def/_xi
_xx 1 add 2 div _bp mul cvi def/_yi _yy 1 add 2 div _bp mul cvi def _xi _yi
BO{/_nb _nb 1 add def 1}{/_fb _fb 1 add def 0}ifelse
end}def/setpattern{/_cz exch def/_bw exch def/_bp exch def/_bs exch PS
def/_nb 0 def/_fb 0 def _cz 0/BF load SU{}settransfer _fb _fb _nb add div
setgray/$S 1 def}def/invertpattern{$S 0 eq{{1 exch sub}currenttransfer
concatprocs settransfer}if}def/invertscreen{/$I 1 def/$S 0
def}def/revertscreen{/$I 0 def}def/setrect{/$h exch def/$w exch def/$y exch
def/$x exch def newpath $x $y moveto $w $x add $y lineto $w $x add $h $y
add lineto $x $h $y add lineto closepath}def/concatprocs{/_p2 exch cvlit
def/_p1 exch cvlit def/_pn _p1 length _p2 length add array def _pn 0 _p1
putinterval _pn _p1 length _p2 putinterval _pn cvx}def/OF/findfont load
def/findfont{dup DEC_WRITE_dict exch known{DEC_WRITE_dict exch get}if
DEC_WRITE_dict/OF get exec}def
mark/ISOLatin1Encoding 
8#000 1 8#001{StandardEncoding exch get}for /emdash/endash
8#004 1 8#025{StandardEncoding exch get}for /quotedblleft/quotedblright
8#030 1 8#054{StandardEncoding exch get}for /minus 8#056 1 8#217
{StandardEncoding exch get}for/dotlessi 8#301 1 8#317{StandardEncoding 
exch get}for/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave
/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave
/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
256 array astore def cleartomark 
/encodefont{findfont dup maxlength dict begin{1 index/FID ne{def}{pop
pop}ifelse}forall/Encoding exch def dup/FontName exch def currentdict
definefont end}def/loads{/$/ISOLatin1Encoding load def/&/encodefont load
def/*/invertpattern load def/+/revertscreen load def/-/invertscreen load
def/:/concatprocs load def/^/setpattern load def/~/pat1 load def/_/pat2
load def/@/setrect load def/A/arcn load def/B/ashow load def/C/curveto load
def/D/def load def/E/eofill load def/F/findfont load def/G/setgray load
def/H/closepath load def/I/clip load def/K/kshow load def/L/lineto load
def/M/moveto load def/N/newpath load def/O/rotate load def/P/pop load
def/R/grestore load def/S/gsave load def/T/translate load def/U/sub load
def/V/div load def/W/widthshow load def/X/exch load def/Y/awidthshow load
def/a/save load def/c/setlinecap load def/d/setdash load def/e/restore load
def/f/setfont load def/g/initclip load def/h/show load def/i/setmiterlimit
load def/j/setlinejoin load def/k/stroke load def/l/rlineto load
def/m/rmoveto load def/n/currentfont load def/o/scalefont load
def/p/currentpoint load def/r/currenttransfer load def/s/scale load
def/t/setmatrix load def/u/settransfer load def/w/setlinewidth load
def/x/matrix load def/y/currentmatrix load def}def
end
%%EndProcSet
%%EndProlog
 
%%BeginSetup
DEC_WRITE_dict begin
loads
version cvi 23.0 gt {
currentdict {dup type /arraytype eq
{bind def} {pop pop} ifelse} forall} if
0.0100 0.0100 s
 
%%EndSetup
/$P a D
g N
0 79200 T
S
R
S
7200 -7200 T
N
0 G
5730 -2100 M
/Helvetica-Bold-ISOLatin1 $
/Helvetica-Bold & P
/Helvetica-Bold-ISOLatin1 F 2400 o f
(DCE GDA Design Specification) h
14399 -5850 M
n 0.750 o f
(Draft) h
( ) h
(for OSF Review) h
20620 -11150 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1400 o f
(Mark Fox) h
18685 -17200 M
n 0.857 o f
(December 1) h
(0,) h
( 1990) h
300 -25750 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1400 o f
(1  ) h
1856 -25750 M
(Functional Overview) h
300 -28600 M
/Times-Roman-ISOLatin1 F 1200 o f
104.9 0 32 (The GDA \(Global Directory Agent\) for the OSF DCE is, in
the strictest sense, an application) W
300 -30000 M
1063.8 0 32 (that takes a global cell name of the form
/.../com/dec/lkg/printers/mine \(or) W
300 -31400 M
24.3 0 32 (/.../co=US/o=DEC/ou=lkg/printers/mine\) and returns a CDS
progress record. A global name re\255) W
300 -32800 M
22.2 0 32 (fers to a name whose prefix contains the name of a cell
registered in either the Domain Naming) W
300 -34200 M
137.0 0 32 (System) W
n 0.667 o f
0.0 537.0 m
137.0 0 32 (1) W
0 -537.0 m
n 1.500 o f
137.0 0 32 ( \(lkg.dec.com\) or the X.500 Directory \(co=US o=DEC
ou=lkg\). A progress record is) W
300 -35600 M
200.9 0 32 (the information used by a server to refer a clerk to another server ) W
200.9 0 32 (maintaining ) W
200.9 0 32 (\(or a server) W
300 -37000 M
95.1 0 32 ("closer to"\) a replica of the directory containing the named entry) W
n 0.667 o f
0.0 537.0 m
95.1 0 32 (2) W
0 -537.0 m
n 1.500 o f
95.1 0 32 (. The knowledge of whether) W
300 -38400 M
(the original request can be continued is indicated by servers in the
progress record.) h
300 -40400 M
20.5 0 32 (The larger view is that a GDA acts as a name service gateway
between cell namespaces. To see) W
300 -41800 M
17.1 0 32 (how this works, we will follow a naming request iniated by a
random application. When a DCE) W
300 -43200 M
78.2 0 32 (application wishes to lookup the name of an entry maintained
by a CDS \(Cell Directory Serv\255) W
300 -44600 M
33.8 0 32 (ice\) server) W
n 0.555 o f
0.0 537.0 m
33.8 0 32 (3) W
0 -537.0 m
n 1.802 o f
33.8 0 32 (, it calls a CDS API function and control is passed to the
local CDS clerk. The clerk) W
300 -46000 M
83.8 0 32 (issues an RPC request to a CDS server. Assume that the clerk
has been referred to or ) W
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1200 o f
83.8 0 32 (a priori) W
300 -47400 M
/Times-Roman-ISOLatin1 F 1200 o f
(knows of a server that holds a replica of the) h
( cell's) h
( root directory.) h
300 -49400 M
92.9 0 32 (Digressing for a moment, consider another critical
assumption: that the cell has been properly) W
300 -50800 M
47.3 0 32 (configured to allow its CDS to access nameserver entries in
foreign cells. Thus, a ) W
47.3 0 32 (d) W
47.3 0 32 (irectory) W
47.3 0 32 ( ) W
47.3 0 32 (en\255) W
300 -52200 M
29.6 0 32 (try named "..." exists in the root and a child pointer entry
for that directory is created in each of) W
300 -53600 M
55.6 0 32 (the servers maintaining ) W
55.6 0 32 (replicas of ) W
55.6 0 32 (the root. The directory entry referenced by the child pointer) W
300 -55000 M
125.4 0 32 (entries doesn't really exist) W
125.4 0 32 ( in the CDS) W
125.4 0 32 (, as we shall see. A child pointer contains a set\255valued) W
- -7200 7200 T
R
 
S
7200 -64200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
900 -1200 M
9.6 0 32 (The acronym DNS refers in this paper to the Domain Naming
System, decDNS is used to refer to the DNA Nam\255) W
900 -2450 M
(ing Service.) h
300 -4200 M
0.0 448.0 m
(2) h
0 -448.0 m
900 -4200 M
(The progress record is described in Sec. 3.3.2 of the ) h
/Times-Italic-ISOLatin1 F 1000 o f
(DNA Naming Service Functional Specification) h
/Times-Roman-ISOLatin1 F 1000 o f
(.) h
300 -6000 M
0.0 448.0 m
(3) h
0 -448.0 m
900 -6000 M
50.4 0 32 (To be precise, entries are actually stored in databases
called clearinghouses; servers maintain one or more clear\255) W
900 -7250 M
(inghouses.) h
- -7200 64200 T
R
 
S
5288 -17300 400 5600 @
S
0.00 G E
R
R
S
5288 -31900 400 8400 @
S
0.00 G E
R
R
showpage
$P e
 
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(2 \255) h
19565 -2250 M
(DCE Confidential) h
300 -3600 M
- -7200 74700 T
R
 
R
S
7200 -7200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
62.6 0 32 (attribute called DNS$Replicas; each value identifies a
server that maintains a replica of the di\255) W
300 -2600 M
147.5 0 32 (rectory. A further result of the configuration process is
that one or more GDA processes are) W
300 -4000 M
147.4 0 32 (initialzed ) W
147.4 0 32 (and) W
147.4 0 32 ( ) W
147.4 0 32 (referenced in the replica set associated with /... The
means by which the child) W
300 -5400 M
(pointer entry for /... is created and updated will be discussed below.) h
300 -7400 M
120.2 0 32 (The server, in the meantime, refers the clerk to a GDA by
returning an RPC response with a) W
300 -8800 M
51.8 0 32 (progress record containing a replica set that refers to one
or more GDAs. The fact that the rep\255) W
300 -10200 M
98.6 0 32 (lica set identifies a set of GDAs rather than CDS servers is
transparent to the clerk. Note that) W
300 -11600 M
75.9 0 32 (each time a progress record is returned to a clerk, two
names are returned, the unresolved part) W
300 -13000 M
75.1 0 32 (of the original name and the resolved part. In this
particular case, /... is the resolved name and) W
300 -14400 M
57.3 0 32 (com/dec/lkg/printers/mine is the unresolved name. The clerk
subsequently reissues the original) W
300 -15800 M
18.2 0 32 (RPC request; however, the clerk sends the RPC to) W
18.2 0 32 ( a ) W
18.2 0 32 (GDA) W
18.2 0 32 ( instead of a CDS server. The authen\255) W
300 -17200 M
39.7 0 32 (tication and authorization requirements on this interaction
are exactly those placed on intra\255cell) W
300 -18600 M
(clerk and server interactions.) h
300 -20600 M
33.9 0 32 (The GDA receives the RPC request and is capable of
processing it because it contains the CDS) W
300 -22000 M
13.5 0 32 (server RPC stubs defined in cds_gda.idl. The progress record
received with the request contains) W
300 -23400 M
85.3 0 32 (the unresolved portion of the name, i.e,
com/dec/lkg/printers/mine. When a stub receives a re\255) W
300 -24800 M
(quest, it calls ) h
(the f) h
(unction) h
( choose_conduit\() h
(\).) h
( The function prototype is:) h
300 -26800 M
6060 -26800 M
(int choose_conduit \( *question_el_t \);) h
300 -28800 M
(The question_el_t data type is defined as:) h
300 -30800 M
(typedef struct question_el_t {) h
300 -32200 M
6060 -32200 M
(cds_Progress_t) h
17580 -32200 M
(*in_progress_q;) h
300 -33600 M
6060 -33600 M
(dns_cts_t) h
11820 -33600 M
17580 -33600 M
(*nsp_cts_q;) h
300 -35000 M
6060 -35000 M
(dns_full_name_t) h
17580 -35000 M
(*dir_name_q;) h
300 -36400 M
6060 -36400 M
(dns_replicaptr_t) h
17580 -36400 M
(*replicas_q[];) h
300 -37800 M
6060 -37800 M
(conduit_el_t) h
17580 -37800 M
(*conduit_q;) h
300 -39200 M
6060 -39200 M
(/* conduit\255specific data */) h
300 -40600 M
6060 -40600 M
(enum ci_tag) h
17580 -40600 M
(taq_q;) h
300 -42000 M
6060 -42000 M
(union cd {) h
300 -43400 M
6060 -43400 M
11820 -43400 M
(bind_t) h
17580 -43400 M
(bind_q;) h
300 -44800 M
6060 -44800 M
11820 -44800 M
(x500_t) h
17580 -44800 M
(x500_q;) h
300 -46200 M
6060 -46200 M
(}) h
300 -47600 M
(} question_el_t;) h
300 -49000 M
300 -50400 M
(enum ci_tag) h
11820 -50400 M
({ e_bind, e_x500 };) h
300 -51800 M
300 -53200 M
100.9 0 32 (Choose_conduit\(\) reads the input progress record in_progress_q to ) W
100.9 0 32 (determine) W
100.9 0 32 ( ) W
100.9 0 32 (whether the cell) W
300 -54600 M
118.8 0 32 (name is an entry in DNS or X.500. The algoritm used is
trivial: if the first component of the) W
300 -56000 M
71.0 0 32 (name \(the one following /.../ in the original name\),
contains an un\255escaped equal \(=\) sign) W
n 0.667 o f
0.0 537.0 m
71.0 0 32 (1) W
0 -537.0 m
n 1.500 o f
71.0 0 32 (, the) W
300 -57400 M
78.2 0 32 (name is assumed to be an X.500 name; otherwise it is a DNS name.) W
78.2 0 32 ( Choose_conduit\(\) returns) W
300 -58800 M
132.0 0 32 (either the constant OK or a non\255zero error code. If OK
is returned, conduit_q is set to either) W
- -7200 7200 T
R
 
S
7200 -69000 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
900 -1200 M
93.2 0 32 (See ) W
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1000 o f
93.2 0 32 (Proposal for Global Typed Name Syntax) W
/Times-Roman-ISOLatin1 F 1000 o f
93.2 0 32 (, an OSF white paper by Walt Tuvell dated Sept. 17, 1990 for an) W
900 -2450 M
(explanation of the DCE naming syntax.) h
- -7200 69000 T
R
 
S
5288 -60900 400 29800 @
S
0.00 G E
R
R
S
5288 -66300 400 2600 @
S
0.00 G E
R
R
showpage
$P e
 
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(3 \255) h
19565 -2250 M
(DCE Confidential) h
300 -3600 M
- -7200 74700 T
R
 
R
S
7200 -7200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
464.5 0 32 (bind_conduit or x500_conduit. ) W
464.5 0 32 (If an X.500 name is encountered, ) W
464.5 0 32 (the GDA then ) W
464.5 0 32 (calls) W
300 -2600 M
2041.2 0 32 (x500_name_to_progress\(\); otherwise it calls
dns_name_to_progress\(\). The) W
300 -4000 M
61.9 0 32 (*_name_to_progress\(\) function looks up the cell entry in
the corresponding namespace and re\255) W
300 -5400 M
92.4 0 32 (turns the information it finds) W
92.4 0 32 (.) W
92.4 0 32 ( The syntax of a cell entry will be discussed below. Suffice it to) W
300 -6800 M
59.6 0 32 (say at this point that the cell entry contains an attribute
similar to the ) W
59.6 0 32 (replica set contained in a) W
300 -8200 M
60.6 0 32 (CDS directory entry. ) W
60.6 0 32 (Control ultimately r) W
60.6 0 32 (eturns to the RPC stub and the stub returns a reply to) W
300 -9600 M
44.2 0 32 (the clerk. The above description has been somewhat
simplified by casting it in terms of the de\255) W
300 -11000 M
74.5 0 32 (sign of a single\255threaded GDA. In fact the GDA is
multi\255threaded; the thread control structure) W
300 -12400 M
(is described below. ) h
300 -14400 M
31.9 0 32 (When the clerk receives the RPC response from the GDA, it
obtains it with it a progress record) W
300 -15800 M
51.7 0 32 (containing a replica set identifing the servers who maintain
replicas of the root directory of the) W
300 -17200 M
52.8 0 32 (remote cell. The clerk caches the mapping of resolved global
name to replica set and ) W
52.8 0 32 (s) W
52.8 0 32 (ends the) W
300 -18600 M
236.3 0 32 (original request with the updated progress record to ) W
236.3 0 32 (a server in the remote cell. The clerk) W
300 -20000 M
18.4 0 32 (authenticates itself to the remote server by [TBS]. If
necessary the clerk continues to respond to) W
300 -21400 M
12.6 0 32 (referrals to s) W
12.6 0 32 (ervers in that cell until a server indicates that the
request can proceed no further. ) W
12.6 0 32 (A) W
12.6 0 32 (t) W
300 -22800 M
(that point the clerk returns the results to the application.) h
300 -24800 M
26.2 0 32 (Two mechanisms are available to short\255circuit the
preceeding dialog. First the client library im\255) W
300 -26200 M
146.5 0 32 (plementation of the CDS API initially performs an initial
substring match between the name) W
300 -27600 M
74.6 0 32 (given it by an application and the name of the local cell.
If the match succeeds, e.g. the above) W
300 -29000 M
29.2 0 32 (name is given by an application running in the cell named
/.../com/dec/lkg, the library strips off) W
300 -30400 M
54.8 0 32 (the cell name prefix and passes the remainder
\(/printers/mine\) to a CDS server in the local cell) W
300 -31800 M
0.3 0 32 (with an RPC request. The server then returns the results of
the RPC to the clerk if it contains the) W
300 -33200 M
(entry or it refers the clerk to another server.) h
300 -35200 M
12.8 0 32 (Second, the clerk caches global names so that when it
receives a subsequent request referencing) W
300 -36600 M
124.1 0 32 (/.../com/dec/lkg/printers/mine, it can issue an RPC request
directly to a CDS server in the re\255) W
300 -38000 M
(mote cell.) h
300 -40000 M
300 -44550 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1400 o f
(2  ) h
1856 -44550 M
(The Structure of the Cell Name Entry) h
300 -47400 M
/Times-Roman-ISOLatin1 F 1200 o f
123.4 0 32 (The entry for a cell in the Domain Naming System or X.500
Directory contains a number of) W
300 -48800 M
138.2 0 32 (attributes that are used to identify and communicate with
CDS servers in that cell. These in\255) W
300 -50200 M
(clude:) h
300 -52200 M
/Symbol F 1200 o f
(\267) h
2100 -52200 M
/Times-Roman-ISOLatin1 F 1200 o f
(The namespace CTS) h
300 -54200 M
/Symbol F 1200 o f
(\267) h
2100 -54200 M
/Times-Roman-ISOLatin1 F 1200 o f
(The directory name and CTS of the cell root \(optional\)) h
300 -56200 M
/Symbol F 1200 o f
(\267) h
2100 -56200 M
/Times-Roman-ISOLatin1 F 1200 o f
(A set\255valued attribute identifying the replicas of the cell's root directory) h
- -7200 7200 T
R
 
S
5288 -8900 400 1400 @
S
0.00 G E
R
R
S
5288 -13100 400 1400 @
S
0.00 G E
R
R
S
5288 -15900 400 1400 @
S
0.00 G E
R
R
showpage
$P e
 
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(4 \255) h
19565 -2250 M
(DCE Confidential) h
300 -3600 M
- -7200 74700 T
R
 
R
S
7200 -7200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
18.6 0 32 (The creation time stamp \(CTS\) of the DECdns namespace is required) W
n 0.667 o f
0.0 537.0 m
18.6 0 32 (1) W
0 -537.0 m
n 1.500 o f
18.6 0 32 ( to disambiguate between) W
300 -2600 M
72.4 0 32 (DECdns namespaces in the case where a server manages more
than one clearinghouse and the) W
300 -4000 M
(clearinghouses are in different namespaces.) h
300 -6000 M
30.0 0 32 (The directory name and CTS of the cell root are optional
attributes and are only needed if there) W
300 -7400 M
136.5 0 32 (are multiple cells contained in the DECdns namespace. Th) W
136.5 0 32 (es) W
136.5 0 32 (e are used to compose the unre\255) W
300 -8800 M
(solved and resolved names in the progress reco) h
(rd) h
(.) h
300 -10800 M
(Each element of the set of replicas contains:) h
300 -12800 M
/Symbol F 1200 o f
(\267) h
2100 -12800 M
/Times-Roman-ISOLatin1 F 1200 o f
100.5 0 32 (The replica type indicating whether the replica is
writeable or not; this allows the clerk to) W
2100 -14200 M
16.3 0 32 (bind specifically to the writeable replica for modify
operations or to any replica for read op\255) W
2100 -15600 M
(erations.) h
300 -17600 M
/Symbol F 1200 o f
(\267) h
2100 -17600 M
/Times-Roman-ISOLatin1 F 1200 o f
107.9 0 32 (The full name of the clearinghouse in which a replica is
stored. Clearinghouses are repre\255) W
2100 -19000 M
33.9 0 32 (sented by entries in the namespace and clerks can look up
attributes of these entries such as) W
2100 -20400 M
164.2 0 32 (the DNS$CHLastAddress. This attribute contains the last
known address of the clearing\255) W
2100 -21800 M
0.4 0 32 (house, and with it the clerk can create an RPC binding with
the server that maintains a given) W
2100 -23200 M
(clearinghouse.) h
300 -25200 M
/Symbol F 1200 o f
(\267) h
2100 -25200 M
/Times-Roman-ISOLatin1 F 1200 o f
219.6 0 32 (The CTS of the clearinghouse. This is a form of universal,
unique identifier that never) W
2100 -26600 M
117.3 0 32 (changes. Binding to the name alone is not sufficient
because the name of a clearinghouse) W
2100 -28000 M
61.2 0 32 (may change; the CTS is used to verify that the clearinghouse
bound to by a clerk is indeed) W
2100 -29400 M
(the correct one.) h
300 -31400 M
/Symbol F 1200 o f
(\267) h
2100 -31400 M
/Times-Roman-ISOLatin1 F 1200 o f
27.1 0 32 (The tower set of the server that maintains the
clearinghouse. This element is only present in) W
2100 -32800 M
(cell entries stored in an X.500 Directory.) h
300 -35750 M
/Helvetica-Bold-ISOLatin1 $
/Helvetica-Bold & P
/Helvetica-Bold-ISOLatin1 F 1400 o f
(2.1 ) h
2635 -35750 M
(Format of Cell Name) h
( Entries ) h
(in DNS) h
300 -38000 M
/Times-Roman-ISOLatin1 F 1200 o f
56.3 0 32 (The information describing a cell is stored ) W
56.3 0 32 (in a relatively new RR \(resource record\) called AF\255) W
300 -39400 M
32.1 0 32 (SDB \(AFS Data Base\) and one or more ) W
32.1 0 32 (TXT \(text\) RR) W
32.1 0 32 (s ) W
32.1 0 32 (in the DNS namespace. The exact rep\255) W
300 -40800 M
(resentation is as follows) h
( \(see RFC 1033 for recomendations on the contents of RRs\):) h
300 -42800 M
(; First Replica:) h
300 -44200 M
(; Name) h
6060 -44200 M
11820 -44200 M
(TTL) h
17580 -44200 M
(Class) h
23340 -44200 M
(Type) h
29100 -44200 M
(Subtype) h
34860 -44200 M
(Host) h
300 -45600 M
(lkg.dec.com) h
11820 -45600 M
(604800) h
17580 -45600 M
(IN) h
23340 -45600 M
(AFSDB) h
29100 -45600 M
(  ) h
(2) h
34860 -45600 M
(iorst.lkg.dec.com) h
300 -47000 M
(; Name) h
6060 -47000 M
11820 -47000 M
(TTL) h
17580 -47000 M
(Class) h
23340 -47000 M
(Type) h
29100 -47000 M
(Rdata) h
300 -48400 M
6060 -48400 M
11820 -48400 M
(604800) h
17580 -48400 M
(IN) h
23340 -48400 M
(TXT) h
29100 -48400 M
(\( 1) h
34860 -48400 M
(; version) h
300 -49800 M
6060 -49800 M
11820 -49800 M
(aa\25500\25504\25500\25564\25511\25511\2551f\255b9\25567\255ee\25504\25594\25500) h
34860 -49800 M
(; ns cts) h
300 -51200 M
6060 -51200 M
11820 -51200 M
(Master) h
17580 -51200 M
23340 -51200 M
29100 -51200 M
34860 -51200 M
(; Replica1 type) h
300 -52600 M
6060 -52600 M
11820 -52600 M
(one_) h
(ch) h
17580 -52600 M
23340 -52600 M
29100 -52600 M
34860 -52600 M
(; ch name) h
300 -54000 M
6060 -54000 M
11820 -54000 M
(aa\25500\25504\25500\25564\25511\25551\255bb\255b9\25567\255ee\25504\25594\25500) h
34860 -54000 M
(; ch cts) h
300 -55400 M
6060 -55400 M
11820 -55400 M
(iorst.lkg.dec.com\)) h
23340 -55400 M
29100 -55400 M
34860 -55400 M
(; host) h
300 -56800 M
300 -58200 M
6060 -58200 M
11820 -58200 M
- -7200 7200 T
R
 
S
7200 -67800 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
900 -1200 M
69.3 0 32 (Should we allow this to be optional in the \(normal?\) case
where the clearinghouses a server holds are all in the) W
900 -2450 M
99.5 0 32 (same  namespace? Obviously this would require a protocol
change but would ease the management of at least) W
900 -3650 M
(DNS entries where the information must be entered manually.) h
- -7200 67800 T
R
 
S
5288 -17100 400 3400 @
S
0.00 G E
R
R
S
5288 -53300 400 1400 @
S
0.00 G E
R
R
S
5288 -56100 400 1400 @
S
0.00 G E
R
R
S
5288 -65700 400 6800 @
S
0.00 G E
R
R
showpage
$P e
 
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(5 \255) h
19565 -2250 M
(DCE Confidential) h
300 -3600 M
- -7200 74700 T
R
 
R
S
7200 -7200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
(; Second Replica:) h
300 -2600 M
6060 -2600 M
11820 -2600 M
(604800) h
17580 -2600 M
(IN) h
23340 -2600 M
(AFSDB) h
29100 -2600 M
(  ) h
(2) h
34860 -2600 M
(arose.lkg.dec.com) h
300 -4000 M
6060 -4000 M
11820 -4000 M
(604800) h
17580 -4000 M
(IN) h
23340 -4000 M
(TXT) h
29100 -4000 M
(\() h
( 1) h
34860 -4000 M
(; version) h
300 -5400 M
6060 -5400 M
11820 -5400 M
(aa\25500\25504\25500\25564\25511\25511\2551f\255b9\25567\255ee\25504\25594\25500) h
34860 -5400 M
(; ns cts) h
300 -6800 M
6060 -6800 M
11820 -6800 M
(Read\255only) h
17580 -6800 M
23340 -6800 M
29100 -6800 M
34860 -6800 M
(; Replica2 type) h
300 -8200 M
6060 -8200 M
11820 -8200 M
(a) h
(nother_) h
(ch) h
17580 -8200 M
23340 -8200 M
29100 -8200 M
34860 -8200 M
(; ch name) h
300 -9600 M
6060 -9600 M
11820 -9600 M
(aa\25500\25504\25500\255bb\25510\25523\255e8\25515\25524\25574\255fb\25593\25500) h
34860 -9600 M
(; ch cts) h
300 -11000 M
6060 -11000 M
11820 -11000 M
(arose.lkg.dec.com\)) h
23340 -11000 M
29100 -11000 M
34860 -11000 M
(;) h
( host) h
300 -12400 M
300 -13800 M
104.6 0 32 (T) W
104.6 0 32 (hese RRs ) W
104.6 0 32 (d) W
104.6 0 32 (efine a cell named "lkg.dec.com".) W
104.6 0 32 ( They are obtained by issuing a standard query) W
300 -15200 M
168.7 0 32 (on the name "lkg.dec.com" with a class of C_IN \(Internet\)
and a type of T_ANY \(wildcard) W
300 -16600 M
58.5 0 32 (match\).  ) W
58.5 0 32 (The time\255to\255live values are arbitrarily set for one
week. The protocol class is Internet.) W
300 -18000 M
(The name is inherited by subsequent RRs until another name appears.) h
300 -20000 M
433.8 0 32 (The AFSDB record indicates that a nameserver \(subtype 2\)
exists on the host named) W
300 -21400 M
161.3 0 32 (iorst.lkg.dec.com. The DNS nameserver will automatically
return the internet address of this) W
300 -22800 M
(host as additional data with answers containing the AFSDB RR. ) h
300 -24800 M
9.9 0 32 (The fields contained in a TXT record are separated by white
space and are case\255insensitive. The) W
300 -26200 M
76.3 0 32 (first ) W
76.3 0 32 (field indicates the version \(1\). The next field contains ) W
76.3 0 32 (namespace CTS expressed as a hy\255) W
300 -27600 M
80.4 0 32 (phenated string of hex digits. Following that are the groups
of three fields defining the replica) W
300 -29000 M
88.7 0 32 (managed by the server on iorst. The first field of the
triple must contain one of the keywords,) W
300 -30400 M
124.5 0 32 ("Master" or "Read\255only". Only the first character is
meaningful. The second field defines the) W
300 -31800 M
134.1 0 32 (name of the clearinghouse, relative to the root of the
cell. Because the name of the clearing\255) W
300 -33200 M
91.9 0 32 (house does not contain embedded "/" characters, it is
interpreted as an entry in the root of the) W
300 -34600 M
21.3 0 32 (cell. The final field in the triple is the clearinghouse CTS.) W
21.3 0 32 ( The hostname of the clearinghouse is) W
300 -36000 M
(included in the TXT RR to enable the corresponding AFSDB and TXT RRs
to be matched.) h
300 -38000 M
51.7 0 32 (If a directory name and CTS are specified, they follow the
hostname, with the CTS preceeding) W
300 -39400 M
(the directory name.) h
300 -41400 M
(Additional pairs of AFSDB and TXT records are used to define
additional replicas.) h
300 -43400 M
70.8 0 32 (NOTE:  Issuing requests of type "any" may not return the
appropriate cell information if there) W
300 -44800 M
74.8 0 32 (is a large volume of RRs in the lkg.dec.com domain other
than the types listed above. The as\255) W
300 -46200 M
13.6 0 32 (sumption is that if this domain contains many RR records
\(such as hostnames and MX records\),) W
300 -47600 M
4.3 0 32 (these records are stored on the other side of a zone split.
Thus, the AFSDB and TXT records are) W
300 -49000 M
67.3 0 32 (actually obtained from the server that holds dec.com, while
the A and MX records are held by) W
300 -50400 M
(the servers defined by NS records in dec.com.) h
23340 -50400 M
29100 -50400 M
34860 -50400 M
300 -53350 M
/Helvetica-Bold-ISOLatin1 $
/Helvetica-Bold & P
/Helvetica-Bold-ISOLatin1 F 1400 o f
(2.2 ) h
2635 -53350 M
(Format of Cell Name Entries in ) h
(X.500) h
300 -55600 M
/Times-Roman-ISOLatin1 F 1200 o f
(TBS by Siemens.) h
- -7200 7200 T
R
 
S
5288 -11700 400 2800 @
S
0.00 G E
R
R
S
5288 -24300 400 9800 @
S
0.00 G E
R
R
S
5288 -33900 400 1400 @
S
0.00 G E
R
R
S
5288 -47700 400 6800 @
S
0.00 G E
R
R
S
5288 -61900 400 12200 @
S
0.00 G E
R
R
showpage
$P e
 
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(6 \255) h
19565 -2250 M
(DCE Confidential) h
300 -3600 M
- -7200 74700 T
R
 
R
S
7200 -7200 T
N
0 G
300 -1350 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1400 o f
(3  ) h
1856 -1350 M
(The Name\255to\255Progress Function) h
300 -4200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
68.0 0 32 (X500_name_to_progress\(\) and dns_name_to_progress\(\) have
identical calling sequences. Both) W
300 -5600 M
84.1 0 32 (accept a global name and return the information contained in
a CDS progress record. Because) W
300 -7000 M
76.6 0 32 (the GDA is a multi\255threaded application, these functions
must be thread\255safe at a minimum. It) W
300 -8400 M
(is acceptable for this function to cause it's calling thread to block.) h
300 -10400 M
86.1 0 32 (Any global variables and entry points defined by these
functions should be prefixed by x500_) W
300 -11800 M
(and dns_, respectively.) h
300 -13800 M
(The prototypes for these functions are as follows \(replace the
wildcard * with x500 and dns\):) h
300 -15800 M
300 -17800 M
(*_name_to_progress) h
11820 -17800 M
(\() h
( *question_el_t \);) h
300 -19200 M
300 -21200 M
67.3 0 32 (Note that all of the output parameters are comprised of
information found in the cell name en\255) W
300 -22600 M
(try. This is described below.) h
300 -24600 M
45.7 0 32 (The input p) W
45.7 0 32 (rogress record contains ) W
45.7 0 32 (an opaque full name whose prefix is the name of the cell of) W
300 -26000 M
31.5 0 32 (interest. This name is obtained from the unresolved name
portion of the progress record; thus it) W
300 -27400 M
135.7 0 32 (will not contain the leading /... It can be translated to
the string representation by calling the) W
300 -28800 M
(CDS API function dnsCvtOpqFullToStr\(\).) h
300 -30800 M
62.4 0 32 (The output parameters) W
62.4 0 32 ( in question_el_t) W
62.4 0 32 ( are the information that comprise the CHList field of a) W
300 -32200 M
(progress record.) h
300 -34200 M
250.2 0 32 (Nscts is the namespace CTS. Assuming that its ASCII
representation is stored in DNS or) W
300 -35600 M
95.8 0 32 (X.500, calling the CDS API function dnsCvtStrToTS\(\) is
called to convert it back to a binary) W
300 -37000 M
67.2 0 32 (format. The preferred ASCII representation of a CTS is a
string of 14 pairs of hex digits sepa\255) W
300 -38400 M
(rated by dashes.) h
300 -40400 M
69.6 0 32 (Dirname and dircts are NULL in the case where the
corresponding optional attributes of a cell) W
300 -41800 M
62.8 0 32 (entry are not present. Otherwise dirname is the opaque full
name of the DECdns directory that) W
300 -43200 M
44.1 0 32 (is the root directory of the cell and dircts is its creation
timestamp. Assuming dirname is repre\255) W
300 -44600 M
110.7 0 32 (sented as a string name in the cell name entry, call
dnsCvtStrToFull\(\) to convert it to opaque) W
300 -46000 M
(format. As above, call dnsCvtStrToTS\(\) to create an opaque CTS.) h
300 -48000 M
14.3 0 32 (Replicas is an array of replica pointers, the last of which
is null. A replica pointer is represented) W
300 -49400 M
(as follows:) h
300 -51400 M
(struct {) h
300 -52800 M
6060 -52800 M
(dnsReplicaType_t) h
17580 -52800 M
(rp_type;) h
23340 -52800 M
29100 -52800 M
(/* master or read\255only */) h
300 -54200 M
6060 -54200 M
(dns_cts_t) h
11820 -54200 M
17580 -54200 M
(rp_chcts;) h
23340 -54200 M
29100 -54200 M
(/* clearinghouse cts */) h
300 -55600 M
6060 -55600 M
(dns_full_name_t) h
17580 -55600 M
(rp_chname;) h
23340 -55600 M
29100 -55600 M
(/* clearinghouse name */) h
300 -57000 M
6060 -57000 M
(int) h
11820 -57000 M
17580 -57000 M
(rp_towerlen;) h
29100 -57000 M
(/* byte length of tower set */) h
300 -58400 M
6060 -58400 M
(void) h
11820 -58400 M
17580 -58400 M
(*rp_towers;) h
23340 -58400 M
29100 -58400 M
(/* tower set */) h
300 -59800 M
(};) h
300 -61200 M
- -7200 7200 T
R
 
S
5288 -27500 400 3400 @
S
0.00 G E
R
R
S
5288 -32300 400 1400 @
S
0.00 G E
R
R
S
5288 -38500 400 1400 @
S
0.00 G E
R
R
showpage
$P e
 
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(7 \255) h
19565 -2250 M
(DCE Confidential) h
300 -3600 M
- -7200 74700 T
R
 
R
S
7200 -7200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
128.9 0 32 (Rp_type is an enumeration constant indicating the type of
replica; it is defined in dnsclerk.h.) W
300 -2600 M
145.1 0 32 (Rp_chcts and rp_chname are the CTS and name of the
clearinghouse in which the replica is) W
300 -4000 M
(stored.) h
300 -8550 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1400 o f
(4  ) h
1856 -8550 M
(Creating and Updating /... Child Pointer Entries) h
300 -11400 M
/Times-Roman-ISOLatin1 F 1200 o f
42.9 0 32 (When a GDA process is initialized, it must attempt to create
a child pointer entry in the root of) W
300 -12800 M
230.0 0 32 (the cell's CDS namespace named "..." by calling
dnsCreateChild\(\). This function takes the) W
300 -14200 M
45.8 0 32 (name of the child \(/...\), a CTS identifying the directory
created by calling dnsCreateCTS\(\), and) W
300 -15600 M
85.9 0 32 (a replica set containing a single entry identifying the
GDA's towers. The replica type is set to) W
300 -17000 M
106.2 0 32 (Master, the clearinghouse CTS is obtained from another call
to dnsCreateCTS\(\), the clearing\255) W
300 -18400 M
46.6 0 32 (house name is "GDA_"hostname"_ch by convention, and the
towerset is created from the local) W
300 -19800 M
(host's IP address.) h
300 -21800 M
10.1 0 32 (If the child pointer entry already exists, i.e,
dnsCreateChild\(\) fails with an EntryExists error, the) W
300 -23200 M
151.6 0 32 (GDA instead calls dnsReadAttrValue\(\) to obtain its entry
in the replica set of /... Three out\255) W
300 -24600 M
(comes may occur:) h
300 -26600 M
/Symbol F 1200 o f
(\267) h
2100 -26600 M
/Times-Roman-ISOLatin1 F 1200 o f
79.6 0 32 (The GDA is not listed in the replica set. In this case, the
GDA calls dnsAddAttrValue\(\) to) W
2100 -28000 M
55.4 0 32 (add itself to the set. The replica type is set to
read\255only; the other values are constructed as) W
2100 -29400 M
(in the case when the child pointer entry is first created.) h
300 -31400 M
/Symbol F 1200 o f
(\267) h
2100 -31400 M
/Times-Roman-ISOLatin1 F 1200 o f
27.9 0 32 (The GDA is listed in the replica set and its towerset
reflects the current host address. In this) W
2100 -32800 M
(case nothing more need be done.) h
300 -34800 M
/Symbol F 1200 o f
(\267) h
2100 -34800 M
/Times-Roman-ISOLatin1 F 1200 o f
77.5 0 32 (The GDA is listed but the towerset does not indicate the
current host. The GDA then calls) W
2100 -36200 M
23.8 0 32 (dnsRmAttrValue\(\) to delete its replica entry and then
calls dnsAddAttrValue\(\) to add a new) W
2100 -37600 M
(entry for itself.) h
300 -42150 M
/Helvetica-BoldOblique-ISOLatin1 F 1400 o f
(5  ) h
1856 -42150 M
(Creating and Modifying Cell Name Entries) h
300 -45000 M
/Times-Roman-ISOLatin1 F 1200 o f
83.9 0 32 (In Version 1 of the DCE, cell name entries will be created
and updated manually.) W
83.9 0 32 ( This means) W
300 -46400 M
7.8 0 32 (that cell entries stored in DNS must be created and modified
with a text editor and that the DCE) W
300 -47800 M
(X.500 management utility is used to create and maintain cell entries
in the X.500 Directory. ) h
300 -52350 M
/Helvetica-BoldOblique-ISOLatin1 F 1400 o f
(6  ) h
1856 -52350 M
(Management of the GDA Process) h
300 -55200 M
/Times-Roman-ISOLatin1 F 1200 o f
129.4 0 32 (In Version 1 of the DCE, there will be no explicit
management functions other than creating) W
300 -56600 M
(and terminating the GDA process) h
- -7200 7200 T
R
 
S
5288 -14700 400 4400 @
S
0.00 G E
R
R
showpage
$P e
 
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(8 \255) h
19565 -2250 M
(DCE Confidential) h
300 -3600 M
- -7200 74700 T
R
 
R
S
7200 -7200 T
N
0 G
300 -1350 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1400 o f
(7  ) h
1856 -1350 M
(The Threads Control Structure) h
300 -4200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
133.8 0 32 (There are two types of threads active at any time in the
GDA. One type of thread is used to) W
300 -5600 M
131.8 0 32 (receive messages from ) W
131.8 0 32 (s) W
131.8 0 32 (ources ) W
131.8 0 32 (other than ) W
131.8 0 32 (CDS clerks) W
131.8 0 32 ( such as BIND nameservers \(the BIND) W
300 -7000 M
36.2 0 32 (listener\). Th) W
36.2 0 32 (e other ) W
36.2 0 32 (type \(RPC thread\) ) W
36.2 0 32 (is) W
36.2 0 32 ( created by the RPC runtime whenever an RPC request) W
300 -8400 M
(is received.) h
300 -10400 M
6.9 0 32 (W) W
6.9 0 32 (hen ) W
6.9 0 32 (an RPC ) W
6.9 0 32 (thread) W
6.9 0 32 ( is started,) W
6.9 0 32 ( it enqueues) W
6.9 0 32 ( an entry containing the input parameters of the RPC) W
300 -11800 M
69.3 0 32 (call ) W
69.3 0 32 (to a linked list of requests.) W
69.3 0 32 ( Processing an RPC request may require that a request message) W
300 -13200 M
172.0 0 32 (be sent to a BIND server. ) W
172.0 0 32 (When the ) W
172.0 0 32 (BIND listener ) W
172.0 0 32 (thread receives ) W
172.0 0 32 (the response ) W
172.0 0 32 (message, it) W
300 -14600 M
126.7 0 32 (searches the linked list to match the answer with the
corresponding RPC request) W
126.7 0 32 (.) W
126.7 0 32 ( The reason) W
300 -16000 M
207.2 0 32 (behind this linkage is that each CDS RPC request may) W
207.2 0 32 ( in fact ) W
207.2 0 32 (require several message ex\255) W
300 -17400 M
58.7 0 32 (changes, ie referrals, between the GDA and various DNS
servers. As there is no separate clerk) W
300 -18800 M
16.2 0 32 (actively handling these referrals, the GDA must be prepared
to deal with them directly. A much) W
300 -20200 M
23.2 0 32 (simpler, synchronous interface with DNS servers exists \(the
resolver\), but each request requires) W
300 -21600 M
110.6 0 32 (a separate file descriptor \(assumed to be a scarce
resource\) and the resolver assumes requests) W
300 -23000 M
(are chained through servers, but root servers do not allow chained requests.) h
300 -25000 M
94.7 0 32 (RPC ) W
94.7 0 32 (thread) W
94.7 0 32 (s) W
94.7 0 32 ( begin) W
94.7 0 32 ( ) W
94.7 0 32 (by determining if the name received from the clerk is an
X.500 name or a) W
300 -26400 M
26.9 0 32 (DNS name. If a DNS name is received,
dns_name_to_progress\(\) is called. It formats a question) W
300 -27800 M
36.0 0 32 (for a DNS server, enqueues an element onto the list element
corresponding to the original CDS) W
300 -29200 M
79.0 0 32 (RPC request, sends the question, and then blocks on a
condition variable awaiting the answer.) W
300 -30600 M
96.1 0 32 (At some point, the ) W
96.1 0 32 (BIND listener ) W
96.1 0 32 (thread will receive the answer, locate the corresponding en\255) W
300 -32000 M
(queued list element, and signal the condition variable referenced by
the list element.) h
300 -34000 M
142.7 0 32 (The blocked) W
142.7 0 32 ( ) W
142.7 0 32 (thread is unblocked by the signal. It obtains the answer
and determines if more) W
300 -35400 M
81.9 0 32 (DNS questions are required. If so, it repeats the process
until it can return a result to the CDS) W
300 -36800 M
111.8 0 32 (clerk. At that point, the ) W
111.8 0 32 (t) W
111.8 0 32 (hread constucts the return arguments to dns_name_to_progress\(\) and) W
300 -38200 M
(returns from the function) h
( and t) h
(hen returns the RPC response to the clerk.) h
300 -40200 M
45.1 0 32 (If, on the other hand, the ) W
45.1 0 32 (RPC t) W
45.1 0 32 (hread had called x500_name_to_progress\(\), it would issue a re\255) W
300 -41600 M
118.5 0 32 (quest to an X.500 DSA. The Siemens implementation of
x500_name_to_progress\(\) will issue) W
300 -43000 M
4.6 0 32 (IAPL* calls. Since these calls result in System V message
queue requests, the function is free to) W
300 -44400 M
28.0 0 32 (pend awaiting the response from the DUA on the other end of
the message queue. This is prob\255) W
300 -45800 M
67.8 0 32 (ably necessary because there is no mechanism \(??\) to
ansynchronously access message queues) W
300 -47200 M
(and message queues do not ) h
(consume ) h
(file descriptors.) h
300 -49200 M
(  ) h
300 -51200 M
( ) h
300 -52584 M
- -7200 7200 T
R
 
S
5288 -23700 400 11800 @
S
0.00 G E
R
R
S
5288 -32700 400 1400 @
S
0.00 G E
R
R
S
5288 -38300 400 1400 @
S
0.00 G E
R
R
S
5288 -41700 400 1400 @
S
0.00 G E
R
R
S
5288 -47900 400 4800 @
S
0.00 G E
R
R
S
5288 -55500 400 2000 @
S
0.00 G E
R
R
showpage
$P e
 
$D restore
%%Trailer
end % DEC_WRITE_dict
%%Pages: 8
%%DocumentFonts: Helvetica-Bold-ISOLatin1
%%+ Times-Roman-ISOLatin1
%%+ Helvetica-BoldOblique-ISOLatin1
%%+ Times-Italic-ISOLatin1
%%+ Helvetica-ISOLatin1
%%+ Symbol
