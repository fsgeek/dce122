%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 21 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-BoldItalic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 1 /Symbol FMFONTDEFINE
4 0 /Times-Italic FMFONTDEFINE
5 0 /Courier FMFONTDEFINE
6 0 /Helvetica FMFONTDEFINE
7 0 /Courier-Bold FMFONTDEFINE
8 0 /Helvetica-Oblique FMFONTDEFINE
9 0 /Helvetica-Bold FMFONTDEFINE
10 0 /Helvetica-BoldOblique FMFONTDEFINE
11 1 /ZapfDingbats FMFONTDEFINE
12 0 /Courier-BoldOblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
126 414 522 702 C
0 18 Q
0 X
0 K
(DCE RPC I) 147 624 T
0 14 Q
(NTERNALS) 237.94 624 T
(AND) 318.63 624 T
0 18 Q
( D) 348.93 624 T
0 14 Q
(A) 366.42 624 T
(T) 375.49 624 T
(A) 383.78 624 T
0 18 Q
(S) 397.38 624 T
0 14 Q
(TRUCTURES) 407.39 624 T
1 F
(revision 1.0) 150.25 454.25 T
(August, 1993) 150.25 436.25 T
140.25 608.75 507 649.25 R
0.5 H
0 Z
N
(Open Software Foundation) 150.25 418 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
2 8 Q
0 X
0 K
(The information contained within this document is subject to change without notice.) 108 714.67 T
(OSF MAKES NO W) 108 702.17 T
(ARRANTY OF ANY KIND WITH REGARD T) 174.85 702.17 T
(O THIS MA) 331.48 702.17 T
(TERIAL, INCLUDING BUT NOT LIM-) 371.02 702.17 T
-0.22 (ITED T) 108 692.67 P
-0.22 (O, THE IMPLIED W) 132.73 692.67 P
-0.22 (ARRANTIES OF MERCHANT) 200.46 692.67 P
-0.22 (ABILITY AND FITNESS FOR A P) 303.32 692.67 P
-0.22 (AR) 418.07 692.67 P
-0.22 (TICULAR PURPOSE.) 428.7 692.67 P
-0.17 (OSF shall not be liable for errors contained herein, or for any direct or indirect, incidental, special or consequential damages) 108 683.17 P
(in connection with the furnishing, performance, or use of this material.) 108 673.67 T
-0.09 ( Copyright) 108 661.17 P
3 14 Q
-0.17 (\343) 144.24 661.17 P
2 8 Q
-0.09 ( 1993 Open Software Foundation, Inc. This documentation and the software to which it relates are derived in) 155.29 661.17 P
(part from materials supplied by the following:) 108 651.67 T
3 14 Q
(\343) 110 639.17 T
2 8 Q
(Copyright 1990, 1991 Digital Equipment Corporation) 121.05 639.17 T
3 14 Q
(\343) 108 626.67 T
2 8 Q
( Copyright 1990, 1991 Hewlett-Packard Company) 119.05 626.67 T
3 14 Q
(\343) 108 614.17 T
2 8 Q
( Copyright 1989, 1990, 1991 T) 119.05 614.17 T
(ransarc Corporation) 218.06 614.17 T
3 14 Q
(\343) 108 601.67 T
2 8 Q
( Copyright 1990, 1991 Siemens Nixdorf Informationssysteme AG) 119.05 601.67 T
3 14 Q
(\343) 108 589.17 T
2 8 Q
( Copyright 1990, 1991 International Business Machines Corporation) 119.05 589.17 T
3 14 Q
(\343) 108 576.67 T
2 8 Q
( Copyright 1988, 1989 Massachusetts Institute of T) 119.05 576.67 T
(echnology) 282.84 576.67 T
3 14 Q
(\343) 108 564.17 T
2 8 Q
( Copyright 1988, 1989 The Regents of the University of California) 119.05 564.17 T
(All Rights Reserved) 108 551.67 T
(Printed in the U.S.A.) 108 539.17 T
(THIS DOCUMENT AND THE SOFTW) 108 526.67 T
(ARE DESCRIBED HEREIN ARE FURNISHED UNDER A LICENSE, AND) 238.14 526.67 T
(MA) 108 517.17 T
(Y BE USED AND COPIED ONL) 120.14 517.17 T
(Y IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE AND WITH THE) 228.83 517.17 T
(INCLUSION OF THE ABOVE COPYRIGHT NOTICE. TITLE T) 108 507.67 T
(O AND OWNERSHIP OF THE DOCUMENT AND) 322.38 507.67 T
(SOFTW) 108 498.17 T
(ARE REMAIN WITH OSF OR ITS LICENSORS.) 134.21 498.17 T
( Open Software Foundation, OSF) 108 485.67 T
(, the OSF logo, OSF/1, OSF/Motif, and Motif are trademarks of the Open Software Foun-) 214.63 485.67 T
(dation, Inc.) 108 476.17 T
(UNIX is a registered trademark of UNIX System Laboratories, Inc. in the U.S. and other countries.) 108 463.67 T
(DEC, DIGIT) 108 451.17 T
(AL, and UL) 149.1 451.17 T
(TRIX are registered trademarks of Digital Equipment Corporation. DECstation 3100 and DECnet) 187.23 451.17 T
(are trademarks of Digital Equipment Corporation.) 108 441.67 T
(HP) 108 429.17 T
(, Hewlett-Packard, and LaserJet are trademarks of Hewlett-Packard Company) 117.33 429.17 T
(.) 365.49 429.17 T
( Network Computing System and PasswdEtc are registered trademarks of Hewlett-Packard Company) 108 416.67 T
(.) 431.47 416.67 T
(AFS and T) 108 404.17 T
(ransarc are registered trademarks of the T) 142.81 404.17 T
(ransarc Corporation. Episode is a trademark of the T) 275.74 404.17 T
(ransarc Corpora-) 443.55 404.17 T
(tion.) 108 394.67 T
(Ethernet is a registered trademark of Xerox Corporation.) 108 382.17 T
(AIX and RISC System/6000 are trademarks of International Business Machines Corporation.) 108 369.67 T
(IBM is a registered trademark of International Business Machines Corporation.) 108 357.17 T
(DIR-X is a trademark of Siemens Nixdorf Informationssysteme AG. MX300i is a trademark of Siemens Nixdorf Informa-) 108 344.67 T
(tionssysteme AG.) 108 335.17 T
(NFS, Network File System, SunOS and Sun Microsystems are trademarks of Sun Microsystems, Inc.) 108 322.67 T
(X/Open is a trademark of the X/Open Company Limited in the U.K. and other countries.) 108 310.17 T
(PostScript is a trademark of Adobe Systems Incorporated.) 108 297.67 T
(FOR U.S. GOVERNMENT CUST) 108 285.17 T
(OMERS REGARDING THIS DOCUMENT) 220.02 285.17 T
(A) 363.07 285.17 T
(TION AND THE ASSOCIA) 367.95 285.17 T
(TED SOFT-) 459.22 285.17 T
(W) 108 275.67 T
(ARE) 114.66 275.67 T
(These notices shall be marked on any reproduction of this data, in whole or in part.) 108 263.17 T
(NOTICE: Notwithstanding any other lease or license that may pertain to, or accompany the delivery of, this computer soft-) 108 250.67 T
-0.18 (ware, the rights of the Government regarding its use, reproduction and disclosure are as set forth in Section 52.227-19 of the) 108 241.17 P
(F) 108 231.67 T
(ARS Computer Software-Restricted Rights clause.) 111.85 231.67 T
(RESTRICTED RIGHTS NOTICE: Use, duplication, or disclosure by the Government is subject to the restrictions as set) 108 219.17 T
(forth in subparagraph \050c\051\0501\051\050ii\051 of the Rights in T) 108 209.67 T
(echnical Data and Computer Software clause at DF) 264.66 209.67 T
(ARS 52.227-7013.) 428.16 209.67 T
(RESTRICTED RIGHTS LEGEND: Use, duplication or disclosure by the Government is subject to restrictions as set forth) 108 197.17 T
(in paragraph \050b\051\0503\051\050B\051 of the rights in T) 108 187.67 T
(echnical Data and Computer Software clause in DAR 7-104.9\050a\051. This computer) 234.67 187.67 T
(software is submitted with \322restricted rights.\323 Use, duplication or disclosure is subject to the restrictions as set forth in) 108 178.17 T
(NASA F) 108 168.67 T
(AR SUP 18-52.227-79 \050April 1985\051 \322Commercial Computer Software-Restricted Rights \050April 1985\051.\323 If the con-) 135.62 168.67 T
(tract contains the Clause at 18-52.227-74 \322Rights in Data General\323 then the \322Alternate III\323 clause applies.) 108 159.17 T
(US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract.) 108 146.67 T
(Unpublished - All rights reserved under the Copyright Laws of the United States.) 108 134.17 T
(This notice shall be marked on any reproduction of this data, in whole or in part.) 108 121.67 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
161.63 709.28 108 709.28 2 L
0 X
0 K
V
1.33 H
0 Z
N
0 14 Q
(Contents) 108 710.67 T
0 12 Q
(Intr) 108 690 T
(oduction) 128.44 690 T
2 F
(A Few W) 144 670 T
(ords About This Book 1-1) 189.67 670 T
(Our Audience 1-1) 144 650.5 T
(Our Methods 1-1) 144 631 T
(Notes on The Current Edition 1-2) 144 611.5 T
(Related Information 1-2) 144 592 T
(DCE RPC Runtime Design Goals 1-2) 144 572.5 T
(Service Paradigm 1-2) 144 553 T
(The Client\325) 144 533.5 T
(s V) 198.31 533.5 T
(iew 1-2) 213.91 533.5 T
(The Server) 144 514 T
(\325) 197.4 514 T
(s V) 200.73 514 T
(iew 1-2) 216.33 514 T
(The Application\325) 144 494.5 T
(s V) 225.62 494.5 T
(iew 1-2) 241.22 494.5 T
(Objects, Managers, Operations 1-2) 144 475 T
(Or) 144 455.5 T
(ganization of the Source Code 1-2) 156.44 455.5 T
(Logical Or) 144 436 T
(ganization 1-2) 196.07 436 T
(Physical Or) 144 416.5 T
(ganization 1-2) 200.08 416.5 T
0 F
(Fundamental Concepts) 108 397 T
2 F
(Threads 2-1) 144 377 T
(How the RPC Runtime Uses Threads 2-1) 144 357.5 T
(Thread Exception Model 2-1) 144 338 T
(Cancels 2-1) 144 318.5 T
(Fork Handling 2-1) 144 299 T
(Procedure Pointers 2-1) 144 279.5 T
(Error Propagation, Error Handling 2-3) 144 260 T
0 F
(Common Services) 108 240.5 T
2 F
(Mutex Services 3-2) 144 220.5 T
(Mutex and Condition V) 144 201 T
(ariable Data Structures 3-2) 256.94 201 T
(Mutex Service Internal Operations 3-5) 144 181.5 T
(List Services 3-6) 144 162 T
(UUID Services 3-7) 144 142.5 T
(Memory Object Services 3-7) 144 123 T
(Clock and T) 144 103.5 T
(imer Services 3-8) 202.88 103.5 T
(RPC T) 144 84 T
(imer Service Data Structures 3-9) 176.57 84 T
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
2 12 Q
0 X
0 K
(RPC Clock and T) 108 712 T
(imer Service Internal Operations 3-10) 192.54 712 T
(Establishing and Managing W) 108 692.5 T
(all Clock T) 252.62 692.5 T
(ime 3-1) 306.17 692.5 T
(1) 342.7 692.5 T
(Managing the T) 108 673 T
(imer Queue 3-12) 184.19 673 T
(The T) 108 653.5 T
(imer Loop 3-12) 136.56 653.5 T
(Call Thread Services 3-13) 108 634 T
(Principal Call Thread Data Structures and Their Relationships 3-14) 108 614.5 T
( Call Thread Service Internal Operations 3-17) 108 595 T
(Creating Thread Pools 3-18) 108 575.5 T
(Assigning a Thread to a Call 3-19) 108 556 T
(Shutting Down Thread Pools 3-21) 108 536.5 T
(The Call Thread Reaper 3-21) 108 517 T
(The Network Listener Thread 3-21) 108 497.5 T
(Common Binding Services 3-22) 108 478 T
(RPC Binding Service Data Structures 3-23) 108 458.5 T
(Common Binding Services Internal Operations 3-25) 108 439 T
(Allocating and Initializing a Binding 3-26) 108 419.5 T
(Operations on Individual Fields of Binding Data 3-27) 108 400 T
(String Binding Operations 3-27) 108 380.5 T
(Miscellaneous Public and Private Common Binding Routines 3-28) 108 361 T
(Freeing Binding Resources 3-28) 108 341.5 T
(Common Socket Services 3-29) 108 322 T
(Network Address Family Services 3-30) 108 302.5 T
(Major Data Structures 3-30) 108 283 T
(Common naf Services Internal Operations 3-31) 108 263.5 T
(Common Interface Registry Services 3-32) 108 244 T
(T) 108 224.5 T
(erminology 3-32) 114.49 224.5 T
(Interface Registry Data Structures 3-33) 108 205 T
( Common Interface Registry Internal Operations 3-35) 108 185.5 T
(Private/Internal Functions 3-36) 108 166 T
(Public Interfaces 3-38) 108 146.5 T
(Object Registry Services 3-38) 108 127 T
(Object Registry Data Structures 3-39) 108 107.5 T
(Object Registry Internal Operations 3-39) 108 88 T
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(RPC Nameservice Interface) 108 712 T
2 F
(A Brief Overview of NSI Services 4-1) 144 692 T
(Protocol T) 144 672.5 T
(ower Services 4-3) 194.13 672.5 T
(Protocol T) 144 653 T
(ower Data Structures 4-4) 194.13 653 T
(T) 144 633.5 T
(ower Service Internal Operations 4-6) 150.49 633.5 T
(Building Upper Floors 4-6) 144 614 T
(Building Lower Floors 4-7) 144 594.5 T
(T) 144 575 T
(ower Reference Manipulations 4-8) 150.49 575 T
(Examining Binding Data 4-8) 144 555.5 T
(Building T) 144 536 T
(owers from Binding Handles 4-8) 195.48 536 T
(Freeing Runtime T) 144 516.5 T
(ower Reference Structures 4-9) 234.44 516.5 T
(NSI Lookup Services 4-9) 144 497 T
(NSI Lookup Services Data Structures 4-10) 144 477.5 T
(Lookup Services Internal Operations 4-12) 144 458 T
(NSI Search Algorithm 4-13) 144 438.5 T
(Initialization 4-14) 144 419 T
(Binding Lookup 4-14) 144 399.5 T
(Binding Selection 4-16) 144 380 T
(Freeing Resources 4-16) 144 360.5 T
(NSI Binding Services 4-17) 144 341 T
(NSI Binding Services Data Structures 4-17) 144 321.5 T
(NSI Binding Services Internal Operations 4-17) 144 302 T
(Export Operations 4-17) 144 282.5 T
(Import Operations 4-18) 144 263 T
0 F
(Endpoint Mapping Services) 108 243.5 T
2 F
(Overview of Endpoint Services 5-2) 144 223.5 T
(The Endpoint Database 5-3) 144 204 T
(Major Endpoint Database Data Structures 5-4) 144 184.5 T
(Endpoint Database Internal Operations 5-8) 144 165 T
(Basic Database Management Routines 5-9) 144 145.5 T
(Endpoint Database Internal Operations 5-1) 144 126 T
(1) 349.4 126 T
(Common Endpoint Services 5-14) 144 106.5 T
(Registering Endpoint Entries 5-15) 144 87 T
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
2 12 Q
0 X
0 K
(Finding Matching Entries 5-17) 108 712 T
(Endpoint Services Data Structures 5-18) 108 692.5 T
(Common Endpoint Services Internal Operations 5-19) 108 673 T
(Public Endpoint Operations 5-19) 108 653.5 T
(Private Endpoint Mapper Operations 5-20) 108 634 T
(The Endpoint Mapper Manager EPV 5-21) 108 614.5 T
(Other Endpoint Mapper Services 5-22) 108 595 T
(Monitoring Server Liveness 5-22) 108 575.5 T
(Forwarding 5-23) 108 556 T
0 F
(Datagram Pr) 72 536.5 T
(otocol Service, part I) 139.39 536.5 T
2 F
(Datagram RPC Protocol Service Elements 6-1) 108 516.5 T
(Datagram RPC Packet Structure and Contents 6-3) 108 497 T
(Datagram RPC Packet T) 108 477.5 T
(ypes 6-4) 225.41 477.5 T
(The Datagram RPC Packet Header 6-5) 108 458 T
(Specialized Packet Body T) 108 438.5 T
(ypes 6-9) 236.74 438.5 T
(Flow Control 6-1) 108 419 T
(1) 190.85 419 T
(Flow Control on an Error) 108 399.5 T
(-Free Connection 6-13) 229.68 399.5 T
(Flow Control Under Lossy Conditions 6-14) 108 380 T
(Selective Acknowledgment 6-14) 108 360.5 T
(Packet Serialization 6-15) 108 341 T
(Retransmission Strategy 6-15) 108 321.5 T
(The Packet Pipeline 6-16) 108 302 T
(Activity IDs, Fragment, Sequence, and Serial Numbers 6-17) 108 282.5 T
(Major Datagram Protocol Service Data Structures 6-18) 108 263 T
(Reference Counts 6-18) 108 243.5 T
(T) 108 224 T
(ransmit and Receive Queues 6-19) 114.91 224 T
(T) 108 204.5 T
(ransmit Queues and Queue Elements 6-19) 114.91 204.5 T
(Receive Queues and Queue Elements 6-23) 108 185 T
(Client and Server Connection T) 108 165.5 T
(ables 6-25) 259.73 165.5 T
(Client Connection T) 108 146 T
(able and T) 205.11 146 T
(able Elements 6-25) 254.9 146 T
(Server Connection T) 108 126.5 T
(able and T) 207.09 126.5 T
(able Elements 6-26) 256.87 126.5 T
(Client and Server Call Handles 6-28) 108 107 T
(Common Call Handle Structure 6-29) 108 87.5 T
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
2 12 Q
0 X
0 K
(Common Datagram RPC Call Handles 6-30) 144 712 T
(Client Call Handle 6-33) 144 692.5 T
(Server Call Handle 6-35) 144 673 T
(Data Structure Relationships 6-35) 144 653.5 T
0 F
(Datagram Pr) 108 634 T
(otocol Service, part II) 175.39 634 T
2 F
(Call Handle States 7-1) 144 614 T
(Client Call Handle State T) 144 594.5 T
(ransitions 7-1) 270.84 594.5 T
(Server Call Handle State T) 144 575 T
(ransitions 7-3) 272.82 575 T
(Call T) 144 555.5 T
(ypes 7-6) 173.48 555.5 T
(Maybe Calls 7-7) 144 536 T
(Broadcast Calls 7-7) 144 516.5 T
(Idempotent Calls 7-8) 144 497 T
(Non-Idempotent Calls 7-9) 144 477.5 T
(Authenticated Calls 7-10) 144 458 T
(\322Slow\323 Calls 7-10) 144 438.5 T
(Multi-Fragment Calls 7-1) 144 419 T
(1) 266.82 419 T
(Extraordinary Conditions \050Rejects, Faults, Cancels, Orphans\051 7-12) 144 399.5 T
(Packet Processing in the Listener Thread 7-13) 144 380 T
(T) 144 360.5 T
(op-Level Packet Dispatching 7-14) 150.49 360.5 T
(Fack Handling 7-15) 144 341 T
(Forwarding 7-16) 144 321.5 T
(Forwarding a Packet 7-17) 144 302 T
(Processing a Forwarded Packet 7-18) 144 282.5 T
(The Packet Forwarding Function 7-19) 144 263 T
(Liveness, Context, and Conversation Callbacks 7-19) 144 243.5 T
(The Conversation Manager 7-20) 144 224 T
(Context Handle Support 7-22) 144 204.5 T
(The Server) 144 185 T
(-Side Client Representation 7-23) 196.71 185 T
(The convc_indy Operation 7-23) 144 165.5 T
(Server) 144 146 T
(-Side Listener Operations 7-24) 175.06 146 T
(Request Handling 7-24) 144 126.5 T
(Packet Rationing 7-25) 144 107 T
(Server Side Rationing Concerns 7-27) 144 87.5 T
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
2 12 Q
0 X
0 K
(Client Side Rationing Concerns 7-28) 108 712 T
(Major Packet Rationing Data Structures and Internal Operations 7-28) 108 692.5 T
(Call Execution 7-30) 108 673 T
(Ping Handling 7-33) 108 653.5 T
(Cancel Processing 7-33) 108 634 T
FMENDPAGE
%%EndPage: "8" 9
%%Page: "7" 9
612 792 0 FMBEGINPAGE
183.4 709.28 108 709.28 2 L
0 X
0 K
V
1.33 H
0 Z
N
0 14 Q
(List of Figur) 108 710.67 T
194.81 709.28 183.15 709.28 2 L
V
N
(es) 183.15 710.67 T
2 12 Q
(Using an Entrypoint V) 144 690 T
(ector 2-3) 251.6 690 T
(RPC List Or) 144 670.5 T
(ganization 3-7) 203.76 670.5 T
(The timer thread and timer queue. 3-10) 144 651 T
(RPC Clock and T) 144 631.5 T
(imer Operations 3-1) 228.54 631.5 T
(1) 324.69 631.5 T
(Default Call Thread Relationships 3-16) 144 612 T
(Reserved Pool Call Thread Relationships 3-17) 144 592.5 T
(Call Thread Services Internal Operations 3-18) 144 573 T
(The Call Thread Queue 3-20) 144 553.5 T
(Call Thread Queue Relationships 3-21) 144 534 T
(RPC Common Binding Services 3-26) 144 514.5 T
(String Binding Operations 3-28) 144 495 T
(Common Socket Services 3-30) 144 475.5 T
(Interface Registry and T) 144 456 T
(ype Info Lists 3-35) 260.06 456 T
(Common Interface Registry Internal Operations 3-36) 144 436.5 T
(Object Registry Internal Operations 3-39) 144 417 T
(Example NSI Entry T) 144 397.5 T
(ypes 4-2) 248.09 397.5 T
(CDS NSI Attributes 4-3) 144 378 T
(T) 144 358.5 T
(ower Data Layout 4-6) 150.49 358.5 T
(T) 144 339 T
(ower Service Routines 4-7) 150.49 339 T
(NSI Lookup Context, Nodes, and Elements 4-12) 144 319.5 T
(NSI Lookup Service Internal Operations 4-13) 144 300 T
(NSI Search Algorithm 4-14) 144 280.5 T
(Looking Up a Binding 4-16) 144 261 T
(The rpcd\325) 144 241.5 T
(s Role 5-2) 190.29 241.5 T
(Endpoint Database Entries and Lists 5-7) 144 222 T
(Getting an Entry into the Endpoint Database 5-8) 144 202.5 T
(Endpoint Database Internal Operations 5-9) 144 183 T
(Composing a Server Registration 5-15) 144 163.5 T
(ept_register pseudocode 5-16) 144 144 T
(Endpoint Database Entry Replacement 5-17) 144 124.5 T
(Endpoint Mapper Object/Interface Matching Rules 5-18) 144 105 T
(Common Endpoint Services Internal Operations 5-19) 144 85.5 T
FMENDPAGE
%%EndPage: "7" 10
%%Page: "8" 10
612 792 0 FMBEGINPAGE
2 12 Q
0 X
0 K
(Datagram RPC Protocol Service Elements 6-2) 108 712 T
(Datagram RPC Packet T) 108 692.5 T
(ypes and Directions 6-4) 225.41 692.5 T
(Packet Flags and Directions 6-8) 108 673 T
(Datagram RPC Packet Header Layout 6-9) 108 653.5 T
(Specialized Packet Bodies 6-1) 108 634 T
(1) 253.12 634 T
(Congestion W) 108 614.5 T
(indow Growth 6-13) 176.48 614.5 T
(Selective Acknowledgment 6-15) 108 595 T
(Activity ID, Fragment, Sequence, and Serial Number 6-18) 108 575.5 T
(Using Reference Counts 6-19) 108 556 T
(Call Handle Structures 6-29) 108 536.5 T
(Client Datagram RPC Data Structure Relationships 6-36) 108 517 T
(Server Datagram RPC Structure Relationships 6-37) 108 497.5 T
(Client Call Handle State T) 108 478 T
(ransitions 7-3) 234.84 478 T
(Server Call Handle State T) 108 458.5 T
(ransitions 7-4) 236.82 458.5 T
(Analyzing a Received Packet 7-5) 108 439 T
(A Maybe Call 7-7) 108 419.5 T
(A Broadcast Call 7-8) 108 400 T
(An Idempotent Call 7-9) 108 380.5 T
(A Non-Idempotent Call 7-10) 108 361 T
(A \322Slow\323 Call \050Idempotent\051 7-1) 108 341.5 T
(1) 262.11 341.5 T
(Multi-Packet Calls 7-12) 108 322 T
(Rejects, Faults, Cancels, and Orphans 7-13) 108 302.5 T
(Listener Thread Routines 7-15) 108 283 T
(Forwarding a Packet 7-18) 108 263.5 T
(Processing a Forwarded Packet 7-19) 108 244 T
(The Conversation Manager 7-22) 108 224.5 T
(Client Liveness Maintenance 7-24) 108 205 T
(Server Side Packet Rationing 7-27) 108 185.5 T
(Call Execution 7-32) 108 166 T
FMENDPAGE
%%EndPage: "8" 11
%%Page: "9" 11
612 792 0 FMBEGINPAGE
233.52 709.28 108 709.28 2 L
0 X
0 K
V
1.33 H
0 Z
N
0 14 Q
(List of Data Structur) 108 710.67 T
244.93 709.28 233.27 709.28 2 L
V
N
(es) 233.27 710.67 T
2 12 Q
(rpc_mutex_t data structure 3-3) 144 690 T
(rpc_mutex_stats_t data structure 3-4) 144 670.5 T
(rpc_cond_t data structure 3-4) 144 651 T
(rpc_cond_stats_t data structure 3-4) 144 631.5 T
(rpc_timer_t structure 3-9) 144 612 T
(cthread_elt_t structure 3-14) 144 592.5 T
(cthread_pool_elt_t structure 3-15) 144 573 T
(c) 144 553.5 T
(thread_queue_elt_t structure 3-15) 149.32 553.5 T
(rpc_cthread_pvt_info structure 3-16) 144 534 T
(rpc_binding_rep_t structure 3-23) 144 514.5 T
(rpc_naf_id_elt_t structure 3-31) 144 495 T
(rpc_addr_p_t structure 3-31) 144 475.5 T
(rpc_if_r) 144 456 T
(gy_entry_t structure 3-33) 182.41 456 T
(rpc_if_type_info_t structure 3-33) 144 436.5 T
(rpc_if_rep_t structure 3-34) 144 417 T
(rpc_obj_r) 144 397.5 T
(gy_entry_t structure 3-39) 190.41 397.5 T
(rpc_tower_\337oor_t data structure 4-4) 144 378 T
(rpc_tower_ref_t structure 4-5) 144 358.5 T
(rpc_tower_ref_vector_t structure 4-5) 144 339 T
(rpc_lkup_rep_t structure 4-10) 144 319.5 T
(rpc_lkup_node_t structure 4-1) 144 300 T
(1) 288.78 300 T
(rpc_lkup_mbr_t structure 4-1) 144 280.5 T
(1) 284.79 280.5 T
(rpc_import_rep_t structure 4-17) 144 261 T
(ept_entry_t structure 5-4) 144 241.5 T
(db_entry_t structure 5-5) 144 222 T
(db_lists_t structure 5-6) 144 202.5 T
(db_lists_mgmt_t structure 5-6) 144 183 T
(db_contexth_t structure 5-10) 144 163.5 T
(db structure 5-1) 144 144 T
(1) 219.5 144 T
(mgmt_ep_inq_rep_t data structure 5-18) 144 124.5 T
(rpc_dg_pkt_hdr_t structure 6-6) 144 105 T
(rpc_dg_fackpkt_body_t structure 6-10) 144 85.5 T
FMENDPAGE
%%EndPage: "9" 12
%%Page: "10" 12
612 792 0 FMBEGINPAGE
2 12 Q
0 X
0 K
(rpc_dg_xmitq_elt_t 6-20) 108 712 T
(rpc_dg_xmitq_elt_t structure 6-21) 108 692.5 T
(rpc_dg_recvq_elt_t structure 6-23) 108 673 T
(rpc_dg_recvq_t structure 6-24) 108 653.5 T
(rpc_dg_cct_elt_t structure 6-25) 108 634 T
(rpc_dg_cct_t structure 6-25) 108 614.5 T
(rpc_dg_cct_elt_ref_t structure 6-26) 108 595 T
(rpc_dg_sct_elt_t structure 6-27) 108 575.5 T
(rpc_call_rep_t structure 6-30) 108 556 T
(rpc_dg_call_t structure 6-31) 108 536.5 T
(rpc_dg_ccall_t structure 6-34) 108 517 T
(rpc_dg_scall_t structure 6-35) 108 497.5 T
(rpc_dg_client_rep_t structure 7-23) 108 478 T
(rpc_dg_pkt_pool_t structure 7-29) 108 458.5 T
(rpc_dg_pkt_pool_elt_t structure 7-30) 108 439 T
FMENDPAGE
%%EndPage: "10" 13
%%Page: "1" 13
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/15/93) 108 748 T
(Introduction) 480.03 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(1-1) 524.01 34.67 T
466.15 706.22 333.74 706.22 2 L
V
1.71 H
0 Z
N
0 18 Q
0.9 (Chapter 1: Intr) 333.74 708 S
540 706.22 465.83 706.22 2 L
V
N
0.9 (oduction) 465.83 708 S
163.96 589.28 108 589.28 2 L
V
1.33 H
N
0 14 Q
(A Few W) 108 590.67 T
294.98 589.28 163.19 589.28 2 L
V
N
(ords About This Book) 163.19 590.67 T
2 12 Q
(This book is the result of a cooperative ef) 144 570 T
(fort managed by OSF) 342.97 570 T
(, and drawing on) 445.61 570 T
(contributions from OSF) 144 556.5 T
(, Hewlett-Packard Company) 257.65 556.5 T
(, and Digital Equipment Cor-) 393.1 556.5 T
(poration. W) 144 543 T
(e intend it to stand alongside the DCE RPC Application Environment) 200.33 543 T
(Speci\336cation \050AES\051 and the DCE RPC source code, and expect it to furnish infor-) 144 529.5 T
(mation that programmers can use to help them better understand the DCE RPC) 144 516 T
(runtime implementation and its relationship to the facilities described in the AES.) 144 502.5 T
0 F
(Our Audience) 108 483 T
2 F
(W) 144 463 T
(e expect that our readers are:) 154.36 463 T
(\245) 144 443.5 T
(experienced software engineers, with a good understanding of modern soft-) 162 443.5 T
(ware engineering practices, the C programming language, and the Unix pro-) 162 430 T
(gramming environment.) 162 416.5 T
(\245) 144 397 T
(knowledgable about the various components of DCE, including the RPC run-) 162 397 T
(time, to the point where high-level conceptual information \050e.g., \322what is a) 162 383.5 T
(name service...\323\051 need not be generally included in this document.) 162 370 T
(\245) 144 350.5 T
(familiar with other protocol implementations, especially those described in) 162 350.5 T
(Internet RFC 768 \050UDP/IP\051 and 793 \050TCP/IP\051.) 162 337 T
(W) 144 317.5 T
(e have written this book for programmers who are working on the RPC runtime) 154.36 317.5 T
(implementation itself \050extending it, for example, or otherwise re\336ning its opera-) 144 304 T
(tions\051, rather than for application programmers who want to make use of DCE) 144 290.5 T
(RPC. While the latter may \336nd much of interest here, there are other documents) 144 277 T
(that concentrate on helping application programmers understand how to develop) 144 263.5 T
(DCE applications.) 144 250 T
0 F
(Our Methods) 108 230.5 T
2 F
(In general we rely on the AES to supply the of) 144 210.5 T
(\336cial descriptions of facilities and) 366.96 210.5 T
(their intended uses. As a rule, we do not, in this volume, reiterate the contents of) 144 197 T
-0.04 (that volume\325) 144 183.5 P
-0.04 (s functional descriptions \050man pages\051 or background information. W) 204.26 183.5 P
-0.04 (e) 531.72 183.5 P
(also rely on the code itself, which is generally well or) 144 170 T
(ganized and profusely com-) 400.6 170 T
(mented, to describe its own low level operations. W) 144 156.5 T
(e do not typically provide a) 392.2 156.5 T
(textual rendering \050e.g., functionA calls functionB, which calls functionC, \311\051 of) 144 143 T
(code internals except in cases where important implementation details have not) 144 129.5 T
(been \050or cannot be\051 adequately conveyed in the comments.) 144 116 T
(In this book, we want to \336ll in the space between the high-level, implementation-) 144 96.5 T
(generic description in the AES and the detailed information in the code and its) 144 83 T
FMENDPAGE
%%EndPage: "1" 14
%%Page: "2" 14
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Introduction) 72 748 T
(Revised 7/15/93) 427.05 748 T
(1-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(comments. W) 108 712 T
(e also want to describe why things are implemented in a particular) 173.66 712 T
-0.17 (way) 108 698.5 P
-0.17 (, and what kinds of trade-of) 127.2 698.5 P
-0.17 (fs are perhaps not explicitly obvious from the code) 258.7 698.5 P
(itself.) 108 685 T
0 F
(Notes on The Curr) 72 665.5 T
(ent Edition) 168.05 665.5 T
2 F
(This edition represents the initial phase of an ef) 108 645.5 T
(fort that is perhaps half \336nished.) 335.62 645.5 T
(T) 108 632 T
(ime constraints have limited our coverage of major topics and have resulted in) 114.91 632 T
-0.25 (sporadic glossings-over of material that deserves \050and will ultimately receive\051 a lit-) 108 618.5 P
(tle more description. Major topics not addressed in this edition include:) 108 605 T
(\245) 108 585.5 T
(Authenticated RPC) 126 585.5 T
(\245) 108 566 T
(Kernel RPC) 126 566 T
(\245) 108 546.5 T
(The connection-based protocol service.) 126 546.5 T
0 F
(Related Information) 72 527 T
2 F
(Material on this topic will be part of a future edition of this document.) 108 507 T
271 476.78 72 476.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(DCE RPC Runtime Design Goals) 72 478.17 T
2 12 Q
(Material on these topics will be part of a future edition of this document.) 108 457.5 T
0 F
(Service Paradigm) 72 438 T
(The Client\325) 72 418 T
(s V) 129.86 418 T
(iew) 145.74 418 T
(The Server) 72 398 T
(\325) 129.17 398 T
(s V) 132.72 398 T
(iew) 148.6 398 T
(The Application\325) 72 378 T
(s V) 158.52 378 T
(iew) 174.4 378 T
258.55 347.28 72 347.28 2 L
V
N
0 14 Q
(Objects, Managers, Operations) 72 348.67 T
2 12 Q
(Material on these topics will be part of a future edition of this document.) 108 328 T
220.86 297.78 72 297.78 2 L
V
N
0 14 Q
(Organization of the Sour) 72 299.17 T
267.63 297.78 220.61 297.78 2 L
V
N
(ce Code) 220.61 299.17 T
2 12 Q
(Material on these topics will be part of a future edition of this document.) 108 278.5 T
0 F
(Logical Organization) 72 259 T
(Physical Organization) 72 239 T
FMENDPAGE
%%EndPage: "2" 15
%%Page: "1" 15
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/22/93) 108 748 T
(Fundamental Concepts) 428.4 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(2-1) 524.01 34.67 T
540 706.22 245.76 706.22 2 L
V
1.71 H
0 Z
N
0 18 Q
0.9 (Chapter 2: Fundamental Concepts) 245.76 708 S
2 12 Q
-0.34 (Before we begin describing the RPC runtime\325) 144 592 P
-0.34 (s operations in detail, we think it will) 361.15 592 P
(prove useful to introduce our audience to several aspects of the implementation) 144 578.5 T
-0.25 (that have far) 144 565 P
-0.25 (-reaching consequences, or have implications that may not be immedi-) 203.2 565 P
-0.4 (ately obvious, or both. Nothing we describe here has the status of a discrete facility) 144 551.5 P
-0.45 (or module. For the most part, things discussed in this Chapter are things we believe) 144 538 P
(can bene\336t form a single, early) 144 524.5 T
(, statement of rationale and methodology) 291.77 524.5 T
(, which) 487.53 524.5 T
(will ground the reader in some of the more arcane practices adhered to by the) 144 511 T
(implementors and allow us, in later chapters, to skip lightly over what would oth-) 144 497.5 T
(erwise become tiresome and repetitious. While some of what we describe here) 144 484 T
-0.36 (would probably be easier to understand in context, we believe that with DCE RPC,) 144 470.5 P
(as with all examples of good software design, the abstractions themselves make) 144 457 T
(adequate sense. And besides, there is plenty of context available later in the book.) 144 443.5 T
131.32 413.28 108 413.28 2 L
V
1.33 H
N
0 14 Q
(Thr) 108 414.67 T
157.51 413.28 131.07 413.28 2 L
V
N
(eads) 131.07 414.67 T
2 12 Q
(Material in this section will supplied in a future edition of this document. The) 144 394 T
(intention is to provide a high-level view of thread use. Specialized uses of threads) 144 380.5 T
(are described along with the material on those services that use them. \050For exam-) 144 367 T
(ple, we describe Thread Pools in the section on Call Threads in Chapter 3.\051 Like-) 144 353.5 T
(wise, individual implementations of fork handlers are described along with the) 144 340 T
(descriptions of the facilities in which they run. The text here is intended to intro-) 144 326.5 T
(duce the concept of fork handling in a way that sets the stage for these later) 144 313 T
(descriptions.) 144 299.5 T
0 F
(How the RPC Runtime Uses Thr) 108 280 T
(eads) 275.34 280 T
(Thr) 108 260 T
(ead Exception Model) 127.78 260 T
(Cancels) 108 240 T
(Fork Handling) 108 220 T
122.76 189.28 108 189.28 2 L
V
N
0 14 Q
(Pr) 108 190.67 T
163.7 189.28 122.51 189.28 2 L
V
N
(ocedur) 122.51 190.67 T
222.9 189.28 163.45 189.28 2 L
V
N
(e Pointers) 163.45 190.67 T
2 12 Q
-0.2 (One of the more common implementation techniques in the RPC runtime involves) 144 170 P
(establishing a data structure we refer to as an entrypoint vector \050epv\051, which is) 144 156.5 T
(nothing more than a collection of pointers to procedures that typically perform a) 144 143 T
(generic function \050e.g., setting a network address\051 in a speci\336c way \050e.g., for an IP) 144 129.5 T
(address\051. The runtime\325) 144 116 T
(s need to support multiple protocols, network address fami-) 252.25 116 T
(lies, protocol sequences, nameservices, and so on, makes this sort of capability) 144 102.5 T
(extremely useful.) 144 89 T
FMENDPAGE
%%EndPage: "1" 16
%%Page: "2" 16
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Fundamental Concepts) 72 748 T
(Revised 7/22/93) 427.05 748 T
(2-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.37 (In many ways, this epv style \050as we\325ll call it\051 of programming is just a way to bring) 108 712 P
(object-oriented techniques to bear on what would otherwise be a tangle of facility-) 108 698.5 T
-0.2 (speci\336c code. By construing the generic functions \050e.g., setting a network address\051) 108 685 P
(as objects and the pointed-at implementations thereof as methods, it is possible to) 108 671.5 T
0 (build a system in which a suitable concatenation of object descriptors yields a pro-) 108 658 P
-0.2 (cedure call that invokes the appropriate method. T) 108 644.5 P
-0.2 (o make such concatenations pos-) 346.92 644.5 P
(sible, the runtime typically:) 108 631 T
(\245) 108 611.5 T
(or) 126 611.5 T
(ganizes information useful to the callers of epv-based functions as arrays or) 135.77 611.5 T
(lists.) 126 598 T
(\245) 108 578.5 T
(de\336nes a \336eld in each array element or list entry that is initialized to that) 126 578.5 T
-0.12 (entry\325) 126 565 P
-0.12 (s position in the array or list, such that the value for the \322i\325) 153.98 565 P
-0.12 (th\323 element of) 432.73 565 P
(one of these arrays is \322i.\323) 126 551.5 T
(\245) 108 532 T
(de\336nes half a dozen epv structures that provide entrypoints into implementa-) 126 532 T
(tion-dependent code that resides, for the most part, in the protocol services.) 126 518.5 T
(The runtime de\336nes epv structures that allow access to network address family) 108 499 T
(,) 485.28 499 T
(network, binding, security) 108 485.5 T
(, and call services. W) 233.14 485.5 T
(e describe these epvs and their) 334.76 485.5 T
(pointed-at members later in this book. Regardless of facility speci\336cs and other) 108 472 T
(implementation details, all epv calls look something like this:) 108 458.5 T
5 11 Q
(facility.epv->operation \050args\051) 180 439 T
2 12 Q
(The epv structure through which the call will be made is often found by \322building) 108 419.5 T
(up\323 an index based on information at hand. For example the Network Address) 108 406 T
(Family \050naf\051 services rely extensively on calls through the naf_epv structure,) 108 392.5 T
(which they reference as follows:) 108 379 T
(\050) 180 359.5 T
5 11 Q
(*rpc_g_naf_id[naf_id].epv->operation \050args\051\051) 183.99 359.5 T
2 12 Q
-0.27 (In many cases, the common part of the code is merely a means of handing of) 108 340 P
-0.27 (f ar) 472.18 340 P
-0.27 (gu-) 488.01 340 P
(ments to an epv member) 108 326.5 T
(, as is the case in the code fragment below \050from) 225.44 326.5 T
5 11 Q
(comnaf.c\051) 108 313 T
2 12 Q
(.) 167.33 313 T
5 11 Q
(void rpc__naf_addr_alloc \050protseq_id, naf_id, endpoint,) 126 294.17 T
(netaddr, network_options, rpc_addr, status\051) 126 282.17 T
(rpc_protseq_id_t        protseq_id;) 126 258.17 T
(rpc_naf_id_t            naf_id;) 126 246.17 T
(unsigned_char_p_t       endpoint;) 126 234.17 T
(unsigned_char_p_t       netaddr;) 126 222.17 T
(unsigned_char_p_t       network_options;) 126 210.17 T
(rpc_addr_p_t            *rpc_addr;) 126 198.17 T
(unsigned32              *status;) 126 186.17 T
({) 126 174.17 T
(\050*rpc_g_naf_id[naf_id].epv->naf_addr_alloc\051) 144 162.17 T
(\050protseq_id, naf_id, endpoint, netaddr,) 162 150.17 T
(network_options,rpc_addr, status\051;) 162 138.17 T
(}) 126 126.17 T
2 12 Q
(This style of constructing an epv index from one of the input \050to the epv\051 call\325) 108 101.5 T
(s) 481.42 101.5 T
(ar) 108 88 T
(guments can be illustrated, in prototype as shown in Figure 2-1.) 117.1 88 T
FMENDPAGE
%%EndPage: "2" 17
%%Page: "3" 17
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/22/93) 108 748 T
(Fundamental Concepts) 428.4 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(2-3) 524.01 34.67 T
(Figur) 247.11 712 T
(e 2-1: Using an Entrypoint V) 273.99 712 T
(ector) 412.24 712 T
2 F
-0.34 (Other facilities may simply reference the epv structure by name, as in this example) 144 523.13 P
(from the common portion of the network listener services code in) 144 509.63 T
5 11 Q
(comnet.c) 461.44 509.63 T
2 12 Q
(.) 514.18 509.63 T
5 11 Q
(PUBLIC void rpc_network_stop_monitoring) 162 490.8 T
(\050binding_h, client_h, status\051) 180 478.8 T
(rpc_binding_handle_t        binding_h;) 162 454.8 T
(rpc_client_handle_t         client_h;) 162 442.8 T
(unsigned32                  *status;) 162 430.8 T
({) 162 406.8 T
(rpc_protocol_id_t       protid;) 180 394.8 T
(rpc_prot_network_epv_p_t net_epv;) 180 382.8 T
(rpc_binding_rep_p_t     \134) 180 370.8 T
(binding_rep = \050) 216 358.8 T
(rpc_binding_rep_p_t\051 binding_h;) 314.88 358.8 T
(/*) 180 334.8 T
(* Get the protocol id from the binding handle) 180 322.8 T
(*/) 180 310.8 T
(protid = binding_rep->protocol_id;) 180 298.8 T
(net_epv = RPC_PROTOCOL_INQ_NETWORK_EPV \050protid\051;) 180 286.8 T
(/*) 180 262.8 T
(* Pass through to the network protocol routine.) 180 250.8 T
(*/) 180 238.8 T
(\050*net_epv->network_stop_mon\051) 198 226.8 T
(\050binding_rep, client_h, status\051;) 216 214.8 T
(}) 162 202.8 T
129.76 173.41 108 173.41 2 L
V
1.33 H
0 Z
N
0 14 Q
(Err) 108 174.8 T
160.98 173.41 129.51 173.41 2 L
V
N
(or Pr) 129.51 174.8 T
248.57 173.41 160.72 173.41 2 L
V
N
(opagation, Err) 160.72 174.8 T
321.02 173.41 248.32 173.41 2 L
V
N
(or Handling) 248.32 174.8 T
2 12 Q
(Material on this topic will be supplied in a future edition of this document.) 144 154.13 T
144 544.63 540 708 C
249.63 653.17 273.38 665.04 R
6 X
0 K
V
250.38 681.37 274.13 693.25 R
V
6 8 Q
0 X
(rpc__naf_addr_alloc \050 ..., naf_id, ..., ...\051) 162.25 686.37 T
(\050*rpc_g_naf_id[naf_id].epv->naf_addr_alloc\051) 195.38 656.79 T
264.79 672.56 261.5 667.54 258.8 672.9 3 L
0.5 H
0 Z
8 X
N
262.25 680.54 261.5 667.54 2 L
6 X
V
8 X
N
0 X
(rpc_naf_epv_t) 377.25 640.12 T
(...) 377.25 630.82 T
(...) 377.25 621.51 T
(naf_addr_alloc) 377.25 612.2 T
(...) 377.25 602.9 T
(...) 377.25 593.59 T
371.83 577.21 437.46 652.21 R
N
374.8 617.69 377.24 612.21 371.28 612.83 3 L
N
321 652.62 377.25 612.2 2 L
N
(rpc_naf_id_elt_t) 180 600.75 T
(naf_init) 180 590.59 T
(naf_id) 180 580.44 T
(network_if_id) 180 570.29 T
(*epv) 180 560.14 T
176.25 551.79 246.25 613.04 R
N
(rpc_g_naf_id[ ]) 156.25 632.62 T
366.2 592.2 371.83 590.13 367.22 586.29 3 L
N
196 560.14 371.83 590.12 2 L
N
0 0 612 792 C
144 544.63 540 708 R
3 H
0 Z
3 X
0 K
N
199.72 641.49 193.75 642 197.18 646.92 3 L
0.5 H
0 X
N
219.38 653.87 193.75 642 2 L
N
208 619.07 205 613.87 202 619.07 3 L
N
205 633.25 205 613.87 2 L
N
FMENDPAGE
%%EndPage: "3" 18
%%Page: "4" 18
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Fundamental Concepts) 72 748 T
(Revised 7/22/93) 427.05 748 T
(2-4) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
FMENDPAGE
%%EndPage: "4" 19
%%Page: "1" 19
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-1) 524.01 34.67 T
540 706.22 290.27 706.22 2 L
V
1.71 H
0 Z
N
0 18 Q
0.9 (Chapter 3: Common Services) 290.27 708 S
2 12 Q
(The RPC runtime library\325) 144 592 T
(s Common Communications Services are used by both) 266.93 592 T
(clients and servers, and by the connectionless and connection-oriented protocol) 144 578.5 T
(machinery) 144 565 T
(. These services include:) 193.85 565 T
(\245) 144 545.5 T
-0.11 (Mutex \050mutual exclusion\051 locking and condition variable services that provide) 162 545.5 P
(a means of controlling access to shared data during critical operations and oth-) 162 532 T
(erwise co-ordinating the activities of threads.) 162 518.5 T
(\245) 144 499 T
(List services that provide a generally useful system of doubly-linked lists.) 162 499 T
(\245) 144 479.5 T
(Memory object services that or) 162 479.5 T
(ganize and provide simple routines to manage) 311.01 479.5 T
(all fundamental in-memory objects created \050and deleted\051 by RPC runtime) 162 466 T
(operations.) 162 452.5 T
(\245) 144 433 T
(UUID services that create, examine, and manipulate Universal Unique IDenti-) 162 433 T
(\336ers.) 162 419.5 T
(\245) 144 400 T
(Clock services and related timer services that support the many interval-based) 162 400 T
(service routines included in the datagram and connection-oriented protocol) 162 386.5 T
(services.) 162 373 T
(\245) 144 353.5 T
(Call thread services that manage creation and assignment of the th) 162 353.5 T
5 11 Q
(r) 479.77 353.5 T
2 12 Q
(eads that) 486.36 353.5 T
(actually execute remote procedure calls in server manager code.) 162 340 T
(\245) 144 320.5 T
(Binding services that maintain the common parts of a binding\325) 162 320.5 T
(s internal repre-) 461.49 320.5 T
(sentation.) 162 307 T
(\245) 144 287.5 T
-0.47 (Socket and network address family services that provide a portable veneer over) 162 287.5 P
(a variety of host OS communication endpoints.) 162 274 T
(\245) 144 254.5 T
(Interface and Object registry services that maintain per) 162 254.5 T
(-server lists of sup-) 425.21 254.5 T
(ported object and interface UUIDs.) 162 241 T
-0.09 (Some of these services are conceptually straightforward and need only be touched) 144 221.5 P
(on brie\337y here to explain their place in the hierarchy of RPC runtime operations.) 144 208 T
(Others require somewhat more discussion, since many details of their design and) 144 194.5 T
(implementation are motivated by \050perhaps\051 non-obvious requirements of the RPC) 144 181 T
(protocol.) 144 167.5 T
(Nearly all of the services we describe in this chapter are de\336ned and implemented) 144 148 T
(in the source \336les) 144 134.5 T
5 11 Q
(rpc*.[ch]) 231.28 134.5 T
2 12 Q
( and) 290.6 134.5 T
5 11 Q
(com*.[ch]) 313.92 134.5 T
2 12 Q
(.) 373.24 134.5 T
FMENDPAGE
%%EndPage: "1" 20
%%Page: "2" 20
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
163.31 709.28 72 709.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Mutex Services) 72 710.67 T
2 12 Q
(As we noted in Chapter 2 of this document, the RPC runtime library makes exten-) 108 690 T
-0.1 (sive use of threads. Any multithreaded facility will have a frequent need to invoke) 108 676.5 P
(mutex \050mutual exclusion\051 locking of critical data, and a related need to use and) 108 663 T
(protect the condition variables that form the basis of thread synchronization. The) 108 649.5 T
(RPC runtime library provides a collection of functions and macros, de\336ned in) 108 636 T
5 11 Q
-0.12 (rpcmutex.c) 108 622.5 P
2 12 Q
-0.05 (and) 180.39 622.5 P
5 11 Q
-0.12 ( rpcmutex.h h) 197.71 622.5 P
2 12 Q
-0.05 (, that implement various mutex and condition) 283.17 622.5 P
(variable operations based on the mutex and condition variable services provided) 108 609 T
(by the DCE threads package. The RPC mutex services are designed to be more or) 108 595.5 T
(less independent of the underlying threads implementation, making it possible to) 108 582 T
(support DCE RPC over practically any pre-emptive multithreading facility) 108 568.5 T
(. In) 465.65 568.5 T
(addition, the macros and the functions that support them enforce the RPC runt-) 108 555 T
(ime\325) 108 541.5 T
(s idea of correct behavior regarding mutex locks. The macros also provide) 129.32 541.5 T
(optional debugging support tar) 108 528 T
(geted at uncovering a variety of lock-related prob-) 255.36 528 T
(lems. Since ef) 108 514.5 T
(\336cient use of mutex locking \050along with, of course, fundamentally) 175.4 514.5 T
(inexpensive mutex primitives\051 is important to RPC performance, the RPC mutex) 108 501 T
(macros provide a variety of statistics gathering instrumentation as well.) 108 487.5 T
(The RPC runtime library implements a two-tiered hierarchy of mutex locks, con-) 108 468 T
(sisting of:) 108 454.5 T
(\245) 108 435 T
-0.47 (A coarse-grained global mutex \050) 126 435 P
5 11 Q
-1.04 (rpc_g_global_mutex) 279.32 435 P
2 12 Q
-0.47 (\051 useful for protecting) 397.97 435 P
(global data structures. This mutex is typically used to protect memory alloca-) 126 421.5 T
(tion operations, as well as various queues and lists.) 126 408 T
(\245) 108 388.5 T
(A series of \336ner) 126 388.5 T
(-grained mutexes de\336ned by individual services.) 202.7 388.5 T
(Locks must be taken in order \050one cannot acquire the global mutex while holding) 108 369 T
(one of the \336ner) 108 355.5 T
(-grained ones without causing deadlock\051, so the order in which) 180.7 355.5 T
(locks are acquired is important. And, since no thread ever intentionally yields the) 108 342 T
-0.17 (processor while holding a mutex, careful consideration must be given to the granu-) 108 328.5 P
(larity of a mutex as well as to the length of time it is held. The use of mutex locks) 108 315 T
(in the user) 108 301.5 T
(-space runtime code re\337ects not only these constraints, but also the) 157.73 301.5 T
(desirability of having the runtime\325) 108 288 T
(s locking behavior behave in appropriate ways) 271.9 288 T
(in a Unix kernel context.) 108 274.5 T
-0.23 (One result of this locking strategy is that functions may need to do various explicit) 108 255 P
(lock/unlock/relock operations that preserve the required locking hierarchy at the) 108 241.5 T
(expense of \050at least brie\337y\051 unlocking critical data in a way that may leave it vul-) 108 228 T
(nerable to asynchronous activity) 108 214.5 T
(. The runtime uses a reference counting scheme,) 262.77 214.5 T
(which we describe on page 6-18, to provide a means of ensuring that even when) 108 201 T
-0.25 (unlocked, data structures of interest will not be freed. However) 108 187.5 P
-0.25 (, it is important that) 407.98 187.5 P
(all functions that must release and reacquire a lock validate the state of the refer-) 108 174 T
(enced data after reacquiring the lock but before proceeding further) 108 160.5 T
(. \050The function) 426.05 160.5 T
5 11 Q
(rpc__dg_execute_call) 108 147 T
2 12 Q
(, in the \336le) 239.84 147 T
5 11 Q
(dgexec.c) 294.14 147 T
2 12 Q
( provides a good example of) 346.88 147 T
(how to do this.\051) 108 133.5 T
0 F
(Mutex and Condition V) 72 114 T
(ariable Data Structur) 192.51 114 T
(es) 302.89 114 T
2 F
-0.06 (The two private datatypes associated with this facility are based, in this implemen-) 108 94 P
(tation, on the mutex and condition variable data structures de\336ned by the DCE) 108 80.5 T
FMENDPAGE
%%EndPage: "2" 21
%%Page: "3" 21
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-3) 524.01 34.67 T
2 F
-0.2 (threads package. T) 144 712 P
-0.2 (able 3-1 illustrates the fundamental DCE RPC mutex and condi-) 233.01 712 P
(tion variable data structures. Fields in shaded areas are only present if) 144 698.5 T
5 11 Q
(RPC_MUTEX_DEBUG) 144 685 T
2 12 Q
(has been de\336ned at compile time.) 249.47 685 T
4 F
(T) 250.83 667 T
(able 3-1: rpc_mutex_t data structur) 256.4 667 T
(e) 427.84 667 T
7 11 Q
(rpc_mutex_t {) 146 645.67 T
5 F
(m) 146 626.67 T
(/* a pthread_mutex_t, as def) 254 626.67 T
(ined in) 438.57 626.67 T
(pthread.h */) 254 613.67 T
(is_locked) 146 594.67 T
(/* true iff this mutex is locked */) 254 594.67 T
145.5 555.25 250.5 586.75 R
6 X
V
0 X
(owner) 146 575.67 T
253.5 555.25 538.5 586.75 R
6 X
V
0 X
(/* pthread_id of the thread that locked) 254 575.67 T
(this mutex \050valid iff locked\051 */) 254 562.67 T
145.5 523.25 250.5 554.75 R
6 X
V
0 X
(locker_f) 146 543.67 T
(ile) 198.73 543.67 T
253.5 523.25 538.5 554.75 R
6 X
V
0 X
-0.6 (/* name of src f) 254 543.67 P
-0.6 (ile in which this mutex was) 357.05 543.67 P
(most recently locked */) 254 530.67 T
145.5 491.25 250.5 522.75 R
6 X
V
0 X
(locker_line) 146 511.67 T
253.5 491.25 538.5 522.75 R
6 X
V
0 X
(/* line number where above lock was) 254 511.67 T
(acquired */) 254 498.67 T
145.5 472.25 250.5 490.75 R
6 X
V
0 X
(stats) 146 479.67 T
253.5 472.25 538.5 490.75 R
6 X
V
0 X
(/* statistics block for this mutex */) 254 479.67 T
7 F
(}) 146 460.67 T
142.75 658 142.75 452 2 L
V
0.5 H
0 Z
N
145.25 655.5 145.25 454.5 2 L
V
N
250.75 637.75 250.75 472.25 2 L
V
N
253.25 637.75 253.25 472.25 2 L
V
N
538.75 655.5 538.75 454.5 2 L
V
N
541.25 658 541.25 452 2 L
V
N
142.5 658.25 541.5 658.25 2 L
V
N
145 655.75 539 655.75 2 L
V
N
145.5 638 538.5 638 2 L
V
N
145.5 606 538.5 606 2 L
V
N
145.5 587 538.5 587 2 L
V
N
145.5 555 538.5 555 2 L
V
N
145.5 523 538.5 523 2 L
V
N
145.5 491 538.5 491 2 L
V
N
145.5 472 538.5 472 2 L
V
N
145 454.25 539 454.25 2 L
V
N
142.5 451.75 541.5 451.75 2 L
V
N
FMENDPAGE
%%EndPage: "3" 22
%%Page: "4" 22
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-4) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.31 (Condition variables employ a similar pairing of the condition variable itself and an) 108 712 P
(associated per) 108 457 T
(-condition-variable statistics block, as illustrated in T) 175.37 457 T
(able 3-3 and) 430.04 457 T
(T) 108 443.5 T
(able 3-4.) 114.49 443.5 T
-0.15 ( If) 108 129 P
5 11 Q
-0.34 (RPC_MUTEX_DEBUG) 121.68 129 P
2 12 Q
-0.15 ( or) 220.55 129 P
5 11 Q
-0.34 (RPC_MUTEX_STATS) 236.24 129 P
2 12 Q
-0.15 (has been de\336ned at compile time,) 341.37 129 P
(per) 108 115.5 T
(-mutex statistics can be gathered on:) 123.08 115.5 T
(\245) 108 96 T
(redundant lock requests \050requests to lock an already-locked mutex\051) 126 96 T
(\245) 108 76.5 T
(total) 126 76.5 T
5 11 Q
(RPC_MUTEX_LOCK) 150.32 76.5 T
2 12 Q
( operations) 242.61 76.5 T
4 F
(T) 200.84 694 T
(able 3-2: rpc_mutex_stats_t data structur) 206.4 694 T
(e) 405.84 694 T
7 11 Q
(rpc_mutex_stats_t {) 110 672.67 T
5 F
(busy) 110 653.67 T
(/* total requests to lock this mutex when) 218 653.67 T
(it was already locked */) 218 640.67 T
(lock) 110 621.67 T
(/* total locks taken */) 218 621.67 T
(try_locks) 110 602.67 T
(/* total try_lock operations attempted */) 218 602.67 T
(unlocks) 110 583.67 T
(/* total unlock operations */) 218 583.67 T
(init) 110 564.67 T
(/* total inits on this mutex */) 218 564.67 T
(lock_assert) 110 545.67 T
(/* total lock_assert operations on this) 218 545.67 T
(mutex */) 218 532.67 T
(unlock_assert) 110 513.67 T
(/* and vice-versa */) 218 513.67 T
7 F
(}) 110 494.67 T
4 12 Q
(T) 215.18 425.5 T
(able 3-3: rpc_cond_t data structur) 220.74 425.5 T
(e) 386.86 425.5 T
7 11 Q
(rpc_cond_t {) 105.36 404.17 T
5 F
(c) 105.36 385.17 T
-0.2 (/* a pthread condition variable, def) 213.36 385.17 P
-0.2 (ined in) 449.67 385.17 P
(pthread.h */) 213.36 372.17 T
(mp) 105.36 353.17 T
(/* and its associated mutex */) 213.36 353.17 T
(stats) 105.36 334.17 T
(/* the statistics block for this condition) 213.36 334.17 T
(variable */) 213.36 321.17 T
7 F
(}) 105.36 302.17 T
4 12 Q
(T) 203.5 274.5 T
(able 3-4: rpc_cond_stats_t data structur) 209.06 274.5 T
(e) 403.18 274.5 T
7 11 Q
(rpc_cond_stats_t) 110 253.17 T
5 F
(init) 110 234.17 T
(/* total inits */) 218 234.17 T
(delete) 110 215.17 T
(/* total deletes */) 218 215.17 T
(wait) 110 196.17 T
(/* total waits */) 218 196.17 T
(signals) 110 177.17 T
(/* total signals + broadcasts */) 218 177.17 T
7 F
(}) 110 158.17 T
106.75 685 106.75 486 2 L
V
0.5 H
0 Z
N
109.25 682.5 109.25 488.5 2 L
V
N
214.75 664.75 214.75 506.25 2 L
V
N
217.25 664.75 217.25 506.25 2 L
V
N
502.75 682.5 502.75 488.5 2 L
V
N
505.25 685 505.25 486 2 L
V
N
106.5 685.25 505.5 685.25 2 L
V
N
109 682.75 503 682.75 2 L
V
N
109.5 665 502.5 665 2 L
V
N
109.5 633 502.5 633 2 L
V
N
109.5 614 502.5 614 2 L
V
N
109.5 595 502.5 595 2 L
V
N
109.5 576 502.5 576 2 L
V
N
109.5 557 502.5 557 2 L
V
N
109.5 525 502.5 525 2 L
V
N
109.5 506 502.5 506 2 L
V
N
109 488.25 503 488.25 2 L
V
N
106.5 485.75 505.5 485.75 2 L
V
N
102.11 416.5 102.11 293.5 2 L
V
N
104.61 414 104.61 296 2 L
V
N
210.11 396.25 210.11 313.75 2 L
V
N
212.61 396.25 212.61 313.75 2 L
V
N
502.75 414 502.75 296 2 L
V
N
505.25 416.5 505.25 293.5 2 L
V
N
101.86 416.75 505.5 416.75 2 L
V
N
104.36 414.25 503 414.25 2 L
V
N
104.86 396.5 502.5 396.5 2 L
V
N
104.86 364.5 502.5 364.5 2 L
V
N
104.86 345.5 502.5 345.5 2 L
V
N
104.86 313.5 502.5 313.5 2 L
V
N
104.36 295.75 503 295.75 2 L
V
N
101.86 293.25 505.5 293.25 2 L
V
N
106.75 265.5 106.75 149.5 2 L
V
N
109.25 263 109.25 152 2 L
V
N
214.75 245.25 214.75 169.75 2 L
V
N
217.25 245.25 217.25 169.75 2 L
V
N
502.75 263 502.75 152 2 L
V
N
505.25 265.5 505.25 149.5 2 L
V
N
106.5 265.75 505.5 265.75 2 L
V
N
109 263.25 503 263.25 2 L
V
N
109.5 245.5 502.5 245.5 2 L
V
N
109.5 226.5 502.5 226.5 2 L
V
N
109.5 207.5 502.5 207.5 2 L
V
N
109.5 188.5 502.5 188.5 2 L
V
N
109.5 169.5 502.5 169.5 2 L
V
N
109 151.75 503 151.75 2 L
V
N
106.5 149.25 505.5 149.25 2 L
V
N
FMENDPAGE
%%EndPage: "4" 23
%%Page: "5" 23
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-5) 524.01 34.67 T
2 F
(\245) 144 712 T
(total) 162 712 T
5 11 Q
(RPC_MUTEX_TRY_LOCK) 186.32 712 T
2 12 Q
( operations attempted) 304.98 712 T
(\245) 144 692.5 T
(total) 162 692.5 T
5 11 Q
(RPC_MUTEX_UNLOCK) 186.32 692.5 T
2 12 Q
(operations) 298.38 692.5 T
(\245) 144 673 T
(total) 162 673 T
5 11 Q
(RPC_MUTEX_INIT) 186.32 673 T
2 12 Q
( operations) 278.61 673 T
(\245) 144 653.5 T
(total) 162 653.5 T
5 11 Q
(RPC_MUTEX_DELETE) 186.32 653.5 T
2 12 Q
( operations) 291.79 653.5 T
(\245) 144 634 T
(total) 162 634 T
5 11 Q
(RPC_MUTEX_LOCK_ASSERT) 186.32 634 T
2 12 Q
( operations) 324.75 634 T
0 F
(Mutex Service Internal Operations) 108 614.5 T
2 F
(All operations on mutexes and condition variables are normally invoked via the) 144 594.5 T
-0.45 (following macros, which arrange for the collection of statistics and enforce various) 144 581 P
(rules regarding mutex and condition variable use.) 144 567.5 T
5 11 Q
(RPC_MUTEX_INIT) 144 548.67 T
2 12 Q
(initializes an) 216 536 T
5 11 Q
(rpc_mutex_t) 279.96 536 T
2 12 Q
( and, optionally) 352.47 536 T
(, the associated statis-) 426.65 536 T
(tics and debug information) 216 522.5 T
5 11 Q
(RPC_MUTEX_DELETE) 144 503.67 T
2 12 Q
(Deletes a mutex) 216 491 T
5 11 Q
(RPC_MUTEX_LOCK) 144 472.17 T
2 12 Q
(Locks a mutex) 216 459.5 T
5 11 Q
(RPC_MUTEX_TRY_LOCK) 144 440.67 T
2 12 Q
(Executes the \050nonblocking\051 try_lock operation) 216 428 T
5 11 Q
(RPC_MUTEX_UNLOCK) 144 409.17 T
2 12 Q
(Unlocks a mutex) 216 396.5 T
5 11 Q
(RPC_MUTEX_LOCK_ASSERT) 144 377.67 T
2 12 Q
(Asserts that a mutex is locked) 216 365 T
5 11 Q
(RPC_MUTEX_UNLOCK_ASSERT) 144 346.17 T
2 12 Q
(Asserts that a mutex is not locked) 216 333.5 T
5 11 Q
(RPC_COND_INIT) 144 314.67 T
2 12 Q
(Initializes a condition variable) 216 302 T
5 11 Q
(RPC_COND_DELETE) 144 283.17 T
2 12 Q
(Deletes a condition variable) 216 270.5 T
5 11 Q
(RPC_COND_WAIT) 144 251.67 T
2 12 Q
(W) 216 239 T
(rapper for) 226.84 239 T
5 11 Q
(pthread_cond_wait) 277.45 239 T
2 12 Q
(\050see) 396.11 239 T
5 11 Q
(pthread.c) 418.41 239 T
2 12 Q
(\051.) 477.74 239 T
5 11 Q
(RPC_COND_TIMED_WAIT) 144 220.17 T
2 12 Q
(W) 216 207.5 T
(rapper for) 226.84 207.5 T
5 11 Q
(pthread_cond_timed_wait) 277.45 207.5 T
(RPC_COND_SIGNAL) 144 188.67 T
2 12 Q
(W) 216 176 T
(rapper for) 226.84 176 T
5 11 Q
(pthread_cond_signal) 277.45 176 T
2 12 Q
(The underlying routines that support these macros are implemented in) 144 156.5 T
5 11 Q
(rpcmutex.c) 144 143 T
2 12 Q
( \050as well as in the DCE threads package\051 and are lar) 209.92 143 T
(gely self-explan-) 457.82 143 T
(atory) 144 129.5 T
(. They are never called directly) 167.87 129.5 T
(.) 316.29 129.5 T
FMENDPAGE
%%EndPage: "5" 24
%%Page: "6" 24
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-6) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
147.78 709.28 72 709.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(List Services) 72 710.67 T
2 12 Q
(The RPC runtime library maintains numerous lists, and provides a common list) 108 690 T
(management mechanism used by several runtime components, principally the) 108 676.5 T
(Name Service Interface and the connection-oriented RPC protocol service. The) 108 663 T
(\336les) 108 649.5 T
5 11 Q
(rpclist.h) 130.99 649.5 T
2 12 Q
( and) 190.32 649.5 T
5 11 Q
( rpclist.c) 210.63 649.5 T
2 12 Q
( implement this facility using a lookaside) 276.55 649.5 T
(model, which can, it is hoped, be implemented in ways that take advantage of) 108 636 T
(memory-management optimizations on a variety of architectures to reduce the) 108 622.5 T
-0.51 (number of instances in which list-item memory must be allocated/freed. These lists) 108 609 P
(are doubly-linked. The list head includes a pointer to the \336rst and last elements in) 108 595.5 T
(the list. New list elements are typically added to the end of a list, since that is the) 108 582 T
-0.28 (most ef) 108 568.5 P
-0.28 (\336cient add operation. When addition of a new element would cause a list to) 143.15 568.5 P
(exceed its maximum allowable size, the element is returned to heap storage) 108 555 T
(instead.) 108 541.5 T
(The \336le) 108 522 T
5 11 Q
(rpclist.h) 147.97 522 T
2 12 Q
( de\336nes the structure of a list element and a list, and provides) 207.3 522 T
-0.28 (macros used for manipulating these lists. The underlying list management routines) 108 508.5 P
(in) 108 495 T
5 11 Q
(rpclist.c) 120.33 495 T
2 12 Q
( should not, as a rule, be called directly) 179.65 495 T
(.) 366.74 495 T
-0.08 (Structures kept on lists accessed via the) 108 475.5 P
5 11 Q
-0.17 (RPC_LIST*) 300.32 475.5 P
2 12 Q
-0.08 ( macros may live on only one) 359.64 475.5 P
(list at a time. A structure is said to be \322on\323 one of these lists by virtue of being) 108 462 T
-0.28 (linked to the list through the structure\325) 108 448.5 P
-0.28 (s \336rst member) 290.2 448.5 P
-0.28 (. This member) 357.6 448.5 P
-0.28 (, which must be) 426.18 448.5 P
(\336rst and is often named \322link,\323 is de\336ned as an) 108 435 T
5 11 Q
(rpc_list_t) 335.52 435 T
2 12 Q
(, which has two) 401.43 435 T
-0.43 (\336elds:) 108 421.5 P
5 11 Q
-0.95 (next) 139.89 421.5 P
2 12 Q
-0.43 ( and) 166.26 421.5 P
5 11 Q
-0.95 (last) 188.71 421.5 P
2 12 Q
-0.43 (. The list manipulation macros cast this member to a pointer) 215.08 421.5 P
-0.43 (,) 498.43 421.5 P
(then perform list operations by referencing through the) 108 408 T
5 11 Q
(rpc_list_t) 374.47 408 T
2 12 Q
(\325) 440.39 408 T
(s) 443.72 408 T
5 11 Q
(next) 451.39 408 T
2 12 Q
( and) 477.75 408 T
5 11 Q
-0.08 (last) 108 394.5 P
2 12 Q
-0.04 ( structure elements. Enqueuing a given structure on a second list would over-) 134.37 394.5 P
(write these \336elds, ef) 108 381 T
(fectively removing the structure from the \336rst list. Figure 3-1) 204.38 381 T
(illustrates this relationship.) 108 367.5 T
FMENDPAGE
%%EndPage: "6" 25
%%Page: "7" 25
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-7) 524.01 34.67 T
(Figur) 257.82 712 T
(e 3-1: RPC List Or) 284.7 712 T
(ganization) 375.53 712 T
196.21 405.78 108 405.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(UUID Services) 108 407.17 T
2 12 Q
(Information on this subject will be part of a future release of this document.) 144 386.5 T
255.65 356.28 108 356.28 2 L
V
N
0 14 Q
(Memory Object Services) 108 357.67 T
2 12 Q
(The \336les) 144 337 T
5 11 Q
(rpcmem.c) 188.64 337 T
2 12 Q
( and) 241.37 337 T
5 11 Q
(rpcmem.h) 264.69 337 T
2 12 Q
( provide the basis for a generalized memory-) 317.42 337 T
(management facility for data structures used by the RPC runtime library) 144 323.5 T
(. This) 489.65 323.5 T
(facility de\336nes a number of RPC \322memory object\323 datatypes and supplies an) 144 310 T
(upper bound to the number of objects so de\336ned.) 144 296.5 T
(The fundamental RPC memory management model is de\336ned at compile time as) 144 277 T
(either in-line or out-of-line. Out-of-line is the default.) 144 263.5 T
(Memory allocation, reallo-) 403.81 263.5 T
(cation, and deallocation operations have been wrapped in macros \050) 144 250 T
5 11 Q
(RPC_MEM_AL-) 463.74 250 T
-0.13 (LOC, RPC_MEM_FREE,) 144 236.5 P
-0.13 (RPC_MEM_REALLOC) 268.98 236.5 P
2 12 Q
-0.06 (\051 that, in addition to performing the) 367.86 236.5 P
(indicated operations, allow the RPC runtime library to maintain per) 144 223 T
(-type statistics) 467.56 223 T
(on:) 144 209.5 T
(\245) 144 190 T
(number of these objects currently allocated) 162 190 T
(\245) 144 170.5 T
(total number of these objects allocated since RPC runtime initialization.) 162 170.5 T
(\245) 144 151 T
(total number of allocation requests denied \050attempt returned) 162 151 T
5 11 Q
(ENOMEM) 452.46 151 T
2 12 Q
(\051 for this) 492.01 151 T
(type since RPC runtime initialization) 162 137.5 T
(\245) 144 118 T
(lar) 162 118 T
(gest extent of memory ever allocated for any object of this type.) 174.44 118 T
(Creation of new types for which storage will need to be allocated will require add-) 144 98.5 T
(ing the de\336nition to the list of) 144 85 T
5 11 Q
(#def) 289.6 85 T
(ine) 315.97 85 T
2 12 Q
(s in) 335.74 85 T
5 11 Q
(rpcmem.h) 355.74 85 T
2 12 Q
(.) 408.47 85 T
144 432 540 708 C
324.21 661.28 372.43 683.25 R
5 X
0 K
V
0.5 H
0 Z
0 X
N
324.21 639.32 372.43 661.29 R
5 X
V
0 X
N
324.21 617.36 372.43 639.32 R
5 X
V
0 X
N
324.21 595.39 372.43 617.36 R
5 X
V
0 X
N
324.21 573.43 372.43 595.39 R
5 X
V
0 X
N
324.21 551.46 372.43 573.43 R
5 X
V
0 X
N
324.21 529.5 372.43 551.46 R
5 X
V
0 X
N
324.21 507.53 372.43 529.5 R
5 X
V
0 X
N
324.21 485.57 372.43 507.53 R
5 X
V
0 X
N
324.21 463.6 372.43 485.57 R
5 X
V
0 X
N
324.21 441.64 372.43 463.61 R
5 X
V
0 X
N
6 8 Q
(struct item {) 168.05 626.05 T
(link) 168.05 616.74 T
(data) 168.05 607.43 T
(cruft) 168.05 598.13 T
(junk) 168.05 588.82 T
(}) 168.05 579.51 T
162.7 574.08 214.12 636.23 R
N
(struct item {) 477.04 606.41 T
(link) 477.04 597.1 T
(data) 477.04 587.79 T
(cruft) 477.04 578.49 T
(junk) 477.04 569.18 T
(}) 477.04 559.88 T
471.68 554.44 523.11 616.59 R
N
(item->link.next) 239.3 620.87 T
(item->link.last) 239.3 611.56 T
235.02 604.8 295.56 630.51 R
8 X
N
0 X
(item->link.next) 401.5 604.27 T
(item->link.last) 401.5 594.96 T
397.22 588.2 457.75 613.91 R
8 X
N
0 X
(rpc_list_t list_of_items) 314.57 690.75 T
227.14 622.62 232.34 619.62 227.14 616.62 3 L
N
181.98 619.62 232.34 619.62 2 L
N
(item 1) 337.61 646.82 T
(item 2) 336.54 624.66 T
(list_head) 333.32 669.99 T
327.8 624.33 333 621.33 327.8 618.33 3 L
N
294.88 621.33 333 621.33 2 L
N
464.2 597 459 600 464.2 603 3 L
N
477 600 459 600 2 L
N
0 0 612 792 C
144 432 540 708 R
4 H
0 Z
4 X
0 K
N
368.95 602.54 363.75 605.54 368.95 608.54 3 L
0.5 H
0 X
N
398.13 605.54 363.75 605.54 2 L
N
368.58 455.66 364.36 451.39 362.77 457.17 3 L
N
401.25 595.75 364.38 451.37 2 L
N
339.45 452.86 338.11 447.01 333.71 451.09 3 L
N
287.5 611.37 338.13 447 2 L
N
FMENDPAGE
%%EndPage: "7" 26
%%Page: "8" 26
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-8) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(Memory allocation requests can be speci\336ed as blocking or non-blocking. It\325) 108 712 T
(s) 476.08 712 T
(important, though, to note that a blocking allocation request \050one specifying) 108 698.5 T
5 11 Q
(RPC_MEM_WAITOK) 108 685 T
2 12 Q
(\051 made by a process holding a mutex can result in deadlock if) 200.29 685 T
(the requestor yields the processor) 108 671.5 T
(.) 267.88 671.5 T
145.87 641.28 72 641.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Clock and T) 72 642.67 T
226.04 641.28 145.61 641.28 2 L
V
N
(imer Services) 145.61 642.67 T
2 12 Q
(The request/response nature of the DCE RPC protocol requires that the runtime) 108 622 T
(library be able to order events in time, and to have a way of knowing how long it) 108 608.5 T
-0.05 (has been since something happened, or how long it will be until something should) 108 595 P
-0.4 (happen \050or happen again\051. W) 108 581.5 P
-0.4 (ithout such abilities, it would be impossible to tell, for) 245.46 581.5 P
-0.37 (example, whether a remote call was making timely progress toward completion, or) 108 568 P
-0.14 (whether attempts by a client to contact a server had gone on \322long enough\323 to war-) 108 554.5 P
(rant another course of action. In addition, like many other complex systems, the) 108 541 T
(RPC runtime library needs to perform periodic tasks such as garbage collection.) 108 527.5 T
(The RPC runtime\325) 108 508 T
(s clock and timer services, implemented in the \336les) 195.96 508 T
5 11 Q
(rpcclock.[ch]) 108 494.5 T
2 12 Q
( and) 193.69 494.5 T
5 11 Q
(rpctimer.[ch]) 217.01 494.5 T
2 12 Q
( provide mechanisms for handling all of) 302.7 494.5 T
(these chores.) 108 481 T
(The clock service provides routines that:) 108 461.5 T
(\245) 108 442 T
(maintain a global \322wall clock\323 time based on the system clock) 126 442 T
(\245) 108 422.5 T
(compensate for adjustments to system time that might otherwise af) 126 422.5 T
(fect the) 446.58 422.5 T
(expected monotonicity of the clock service\325) 126 409 T
(s timestamps) 335.51 409 T
(\245) 108 389.5 T
(return a monotonically-increasing timestamp used in various ways, primarily) 126 389.5 T
(by the protocol services) 126 376 T
(\245) 108 356.5 T
(determine whether a particular timestamp has aged by a given interval) 126 356.5 T
(\245) 108 337 T
(determine whether a particular timestamp has expired relative to the current) 126 337 T
(wall clock time maintained by the operating system) 126 323.5 T
-0.24 (The timer service is the primary consumer of the clock services, and is responsible) 108 304 P
(for all periodic operations within the RPC runtime. The basic operations of the) 108 290.5 T
(timer service can be summarized as follows:) 108 277 T
(\245) 108 257.5 T
(Periodic task information is maintained as a singly-linked list of) 126 257.5 T
5 11 Q
-0.16 (rpc_timer_t) 126 244 P
2 12 Q
-0.07 (structures. Structures on the list are ordered by \322trigger time,\323) 204.94 244 P
(where trigger time is an) 126 230.5 T
5 11 Q
(rpc_clock_t) 242.91 230.5 T
2 12 Q
( value representing the time at which a) 315.42 230.5 T
(\322timer routine\323 associated with the structure is to be run.) 126 217 T
(\245) 108 197.5 T
(A timer thread, kicked of) 126 197.5 T
(f at runtime initialization, periodically wakes up and) 246.69 197.5 T
-0.18 (begins a sequential examination of the tasks \050) 126 184 P
5 11 Q
-0.39 (rpc_timer_t) 342.94 184 P
2 12 Q
-0.18 ( structures\051 on the) 415.45 184 P
-0.27 (timer chain. If a task\325) 126 170.5 P
-0.27 (s trigger time has arrived \050or has passed\051, the timer thread) 227.18 170.5 P
(runs the associated routine. Once this traversal encounters a structure with a) 126 157 T
(trigger time that is \322in the future,\323 the timer thread stores that trigger time in a) 126 143.5 T
(global variable and goes to sleep until then.) 126 130 T
(In addition, the timer service provides the means to register and unregister a peri-) 108 110.5 T
-0.3 (odic routine \050add it to or remove it from the list\051, and to make in-place adjustments) 108 97 P
-0.13 (to a registered routine. Every call registers such a routine as part of the call startup) 108 83.5 P
FMENDPAGE
%%EndPage: "8" 27
%%Page: "9" 27
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-9) 524.01 34.67 T
2 F
(process. These routines typically handle such chores as client-to-server \322ping\323) 144 712 T
-0.12 (messages, retransmission, and the decision to terminate a call when the one end or) 144 698.5 P
(the other proves to be unreachable.) 144 685 T
0 F
(RPC T) 108 665.5 T
(imer Service Data Structur) 143.43 665.5 T
(es) 282.1 665.5 T
2 F
-0.14 (There is only one fundamental data structure associated with timer \050and clock\051 ser-) 144 645.5 P
(vices. T) 144 632 T
(able 3-5 illustrates and describes the \336elds of this structure, the) 181.13 632 T
5 11 Q
(rpc_timer_t) 144 618.5 T
2 12 Q
(.) 216.51 618.5 T
(Figure 3-2 illustrates how these structures are linked together to form the timer) 144 384 T
(queue. All operations that change the state of the timer queue are protected by the) 144 370.5 T
-0.28 (timer mutex \050a second-level mutex\051, so that timer routine registrations and unregis-) 144 357 P
-0.16 (trations can only take place while the timer thread is asleep, and are blocked while) 144 343.5 P
(the timer queue is being serviced. The timer queue has an associated condition) 144 330 T
(variable.) 144 316.5 T
4 F
(T) 264.65 600.5 T
(able 3-5: rpc_timer_t structur) 270.22 600.5 T
(e) 414.02 600.5 T
7 11 Q
(rpc_timer_t {) 146 579.17 T
5 F
(*next) 146 560.17 T
(/* pointer to the next) 254 560.17 T
(rpc_timer_t in the) 405.61 560.17 T
(timer queue */) 254 547.17 T
(trigger) 146 528.17 T
(/* next trigger time \050) 254 528.17 T
(rpc_clock_t\051 when) 399.02 528.17 T
(this event should occur */) 254 515.17 T
(frequency) 146 496.17 T
(/* frequency \050rpc_clock_t\051 with which this) 254 496.17 T
(event should occur */) 254 483.17 T
(proc) 146 464.17 T
(/* service routine associated with this) 254 464.17 T
(event */) 254 451.17 T
(parg) 146 432.17 T
(/* argument passed to service routine */) 254 432.17 T
7 F
(}) 146 413.17 T
142.75 591.5 142.75 404.5 2 L
V
0.5 H
0 Z
N
145.25 589 145.25 407 2 L
V
N
250.75 571.25 250.75 424.75 2 L
V
N
253.25 571.25 253.25 424.75 2 L
V
N
538.75 589 538.75 407 2 L
V
N
541.25 591.5 541.25 404.5 2 L
V
N
142.5 591.75 541.5 591.75 2 L
V
N
145 589.25 539 589.25 2 L
V
N
145.5 571.5 538.5 571.5 2 L
V
N
145.5 539.5 538.5 539.5 2 L
V
N
145.5 507.5 538.5 507.5 2 L
V
N
145.5 475.5 538.5 475.5 2 L
V
N
145.5 443.5 538.5 443.5 2 L
V
N
145.5 424.5 538.5 424.5 2 L
V
N
145 406.75 539 406.75 2 L
V
N
142.5 404.25 541.5 404.25 2 L
V
N
FMENDPAGE
%%EndPage: "9" 28
%%Page: "10" 28
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-10) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 194.85 712 T
(e 3-2: The timer thr) 221.73 712 T
(ead and timer queue.) 315.89 712 T
0 F
(RPC Clock and T) 72 470.5 T
(imer Service Internal Operations) 162.74 470.5 T
2 F
(Clock and timer service operations can be grouped into logical components that:) 108 450.5 T
(\245) 108 431 T
(establish and manage the RPC runtime\325) 126 431 T
(s idea of wall clock time) 315.56 431 T
(\245) 108 411.5 T
-0.04 (manage the timer queue by enqueuing, dequeuing, and making in-place adjust-) 126 411.5 P
(ments to \050) 126 398 T
5 11 Q
(rpc_timer_t) 173.97 398 T
2 12 Q
(\051 queue elements) 246.48 398 T
(\245) 108 378.5 T
(execute the periodic functions associated with individual queue elements) 126 378.5 T
(\245) 108 359 T
(start and stop the timer thread) 126 359 T
(Figure 3-3 illustrates the relationship of these functional groups.) 108 339.5 T
108 492 504 708 C
108 492 504 708 R
7 X
0 K
V
6 8 Q
0 X
(rpc_timer_t {) 440.32 567.15 T
(*next) 440.32 557.15 T
(trigger) 440.32 547.15 T
(frequency) 440.32 537.15 T
(proc) 440.32 527.15 T
(parg) 440.32 517.16 T
(}) 440.32 507.16 T
432.75 499.25 495.75 576.61 R
0.5 H
0 Z
N
(rpc_timer_t {) 341.28 662.04 T
(*next) 341.28 652.05 T
(trigger) 341.28 642.05 T
(frequency) 341.28 632.05 T
(proc) 341.28 622.05 T
(parg) 341.28 612.05 T
(}) 341.28 602.05 T
333.71 594.14 396.71 671.5 R
N
(rpc_timer_t {) 260.28 671.37 T
(*next) 260.28 661.37 T
(trigger) 260.28 651.37 T
(frequency) 260.28 641.37 T
(proc) 260.28 631.37 T
(parg) 260.28 621.37 T
(}) 260.28 611.37 T
252.71 603.46 315.71 680.82 R
N
(rpc_timer_t {) 179.28 680.38 T
(*next) 179.28 670.45 T
(trigger) 179.28 660.52 T
(frequency) 179.28 650.59 T
(proc) 179.28 640.66 T
(parg) 179.28 630.73 T
(}) 179.28 620.8 T
171.71 612.97 234.71 689.79 R
N
(head) 126.97 677.89 T
(tail) 128.57 563.22 T
124.64 668.07 147.68 691.1 R
N
124.46 555.03 144.82 575.39 R
N
427.02 575.89 432.22 572.89 427.02 569.89 3 L
N
400.07 572.89 432.22 572.89 2 L
N
328.52 666.04 333.71 663.04 328.52 660.04 3 L
N
278.51 663.04 333.71 663.04 2 L
N
452.28 652.71 399.24 572.89 2 L
10 X
N
359.51 653.71 451.88 653.71 2 L
0 X
N
427.56 568.21 432.75 565.21 427.56 562.21 3 L
N
144.82 565.21 432.75 565.21 2 L
N
166.51 682.58 171.71 679.58 166.51 676.58 3 L
N
147.68 679.58 171.71 679.58 2 L
N
247.51 675.95 252.71 672.95 247.51 669.95 3 L
N
197.51 672.95 252.71 672.95 2 L
N
0 0 612 792 C
108 492 504 708 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "10" 29
%%Page: "11" 29
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-11) 518.02 34.67 T
(Figur) 231.62 712 T
(e 3-3: RPC Clock and T) 258.5 712 T
(imer Operations) 373.43 712 T
289.58 397.19 144 397.19 2 L
V
0.59 H
0 Z
N
2 F
(Establishing and Managing W) 144 398.5 T
342.59 397.19 288.62 397.19 2 L
V
N
(all Clock T) 288.62 398.5 T
360.16 397.19 342.17 397.19 2 L
V
N
(ime) 342.17 398.5 T
(The clock service maintains a global notion of the current system time,) 144 378.5 T
5 11 Q
(rpc_g_clock_unix_current) 144 365 T
2 12 Q
(. On Unix systems, this value is established by) 302.2 365 T
(calling) 144 351.5 T
5 11 Q
(gettimeofday) 179.64 351.5 T
2 12 Q
( during RPC runtime initialization, and is updated by the) 258.75 351.5 T
(internal routine) 144 338 T
5 11 Q
(rpc__clock_update) 220.61 338 T
2 12 Q
( at the beginning of each iteration of the) 332.67 338 T
(timer thread\325) 144 324.5 T
(s execution loop. The clock is updated using the \322seconds\323 and) 205.62 324.5 T
(\322microseconds\323 values returned by) 144 311 T
5 11 Q
(gettimeofday) 315.19 311 T
2 12 Q
(. The clock service shadows) 393.52 311 T
(the Unix clock time represented by) 144 297.5 T
5 11 Q
(rpc_g_clock_unix_current) 315.21 297.5 T
2 12 Q
( in another) 473.41 297.5 T
-0.4 (global 32-bit value,) 144 284 P
5 11 Q
-0.89 (rpc_g_clock_curr) 239.39 284 P
2 12 Q
-0.4 (, which represents that time as an integer) 344.38 284 P
(number of \322RPC clock ticks.\323) 144 270.5 T
(These 200 millisecond ticks are deemed to be suf) 144 251 T
(\336ciently \336ne-grained for the) 380.28 251 T
(interval-timing needs of the runtime. All of the runtime\325) 144 237.5 T
(s internal notions of cur-) 412.83 237.5 T
-0.42 (rent and elapsed time are based on these RPC clock ticks. \050Note that the RPC clock) 144 224 P
-0.1 (ticks at a dif) 144 210.5 P
-0.1 (ferent rate than the CMA clock de\336ned in) 202.45 210.5 P
5 11 Q
-0.21 (threads/cma) 404.86 210.5 P
-0.21 (_timer.c) 477.37 210.5 P
2 12 Q
-0.1 (.\051) 530.11 210.5 P
-0.08 (No internal timer or clock routine other than) 144 197 P
5 11 Q
-0.17 (rpc__clock_update) 359.22 197 P
2 12 Q
-0.08 ( ever consults) 471.28 197 P
(the system time.) 144 183.5 T
(As a precaution against the problematic ef) 144 164 T
(fects of having the system time change) 346.29 164 T
-0.05 (in an anomalous way \050e.g., being reset \322backwards\323\051,) 144 150.5 P
5 11 Q
-0.11 (rpc__clock_update) 402.72 150.5 P
2 12 Q
-0.05 ( also) 514.78 150.5 P
(maintains a notion of clock skew) 144 137 T
(, which it uses to adjust the global clock value) 301.45 137 T
5 11 Q
(rpc_g_clock_unix_current) 144 123.5 T
2 12 Q
( when either of the following conditions occurs.) 302.2 123.5 T
(\245) 144 104 T
(The current system time \050returned by) 162 104 T
5 11 Q
(gettimeofday) 343.2 104 T
2 12 Q
(\051 is earlier than the cur-) 422.3 104 T
(rent value of) 162 90.5 T
5 11 Q
(rpc_g_clock_unix_current.) 225.61 90.5 T
144 420 540 708 C
369.64 540.21 M
 324.64 566.46 324.64 566.46 310.45 576.11 D
 296.25 585.75 296.25 585.75 279.11 608.25 D
0.5 H
0 Z
0 X
0 K
N
304.96 523.07 358.51 588.82 R
7 X
V
0 X
N
1 H
90 450 70.05 60.17 242.65 439.13 A
250.72 408.6 543.75 513.07 R
5 X
V
0.5 H
7 X
N
240.89 621.25 321.89 648.25 R
4 X
V
1 H
7 X
N
6 8 Q
0 X
(rpc__timer_init) 157.21 642.08 T
(rpc__timer_set) 210.25 600.35 T
(rpc__timer_adjust) 384.32 530.17 T
(rpc__timer_clear) 466.07 518 T
(rpc__timer_callout) 179.73 440.88 T
(rpc__clock_stamp) 438.3 684.06 T
(rpc__clock_aged) 438.3 670.64 T
(rpc__clock_unix_expired) 438.3 657.22 T
(rpc__clock_update) 214.57 682.45 T
(rpc_g_timer_mutex) 245.9 639.67 T
(rpc_g_timer_cond) 250.27 628.13 T
(rpc_timer_high_trigger) 153.3 520.28 T
(rpc_timer_cur_trigger) 153.3 508.84 T
(timer_loop) 185.68 459.58 T
(rpc__timer_prod) 174.38 415.46 T
0.2 H
90 450 18 18 171 681 A
90 450 16.63 16.63 171 680.93 A
90 450 1.37 1.37 171 694.1 G
90 450 1.37 1.37 171 694.1 A
90 450 0.86 0.86 171 681 G
90 450 0.86 0.86 171 681 A
171 681 163.3 685.97 2 L
V
2 Z
N
171 681 184.75 681 2 L
V
N
(rpc_g_clock_unix_current) 313.91 682.45 T
(rpc_g_clock_curr) 312.43 664.45 T
303.5 654.61 411.5 690.61 R
1 H
0 Z
8 X
N
0 X
(rpc_timer_t {) 459.58 477.92 T
(*next) 459.58 469.42 T
(trigger) 459.58 460.92 T
(frequency) 459.58 452.42 T
(proc) 459.58 443.92 T
(parg) 459.58 435.42 T
(}) 459.58 426.92 T
453.14 420.63 506.69 486.39 R
0.5 H
N
(rpc_timer_t {) 390.73 485.84 T
(*next) 390.73 477.34 T
(trigger) 390.73 468.84 T
(frequency) 390.73 460.34 T
(proc) 390.73 451.84 T
(parg) 390.73 443.34 T
(}) 390.73 434.84 T
384.3 428.56 437.84 494.31 R
N
(rpc_timer_t {) 321.88 493.5 T
(*next) 321.88 485.06 T
(trigger) 321.88 476.62 T
(frequency) 321.88 468.18 T
(proc) 321.88 459.74 T
(parg) 321.88 451.3 T
(}) 321.88 442.86 T
315.45 436.63 369 501.93 R
N
(head) 277.41 491.38 T
275.44 483.47 295.02 503.05 R
N
433.4 645.93 529.29 694.68 R
8 X
N
447.95 482.48 453.14 479.48 447.95 476.48 3 L
0 X
N
408.95 479.48 453.14 479.48 2 L
N
477.8 471.56 540.54 471.56 2 L
8 X
N
377.84 490.35 383.04 487.36 377.84 484.36 3 L
0 X
N
341.25 487.36 383.04 487.36 2 L
N
308.73 496.25 313.93 493.25 308.73 490.25 3 L
N
296.79 493.25 313.93 493.25 2 L
N
(rpc_timer_prod) 210.25 563.73 T
(rpc_timer_set_int) 210.25 582.04 T
316.32 453.58 321.88 451.31 317.13 447.63 3 L
N
245.05 440.88 321.88 451.3 2 L
N
(rpc_timer_t {) 308.46 577.85 T
(*next) 308.46 569.35 T
(trigger) 308.46 560.85 T
(frequency) 308.46 552.35 T
(proc) 308.46 543.85 T
(parg) 308.46 535.36 T
(}) 308.46 526.86 T
(rpc_timer_t {) 471.36 594.39 T
(*next) 471.36 585.89 T
(trigger) 471.36 577.39 T
(frequency) 471.36 568.89 T
(proc) 471.36 560.39 T
(parg) 471.36 551.89 T
(}) 471.36 543.39 T
464.93 537.1 518.48 602.86 R
N
205.11 555.18 279.57 608.75 R
9 X
N
419.09 499.51 416.09 494.31 413.09 499.51 3 L
0 X
N
416.09 530.17 416.09 494.31 2 L
N
149.93 502.71 234.04 530.57 R
9 X
N
191.31 496.75 191.98 502.71 196.81 499.15 3 L
0 X
N
206.36 469.5 191.98 502.71 2 L
N
293.31 685.45 298.5 682.45 293.31 679.45 3 L
N
281.68 682.45 298.5 682.45 2 L
N
193.88 679.45 188.68 682.45 193.88 685.45 3 L
N
214.57 682.45 188.68 682.45 2 L
N
233.7 647.75 238.89 644.75 233.7 641.75 3 L
N
212.14 644.75 238.89 644.75 2 L
N
453.54 493.4 461.88 487.49 2 L
2 Z
N
467.28 520.38 M
 466.48 509.52 460.66 500.05 453.54 493.4 D
N
475.62 514.47 M
 474.83 503.61 469.01 494.15 461.88 487.49 D
N
475.62 514.44 478.89 512.13 2 L
N
464.01 522.68 467.28 520.38 2 L
N
478.89 512.13 474.03 536.12 464.01 522.68 3 L
N
360.43 534.72 368.77 540.63 2 L
N
374.17 507.74 M
 373.38 518.6 367.56 528.07 360.43 534.72 D
N
382.51 513.64 M
 381.72 524.5 375.9 533.97 368.77 540.63 D
N
382.51 513.68 385.79 515.99 2 L
N
370.9 505.43 374.17 507.74 2 L
N
385.79 515.99 380.92 492 370.9 505.43 3 L
N
7 X
90 450 4.29 5.36 365.72 536.82 G
280 555.75 M
 290.63 565.12 290.63 565.12 294.38 565.44 D
 298.13 565.75 298.13 565.75 299.69 565.75 D
 301.25 565.75 301.25 565.75 305.63 565.12 D
0 Z
0 X
N
0 0 612 792 C
144 420 540 708 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "11" 30
%%Page: "12" 30
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-12) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(\245) 108 712 T
(The current system time is more than 60 seconds later than the value of) 126 712 T
5 11 Q
(rpc_g_unix_clock_current) 126 698.5 T
2 12 Q
(. The assumption in this case is that the timer) 284.2 698.5 T
(thread normally runs \050and updates) 126 685 T
5 11 Q
(rpc_g_unix_clock_current) 292.88 685 T
2 12 Q
(\051 more) 451.08 685 T
(often than once per minute, so that any leading skew of this magnitude proba-) 126 671.5 T
(bly indicates that the system time has advanced unexpectedly between calls to) 126 658 T
5 11 Q
(rpc__clock_update) 126 644.5 T
2 12 Q
(. The timer thread\325) 238.06 644.5 T
(s loop, which we will describe) 327.33 644.5 T
(shortly) 126 631 T
(, includes a constant maximum wakeup interval of \336fty seconds.) 158.54 631 T
184.61 610.19 108 610.19 2 L
V
0.59 H
0 Z
N
(Managing the T) 108 611.5 T
240.48 610.19 184.19 610.19 2 L
V
N
(imer Queue) 184.19 611.5 T
(The private function) 108 591.5 T
5 11 Q
(rpc__timer_set) 208.93 591.5 T
2 12 Q
( is the conduit between the runtime and) 301.21 591.5 T
(the timer queue. Runtime functions that need to register a timer routine call) 108 578 T
5 11 Q
-0.55 (rpc__timer set) 108 564.5 P
2 12 Q
-0.25 (, passing it the address of the) 199.74 564.5 P
5 11 Q
-0.55 (rpc_timer_t) 339.89 564.5 P
2 12 Q
-0.25 ( that will represent) 412.4 564.5 P
(the routine on the timer queue, the address of the actual routine \050) 108 551 T
5 11 Q
(proc) 418.1 551 T
2 12 Q
(\051, and the) 444.47 551 T
(address of the ar) 108 537.5 T
(gument with which that routine is to be called \050) 186.71 537.5 T
5 11 Q
(parg) 413.57 537.5 T
2 12 Q
(\051.) 439.93 537.5 T
-0.37 (The) 108 518 P
5 11 Q
-0.81 (rpc__timer_set) 129.28 518 P
2 12 Q
-0.37 ( function is merely a wrapper that locks the queue\325) 221.57 518 P
-0.37 (s mutex,) 461.09 518 P
(calls the internal \050to the timer service\051 routine) 108 504.5 T
5 11 Q
(rpc__timer_set_int) 330.5 504.5 T
2 12 Q
(, then) 449.15 504.5 T
(unlocks the queue\325) 108 491 T
(s mutex. When) 197.94 491 T
5 11 Q
(rpc_timer_set_int) 273.22 491 T
2 12 Q
( registers a new routine,) 385.28 491 T
(it sets the value of the queue element\325) 108 477.5 T
(s) 288.87 477.5 T
5 11 Q
(trigger) 296.54 477.5 T
2 12 Q
( \336eld to the sum of the current) 342.68 477.5 T
-0.01 (time \050the value of) 108 464 P
5 11 Q
-0.02 (rpc_clock_curr) 195.9 464 P
2 12 Q
-0.01 (\051 and the value of the element\325) 288.19 464 P
-0.01 (s) 434.03 464 P
5 11 Q
-0.02 (frequency) 441.68 464 P
2 12 Q
(\336eld.) 108 450.5 T
(Once the timer service has determined the routine\325) 108 431 T
(s trigger time, it enqueues the) 350.15 431 T
(routine \050represented by its) 108 417.5 T
5 11 Q
(rpc_timer_t) 236.57 417.5 T
2 12 Q
(\051 on the timer queue in a position deter-) 309.08 417.5 T
-0.04 (mined by the value of the routine\325) 108 404 P
-0.04 (s) 270.32 404 P
5 11 Q
-0.09 (trigger) 277.94 404 P
2 12 Q
-0.04 ( \336eld. This will most often mean that) 324.08 404 P
(it is placed last, though that is not always the case. When) 108 390.5 T
5 11 Q
(rpc_timer_set_int) 384.48 390.5 T
2 12 Q
(registers a routine with a trigger time that is earlier than the timer thread\325) 108 377 T
(s next) 457.42 377 T
(wakeup call, the timer thread is \322prodded\323 into action by a call to) 108 363.5 T
5 11 Q
(rpc__timer_prod.) 108 350 T
136.98 329.19 108 329.19 2 L
V
N
2 12 Q
(The T) 108 330.5 T
186.86 329.19 136.56 329.19 2 L
V
N
(imer Loop) 136.56 330.5 T
(The timer thread runs the routine) 108 310.5 T
5 11 Q
(timer_loop) 269.21 310.5 T
2 12 Q
(, which simply calls) 335.13 310.5 T
5 11 Q
(rpc__clock_unix_update) 108 297 T
2 12 Q
( to update the wall clock, then runs the internal) 253.02 297 T
5 11 Q
(rpc__timer_callout) 108 283.5 T
2 12 Q
( routine, which traverses the timer queue running those) 226.65 283.5 T
-0.12 (routines whose trigger time has arrived. The timer thread\325) 108 270 P
-0.12 (s schedule is determined) 383.88 270 P
(with the help of two internal variables,) 108 256.5 T
5 11 Q
( rpc_timer_high_trigger) 293.54 256.5 T
2 12 Q
(, which rep-) 444.67 256.5 T
(resents the latest trigger time for any routine on the timer queue, and) 108 243 T
5 11 Q
(rpc_timer_cur_trigger,) 108 229.5 T
2 12 Q
( which represents the next trigger time at which the) 253.02 229.5 T
(timer thread will run. After each traversal of the timer queue, the thread goes to) 108 216 T
(sleep for an interval returned by) 108 202.5 T
5 11 Q
(rpc__timer_callout) 264.54 202.5 T
2 12 Q
(. This interval is com-) 383.19 202.5 T
-0.48 (puted by subtracting) 108 189 P
5 11 Q
-1.05 (rpc_clock_curr) 207.5 189 P
2 12 Q
-0.48 ( \050the current wall clock time, in RPC clock) 299.78 189 P
(ticks\051 from) 108 175.5 T
5 11 Q
(rpc_timer_cur_trigger) 163.96 175.5 T
2 12 Q
(.) 301.73 175.5 T
(The timer thread always consults the) 108 156 T
5 11 Q
(stop_timer) 287.21 156 T
2 12 Q
( boolean upon awakening. All) 353.12 156 T
(higher) 108 142.5 T
(-level shutdown routines set stop_timer to true, as does the timer service\325) 138.4 142.5 T
(s) 488.84 142.5 T
-0.05 (fork handler) 108 129 P
-0.05 (,) 166.42 129 P
5 11 Q
-0.1 (rpc__timer_fork_handler) 172.37 129 P
2 12 Q
-0.05 (, that takes care of stopping the timer) 323.5 129 P
(thread in the prefork stage, then starting it up again in the postfork parent.) 108 115.5 T
FMENDPAGE
%%EndPage: "12" 31
%%Page: "13" 31
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-13) 518.02 34.67 T
159.7 709.28 108 709.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Call Thr) 108 710.67 T
232.9 709.28 159.45 709.28 2 L
V
N
(ead Services) 159.45 710.67 T
2 12 Q
(As discussed on page 2-1 of this document, the RPC runtime library creates sev-) 144 690 T
(eral types of threads more or less upon initialization. W) 144 676.5 T
(e describe the network lis-) 409.52 676.5 T
(tener thread and the timer thread elsewhere in this chapter) 144 663 T
(, and we cover threads) 421.62 663 T
(unique to the datagram-based and connection-based protocol services in the mate-) 144 649.5 T
(rial on those services. In this section, we talk about call threads \321 as the threads) 144 636 T
(that execute remote procedure calls are known. The \336les) 144 622.5 T
5 11 Q
(comcthd.h) 417.77 622.5 T
2 12 Q
( and) 477.1 622.5 T
5 11 Q
(com-) 500.42 622.5 T
-0.17 (cthd.c) 144 609 P
2 12 Q
-0.08 ( implement a general facility for creating these threads, allocating them to) 183.55 609 P
(calls, and, when they are no longer needed, freeing the resources they consume.) 144 595.5 T
(The call thread facility was designed to work in user) 144 582 T
(-space as well as kernel envi-) 395.24 582 T
(ronments. W) 144 568.5 T
(e only discuss the details of user) 205 568.5 T
(-space operations here.) 359.99 568.5 T
-0.26 (DCE RPC call thread services were designed to provide a default call thread mech-) 144 549 P
(anism that serves the needs of most applications without any special intervention) 144 535.5 T
(by the application developer) 144 522 T
(. It also provides additional features that allow appli-) 279.57 522 T
(cations to exercise more control over thread-to-call allocation when that is neces-) 144 508.5 T
(sary) 144 495 T
(.) 163.2 495 T
(The fundamental operations of the call thread services can be summarized as fol-) 144 475.5 T
(lows:) 144 462 T
(\245) 144 442.5 T
(Call threads are created at server start-up time. The) 162 442.5 T
5 11 Q
(max_calls_exec) 410.45 442.5 T
2 12 Q
( ar) 502.74 442.5 T
(gu-) 514.84 442.5 T
(ment to) 162 429 T
5 11 Q
(rpc_server_listen) 201.31 429 T
2 12 Q
( normally determines the total number of call) 313.38 429 T
(threads available to execute that server) 162 415.5 T
(\325) 348.62 415.5 T
(s manager routines.) 351.95 415.5 T
(\245) 144 396 T
(When a server starts up, a default pool of call threads is initialized and the) 162 396 T
(threads enter an \322idle\323 state waiting on a thread-private condition variable.) 162 382.5 T
(Once a call thread has begun executing a call, it is said to be in the \322active\323) 162 369 T
(state. When an active thread has \336nished executing a call, it is normally) 162 355.5 T
(returned to the pool and marked idle.) 162 342 T
(\245) 144 322.5 T
(Each incoming call is allocated to an idle thread until there are no threads left) 162 322.5 T
(in the idle state. Subsequent incoming calls are queued in FIFO order) 162 309 T
(.) 493.79 309 T
(\245) 144 289.5 T
-0.1 (Several undocumented APIs allow applications to allocate \322reserved\323 pools of) 162 289.5 P
(threads to handle critical operations, and to control how threads from those) 162 276 T
(pools are allocated to calls.) 162 262.5 T
(\245) 144 243 T
(When a server is shut down, call threads are stopped in an orderly way) 162 243 T
(.) 500.29 243 T
(Stopped thread pools are periodically \322reaped\323 to return resources to the sys-) 162 229.5 T
(tem.) 162 216 T
(The idea of reserved pools \050and, to some extent, of thread pools themselves\051 was) 144 196.5 T
(arrived at in the course of tuning DCE RPC for the needs of the DCE Distributed) 144 183 T
-0.25 (File System \050DFS\051. While it is probably correct to say that there is a \322default\323 case) 144 169.5 P
(in which no reserved pools are created and all threads are allocated from the) 144 156 T
(default pool, any DCE RPC runtime that is supporting the DFS will be using a) 144 142.5 T
(number of reserved pools as well. And, although the API that gives applications) 144 129 T
(access to reserved pools is not part of the DCE RPC AES at this writing, we) 144 115.5 T
-0.28 (describe these operations here, since they are responsible for much of the complex-) 144 102 P
(ity inherent in the call thread service\325) 144 88.5 T
(s implementation.) 322.53 88.5 T
FMENDPAGE
%%EndPage: "13" 32
%%Page: "14" 32
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-14) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(W) 108 712 T
(ith this in mind, we discuss the mechanics of threads and thread pools in more) 118.84 712 T
(detail in the next section assuming a model in which one or more reserved pools) 108 698.5 T
(are in use.) 108 685 T
0 F
(Principal Call Thr) 72 665.5 T
(ead Data Structur) 166.41 665.5 T
(es and Their Relationships) 258.8 665.5 T
2 F
(The call thread service de\336nes three basic structural elements. Only two of them,) 108 645.5 T
-0.08 (the) 108 632 P
5 11 Q
-0.17 (cthread_elt_t) 125.58 632 P
2 12 Q
-0.08 ( \050an individual call thread\051 and the) 211.27 632 P
5 11 Q
-0.17 (cthread_pool_elt_t) 378.93 632 P
2 12 Q
-0.31 (\050a thread pool descriptor\051 are needed in the case where only the default thread pool) 108 618.5 P
(is in use. T) 108 605 T
(able 3-6 and T) 159.8 605 T
(able 3-7 describe these structures.) 228.57 605 T
4 F
(T) 225.21 587 T
(able 3-6: cthr) 230.78 587 T
(ead_elt_t structur) 296.29 587 T
(e) 381.46 587 T
7 11 Q
(cthread_elt_t {) 110 565.67 T
5 F
(thread_state) 110 546.67 T
(/* 0=nonexistent, 1=idle, 2=active */) 218 546.67 T
(thread_id) 110 527.67 T
(/* a pthread_t data type identifying this) 218 527.67 T
(call thread */) 218 514.67 T
(thread_cond) 110 495.67 T
(/* this call thread\325s private condition) 218 495.67 T
(variable */) 218 482.67 T
(*pool) 110 463.67 T
(/* a pointer to the pool with which this) 218 463.67 T
(call thread is associated */) 218 450.67 T
(call_rep) 110 431.67 T
-0.75 (/* pointer to the call_rep that this thread) 218 431.67 P
(is executing */) 218 418.67 T
7 F
(}) 110 399.67 T
106.75 578 106.75 391 2 L
V
0.5 H
0 Z
N
109.25 575.5 109.25 393.5 2 L
V
N
214.75 557.75 214.75 411.25 2 L
V
N
217.25 557.75 217.25 411.25 2 L
V
N
502.75 575.5 502.75 393.5 2 L
V
N
505.25 578 505.25 391 2 L
V
N
106.5 578.25 505.5 578.25 2 L
V
N
109 575.75 503 575.75 2 L
V
N
109.5 558 502.5 558 2 L
V
N
109.5 539 502.5 539 2 L
V
N
109.5 507 502.5 507 2 L
V
N
109.5 475 502.5 475 2 L
V
N
109.5 443 502.5 443 2 L
V
N
109.5 411 502.5 411 2 L
V
N
109 393.25 503 393.25 2 L
V
N
106.5 390.75 505.5 390.75 2 L
V
N
FMENDPAGE
%%EndPage: "14" 33
%%Page: "15" 33
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-15) 518.02 34.67 T
2 F
(A third data structure, the) 144 292 T
5 11 Q
(cthread_queue_elt_t) 269.91 292 T
2 12 Q
(, provides a means of circum-) 395.15 292 T
-0.07 (venting the) 144 278.5 P
5 11 Q
-0.15 (rpc_list_t) 200.49 278.5 P
2 12 Q
-0.07 (\325) 266.41 278.5 P
-0.07 (s restriction on multiply-enqueued items \050see page 3-6\051.) 269.75 278.5 P
(This circumvention is necessary to enable the call thread service to enqueue calls) 144 265 T
(for reserved pools on the default pool as well.) 144 251.5 T
4 F
(T) 247.55 712 T
(able 3-7: cthr) 253.12 712 T
(ead_pool_elt_t structur) 318.62 712 T
(e) 431.12 712 T
7 11 Q
(cthread_pool_elt_t {) 146 690.67 T
5 F
(link) 146 671.67 T
-0.67 (/* rpc_list_t list of which we are a member) 254 671.67 P
(*/) 254 658.67 T
(n_threads) 146 639.67 T
(/* the total number of threads in the pool) 254 639.67 T
(*/) 254 626.67 T
(n_idle) 146 607.67 T
(/* the number of idle threads in the pool) 254 607.67 T
(*/) 254 594.67 T
(ctbl) 146 575.67 T
(/* an array cthread_elt_t structures repre-) 254 575.67 T
(senting this pool\325s threads */) 254 562.67 T
(idle_cthread) 146 543.67 T
(/* pointer to a known-idle cthread */) 254 543.67 T
(n_queued) 146 524.67 T
(/* number of calls currently on the pool\325s) 254 524.67 T
(queue */) 254 511.67 T
(max_queued) 146 492.67 T
(/* maximum queue depth */) 254 492.67 T
(call_queue) 146 473.67 T
-1.15 ( /* list of calls queued to this pool iff it) 254 473.67 P
(is a reserved pool */) 254 460.67 T
(free_queue) 146 441.67 T
2 12 Q
( /*) 254 441.67 T
5 11 Q
(list of free) 269.33 441.67 T
(cthread_queue_elt) 351.43 441.67 T
2 12 Q
(s,) 463.49 441.67 T
5 11 Q
(used iff) 474.15 441.67 T
(this is a reserved pool */) 254 428.67 T
(stop) 146 409.67 T
(/* true iff threads should stop when call) 254 409.67 T
(execution is complete */) 254 396.67 T
(queue_elt_alloc) 146 377.67 T
(/* true iff this is a reserved pool and a) 254 377.67 T
(free_queue of queue_elt structures should) 254 364.67 T
(be allocated */) 254 351.67 T
7 F
(}) 146 319.67 T
4 12 Q
(T) 243.89 233.5 T
(able 3-8: c) 249.46 233.5 T
(thr) 301.41 233.5 T
(ead_queue_elt_t structur) 314.97 233.5 T
(e) 434.78 233.5 T
7 11 Q
(cthread_queue_elt_t {) 146 212.17 T
5 F
(link) 146 193.17 T
(/* rpc_list_t \050always a cthread_pool_elt\325s) 254 193.17 T
-0.75 (free_queue or call_queue\051 of which we are a) 254 180.17 P
(member) 254 167.17 T
(*pool) 146 148.17 T
-1.21 (/* pointer to cthread_pool_elt_t describing) 254 148.17 P
(our pool */) 254 135.17 T
(call_rep) 146 116.17 T
(/* call_rep we are executing */) 254 116.17 T
7 F
(}) 146 97.17 T
142.75 703 142.75 311 2 L
V
0.5 H
0 Z
N
145.25 700.5 145.25 313.5 2 L
V
N
250.75 682.75 250.75 331.25 2 L
V
N
253.25 682.75 253.25 331.25 2 L
V
N
538.75 700.5 538.75 313.5 2 L
V
N
541.25 703 541.25 311 2 L
V
N
142.5 703.25 541.5 703.25 2 L
V
N
145 700.75 539 700.75 2 L
V
N
145.5 683 538.5 683 2 L
V
N
145.5 651 538.5 651 2 L
V
N
145.5 619 538.5 619 2 L
V
N
145.5 587 538.5 587 2 L
V
N
145.5 555 538.5 555 2 L
V
N
145.5 536 538.5 536 2 L
V
N
145.5 504 538.5 504 2 L
V
N
145.5 485 538.5 485 2 L
V
N
145.5 453 538.5 453 2 L
V
N
145.5 421 538.5 421 2 L
V
N
145.5 389 538.5 389 2 L
V
N
145.5 331 538.5 331 2 L
V
N
145 313.25 539 313.25 2 L
V
N
142.5 310.75 541.5 310.75 2 L
V
N
142.75 224.5 142.75 88.5 2 L
V
N
145.25 222 145.25 91 2 L
V
N
250.75 204.25 250.75 108.75 2 L
V
N
253.25 204.25 253.25 108.75 2 L
V
N
538.75 222 538.75 91 2 L
V
N
541.25 224.5 541.25 88.5 2 L
V
N
142.5 224.75 541.5 224.75 2 L
V
N
145 222.25 539 222.25 2 L
V
N
145.5 204.5 538.5 204.5 2 L
V
N
145.5 159.5 538.5 159.5 2 L
V
N
145.5 127.5 538.5 127.5 2 L
V
N
145.5 108.5 538.5 108.5 2 L
V
N
145 90.75 539 90.75 2 L
V
N
142.5 88.25 541.5 88.25 2 L
V
N
FMENDPAGE
%%EndPage: "15" 34
%%Page: "16" 34
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-16) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(In addition, the) 108 712 T
5 11 Q
(rpc_call_rep_t) 183.95 712 T
2 12 Q
( de\336ned in) 276.24 712 T
5 11 Q
(com.h) 329.87 712 T
2 12 Q
( includes a pointer to thread-) 362.83 712 T
(private data which is typically examined only by routines in) 108 698.5 T
5 11 Q
(comcthd.c) 398.48 698.5 T
2 12 Q
(, and) 457.81 698.5 T
(which provides an important link between the call rep and its executor thread.) 108 685 T
(Figure 3-4 illustrates these structures and their fundamental relationships for the) 108 399.5 T
(case where only a default pool exists.) 108 386 T
4 F
(Figur) 194.34 366.5 T
(e 3-4: Default Call Thr) 221.21 366.5 T
(ead Relationships) 332.04 366.5 T
2 F
-0.36 (Figure 3-5 illustrates the way these structures are used to connect the \322default\323 and) 108 97.33 P
(\322reserved\323 incarnations of a call rep.) 108 83.83 T
4 F
(T) 205.23 667 T
(able 3-9: rpc_cthr) 210.79 667 T
(ead_pvt_info structur) 298.28 667 T
(e) 401.45 667 T
7 11 Q
(rpc_cthread_pvt_info_t {) 110 645.67 T
5 F
(0) 110 626.67 T
(/* needed to force alignment */) 218 626.67 T
(is_queued) 110 607.67 T
(/* true iff this call is waiting in a) 218 607.67 T
(pool\325s queue */) 218 594.67 T
(executor) 110 575.67 T
(/* a protocol-specif) 218 575.67 T
(ic call executor func-) 349.84 575.67 T
(tion \050e.g. rpc__dg_execute_call\051 */) 218 562.67 T
(optargs) 110 543.67 T
(/* the executor function\325s arguments */) 218 543.67 T
(thread_h) 110 524.67 T
(/* thread handle of thread executing this) 218 524.67 T
(call \050true iff !is_queued\051 */) 218 511.67 T
(qelt) 110 492.67 T
(/* pointer to associated qelt structure) 218 492.67 T
(\050iff this call_rep is supposed to be exe-) 218 479.67 T
(cuted by a reserved pool thread\051 */) 218 466.67 T
(0) 110 447.67 T
(/* needed to force alignment */) 218 447.67 T
7 F
(}) 110 428.67 T
106.75 658 106.75 420 2 L
V
0.5 H
0 Z
N
109.25 655.5 109.25 422.5 2 L
V
N
214.75 637.75 214.75 440.25 2 L
V
N
217.25 637.75 217.25 440.25 2 L
V
N
502.75 655.5 502.75 422.5 2 L
V
N
505.25 658 505.25 420 2 L
V
N
106.5 658.25 505.5 658.25 2 L
V
N
109 655.75 503 655.75 2 L
V
N
109.5 638 502.5 638 2 L
V
N
109.5 619 502.5 619 2 L
V
N
109.5 587 502.5 587 2 L
V
N
109.5 555 502.5 555 2 L
V
N
109.5 536 502.5 536 2 L
V
N
109.5 504 502.5 504 2 L
V
N
109.5 459 502.5 459 2 L
V
N
109.5 440 502.5 440 2 L
V
N
109 422.25 503 422.25 2 L
V
N
106.5 419.75 505.5 419.75 2 L
V
N
108 118.83 504 362.5 C
249.86 312.23 433.93 333.12 R
6 X
0 K
V
0.5 H
0 Z
0 X
N
291.75 281.5 444.75 299.71 R
13 X
V
0 X
N
6 8 Q
(cthread_pool_elt_t) 141 329.07 T
(link) 141 319.76 T
(n_threads) 141 310.46 T
(n_idle) 141 301.15 T
(ctbl) 141 291.84 T
(idle_cthread) 141 282.54 T
(n_queued) 141 273.23 T
(max_queued) 141 263.92 T
(call_queue) 141 254.61 T
(free_queue) 141 245.31 T
(stop) 141 236 T
(queue_elt_alloc) 141 226.69 T
(cthread_elt_t) 258.32 238.53 T
(thread_state) 258.32 229.23 T
(thread_id) 258.32 219.92 T
(thread_cond) 258.32 210.61 T
(*pool) 258.32 201.3 T
(call_rep) 258.32 192 T
(call thread table) 373.17 288.69 T
(default thread pool) 336.7 318.27 T
(rpc_call_rep_t) 367.82 188.03 T
(\311) 367.82 178.73 T
(\311) 367.82 169.42 T
(\311) 367.82 160.11 T
(\311) 367.82 150.8 T
309.75 299.5 309.75 281.5 2 L
13 X
V
0 X
N
345.75 299.5 345.75 299.5 2 L
13 X
V
0 X
N
327.75 299.5 327.75 281.5 2 L
13 X
V
0 X
N
363.75 299.5 363.75 281.5 2 L
13 X
V
0 X
N
345.75 299.5 345.75 281.5 2 L
13 X
V
0 X
N
137.07 220.54 214.5 340.11 R
N
252.89 182.5 318.75 248.07 R
N
363.75 128.5 426.75 200.5 R
N
355.98 195.03 361.18 192.03 355.99 189.03 3 L
N
286.32 192 361.18 192.03 2 L
N
330 296.61 253.4 246.25 2 L
10 X
N
346.61 300.14 319.29 247.1 2 L
N
344.89 279.46 318.11 179.82 2 L
N
244.18 324.37 249.38 321.37 244.18 318.37 3 L
0 X
N
154.38 321.37 249.38 321.37 2 L
N
286.06 296.87 291.25 293.87 286.06 290.87 3 L
N
155 293.87 291.25 293.87 2 L
N
246.68 248.12 251.88 245.12 246.68 242.12 3 L
N
186.25 284.5 259.38 284.5 220 245.12 251.88 245.12 4 L
N
0 0 612 792 C
108 118.83 504 362.5 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "16" 35
%%Page: "17" 35
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-17) 518.02 34.67 T
(Figur) 213.52 712 T
(e 3-5: Reserved Pool Call Thr) 240.4 712 T
(ead Relationships) 384.86 712 T
0 F
( Call Thr) 108 398.5 T
(ead Service Internal Operations) 155.1 398.5 T
2 F
(The call thread service has three major jobs:) 144 378.5 T
(\245) 144 359 T
(It creates pools of threads at server start-up time.) 162 359 T
(\245) 144 339.5 T
(It assigns these threads to incoming calls, in the proper order) 162 339.5 T
(, and from the) 452.98 339.5 T
(proper pool.) 162 326 T
(\245) 144 306.5 T
(It stops pools of threads at the appropriate time \050e.g., server shutdown\051 and in) 162 306.5 T
(an orderly way) 162 293 T
(, and after that, it reclaims the system resources they had con-) 233.16 293 T
(sumed.) 162 279.5 T
(Figure 3-6 illustrates the internal operations of the call thread service. W) 144 260 T
(e\325ve) 491.45 260 T
-0.46 (drawn boxes around functional groups, and set the externally-visible entrypoints in) 144 246.5 P
(bold type.) 144 233 T
144 420 540 708 C
320.07 560.9 390.73 644.36 2 L
0.5 H
0 Z
11 X
0 K
N
6 8 Q
0 X
(\311) 347.09 567.46 T
343.02 526.54 406.02 598.54 R
7 X
V
0 X
N
268.32 670.57 452.39 691.46 R
6 X
V
0 X
N
336.73 644.36 489.73 662.58 R
13 X
V
0 X
N
(cthread_pool_elt_t) 159.46 686.58 T
(link) 159.46 677.27 T
(n_threads) 159.46 667.96 T
(n_idle) 159.46 658.66 T
(ctbl) 159.46 649.35 T
(idle_cthread) 159.46 640.04 T
(n_queued) 159.46 630.74 T
(max_queued) 159.46 621.43 T
(call_queue) 159.46 612.12 T
(free_queue) 159.46 602.81 T
(stop) 159.46 593.51 T
(queue_elt_alloc) 159.46 584.2 T
(cthread_elt_t) 259.64 616.93 T
(thread_state) 259.64 607.63 T
(thread_id) 259.64 598.32 T
(thread_cond) 259.64 589.01 T
(*pool) 259.64 579.71 T
(call_rep) 259.64 570.4 T
(call thread table) 418.15 651.55 T
(default thread pool) 355.16 676.61 T
354.73 662.36 354.73 644.36 2 L
13 X
V
0 X
N
390.73 662.36 390.73 662.36 2 L
13 X
V
0 X
N
372.73 662.36 372.73 644.36 2 L
13 X
V
0 X
N
408.73 662.36 408.73 644.36 2 L
13 X
V
0 X
N
390.73 662.36 390.73 644.36 2 L
13 X
V
0 X
N
155.54 578.04 232.96 697.61 R
N
254.21 560.9 320.07 626.47 R
N
(rpc_cthread_pvt_info_t) 437.31 549.68 T
(0) 437.31 540.37 T
(is_queued) 437.31 531.06 T
(executor) 437.31 521.76 T
(optargs) 437.31 512.45 T
(thread_h) 437.31 503.14 T
(qelt) 437.31 493.84 T
(0) 437.31 484.53 T
(cthread_queue_elt_t) 418.82 459.86 T
(link) 418.82 450.55 T
(*pool) 418.82 441.24 T
(call_rep) 418.82 431.93 T
415.79 423.07 507.93 468.61 R
N
434.63 481.64 536.95 558.78 R
N
162.12 433.07 338.38 453.07 R
5 X
V
0 X
N
(reserved thread pool) 192.13 438.87 T
330.27 655.18 335.47 652.18 330.27 649.18 3 L
N
177.43 652.18 335.47 652.18 2 L
5 X
V
0 X
N
427.6 552.02 432.82 549.05 427.64 546.02 3 L
N
405.13 548.87 432.82 549.05 2 L
5 X
V
0 X
N
446.69 473.8 443.67 468.61 440.69 473.82 3 L
N
443.75 493.84 443.68 468.61 2 L
5 X
V
0 X
N
344.41 438.24 339.22 441.24 344.41 444.24 3 L
N
418.82 441.24 339.22 441.24 2 L
5 X
V
0 X
N
(rpc_call_rep_t) 347.09 586.07 T
(\311) 347.09 576.77 T
(\311) 347.09 558.15 T
(u.server) 345.88 547.53 T
(.cthread) 374.32 547.53 T
(\311) 347.63 533.85 T
390.73 662.36 320.07 626.47 2 L
5 X
V
9 X
N
372.73 662.36 254.21 626.47 2 L
5 X
V
9 X
N
262.3 681.25 267.5 678.25 262.3 675.25 3 L
0 X
N
172.5 678.25 267.5 678.25 2 L
N
248.55 623.12 253.75 620.12 248.55 617.12 3 L
N
204.38 642 266.88 642 237.5 620.12 253.75 620.12 4 L
N
371.38 520.55 374.38 525.75 377.38 520.55 3 L
N
418.13 433.87 374.38 433.87 374.38 525.75 3 L
N
337.93 574.37 343.13 571.37 337.93 568.37 3 L
N
290 571.37 343.13 571.37 2 L
N
0 0 612 792 C
144 420 540 708 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "17" 36
%%Page: "18" 36
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-18) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 177.19 712 T
(e 3-6: Call Thr) 204.07 712 T
(ead Services Internal Operations) 275.92 712 T
215.93 361.19 108 361.19 2 L
V
0.59 H
0 Z
N
2 F
(Creating Thread Pools) 108 362.5 T
-0.15 (When a server starts up, the call thread service creates pools of threads in an ef) 108 342.5 P
-0.15 (fort) 483.83 342.5 P
(to incur \050what would otherwise be per) 108 329 T
(-call\051 thread-creation overhead at a time) 290.29 329 T
(when no calls have been accepted for execution. The number of pools, number of) 108 315.5 T
(threads in a pool, and the number of calls that will be queued to a pool once queu-) 108 302 T
(ing begins are normally set at server start-up, but can be adjusted dynamically via) 108 288.5 T
(undocumented APIs.) 108 275 T
-0.27 (If no reserved pools have been created, then a server) 108 255.5 P
-0.27 (\325) 357.8 255.5 P
-0.27 (s call thread universe is repre-) 361.13 255.5 P
(sented by a single pool element representing the default pool. This element) 108 242 T
(includes pointers to a) 108 228.5 T
5 11 Q
(call_queue) 213.27 228.5 T
2 12 Q
( of call reps awaiting execution and a) 279.18 228.5 T
5 11 Q
(free_queue) 108 215 T
2 12 Q
( of call reps that have been dequeued. It also includes a pointer to a) 173.92 215 T
(known idle thread if one exists, and to an) 108 201.5 T
5 11 Q
(rpc_mem_cthread_ctbl) 308.53 201.5 T
2 12 Q
( object) 440.37 201.5 T
(\050named) 108 188 T
5 11 Q
(ctbl) 146.97 188 T
2 12 Q
(\051, which is an array of) 173.33 188 T
5 11 Q
(cthread_elt) 281.57 188 T
2 12 Q
(s, one for each thread in the) 354.08 188 T
(pool. The number of threads in the pool \050) 108 174.5 T
5 11 Q
(n_threads) 305.53 174.5 T
2 12 Q
(\051 is derived from the) 364.86 174.5 T
5 11 Q
(max_calls_exec) 108 161 T
2 12 Q
( ar) 200.29 161 T
(gument to) 212.39 161 T
5 11 Q
(rpc_server_listen) 263.69 161 T
2 12 Q
(. Queue depth) 375.76 161 T
-0.49 (\050) 108 147.5 P
5 11 Q
-1.08 (max_queued) 111.99 147.5 P
2 12 Q
-0.49 (\051 for the pool is normally determined by multiplying) 177.91 147.5 P
5 11 Q
-1.08 (n_threads) 427.67 147.5 P
2 12 Q
-0.49 ( by) 486.99 147.5 P
(a constant \050currently 8\051.) 108 134 T
(Thread pools are created in two steps. First,) 108 114.5 T
5 11 Q
(cthread_pool_alloc) 320.51 114.5 T
2 12 Q
( initializes a) 439.16 114.5 T
(cthread pool descriptor \050) 108 101 T
5 11 Q
(cthread_pool_elt_p_t) 225.57 101 T
2 12 Q
(\051, setting the values of) 357.41 101 T
5 11 Q
(n_threads) 108 87.5 T
2 12 Q
( and) 167.33 87.5 T
5 11 Q
(max_queued) 190.64 87.5 T
2 12 Q
( based on the) 256.56 87.5 T
5 11 Q
(max_calls_exec) 322.51 87.5 T
2 12 Q
( ar) 414.8 87.5 T
(gument of) 426.9 87.5 T
108 384 504 708 C
5 X
0 K
90 450 34.38 26.25 447.13 471.87 G
0.5 H
0 Z
0 X
90 450 34.38 26.25 447.13 471.87 A
6 8 Q
(rpc__cthread_init) 126 673.76 T
(rpc__cthread_start_all) 126 655.45 T
(cthread_pool_alloc) 126 610.76 T
(cthread_pool_set_threadcnt) 180.38 592.45 T
(cthread_pool_start) 126 574.15 T
(cthread_create\050,,cthread_call_executor) 126 555.84 T
(,,\051) 264.21 555.84 T
(cthread_pool_dequeue_\336rst) 126 520.76 T
(cthread_call_dequeue) 126 502.45 T
(rpc_cthread_dequeue) 126 466.76 T
(rpc_cthread_stop_all) 126 448.76 T
(cthread_pool_free) 124.56 403.15 T
(cthread_pool_stop) 126 421.45 T
122.13 544.37 286.5 625 R
8 X
N
121.92 397.5 200.04 431.25 R
N
0 F
0 X
(rpc_server_cr) 367.13 598.75 T
(eate_thr) 414.93 598.75 T
(ead_pool\050\051) 443.2 598.75 T
(rpc_server_set_thr) 367.13 584.16 T
(ead_qlen\050\051) 431.81 584.16 T
(rpc_server_set_thr) 367.13 569.57 T
(ead_pool_fn\050\051) 431.81 569.57 T
(rpc_server_fr) 367.13 409.93 T
(ee_thr) 414.05 409.93 T
(ead_pool\050\051) 435.66 409.93 T
6 F
(rpc__cthread_invoke_null\050call_rep, executor\051) 299 528.75 T
(cthread_reaper) 419.84 470.83 T
(cthread_pool_assign_thread) 270.88 500.83 T
(cthread_pool_queue_call) 243.38 471.94 T
(RPC_MUTEX_INIT\050cthread_mutex\051) 273.38 673.75 T
449.6 443.55 443.72 446.35 449.09 450.04 449.35 446.8 4 Y
V
449.36 446.78 449.36 446.78 2 L
N
444.78 507.97 444.78 507.97 2 L
N
291.7 595.75 286.5 598.75 291.7 601.75 3 L
N
367.13 598.75 286.5 598.75 2 L
N
292.77 581.16 287.57 584.16 292.77 587.16 3 L
N
367.13 584.16 287.57 584.16 2 L
N
291.7 566.57 286.5 569.57 291.7 572.57 3 L
N
367.13 569.57 286.5 569.57 2 L
N
261.47 548.32 258.64 553.61 264.64 553.41 3 L
N
299 528.75 258.64 553.6 2 L
N
279.85 480.01 274.17 478.08 275.34 483.97 3 L
N
292.93 499.5 274.18 478.07 2 L
N
217.17 546.53 214.71 552.01 220.68 551.4 3 L
N
270.65 515.7 273.1 510.22 267.13 510.83 3 L
N
214.72 552 273.11 510.21 2 L
N
206.52 406.93 201.32 409.93 206.52 412.93 3 L
N
367.13 409.93 201.32 409.93 2 L
N
123.11 492.85 227.57 529.82 R
8 X
N
225.33 485.79 223.74 491.58 229.55 490.05 3 L
0 X
N
243.38 471.94 223.75 491.57 2 L
N
192.92 553.97 198.62 555.84 197.39 549.97 3 L
N
181.04 531.69 175.34 529.82 176.57 535.7 3 L
N
198.62 555.84 175.34 529.82 2 L
N
266.8 679.43 272 676.43 266.8 673.43 3 L
N
187.33 676.43 272 676.43 2 L
N
158 623.7 155 618.5 152 623.7 3 L
N
155 655 155 618.5 2 L
N
156.5 585.7 153.5 580.5 150.5 585.7 3 L
N
153.5 609 153.5 580.5 2 L
N
180.5 603.8 183.5 609 186.5 603.8 3 L
N
183.5 601.5 183.5 609 2 L
N
157.44 566.7 154.44 561.5 151.44 566.7 3 L
N
154.44 574.15 154.44 561.5 2 L
N
158.5 487.66 161.5 492.85 164.5 487.66 3 L
N
161.5 473.5 161.5 492.85 2 L
N
164.77 434.2 161.77 429 158.77 434.2 3 L
N
161.77 448.76 161.77 429 2 L
N
0 0 612 792 C
108 384 504 708 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "18" 37
%%Page: "19" 37
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-19) 518.02 34.67 T
5 11 Q
(rpc_server_listen) 144 712 T
2 12 Q
(. An application may specify a dif) 256.06 712 T
(ferent queue depth by) 418.73 712 T
(calling the) 144 698.5 T
5 11 Q
(rpc_server_set_thread_pool_qlen) 197.3 698.5 T
2 12 Q
( function. If it does so, that) 401.64 698.5 T
(depth will also be used for the default and reserved pools.) 144 685 T
(If an application creates reserved pools, the values of) 144 665.5 T
5 11 Q
( n_threads) 398.79 665.5 T
2 12 Q
( and) 464.71 665.5 T
5 11 Q
(max_queued) 144 652 T
2 12 Q
( for those pools are derived from those of the default pool. A pool\325) 209.92 652 T
(s) 529.03 652 T
(threadcount can be modi\336ed using) 144 638.5 T
5 11 Q
(cthread_pool_set_threadcount) 312.22 638.5 T
2 12 Q
(, but) 496.79 638.5 T
-0.3 (only if no threads in the pool are running \050i. e., the pool has either not yet been acti-) 144 625 P
(vated via) 144 611.5 T
5 11 Q
(cthread_pool_start) 190.63 611.5 T
2 12 Q
(, or the pool has been temporarily deactivated) 309.28 611.5 T
(by) 144 598 T
5 11 Q
(cthread_pool_stop) 158.99 598 T
2 12 Q
(\051.) 271.05 598 T
(Once the pool has been allocated,) 144 578.5 T
5 11 Q
(cthread_pool_start) 308.2 578.5 T
2 12 Q
(kicks of) 433.45 578.5 T
(f the pool\325) 471.54 578.5 T
(s) 520.84 578.5 T
(threads by calling) 144 565 T
5 11 Q
(cthread_create) 232.27 565 T
2 12 Q
( to create) 324.56 565 T
5 11 Q
(n_threads) 371.51 565 T
2 12 Q
( threads running) 430.84 565 T
5 11 Q
(cthread_call_executor) 144 551.5 T
2 12 Q
( as the thread\325) 282.43 551.5 T
(s \322startroutine.\323 This routine simply) 349.38 551.5 T
(updates the information in the thread\325) 144 538 T
(s parent) 324.21 538 T
5 11 Q
(cthread_pool_elt_t) 364.85 538 T
2 12 Q
(, disables) 483.5 538 T
(general cancellability in the thread, and arranges for the thread to wait on a condi-) 144 524.5 T
(tion variable that will indicate when there is a call for the thread to execute.) 144 511 T
(Call threads are always created with general cancellability disabled. Just before) 144 491.5 T
(executing a queued call, the thread invokes the) 144 478 T
5 11 Q
(RPC_CALL_LOCK) 371.49 478 T
2 12 Q
( macro to lock) 457.18 478 T
(the call rep. It also increments the call\325) 144 464.5 T
(s reference count \050see page 6-18\051. The call) 329.86 464.5 T
(reference and lock are handed of) 144 451 T
(f to a protocol-speci\336c executor function by the) 300.62 451 T
(thread, which will eventually relinquish them. W) 144 437.5 T
(e discuss the datagram RPC call) 378.22 437.5 T
(executor function on page 7-30.) 144 424 T
281.58 403.19 144 403.19 2 L
V
0.59 H
0 Z
N
(Assigning a Thread to a Call) 144 404.5 T
-0.45 (The internal routine) 144 384.5 P
5 11 Q
-1 (rpc__cthread_invoke_null) 240.9 384.5 P
2 12 Q
-0.45 (is the main conduit between) 404.7 384.5 P
-0.05 (the call thread service and the rest of the runtime. Called by such communications) 144 371 P
(service routines as) 144 357.5 T
5 11 Q
(receive_dispatch) 235.59 357.5 T
2 12 Q
( and) 341.06 357.5 T
5 11 Q
(rpc__dg_do_request) 364.38 357.5 T
2 12 Q
(, it handles) 483.03 357.5 T
(the actual work of \336lling in the) 144 344 T
5 11 Q
(executor) 295.57 344 T
2 12 Q
(and) 354.9 344 T
5 11 Q
(args) 375.22 344 T
2 12 Q
( \336elds of the call rep\325) 401.58 344 T
(s) 503.18 344 T
(thread-private data, as well as the) 144 330.5 T
5 11 Q
(call_rep) 307.53 330.5 T
2 12 Q
( \336eld of the pointed-at cthread, after) 360.26 330.5 T
(which it toggles that thread\325) 144 317 T
(s condition variable so the thread will wake up and) 277.92 317 T
(begin executing the call. If there are no idle cthreads available, this routine) 144 303.5 T
(attempts to queue the call.) 144 290 T
(The call thread service assigns threads to calls using the following rules.) 144 270.5 T
(\245) 144 251 T
(If any reserved pools have been created, the call thread service attempts to) 162 251 T
(assign the call to an idle thread from the appropriate reserved pool. Applica-) 162 237.5 T
-0.43 (tions may register an application-speci\336c pool lookup function that the runtime) 162 224 P
-0.12 (will use for assigning threads form a particular pool to calls with, for example,) 162 210.5 P
(speci\336c interface or object UUIDs.) 162 197 T
(\245) 144 177.5 T
(If there are no idle threads in the appropriate reserved pool, the call thread ser-) 162 177.5 T
(vice attempts to assign the call to a free thread from the default pool.) 162 164 T
(\245) 144 144.5 T
-0.22 (If there are no idle threads in the default pool either) 162 144.5 P
-0.22 (, the call gets queued simul-) 406.5 144.5 P
(taneously to the default and reserved pools.) 162 131 T
-0.14 (This queueing strategy maximizes a call\325) 144 111.5 P
-0.14 (s chances of running \050by getting assigned) 339.48 111.5 P
(to an idle thread\051 immediately upon receipt. The call thread service guarantees to) 144 98 T
(dequeue calls for a given interface in the order in which they were received, but) 144 84.5 T
FMENDPAGE
%%EndPage: "19" 38
%%Page: "20" 38
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-20) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(makes no guarantees about which thread in a pool \050or) 108 712 T
(, in the absence of a pool) 364.32 712 T
(lookup function, which pool\051 will execute a call. When a pool lookup function is) 108 698.5 T
0 (supplied, it will be used to determine the thread pool from which the call thread is) 108 685 P
(allocated. Since all threads are created equal, this should not matter) 108 671.5 T
(. However) 430.43 671.5 T
(,) 479.9 671.5 T
-0.18 (since every call that is queued to the default queue increments the) 108 658 P
5 11 Q
-0.39 (n_queued) 424.3 658 P
2 12 Q
-0.18 ( \336eld) 477.03 658 P
(of that) 108 644.5 T
5 11 Q
(cthread_pool_elt_t) 141.98 644.5 T
2 12 Q
(. Calls queued to a reserved pool increment that) 260.63 644.5 T
(pool\325) 108 631 T
(s) 132.66 631 T
5 11 Q
(n_queued) 140.32 631 T
2 12 Q
( \336eld as well as that of the default pool. As a result of this logic,) 193.06 631 T
-0.19 (there can be more than) 108 617.5 P
5 11 Q
-0.42 ( max_queued) 216.46 617.5 P
2 12 Q
-0.19 ( calls in the default pool\325) 288.55 617.5 P
-0.19 (s queue. Since none) 406.51 617.5 P
-0.23 (of the multiply-enqueued calls execute more than once, this anomaly has no practi-) 108 604 P
(cal ef) 108 590.5 T
(fect.) 134.09 590.5 T
-0.31 (When calls are dequeued, they are always fetched from the default queue \336rst. The) 108 571 P
-0.01 (\322matching\323 reserved pool queue element is then found \321 based on the) 108 557.5 P
5 11 Q
-0.02 (qelt) 450.33 557.5 P
2 12 Q
-0.01 ( \336eld) 476.69 557.5 P
(of the call rep\325) 108 544 T
(s thread-private data \321 and dequeued.) 177.61 544 T
4 F
(Figur) 220.33 524.5 T
(e 3-7: The Call Thr) 247.21 524.5 T
(ead Queue) 340.05 524.5 T
2 F
(Calls queued for the default pool are represented as actual call reps, as shown in) 108 247 T
(Figure 3-7. \050For more detail on call reps in general, see Chapter 6\051.) 108 233.5 T
(Calls queued for a reserved pool are represented by the) 108 214 T
5 11 Q
(cthread_queue_elt) 375.11 214 T
2 12 Q
(structures described above. Initially) 108 200.5 T
(,) 278.43 200.5 T
5 11 Q
(n_queued) 284.42 200.5 T
2 12 Q
( of these elements reside on the) 337.16 200.5 T
(pool\325) 108 187 T
(s) 132.66 187 T
5 11 Q
(free_queue) 140.32 187 T
2 12 Q
(. As calls are queued to the reserved pool, elements are) 206.24 187 T
(removed from the head of the) 108 173.5 T
5 11 Q
(free_queue) 253.22 173.5 T
2 12 Q
( and appended to the tail of the) 319.13 173.5 T
5 11 Q
(call_queue) 108 160 T
2 12 Q
(. When a call is executed, its \050freed-up\051) 173.92 160 T
5 11 Q
(cthread_queue_elt) 365.75 160 T
2 12 Q
( is) 477.81 160 T
(returned to the) 108 146.5 T
5 11 Q
(free_queue) 180.94 146.5 T
2 12 Q
(. All this is detailed in Figure 3-8.) 246.86 146.5 T
108 268.5 504 520.5 C
6 8 Q
0 X
0 K
(cthread_pool_elt_t) 127.09 497.25 T
(link) 127.09 487.94 T
(n_threads) 127.09 478.64 T
(n_idle) 127.09 469.33 T
(ctbl) 127.09 460.02 T
(idle_cthread) 127.09 450.71 T
(n_queued) 127.09 441.41 T
(max_queued) 127.09 432.1 T
(call_queue) 127.09 422.79 T
(free_queue) 127.09 413.49 T
(stop) 127.09 404.18 T
(queue_elt_alloc) 127.09 394.87 T
123.16 388.72 200.59 508.29 R
0.5 H
0 Z
N
(rpc_call_rep_t) 230.36 347.64 T
(\311) 230.36 338.33 T
(\311) 230.36 329.03 T
(\311) 230.36 319.72 T
(\311) 230.36 310.41 T
226.29 288.11 289.29 360.11 R
N
240.97 413.86 259.72 432.61 R
N
259.72 413.86 278.47 432.61 R
N
278.47 413.86 297.22 432.61 R
N
297.22 413.86 315.97 432.61 R
N
315.97 413.86 334.72 432.61 R
N
334.72 413.86 353.47 432.61 R
N
353.47 413.86 372.22 432.61 R
N
372.22 413.86 390.97 432.61 R
N
235.23 425.79 240.43 422.79 235.23 419.79 3 L
N
165.76 422.79 240.43 422.79 2 L
N
334.72 432.61 289.29 360.11 2 L
10 X
N
334.72 413.86 289.29 288.11 2 L
N
315.97 432.61 226.29 360.11 2 L
N
0 0 612 792 C
108 268.5 504 520.5 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "20" 39
%%Page: "21" 39
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-21) 518.02 34.67 T
(Figur) 232.67 712 T
(e 3-8: Call Thr) 259.55 712 T
(ead Queue Relationships) 331.4 712 T
283.59 465.07 144 465.07 2 L
V
0.59 H
0 Z
N
2 F
(Shutting Down Thread Pools) 144 466.38 T
(A request to stop a server translates, eventually) 144 446.38 T
(, to a call to the routine) 369.72 446.38 T
5 11 Q
(cthread_pool_stop) 144 432.88 T
2 12 Q
(, which has a \322wait \337ag\323 ar) 256.06 432.88 T
(gument that speci\336es whether) 386.07 432.88 T
(or not the threads in the pool should \336nish executing. If this \337ag is not set,) 144 419.38 T
5 11 Q
(cthread_pool_stop) 144 405.88 T
2 12 Q
( \336rst sets the pool\325) 256.06 405.88 T
(s) 344.02 405.88 T
5 11 Q
(stop) 351.68 405.88 T
2 12 Q
( \336eld to true, then toggles each) 378.05 405.88 T
(thread\325) 144 392.38 T
(s condition variable to make sure that even blocked \050waiting\051 threads will) 177.31 392.38 T
(notice the change. Otherwise,) 144 378.88 T
5 11 Q
(cthread_pool_stop) 289.22 378.88 T
2 12 Q
( disables async cancels for) 401.28 378.88 T
(the running threads, then awaits normal termination.) 144 365.38 T
(As a means of avoiding problems induced by simultaneous shutdown and start-up) 144 345.88 T
(requests, the call thread service maintains a private boolean,) 144 332.38 T
5 11 Q
(cthread_invoke_enabled) 144 318.88 T
2 12 Q
(, that is set to false whenever a server is shutting) 289.02 318.88 T
(down. All routines that are capable of allocating threads from a pool check this) 144 305.38 T
(value before doing so.) 144 291.88 T
(Once all threads in a pool have stopped,) 144 272.38 T
5 11 Q
(cthread_pool_stop) 338.86 272.38 T
2 12 Q
( frees whatever) 450.92 272.38 T
(resources the pool had been consuming.) 144 258.88 T
259.57 238.07 144 238.07 2 L
V
N
(The Call Thread Reaper) 144 239.38 T
-0.25 (The call thread service implements a simpleminded reaper task that has the respon-) 144 219.38 P
(sibility of reclaiming resources allocated to thread pools that have become idle.) 144 205.88 T
(Periodically \050every 36 seconds, computed as) 144 192.38 T
5 11 Q
(3*\05060*) 360.84 192.38 T
(rpc_clock_sec\051) 400.39 192.38 T
2 12 Q
(\051, the) 492.68 192.38 T
(reaper thread wakes up and traverses a \322reaper queue\323 of thread pool element) 144 178.88 T
-0.47 (pointers. For every pool in the list, the reaper examines each thread. Pools in which) 144 165.38 P
(all of the threads have a status of \322no thread\323 are marked for deletion, then freed.) 144 151.88 T
266.95 121.66 108 121.66 2 L
V
1.33 H
N
0 14 Q
(The Network Listener Thr) 108 123.04 T
287.69 121.66 266.7 121.66 2 L
V
N
(ead) 266.7 123.04 T
2 12 Q
(Information on this subject will be part of a future edition of this document.) 144 102.38 T
143.38 487.88 540 708 C
6 8 Q
0 X
0 K
(cthread_pool_elt_t) 166.08 678.34 T
(link) 166.08 669.04 T
(n_threads) 166.08 659.73 T
(n_idle) 166.08 650.42 T
(ctbl) 166.08 641.12 T
(idle_cthread) 166.08 631.81 T
(n_queued) 166.08 622.5 T
(max_queued) 166.08 613.2 T
(call_queue) 166.08 603.89 T
(free_queue) 166.08 594.58 T
(stop) 166.08 585.27 T
(queue_elt_alloc) 166.08 575.97 T
162.15 569.81 239.58 689.38 R
0.5 H
0 Z
N
289.66 628.66 308.41 647.41 R
N
308.41 628.66 327.16 647.41 R
N
327.16 628.66 345.91 647.41 R
N
345.91 628.66 364.66 647.41 R
N
364.66 628.66 383.41 647.41 R
N
383.41 628.66 402.16 647.41 R
N
402.16 628.66 420.91 647.41 R
N
420.91 628.66 439.66 647.41 R
N
290.7 569.9 309.45 588.65 R
N
309.45 569.9 328.2 588.65 R
N
328.2 569.9 346.95 588.65 R
N
346.95 569.9 365.7 588.65 R
N
365.7 569.9 384.45 588.65 R
N
384.45 569.9 403.2 588.65 R
N
403.2 569.9 421.95 588.65 R
N
421.95 569.9 440.7 588.65 R
N
(cthread_queue_elt_t) 293.43 532.02 T
(link) 293.43 522.72 T
(*pool) 293.43 513.41 T
(call_rep) 293.43 504.1 T
290.39 495.24 382.54 540.77 R
N
(max_queued) 447.86 636.24 T
(max_queued) 446.79 576.57 T
8 F
(dequeuing) 410.9 591.91 T
427.8 584.14 431.31 579.28 425.34 578.66 3 L
N
299.04 638.04 431.32 579.27 2 L
N
424.31 638.62 430.28 638.04 426.79 633.15 3 L
N
300.07 579.27 430.29 638.04 2 L
N
381.54 496.74 403.2 569.9 2 L
10 X
N
384.45 588.65 290.39 540.77 2 L
N
403.2 588.65 382.54 540.77 2 L
N
283.56 637.5 288.75 634.5 283.56 631.5 3 L
0 X
N
205 605.75 288.13 605.75 259.38 634.5 288.75 634.5 4 L
N
284.81 579.37 290 576.37 284.81 573.37 3 L
N
207.5 597 288.75 597 268.13 576.37 290 576.37 4 L
N
(enqueuing) 398.57 617.89 T
0 0 612 792 C
143.38 487.88 540 708 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "21" 40
%%Page: "22" 40
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-22) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
230.59 709.28 72 709.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Common Binding Services) 72 710.67 T
2 12 Q
(The RPC runtime\325) 108 690 T
(s common binding services are responsible for establishing and) 195.96 690 T
(maintaining information about the ties that bind clients and servers to each other) 108 676.5 T
(.) 493.08 676.5 T
(Although much binding information is protocol-speci\336c, and DCE RPC protocol) 108 663 T
-0.04 (services typically de\336ne their own binding representations, all RPC bindings have) 108 649.5 P
(certain common features. These common features are supported by the common) 108 636 T
(binding services, and are maintained in a data structure called an) 108 622.5 T
5 11 Q
(rpc_binding_rep_t) 108 609 T
2 12 Q
( \050\322binding rep\323 for short\051, de\336ned in) 220.06 609 T
5 11 Q
(com.h) 397.26 609 T
2 12 Q
(. A pointer to) 430.22 609 T
0 (one of these structures is usually the \336rst element of any protocol-speci\336c binding) 108 595.5 P
(information. All binding handles used in client/server communications point to) 108 582 T
(one of these structures.) 108 568.5 T
(Binding service routines come in public and private \337avors, and in common and) 108 549 T
(protocol-speci\336c \337avors as well. The common binding services, which are imple-) 108 535.5 T
(mented in the \336le) 108 522 T
5 11 Q
(combind.c) 194.62 522 T
2 12 Q
(, are responsible for initializing and manipulating) 253.94 522 T
(those \336elds of a binding rep that are common to all protocol families. In this sec-) 108 508.5 T
(tion, we\325ll concentrate on the actions and interactions of these routines. W) 108 495 T
(e\325ll) 463.11 495 T
-0.14 (cover protocol-speci\336c manipulations of the binding rep in the material on the pro-) 108 481.5 P
(tocol services.) 108 468 T
FMENDPAGE
%%EndPage: "22" 41
%%Page: "23" 41
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-23) 518.02 34.67 T
0 F
(RPC Binding Service Data Structur) 108 712 T
(es) 291.01 712 T
2 F
-0.36 (T) 144 692 P
-0.36 (able 3-10 illustrates and describes the \336elds of an) 150.49 692 P
5 11 Q
-0.79 (rpc_binding_rep_t.) 386.75 692 P
2 12 Q
-0.36 ( Fields) 505.4 692 P
(in the shaded area are meaningful only to the client instance, and will return) 144 678.5 T
(invalid \050and therefore problematic\051 data if examined by a server stub.) 144 665 T
(More detailed explanations of the \336elds and how they are initialized follow:) 144 136.5 T
5 11 Q
(link) 144 117 T
2 12 Q
(an) 216 117 T
5 11 Q
(rpc_list_t) 230.32 117 T
2 12 Q
( that furnishes this binding_rep\325) 296.24 117 T
(s connection to a) 448.82 117 T
(list of bindings maintained for possible re-use by the connection-) 216 103.5 T
(oriented protocol service.) 216 90 T
4 F
(T) 245.22 647 T
(able 3-10: rpc_binding_r) 250.78 647 T
(ep_t structur) 372.27 647 T
(e) 433.46 647 T
7 11 Q
(rpc_binding_rep_t {) 146 625.67 T
5 F
(link) 146 606.67 T
(/* list of which we are a member */) 290 606.67 T
(protocol_id) 146 587.67 T
(/* protocol we are using */) 290 587.67 T
(refcnt) 146 568.67 T
(/* # of references held to this) 290 568.67 T
(binding_rep, for concurrent/shared) 290 555.67 T
(handles */) 290 542.67 T
(obj) 146 523.67 T
(/* object UUID */) 290 523.67 T
(rpc_addr) 146 504.67 T
(/* pointer to the rpc address struc-) 290 504.67 T
(ture associated with this binding */) 290 491.67 T
(is_server) 146 472.67 T
-0.36 (/* true if this is a server-side bind-) 290 472.67 P
(ing */) 290 459.67 T
(addr_is_dynamic) 146 440.67 T
(/* true if rpc_addr \050above\051 is not) 290 440.67 T
(well-known */) 290 427.67 T
(auth_info) 146 408.67 T
(/* auth_info pointer */) 290 408.67 T
(fork_count) 146 389.67 T
-1.01 (/* so we can dispose of this handle in) 290 389.67 P
(a postfork child */) 290 376.67 T
145.5 337.25 286.5 368.75 R
6 X
V
0 X
(bound_server_instance) 146 357.67 T
289.5 337.25 538.5 368.75 R
6 X
V
0 X
-0.36 (/* true if we have actually connected) 290 357.67 P
(on this binding */) 290 344.67 T
145.5 292.25 286.5 336.75 R
6 X
V
0 X
(addr_has_endpoint) 146 325.67 T
289.5 292.25 538.5 336.75 R
6 X
V
0 X
-1.13 (/* true iff we have obtained an actual) 290 325.67 P
(communications endpoint for this) 290 312.67 T
(address */) 290 299.67 T
145.5 260.25 286.5 291.75 R
6 X
V
0 X
(timeout) 146 280.67 T
289.5 260.25 538.5 291.75 R
6 X
V
0 X
-0.5 (/* rpc_default_timeout value for this) 290 280.67 P
(binding */) 290 267.67 T
145.5 241.25 286.5 259.75 R
6 X
V
0 X
(calls_in_progress) 146 248.67 T
289.5 241.25 538.5 259.75 R
6 X
V
0 X
-0.41 (/* calls started using this binding */) 290 248.67 P
145.5 209.25 286.5 240.75 R
6 X
V
0 X
(ns_specif) 146 229.67 T
(ic) 205.33 229.67 T
289.5 209.25 538.5 240.75 R
6 X
V
0 X
(/* pointer to nameservice-specif) 290 229.67 T
(ic) 500.94 229.67 T
(data */) 290 216.67 T
145.5 177.25 286.5 208.75 R
6 X
V
0 X
(call_timeout_time) 146 197.67 T
289.5 177.25 538.5 208.75 R
6 X
V
0 X
(/* how many rpc_clock_seconds until) 290 197.67 T
(this call times out */) 290 184.67 T
7 F
(}) 146 165.67 T
142.75 638 142.75 157 2 L
V
0.5 H
0 Z
N
145.25 635.5 145.25 159.5 2 L
V
N
286.75 617.75 286.75 177.25 2 L
V
N
289.25 617.75 289.25 177.25 2 L
V
N
538.75 635.5 538.75 159.5 2 L
V
N
541.25 638 541.25 157 2 L
V
N
142.5 638.25 541.5 638.25 2 L
V
N
145 635.75 539 635.75 2 L
V
N
145.5 618 538.5 618 2 L
V
N
145.5 599 538.5 599 2 L
V
N
145.5 580 538.5 580 2 L
V
N
145.5 535 538.5 535 2 L
V
N
145.5 516 538.5 516 2 L
V
N
145.5 484 538.5 484 2 L
V
N
145.5 452 538.5 452 2 L
V
N
145.5 420 538.5 420 2 L
V
N
145.5 401 538.5 401 2 L
V
N
145.5 369 538.5 369 2 L
V
N
145.5 337 538.5 337 2 L
V
N
145.5 292 538.5 292 2 L
V
N
145.5 260 538.5 260 2 L
V
N
145.5 241 538.5 241 2 L
V
N
145.5 209 538.5 209 2 L
V
N
145.5 177 538.5 177 2 L
V
N
145 159.25 539 159.25 2 L
V
N
142.5 156.75 541.5 156.75 2 L
V
N
FMENDPAGE
%%EndPage: "23" 42
%%Page: "24" 42
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-24) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
5 11 Q
(protocol_id) 108 712.67 T
2 12 Q
(the protocol over which communications on this binding will take) 180 700 T
(place, represented by an) 180 686.5 T
5 11 Q
(rpc_protocol_id_t) 298.89 686.5 T
2 12 Q
( \050de\336ned in) 410.95 686.5 T
5 11 Q
(com.h) 180 673 T
2 12 Q
(\051, initialized by) 212.96 673 T
5 11 Q
(rpc_binding_alloc.) 288.91 673 T
(refcnt) 108 653.5 T
2 12 Q
(Number of references held to this binding rep. This \336eld is initial-) 180 653.5 T
(ized by) 180 640 T
5 11 Q
(rpc_binding_alloc) 217.97 640 T
2 12 Q
( to a value of 1. That value will be) 330.03 640 T
(incremented for every call to) 180 626.5 T
5 11 Q
(rpc_binding_handle_copy) 321.55 626.5 T
2 12 Q
(\050which calls) 180 613 T
5 11 Q
(RPC_BINDING_REFERENCE) 241.29 613 T
2 12 Q
( to do the actual work of) 379.71 613 T
(bumping the reference count\051. Calls to free a binding decrement) 180 599.5 T
5 11 Q
(refcnt) 180 586 T
2 12 Q
( by way of the) 219.55 586 T
5 11 Q
(RPC_BINDING_RELEASE) 291.16 586 T
2 12 Q
( macro. For more) 416.41 586 T
(on reference counts, see page 6-18.) 180 572.5 T
5 11 Q
(obj) 108 553 T
2 12 Q
(Object UUID associated with this binding.) 180 553 T
5 11 Q
(rpc_addr) 108 533.5 T
2 12 Q
(An) 180 533.5 T
5 11 Q
(rpc_addr_p_t) 197.65 533.5 T
2 12 Q
( representing the address of the client \050or) 276.76 533.5 T
(server\051 half of this binding. It is initialized to) 180 520 T
5 11 Q
(NULL) 398.53 520 T
2 12 Q
( if the binding) 424.9 520 T
-0.01 (refers to the local host. Otherwise, it is initialized to a protocol-spe-) 180 506.5 P
(ci\336c value via a call to the protocol service speci\336ed in) 180 493 T
5 11 Q
(protocol_id) 180 479.5 T
2 12 Q
(.) 252.51 479.5 T
5 11 Q
(is_server) 111 460 T
2 12 Q
(T) 180 460 T
(rue if this is a server instance. Initialized by both the) 186.91 460 T
5 11 Q
(rpc_binding_alloc) 180 446.5 T
2 12 Q
( and) 292.06 446.5 T
5 11 Q
(rpc_binding_copy) 315.38 446.5 T
2 12 Q
( routines. Inter-) 420.84 446.5 T
(nal operations that need to inquire whether a binding refers to a cli-) 180 433 T
(ent or a server instance call through the accessor macros) 180 419.5 T
5 11 Q
(RPC_BINDING_IS_SERVER) 180 406 T
2 12 Q
( and) 318.43 406 T
5 11 Q
(RPC_BINDING_IS_CLIENT) 341.74 406 T
2 12 Q
(,) 479.28 406 T
(which simply examine this \336eld and return the appropriate \050true or) 180 392.5 T
(false\051 value.) 180 379 T
5 11 Q
(addr_is_dynamic) 108 360.17 T
2 12 Q
-0.09 (Endpoints can be either dynamically assigned by the endpoint map-) 180 347.5 P
(per \050described in Chapter 5\051 or supplied in \322well-known\323 form by) 180 334 T
-0.29 (the application. Since the expectation is that the former case will be) 180 320.5 P
(the most common one, this \336eld is initialized true in all cases) 180 307 T
(except the one in which the binding rep is created through a call to) 180 293.5 T
5 11 Q
(rpc_binding_from_string_binding) 180 280 T
2 12 Q
(.) 384.35 280 T
5 11 Q
(auth_info) 108 260.5 T
2 12 Q
(Initialized to NULL, \336lled in later by a protocol-speci\336c authenti-) 180 260.5 T
(cation setup function) 180 247 T
5 11 Q
(fork_count) 108 227.5 T
2 12 Q
-0.52 (Initialized to) 180 227.5 P
5 11 Q
-1.14 (rpc_g_fork_count) 242.92 227.5 P
2 12 Q
-0.52 ( by) 348.39 227.5 P
5 11 Q
-1.14 (rpc_binding_alloc) 365.34 227.5 P
2 12 Q
-0.52 (. The) 477.4 227.5 P
-0.35 (RPC runtime maintains a per) 180 214 P
-0.35 (-process global) 317.63 214 P
5 11 Q
-0.76 (rpc_g_fork_count) 392.88 214 P
2 12 Q
-0.35 (,) 498.35 214 P
(which is incremented every time a client process successfully calls) 180 200.5 T
5 11 Q
-0.65 (fork) 180 187 P
2 12 Q
-0.29 ( to create a child. \050Attempts by servers to) 206.37 187 P
5 11 Q
-0.65 (fork) 404.23 187 P
2 12 Q
-0.29 ( are rejected as) 430.59 187 P
(illegal.\051) 180 173.5 T
(Since all RPC state is ef) 180 154 T
(fectively vaporized across a fork, any post-) 295.39 154 T
(fork reference held only by the application to state created by the) 180 140.5 T
(runtime must not end up stranded. The private binding service rou-) 180 127 T
(tine) 180 113.5 T
5 11 Q
(rpc_binding_cross_fork) 200.99 113.5 T
2 12 Q
( accomplishes this by initializ-) 346.01 113.5 T
-0.37 (ing, prefork, the binding rep\325) 180 100 P
-0.37 (s) 317.1 100 P
5 11 Q
-0.81 (fork_count) 324.39 100 P
2 12 Q
-0.37 ( \336eld to the value in the) 390.31 100 P
-0.33 (global) 180 86.5 P
5 11 Q
-0.73 (rpc_g_fork_count) 212.65 86.5 P
2 12 Q
-0.33 (. After the fork, the fork_count \336eld of) 318.12 86.5 P
FMENDPAGE
%%EndPage: "24" 43
%%Page: "25" 43
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-25) 518.02 34.67 T
2 F
(the binding rep is compared against the global value) 216 712 T
5 11 Q
(rpc_g_fork_count) 216 698.5 T
2 12 Q
(and, if they\325re not equal, invoking a proto-) 328.06 698.5 T
(col-speci\336c routine to free the handle and its associated state in the) 216 685 T
(child. In most cases, the runtime handles this by calling the macro) 216 671.5 T
5 11 Q
(RPC_BINDING_VALIDATE) 216 658 T
2 12 Q
(, which we describe in the next subsec-) 347.84 658 T
(tion.\051) 216 644.5 T
5 11 Q
(bound_server_instance) 144 625.67 T
2 12 Q
-0.48 (Initialized false. Set to true by) 216 613 P
5 11 Q
-1.05 (rpc__dg_call_transceive) 360.7 613 P
2 12 Q
-0.48 ( once) 512.31 613 P
(this handle has actually been used to communicate with a server of) 216 599.5 T
-0.04 (the appropriate type \050i.e., to which subsequent calls on this binding) 216 586 P
(should go\051. Used to support call serialization, and is part of the) 216 572.5 T
(mechanism that ensures all calls on a given binding handle bind to) 216 559 T
(the same server instance.) 216 545.5 T
5 11 Q
(addr_has_endpoint) 144 526.67 T
2 12 Q
(T) 216 514 T
(rue if) 222.91 514 T
(f the) 248.33 514 T
5 11 Q
(rpc_addr) 272.98 514 T
2 12 Q
(\336eld includes a communications endpoint) 332.31 514 T
(as delivered by the endpoint mapper) 216 500.5 T
(. This \336eld is used by the data-) 389.55 500.5 T
(gram protocol service\325) 216 487 T
(s call forwarding mechanism \050described on) 323.92 487 T
(page 5-23\051. Note that if) 216 473.5 T
5 11 Q
(bound_server_instance) 331.24 473.5 T
2 12 Q
( is true, then) 469.67 473.5 T
5 11 Q
(addr_has_endpoint) 216 460 T
2 12 Q
( will also be true \050but not vice-versa\051.) 328.06 460 T
5 11 Q
(timeout) 144 440.5 T
2 12 Q
-0.49 (This is the call timeout \322knob\323 setting for this call. It is initialized to) 216 440.5 P
(0 by) 216 427 T
5 11 Q
(rpc_binding_alloc) 239.99 427 T
2 12 Q
(.) 352.05 427 T
5 11 Q
(calls_in_progress) 144 408.17 T
2 12 Q
(This \336eld provides a form of locking for the binding rep that pre-) 216 395.5 T
(vents inappropriate API operations \050e.g.) 216 382 T
5 11 Q
(rpc_binding_set_object) 216 368.5 T
2 12 Q
(\051 while a call on this binding is in) 361.02 368.5 T
(progress. Initialized to 0. Incremented by) 216 355 T
5 11 Q
(RPC_BINDING_CALL_START) 216 341.5 T
2 12 Q
( for every call_start on this binding.) 361.02 341.5 T
(Decremented by) 216 328 T
5 11 Q
(RPC_BINDING_CALL_END) 297.93 328 T
2 12 Q
( for every call_end on) 429.76 328 T
(this binding.) 216 314.5 T
5 11 Q
(ns_specif) 144 295.67 T
(ic) 203.33 295.67 T
2 12 Q
(Nameservice-speci\336c data, as described in Chapter 4.) 216 283 T
5 11 Q
(call_timeout_time) 144 264.17 T
2 12 Q
(The call\325) 216 251.5 T
(s timeout time as established by) 258.3 251.5 T
5 11 Q
(rpc_mgmt_set_call_timeout.) 216 238 T
0 12 Q
(Common Binding Services Internal Operations) 108 218.5 T
2 F
(The binding service provides a number of internal functions and macros that:) 144 198.5 T
(\245) 144 179 T
(allocate, initialize, and validate a binding rep) 162 179 T
(\245) 144 159.5 T
(examine and set various \336elds of a binding rep after it is initialized) 162 159.5 T
(\245) 144 140 T
(manage validation, parsing, and decomposition of string bindings) 162 140 T
(\245) 144 120.5 T
(free unused binding rep resources.) 162 120.5 T
(Figure 3-9 illustrates the common binding service\325) 144 101 T
(s internal operations. Note that) 386.52 101 T
(many of the operations described here call the protocol service named in the bind-) 144 87.5 T
FMENDPAGE
%%EndPage: "25" 44
%%Page: "26" 44
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-26) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(ing rep\325) 108 712 T
(s) 144.98 712 T
5 11 Q
(protocol_id) 152.64 712 T
2 12 Q
(\336eld to carry out tasks that are protocol- or NAF-spe-) 231.74 712 T
(ci\336c. These operations are handled through those services\325 entrypoint vectors, as) 108 698.5 T
(described on page 2-1.) 108 685 T
4 F
(Figur) 200.46 665.5 T
(e 3-9: RPC Common Binding Services) 227.34 665.5 T
284.57 314.69 108 314.69 2 L
V
0.59 H
0 Z
N
2 F
(Allocating and Initializing a Binding) 108 316 T
-0.18 (The private routine) 108 296 P
5 11 Q
-0.39 (rpc__binding_alloc) 202.39 296 P
2 12 Q
-0.18 ( is the base binding rep allocation rou-) 321.04 296 P
(tine. It, in conjunction with the protocol service speci\336ed in the binding\325) 108 282.5 T
(s) 454.79 282.5 T
5 11 Q
(protocol_id) 108 269 T
2 12 Q
( \336eld, handles all memory allocation and data initialization chores) 180.51 269 T
(related to establishing a binding. The public routines) 108 255.5 T
5 11 Q
(rpc_binding_copy) 363.51 255.5 T
2 12 Q
( and) 468.98 255.5 T
5 11 Q
(rpc_binding_from_string_binding) 108 242 T
2 12 Q
( rely on) 312.35 242 T
5 11 Q
(rpc__binding_alloc) 351.98 242 T
2 12 Q
( to do) 470.64 242 T
(most of their work.) 108 228.5 T
(Three macros are de\336ned in) 108 209 T
5 11 Q
(comp.h) 244.88 209 T
2 12 Q
( for the convenience of internal callers that) 284.43 209 T
-0.13 (need to check a bindings validity before use, or that need to determine if a binding) 108 195.5 P
(is a client or server instance) 108 182 T
5 11 Q
-0.26 (RPC_BINDING_VALIDATE) 108 162.5 P
2 12 Q
-0.12 ( makes sure that the binding rep is non-NULL and that) 239.84 162.5 P
(its) 108 149 T
5 11 Q
( protocol_id) 119.33 149 T
2 12 Q
( \336eld is within the range of supported protocol ids. It also com-) 198.43 149 T
(pares the binding_rep\325) 108 135.5 T
(s) 215.26 135.5 T
5 11 Q
(fork_count) 222.92 135.5 T
2 12 Q
( \336eld with the global fork count and, if) 288.84 135.5 T
-0.16 (they\325re not equal, calls) 108 122 P
5 11 Q
-0.34 (rpc_binding_cross_fork) 219.62 122 P
2 12 Q
-0.16 ( to \336x up binding state in the) 364.64 122 P
(child.) 108 108.5 T
108 337.5 504 661.5 C
253.04 530.71 343.04 539.82 R
5 X
0 K
V
254.36 442.46 344.36 598.36 R
1 H
0 Z
0 X
N
6 8 Q
(is_server) 257.39 532.69 T
348.97 358.18 438.97 367.28 R
5 X
V
2 Z
3 X
0 90 41.05 28.55 346.15 447.07 A
0 90 63.85 44.42 346.15 447.08 A
346.14 475.63 346.14 491.5 2 L
N
387.2 447.07 371.23 447.07 398.6 428.03 425.98 447.07 410.01 447.07 5 L
N
272.04 632.28 357.22 652.64 R
5 X
V
0.5 H
0 Z
0 X
N
(rpc_binding_rep_t) 257.39 588.53 T
(link) 257.39 579.23 T
(protocol_id) 257.39 569.92 T
(refcnt) 257.39 560.61 T
(obj) 257.39 551.31 T
(rpc_addr) 257.39 542 T
(addr_is_dynamic) 257.39 523.39 T
(auth_info) 257.39 514.08 T
(fork_count) 257.39 504.77 T
(bound_server_instance) 257.39 495.47 T
(addr_has_endpoint) 257.39 486.16 T
(timeout) 257.39 476.85 T
(calls_in_progress) 257.39 467.55 T
(ns_speci\336c) 257.39 458.24 T
(call_timeout_time) 257.39 448.93 T
0 F
(rpc_binding_fr) 150.07 522.98 T
(ee\050\051) 201.91 522.98 T
(rpc_binding_vector_fr) 149.36 509.98 T
(ee\050\051) 226.5 509.98 T
(rpc_binding_set_object) 377.39 558.65 T
(rpc_binding_inq_object) 377.39 545.65 T
(rpc_binding_r) 149.89 480.93 T
(eset\050\051) 199.07 480.93 T
(rpc_binding_copy\050\051) 155.25 590.55 T
(rpc_binding_inq_client) 149.89 467.93 T
(rpc_binding_handle_copy\050\051) 394 598.99 T
6 F
(rpc__binding_free) 175.61 553.51 T
(rpc__binding_alloc) 175.61 573 T
(RPC_BINDING_IS_SER) 375.25 520.08 T
(VER) 462.64 520.08 T
(RPC_BINDING_IS_CLIENT) 375.25 506.3 T
(RPC_BINDING_COND_INIT) 115.43 646.46 T
(RPC_BINDING_COND_DELETE) 115.43 637.16 T
(RPC_BINDING_COND_W) 115.43 627.85 T
(AIT) 209.75 627.85 T
(RPC_BINDING_COND_TIMED_W) 115.43 618.54 T
(AIT) 239.07 618.54 T
(rpc_g_global_mutex) 274.72 645.32 T
(rpc_g_global_cond) 274.72 636.01 T
113.7 613 252.45 654.79 R
9 X
N
373.29 458.89 491.8 485.14 R
7 X
V
9 X
N
370.97 538.89 466.86 566.75 R
N
146.14 499.61 239.89 531.21 R
N
372.57 501.03 485.61 532.11 R
N
0 X
(rpc_binding_rep_t) 353.43 416.07 T
(link) 353.43 406.76 T
(protocol_id) 353.43 397.45 T
(refcnt) 353.43 388.15 T
(obj) 353.43 378.84 T
(rpc_addr) 353.43 369.54 T
(is_server) 353.43 360.23 T
(addr_is_dynamic) 353.43 350.92 T
(auth_info) 353.43 341.61 T
(fork_count) 353.43 332.31 T
348.97 271.43 438.97 427.32 R
N
(= 0) 390.43 361.01 T
0 F
(rpc_binding_server_to_client) 377.18 476.49 T
(rpc_binding_server_fr) 376.83 466.64 T
(om_client) 453.97 466.64 T
6 F
(= 1) 292.75 532.82 T
147.39 458.36 237.39 491.57 R
9 X
N
365.77 556.36 370.97 553.36 365.77 550.36 3 L
0 X
N
274.38 550.36 269.18 553.36 274.38 556.36 3 L
N
370.97 553.36 269.18 553.36 2 L
N
249.16 556.51 254.36 553.51 249.16 550.51 3 L
N
239.6 553.51 254.36 553.51 2 L
N
(RPC_BINDING_REFERENCE) 372.75 576.21 T
266.84 649.61 272.04 646.61 266.84 643.61 3 L
N
252.45 646.61 272.04 646.61 2 L
N
207 583.23 204 578.04 201 583.23 3 L
N
204 589.82 204 578.04 2 L
N
249.16 576 254.36 573 249.16 570 3 L
N
242.27 573 254.36 573 2 L
N
204.75 547.66 207.75 552.86 210.75 547.66 3 L
N
207.75 531.21 207.75 552.86 2 L
N
423.97 588.05 420.97 582.86 417.97 588.05 3 L
N
420.97 596.25 420.97 582.86 2 L
N
349.56 573.21 344.36 576.21 349.56 579.21 3 L
N
372.75 576.21 344.36 576.21 2 L
N
249.16 477.96 254.36 474.96 249.16 471.96 3 L
N
237.4 474.96 254.36 474.96 2 L
N
366.68 525.87 371.88 522.87 366.68 519.87 3 L
N
310.63 535.37 360 535.37 347.5 522.87 371.88 522.87 4 L
N
(RPC_BINDING_RELEASE) 118.75 431 T
142.3 515.87 147.5 512.87 142.3 509.87 3 L
N
126.88 441.62 126.88 512.87 147.5 512.87 3 L
N
0 0 612 792 C
108 337.5 504 661.5 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "26" 45
%%Page: "27" 45
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-27) 518.02 34.67 T
5 11 Q
(RPC_BINDING_VALIDATE_SERVER) 147 712 T
2 12 Q
( and) 324.98 712 T
5 11 Q
(RPC_BINDING_VALIDATE_CLIENT) 348.29 712 T
2 12 Q
(simply combine the) 144 698.5 T
5 11 Q
(RPC_BINDING_VALIDATE) 241.61 698.5 T
2 12 Q
( and) 373.45 698.5 T
5 11 Q
(RPC_BINDING_IS_CLIENT) 396.77 698.5 T
2 12 Q
(\050or) 144 685 T
5 11 Q
(_IS_SERVER) 160.98 685 T
2 12 Q
(\051 macros in a sequence commonly used by runtime functions.) 226.9 685 T
(All critical operations on a binding rep are carried out under the protection of the) 144 665.5 T
(RPC global mutex, and using the RPC global condition variable to signal any) 144 652 T
(threads that may be waiting to access binding rep data. These operations are) 144 638.5 T
(wrapped in the following macros, which are de\336ned in) 144 625 T
5 11 Q
(com.h) 409.14 625 T
2 12 Q
(.) 442.1 625 T
5 11 Q
(RPC_BINDING_COND_INIT) 144 606.17 T
(RPC_BINDING_COND_DELETE) 144 594.17 T
(RPC_BINDING_COND_WAIT) 144 582.17 T
(RPC_BINDING_COND_TIMED_WAIT) 144 570.17 T
(RPC_BINDING_COND_BROADCAST) 144 558.17 T
376.53 538.19 144 538.19 2 L
V
0.59 H
0 Z
N
2 12 Q
(Operations on Individual Fields of Binding Data) 144 539.5 T
5 11 Q
(rpc_binding_set_object, rpc_binding_inq_object) 144 520.17 T
2 12 Q
(These public routines, which are also used internally by the end-) 216 507.5 T
(point mapper) 216 494 T
(, copy a \050new\051 object UUID into the binding rep\325) 279.14 494 T
(s) 513.64 494 T
5 11 Q
(objuuid) 216 480.5 T
2 12 Q
( \336eld or return the contents thereof.) 262.14 480.5 T
5 11 Q
(rpc_binding_reset) 144 461.67 T
2 12 Q
(This public routine sets) 216 449 T
5 11 Q
(bound_server_instance) 331.27 449 T
2 12 Q
( false, then) 469.7 449 T
(calls the) 216 435.5 T
5 11 Q
(naf) 258.64 435.5 T
2 12 Q
( epv\325) 278.41 435.5 T
(s) 302.06 435.5 T
5 11 Q
(addr_set_endpoint) 309.73 435.5 T
2 12 Q
( function with a zero-) 421.79 435.5 T
(length string to remove the binding\325) 216 422 T
(s endpoint. Once this has been) 388.24 422 T
(accomplished, it sets) 216 408.5 T
5 11 Q
(addr_has_endpoint) 318.6 408.5 T
2 12 Q
(false and calls the) 437.26 408.5 T
5 11 Q
-0.08 (naf) 216 395 P
2 12 Q
-0.04 ( epv\325) 235.77 395 P
-0.04 (s) 259.39 395 P
5 11 Q
-0.08 (binding_reset) 267.02 395 P
2 12 Q
-0.04 ( function to signal the protocol service) 352.71 395 P
(that the binding has changed.) 216 381.5 T
5 11 Q
(RPC_BINDING_REFERENCE) 359.24 381.5 T
2 12 Q
( incre-) 497.67 381.5 T
(ments the) 216 368 T
5 11 Q
(refcnt) 265.3 368 T
2 12 Q
( \336eld of a binding rep.) 304.86 368 T
5 11 Q
(RPC_BINDING_CALL_START) 144 349.17 T
2 12 Q
(increments the) 216 336.5 T
5 11 Q
(calls_in_progress) 289.28 336.5 T
2 12 Q
( \336eld) 401.34 336.5 T
5 11 Q
(RPC_BINDING_CALL_END) 144 317.67 T
2 12 Q
(decrements the) 216 305 T
5 11 Q
(calls_in_progress) 291.27 305 T
2 12 Q
( \336eld) 403.33 305 T
5 11 Q
(rpc_binding_inq_client) 144 286.17 T
2 12 Q
(Given a server binding handle, this public routine returns the asso-) 216 273.5 T
-0.05 (ciated client binding handle by calling through the protocol service) 216 260 P
(epv) 216 246.5 T
(. It is also called by the protocol services\325 liveness-monitoring) 232.54 246.5 T
(functions.) 216 233 T
5 11 Q
(rpc_binding_handle_copy) 144 214.17 T
2 12 Q
(Calls through the) 216 201.5 T
5 11 Q
(RPC_BINDING_REFERENCE) 301.62 201.5 T
2 12 Q
( macro to create a) 440.05 201.5 T
(copy of \050i.e., an additional reference to\051 an extant binding handle.) 216 188 T
(by bumping the binding rep\325) 216 174.5 T
(s) 352.59 174.5 T
5 11 Q
(refcnt) 360.26 174.5 T
2 12 Q
(\336eld.) 406.4 174.5 T
270.6 153.69 144 153.69 2 L
V
N
(String Binding Operations) 144 155 T
-0.39 (String bindings are the only bindings not supplied by the name service. Given their) 144 135 P
(fallible human origins, the binding services must take pains to validate their con-) 144 121.5 T
(tents before actually using the data they contain in a binding rep.) 144 108 T
FMENDPAGE
%%EndPage: "27" 46
%%Page: "28" 46
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-28) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(The public routines) 108 712 T
5 11 Q
(rpc_binding_to_string_binding) 204.27 712 T
-2.21 (rpc_binding_from_string_binding rpc_string_binding_parse) 108 698.5 P
2 12 Q
-1.01 (,) 474.93 698.5 P
-1.01 (and) 482.3 698.5 P
5 11 Q
-0.67 (rpc_string_binding_compose) 108 685 P
2 12 Q
-0.3 (manage the composition, decomposition, and) 285.31 685 P
(validation of string bindings. All are conceptually straightforward. Figure 3-10) 108 671.5 T
(describes their fundamental interactions.) 108 658 T
4 F
(Figur) 210.27 638.5 T
(e 3-10: String Binding Operations) 237.15 638.5 T
403.18 389.48 108 389.48 2 L
V
0.59 H
0 Z
N
2 F
(Miscellaneous Public and Private Common Binding Routines) 108 390.79 T
5 11 Q
(rpc_binding_handle_equal) 108 371.45 T
2 12 Q
(This routine is a place-holder for anticipated future functionality) 180 358.79 T
(.) 488.33 358.79 T
5 11 Q
(rpc_binding_server_to_client) 108 339.95 T
2 12 Q
(This public routine provides a compatibility wrapper for) 180 327.29 T
5 11 Q
(rpc_binding_server_from_client) 180 313.79 T
2 12 Q
(.) 377.75 313.79 T
5 11 Q
(rpc_binding_server_from_client) 108 294.95 T
2 12 Q
-0.39 (Given a server instance of a binding rep, this routine creates a client) 180 282.29 P
(version of it.) 180 268.79 T
5 11 Q
(rpc__binding_cross_fork) 108 249.95 T
2 12 Q
(This private routine veri\336es that a process holding a reference to a) 180 237.29 T
(binding rep has forked, then calls into the appropriate naf epv oper-) 180 223.79 T
(ation to free any protocol-speci\336c state that should not survive the) 180 210.29 T
(fork. See the description of) 180 196.79 T
5 11 Q
(binding_rep-) 313.23 196.79 T
(>fork_count) 392.34 196.79 T
2 12 Q
( above.) 464.85 196.79 T
5 11 Q
(rpc__binding_inq_sockaddr) 108 177.95 T
2 12 Q
(This is a private routine used only in kernel RPC.) 180 165.29 T
238.58 144.48 108 144.48 2 L
V
N
(Freeing Binding Resources) 108 145.79 T
(All binding deallocations, internally- and externally-generated, call through) 108 125.79 T
5 11 Q
(RPC_BINDING_RELEASE) 108 112.29 T
2 12 Q
(, which handles the required adjustments to the binding) 233.24 112.29 T
(rep\325) 108 98.79 T
(s reference count.) 126.65 98.79 T
108 412.29 504 634.5 C
410.13 610.35 413.13 615.54 416.13 610.35 3 L
0.5 H
0 Z
8 X
0 K
N
312.5 521.17 413.13 521.17 413.13 615.54 3 L
N
382 612.43 385 617.62 388 612.43 3 L
N
318.75 551.37 385 551.37 385 617.62 3 L
N
377.04 524.14 494.36 554.68 R
7 X
V
9 X
N
274.36 421.35 364.36 577.25 R
0 X
N
6 8 Q
(rpc_binding_rep_t) 277.39 567.43 T
(link) 277.39 558.12 T
(protocol_id) 277.39 548.81 T
(refcnt) 277.39 539.51 T
(obj) 277.39 530.2 T
(rpc_addr) 277.39 520.89 T
(addr_is_dynamic) 277.39 502.28 T
(auth_info) 277.39 492.97 T
(fork_count) 277.39 483.67 T
(bound_server_instance) 277.39 474.36 T
(addr_has_endpoint) 277.39 465.05 T
(timeout) 277.39 455.74 T
(calls_in_progress) 277.39 446.44 T
(ns_speci\336c) 277.39 437.13 T
(call_timeout_time) 277.39 427.82 T
0 F
(rpc_binding_to_string_binding) 380.13 531.21 T
(rpc_binding_fr) 127.39 560.74 T
(om_string_binding) 179.23 560.74 T
(rpc_string_binding_parse) 127.39 543.21 T
(rpc_string_binding_compose) 379.24 546.04 T
6 F
(is_server) 277.39 511.59 T
(objuuid@protseq:address[endpoint, opt, ... ]) 121.5 615.75 T
(objuuid@protseq:address[endpoint, opt, ... ]) 337.89 616.32 T
(rpc__binding_alloc) 158.47 462.53 T
124.36 536.46 255.61 570.75 R
8 X
N
269.16 465.53 274.36 462.53 269.16 459.53 3 L
0 X
N
225.12 462.53 274.36 462.53 2 L
N
424.24 582.16 421.29 582.16 439.02 605.79 456.75 582.16 453.8 582.16 5 L
6 X
V
0.2 H
2 Z
0 X
N
453.8 582.16 453.8 558.54 424.24 558.54 424.24 582.16 4 L
6 X
V
0 X
N
165.5 593.18 162.5 593.18 180.5 575.18 198.5 593.18 195.5 593.18 5 L
6 X
V
0 X
N
195.5 593.18 195.5 611.18 165.5 611.18 165.5 593.18 4 L
6 X
V
0 X
N
192.98 473.09 189.98 467.89 186.98 473.09 3 L
0.5 H
0 Z
N
189.98 536.46 189.98 467.89 2 L
N
369.56 536.41 364.36 539.41 369.56 542.41 3 L
N
377.04 539.41 364.36 539.41 2 L
N
347.63 609.3 350.63 614.5 353.63 609.3 3 L
8 X
N
288.75 532.62 350.63 532.62 350.63 614.5 3 L
N
0 0 612 792 C
108 412.29 504 634.5 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "28" 47
%%Page: "29" 47
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-29) 518.02 34.67 T
2 F
(Externally-generated requests to free a binding arrive via the public function) 144 712 T
5 11 Q
(rpc_binding_free) 144 698.5 T
2 12 Q
(. Figure 3-9 \050page 3-26\051 illustrates the relationship of this) 249.47 698.5 T
(function to the private macro) 144 685 T
5 11 Q
(RPC_BINDING_RELEASE) 286.23 685 T
2 12 Q
( and the internal routine) 411.47 685 T
5 11 Q
(rpc__binding_free) 144 671.5 T
2 12 Q
(. Since much of a binding rep\325) 256.06 671.5 T
(s contents is protocol- or) 400.96 671.5 T
-0.24 (nameservice-speci\336c,) 144 658 P
5 11 Q
-0.53 (rpc__binding_free) 250.33 658 P
2 12 Q
-0.24 (, which does the real work of freeing) 362.39 658 P
-0.25 (binding resources, calls through the protocol and naf epvs to free those parts of the) 144 644.5 P
(binding that only they understand, and invokes the RPC runtime\325) 144 631 T
(s global \322name-) 455.83 631 T
(service free\323 function to deal with the) 144 617.5 T
5 11 Q
(ns_specif) 328.18 617.5 T
(ic) 387.51 617.5 T
2 12 Q
( \336eld) 400.69 617.5 T
(A fourth routine,) 144 598 T
5 11 Q
(rpc_binding_vector_free) 227.94 598 T
2 12 Q
(, is called primarily by the name) 379.55 598 T
-0.22 (service\325) 144 584.5 P
-0.22 (s import, export, and lookup routines. This function simply traverses a vec-) 181.3 584.5 P
-0.01 (tor of binding reps and calls) 144 571 P
5 11 Q
-0.03 (rpc_binding_free) 281.17 571 P
2 12 Q
-0.01 ( on each non-NULL entry) 386.64 571 P
-0.01 (, then) 510.38 571 P
(frees the vector memory) 144 557.5 T
(.) 260.12 557.5 T
258.78 527.28 108 527.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Common Socket Services) 108 528.67 T
2 12 Q
(The runtime\325) 144 508 T
(s common socket services are primarily used by the protocol engines) 206.29 508 T
(themselves, and take the form of a layer over the 4.3BSD and 4.4BSD socket IPC) 144 494.5 T
(mechanism that provides:) 144 481 T
(\245) 144 461.5 T
(isolation of non-portable socket traits) 162 461.5 T
(\245) 144 442 T
(a standardized access model to the transport layer for runtime functions that) 162 442 T
-0.29 (send and receive messages over sockets, or that simply need to determine what) 162 428.5 P
(sort of transport services the host OS supports) 162 415 T
(\245) 144 395.5 T
(canonical error handling that \336ts socket errors into the overall RPC error) 162 395.5 T
(reporting mechanism.) 162 382 T
(\245) 144 362.5 T
(fast-path macros for time-critical operations) 162 362.5 T
(\245) 144 343 T
-0.14 (a suitable abstraction for implementation of socket operations in a Unix kernel) 162 343 P
(\050this provision was, in fact, the primary motivator for development of this) 162 329.5 T
(facility) 162 316 T
(.\051) 195.2 316 T
(The common socket services comprise the private routines and macros illustrated) 144 296.5 T
(in Figure 3-1) 144 283 T
(1, all of which are found in) 206.19 283 T
5 11 Q
(comsoc_bsd[ch]) 339.42 283 T
2 12 Q
(. An implementation) 431.71 283 T
(of DCE RPC that needed to run over a fundamentally dif) 144 269.5 T
(ferent socket abstraction) 416.93 269.5 T
(would likely require major rewriting of these routines.) 144 256 T
(Much of the implementation detail in these services concerns portability across) 144 236.5 T
(4BSD variants, as well as across known \050or conceivable\051 diver) 144 223 T
(gences among) 444.22 223 T
(implementations of a given BSD release\325) 144 209.5 T
(s socket library) 340.87 209.5 T
(. Individual routines\325) 413.37 209.5 T
(implementations are straightforward and/or self-explanatory to anyone with a) 144 196 T
0 (good understanding of the underlying Berkeley socket architecture and its various) 144 182.5 P
(implementation quirks) 144 169 T
FMENDPAGE
%%EndPage: "29" 48
%%Page: "30" 48
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-30) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 214.07 712 T
(e 3-1) 240.95 712 T
(1: Common Socket Services) 264.37 712 T
159.44 356.66 72 356.66 2 L
V
1.33 H
0 Z
N
0 14 Q
(Network Addr) 72 358.04 T
274.22 356.66 159.19 356.66 2 L
V
N
(ess Family Services) 159.19 358.04 T
2 12 Q
(The RPC runtime\325) 108 337.38 T
(s network address family \050) 195.96 337.38 T
5 11 Q
(naf) 323.2 337.38 T
2 12 Q
(\051 services provide a generic) 342.97 337.38 T
-0.6 (mechanism for allocating, manipulating, and freeing network addresses, endpoints,) 108 323.88 P
(and socket descriptors. All three of these are somewhat interchangeable, on the) 108 310.38 T
-0.46 (conceptual level at least, and the) 108 296.88 P
5 11 Q
-1.02 (naf) 264.09 296.88 P
2 12 Q
-0.46 ( services allow at least some translations from) 283.87 296.88 P
(one to another) 108 283.38 T
(. The naf services are also responsible for maintaining necessary) 175.96 283.38 T
(associations between protocol sequences, protocols, and network addresses.) 108 269.88 T
(Despite the fact that, today) 108 256.38 T
(, there is typically a one-to-one relationship between) 236.13 256.38 T
(protocol family) 108 242.88 T
(, address family) 181.51 242.88 T
(, and socket type, the expectation that this will be) 257.01 242.88 T
(less of a norm in the future motivated implementation of this layer) 108 229.38 T
(.) 426.14 229.38 T
0 F
(Major Data Structur) 72 209.88 T
(es) 179.03 209.88 T
2 F
-0.3 (Naf service routines typically use the) 108 189.88 P
5 11 Q
-0.67 (naf_id) 287.37 189.88 P
2 12 Q
-0.3 ( constants de\336ned in) 326.92 189.88 P
5 11 Q
-0.67 (com.h) 426.98 189.88 P
2 12 Q
-0.3 ( to index) 459.94 189.88 P
(into the global naf id table, an array of) 108 176.38 T
5 11 Q
(rpc_naf_id_elt_t) 295.19 176.38 T
2 12 Q
( structures, each of) 400.66 176.38 T
72 382.88 502.12 708 C
72 382.88 502.12 708 R
7 X
0 K
V
236.88 451.37 351.25 700.75 R
6 X
V
6 8 Q
0 X
(rpc__socket_open) 92.32 690.22 T
(rpc__socket_close) 92.32 673.64 T
(rpc__socket_bind) 92.32 657.06 T
(rpc__socket_connect) 92.32 640.48 T
(rpc__socket_accept) 92.32 623.9 T
(rpc__socket_listen) 92.32 607.32 T
(rpc__socket_sendmsg) 92.32 590.74 T
(rpc__socket_recvfrom) 92.32 557.58 T
(rpc__socket_recvmsg) 92.32 574.16 T
(rpc__socket_inq_endpoint) 92.32 541 T
(rpc__socket_set_broadcast) 92.74 482.22 T
(rpc__socket_set_bufs) 92.74 465.64 T
(rpc__socket_set_nbio) 92.74 399.32 T
(rpc__socket_set_close_on_exec) 92.74 449.06 T
(rpc__socket_getpeername) 92.32 524.42 T
(rpc__socket_get_if_id) 92.32 507.84 T
(rpc__socket_set_keepalive) 92.74 432.48 T
(rpc__socket_nowriteblock_wait) 92.74 415.9 T
(open) 266.13 690.22 T
(close) 266.13 673.64 T
(bind) 266.13 657.06 T
(connect) 266.13 640.48 T
(accept) 266.13 623.9 T
(listen) 266.13 607.32 T
(sendmsg) 266.13 590.74 T
(recvmsg) 266.13 574.16 T
(recvfrom) 266.13 557.58 T
(getsockname) 266.13 540.25 T
(getpeername) 266.13 523.67 T
(getsockopt) 266.13 507.09 T
(setsockopt) 266.13 490.51 T
(RPC_SOCKET_SENDMSG) 373.14 683.49 T
(RPC_SOCKET_RECVMSG) 373.14 605.58 T
(RPC_SOCKET_RECVFROM) 373.14 523.5 T
256.97 693.75 262.17 690.75 256.97 687.75 3 L
0.5 H
0 Z
N
190.92 690.75 262.17 690.75 2 L
N
256.97 675.75 262.17 672.75 256.97 669.75 3 L
N
190.92 672.75 262.17 672.75 2 L
N
256.97 660.87 262.17 657.87 256.97 654.87 3 L
N
190.92 657.87 262.17 657.87 2 L
N
256.97 645.37 262.17 642.37 256.97 639.37 3 L
N
190.92 642.37 262.17 642.37 2 L
N
256.97 629.87 262.17 626.87 256.97 623.87 3 L
N
190.92 626.87 262.17 626.87 2 L
N
256.97 612.5 262.17 609.5 256.97 606.5 3 L
N
190.92 609.5 262.17 609.5 2 L
N
256.97 596.5 262.17 593.5 256.97 590.5 3 L
N
190.92 593.5 262.17 593.5 2 L
N
256.97 579.75 262.17 576.75 256.97 573.75 3 L
N
190.92 576.75 262.17 576.75 2 L
N
256.97 563.62 262.17 560.62 256.97 557.62 3 L
N
190.92 560.62 262.17 560.62 2 L
N
256.97 546.25 262.17 543.25 256.97 540.25 3 L
N
190.92 543.25 262.17 543.25 2 L
N
256.97 528.75 262.17 525.75 256.97 522.75 3 L
N
190.92 525.75 262.17 525.75 2 L
N
256.97 513.25 262.17 510.25 256.97 507.25 3 L
N
190.92 510.25 262.17 510.25 2 L
N
88.75 392 213.75 492 R
8 X
N
257.93 496.25 263.13 493.25 257.93 490.25 3 L
0 X
N
215 472 260.63 472 239.38 493.25 263.13 493.25 4 L
N
304.57 588.58 299.38 591.58 304.57 594.58 3 L
N
369.38 686.58 296.25 686.58 335 591.58 299.38 591.58 4 L
N
302.7 571.29 297.5 574.29 302.7 577.29 3 L
N
372.5 608.67 353.75 608.67 366.88 574.29 297.5 574.29 4 L
N
373.13 532 298.75 573.87 2 L
N
300.6 556.68 296.87 561.38 302.8 562.26 3 L
N
373.13 531.37 296.88 561.37 2 L
N
0 0 612 792 C
72 382.88 502.12 708 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "30" 49
%%Page: "31" 49
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-31) 518.02 34.67 T
2 F
(which describes a single Network Address Family Extension. T) 144 712 T
(able 3-1) 448.62 712 T
(1 illus-) 487.14 712 T
(trates this structure.) 144 698.5 T
(In addition, the) 144 418 T
5 11 Q
(naf) 219.95 418 T
2 12 Q
(service routines make extensive use of the) 246.32 418 T
5 11 Q
(rpc_addr_p_t) 451.83 418 T
2 12 Q
(,) 530.93 418 T
(the base RPC address structure, illustrated in T) 144 404.5 T
(able 3-12. Network address data) 368.35 404.5 T
(structures vary) 144 391 T
(, so the size of this structure can never be known at compile time,) 214.16 391 T
(which is why it always appears as a pointer type.) 144 377.5 T
0 F
(Common naf Services Internal Operations) 108 194 T
2 F
(These private routines, all of which are implemented in) 144 174 T
5 11 Q
(comnaf.[ch]) 412.47 174 T
2 12 Q
(, are used) 484.98 174 T
(internally by the ep \050endpoint\051, twr \050tower\051 and net \050network\051 services, as well as) 144 160.5 T
(by the protocol services.) 144 147 T
(Nearly all of these routines simply call in through the naf entrypoint vector \050using) 144 127.5 T
(the model described in Chapter 2\051 to a protocol-speci\336c routine that operates) 144 114 T
(directly on network addresses and/or socket descriptors.) 144 100.5 T
4 F
(T) 250.44 680.5 T
(able 3-1) 256 680.5 T
(1: rpc_naf_id_elt_t structur) 294.75 680.5 T
(e) 428.24 680.5 T
7 11 Q
(rpc_naf_id_elt_t {) 146 659.17 T
5 F
(naf_init) 146 640.17 T
(/* the address of the initialization rou-) 254 640.17 T
(tine for this naf. This routine will be) 254 627.17 T
(called by rpc__init. */) 254 614.17 T
(naf_id) 146 595.17 T
(/* A constant identif) 254 595.17 T
(ier \050e.g.,) 392.43 595.17 T
(rpc_c_naf_id_ip\051 representing this network) 254 582.17 T
(address family */) 254 569.17 T
(net_if_id) 146 550.17 T
(A constant identif) 254 550.17 T
(ier \050e.g.,) 372.65 550.17 T
(rpc_c_network_if_id_dgram\051 for the network) 254 537.17 T
(interface type used in the NAF initializa-) 254 524.17 T
(tion routine \050when determining if this NAF) 254 511.17 T
(is supported\051.) 254 498.17 T
(naf_epv) 146 479.17 T
(/* the naf entry point vector, def) 254 479.17 T
(ined in) 478.12 479.17 T
(comnaf.h */) 254 466.17 T
7 F
(}) 146 447.17 T
4 12 Q
(T) 256.99 359.5 T
(able 3-12: rpc_addr_p_t structur) 262.56 359.5 T
(e) 421.68 359.5 T
7 11 Q
(* rpc_addr_p_t {) 146 338.17 T
5 F
(rpc_protseq_id) 146 319.17 T
(/* an rpc_protseq_id_t element describing) 254 319.17 T
(the protocol sequence associated with this) 254 306.17 T
(address */) 254 293.17 T
(len) 146 274.17 T
(/* the length of the address \050sa\051 */) 254 274.17 T
(sa) 146 255.17 T
(/* an opaque pointer to the actual socket) 254 255.17 T
(*/) 254 242.17 T
7 F
(}) 146 223.17 T
142.75 671.5 142.75 438.5 2 L
V
0.5 H
0 Z
N
145.25 669 145.25 441 2 L
V
N
250.75 651.25 250.75 458.75 2 L
V
N
253.25 651.25 253.25 458.75 2 L
V
N
538.75 669 538.75 441 2 L
V
N
541.25 671.5 541.25 438.5 2 L
V
N
142.5 671.75 541.5 671.75 2 L
V
N
145 669.25 539 669.25 2 L
V
N
145.5 651.5 538.5 651.5 2 L
V
N
145.5 606.5 538.5 606.5 2 L
V
N
145.5 561.5 538.5 561.5 2 L
V
N
145.5 490.5 538.5 490.5 2 L
V
N
145.5 458.5 538.5 458.5 2 L
V
N
145 440.75 539 440.75 2 L
V
N
142.5 438.25 541.5 438.25 2 L
V
N
142.75 350.5 142.75 214.5 2 L
V
N
145.25 348 145.25 217 2 L
V
N
250.75 330.25 250.75 234.75 2 L
V
N
253.25 330.25 253.25 234.75 2 L
V
N
538.75 348 538.75 217 2 L
V
N
541.25 350.5 541.25 214.5 2 L
V
N
142.5 350.75 541.5 350.75 2 L
V
N
145 348.25 539 348.25 2 L
V
N
145.5 330.5 538.5 330.5 2 L
V
N
145.5 285.5 538.5 285.5 2 L
V
N
145.5 266.5 538.5 266.5 2 L
V
N
145.5 234.5 538.5 234.5 2 L
V
N
145 216.75 539 216.75 2 L
V
N
142.5 214.25 541.5 214.25 2 L
V
N
FMENDPAGE
%%EndPage: "31" 50
%%Page: "32" 50
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-32) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(Most of the called \050) 108 712 T
5 11 Q
(naf) 201.93 712 T
2 12 Q
(\051 routines take an endpoint and/or an) 221.71 712 T
5 11 Q
(rpc_addr_p_t) 400.58 712 T
2 12 Q
( as) 479.68 712 T
(ar) 108 698.5 T
(guments and operate on one or both. W) 117.1 698.5 T
(e\325ll describe details of the low-level rou-) 305.34 698.5 T
(tines themselves in conjunction with our descriptions of the protocol services. In) 108 685 T
(this section, we only describe the common portion of the naf services.) 108 671.5 T
-0.43 (Note that, even though there are routines that nominally get and set things like max) 108 652 P
(TSDU/TPDU, they exist today mostly in anticipation of future low-level \050in the) 108 638.5 T
(network layer\051 support for this kind of thing. T) 108 625 T
(oday) 332.01 625 T
(, the actual naf-speci\336c rou-) 354.55 625 T
(tines typically return some compiled-in constant based on the protocol sequence) 108 611.5 T
(being used.) 108 598 T
291.54 567.78 72 567.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(Common Interface Registry Services) 72 569.17 T
2 12 Q
(An interface, in the terminology of DCE RPC, is a collection of remotely-callable) 108 548.5 T
(operations. All DCE RPC servers register one or more interfaces using the com-) 108 535 T
(mon interface registry services described in this section. These services include) 108 521.5 T
(routines that:) 108 508 T
(\245) 108 488.5 T
(register an interface) 126 488.5 T
(\245) 108 469 T
(unregister an interface) 126 469 T
(\245) 108 449.5 T
(look up an interface given its type UUID) 126 449.5 T
(\245) 108 430 T
(support discrimination, by clients, among versions of an interface using major) 126 430 T
(and minor version numbers) 126 416.5 T
-0.05 (These services have to have several operational characteristics if they are going to) 108 397 P
-0.49 (meet the needs of lar) 108 383.5 P
-0.49 (ge-scale distributed systems, systems in which servers support) 205.76 383.5 P
(many complex interfaces and service the needs of perhaps hundreds of clients) 108 370 T
-0.34 (each. Chief among these characteristics are ef) 108 356.5 P
-0.34 (\336cient interface lookup, the ability to) 325.18 356.5 P
(support multiple versions of an interface \050e.g., for backward compatibility\051, and a) 108 343 T
(\337exible means of representing interfaces with varying numbers of operations. In) 108 329.5 T
(addition, the various interfaces that the RPC runtime creates and registers for its) 108 316 T
(own use must be protected from inadvertent tampering.) 108 302.5 T
(The services described here are conceptually linked with \050and operationally simi-) 108 283 T
(lar to\051 the object UUID services described on page 3-39. T) 108 269.5 T
(ogether) 388.6 269.5 T
(, these facilities) 424.09 269.5 T
(comprise the basis of DCE RPC\325) 108 256 T
(s presentation of service descriptions to clients.) 265.58 256 T
0 F
(T) 72 236.5 T
(erminology) 78.9 236.5 T
2 F
(A future edition of this document will describe the) 108 216.5 T
5 11 Q
(default_mepv) 353.51 216.5 T
2 12 Q
( and) 432.61 216.5 T
5 11 Q
(if_rep) 455.92 216.5 T
2 12 Q
(in detail.) 108 203 T
FMENDPAGE
%%EndPage: "32" 51
%%Page: "33" 51
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-33) 518.02 34.67 T
0 F
(Interface Registry Data Structur) 108 712 T
(es) 275.31 712 T
2 F
(The interface registry services create and maintain a set of linked lists of the struc-) 144 692 T
(tures described in T) 144 678.5 T
(able 3-13 and T) 238.09 678.5 T
(able 3-14. Both of these structures are de\336ned) 312.86 678.5 T
(in the \336le) 144 275 T
5 11 Q
(comif.c.) 192.31 275 T
2 12 Q
(In addition to these structures, the common interface registry code references the) 144 255.5 T
-0.45 (base interface representation structure and its constituents, which are de\336ned in the) 144 242 P
(\336le) 144 228.5 T
5 11 Q
(sys_idl/stubbase.h) 162.33 228.5 T
2 12 Q
(. T) 280.98 228.5 T
(able 3-15 describes the) 293.46 228.5 T
5 11 Q
(rpc_if_rep_t) 406.7 228.5 T
2 12 Q
(. The syn-) 485.81 228.5 T
4 F
(T) 244.89 660.5 T
(able 3-13: rpc_if_r) 250.45 660.5 T
(gy_entry_t structur) 341.95 660.5 T
(e) 433.79 660.5 T
7 11 Q
(rpc_if_rgy_entry_t {) 146 639.17 T
5 F
(link) 146 620.17 T
(/* list of which we are a member */) 254 620.17 T
(if_spec) 146 601.17 T
(/* pointer to an interface rep */) 254 601.17 T
(default_mepv) 146 582.17 T
(/* default manager epv */) 254 582.17 T
(copied_mepv) 146 563.17 T
(/* true iff the default_mepv was copied at) 254 563.17 T
(registration time */) 254 550.17 T
(internal) 146 531.17 T
(/* true if this is an internal interface,) 254 531.17 T
(should not be unregistered via wildcard) 254 518.17 T
(operations */) 254 505.17 T
(type_info_list) 146 486.17 T
(/* list of rpc_if_type_info_t structures */) 254 486.17 T
7 F
(}) 146 467.17 T
4 12 Q
(T) 245.66 439.5 T
(able 3-14: rpc_if_type_info_t structur) 251.23 439.5 T
(e) 433.01 439.5 T
7 11 Q
(rpc_if_type_info_t {) 146 418.17 T
5 F
(link) 146 399.17 T
(/* list of which we are a member */) 254 399.17 T
(uuid) 146 380.17 T
(/* the interface\325s type UUID */) 254 380.17 T
(mepv) 146 361.17 T
(/* the manager epv table */) 254 361.17 T
(copied_mepv) 146 342.17 T
-0.75 (/* true iff mepv was copied at registration) 254 342.17 P
(time */) 254 329.17 T
7 F
(}) 146 310.17 T
142.75 651.5 142.75 458.5 2 L
V
0.5 H
0 Z
N
145.25 649 145.25 461 2 L
V
N
250.75 631.25 250.75 478.75 2 L
V
N
253.25 631.25 253.25 478.75 2 L
V
N
538.75 649 538.75 461 2 L
V
N
541.25 651.5 541.25 458.5 2 L
V
N
142.5 651.75 541.5 651.75 2 L
V
N
145 649.25 539 649.25 2 L
V
N
145.5 631.5 538.5 631.5 2 L
V
N
145.5 612.5 538.5 612.5 2 L
V
N
145.5 593.5 538.5 593.5 2 L
V
N
145.5 574.5 538.5 574.5 2 L
V
N
145.5 542.5 538.5 542.5 2 L
V
N
145.5 497.5 538.5 497.5 2 L
V
N
145.5 478.5 538.5 478.5 2 L
V
N
145 460.75 539 460.75 2 L
V
N
142.5 458.25 541.5 458.25 2 L
V
N
142.75 430.5 142.75 301.5 2 L
V
N
145.25 428 145.25 304 2 L
V
N
250.75 410.25 250.75 321.75 2 L
V
N
253.25 410.25 253.25 321.75 2 L
V
N
538.75 428 538.75 304 2 L
V
N
541.25 430.5 541.25 301.5 2 L
V
N
142.5 430.75 541.5 430.75 2 L
V
N
145 428.25 539 428.25 2 L
V
N
145.5 410.5 538.5 410.5 2 L
V
N
145.5 391.5 538.5 391.5 2 L
V
N
145.5 372.5 538.5 372.5 2 L
V
N
145.5 353.5 538.5 353.5 2 L
V
N
145.5 321.5 538.5 321.5 2 L
V
N
145 303.75 539 303.75 2 L
V
N
142.5 301.25 541.5 301.25 2 L
V
N
FMENDPAGE
%%EndPage: "33" 52
%%Page: "34" 52
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-34) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(tax vector) 108 712 T
(, endpoint vector) 155.15 712 T
(, and endpoint vector element members are simple) 235.61 712 T
(enough that they need not be described in detail.) 108 698.5 T
(Figure 3-12 illustrates how these structures are related.) 108 388 T
4 F
(T) 223.48 680.5 T
(able 3-15: rpc_if_r) 229.04 680.5 T
(ep_t structur) 320.54 680.5 T
(e) 381.73 680.5 T
7 11 Q
(rpc_if_rep_t {) 108.53 659.17 T
5 F
(ifspec_vers) 108.53 640.17 T
(/* Version of this structure. Only one is) 218 640.17 T
(currently supported */) 218 627.17 T
(opcnt) 108.53 608.17 T
(/* the number of operations in this inter-) 218 608.17 T
(face */) 218 595.17 T
(vers) 108.53 576.17 T
(/* decomposed into major and minor version) 218 576.17 T
(numbers by RPC_IF_VERSION macros */) 218 563.17 T
(id) 108.53 544.17 T
(/* the interface UUID */) 218 544.17 T
(stub_rtl_if_vers) 108.53 525.17 T
(/* Version of stub/runtime API that we) 218 525.17 T
(expect to use */) 218 512.17 T
(endpoint_vector) 108.53 493.17 T
(/* an rpc_endpoint_vector_t structure */) 218 493.17 T
(syntax_vector) 108.53 474.17 T
(/* an rpc_syntax_vector_t structure */) 218 474.17 T
(server_epv) 108.53 455.17 T
(/* the server stub epv */) 218 455.17 T
(mgr_epv) 108.53 436.17 T
(/* the manager epv */) 218 436.17 T
7 F
(}) 108.53 417.17 T
105.28 671.5 105.28 408.5 2 L
V
0.5 H
0 Z
N
107.78 669 107.78 411 2 L
V
N
214.75 651.25 214.75 428.75 2 L
V
N
217.25 651.25 217.25 428.75 2 L
V
N
502.75 669 502.75 411 2 L
V
N
505.25 671.5 505.25 408.5 2 L
V
N
105.03 671.75 505.5 671.75 2 L
V
N
107.53 669.25 503 669.25 2 L
V
N
108.03 651.5 502.5 651.5 2 L
V
N
108.03 619.5 502.5 619.5 2 L
V
N
108.03 587.5 502.5 587.5 2 L
V
N
108.03 555.5 502.5 555.5 2 L
V
N
108.03 536.5 502.5 536.5 2 L
V
N
108.03 504.5 502.5 504.5 2 L
V
N
108.03 485.5 502.5 485.5 2 L
V
N
108.03 466.5 502.5 466.5 2 L
V
N
108.03 447.5 502.5 447.5 2 L
V
N
108.03 428.5 502.5 428.5 2 L
V
N
107.53 410.75 503 410.75 2 L
V
N
105.03 408.25 505.5 408.25 2 L
V
N
FMENDPAGE
%%EndPage: "34" 53
%%Page: "35" 53
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-35) 518.02 34.67 T
(Figur) 219.58 712 T
(e 3-12:) 246.46 712 T
(Interface Registry and T) 283.75 712 T
(ype Info Lists) 399.79 712 T
0 F
(Common Interface Registry Internal Operations) 108 445.38 T
2 F
(The common interface registry services comprise a number of public and private) 144 425.38 T
(functions and macros.Figure 3-13 illustrates their operations.) 144 411.88 T
149 486.88 540 708 C
167 667.32 218.11 688.94 R
5 X
0 K
V
0.5 H
0 Z
0 X
N
167 645.7 218.11 667.32 R
5 X
V
0 X
N
167 624.08 218.11 645.7 R
5 X
V
0 X
N
167 602.46 218.11 624.08 R
5 X
V
0 X
N
167 580.85 218.11 602.46 R
5 X
V
0 X
N
167 559.23 218.11 580.85 R
5 X
V
0 X
N
167 537.61 218.11 559.23 R
5 X
V
0 X
N
167 515.99 218.11 537.61 R
5 X
V
0 X
N
9 8 Q
(rpc_if_rgy_entry_t) 250.33 664.67 T
6 F
(link) 250.33 656.67 T
(if_spec) 250.33 648.67 T
(default_mepv) 250.33 640.67 T
(copied_mepv) 250.33 632.67 T
(internal) 250.33 624.67 T
(type_info_list) 250.33 616.67 T
9 F
(rpc_if_type_info_t) 451.71 536.05 T
6 F
(link) 451.71 528.05 T
(type) 451.71 520.05 T
(mepv) 451.71 512.05 T
(copied_mepv) 451.71 504.05 T
241.33 610.67 331.33 673.67 R
N
448.57 496.33 529.29 547.76 R
N
(rpc_list_t) 157.43 695.57 T
9 F
(if_registry) 191.64 695.57 T
361.95 640.08 413.06 661.7 R
6 X
V
0 X
N
361.95 618.46 413.06 640.08 R
6 X
V
0 X
N
361.95 596.85 413.06 618.46 R
6 X
V
0 X
N
361.95 575.23 413.06 596.85 R
6 X
V
0 X
N
361.95 553.61 413.06 575.23 R
6 X
V
0 X
N
361.95 531.99 413.06 553.61 R
6 X
V
0 X
N
361.95 510.37 413.06 531.99 R
6 X
V
0 X
N
(rpc_if_rep_t) 464.33 687.67 T
6 F
(ifspec_vers) 464.33 678.65 T
(opcnt) 464.33 669.63 T
(vers) 464.33 660.61 T
(id) 464.33 651.59 T
(stub_rtl_if_vers) 464.33 642.57 T
(endpoint_vector) 464.33 633.55 T
(syntax_vector) 464.33 624.53 T
(server_epv) 464.33 615.51 T
(manager_epv) 464.33 606.49 T
457.67 597 527 698.33 R
N
353.8 621.33 359 618.33 353.8 615.33 3 L
N
297 618.33 358.75 618.33 2 L
2 Z
N
241.33 673.67 167 624.08 2 L
9 X
N
241.33 610.67 167 602.46 2 L
N
331.33 610.67 218.11 602.46 2 L
N
413.06 575.23 529.29 547.76 2 L
N
361.95 575.23 448.57 547.76 2 L
N
361.95 553.61 448.57 496.33 2 L
8 X
N
451.06 691.25 456.25 688.25 451.06 685.25 3 L
0 Z
0 X
N
278.75 651.37 358.13 651.37 339.38 688.25 456.25 688.25 4 L
N
0 0 612 792 C
149 486.88 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "35" 54
%%Page: "36" 54
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-36) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 158.32 712 T
(e 3-13: Common Interface Registry Internal Operations) 185.2 712 T
2 F
(In general, the registration, unregistration, and lookup operations implemented by) 108 398.5 T
-0.34 (the interface registry are similar to those implemented by the object UUID service,) 108 385 P
(in that:) 108 371.5 T
(\245) 108 352 T
(interface registry entries are maintained on an) 126 352 T
5 11 Q
(rpc_list_t) 348.81 352 T
2 12 Q
(, indexed by inter-) 414.73 352 T
(face \050type\051 UUID hash.) 126 338.5 T
(\245) 108 319 T
(all operations on the interface registry are carried out under the protection of) 126 319 T
(the interface mutex) 126 305.5 T
(\245) 108 286 T
(interface registry state does not propagate across a fork.) 126 286 T
232.92 265.19 108 265.19 2 L
V
0.59 H
0 Z
N
(Private/Internal Functions) 108 266.5 T
5 11 Q
(rpc__if_fork_handler) 108 247.17 T
2 12 Q
(This routine simply arranges to NULL out all entries in the inter-) 180 234.5 T
(face registry in the postfork child.) 180 221 T
5 11 Q
(rpc__if_id_compare) 108 202.17 T
2 12 Q
(This routine compares two interface registry entries to determine) 180 189.5 T
(equality) 180 176 T
(. It \336rst compares the interface UUIDs and, if they match,) 217.86 176 T
(goes on to compare the versions. If the major version number) 180 162.5 T
-0.08 (matches and the minor one is equal to or greater than the one being) 180 149 P
(compared against, the operation returns true.) 180 135.5 T
5 11 Q
(rpc__if_init) 108 116.67 T
2 12 Q
(This private routine is called at runtime initialization to initialize) 180 104 T
(the interface list mutex.) 180 90.5 T
108 420 504 708 C
121.61 437.35 166.07 478.07 R
7 X
0 K
V
0.5 H
0 Z
0 X
N
250 528.61 313.75 619.14 R
7 X
V
0 X
N
289.79 506.93 324.64 437 2 L
8 X
N
271.04 506.93 248.57 437 2 L
10 X
N
248.57 437 324.64 484.14 R
7 X
V
0 X
N
187.5 637.07 162.86 556.46 2 L
9 X
N
206.25 637.07 237.86 556.46 2 L
8 X
N
162.86 556.46 237.86 620.21 R
7 X
V
0 X
N
6 8 Q
(rpc__if_id_compare) 123.73 488.04 T
(rpc__if_init) 122.05 691.07 T
(rpc__if_inq_endpoint) 343.91 556.56 T
(rpc__if_lookup) 344.98 573.86 T
(rpc__server_register_if_int) 278.9 675.63 T
(rpc__server_unregister_if_int) 278.13 657.59 T
(unregister_if_entry) 278.13 646.75 T
0 F
(rpc_server_r) 415.86 675.64 T
(egister_if\050\051) 460.11 675.64 T
(rpc_server_unr) 406.97 645.46 T
(egister_if\050\051) 460.11 645.46 T
(rpc_if_inq_id\050\051) 445.43 613.68 T
(rpc_server_inq_if\050\051) 430.79 574.93 T
6 F
(RPC_MUTEX_INIT \050if_mutex\051) 186.67 690 T
180.8 694.07 186 691.07 180.8 688.07 3 L
N
160.71 691.07 185.75 691.07 2 L
6 X
V
2 Z
0 X
N
276.92 642.05 386.39 665.86 R
0 Z
9 X
N
391.45 642.46 386.25 645.46 391.45 648.46 3 L
0 X
N
406.97 645.46 386.5 645.46 2 L
2 Z
N
(RPC_IF_VERSION_MAJOR) 322.64 619.12 T
(RPC_IF_VERSION_MINOR) 322.64 610.67 T
319.92 607.83 432.2 629.54 R
0 Z
9 X
N
0 X
(if_registry) 124.82 644.32 T
385.56 674.36 380.36 677.36 385.56 680.36 3 L
N
405.54 677.36 380.36 677.36 2 L
N
112.5 637.07 131.25 657.43 R
N
131.25 637.07 150 657.43 R
N
150 637.07 168.75 657.43 R
N
168.75 637.07 187.5 657.43 R
N
187.5 637.07 206.25 657.43 R
N
206.25 637.07 225 657.43 R
N
225 637.07 243.75 657.43 R
N
243.75 637.07 262.5 657.43 R
N
(link) 165.54 604.35 T
(ifspec) 165.54 595.77 T
(default_mepv) 165.54 587.18 T
(copied_mepv) 165.54 578.59 T
(internal) 165.54 570.01 T
(type_info_list) 165.54 561.42 T
3 F
(\256) 130.71 650.8 T
(\256) 147.82 650.8 T
(\256) 166.54 650.8 T
(\256) 185.79 650.8 T
(\256) 204.5 650.8 T
(\256) 222.68 650.8 T
(\256) 241.57 650.8 T
9 F
(rpc_if_rgy_entry_t) 165.54 612.94 T
206.25 657.43 237.86 620.21 2 L
8 X
N
187.5 657.43 162.86 620.21 2 L
10 X
N
233.54 506.93 252.29 517.78 R
0 X
N
252.29 506.93 271.04 517.78 R
N
271.04 506.93 289.79 517.78 R
N
289.79 506.93 308.54 517.78 R
N
308.54 506.93 327.29 517.78 R
N
327.29 506.93 346.04 517.78 R
N
3 F
(\256) 251.75 512.91 T
(\256) 268.86 512.91 T
(\256) 287.57 512.91 T
(\256) 306.82 512.91 T
(\256) 325.54 512.91 T
6 F
(link) 250.72 468.15 T
(type) 250.72 459.56 T
(mepv) 250.72 450.97 T
(copied_mepv) 250.72 442.39 T
9 F
(rpc_if_type_info_t) 250.72 476.73 T
289.79 517.78 324.64 484.14 2 L
8 X
N
268.86 512.91 248.57 484.14 2 L
9 X
N
178.18 663.27 175.18 658.07 172.18 663.27 3 L
8 X
N
278.9 675.63 175.18 675.63 175.18 658.07 3 L
N
274.63 668.39 279.82 665.39 274.63 662.39 3 L
N
180.98 654.57 180.98 665.39 279.82 665.39 3 L
N
0 X
(rpc_if_rep_p_t) 253.04 609.5 T
(rpc_if_id_t) 123.11 469.12 T
6 F
(uuid) 123.11 460.3 T
(vers_major) 123.11 451.48 T
(vers_minor) 123.11 442.66 T
(ifspec_vers) 253.04 600.25 T
(opcnt) 253.04 591.66 T
(vers) 253.04 583.07 T
(id) 253.04 574.49 T
(stub_rtl_if_vers) 253.04 565.9 T
(endpoint_vector) 253.04 557.31 T
(syntax_vector) 253.04 548.73 T
(server_epv) 253.04 540.14 T
(manager_epv) 253.04 531.55 T
243.91 600.53 249.11 597.53 243.91 594.53 3 L
N
192.32 597.53 249.11 597.53 2 L
N
227.84 514.82 233.04 511.82 227.84 508.82 3 L
N
215.36 563.78 243.75 563.78 213.22 511.82 233.04 511.82 4 L
N
274.13 583.64 268.93 586.64 274.13 589.64 3 L
8 X
N
347.68 604.86 347.68 586.64 268.93 586.64 3 L
N
315.91 557.03 310.72 560.03 315.91 563.03 3 L
N
342.32 560.03 310.72 560.03 2 L
N
266.09 572.75 260.89 575.75 266.09 578.75 3 L
N
341.79 575.75 260.89 575.75 2 L
N
439.13 612.21 433.93 615.21 439.13 618.21 3 L
0 X
N
442.5 615.21 433.93 615.21 2 L
N
402.7 574.18 397.5 577.18 402.7 580.18 3 L
N
428.57 577.18 397.5 577.18 2 L
N
145.55 459 140.36 462 145.55 465 3 L
N
181.61 485.03 181.61 462 140.36 462 3 L
N
0 0 612 792 C
108 420 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "36" 55
%%Page: "37" 55
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-37) 518.02 34.67 T
5 11 Q
(rpc__if_inq_endpoint) 144 712.67 T
2 12 Q
(This routine, used by) 216 700 T
5 11 Q
(rpc_server_use_all_protseqs) 320.27 700 T
2 12 Q
( to com-) 498.25 700 T
(pose the intersection of a system\325) 216 686.5 T
(s supported protocol sequences) 375.56 686.5 T
(and the protocol sequences speci\336ed in the) 216 673 T
5 11 Q
(endpoint) 424.18 673 T
2 12 Q
( attribute of) 476.92 673 T
(an interface de\336nition, traverses the array of endpoint/protseq_id) 216 659.5 T
-0.5 (pairs referenced in the if rep\325) 216 646 P
-0.5 (s) 352.36 646 P
5 11 Q
-1.11 (endpoint_vector) 359.52 646 P
2 12 Q
-0.5 ( \336eld, calling the) 458.39 646 P
(internal function) 216 632.5 T
5 11 Q
(rpc__network_pseq_id_from_pseq) 298.61 632.5 T
2 12 Q
( to) 496.36 632.5 T
(derive the RPC protocol id value \050de\336ned in) 216 619 T
5 11 Q
( com.h) 428.2 619 T
2 12 Q
(\051 from each) 467.75 619 T
(vector element\325) 216 605.5 T
(s) 290.27 605.5 T
5 11 Q
(protseq_id) 297.94 605.5 T
2 12 Q
(. W) 363.86 605.5 T
(e do the conversion to simplify) 380.22 605.5 T
(handling of aliases.) 216 592 T
5 11 Q
(rpc__if_lookup) 144 573.17 T
2 12 Q
(This function searches the interface registry for a given interface) 216 560.5 T
(UUID. On the assumption that sequential calls to this function will) 216 547 T
-0.06 (most often request a lookup of the same interface, the initial search) 216 533.5 P
(is based on a \322hint\323 initialized by the previous search. \050Unsuccess-) 216 520 T
(ful searches initialize this hint to an \322invalid hint\323 value.\051 If this) 216 506.5 T
-0.04 (lookup fails, either because the hint is already invalid, or because a) 216 493 P
(hint-based search does not yield a match,) 216 479.5 T
5 11 Q
(rpc__if_lookup) 416.52 479.5 T
2 12 Q
(resorts to the normal search method of computing a hash value) 216 466 T
-0.29 (based on the interface UUID, then using that value to index into the) 216 452.5 P
(interface registry) 216 439 T
(.) 296.81 439 T
5 11 Q
(rpc__if_mgmt_inq_if_ids) 144 420.17 T
2 12 Q
(This function builds a vector of RPC interface id structures repre-) 216 407.5 T
-0.01 (senting all the active, non-internal interfaces that a server has regis-) 216 394 P
(tered. It calls) 216 380.5 T
5 11 Q
(rpc__if_mgmt_inq_num_registered) 281.28 380.5 T
2 12 Q
(to) 492.22 380.5 T
-0.66 (determine the number of active entries, then allocates storage for an) 216 367 P
5 11 Q
(rpc_if_id_vector_t) 216 353.5 T
2 12 Q
(of these elements and \336lls in the vector) 341.24 353.5 T
(by calling) 216 340 T
5 11 Q
(rpc_if_inq_id) 266.64 340 T
2 12 Q
( on each interface registry entry that) 352.33 340 T
(does not have the internal \337ag set. This routine supports the public) 216 326.5 T
(function) 216 313 T
5 11 Q
(rpc_if_mgmt_inq_if_ids) 258.97 313 T
2 12 Q
(.) 403.99 313 T
5 11 Q
(rpc__if_mgmt_inq_num_registered) 144 294.17 T
2 12 Q
(This function returns an integer value representing the number of) 216 281.5 T
(non-internal) 216 268 T
5 11 Q
(if_entry) 277.62 268 T
2 12 Q
(s under each registered interface.) 330.36 268 T
5 11 Q
(rpc__if_set_wk_endpoint) 144 249.17 T
2 12 Q
-0.48 (This function calls the internal function) 216 236.5 P
5 11 Q
-1.06 (rpc__if_inq_endpoint) 405.65 236.5 P
2 12 Q
(to return the well-known endpoint \050if present\051 referenced by the if) 216 223 T
(spec. If it \336nds one, it calls) 216 209.5 T
5 11 Q
(rpc__naf_addr_set_endpoint) 348.25 209.5 T
2 12 Q
( to) 519.64 209.5 T
(set the endpoint in the referenced) 216 196 T
5 11 Q
(rpc_addr) 378.54 196 T
2 12 Q
(.) 430.61 196 T
5 11 Q
(rpc__server_register_if_int) 144 177.17 T
2 12 Q
(This is the interface service\325) 216 164.5 T
(s base registration function. It is used) 351.23 164.5 T
-0.19 (by all internal functions that need to register an interface, and is the) 216 151 P
(basis of the public function) 216 137.5 T
5 11 Q
(rpc_server_register_if.) 349.58 137.5 T
2 12 Q
( It) 501.19 137.5 T
(builds and interface registry entry by copying the manager epv ref-) 216 124 T
-0.04 (erenced in the) 216 110.5 P
5 11 Q
-0.09 (ifspec) 286.14 110.5 P
2 12 Q
-0.04 ( ar) 325.7 110.5 P
-0.04 (gument, then computes an index at which) 337.76 110.5 P
-0.05 (to register the entry by hashing the type UUID. If no entry exists at) 216 97 P
(this index,) 216 83.5 T
5 11 Q
(rpc__server_register_if_int) 268.98 83.5 T
2 12 Q
( allocates and ini-) 446.95 83.5 T
FMENDPAGE
%%EndPage: "37" 56
%%Page: "38" 56
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-38) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(tializes an entry) 180 712 T
(, then adds it to the list.) 255.16 712 T
(If this routine is called with a NULL) 180 692.5 T
5 11 Q
(manager_epv) 358.55 692.5 T
2 12 Q
( ar) 431.06 692.5 T
(gument, it) 443.16 692.5 T
(uses the default manager epv referenced in the if rep. Otherwise it) 180 679 T
(copies the interface\325) 180 665.5 T
(s manager epv) 276.58 665.5 T
(.) 345.08 665.5 T
5 11 Q
(rpc__server_unregister_if_int) 108 646.67 T
2 12 Q
-0.46 (This is the interface service\325) 180 634 P
-0.46 (s base unregistration function. It is used) 313.37 634 P
(by all internal callers, and is the basis of the public function) 180 620.5 T
5 11 Q
(rpc_server_unregister_if.) 180 607 T
(unregister_if_entry) 108 588.17 T
2 12 Q
(This is the low-level function called by) 180 575.5 T
5 11 Q
(rpc__server_unregister_if_int) 180 562 T
2 12 Q
( to remove an individual) 371.16 562 T
(element from the interface registry) 180 548.5 T
(.) 345.75 548.5 T
188.93 527.69 108 527.69 2 L
V
0.59 H
0 Z
N
(Public Interfaces) 108 529 T
5 11 Q
(rpc_server_register_if) 108 509.67 T
2 12 Q
-0.44 (This function simply calls) 180 497 P
5 11 Q
-0.97 (rpc_server_register_if_int) 306.17 497 P
2 12 Q
-0.44 ( with) 477.56 497 P
(the) 180 483.5 T
5 11 Q
(internal) 197.65 483.5 T
2 12 Q
(\337ag set false.) 256.98 483.5 T
5 11 Q
(rpc_server_unregister_if) 108 464.67 T
2 12 Q
-0.2 (This function calls) 180 452 P
5 11 Q
-0.43 ( rpc_server_unregister_if_int) 268.89 452 P
2 12 Q
-0.2 ( with the) 459.61 452 P
5 11 Q
(internal) 180 438.5 T
2 12 Q
( \337ag set false) 232.73 438.5 T
5 11 Q
(rpc_if_inq_id) 108 419.67 T
2 12 Q
-0.05 (This function extracts major/minor interface version numbers from) 180 407 P
(the if rep\325) 180 393.5 T
(s) 226.63 393.5 T
5 11 Q
(vers) 234.29 393.5 T
2 12 Q
( \336eld via the) 260.66 393.5 T
5 11 Q
(RPC_IF_VERSION) 323.29 393.5 T
2 12 Q
( macros) 415.58 393.5 T
5 11 Q
(rpc_if_id_vector_free) 108 374.67 T
2 12 Q
(This function frees memory allocated for an) 180 362 T
5 11 Q
(rpc_if_id_vector_t) 180 348.5 T
(rpc_server_inq_if) 108 329.67 T
2 12 Q
(Given an ifspec pointer) 180 317 T
(, this function returns the interface UUID) 291.77 317 T
(and manager epv) 180 303.5 T
(.) 261.15 303.5 T
218.88 273.28 72 273.28 2 L
V
1.33 H
N
0 14 Q
(Object Registry Services) 72 274.67 T
2 12 Q
-0.23 (As described in Section 6.1 of the AES, object UUIDs provide a server with a way) 108 254 P
(to support multiple implementations of an interface. The means by which applica-) 108 240.5 T
-0.05 (tions can take advantage of this feature are described in the AES. This section pro-) 108 227 P
(vides a brief discussion of the mechanism by which the runtime supports this) 108 213.5 T
-0.2 (feature. Everything described in this section is implemented in the \336le) 108 200 P
5 11 Q
-0.44 ( comobj.c) 442.11 200 P
2 12 Q
-0.2 (.) 501 200 P
FMENDPAGE
%%EndPage: "38" 57
%%Page: "39" 57
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Common Services) 453.73 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(3-39) 518.02 34.67 T
0 F
(Object Registry Data Structur) 108 712 T
(es) 263.33 712 T
2 F
(The object registry is an) 144 692 T
5 11 Q
(rpc_list_t) 262.92 692 T
2 12 Q
( of three-member elements that represent) 328.83 692 T
(object/type UUID pairs. T) 144 678.5 T
(able 3-16 illustrates an object registry entry) 269.07 678.5 T
(.) 476.8 678.5 T
(This list has its associated mutex, which is used to synchronize manipulations of) 144 534 T
-0.24 (list contents with the ongoing operations of the runtime. Object registry entries are) 144 520.5 P
0 (indexed by a hash value derived from the object UUID. Figure 3-14 illustrates the) 144 507 P
(prototypical object registry lookup operations.) 144 493.5 T
4 F
(Figur) 223.13 474 T
(e 3-14: Object Registry Internal Operations) 250.01 474 T
0 F
(Object Registry Internal Operations) 108 180.5 T
2 F
(The object registry services comprise two private routines and three public ones.) 144 160.5 T
(W) 144 147 T
(e describe them brie\337y here.) 154.36 147 T
5 11 Q
( rpc_object_set_type) 144 128.17 T
2 12 Q
(This function adds an element to the object registry) 216 115.5 T
(. It \336rst calcu-) 461.72 115.5 T
(lates an index for the entry by hashing on the object UUID. If the) 216 102 T
-0.57 (type UUID is the nil UUID,) 216 88.5 P
5 11 Q
-1.25 (rpc_object_set_type) 349.51 88.5 P
2 12 Q
-0.57 ( removes any) 474.75 88.5 P
4 F
(T) 240.56 660.5 T
(able 3-16: rpc_obj_r) 246.12 660.5 T
(gy_entry_t structur) 346.28 660.5 T
(e) 438.11 660.5 T
7 11 Q
(rpc_obj_rgy_entry_t {) 146 639.17 T
5 F
(link) 146 620.17 T
(/* list of which we are a member */) 254 620.17 T
(object_uuid) 146 601.17 T
(/* the object UUID */) 254 601.17 T
(type_uuid) 146 582.17 T
(/* and its associated type UUID */) 254 582.17 T
7 F
(}) 146 563.17 T
142.75 651.5 142.75 554.5 2 L
V
0.5 H
0 Z
N
145.25 649 145.25 557 2 L
V
N
250.75 631.25 250.75 574.75 2 L
V
N
253.25 631.25 253.25 574.75 2 L
V
N
538.75 649 538.75 557 2 L
V
N
541.25 651.5 541.25 554.5 2 L
V
N
142.5 651.75 541.5 651.75 2 L
V
N
145 649.25 539 649.25 2 L
V
N
145.5 631.5 538.5 631.5 2 L
V
N
145.5 612.5 538.5 612.5 2 L
V
N
145.5 593.5 538.5 593.5 2 L
V
N
145.5 574.5 538.5 574.5 2 L
V
N
145 556.75 539 556.75 2 L
V
N
142.5 554.25 541.5 554.25 2 L
V
N
144 202 540 470 C
235.82 385.78 321 431.86 R
7 X
0 K
V
0.5 H
0 Z
0 X
N
164.57 431.86 212.79 453.82 R
5 X
V
0 X
N
164.57 409.89 212.79 431.86 R
5 X
V
0 X
N
164.57 387.93 212.79 409.89 R
5 X
V
0 X
N
164.57 365.96 212.79 387.93 R
5 X
V
0 X
N
164.57 344 212.79 365.96 R
5 X
V
0 X
N
164.57 322.03 212.79 344 R
5 X
V
0 X
N
164.57 300.07 212.79 322.03 R
5 X
V
0 X
N
164.57 278.11 212.79 300.07 R
5 X
V
0 X
N
164.57 256.14 212.79 278.1 R
5 X
V
0 X
N
164.57 234.18 212.79 256.14 R
5 X
V
0 X
N
164.57 212.21 212.79 234.18 R
5 X
V
0 X
N
6 8 Q
(rpc_obj_rgy_entry_t) 240.11 419 T
(link) 240.11 409.69 T
(object_uuid) 240.11 400.39 T
(type_uuid) 240.11 391.08 T
(rpc_list_t obj_registry) 151.71 457.57 T
(rpc_object_set_type) 363.59 424 T
(rpc_object_inq_type) 363.68 348.62 T
(rpc_obj_set_inq_fn) 279.84 234.49 T
(rpc_obj_init) 255.11 451.61 T
(RPC_MUTEX_INIT \050obj_mutex\051) 337.61 451.42 T
329.32 421 324.13 424 329.32 427 3 L
N
363.59 424 324.13 424 2 L
N
(obj_registry[index]) 249.13 434.62 T
(index=uuid_hash\050\051) 340.38 400.11 T
287.45 398.78 282.25 401.78 287.45 404.78 3 L
10 X
N
335.38 401.78 282.25 401.78 2 L
N
0 X
(uuid_equal\050object_uuid\051) 356 313.17 T
(inq_fn) 296.63 300.94 T
(type_uuid) 449.13 299.83 T
(object_uuid) 169.63 311.62 T
(type_uuid) 169.63 302.32 T
(object_uuid) 168.88 333.62 T
(type_uuid) 168.88 324.32 T
(object_uuid) 170 356.25 T
(type_uuid) 170 346.94 T
(object_uuid) 170.63 399.38 T
(type_uuid) 170.63 390.07 T
(object_uuid) 169.88 421.38 T
(type_uuid) 169.88 412.07 T
(object_uuid) 170.38 445.25 T
(type_uuid) 170.38 435.94 T
401.77 327.32 398.77 322.12 395.77 327.32 3 L
N
398.77 346.12 398.77 322.12 2 L
N
216.2 310.17 211 313.17 216.2 316.17 3 L
N
356 313.17 211 313.17 2 L
N
287.25 292.75 334.13 310.25 R
9 X
N
304.25 281.3 307.25 286.5 310.25 281.3 3 L
0 X
N
307.25 244.62 307.25 286.5 2 L
N
440.18 304.5 445.38 301.5 440.18 298.5 3 L
N
334.13 301.5 445.38 301.5 2 L
N
270.38 281.5 490.38 361.5 R
9 X
N
0 0 612 792 C
144 202 540 470 R
4 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "39" 58
%%Page: "40" 58
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Common Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(3-40) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(object registry entry with a matching object UUID. Otherwise, it) 180 712 T
(checks to be sure that the object UUID is not already registered,) 180 698.5 T
(then inserts the type/object UUID pair into the list at the appropri-) 180 685 T
(ate spot.) 180 671.5 T
5 11 Q
(rpc_object_inq_type) 108 652.67 T
2 12 Q
-0.2 (This function indexes into the object registry to the place where the) 180 640 P
(given object UUID resides, then returns the associated type UUID) 180 626.5 T
(if there is one. If the entry\325) 180 613 T
(s type UUID is nil,) 308.23 613 T
5 11 Q
(rpc_object_inq_type) 180 599.5 T
2 12 Q
( calls the inquiry function \050described in) 305.24 599.5 T
-0.06 (the next paragraph\051 if one has been registered. Failure to deliver an) 180 586 P
(object-to-type mapping returns a nil UUID and leaves the) 180 572.5 T
5 11 Q
(type_uuid) 180 559 T
2 12 Q
( \336eld of the registry entry set to nil.) 239.33 559 T
5 11 Q
(rpc_object_set_inq_fn) 108 540.17 T
2 12 Q
(Applications may call this routine to register an inquiry function) 180 527.5 T
(that) 180 514 T
5 11 Q
(rpc_object_inq_type) 200.99 514 T
2 12 Q
( will use to derive object-to-type) 326.23 514 T
-0.21 (mapping for object registry entries that have a nil) 180 500.5 P
5 11 Q
-0.47 (type_uuid) 417.57 500.5 P
2 12 Q
-0.21 ( \336eld.) 476.89 500.5 P
5 11 Q
(rpc__obj_init) 108 481.67 T
2 12 Q
(This private routine initializes the object registry and its mutex.) 180 469 T
5 11 Q
( rpc__obj_fork_handler) 108 450.17 T
2 12 Q
(This private routine is the fork handler associated with the object) 180 437.5 T
-0.23 (registry) 180 424 P
-0.23 (. It simply arranges to NULL out all the entries in the object) 215.86 424 P
(registry in the postfork child.) 180 410.5 T
FMENDPAGE
%%EndPage: "40" 59
%%Page: "1" 59
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-1) 524.01 34.67 T
540 706.22 205.88 706.22 2 L
V
1.71 H
0 Z
N
0 18 Q
0.9 (Chapter 4: RPC Nameservice Interface) 205.88 708 S
2 12 Q
-0.18 (DCE RPC is integrated with the DCE Cell Directory Service \050CDS\051 via a group of) 144 592 P
-0.2 (routines that enable servers to store information about themselves in the CDS data-) 144 578.5 P
(base and clients to retrieve this information. These routines comprise what is) 144 565 T
(known as the Name Service Interface, or NSI. Since external NSI interfaces try to) 144 551.5 T
0 (avoid dependencies on unique features of the DCE 1.x Cell Directory Service, the) 144 538 P
(term NSI has additional connotations of Name Service Independence.) 144 524.5 T
(In this chapter) 144 505 T
(, we describe those features of the NSI layer that most directly) 212.13 505 T
(re\337ect the needs of the RPC runtime. Much NSI implementation detail is unavoid-) 144 491.5 T
-0.03 (ably a consequence of the DCE 1.x Cell Directory Service implementation, which) 144 478 P
(is something we don\325) 144 464.5 T
(t intend to deal with in this volume. Accordingly) 246.72 464.5 T
(, we shall) 479.48 464.5 T
(henceforth assume, as much for our own convenience as anyone else\325) 144 451 T
(s, that the) 477.39 451 T
(reader is at least as well acquainted with the CDS implementation, and as able to) 144 437.5 T
(infer its ef) 144 424 T
(fect on the internals of various NSI routines, as the author) 193.08 424 T
(.) 469.89 424 T
307.35 393.78 108 393.78 2 L
V
1.33 H
N
0 14 Q
(A Brief Overview of NSI Services) 108 395.17 T
2 12 Q
(The complex nature of the NSI implementation and its relationship to the RPC) 144 374.5 T
(runtime, along with our necessarily super\336cial treatment of some of its details,) 144 361 T
-0.12 (suggests that at least a short discussion of the conceptual framework in which NSI) 144 347.5 P
(operates will prove useful in understanding the data structures, internal functions,) 144 334 T
(and data \337ows we discuss in later section of this chapter) 144 320.5 T
(. Readers who are already) 412.48 320.5 T
(familiar with NSI on this level should feel free to move ahead.) 144 307 T
-0.09 (The NSI layer builds a specialized name service that deals strictly in the names by) 144 287.5 P
(which clients and servers refer to each other; that is to say) 144 274 T
(, binding reps. Servers) 421.34 274 T
(use NSI routines to export binding data into the DCE namespace. Clients use NSI) 144 260.5 T
(routines to import bindings in which they are interested. The NSI layer coerces) 144 247 T
(exported binding data into a form usable by CDS, and decomposes CDS database) 144 233.5 T
-0.07 (entries into a form suitable for use by the RPC runtime. The name syntax required) 144 220 P
(by a particular nameservice is speci\336ed in a global RPC runtime string constant) 144 206.5 T
(\050currently) 144 193 T
(, only) 190.51 193 T
5 11 Q
(rpc_c_ns_syntax_dce) 220.83 193 T
2 12 Q
( is supported\051.) 346.07 193 T
(V) 144 173.5 T
(iewed from the highest level, the NSI namespace consists of three types of) 151.94 173.5 T
(entries:) 144 160 T
(\245) 144 140.5 T
(A server entry includes interface, object, protocol, and address information) 162 140.5 T
(about a single server instance.) 162 127 T
(\245) 144 107.5 T
-0.2 (A group entry includes the names of a \050presumably functionally related\051 group) 162 107.5 P
(of servers.) 162 94 T
FMENDPAGE
%%EndPage: "1" 60
%%Page: "2" 60
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(\245) 108 712 T
(A pro\336le entry can include server and/or group entry names, and provides a) 126 712 T
(means for recommending \050by prioritizing\051 a set of servers and services, which) 126 698.5 T
(can be desirable for the purpose of establishing or) 126 685 T
(ganizational defaults, for) 364.93 685 T
(example, or for simplifying the search process.) 126 671.5 T
(Figure 4-1 illustrates these NSI namespace elements and their relationships.) 108 652 T
4 F
(Figur) 215.56 632.5 T
(e 4-1: Example NSI Entry T) 242.44 632.5 T
(ypes) 375.12 632.5 T
2 F
(Four of the Cell Directory Service\325) 108 283 T
(s attributes \321tower) 275.55 283 T
(, object, group, and pro-) 369.67 283 T
(\336le\321 are speci\336callyintended for use by NSI. NSI entries exist in the CDS name-) 108 269.5 T
(space as CDS entry objects with one or more of these attributes, as illustrated in) 108 256 T
(Figure 4-2. These attributes are used by NSI routines to establish search criteria) 108 242.5 T
(that expedite lookup and other processing of binding data.) 108 229 T
(NSI services fall into several categories.) 108 209.5 T
(\245) 108 190 T
(Initialization services that initialize base NSI data structures.) 126 190 T
(\245) 108 170.5 T
(Attribute services that read, write, and otherwise manipulate the CDS NSI) 126 170.5 T
(attributes.) 126 157 T
(\245) 108 137.5 T
(UUID services that convert the runtime\325) 126 137.5 T
(s UUID datatypes to and from their) 318.85 137.5 T
(CDS representation.) 126 124 T
(\245) 108 104.5 T
(Con\336guration Pro\336le and Server Group Services that furnish the runtime\325) 126 104.5 T
(s) 478.77 104.5 T
(connection to the pro\336le and group entries described above.) 126 91 T
108 304.5 504 628.5 C
296 529.17 364 591.17 18 RR
5 X
0 K
V
0.5 H
0 Z
0 X
N
130 354.5 210 607.17 18 RR
6 X
V
0 X
N
243.33 310.5 326 394.5 18 RR
6 X
V
0 X
N
6 8 Q
(interface UUID) 417.33 582.41 T
(interface version) 417.33 570.41 T
(protocol info \050tower\051) 417.33 558.41 T
([object UUID]) 417.33 546.41 T
(Server Entry) 417.33 598.99 T
(Group Entry) 303.33 576.5 T
(Pro\336le Entry) 149.33 591.17 T
(Default Pro\336le) 254 381.83 T
(member name) 303.33 559.92 T
(member name) 303.33 543.34 T
(interface UUID) 141.33 573.09 T
(interface version) 141.33 561.01 T
(priority) 141.33 548.93 T
(annotation) 141.33 536.85 T
410 532.5 489.33 612.5 18 RR
N
(interface UUID) 417.33 497.95 T
(interface version) 417.33 485.95 T
(protocol info \050tower\051) 417.33 473.95 T
([object UUID]) 417.33 461.95 T
(Server Entry) 417.33 514.53 T
410 448.04 489.33 528.04 18 RR
N
(interface UUID) 298.67 483.75 T
(interface version) 298.67 471.75 T
(protocol info \050tower\051) 298.67 459.75 T
([object UUID]) 298.67 447.75 T
(Server Entry) 298.67 500.33 T
291.33 433.83 370.67 513.83 18 RR
N
138 533.17 201.33 581.83 R
N
(interface UUID) 141.33 519.96 T
(interface version) 141.33 507.88 T
(priority) 141.33 495.8 T
(annotation) 141.33 483.72 T
138 480.04 201.33 528.7 R
N
(interface UUID) 141.33 413.7 T
(interface version) 141.33 401.61 T
(priority) 141.33 389.54 T
(annotation) 141.33 377.45 T
138 373.77 201.33 422.44 R
N
(interface UUID) 141.33 466.83 T
(interface version) 141.33 454.75 T
(priority) 141.33 442.67 T
(annotation) 141.33 430.59 T
138 426.9 201.33 475.57 R
N
(interface UUID) 254 366.42 T
(interface version) 254 354.34 T
(priority) 254 342.26 T
(annotation) 254 330.18 T
250.67 326.5 314 375.17 R
N
290.14 560.5 295.33 557.5 290.14 554.5 3 L
N
201.33 557.5 295.08 557.5 2 L
2 Z
N
286.14 507.37 291.33 504.37 286.14 501.37 3 L
0 Z
N
201.33 504.37 291.08 504.37 2 L
2 Z
N
404.25 574.25 409.99 572.5 405.61 568.4 3 L
0 Z
N
354.87 559.92 409.76 572.44 2 L
2 Z
N
407.04 516.39 409.99 511.17 403.99 511.22 3 L
0 Z
N
354.87 543.34 409.78 511.29 2 L
2 Z
N
(interface UUID) 382.67 404.41 T
(interface version) 382.67 392.41 T
(protocol info \050tower\051) 382.67 380.41 T
([object UUID]) 382.67 368.41 T
(Server Entry) 382.67 420.99 T
375.33 354.5 454.67 434.5 18 RR
0 Z
N
238.14 376.77 243.33 373.77 238.14 370.77 3 L
N
201.33 373.77 243.08 373.77 2 L
2 Z
N
370.75 417.06 375.32 413.18 369.67 411.15 3 L
0 Z
N
201.33 444.5 375.09 413.21 2 L
2 Z
N
0 0 612 792 C
108 304.5 504 628.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "2" 61
%%Page: "3" 61
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-3) 524.01 34.67 T
(Figur) 265.93 712 T
(e 4-2: CDS NSI Attributes) 292.81 712 T
2 F
(\245) 144 382.5 T
-0.08 (Protocol T) 162 382.5 P
-0.08 (ower Services that operate on the CDS\325) 212.06 382.5 P
-0.08 (s representation of a binding) 400.81 382.5 P
(handle \050called a protocol tower\051 and on the runtime\325) 162 369 T
(s references to these) 411.81 369 T
(objects.) 162 355.5 T
(\245) 144 336 T
(Binding Services that facilitate export and import of bindings to and from the) 162 336 T
(CDS namespace.) 162 322.5 T
(\245) 144 303 T
(Lookup Services that allow clients to look up servers in the NSI/CDS name-) 162 303 T
(space.) 162 289.5 T
(In this edition of this document, we will concentrate on the NSI\325) 144 270 T
(s protocol tower) 452.47 270 T
(,) 529.94 270 T
-0.4 (binding, and lookup services. Future editions of this document will address pro\336le,) 144 256.5 P
(group, and attribute services.) 144 243 T
122.76 212.78 108 212.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(Pr) 108 214.17 T
171.09 212.78 122.51 212.78 2 L
V
N
(otocol T) 122.51 214.17 T
251.79 212.78 169.8 212.78 2 L
V
N
(ower Services) 169.8 214.17 T
2 12 Q
(As we\325ve described, server entries in the CDS namespace have both object and) 144 193.5 T
(towers attributes. The object attribute facilitates search by object UUID. The tow-) 144 180 T
(ers attribute facilitates searches for other binding handle information \050interface) 144 166.5 T
(UUID, interface version, protocol sequence, data representation\051 that CDS stores) 144 153 T
(in data structures known as protocol towers. Since protocol towers form the basis) 144 139.5 T
(of most NSI operations, we feel they deserve an expanded discussion here.) 144 126 T
-0.04 (Protocol towers are repositories of binding information. The designers of protocol) 144 106.5 P
(towers envisioned them as structures with multiple \337oors \050numbered somewhat) 144 93 T
(unconventionally from the top down\051. Protocol towers provide a convenient) 144 79.5 T
108 72 540 720 C
144.67 404 540 708 C
156 418.67 311.33 694 R
4 H
0 Z
9 X
0 K
N
364 486 522.67 563.33 R
4 X
V
0.5 H
9 X
N
340 630 511 666 R
4 X
V
7 X
N
340 600.67 511 627.67 R
6 X
V
7 X
N
6 8 Q
0 X
(interface UUID) 347.33 657.25 T
(interface version) 347.33 645.25 T
(protocol info \050tower\051) 347.33 633.25 T
([object UUID]) 347.33 621.25 T
(Server Entry) 347.33 673.83 T
340 607.33 419.33 687.33 18 RR
N
(towers attribute) 448.67 644 T
(object attribute) 445.67 610.08 T
(group attribute) 458.33 542.09 T
(Pro\336le Attribute) 250.12 639.08 T
(Pro\336le Elements) 250.12 561.42 T
(CDS Names) 463 519.17 T
333.33 592 523.33 691.33 R
9 X
N
369.33 493.67 437.33 557.67 18 RR
4 X
V
0 X
N
(Group Entry) 378 541.67 T
(member name) 378 525.09 T
(member name) 378 508.51 T
433.29 523.51 428.66 527.33 434.29 529.43 3 L
N
460.67 522 428.67 527.33 2 L
4 X
V
0 X
N
435.83 509.92 430 511.34 434.14 515.68 3 L
N
462.67 520.67 430 511.33 2 L
4 X
V
0 X
N
164.67 433.67 244.67 686.33 18 RR
4 H
9 X
N
0 X
(Pro\336le Entry) 184 670.33 T
(interface UUID) 176 652.25 T
(interface version) 176 640.17 T
(priority) 176 628.09 T
(annotation) 176 616.01 T
172.67 612.33 236 661 R
0.5 H
N
(interface UUID) 176 599.12 T
(interface version) 176 587.04 T
(priority) 176 574.96 T
(annotation) 176 562.88 T
172.67 559.2 236 607.87 R
N
(interface UUID) 176 492.86 T
(interface version) 176 480.78 T
(priority) 176 468.7 T
(annotation) 176 456.62 T
172.67 452.94 236 501.61 R
N
(interface UUID) 176 545.99 T
(interface version) 176 533.91 T
(priority) 176 521.83 T
(annotation) 176 509.75 T
172.67 506.07 236 554.74 R
N
(CDS Object Entry) 396.67 695.33 T
(CDS Object Entry) 200.67 697.33 T
(CDS Object Entry) 402.67 569.33 T
232.23 627.26 232.5 633.25 237.56 630.02 3 L
N
265.63 568.87 232.5 633.25 2 L
N
234.84 577.82 231.25 582.63 237.21 583.34 3 L
N
265 568.25 231.25 582.62 2 L
N
236 541.84 230 542 233.14 547.11 3 L
N
263.75 560.12 230 542 2 L
N
235.52 491.1 230.62 487.63 230.07 493.61 3 L
N
263.75 560.12 230.63 487.62 2 L
N
108 72 540 720 C
144.67 404 540 708 R
3 H
0 Z
3 X
0 K
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "3" 62
%%Page: "4" 62
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-4) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.5 (abstraction for or) 108 712 P
-0.5 (ganizing the various units of information that the client and server) 189.38 712 P
(halves of an RPC require to establish and maintain a connection.) 108 698.5 T
-0.09 (Every tower has at least three \337oors, numbered 1, 2, and 3, and known generically) 108 679 P
(as the upper \337oors. These \337oors contain information related to the DCE RPC pro-) 108 665.5 T
(tocol. T) 108 652 T
(owers have a variable number of lower \337oors, which contain network pro-) 144.47 652 T
(tocol information. \050See Figure 4-3.\051) 108 638.5 T
-0.29 (Each tower \337oor consists of a left hand side, which can be generically described as) 108 619 P
-0.39 (a protocol identi\336er) 108 605.5 P
-0.39 (, and a right hand side that contains data related to that protocol) 201.34 605.5 P
(identi\336er) 108 592 T
(.) 150.65 592 T
0 F
(Pr) 72 572.5 T
(otocol T) 84.44 572.5 T
(ower Data Structur) 124.97 572.5 T
(es) 224.68 572.5 T
2 F
(There are four fundamental constraints on operations involving towers:) 108 552.5 T
(\245) 108 533 T
(T) 126 533 T
(o satisfy CDS database requirements, each tower is ultimately encoded for) 132.49 533 T
-0.2 (storage in the CDS database as a variable length octet string, which we refer to) 126 519.5 P
(as the nameservice representation of a tower) 126 506 T
(. Encoding rules for generating) 338.49 506 T
(these octet strings depend on the \337oor) 126 492.5 T
(\325) 308.32 492.5 T
(s contents.) 311.66 492.5 T
(\245) 108 473 T
(T) 126 473 T
(o satisfy another of the CDS database\325) 132.49 473 T
(s requirements, tower octet strings are) 316.36 473 T
(always stored in little-endian byte order) 126 459.5 T
(. Systems with a dif) 316.2 459.5 T
(ferent native byte-) 410.94 459.5 T
(ordering convention must make whatever transformations are required on the) 126 446 T
(returned data.) 126 432.5 T
(\245) 108 413 T
(T) 126 413 T
(ower octet strings are not padded. Systems with speci\336c data alignment) 132.49 413 T
(requirements must align the individual data items in memory after they have) 126 399.5 T
(been retrieved from a tower) 126 386 T
(.) 258.55 386 T
(\245) 108 366.5 T
(T) 126 366.5 T
(ower \337oor contents may not always reside in contiguous buf) 132.49 366.5 T
(fers \050for exam-) 421.74 366.5 T
(ple, during an export operation\051.) 126 353 T
(Given these constraints, the RPC runtime needs a set of convenient handles with) 108 333.5 T
(which to reference tower contents in whole or in part, and the means of transform-) 108 320 T
(ing these handles to and from the a tower) 108 306.5 T
(\325) 306.3 306.5 T
(s native octet string format. The most) 309.63 306.5 T
(basic of these structures, illustrated inT) 108 293 T
(able 4-1 represents an individual tower) 295.7 293 T
(\337oor) 108 279.5 T
(.) 130 279.5 T
(T) 108 90 T
(wo other structures complete the picture. The \336rst represents a tower reference,) 114.49 90 T
-0.28 (and is composed of an array of pointers to \337oors and a count of pointed-at \337oors in) 108 76.5 P
4 F
(T) 201.17 261.5 T
(able 4-1: rpc_tower_\337oor_t data structur) 206.73 261.5 T
(e) 405.51 261.5 T
5 11 Q
(rpc_tower_f) 110 240.17 T
(loor_t {) 182.51 240.17 T
(free_twr_octet_f) 110 221.17 T
(lag) 215.47 221.17 T
-0.36 (/* true iff this f) 254 221.17 P
-0.36 (loor\325s octet string) 371.23 221.17 P
(should be freed by the runtime */) 254 208.17 T
(prot_id_count) 110 189.17 T
(/* count for lhs octet string */) 254 189.17 T
(address_count) 110 170.17 T
(/* count for rhs octet string */) 254 170.17 T
(*octet_string) 110 151.17 T
(/* pointer to this f) 254 151.17 T
(loor\325s octet) 385.84 151.17 T
(string */) 254 138.17 T
(}) 110 119.17 T
106.75 252.5 106.75 110.5 2 L
V
0.5 H
0 Z
N
109.25 250 109.25 113 2 L
V
N
250.75 232.25 250.75 130.75 2 L
V
N
253.25 232.25 253.25 130.75 2 L
V
N
502.75 250 502.75 113 2 L
V
N
505.25 252.5 505.25 110.5 2 L
V
N
106.5 252.75 505.5 252.75 2 L
V
N
109 250.25 503 250.25 2 L
V
N
109.5 232.5 502.5 232.5 2 L
V
N
109.5 200.5 502.5 200.5 2 L
V
N
109.5 181.5 502.5 181.5 2 L
V
N
109.5 162.5 502.5 162.5 2 L
V
N
109.5 130.5 502.5 130.5 2 L
V
N
109 112.75 503 112.75 2 L
V
N
106.5 110.25 505.5 110.25 2 L
V
N
FMENDPAGE
%%EndPage: "4" 63
%%Page: "5" 63
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-5) 524.01 34.67 T
2 F
(the array) 144 712 T
(. The second is a vector of tower reference structures, which the runtime) 185.51 712 T
-0.28 (uses when converting exported bindings to towers. \050Each binding may map to mul-) 144 698.5 P
(tiple towers, one for each transfer syntax.\051 T) 144 685 T
(able 4-3 and T) 355.98 685 T
(able 4-4 illustrate these) 424.75 685 T
(structures. \050All of the) 144 538 T
5 11 Q
(rpc_tower*) 249.59 538 T
2 12 Q
( structures are de\336ned in) 315.51 538 T
5 11 Q
(com.h) 436.41 538 T
2 12 Q
(.\051) 469.37 538 T
(The layout of the towers themselves can be treated by consumers of RPC services) 144 354.5 T
(as opaque, but since it may be of interest to readers of this document \050and helpful) 144 341 T
(in understanding the operations of the tower service routines\051, we illustrate it in) 144 327.5 T
(Figure 4-3.) 144 314 T
4 F
(T) 254.21 667 T
(able 4-2: rpc_tower_r) 259.78 667 T
(ef_t structur) 365.93 667 T
(e) 424.46 667 T
5 11 Q
(rpc_tower_ref_t {) 146 645.67 T
(count) 146 626.67 T
(/* number of f) 218 626.67 T
(loors in this tower */) 310.29 626.67 T
(f) 146 607.67 T
(loor[1]) 152.59 607.67 T
(/* array of pointers, one for each of this tow-) 218 607.67 T
(er\325s f) 218 594.67 T
(loors */) 257.55 594.67 T
(}) 146 575.67 T
4 12 Q
(T) 236.23 520 T
(able 4-3: rpc_tower_r) 241.79 520 T
(ef_vector_t structur) 347.95 520 T
(e) 442.45 520 T
5 11 Q
(rpc_tower_ref_vector_t {) 146 498.67 T
(lower_f) 146 479.67 T
(loors) 192.14 479.67 T
(/* wire-format contents of lower tower) 254 479.67 T
-0.75 (f) 254 466.67 P
-0.75 (loors, obtained from CDS, saved here as an) 260.59 466.67 P
(optimization */) 254 453.67 T
(count) 146 434.67 T
(/* number of towers in this vector */) 254 434.67 T
(tower[1]) 146 415.67 T
(/* array of pointers to towers in this vec-) 254 415.67 T
(tor */) 254 402.67 T
(}) 146 383.67 T
142.75 658 142.75 567 2 L
V
0.5 H
0 Z
N
145.25 655.5 145.25 569.5 2 L
V
N
214.75 637.75 214.75 587.25 2 L
V
N
217.25 637.75 217.25 587.25 2 L
V
N
538.75 655.5 538.75 569.5 2 L
V
N
541.25 658 541.25 567 2 L
V
N
142.5 658.25 541.5 658.25 2 L
V
N
145 655.75 539 655.75 2 L
V
N
145.5 638 538.5 638 2 L
V
N
145.5 619 538.5 619 2 L
V
N
145.5 587 538.5 587 2 L
V
N
145 569.25 539 569.25 2 L
V
N
142.5 566.75 541.5 566.75 2 L
V
N
142.75 511 142.75 375 2 L
V
N
145.25 508.5 145.25 377.5 2 L
V
N
250.75 490.75 250.75 395.25 2 L
V
N
253.25 490.75 253.25 395.25 2 L
V
N
538.75 508.5 538.75 377.5 2 L
V
N
541.25 511 541.25 375 2 L
V
N
142.5 511.25 541.5 511.25 2 L
V
N
145 508.75 539 508.75 2 L
V
N
145.5 491 538.5 491 2 L
V
N
145.5 446 538.5 446 2 L
V
N
145.5 427 538.5 427 2 L
V
N
145.5 395 538.5 395 2 L
V
N
145 377.25 539 377.25 2 L
V
N
142.5 374.75 541.5 374.75 2 L
V
N
FMENDPAGE
%%EndPage: "5" 64
%%Page: "6" 64
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-6) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 230.48 712 T
(e 4-3: T) 257.36 712 T
(ower Data Layout) 294.23 712 T
0 F
(T) 72 498 T
(ower Service Internal Operations) 78.9 498 T
2 F
(The various functions that comprise tower services are implemented in the \336les) 108 478 T
-0.05 (named) 108 464.5 P
5 11 Q
-0.12 (comtwr*.[ch]) 142.92 464.5 P
2 12 Q
-0.05 (. While some of these functions are nominally scoped pub-) 222.02 464.5 P
(lic, none are supported for \321 or would be of much use to \321 external callers.) 108 451 T
(Lower \050protocol-speci\336c\051 tower \337oors are constructed with routines found in \336les) 108 437.5 T
(named) 108 424 T
5 11 Q
(twr_PROTOCOL.[ch]) 142.97 424 T
2 12 Q
(, where) 255.03 424 T
5 11 Q
(PROTOCOL) 293.33 424 T
2 12 Q
( is one of ip, dds, dnet, or osi.) 346.06 424 T
(T) 108 404.5 T
(ower service routines can be taxonomically grouped as:) 114.49 404.5 T
(\245) 108 385 T
(operations that build canonical and reference representations of upper tower) 126 385 T
(\337oors. Canonical representations are required for export to the CDS name-) 126 371.5 T
(space. Reference representations are required by clients and servers.) 126 358 T
(\245) 108 338.5 T
(operations that build canonical and reference representations of lower tower) 126 338.5 T
(\337oors) 126 325 T
(\245) 108 305.5 T
(operations that examine binding data returned from a tower) 126 305.5 T
(.) 410.46 305.5 T
(\245) 108 286 T
(operations that manipulate tower reference structures) 126 286 T
(\245) 108 266.5 T
(operations that free tower reference structures) 126 266.5 T
(\245) 108 247 T
(macros that handle byte-order conversions) 126 247 T
(Figure 4-4 illustrates the relationship of various tower service routines to the data) 108 227.5 T
(transformations required during the binding import/export process.) 108 214 T
216.61 193.2 108 193.2 2 L
V
0.59 H
0 Z
N
(Building Upper Floors) 108 194.5 T
5 11 Q
(rpc__tower_f) 108 175.17 T
(lr_from_drep) 187.1 175.17 T
2 12 Q
(builds tower \337oor two by calling) 180 162.5 T
5 11 Q
(rpc__tower_f) 339.91 162.5 T
(lr_from_uuid) 419.01 162.5 T
2 12 Q
(and encoding the result in CDS canonical form) 180 149 T
5 11 Q
(rpc__tower_f) 108 130.17 T
(lr_from_if_id) 187.1 130.17 T
2 12 Q
(builds tower \337oor one by allocating adequate storage based on con-) 180 117.5 T
(stant values for protocol size, address size, and \337oor size, then ini-) 180 104 T
(tializing the \322free \337ag\323 and the) 180 90.5 T
5 11 Q
(count) 331.21 90.5 T
2 12 Q
( \336eld. The routine then) 364.17 90.5 T
(proceeds to build up the contents of the octet strings by obtaining) 180 77 T
109.58 519.5 504 708 C
180.53 575.64 231.62 612.89 R
5 X
0 K
V
198.82 533.53 265.51 571.57 R
V
427.59 616.86 496.12 693.61 R
V
6 8 Q
0 X
(0) 137.59 681.14 T
(1) 149.23 681.14 T
(2) 160.88 681.14 T
(3) 172.52 681.14 T
(4) 184.17 681.14 T
(5) 195.81 681.14 T
(6) 207.46 681.14 T
(7) 219.1 681.14 T
(8) 230.75 681.14 T
(9) 242.39 681.14 T
(10) 254.04 681.14 T
(1) 270.13 681.14 T
(1) 273.98 681.14 T
(12) 286.22 681.14 T
(13) 302.31 681.14 T
(14) 318.4 681.14 T
(15) 334.49 681.14 T
(16) 350.59 681.14 T
(17) 366.68 681.14 T
(18) 382.77 681.14 T
(19) 398.86 681.14 T
(20) 414.95 681.14 T
(21) 431.04 681.14 T
(22) 447.13 681.14 T
(23) 463.22 681.14 T
(24) 479.32 681.14 T
(count) 139.73 670.53 T
(interface UUID) 272.59 670.53 T
(count) 433.84 670.53 T
(major) 402.23 670.53 T
(version) 402.23 661.22 T
(minor) 463.84 670.53 T
(version) 463.84 661.22 T
132.76 656.64 496.52 693.61 R
0.5 H
0 Z
N
(count) 139.33 630.74 T
(transfer syntax UUID) 272.19 630.74 T
(count) 433.44 630.74 T
(major) 401.84 630.74 T
(version) 401.84 621.44 T
(minor) 463.44 630.74 T
(version) 463.44 621.44 T
132.37 616.86 496.12 653.82 R
N
428.27 693.46 428.27 655.96 2 L
N
165.59 653.29 165.59 616.86 2 L
N
180.73 653.68 180.73 617.25 2 L
N
397.19 653.82 397.19 616.32 2 L
N
428.23 654.39 428.23 616.89 2 L
N
459.98 653.36 459.98 615.86 2 L
N
132.73 640.07 495.94 640.07 2 L
N
(0) 135.2 643.32 T
(1) 146.85 643.32 T
(2) 158.49 643.32 T
(3) 170.14 643.32 T
(4) 181.78 643.32 T
(5) 193.43 643.32 T
(6) 205.07 643.32 T
(7) 216.72 643.32 T
(8) 228.37 643.32 T
(9) 240.01 643.32 T
(10) 251.66 643.32 T
(1) 267.75 643.32 T
(1) 271.6 643.32 T
(12) 283.84 643.32 T
(13) 299.93 643.32 T
(14) 316.02 643.32 T
(15) 332.11 643.32 T
(16) 348.2 643.32 T
(17) 364.29 643.32 T
(18) 380.39 643.32 T
(19) 396.48 643.32 T
(20) 412.57 643.32 T
(21) 428.66 643.32 T
(22) 444.75 643.32 T
(23) 460.84 643.32 T
(24) 476.93 643.32 T
(0) 133.99 603.46 T
(1) 145.63 603.46 T
(2) 157.28 603.46 T
(3) 168.92 603.46 T
(4) 180.57 603.46 T
(5) 192.21 603.46 T
(6) 203.86 603.46 T
(7) 215.51 603.46 T
(0) 135.2 560.82 T
(1) 146.85 560.82 T
(2) 158.49 560.82 T
(3) 170.14 560.82 T
(4) 181.78 560.82 T
(5) 193.43 560.82 T
(6) 205.07 560.82 T
(7) 216.72 560.82 T
(8) 228.37 560.82 T
(9) 240.01 560.82 T
(10) 251.66 560.82 T
(count) 180.55 590.6 T
(count) 137.12 549.38 T
(count) 202.44 548.88 T
(count) 135.8 590.71 T
(0x0D) 0 -270 175.98 658.78 TF
(0x0A) 0 -270 177.76 577.33 TF
(0x0B) 0 -270 170.8 577.86 TF
(0x0D) 0 -270 176.12 619 TF
131.44 575.64 231.62 613.14 R
N
132.12 533.53 265.51 571.57 R
N
(minor) 204.66 591.67 T
(version) 204.66 582.36 T
201.51 613.14 201.51 575.64 2 L
N
(protocol) 167.23 549.5 T
(address) 229.91 548.94 T
(ID) 167.23 538.78 T
132.05 557.53 263.3 557.53 2 L
N
198.82 571.57 198.82 533.53 2 L
N
226.51 571.57 226.51 533.53 2 L
N
132.23 600.75 231.34 600.75 2 L
N
164.01 613.07 164.01 575.57 2 L
N
180.09 613.25 180.09 575.21 2 L
N
163.12 571.11 163.12 533.61 2 L
N
(1) 119.55 676.82 T
(2) 119.01 631.62 T
(3) 118.48 589.63 T
(4-n) 115.8 551.4 T
(FLOOR) 114.73 696.64 T
320.92 568.93 384.94 584.46 R
5 X
V
0 X
(right hand side) 326.34 573.96 T
181.43 656.25 181.43 693.75 2 L
5 X
V
0 X
N
459.5 694.18 459.5 656.68 2 L
5 X
V
0 X
N
396.86 654.91 396.86 691.88 2 L
5 X
V
0 X
N
133.56 680.07 496.78 680.07 2 L
5 X
V
0 X
N
166.71 656.68 166.71 695.25 2 L
5 X
V
0 X
N
0 0 612 792 C
109.58 519.5 504 708 R
3 H
0 Z
4 X
0 K
N
FMENDPAGE
%%EndPage: "6" 65
%%Page: "7" 65
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-7) 524.01 34.67 T
2 F
-0.28 (the protocol version numbers and protocol id, then converting them) 216 712 P
(to little-endian order and copying the values into the octet strings.) 216 698.5 T
5 11 Q
(rpc__tower_f) 144 679.67 T
(lr_from_uuid) 223.1 679.67 T
2 12 Q
(This generic routine gets called whenever a higher) 216 667 T
(-level routine) 457.89 667 T
(needs to build or modify the information on tower \337oors one or) 216 653.5 T
(two, which include a UUID in their octet string.) 216 640 T
4 F
(Figur) 256.5 620.5 T
(e 4-4: T) 283.38 620.5 T
(ower Service Routines) 320.24 620.5 T
5 11 Q
(rpc__tower_f) 144 271.67 T
(lr_from_rpc_prot_id) 223.1 271.67 T
2 12 Q
(builds tower \337oor three using the) 216 259 T
5 11 Q
(protseq_id) 377.9 259 T
2 12 Q
( speci\336ed in the) 443.82 259 T
(binding handle. Only the minor protocol version is stored in the) 216 245.5 T
(tower) 216 232 T
(, since the current tower format would be obsoleted by a) 242.83 232 T
(major protocol version change.) 216 218.5 T
253.94 197.69 144 197.69 2 L
V
0.59 H
0 Z
N
(Building Lower Floors) 144 199 T
5 11 Q
(twr_dds_lower_f) 144 179.67 T
(lrs_from_sa) 242.88 179.67 T
(twr_dds_lower_f) 144 167.67 T
(lrs_to_sa) 242.88 167.67 T
(twr_dnet_lower_f) 144 155.67 T
(lrs_from_sa) 249.47 155.67 T
(twr_dnet_lower_f) 144 143.67 T
(lrs_to_sa) 249.47 143.67 T
(twr_ip_lower_f) 144 131.67 T
(lrs_from_sa) 236.29 131.67 T
(twr_ip_lower_f) 144 119.67 T
(lrs_to_sa) 236.29 119.67 T
(twr_osi_lower_f) 144 107.67 T
(lrs_from_sa) 242.88 107.67 T
(twr_osi_lower_f) 144 95.67 T
(lrs_to_sa) 242.88 95.67 T
2 12 Q
-0.09 (All of these routines, as can probably be inferred from their names,) 216 83 P
144 292.5 540 616.5 C
148.14 322.64 192.61 336.03 R
6 X
0 K
V
148.29 311.07 192.75 324.46 R
5 X
V
148.43 295.93 192.89 309.32 R
4 X
V
161.33 574.5 222.67 593.17 R
6 X
V
0.5 H
0 Z
0 X
N
161.33 546.63 243.33 567.3 R
6 X
V
0 X
N
190 479.83 257.33 497.17 R
5 X
V
0 X
N
234.67 418.5 272 435.17 R
4 X
V
0 X
N
6 8 Q
(rpc_if_handle_t) 164 581.83 T
(rpc_binding_handle_t) 162.67 554.63 T
(rpc_tower_ref_t) 193.33 487.83 T
(tower_t) 239.33 425.17 T
(CDS DA) 305.56 324.94 T
(T) 335.17 324.94 T
(ABASE) 339.47 324.94 T
(CLIENT) 378.67 600.5 T
(SER) 268 601.83 T
(VER) 284.3 601.83 T
446 578.5 528 599.17 R
6 X
V
0 X
N
(rpc_binding_handle_t) 447.33 586.5 T
445.33 475.45 512.67 492.79 R
5 X
V
0 X
N
(rpc_tower_ref_t) 448.67 483.45 T
396.67 419.17 434 435.83 R
4 X
V
0 X
N
(tower_t) 401.33 425.83 T
1 H
3 X
90 450 84.11 29.86 342.07 327.08 A
155.33 539.83 250 597.17 R
0.5 H
8 X
N
0 X
(rpc__tower_ref_vec_from_binding) 182.67 518.5 T
(rpc__tower_from_tower_ref) 205.33 455.17 T
(rpc_tower_mbr_add) 220.67 399.83 T
(rpc__tower_free) 220.67 387.57 T
(rpc_tower_ref_vec_free) 220.67 375.31 T
(rpc__tower_mbr_inq_begin) 369.33 391.17 T
(rpc__twr_mbr_inq_next) 369.33 378.91 T
(rpc__tower_to_tower_ref) 370.67 455.83 T
(rpc_tower_ref_is_compatible) 370 557.17 T
(rpc__tower_ref_free) 370 544.91 T
(rpc__tower_free) 370 519.31 T
(rpc__tower_to_binding) 370 531.22 T
(rpc__tower_mbr_inq_done) 370 508.13 T
230.33 529.7 227.33 524.5 224.33 529.7 3 L
N
227.33 539.83 227.33 524.75 2 L
2 Z
N
237.67 505.7 234.67 500.5 231.67 505.7 3 L
0 Z
N
234.67 515.83 234.67 500.75 2 L
2 Z
N
243.67 467.03 240.67 461.83 237.67 467.03 3 L
0 Z
N
240.67 479.83 240.67 462.08 2 L
2 Z
N
257.21 444.36 254.21 439.17 251.21 444.36 3 L
0 Z
N
254.21 455.17 254.21 439.42 2 L
2 Z
N
256.33 411.7 253.33 406.5 250.33 411.7 3 L
0 Z
N
253.33 418.5 253.33 406.75 2 L
2 Z
N
323.72 356.43 324.67 350.5 319.06 352.65 3 L
1 H
0 Z
N
304.65 375.31 324.35 350.89 2 L
2 Z
N
364.15 371.14 369.99 372.51 368.26 366.77 3 L
0 Z
N
346 349.83 369.64 372.16 2 L
2 Z
N
405.67 410.64 408.67 415.83 411.67 410.64 3 L
0.5 H
0 Z
N
408.67 397.17 408.67 415.58 2 L
2 Z
N
412.33 447.3 415.33 452.5 418.33 447.3 3 L
0 Z
N
415.33 435.83 415.33 452.25 2 L
2 Z
N
457.05 467.15 460.05 472.35 463.05 467.15 3 L
0 Z
N
460.05 461.01 460.05 472.1 2 L
2 Z
N
457 571.16 460 576.36 463 571.16 3 L
0 Z
N
460 565.02 460 576.11 2 L
2 Z
N
(KEY) 164.21 338.71 T
(runtime) 149.75 327.26 T
(tower ref) 149.75 313.28 T
(octet string) 149.75 299.29 T
323.14 613.18 M
 341.89 570.32 341.89 570.32 332.52 544.07 D
 323.14 517.82 323.14 517.82 333.32 490.23 D
 343.5 462.64 343.5 462.64 333.86 432.91 D
 324.22 403.18 324.22 403.18 344.04 363.53 D
4 H
0 Z
12 X
N
147.96 361.39 537.43 361.39 2 L
N
451.4 500.3 454.4 505.5 457.4 500.3 3 L
0.5 H
0 X
N
454.4 495.86 454.4 505.5 2 L
N
0 0 612 792 C
144 292.5 540 616.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "7" 66
%%Page: "8" 66
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-8) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(transform socket addresses of particular socket families into tower) 180 712 T
(\337oors 4-) 180 698.5 T
4 F
(n) 220.31 698.5 T
2 F
(, or vice-versa. They form part of the naf services infra-) 226.31 698.5 T
(structure, in that they are called exclusively by naf routines.) 180 685 T
115.33 664.19 108 664.19 2 L
V
0.59 H
0 Z
N
(T) 108 665.5 T
262.37 664.19 114.49 664.19 2 L
V
N
(ower Reference Manipulations) 114.49 665.5 T
5 11 Q
(rpc__tower_ref_add_f) 108 646.17 T
(loor) 239.84 646.17 T
2 12 Q
-0.16 (replaces an existing or adds a new \337oor pointer for a speci\336ed \337oor) 180 633.5 P
(number to the) 180 620 T
5 11 Q
(tower) 249.62 620 T
2 12 Q
( array of an) 282.58 620 T
5 11 Q
(rpc_tower_ref_t) 340.52 620 T
2 12 Q
(.) 439.4 620 T
5 11 Q
(rpc__tower_ref_alloc) 108 601.17 T
2 12 Q
-0.48 (allocates and initializes an) 180 588.5 P
5 11 Q
-1.06 (rpc_tower_ref_t) 307.31 588.5 P
2 12 Q
-0.48 ( structure. Members) 406.19 588.5 P
(of the structure\325) 180 575 T
(s) 255.94 575 T
5 11 Q
(f) 263.61 575 T
(loor[]) 270.2 575 T
2 12 Q
( array are initialized to NULL, after) 309.75 575 T
(which they are \336lled in with the contents of octet strings in the ref-) 180 561.5 T
(erences tower) 180 548 T
(. Any \337oors that do not actually point to an octet) 245.6 548 T
(string will remain NULL in the returned structure. The free \337ag is) 180 534.5 T
(always initialized false in a tower reference.) 180 521 T
5 11 Q
(rpc__tower_ref_copy) 108 502.17 T
2 12 Q
-0.08 (copies a tower reference and resets the free \337ag to false in the copy) 180 489.5 P
(to prevent the octet string from being freed twice.) 180 476 T
5 11 Q
(rpc__tower_ref_inq_protseq_id) 108 457.17 T
2 12 Q
(returns an) 180 444.5 T
5 11 Q
(rpc_g_protseq_id) 230.62 444.5 T
2 12 Q
( from a tower reference. This rou-) 336.09 444.5 T
(tine uses a static table to translate values in the octet to valid proto-) 180 431 T
(col sequences.) 180 417.5 T
230.93 396.69 108 396.69 2 L
V
N
(Examining Binding Data) 108 398 T
5 11 Q
(rpc__tower_ref_is_compatible) 108 378.67 T
2 12 Q
-0.38 (This routine is called by) 180 366 P
5 11 Q
-0.83 (rpc__bindlkup_node_get_bindings) 297.03 366 P
2 12 Q
(to determine if the binding information in a tower is compatible) 180 352.5 T
(with a client\325) 180 339 T
(s binding requirements. It is the primary) 242.63 339 T
(caller of the) 438.51 339 T
(tower routines described in this subsection.) 180 325.5 T
5 11 Q
(rpc__tower_f) 108 306.67 T
(lr_to_drep) 187.1 306.67 T
2 12 Q
(returns the data representation UUID from tower \337oor two.) 180 294 T
5 11 Q
(rpc__tower_f) 108 275.17 T
(lr_to_if_id) 187.1 275.17 T
2 12 Q
(returns the interface id from tower \337oor one.) 180 262.5 T
5 11 Q
(rpc__tower_f) 108 243.67 T
(lr_to_rpc_prot_id) 187.1 243.67 T
2 12 Q
(returns the RPC protocol ID and version numbers from tower \337oor) 180 231 T
(three.) 180 217.5 T
160.32 196.69 108 196.69 2 L
V
N
(Building T) 108 198 T
298.38 196.69 159.48 196.69 2 L
V
N
(owers from Binding Handles) 159.48 198 T
5 11 Q
(rpc_tower_vector_from_binding) 108 178.67 T
(rpc__tower_ref_vec_from_binding) 108 166.67 T
2 12 Q
(The SPI routine) 180 154 T
5 11 Q
(rpc__tower_vector_from_binding) 258.95 154 T
2 12 Q
( calls) 456.71 154 T
5 11 Q
(rpc_tower_ref_vec_from_binding) 180 140.5 T
2 12 Q
( to create an) 377.75 140.5 T
5 11 Q
(rpc_tower_ref_vector_t) 180 127 T
2 12 Q
( for each transfer syntax represented) 325.02 127 T
(in a given binding handle.) 180 113.5 T
(This routine calls the various) 307.92 113.5 T
5 11 Q
(rpc_tower_f) 180 100 T
(lr_from_*) 252.51 100 T
2 12 Q
( routines described below) 311.84 100 T
(.) 433.96 100 T
FMENDPAGE
%%EndPage: "8" 67
%%Page: "9" 67
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-9) 524.01 34.67 T
5 11 Q
(rpc__tower_f) 144 712.67 T
(lr_id_from_uuid) 223.1 712.67 T
2 12 Q
(called by) 216 700 T
5 11 Q
(rpc__tower_f) 262.63 700 T
(lr_from_uuid) 341.73 700 T
2 12 Q
( to encode major and) 420.83 700 T
(minor version numbers \050and handle any required byte order trans-) 216 686.5 T
(formations\051 from the supplied UUID.) 216 673 T
5 11 Q
(rpc__tower_to_tower_ref) 144 654.17 T
(rpc__tower_from_tower_ref) 144 642.17 T
2 12 Q
(These routines convert a tower to a tower ref and a tower ref to a) 216 629.5 T
(tower) 216 616 T
(. Both return a pointer to the created object.) 242.65 616 T
5 11 Q
(rpc__tower_to_tower_ref) 216 602.5 T
2 12 Q
( relies on) 367.61 602.5 T
5 11 Q
(rpc__tower_alloc) 414.58 602.5 T
2 12 Q
( to) 520.05 602.5 T
(do most of its work.) 216 589 T
5 11 Q
(rpc__tower_from_tower_ref) 315.28 589 T
2 12 Q
( simply) 480.08 589 T
(builds the octet strings using memcpy\050\051.) 216 575.5 T
5 11 Q
(rpc__tower_f) 144 556.67 T
(lr_id_to_uuid) 223.1 556.67 T
2 12 Q
(decodes the left hand side of tower \337oor one or two and returns a) 216 544 T
(UUID and major version number) 216 530.5 T
5 11 Q
(rpc__tower_f) 144 511.67 T
(lr_to_uuid) 223.1 511.67 T
2 12 Q
(returns the decoded contents of tower \337oors one or two by calling) 216 499 T
5 11 Q
(rpc__tower_f) 216 485.5 T
(lr_id_to_uuid) 295.1 485.5 T
2 12 Q
(, then getting the address infor-) 380.8 485.5 T
(mation and returning it in the correct byte order) 216 472 T
(.) 443.84 472 T
5 11 Q
(rpc_tower_to_binding) 144 453.17 T
2 12 Q
(Given a tower) 216 440.5 T
(, this function returns a binding handle. It calls) 283.46 440.5 T
5 11 Q
(rpc_naf_tower_f) 216 427 T
(lrs_to_addr) 314.88 427 T
2 12 Q
( to obtain the rpc address, then) 387.39 427 T
(calls) 216 413.5 T
5 11 Q
(rpc_binding_alloc) 240.98 413.5 T
2 12 Q
( to initialize a binding with that) 353.04 413.5 T
(address.) 216 400 T
235.28 379.19 144 379.19 2 L
V
0.59 H
0 Z
N
(Freeing Runtime T) 144 380.5 T
361.66 379.19 234.44 379.19 2 L
V
N
(ower Reference Structures) 234.44 380.5 T
5 11 Q
(rpc_tower_free) 144 361.17 T
(rpc__tower_f) 144 349.17 T
(lr_free) 223.1 349.17 T
(rpc__tower_ref_free) 144 337.17 T
(rpc__tower_ref_vec_free) 144 325.17 T
(rpc_tower_vector_free) 144 313.17 T
2 12 Q
(This group of routines forms a hierarchy of functions responsible) 216 300.5 T
-0.01 (for freeing memory allocated to hold tower \337oor octets and the var-) 216 287 P
(ious forms of runtime references to towers. The) 216 273.5 T
5 11 Q
(rpc__tower_f) 216 260 T
(lr_free) 295.1 260 T
2 12 Q
( routine handles the base operation of) 341.24 260 T
(freeing an individual tower \337oor \050octet string\051 if that \337oor) 216 246.5 T
(\325) 493.92 246.5 T
(s) 497.26 246.5 T
5 11 Q
(free_twr_octet_f) 216 233 T
(lag) 321.47 233 T
2 12 Q
( is set. At the next level up,) 341.24 233 T
5 11 Q
-0.98 (rpc_tower_free) 216 219.5 P
2 12 Q
-0.44 ( calls) 308.29 219.5 P
5 11 Q
-0.98 (rpc__tower_f) 335.38 219.5 P
-0.98 (lr_free) 414.48 219.5 P
2 12 Q
-0.44 ( on each \337oor of) 460.62 219.5 P
(a tower) 216 206 T
(. These routines in turn get called by the ref and vector free) 250.97 206 T
(operations to free tower references and vectors thereof.) 216 192.5 T
233.95 162.28 108 162.28 2 L
V
1.33 H
N
0 14 Q
(NSI Lookup Services) 108 163.67 T
2 12 Q
(NSI lookup services provide the means by which clients can search the CDS) 144 143 T
(namespace for compatible server bindings. Each lookup begins with a namespace) 144 129.5 T
(entry known to the client. The client can obtain this information in several ways) 144 116 T
(\050e.g., by way of the default pro\336le entry\051. This section concerns the mechanics of) 144 102.5 T
(the lookup process, especially those related to tower lookup.) 144 89 T
FMENDPAGE
%%EndPage: "9" 68
%%Page: "10" 68
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-10) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(NSI lookups are attribute-based searches of the CDS namespace using the NSI) 108 712 T
(attributes illustrated in Figure 4-2. Several assumptions govern the lookup imple-) 108 698.5 T
(mentation:) 108 685 T
(\245) 108 665.5 T
-0.43 (The CDS namespace is hierarchical, and searches may begin at any point in the) 126 665.5 P
(hierarchy) 126 652 T
(.) 170.51 652 T
(\245) 108 632.5 T
(Any combination of attributes may be associated with any namespace entry) 126 632.5 T
(.) 487.62 632.5 T
(\245) 108 613 T
(Searches of group and pro\336le entries should return entry members in random) 126 613 T
(order) 126 599.5 T
(.) 150.65 599.5 T
(\245) 108 580 T
(The hierarchical nature of the CDS namespace means that a given search path) 126 580 T
(may be re-entered as a result of traversing an entry that includes a pointer to a) 126 566.5 T
(superior branch of the hierarchy) 126 553 T
(. These \322cycles\323 in the search process need to) 279.08 553 T
(be detected and handled \050typically by being skipped over\051.) 126 539.5 T
0 F
(NSI Lookup Services Data Structur) 72 520 T
(es) 254.35 520 T
2 F
(NSI lookup operations take place within a lookup context established by the) 108 500 T
-0.29 (lookup services. This data structure includes information abut the type of search to) 108 486.5 P
(be conducted, the number of things the searcher is prepared to \336nd, and a list of) 108 473 T
-0.06 (nodes \050nameservice entries\051 to search. The lookup context, its nodes, and their ele-) 108 459.5 P
(ments are the major data structures we\325ll deal with here.T) 108 446 T
(able 4-4 illustrates a) 383.61 446 T
4 F
(T) 220.22 428 T
(able 4-4: rpc_lkup_r) 225.78 428 T
(ep_t structur) 325.27 428 T
(e) 386.46 428 T
5 11 Q
(rpc_lkup_rep_t {) 110 406.67 T
(common) 110 387.67 T
(/* stuff common to all ns handles \050cur-) 236 387.67 T
(rently just cache expiration\051 */) 236 374.67 T
(if_spec) 110 355.67 T
(/* pointer to the interface rep */) 236 355.67 T
(obj_uuid_search) 110 336.67 T
(/* type of obj UUID search \050match/any\051*/) 236 336.67 T
(obj_uuid) 110 317.67 T
(/* the object UUID we\325re looking for */) 236 317.67 T
(obj_for_binding) 110 298.67 T
-1.21 (/* the object UUID we actually use in the) 236 298.67 P
(binding */) 236 285.67 T
(inq_cntx) 110 266.67 T
-0.85 (/* the inquiry context \050rpc_ns_handle_t\051) 236 266.67 P
(representing our connection to the CDS) 236 253.67 T
(namespace */) 236 240.67 T
(max_vector_size) 110 221.67 T
-1.21 (/* max number of items we are prepared to) 236 221.67 P
(f) 236 208.67 T
(ind */) 242.59 208.67 T
(node_list) 110 189.67 T
(/* list of elements we will be pawing) 236 189.67 T
(through */) 236 176.67 T
(non_leaf_list) 110 157.67 T
(/* list of nodes we have already exam-) 236 157.67 T
(ined, used for cycle detection */) 236 144.67 T
(f) 110 125.67 T
(irst_entry_f) 116.59 125.67 T
(lag) 195.69 125.67 T
-0.53 (/* true if we haven\325t looked anything up) 236 125.67 P
(yet */) 236 112.67 T
(}) 110 93.67 T
106.75 419 106.75 85 2 L
V
0.5 H
0 Z
N
109.25 416.5 109.25 87.5 2 L
V
N
232.75 398.75 232.75 105.25 2 L
V
N
235.25 398.75 235.25 105.25 2 L
V
N
502.75 416.5 502.75 87.5 2 L
V
N
505.25 419 505.25 85 2 L
V
N
106.5 419.25 505.5 419.25 2 L
V
N
109 416.75 503 416.75 2 L
V
N
109.5 399 502.5 399 2 L
V
N
109.5 367 502.5 367 2 L
V
N
109.5 348 502.5 348 2 L
V
N
109.5 329 502.5 329 2 L
V
N
109.5 310 502.5 310 2 L
V
N
109.5 278 502.5 278 2 L
V
N
109.5 233 502.5 233 2 L
V
N
109.5 201 502.5 201 2 L
V
N
109.5 169 502.5 169 2 L
V
N
109.5 137 502.5 137 2 L
V
N
109.5 105 502.5 105 2 L
V
N
109 87.25 503 87.25 2 L
V
N
106.5 84.75 505.5 84.75 2 L
V
N
FMENDPAGE
%%EndPage: "10" 69
%%Page: "11" 69
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-11) 518.02 34.67 T
2 F
(lookup context. T) 144 712 T
(able 4-5 and T) 228.11 712 T
(able 4-6 illustrate a lookup node and a node ele-) 296.88 712 T
(ment, respectively) 144 698.5 T
(. Figure 4-5 illustrates how all of these structures relate to each) 231.16 698.5 T
(other to form the overall lookup context.) 144 685 T
(Lookup nodes and their members are drawn from a pool of elements of each type) 144 665.5 T
-0.45 (established as a part of NSI initialization. All of these lists are of the) 144 652 P
5 11 Q
-0.99 (rpc_list_t) 468.48 652 P
2 12 Q
(type, described on page 3-6.) 144 638.5 T
(Cycle detection is implemented by maintaining a list of nonterminal namespace) 144 619 T
(entries \050lookup members\051 already seen. Before examining a new lookup node, the) 144 242.5 T
(lookup services check the) 144 229 T
5 11 Q
(non_leaf_list) 270.57 229 T
2 12 Q
(. If any of the node\325) 356.26 229 T
(s predecessor) 450.85 229 T
(nodes node appears there, the lookup routine declares that a cycle has been) 144 215.5 T
(detected and terminates the search of the current node) 144 202 T
1 F
(.) 402.45 202 T
4 F
(T) 252.33 601 T
(able 4-5: rpc_lkup_node_t structur) 257.9 601 T
(e) 426.34 601 T
5 11 Q
(rpc_lkup_node_t {) 146 579.67 T
(link) 146 560.67 T
(/* list of which we are an element */) 290 560.67 T
(*name) 146 541.67 T
-0.41 (/* pointer to our nameservice entry */) 290 541.67 P
(type) 146 522.67 T
(/* type of search to conduct */) 290 522.67 T
(mbrs_count) 146 503.67 T
(/* number of members in mbrs_list */) 290 503.67 T
(priority_group_count) 146 484.67 T
-0.36 (/* number of members with a lower pri-) 290 484.67 P
-0.41 (ority than the member currently being) 290 471.67 P
(examined */) 290 458.67 T
(mbrs_list) 146 439.67 T
(/* rpc_list_t of lookup node members) 290 439.67 T
(*/) 290 426.67 T
(}) 146 407.67 T
4 12 Q
(T) 254.33 380 T
(able 4-6: rpc_lkup_mbr_t structur) 259.89 380 T
(e) 424.35 380 T
5 11 Q
(rpc_lkup_mbr_t {) 146 358.67 T
(link) 146 339.67 T
(/* list of which we are an element */) 254 339.67 T
(*name) 146 320.67 T
(/* the member\325s nameservice name */) 254 320.67 T
(priority) 146 301.67 T
(/* the member\325s priority */) 254 301.67 T
(}) 146 282.67 T
142.75 592 142.75 399 2 L
V
0.5 H
0 Z
N
145.25 589.5 145.25 401.5 2 L
V
N
286.75 571.75 286.75 419.25 2 L
V
N
289.25 571.75 289.25 419.25 2 L
V
N
538.75 589.5 538.75 401.5 2 L
V
N
541.25 592 541.25 399 2 L
V
N
142.5 592.25 541.5 592.25 2 L
V
N
145 589.75 539 589.75 2 L
V
N
145.5 572 538.5 572 2 L
V
N
145.5 553 538.5 553 2 L
V
N
145.5 534 538.5 534 2 L
V
N
145.5 515 538.5 515 2 L
V
N
145.5 496 538.5 496 2 L
V
N
145.5 451 538.5 451 2 L
V
N
145.5 419 538.5 419 2 L
V
N
145 401.25 539 401.25 2 L
V
N
142.5 398.75 541.5 398.75 2 L
V
N
142.75 371 142.75 274 2 L
V
N
145.25 368.5 145.25 276.5 2 L
V
N
250.75 350.75 250.75 294.25 2 L
V
N
253.25 350.75 253.25 294.25 2 L
V
N
538.75 368.5 538.75 276.5 2 L
V
N
541.25 371 541.25 274 2 L
V
N
142.5 371.25 541.5 371.25 2 L
V
N
145 368.75 539 368.75 2 L
V
N
145.5 351 538.5 351 2 L
V
N
145.5 332 538.5 332 2 L
V
N
145.5 313 538.5 313 2 L
V
N
145.5 294 538.5 294 2 L
V
N
145 276.25 539 276.25 2 L
V
N
142.5 273.75 541.5 273.75 2 L
V
N
FMENDPAGE
%%EndPage: "11" 70
%%Page: "12" 70
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-12) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 174.8 712 T
(e 4-5: NSI Lookup Context, Nodes, and Elements) 201.68 712 T
0 F
(Lookup Services Internal Operations) 72 362.5 T
2 F
(NSI lookup services comprise three public functions and ten private ones. These) 108 342.5 T
-0.21 (functions are responsible for implementing the NSI binding lookup algorithm. Fig-) 108 329 P
-0.12 (ure 4-6 is a top-level look at the internal operations of the binding services. Figure) 108 315.5 P
(4-8 illustrates the actual lookup process in more detail. Public NSI lookup func-) 108 302 T
(tions can be called directly by clients who need to obtain a vector of bindings.) 108 288.5 T
-0.34 (These routines are also called internally by the NSI binding import services, which) 108 275 P
(return a single binding to a client.) 108 261.5 T
108 384 504 708 C
126 492 204.5 563 R
6 X
0 K
V
0.5 H
0 Z
0 X
N
6 8 Q
(rpc_lkup_node_t) 129 553.81 T
(link) 129 544.56 T
(*name) 129 535.25 T
(type) 129 525.94 T
(mbrs_count) 129 516.64 T
(priority_group_count) 129 507.33 T
(mbrs_list) 129 498.02 T
(rpc_lkup_rep_t) 257 680 T
(common) 257 670.68 T
(if_spec) 257 661.38 T
(obj_uuid_search) 257 652.07 T
(obj_uuid) 257 642.76 T
(obj_for_binding) 257 633.46 T
(inq_cntx) 257 624.15 T
(max_vector_size) 257 614.84 T
(node_list) 257 605.54 T
(non_leaf_list) 257 596.23 T
(\336rst_entry_\337ag) 257 586.92 T
(rpc_lkup_node_t) 299 554.81 T
(link) 299 545.56 T
(*name) 299 536.25 T
(type) 299 526.94 T
(mbrs_count) 299 517.64 T
(priority_group_count) 299 508.33 T
(mbrs_list) 299 499.02 T
(rpc_lkup_mbr_t) 361.5 446.91 T
(link) 361.5 437.66 T
(*name) 361.5 428.35 T
(priority) 361.5 419.05 T
254.17 581.83 321.67 689.33 R
N
296 493 374.5 564 R
N
358.67 413.33 434.17 454.83 R
N
342 599 359.5 616.5 R
N
359.5 599 377 616.5 R
N
377 599 394.5 616.5 R
N
394.5 599 412 616.5 R
N
412 599 429.5 616.5 R
N
137.5 589.67 155 607.17 R
6 X
V
0 X
N
155 589.67 172.5 607.17 R
6 X
V
0 X
N
172.5 589.67 190 607.17 R
6 X
V
0 X
N
190 589.67 207.5 607.17 R
6 X
V
0 X
N
207.5 589.67 225 607.17 R
6 X
V
0 X
N
398.5 492 416 509.5 R
N
416 492 433.5 509.5 R
N
433.5 492 451 509.5 R
N
451 492 468.5 509.5 R
N
468.5 492 486 509.5 R
N
394.5 616.5 296 564 2 L
9 X
N
412 616.5 374.5 564 2 L
N
412 599 374.5 493 2 L
N
433.5 509.5 358.67 454.83 2 L
N
451 509.5 434.17 454.83 2 L
N
451 492 434.17 413.33 2 L
N
393.3 504 398.5 501 393.3 498 3 L
0 X
N
332 501 398.5 501 2 L
N
336.3 610.67 341.5 607.67 336.3 604.67 3 L
N
288 607.67 341.5 607.67 2 L
N
230.2 593.23 225 596.23 230.2 599.23 3 L
N
257 596.23 225 596.23 2 L
N
127 421 186.5 438 R
6 X
V
0 X
(processed nodes) 126.5 426.5 T
225 589.5 205 491.5 2 L
6 X
V
9 X
N
223.88 605.88 204.38 561.88 2 L
6 X
V
9 X
N
206.88 606.62 125.88 563.62 2 L
6 X
V
9 X
N
0 0 612 792 C
108 384 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "12" 71
%%Page: "13" 71
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-13) 518.02 34.67 T
(Figur) 215.97 712 T
(e 4-6: NSI Lookup Service Internal Operations) 242.85 712 T
251.93 361.19 144 361.19 2 L
V
0.59 H
0 Z
N
2 F
(NSI Search Algorithm) 144 362.5 T
(A brief explanation of the NSI search algorithm should precede any discussion of) 144 342.5 T
(lookup services internal operations. This algorithm, which is lar) 144 329 T
(gely implemented) 450.25 329 T
(within the function) 144 315.5 T
5 11 Q
(rpc__bindlkup_node_process) 238.28 315.5 T
2 12 Q
(, can be represented in) 409.67 315.5 T
(pseudocode as shown in Figure 4-7.) 144 302 T
144 384 540 708 C
6 8 Q
0 X
0 K
(rpc_lkup_rep_t) 165 681 T
(common) 165 671.68 T
(if_spec) 165 662.38 T
(obj_uuid_search) 165 653.07 T
(obj_uuid) 165 643.76 T
(obj_for_binding) 165 634.46 T
(inq_cntx) 165 625.15 T
(max_vector_size) 165 615.84 T
(node_list) 165 606.54 T
(non_leaf_list) 165 597.23 T
(\336rst_entry_\337ag) 165 587.92 T
162.17 582.83 229.67 690.33 R
0.5 H
0 Z
N
(rpc_ns_binding_lookup_begin) 251.5 682 T
(rpc_ns_binding_lookup_next) 180.5 539.19 T
(rpc__bindlkup_node_process) 198.83 513.39 T
(rpc_ns_binding_select) 433.5 474.77 T
(rpc__bindlkup_node_create) 251 653.96 T
(rpc__bindlkup_node_expand_mbrs) 218 472.16 T
(rpc__bindlkup_node_free) 186.83 426.71 T
(rpc__bindlkup_node_get_bindings) 218 502.24 T
(rpc__bindlkup_obj_uuid_match) 234 492.21 T
(rpc__bindlkup_obj_uuid_any) 234.67 482.18 T
(rpc__bindlkup_node_is_cycle) 218.5 446.29 T
(rpc__bindlkup_node_next_attr) 218.5 463.01 T
(rpc__bindlkup_node_pick_mbr) 218 454.32 T
(rpc__next_priority_group_count) 189 528.9 T
324.44 602.19 337.56 615.31 R
N
337.56 602.19 350.69 615.31 R
N
350.69 602.19 363.81 615.31 R
N
363.81 602.19 376.94 615.31 R
N
376.94 602.19 390.06 615.31 R
N
237.44 589.02 250.56 602.15 R
6 X
V
0 X
N
250.56 589.02 263.69 602.15 R
6 X
V
0 X
N
263.69 589.02 276.81 602.15 R
6 X
V
0 X
N
276.81 589.02 289.94 602.15 R
6 X
V
0 X
N
289.94 589.02 303.06 602.15 R
6 X
V
0 X
N
339.44 580.69 352.56 593.81 R
N
352.56 580.69 365.69 593.81 R
N
365.69 580.69 378.81 593.81 R
N
378.81 580.69 391.94 593.81 R
N
391.94 580.69 405.06 593.81 R
N
317.3 611.54 322.5 608.54 317.3 605.54 3 L
N
197 608.54 322.5 608.54 2 L
N
345.39 593.72 345.99 587.75 340.52 590.21 3 L
N
331 608.75 346 587.75 2 L
N
(lookup nodes) 337.5 605.5 T
(members) 357 585 T
400.19 418.44 413.31 435.96 R
N
400.19 435.96 413.31 453.49 R
N
400.19 453.49 413.31 471.01 R
N
400.19 471.01 413.31 488.54 R
N
400.19 488.54 413.31 506.06 R
N
194 438.33 353.5 524.83 R
9 X
N
176 419.5 362 550.5 R
N
394.8 495.5 400 492.5 394.8 489.5 3 L
N
362 492.5 400 492.5 2 L
N
0 X
(binding vector) 0 -270 410 436.5 TF
420.2 471.77 415 474.77 420.2 477.77 3 L
9 X
N
433.5 474.77 415 474.77 2 L
N
348.84 550.74 357.17 546.81 2 L
2 Z
0 X
N
362.56 568.71 M
 361.77 561.48 355.96 555.17 348.84 550.74 D
N
370.89 564.78 M
 370.1 557.55 364.29 551.25 357.17 546.81 D
N
370.89 564.75 374.16 563.22 2 L
N
359.3 570.24 362.56 568.71 2 L
N
374.16 563.22 369.3 579.19 359.3 570.24 3 L
N
290.62 665.07 287.62 659.87 284.62 665.07 3 L
0 Z
8 X
N
287.62 680.88 287.62 659.87 2 L
N
337.12 622.95 334.12 617.75 331.12 622.95 3 L
N
334.12 652.75 334.12 617.75 2 L
N
230.8 602.46 236 599.46 230.8 596.46 3 L
0 X
N
211 599.46 236 599.46 2 L
N
235.57 679.96 230.38 682.96 235.57 685.96 3 L
8 X
N
250.88 682.96 230.38 682.96 2 L
N
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "13" 72
%%Page: "14" 72
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-14) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 224.16 712 T
(e 4-7: NSI Sear) 251.04 712 T
(ch Algorithm) 324.87 712 T
5 11 Q
(/* lookup bindings */) 126 687.17 T
(lookup\050rpc_nsentry_p_t nsentry\051 {) 126 675.17 T
7 F
(switch) 144 663.17 T
5 F
(\050nsentry->type\051{) 183.55 663.17 T
7 F
(case) 144 651.17 T
5 F
( server:) 170.37 651.17 T
7 F
(if) 162 639.17 T
5 F
(\050compatible ifspec && compatible obj_uuid\051) 175.18 639.17 T
7 F
(return) 180 627.17 T
5 F
(\050nsentry->bindings\051;) 219.55 627.17 T
7 F
(else return) 162 615.17 T
5 F
(\050NULL\051;) 234.51 615.17 T
7 F
(case) 144 603.17 T
5 F
( group:) 170.37 603.17 T
7 F
(for) 162 591.17 T
5 F
(\050\050random_order\051element\051) 181.77 591.17 T
7 F
(if) 180 579.17 T
5 F
(\050bindings = search\050member\051\051!=NULL\051) 193.18 579.17 T
7 F
(return) 198 567.17 T
5 F
(\050bindings\051;) 237.55 567.17 T
7 F
(return) 162 555.17 T
5 F
(\050NULL\051;) 201.55 555.17 T
7 F
(case) 144 543.17 T
5 F
(prof) 176.96 543.17 T
(ile:) 203.33 543.17 T
7 F
(for) 162 531.17 T
5 F
(\050\050priority\050random_order\051\051member\051) 181.77 531.17 T
7 F
(if) 180 519.17 T
5 F
(\050compatible ifspec\051) 193.18 519.17 T
7 F
(if) 198 507.17 T
5 F
(\050bindings = search\050member\051\051!=NULL\051) 211.18 507.17 T
7 F
(return) 216 495.17 T
5 F
(\050bindings\051;) 255.55 495.17 T
7 F
(return) 162 483.17 T
5 F
(\050NULL\051;) 201.55 483.17 T
(}) 144 471.17 T
(}) 126 459.17 T
169.3 439.19 108 439.19 2 L
V
0.59 H
0 Z
N
2 12 Q
(Initialization) 108 440.5 T
5 11 Q
(rpc_ns_binding_lookup_begin) 108 421.17 T
2 12 Q
(This public function initializes and returns a handle to a lookup) 180 408.5 T
(context for a given nameservice entry) 180 395 T
(. It returns the status code set) 360.07 395 T
(by) 180 381.5 T
5 11 Q
( rpc__bindlkup_node_create) 191.99 381.5 T
2 12 Q
(.) 363.38 381.5 T
5 11 Q
(rpc__bindlkup_node_create) 108 362.67 T
2 12 Q
(This private function is called by) 180 350 T
5 11 Q
-0.48 (rpc_ns_binding_lookup_begin) 180 336.5 P
2 12 Q
-0.22 ( to do the actual work of creat-) 357.98 336.5 P
(ing an) 180 323 T
5 11 Q
(rpc_lkup_rep_t) 212.65 323 T
2 12 Q
( and its attendant lists.) 304.93 323 T
186.96 302.19 108 302.19 2 L
V
N
(Binding Lookup) 108 303.5 T
5 11 Q
(rpc_ns_binding_lookup_next) 108 284.17 T
2 12 Q
(This public routine traverses the lookup context and returns a vec-) 180 271.5 T
(tor of bindings compatible with the ifspec and object UUID speci-) 180 258 T
-0.21 (\336ed in) 180 244.5 P
5 11 Q
-0.46 (rpc_ns_binding_lookup_begin) 212.9 244.5 P
2 12 Q
-0.21 (. It calls all of the other) 390.88 244.5 P
(routines in this subsection) 180 231 T
5 11 Q
(rpc__next_priority_group_count) 108 212.17 T
2 12 Q
(This function initializes the) 180 199.5 T
5 11 Q
(priority_group_count) 314.59 199.5 T
2 12 Q
( \336eld of a) 446.43 199.5 T
(lookup node to the number of member elements that have a lower) 180 186 T
(priority so that it can return bindings that are randomized within a) 180 172.5 T
(particular priority class.) 180 159 T
5 11 Q
(rpc__bindlkup_node_process) 108 140.17 T
2 12 Q
-0.22 (This function implements nearly all of the NSI lookup algorithm. It) 180 127.5 P
(examines a lookup node, decomposing it as necessary into list ele-) 180 114 T
(ments, and returns with a vector of client-compatible bindings. If a) 180 100.5 T
(lookup node is a tower entry) 180 87 T
(, this function calls) 316.12 87 T
FMENDPAGE
%%EndPage: "14" 73
%%Page: "15" 73
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-15) 518.02 34.67 T
5 11 Q
(rpc__bindlkup_node_get_bindings) 216 712 T
2 12 Q
( to return the tower) 420.35 712 T
(\325) 512.72 712 T
(s) 516.05 712 T
(bindings. If the entry is a group or pro\336le, it calls) 216 698.5 T
5 11 Q
(rpc__bindlkup_node_pick_mbr) 216 685 T
2 12 Q
(to select a random entry) 400.57 685 T
(,) 515.03 685 T
(checks for the occurrence of a cycle, then creates a node for the) 216 671.5 T
(entry \050) 216 658 T
5 11 Q
(rpc__bindlkup_node_create) 247.64 658 T
2 12 Q
(\051.) 412.43 658 T
5 11 Q
(rpc__bindlkup_node_get_bindings) 144 639.17 T
2 12 Q
(This function returns the bindings from a tower) 216 626.5 T
(. Repeated calls to) 442.86 626.5 T
(this function during) 216 613 T
5 11 Q
(rpc__bindlkup_node_process) 313.61 613 T
2 12 Q
( generate) 485 613 T
(the binding vector that is the principal output of the NSI lookup) 216 599.5 T
(process. Object UUID compatibility is determined by calling the) 216 586 T
(appropriate) 216 572.5 T
5 11 Q
(rpc__bindlkup_obj_uuid_*) 273.62 572.5 T
2 12 Q
( function, after which) 431.82 572.5 T
-0.52 (the) 216 559 P
5 11 Q
-1.14 (rpc__tower_mbr_inq_*) 233.13 559 P
2 12 Q
-0.52 ( functions are called to process all of) 364.97 559 P
-0.09 (the tower members in the list. This goes on until the binding vector) 216 545.5 P
(is full or an error occurs during tower inquiry) 216 532 T
(.) 433.06 532 T
5 11 Q
(rpc__bindlkup_obj_uuid_match) 144 513.17 T
(rpc__bindlkup_obj_uuid_any) 144 501.17 T
2 12 Q
(These two functions, called during) 216 488.5 T
5 11 Q
(rpc__bindlkup_node_process) 216 475 T
2 12 Q
(, implement object UUID) 387.39 475 T
-0.26 (search criteria for either any \050or no\051 object UUID or an exact object) 216 461.5 P
(UUID match.) 216 448 T
5 11 Q
(rpc__bindlkup_node_expand_mbrs) 144 429.17 T
2 12 Q
(This function expands group and pro\336le entries into lists of constit-) 216 416.5 T
(uent elements. It takes care of checking cached entries against) 216 403 T
(either a global or application-dependent expiration age, then calls) 216 389.5 T
(the) 216 376 T
5 11 Q
(rpc_ns_group_*) 233.65 376 T
2 12 Q
( and) 325.94 376 T
5 11 Q
(rpc_ns_prof) 349.26 376 T
(ile_*) 421.76 376 T
2 12 Q
( routines to) 454.72 376 T
(traverse the entry in question. This function is also responsible for) 216 362.5 T
(allocating lookup nodes and member list elements from the free) 216 349 T
(elements list, and for sorting pro\336le elements by priority) 216 335.5 T
(.) 486.06 335.5 T
5 11 Q
(rpc__bindlkup_node_next_attr) 144 316.67 T
2 12 Q
(This function implements the) 216 304 T
5 11 Q
(switch) 359.92 304 T
2 12 Q
( statement described in the) 399.47 304 T
-0.45 (search algorithm pseudocode. If the current entry is a tower \050has the) 216 290.5 P
(towers attribute\051, the entry is dispatched to) 216 277 T
5 11 Q
(rpc__bindlkup_node_get_bindings) 216 263.5 T
2 12 Q
(. If it is a group or pro-) 420.35 263.5 T
(\336le,) 216 250 T
5 11 Q
(rpc__bindlkup_node_next_attr) 237.32 250 T
2 12 Q
( adds the entry name to) 421.89 250 T
(the non_leaf_list, then calls) 216 236.5 T
5 11 Q
(rpc__bindlkup_expand_mbrs) 350.91 236.5 T
2 12 Q
(to) 522.3 236.5 T
(expand the list.) 216 223 T
5 11 Q
(rpc__bindlkup_node_pick_mbr) 144 204.17 T
2 12 Q
(This function returns a pointer to a randomly selected member of a) 216 191.5 T
(group or pro\336le entry) 216 178 T
(.) 318.15 178 T
5 11 Q
(rpc__bindlkup_node_is_cycle) 144 159.17 T
2 12 Q
(This function is called by) 216 146.5 T
5 11 Q
(rpc__bindlkup_node_process) 340.92 146.5 T
2 12 Q
( to) 512.31 146.5 T
(compare the current element \050the node it is processing\051 with nodes) 216 133 T
(on the non_leaf_list. If the current member element is equal to a) 216 119.5 T
5 11 Q
(non_leaf_list) 216 106 T
2 12 Q
(entry) 308.29 106 T
(and its predecessor is also the) 339.52 106 T
5 11 Q
(non_leaf_list) 216 92.5 T
2 12 Q
( entry\325) 301.69 92.5 T
(s predecessor) 332.67 92.5 T
(, this function returns true.) 396.46 92.5 T
FMENDPAGE
%%EndPage: "15" 74
%%Page: "16" 74
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-16) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
5 11 Q
(rpc__bindlkup_node_free) 108 712.67 T
2 12 Q
(frees a lookup node, including all member list elements. It also) 180 700 T
-0.42 (takes care of returning freed list elements to the list of free elements) 180 686.5 P
(\050for reuse\051.) 180 673 T
(W) 108 653.5 T
(e can relate these functions and the pseudocode in Figure 4-7 to the internals of) 118.36 653.5 T
(the) 108 640 T
5 11 Q
(rpc_bindlkup_process_node) 125.65 640 T
2 12 Q
( function as shown in Figure 4-8.) 290.45 640 T
4 F
(Figur) 223.44 620.5 T
(e 4-8: Looking Up a Binding) 250.32 620.5 T
194.29 210.94 108 210.94 2 L
V
0.59 H
0 Z
N
2 F
(Binding Selection) 108 212.25 T
5 11 Q
(rpc_ns_binding_select) 108 192.92 T
2 12 Q
(This public function selects one of the bindings from the binding) 180 180.25 T
(vector returned by) 180 166.75 T
5 11 Q
(rpc_ns_binding_lookup_next.) 270.92 166.75 T
196.93 145.94 108 145.94 2 L
V
N
2 12 Q
(Freeing Resources) 108 147.25 T
5 11 Q
(rpc_ns_binding_lookup_done) 108 127.92 T
2 12 Q
(This function frees the lookup context established by) 180 115.25 T
(r) 180 101.75 T
5 11 Q
(pc_ns_binding_lookup_begin) 183.99 101.75 T
108 233.75 504 616.5 C
202.5 325.6 231.86 297.25 202.5 268.9 173.14 297.25 4 Y
0.25 H
0 Z
0 X
0 K
N
187.5 487.1 216.86 458.75 187.5 430.4 158.14 458.75 4 Y
N
351 576.43 380.36 548.08 351 519.73 321.64 548.08 4 Y
N
264.5 576.6 293.86 548.25 264.5 519.9 235.14 548.25 4 Y
N
6 8 Q
(type of entry) 243.17 546.42 T
(any more) 334.5 549.58 T
(members?) 334.5 540.28 T
(rpc__bindlkup_node_get_bindings) 136.64 504.68 T
(rpc__bindlkup_node_pick_mbr) 379.71 525.78 T
(rpc__bindlkup_node_next_attr) 260.33 429.64 T
(rpc__bindlkup_node_create) 387.5 429.83 T
(rpc__bindlkup_node_free) 277.5 294.02 T
(rpc__bindlkup_node_expand_mbrs) 361.54 358.72 T
133.81 496.18 260.31 516.68 R
0.5 H
N
376.71 518.75 490.71 537.25 R
N
(any more) 172.5 459.75 T
(towers?) 172.5 450.44 T
257.33 423.25 371.33 439.25 R
N
385 423.25 488.5 440.25 R
N
412.5 508.27 441.86 479.92 412.5 451.57 383.14 479.92 4 Y
0.25 H
N
317.5 386.1 346.86 357.75 317.5 329.4 288.14 357.75 4 Y
N
(type of entry) 297 354.25 T
360.17 351.32 487.45 370.25 R
0.5 H
N
274 289.42 372.5 305.42 R
N
(list) 194.5 301.75 T
(empty?) 193 291.94 T
(tower) 211.5 554.64 T
(tower) 261 361.02 T
353 354.75 353 326.25 2 L
9 X
N
0 X
(add to) 378.83 325.75 T
(non_leaf_list) 378 318.94 T
373.67 312.25 426.17 335.75 11.75 RR
9 X
N
353 324.25 374 324.25 2 L
N
0 X
(Y) 380.5 553.25 T
(N) 325.5 512.83 T
(Y) 138 461.75 T
(Y) 206 259.75 T
(N) 431 448.33 T
(N) 155 299.33 T
(N) 224.5 461.33 T
(done) 191.83 245.25 T
90 450 19.5 9 202.33 248.08 A
(NULL) 321 321.25 T
(svcgrp, pro\336le) 0 -270 352.5 362.33 TF
(Y) 447.5 485.25 T
(return) 0 -270 484.5 466.7 TF
90 450 5.75 17 482.25 476.42 A
(svcgrp) 294.5 553.75 T
(pro\336le) 294.5 537.94 T
(node_is_cycle) 388 477.92 T
(rpc__bindlkup_node_process) 255 601.5 T
252.5 596.5 362.5 611 R
N
315.8 551.25 321 548.25 315.8 545.25 3 L
N
293.86 548.25 321 548.25 2 L
N
354.3 360.75 359.5 357.75 354.3 354.75 3 L
N
346.86 357.75 359.5 357.75 2 L
N
357.16 455.6 351.97 458.6 357.16 461.6 3 L
N
393.75 458.6 351.97 458.6 2 L
N
182.64 521.88 179.64 516.68 176.64 521.88 3 L
N
179.64 547.89 179.64 516.68 2 L
N
288.14 357.75 122.68 357.75 2 L
N
320.5 310.61 317.5 305.42 314.5 310.61 3 L
N
317.5 329.4 317.5 305.42 2 L
N
237.16 294.42 231.97 297.42 237.16 300.42 3 L
N
274 297.42 231.97 297.42 2 L
N
122.68 357.75 122.68 548.67 2 L
2 Z
N
122.68 548.67 180 548.67 2 L
N
267 579.2 264 574 261 579.2 3 L
0 Z
N
264 596.5 264 574 2 L
N
416.33 511.2 413.33 506 410.33 511.2 3 L
N
413.33 518.75 413.33 506 2 L
N
470.14 482.92 475.33 479.92 470.14 476.92 3 L
N
441.86 479.92 475.33 479.92 2 L
N
416.17 445.45 413.17 440.25 410.17 445.45 3 L
N
413.17 451.57 413.17 440.25 2 L
N
354 444.45 351 439.25 348 444.45 3 L
N
351 519.73 351 439.25 2 L
N
344.14 461.75 349.33 458.75 344.14 455.75 3 L
N
216.86 458.75 349.33 458.75 2 L
N
129.21 455.42 124.01 458.42 129.21 461.42 3 L
N
155.33 458.42 124.01 458.42 2 L
N
396.75 445.45 393.75 440.25 390.75 445.45 3 L
N
393.75 458.6 393.75 440.25 2 L
N
320.33 392.2 317.33 387 314.33 392.2 3 L
N
317.33 422.25 317.33 387 2 L
N
205.5 259.86 202.5 254.67 199.5 259.86 3 L
N
202.5 268.9 202.5 254.67 2 L
N
206.75 521.57 203.75 516.37 200.75 521.57 3 L
N
234.38 547.62 203.75 547.62 203.75 516.37 3 L
N
418 542.82 415 537.62 412 542.82 3 L
N
381.25 547 415 547 415 537.62 3 L
N
258.38 591.43 263.57 588.43 258.38 585.43 3 L
N
173.04 296.46 114.11 296.46 114.11 588.43 263.57 588.43 4 L
N
269.84 585.61 264.64 588.61 269.84 591.61 3 L
N
489.11 430.57 498.22 430.57 498.22 588.61 264.64 588.61 4 L
N
0 0 612 792 C
108 233.75 504 616.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "16" 75
%%Page: "17" 75
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(RPC Nameservice Interface) 406.11 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(4-17) 518.02 34.67 T
234.73 709.28 108 709.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(NSI Binding Services) 108 710.67 T
2 12 Q
(In the DCE RPC client/server rendezvous model, servers export binding informa-) 144 690 T
-0.27 (tion into the NSI namespace and clients import this information when they want to) 144 676.5 P
-0.29 (bind to speci\336c interfaces or servers. The NSI layer provides a set of functions that) 144 663 P
(implement these import/export operations in typical NSI fashion by setting up an) 144 649.5 T
(import context and providing an iterator function that clients can use to select) 144 636 T
-0.39 (bindings from that context. Most of the routines described here are implemented in) 144 622.5 P
(the \336les) 144 609 T
5 11 Q
(nsbndimp.c) 184.65 609 T
2 12 Q
( and) 250.56 609 T
5 11 Q
(nsbndexp.c.) 273.88 609 T
0 12 Q
(NSI Binding Services Data Structur) 108 589.5 T
(es) 291.02 589.5 T
2 F
(NSI Binding service export operations deal exclusively in the data structures) 144 569.5 T
(de\336ned by the Protocol T) 144 556 T
(ower Services. Binding service import operations are) 265.08 556 T
(based on an import context data structure, illustrated in T) 144 542.5 T
(able 4-7.) 417.64 542.5 T
0 F
(NSI Binding Services Internal Operations) 108 359 T
2 F
(Most of the internal operations of the NSI binding services are scoped public. W) 144 339 T
(e) 529.43 339 T
(divide them here for ease of presentation into export and import operations.) 144 325.5 T
232.27 304.69 144 304.69 2 L
V
0.59 H
N
(Export Operations) 144 306 T
5 11 Q
(rpc_ns_binding_export) 144 286.67 T
2 12 Q
(This public function exports a supplied vector of bindings \050which) 216 274 T
(its caller obtains by calling) 216 260.5 T
5 11 Q
(rpc__ns_binding_vector_copy) 348.25 260.5 T
2 12 Q
(\051) 526.23 260.5 T
(into the NSI namespace. T) 216 247 T
(owers entries \050namespace entries with) 342.73 247 T
(the T) 216 233.5 T
(owers attribute\051 are generated by calling the) 240.14 233.5 T
5 11 Q
(rpc__tower_*) 454.3 233.5 T
2 12 Q
(functions. UUID entries are generated via the) 216 220 T
5 11 Q
(rpc_nsuuid_*) 437.15 220 T
2 12 Q
-0.54 (functions. Once exportation is complete, the binding vector is freed.) 216 206.5 P
(This function checks for and removes NULL handles on the) 216 193 T
(assumption that these were originally duplicate handles that have) 216 179.5 T
(been NULLed by) 216 166 T
5 11 Q
(rpc_ns_binding_vector_copy) 302.93 166 T
2 12 Q
(.) 473.54 166 T
5 11 Q
(rpc_ns_binding_unexport) 144 147.17 T
2 12 Q
(This public function allows servers \050or anyone else, management) 216 134.5 T
(applications, for example\051 to selectively remove exported binding) 216 121 T
(information. It is really just a wrapper for various internal func-) 216 107.5 T
-0.08 (tions, and calls) 216 94 P
5 11 Q
-0.18 (rpc_ns_mgmt_binding_unexport) 290.38 94 P
2 12 Q
-0.08 (, which itself) 474.95 94 P
(calls an internal management routine named) 216 80.5 T
5 11 Q
(unexport_towers) 431.17 80.5 T
4 12 Q
(T) 250.55 524.5 T
(able 4-7: rpc_import_r) 256.11 524.5 T
(ep_t structur) 366.93 524.5 T
(e) 428.12 524.5 T
5 11 Q
(rpc_import_rep_t {) 146 503.17 T
(common) 146 484.17 T
(/* data common to all nameservice handles) 254 484.17 T
(\050currently just cache expiration age */) 254 471.17 T
(*binding_vec) 146 452.17 T
(/* pointer to a binding vector returned by) 254 452.17 T
(lookup operations */) 254 439.17 T
(lookup_context) 146 420.17 T
-0.86 (/* nameservice handle of the lookup context) 254 420.17 P
(associated with this import context */) 254 407.17 T
(}) 146 388.17 T
142.75 515.5 142.75 379.5 2 L
V
0.5 H
N
145.25 513 145.25 382 2 L
V
N
250.75 495.25 250.75 399.75 2 L
V
N
253.25 495.25 253.25 399.75 2 L
V
N
538.75 513 538.75 382 2 L
V
N
541.25 515.5 541.25 379.5 2 L
V
N
142.5 515.75 541.5 515.75 2 L
V
N
145 513.25 539 513.25 2 L
V
N
145.5 495.5 538.5 495.5 2 L
V
N
145.5 463.5 538.5 463.5 2 L
V
N
145.5 431.5 538.5 431.5 2 L
V
N
145.5 399.5 538.5 399.5 2 L
V
N
145 381.75 539 381.75 2 L
V
N
142.5 379.25 541.5 379.25 2 L
V
N
FMENDPAGE
%%EndPage: "17" 76
%%Page: "18" 76
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(RPC Nameservice Interface) 72 748 T
(Revised 7/27/93) 427.05 748 T
(4-18) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(to do the actual freeing of towers that hold the binding data to be) 180 712 T
(unexported. Like all management routines, this function and the) 180 698.5 T
(functions it calls bypass the nameservice cache.) 180 685 T
5 11 Q
(rpc__ns_binding_vector_copy) 108 666.17 T
2 12 Q
(This internal function is called by) 180 653.5 T
5 11 Q
(rpc_ns_binding_export) 344.56 653.5 T
2 12 Q
( to) 482.99 653.5 T
(\336lter an input) 180 640 T
5 11 Q
(rpc_binding_vector_t) 247.63 640 T
2 12 Q
(and produce a copy of) 386.06 640 T
(that vector minus any duplicate binding handles and with all) 180 626.5 T
(dynamic endpoints reset. This function calls) 180 613 T
5 11 Q
(rpc_binding_copy) 394.86 613 T
2 12 Q
(to copy the input binding vector) 180 599.5 T
(, then calls) 333.1 599.5 T
5 11 Q
(rpc_binding_reset) 387.73 599.5 T
2 12 Q
(on each copy that has a dynamic endpoint. Duplicate bindings are) 180 586 T
-0.25 (detected through comparison of their string binding representations.) 180 572.5 P
196.27 551.69 108 551.69 2 L
V
0.59 H
0 Z
N
(Import Operations) 108 553 T
-0.03 (The \322begin, next, end\323 sequence of import operations are nothing more than wrap-) 108 533 P
(pers that simplify the analogous sequence of lookup operations.) 108 519.5 T
5 11 Q
(rpc_ns_binding_import_begin) 108 500.67 T
2 12 Q
(This public function allocates the import context referred to by the) 180 488 T
(next two routines in this group, then calls) 180 474.5 T
5 11 Q
(rpc_ns_binding_lookup_begin) 180 461 T
2 12 Q
( to establish a lookup context.) 357.98 461 T
5 11 Q
(rpc_ns_binding_import_next) 108 442.17 T
2 12 Q
(This public function calls) 180 429.5 T
5 11 Q
(rpc_ns_binding_lookup_next) 305.26 429.5 T
2 12 Q
( to) 476.65 429.5 T
(return a vector of compatible bindings.) 180 416 T
5 11 Q
(rpc_ns_binding_import_done) 108 397.17 T
2 12 Q
-0.25 (This public function frees the binding vector and the lookup context) 180 384.5 P
5 11 Q
(rpc_ns_binding_inq_entry_name) 108 365.67 T
2 12 Q
-0.63 (This public function calls) 180 353 P
5 11 Q
-1.39 (rpc_nsentry_to_entry) 302.74 353 P
2 12 Q
-0.63 ( to convert the) 434.57 353 P
(CDS opaque name referenced in a binding rep\325) 180 339.5 T
(s) 405.49 339.5 T
5 11 Q
(ns_specif) 413.15 339.5 T
(ic) 472.48 339.5 T
2 12 Q
(\336eld, then copies the entry name into the binding handle\325) 180 326 T
(s) 453.16 326 T
5 11 Q
(entry_name) 180 312.5 T
2 12 Q
( \336eld and optionally returns the name to the caller) 245.92 312.5 T
(.) 484.1 312.5 T
(Applications \050e.g.) 180 299 T
0 F
(rpccp) 268.61 299 T
2 F
(\051 use this function to determine how a) 297.92 299 T
(group or pro\336le inquiry was resolved during lookup.) 180 285.5 T
FMENDPAGE
%%EndPage: "18" 77
%%Page: "1" 77
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-1) 524.01 34.67 T
540 706.22 205.75 706.22 2 L
V
1.71 H
0 Z
N
0 18 Q
0.9 (Chapter 5: Endpoint Mapping Services) 205.75 708 S
2 12 Q
(The network transports over which DCE RPC typically runs today have what is) 144 592 T
(described in) 144 578.5 T
5 11 Q
(ep.idl) 205.29 578.5 T
2 12 Q
(as a \322small endpoint namespace.\323 For example, the end-) 251.43 578.5 T
-0.21 (points to which RPC clients using an IP transport ultimately bind are internet sock-) 144 565 P
-0.11 (ets, which on many systems are named by small \05016-bit\051 integers. This namespace) 144 551.5 P
(is further constrained in that not all sockets are accessible to unprivileged users,) 144 538 T
(and those that are can be bound to by any application, ef) 144 524.5 T
(fectively removing them) 414.25 524.5 T
(from the list of valid RPC communications endpoints.) 144 511 T
(In response to these sorts of constraints, DCE RPC includes support for dynami-) 144 491.5 T
-0.34 (cally-generated server endpoint names \050binding handles, stored in the nameservice) 144 478 P
(as towers\051, a per) 144 464.5 T
(-host endpoint database in which servers on that host register) 222.35 464.5 T
(information about the interfaces they support, and a per) 144 451 T
(-host endpoint mapper) 409.89 451 T
(facility that maps this information to actual communications endpoints \050e.g.,) 144 437.5 T
(sockaddrs\051. Endpoint mapping services constitute a sort of local analogue of the) 144 424 T
(global \050NSI\051 namespace, where the names of interest are in the host\325) 144 410.5 T
(s endpoint) 471.74 410.5 T
(address space.) 144 397 T
(Clients use the endpoint mapper to convert a partially bound handle \050one without) 144 377.5 T
-0.07 (an endpoint address, but with all of the interface and object information\051 to a fully) 144 364 P
(bound one. Clients that already have a fully-speci\336ed \050e.g., string\051 binding do not) 144 350.5 T
-0.15 (need the endpoint map. The endpoint mapper is used somewhat dif) 144 337 P
-0.15 (ferently by con-) 463.7 337 P
(nection-oriented and connectionless clients, but the fundamental internal opera-) 144 323.5 T
(tions are the same, conceptually at least, for both.) 144 310 T
-0.11 (The endpoint database is maintained by the) 144 290.5 P
0 F
-0.11 (rpcd) 354.06 290.5 P
2 F
-0.11 (, a per) 378.05 290.5 P
-0.11 (-host catch-all daemon that) 407.22 290.5 P
(performs a number of useful jobs, including:) 144 277 T
(\245) 144 257.5 T
(management of the endpoint database) 162 257.5 T
(\245) 144 238 T
(registration and deregistration of server entries) 162 238 T
(\245) 144 218.5 T
(periodic endpoint database entry validation \050server liveness monitoring\051) 162 218.5 T
(\245) 144 199 T
(garbage collection of invalid entries) 162 199 T
(\245) 144 179.5 T
(forwarding services used by datagram RPC protocols) 162 179.5 T
(\245) 144 160 T
(endpoint resolution services used by connection-oriented RPC protocols) 162 160 T
(\245) 144 140.5 T
(compatibility services that support DCE RPC\325) 162 140.5 T
(s predecessor) 383.55 140.5 T
(, NCS1.5.1) 447.35 140.5 T
(In this chapter) 144 121 T
(, we discuss the endpoint database itself, the) 212.13 121 T
0 F
(rpcd) 427.32 121 T
2 F
(\325) 451.31 121 T
(s database man-) 454.64 121 T
(agement and endpoint mapping functions, and the collection of library routines) 144 107.5 T
(that servers call to register interfaces in the endpoint database. All of the facilities) 144 94 T
(described in this chapter are implemented in the \336les) 144 80.5 T
5 11 Q
(rpcd/*.[ch]) 400.15 80.5 T
2 12 Q
( and) 472.67 80.5 T
FMENDPAGE
%%EndPage: "1" 78
%%Page: "2" 78
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
5 11 Q
(runtime/comep.c) 108 712 T
2 12 Q
(. The endpoint mapper) 206.88 712 T
(\325) 315.91 712 T
(s remote interfaces are de\336ned in) 319.24 712 T
5 11 Q
(sys_idl/ep.idl) 108 698.5 T
2 12 Q
(.) 200.29 698.5 T
256.61 668.28 72 668.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Overview of Endpoint Services) 72 669.67 T
2 12 Q
(As we mentioned, the endpoint database represents a per) 108 649 T
(-host namespace analo-) 379.88 649 T
(gous to the global namespace supported by the DCE CDS/NSI facilities. Like) 108 635.5 T
(CDS, the endpoint database has an associated set of remote operations that allow) 108 622 T
-0.44 (clients and servers to invoke database operations such as insert, delete, and lookup.) 108 608.5 P
(It also includes internal functions that serve as a bridge between the local and glo-) 108 595 T
-0.49 (bal namespaces, as well as routines that periodically \322ping\323 registered servers to be) 108 581.5 P
-0.12 (sure that they are still able to communicate with clients and, if they aren\325) 108 568 P
-0.12 (t, remove) 455.95 568 P
(their entries from the endpoint database. Figure 5-1 illustrates the) 108 554.5 T
0 F
(rpcd) 424.78 554.5 T
2 F
(\325) 448.77 554.5 T
(s role in) 452.1 554.5 T
(the DCE RPC universe.) 108 541 T
4 F
(Figur) 239.38 521.5 T
(e 5-1: The) 266.25 521.5 T
1 F
(rpcd) 318.55 521.5 T
4 F
(\325) 340.53 521.5 T
(s Role) 342.98 521.5 T
2 F
(DCE RPC\325) 108 172 T
(s endpoint services can be roughly classi\336ed as:) 160.99 172 T
(\245) 108 152.5 T
(endpoint database initialization services, which are local operations that the) 126 152.5 T
0 F
(rpcd) 126 139 T
2 F
( performs at start-up time) 149.99 139 T
(\245) 108 119.5 T
(common endpoint operations that clients and servers invoke to communicate) 126 119.5 T
(with the) 126 106 T
0 F
(rpcd) 167.98 106 T
2 F
(, manipulate the endpoint database, and request endpoint map-) 191.96 106 T
(ping operations) 126 92.5 T
108 193.5 504 517.5 C
0.2 H
2 Z
0 X
0 K
180 270 28.12 11.02 461 218.71 A
270 360 28.12 11.02 461 218.71 A
432.88 218.86 432.88 255.9 432.88 292.93 3 L
N
489.13 218.86 489.13 255.9 489.13 292.93 3 L
N
180 270 28.12 11.02 461 292.77 A
270 360 28.12 11.02 461 292.77 A
90 180 28.12 11.02 461 293 A
0 90 28.12 11.02 461 293 A
419.12 503.63 M
 427.24 501.42 427.24 501.42 428.29 500.89 D
 429.34 500.36 429.34 500.36 433.59 503.37 D
 437.83 506.39 437.83 506.39 444.4 506.66 D
 450.98 506.93 450.98 506.93 455.63 504.2 D
 460.29 501.46 460.29 501.46 461.96 497.25 D
 463.63 493.04 463.63 493.04 468.26 494.24 D
 472.88 495.43 472.88 495.43 479.36 492.73 D
 485.85 490.03 485.85 490.03 487.9 483.53 D
 489.96 477.04 489.96 477.04 487.9 471.83 D
 485.85 466.64 485.85 466.64 489.53 462.3 D
 493.21 457.97 493.21 457.97 493.45 451.29 D
 493.7 444.62 493.7 444.62 489.86 439.9 D
 486.03 435.19 486.03 435.19 481.37 433 D
 476.72 430.81 476.72 430.81 470.45 432.47 D
 464.18 434.14 464.18 434.14 461.69 429.18 D
 459.19 424.23 459.19 424.23 452.07 420.67 D
 444.95 417.11 444.95 417.11 437.29 418.21 D
 429.62 419.31 429.62 419.31 425.45 424.01 D
 421.28 428.72 421.28 428.72 415.32 426.48 D
 409.35 424.23 409.35 424.23 405.52 425.33 D
 401.69 426.42 401.69 426.42 398.7 431.04 D
 395.71 435.65 395.71 435.65 389.94 434.6 D
 384.16 433.55 384.16 433.55 378.68 437.11 D
 373.21 440.67 373.21 440.67 372.11 446.69 D
 371.02 452.71 371.02 452.71 374.05 457.51 D
 377.08 462.3 377.08 462.3 374.16 466.2 D
 371.23 470.1 371.23 470.1 371.23 475.52 D
 371.23 480.93 371.23 480.93 376.76 485.45 D
 382.28 489.96 382.28 489.96 387.33 489.96 D
 392.38 489.96 392.38 489.96 394.84 494.89 D
 397.3 499.81 397.3 499.81 401.41 502.55 D
 405.52 505.29 405.52 505.29 408.26 505.57 D
 411 505.84 411 505.84 419.12 503.63 D
O
7 X
V
0 Z
0 X
N
2 Z
180 270 18.75 7.35 203.64 223.09 A
270 360 18.75 7.35 203.64 223.09 A
184.89 223.19 184.89 247.88 184.89 272.57 3 L
N
222.39 223.19 222.39 247.88 222.39 272.57 3 L
N
180 270 18.75 7.34 203.64 272.47 A
270 360 18.75 7.34 203.64 272.47 A
90 180 18.75 7.34 203.64 272.62 A
0 90 18.75 7.34 203.64 272.62 A
6 8 Q
(client) 422.15 462.48 T
(epdb) 193.93 240.49 T
(CDS/NSI) 444.47 247.26 T
(rpcd) 153.21 327.06 T
(rpc_ep_resolve) 310.18 406.64 T
(rpc_ep_register) 197.68 333.22 T
(rpc_ep_unregister) 196.61 321.59 T
(rpc_mgmt_ep_*) 136.61 447.82 T
(rpccp) 149.47 481.73 T
206.17 397.55 M
 226.63 391.99 226.63 391.99 229.28 390.65 D
 231.94 389.31 231.94 389.31 242.63 396.9 D
 253.33 404.49 253.33 404.49 269.89 405.18 D
 286.45 405.87 286.45 405.87 298.18 398.97 D
 309.91 392.07 309.91 392.07 314.12 381.47 D
 318.33 370.86 318.33 370.86 329.99 373.88 D
 341.65 376.89 341.65 376.89 357.98 370.09 D
 374.32 363.29 374.32 363.29 379.51 346.91 D
 384.69 330.53 384.69 330.53 379.51 317.43 D
 374.32 304.32 374.32 304.32 383.6 293.4 D
 392.88 282.49 392.88 282.49 393.49 265.67 D
 394.11 248.85 394.11 248.85 384.44 236.97 D
 374.77 225.08 374.77 225.08 363.04 219.56 D
 351.31 214.04 351.31 214.04 335.52 218.23 D
 319.72 222.43 319.72 222.43 313.44 209.96 D
 307.15 197.48 307.15 197.48 289.21 188.51 D
 271.27 179.53 271.27 179.53 251.95 182.3 D
 232.63 185.06 232.63 185.06 222.12 196.92 D
 211.62 208.78 211.62 208.78 196.59 203.13 D
 181.56 197.48 181.56 197.48 171.9 200.24 D
 162.24 203 162.24 203 154.72 214.63 D
 147.2 226.25 147.2 226.25 132.64 223.6 D
 118.08 220.94 118.08 220.94 104.28 229.91 D
 90.48 238.88 90.48 238.88 87.72 254.06 D
 84.96 269.24 84.96 269.24 92.6 281.33 D
 100.24 293.4 100.24 293.4 92.87 303.23 D
 85.5 313.06 85.5 313.06 85.5 326.71 D
 85.5 340.36 85.5 340.36 99.42 351.72 D
 113.35 363.09 113.35 363.09 126.06 363.09 D
 138.78 363.09 138.78 363.09 144.99 375.51 D
 151.2 387.93 151.2 387.93 161.55 394.83 D
 171.9 401.73 171.9 401.73 178.8 402.42 D
 185.7 403.11 185.7 403.11 206.17 397.55 D
O
1 H
0 Z
3 X
N
144.11 309.64 182.68 343.93 R
0.5 H
0 X
N
(server) 127.11 248.48 T
114.07 227.41 164.43 271.88 R
N
188.64 336.65 182.68 336.79 185.78 341.88 3 L
N
378.68 437.11 M
 271.61 363.57 271.61 363.57 274.82 375.89 D
 277.99 388.01 278.04 388.21 187.21 339.23 D
N
188.41 326.41 183.22 329.41 188.41 332.41 3 L
N
282.82 329.41 183.22 329.41 2 L
N
184.85 278.63 184.89 272.63 179.67 275.59 3 L
8 X
N
163.39 309.64 184.89 272.62 2 L
N
428.64 242.47 432.86 238.22 427.07 236.69 3 L
N
182.68 309.64 M
 357.32 233.39 357.32 233.39 348.22 248.12 D
 339.27 262.59 339.11 262.85 427.89 239.52 D
N
139.82 462.14 184.29 505 R
0 X
N
165.05 350.55 162.05 345.36 159.05 350.55 3 L
N
162.05 462.14 162.05 345.36 2 L
N
471.39 305.93 468.21 300.89 465.44 306.17 3 L
N
437.29 418.21 M
 452.68 336.78 452.68 336.78 462.06 356.34 D
 471.21 375.43 471.43 375.88 468.44 306.04 D
N
430.53 286.6 432.87 281.07 426.91 281.81 3 L
N
333.18 322.32 M
 409.29 286.96 409.29 286.96 402.86 297.67 D
 396.69 307.97 396.44 308.37 428.72 284.18 D
N
(rpc_ns_binding_export) 351.07 305.71 T
(rpc_ns_binding_import_*) 404.47 379.44 T
(rpc_ns_binding_lookup_*) 404.47 370.13 T
(rpc_ns_twr_*) 278.04 256.9 T
(dsm*) 169.29 284.82 T
277.63 317.22 282.82 314.22 277.63 311.22 3 L
8 X
N
182.68 314.22 282.82 314.22 2 L
N
0 X
(rpc_mgmt_is_server_listening) 193.75 306 T
179.12 340.36 173.12 340.13 175.93 345.43 3 L
9 X
N
373.13 468.25 218.13 407 280.63 407 173.13 340.12 4 L
N
141.43 259.79 135.62 258.26 137.21 264.05 3 L
N
153.75 313.87 122.5 282.62 160 282.62 135.63 258.25 4 L
N
0 X
(server) 303.86 325.48 T
290.82 304.41 341.18 348.88 R
N
8 F
(datagram RPC,) 251.25 455.75 T
6 F
(addr_has_endpoint=false) 251.25 446.44 T
8 F
(forwarded) 118.75 289.01 T
0 0 612 792 C
108 193.5 504 517.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "2" 79
%%Page: "3" 79
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-3) 524.01 34.67 T
2 F
(\245) 144 712 T
(management routines, which are remote operations that allow management) 162 712 T
(applications to examine and, if necessary) 162 698.5 T
(, alter the contents of the endpoint) 358.4 698.5 T
(database on the local host or on a remote one.) 162 685 T
(\245) 144 665.5 T
(server liveness monitoring and related garbage collection of invalid database) 162 665.5 T
(entries, which are fundamentally local operations \050with the exception of the) 162 652 T
(server ping operation\051) 162 638.5 T
(\245) 144 619 T
(forwarding services that datagram RPC clients use to establish initial contact) 162 619 T
(with a server whose host is known but whose endpoint is not.) 162 605.5 T
(\245) 144 586 T
(endpoint resolution services that connection-oriented RPC clients use to dis-) 162 586 T
(cover the endpoint at which to bind to a server on a given host.) 162 572.5 T
(There are two related facilities that we do not discuss in this edition of this docu-) 144 553 T
(ment: the distributed storage manager \050dsm\051 routines, which implement the actual) 144 539.5 T
(database used by the) 144 526 T
0 F
(rpcd) 245.92 526 T
2 F
(, and the various compatibility routines that allow the) 269.91 526 T
0 F
(rpcd) 144 512.5 T
2 F
( to support NCS 1.5.1 local location broker \050) 167.99 512.5 T
0 F
(llbd) 381.85 512.5 T
2 F
(\051 functions.) 401.86 512.5 T
249.5 482.28 108 482.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(The Endpoint Database) 108 483.67 T
2 12 Q
(The endpoint database is a dynamic database of the interfaces supported by the) 144 463 T
(DCE RPC servers on a given host and the communications endpoints \050e.g.,) 144 449.5 T
(sockaddrs\051 at which those servers can be reached. Servers add information to the) 144 436 T
(database by calling the public functions) 144 422.5 T
5 11 Q
(rpc_ep_register_no_replace) 337.2 422.5 T
2 12 Q
( and/) 508.59 422.5 T
(or) 144 409 T
5 11 Q
(rpc_ep_register) 156.99 409 T
2 12 Q
(. They delete information from the database by calling) 255.21 409 T
5 11 Q
-0.33 (rpc_ep_unregister) 144 395.5 P
2 12 Q
-0.15 (. While the AES prescribes that servers take pains to unreg-) 255.4 395.5 P
-0.03 (ister themselves before shutting down, the designers of DCE RPC assumed that at) 144 382 P
(least some servers will occasionally crash or make some similarly disorderly exit) 144 368.5 T
(that leaves a stale registration behind, which is why the) 144 355 T
0 F
(rpcd) 412.15 355 T
2 F
( periodically checks) 436.14 355 T
(each registered server to see if it is still listening. Servers that appear to be not lis-) 144 341.5 T
-0.18 (tening are eventually declared dead, and will have their entries unregistered by the) 144 328 P
0 F
(rpcd) 144 314.5 T
2 F
(.) 167.99 314.5 T
(The in-memory endpoint database is backed in stable storage so that, in the event) 144 295 T
-0.4 (the) 144 281.5 P
0 F
-0.4 (rpcd) 161.25 281.5 P
2 F
-0.4 ( has to be re-started on a running system, no registrations will be lost. This) 185.24 281.5 P
(feature also causes registration data to persist across system reboots, however) 144 268 T
(,) 515.57 268 T
-0.2 (even though it is unlikely to still be valid \050especially after a system crash\051. Normal) 144 254.5 P
0 F
(rpcd) 144 241 T
2 F
( garbage collection will eventually correct this situation, as will forced) 167.99 241 T
(removal of the database \336le on reboot.) 144 227.5 T
-0.03 (The) 144 208 P
0 F
-0.03 (rpcd) 165.62 208 P
2 F
-0.03 ( can cope with endpoint database format changes, and will simply delete) 189.6 208 P
(a database with an \322older\323 version id, then recreate one from scratch in the \322new\323) 144 194.5 T
(format. If it \336nds a database with a \322newer\323 version id, the) 144 181 T
0 F
(rpcd) 428.45 181 T
2 F
( will exit with an) 452.43 181 T
(error status.) 144 167.5 T
(The) 144 148 T
0 F
( rpcd) 162.65 148 T
2 F
(or) 192.63 148 T
(ganizes database entries into in-memory lists. Each entry appears on) 202.41 148 T
(three lists:) 144 134.5 T
(\245) 144 115 T
(a linear list of all entries in the database, used by the liveness monitoring rou-) 162 115 T
(tines) 162 101.5 T
(\245) 144 82 T
(an object list of entries with the same object UUID) 162 82 T
FMENDPAGE
%%EndPage: "3" 80
%%Page: "4" 80
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-4) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(\245) 108 712 T
(an interface list of entries with the same interface UUID) 126 712 T
(This trio of lists is itself represented by a \322lists\323 data structure referenced by each) 108 692.5 T
-0.38 (database entry) 108 679 P
-0.38 (. Individual list items are accessed by manipulating a pair of forward) 175.78 679 P
(and back pointers. For improve lookup performance, the) 108 665.5 T
0 F
(rpcd) 381.8 665.5 T
2 F
( maintains tables of) 405.78 665.5 T
(object and interface entries indexed by UUID hash. Each bucket in these tables) 108 652 T
(points to the head of a list of entries whose object or interface UUIDs hash to the) 108 638.5 T
(same bucket. Figure 5-2 illustrates these lists.) 108 625 T
-0.29 (In-memory changes to database entries are written back to the stable store. The list) 108 605.5 P
(structures are regenerated by the) 108 592 T
0 F
(rpcd) 266.85 592 T
2 F
( when it starts up.) 290.84 592 T
0 F
(Major Endpoint Database Data Structur) 72 572.5 T
(es) 280.33 572.5 T
2 F
-0.49 (The base endpoint entry type, the wire representation of an endpoint database entry) 108 552.5 P
(that all callers of the endpoint mapper reference, is de\336ned in) 108 539 T
5 11 Q
(ep.idl) 405.1 539 T
2 12 Q
(. As illus-) 444.65 539 T
(trated in T) 108 392 T
(able 5-1, this structure includes an object UUID, a pointer to a protocol) 157.12 392 T
-0.28 (tower) 108 378.5 P
-0.28 (, and an annotation \336eld. The annotation \336eld is a \336xed-length array of octets) 134.83 378.5 P
-0.04 (intended to allow servers to supply users of administrative applications with some) 108 365 P
(clue as to the description of an interface.) 108 351.5 T
(Each endpoint database entry is represented by the data structure illustrated in) 108 332 T
(T) 108 318.5 T
(able 5-2. This structure furnishes the runtime\325) 114.49 318.5 T
(s reference to an) 334 318.5 T
5 11 Q
(ept_entry_t) 415.92 318.5 T
2 12 Q
(,) 488.43 318.5 T
(and includes all the information in that structure and the protocol tower it refer-) 108 305 T
(ences, as well as additional data required for determining server liveness. The) 108 291.5 T
(structure also includes several \336elds that support NCS 1.5.1 compatibility \050we) 108 278 T
4 F
(T) 229.66 521 T
(able 5-1: ept_entry_t structur) 235.22 521 T
(e) 377.02 521 T
7 11 Q
(ept_entry_t {) 110 499.67 T
5 F
(object) 110 480.67 T
(/* object UUID */) 218 480.67 T
(tower) 110 461.67 T
(/* pointer to tower */) 218 461.67 T
(annotation[]) 110 442.67 T
(/* annotation octet string */) 218 442.67 T
7 F
(}) 110 423.67 T
106.75 512 106.75 415 2 L
V
0.5 H
0 Z
N
109.25 509.5 109.25 417.5 2 L
V
N
214.75 491.75 214.75 435.25 2 L
V
N
217.25 491.75 217.25 435.25 2 L
V
N
502.75 509.5 502.75 417.5 2 L
V
N
505.25 512 505.25 415 2 L
V
N
106.5 512.25 505.5 512.25 2 L
V
N
109 509.75 503 509.75 2 L
V
N
109.5 492 502.5 492 2 L
V
N
109.5 473 502.5 473 2 L
V
N
109.5 454 502.5 454 2 L
V
N
109.5 435 502.5 435 2 L
V
N
109 417.25 503 417.25 2 L
V
N
106.5 414.75 505.5 414.75 2 L
V
N
FMENDPAGE
%%EndPage: "4" 81
%%Page: "5" 81
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-5) 524.01 34.67 T
2 F
-0.17 (won\325) 144 712 P
-0.17 (t discuss these here\051. Shaded \336elds in T) 168.43 712 P
-0.17 (able 5-2 are derived from the contents) 355.64 712 P
(of the tower referenced by the) 144 119.5 T
5 11 Q
(ept_entry_t) 291.2 119.5 T
2 12 Q
(. Other \336elds of special interest) 363.7 119.5 T
(include:) 144 106 T
5 11 Q
(read_nrefs) 144 86.5 T
2 12 Q
(In an attempt to reference count endpoint database entries, each) 216 86.5 T
4 F
(T) 266.99 694 T
(able 5-2: db_entry_t structur) 272.55 694 T
(e) 411.69 694 T
7 11 Q
(db_entry_t {) 146 672.67 T
5 F
(lists) 146 653.67 T
(/* the lists on which we appear */) 308 653.67 T
(read_nrefs) 146 634.67 T
(/* how many readers of this entry) 308 634.67 T
(have released the db_lock */) 308 621.67 T
(ncomm_fails) 146 602.67 T
-1.22 (/* how many consecutive attempts to) 308 602.67 P
(ping this server have failed */) 308 589.67 T
(delete_f) 146 570.67 T
(lag) 198.73 570.67 T
(/* true iff this entry should be) 308 570.67 T
(deleted when read_nrefs == 0 */) 308 557.67 T
(object_nil) 146 538.67 T
(/* true iff object UUID is nil */) 308 538.67 T
(if_nil) 146 519.67 T
(/* true iff interface UUID is nil) 308 519.67 T
(*/) 308 506.67 T
145.5 480.25 304.5 498.75 R
6 X
V
0 X
(object) 146 487.67 T
(/* this entry\325s object uuid */) 308 487.67 T
145.5 461.25 304.5 479.75 R
6 X
V
0 X
(interface) 146 468.67 T
(/* this entry\325s interface UUID */) 308 468.67 T
145.5 429.25 304.5 460.75 R
6 X
V
0 X
(data_rep_id) 146 449.67 T
(/* this entry\325s transfer syntax) 308 449.67 T
(UUID */) 308 436.67 T
145.5 397.25 304.5 428.75 R
6 X
V
0 X
(data_rep_vers_major) 146 417.67 T
(/* this entry\325s transfer syntax) 308 417.67 T
(major version */) 308 404.67 T
145.5 378.25 304.5 396.75 R
6 X
V
0 X
(data_rep_version_minor) 146 385.67 T
-0.14 (/* transfer syntax minor version */) 308 385.67 P
145.5 359.25 304.5 377.75 R
6 X
V
0 X
(rpc_protocol) 146 366.67 T
(/* rpc protocol id */) 308 366.67 T
145.5 340.25 304.5 358.75 R
6 X
V
0 X
(rpc_protocol_vers_major) 146 347.67 T
(/* protocol major version */) 308 347.67 T
145.5 321.25 304.5 339.75 R
6 X
V
0 X
(rpc_protocol_vers_minor) 146 328.67 T
(/* protocol minor version */) 308 328.67 T
(type) 146 309.67 T
(/* for NCS compatibility */) 308 309.67 T
(llb_f) 146 290.67 T
(lags) 178.96 290.67 T
(/* for NCS compatibility */) 308 290.67 T
(saddr_len) 146 271.67 T
(/* for NCS compatibility */) 308 271.67 T
145.5 219.25 304.5 263.75 R
6 X
V
0 X
(addr) 146 252.67 T
(/* rpc address \050for forwarding\051) 308 252.67 T
-0.12 (Derived from \322tower\323 entry at rpcd) 308 239.67 P
(startup time */) 308 226.67 T
145.5 200.25 304.5 218.75 R
6 X
V
0 X
(annotation[]) 146 207.67 T
(/* annotation string */) 308 207.67 T
145.5 168.25 304.5 199.75 R
6 X
V
0 X
(tower) 146 188.67 T
-1.04 (/* twr_t to which this entry refers) 308 188.67 P
(*/) 308 175.67 T
7 F
(}) 146 156.67 T
142.75 685 142.75 148 2 L
V
0.5 H
0 Z
N
145.25 682.5 145.25 150.5 2 L
V
N
304.75 664.75 304.75 168.25 2 L
V
N
307.25 664.75 307.25 168.25 2 L
V
N
538.75 682.5 538.75 150.5 2 L
V
N
541.25 685 541.25 148 2 L
V
N
142.5 685.25 541.5 685.25 2 L
V
N
145 682.75 539 682.75 2 L
V
N
145.5 665 538.5 665 2 L
V
N
145.5 646 538.5 646 2 L
V
N
145.5 614 538.5 614 2 L
V
N
145.5 582 538.5 582 2 L
V
N
145.5 550 538.5 550 2 L
V
N
145.5 531 538.5 531 2 L
V
N
145.5 499 538.5 499 2 L
V
N
145.5 480 538.5 480 2 L
V
N
145.5 461 538.5 461 2 L
V
N
145.5 429 538.5 429 2 L
V
N
145.5 397 538.5 397 2 L
V
N
145.5 378 538.5 378 2 L
V
N
145.5 359 538.5 359 2 L
V
N
145.5 340 538.5 340 2 L
V
N
145.5 321 538.5 321 2 L
V
N
145.5 302 538.5 302 2 L
V
N
145.5 283 538.5 283 2 L
V
N
145.5 264 538.5 264 2 L
V
N
145.5 219 538.5 219 2 L
V
N
145.5 200 538.5 200 2 L
V
N
145.5 168 538.5 168 2 L
V
N
145 150.25 539 150.25 2 L
V
N
142.5 147.75 541.5 147.75 2 L
V
N
FMENDPAGE
%%EndPage: "5" 82
%%Page: "6" 82
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-6) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(entry includes this \336eld, which is supposed to be incremented by) 180 712 T
(any function that references the entry while holding the endpoint) 180 698.5 T
(database\325) 180 685 T
(s mutex lock. Such functions should also decrement) 224.63 685 T
5 11 Q
(read_nrefs) 180 671.5 T
2 12 Q
( when done with the structure.) 245.92 671.5 T
5 11 Q
(ncomm_fails) 108 652 T
2 12 Q
(This \336eld is initialized to zero and incremented every time one of) 180.51 652 T
(the server liveness tasks tries unsuccessfully to communicate \050via) 180 638.5 T
5 11 Q
-0.05 (rpc_mgmt_is_server_listening) 180 625 P
2 12 Q
-0.02 (\051 with the server represented) 364.57 625 P
(by this entry) 180 611.5 T
(,) 239.19 611.5 T
5 11 Q
(delete_f) 108 592 T
(lag) 160.73 592 T
2 12 Q
(This \336eld is set by one of the server liveness tasks to indicate that) 180.51 592 T
-0.35 (the entry refers to a \322dead\323 server) 180 578.5 P
-0.35 (, and should be deleted once it has) 339.26 578.5 P
(no more readers \050i.e., when) 180 565 T
5 11 Q
(read_nrefs=0) 313.88 565 T
2 12 Q
(\051) 392.98 565 T
(As we\325ve described, the) 108 545.5 T
0 F
( rpcd) 223.23 545.5 T
2 F
( or) 250.22 545.5 T
(ganizes database entries onto lists, which it) 262.99 545.5 T
-0.27 (accesses via the structures illustrated in T) 108 532 P
-0.27 (able 5-3 and T) 304.71 532 P
-0.27 (able 5-4.  In addition to the) 372.66 532 P
(data structures we\325ve illustrated, the) 108 236.5 T
0 F
(rpcd) 284.53 236.5 T
2 F
(\325) 308.52 236.5 T
(s database management functions) 311.85 236.5 T
(employ a simple structure consisting of a forward \050) 108 223 T
5 11 Q
(fwd) 353.16 223 T
2 12 Q
(\051 and backward \050) 372.93 223 T
5 11 Q
(back) 453.85 223 T
2 12 Q
(\051) 480.22 223 T
(pointer to traverse the entry) 108 209.5 T
(, object, and interface lists. Depending on the type of) 239.78 209.5 T
(list, these pointers point to either adjacent list elements, or to the \336rst and last) 108 196 T
(items on the list.) 108 182.5 T
-0.09 (Figure 5-2 describes the relationships among these structures and the lists they ref-) 108 163 P
(erence.) 108 149.5 T
4 F
(T) 233.64 514 T
(able 5-3: db_lists_t structur) 239.21 514 T
(e) 373.03 514 T
7 11 Q
(db_lists_t {) 110 492.67 T
5 F
(entry_list) 110 473.67 T
(/* linear list of all database entries */) 218 473.67 T
(object_list) 110 454.67 T
-0.75 (/* list of entries with this entry\325s object) 218 454.67 P
(UUID */) 218 441.67 T
(interface_list) 110 422.67 T
(/* list sorted by interface UUID */) 218 422.67 T
7 F
(}) 110 403.67 T
4 12 Q
(T) 217.32 376 T
(able 5-4: db_lists_mgmt_t structur) 222.89 376 T
(e) 389.35 376 T
7 11 Q
(db_lists_mgmt_t {) 110 354.67 T
5 F
(entry_list) 110 335.67 T
(/* linear list of all entries */) 218 335.67 T
(object_table) 110 316.67 T
(/* entries sorted by object UUID hash */) 218 316.67 T
(interface_table) 110 297.67 T
(/* entries sorted by interface UUID hash */) 218 297.67 T
7 F
(}) 110 278.67 T
106.75 505 106.75 395 2 L
V
0.5 H
0 Z
N
109.25 502.5 109.25 397.5 2 L
V
N
214.75 484.75 214.75 415.25 2 L
V
N
217.25 484.75 217.25 415.25 2 L
V
N
502.75 502.5 502.75 397.5 2 L
V
N
505.25 505 505.25 395 2 L
V
N
106.5 505.25 505.5 505.25 2 L
V
N
109 502.75 503 502.75 2 L
V
N
109.5 485 502.5 485 2 L
V
N
109.5 466 502.5 466 2 L
V
N
109.5 434 502.5 434 2 L
V
N
109.5 415 502.5 415 2 L
V
N
109 397.25 503 397.25 2 L
V
N
106.5 394.75 505.5 394.75 2 L
V
N
106.75 367 106.75 270 2 L
V
N
109.25 364.5 109.25 272.5 2 L
V
N
214.75 346.75 214.75 290.25 2 L
V
N
217.25 346.75 217.25 290.25 2 L
V
N
502.75 364.5 502.75 272.5 2 L
V
N
505.25 367 505.25 270 2 L
V
N
106.5 367.25 505.5 367.25 2 L
V
N
109 364.75 503 364.75 2 L
V
N
109.5 347 502.5 347 2 L
V
N
109.5 328 502.5 328 2 L
V
N
109.5 309 502.5 309 2 L
V
N
109.5 290 502.5 290 2 L
V
N
109 272.25 503 272.25 2 L
V
N
106.5 269.75 505.5 269.75 2 L
V
N
FMENDPAGE
%%EndPage: "6" 83
%%Page: "7" 83
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-7) 524.01 34.67 T
(Figur) 224.29 712 T
(e 5-2: Endpoint Database Entries and Lists) 251.16 712 T
2 F
(W) 144 362.5 T
(ithin a list, the) 154.84 362.5 T
5 11 Q
(fwd) 226.48 362.5 T
2 12 Q
( and) 246.25 362.5 T
5 11 Q
(back) 269.57 362.5 T
2 12 Q
( pointers are used to link an entry to its neighbors.) 295.94 362.5 T
(When used to manage a list or hash table,) 144 349 T
5 11 Q
(fwd) 346.52 349 T
2 12 Q
( is initialized to point to the head) 366.3 349 T
(\050\336rst entry\051 of the list or table, and) 144 335.5 T
5 11 Q
(back) 312.22 335.5 T
2 12 Q
( is initialized to point to the last entry) 338.59 335.5 T
(.) 517.05 335.5 T
(Figure 5-3 provides a more detailed view of the relationship of an individual) 144 316 T
5 11 Q
(ept_entry_t) 144 302.5 T
2 12 Q
( to the tower it references and details the relationship of an entry\325) 216.51 302.5 T
(s) 528.94 302.5 T
-0.43 (contents to where it appears in the endpoint database. It also shows the relationship) 144 289 P
(of the entry lists to the hash tables used to look up entries.) 144 275.5 T
144 384 540 708 C
396.47 616.5 401.67 613.5 396.47 610.5 3 L
0.5 H
0 Z
0 X
0 K
N
273.05 650.58 353.22 650.58 343.61 613.5 401.67 613.5 4 L
N
374.3 662.16 379.5 659.16 374.3 656.16 3 L
N
261.05 659.16 379.5 659.16 2 L
N
369.31 458.43 409 402.5 2 L
8 X
N
422.33 552.77 460.33 498.83 2 L
N
302.45 582.93 341.5 528 2 L
N
152.5 622 207 695 R
7 X
V
0 X
N
415.83 498.83 460.33 528.83 R
7 X
V
0 X
N
215.64 644 284.64 683 R
N
217 526 269.5 564.5 R
7 X
V
0 X
N
154 453 203 575 R
7 X
V
0 X
N
9 8 Q
(db_entry_t) 156.5 565.5 T
6 F
(lists) 156.5 556.91 T
(read_nrefs) 156.5 548.33 T
(ncomm_fails) 156.5 539.74 T
(delete_\337ag) 156.5 531.15 T
(object_nil) 156.5 522.57 T
(if_nil) 156.5 513.98 T
(object) 156.5 505.39 T
(interface) 156.5 496.8 T
3 F
(\267) 156.5 490.36 T
(\267) 156.5 485.14 T
(\267) 156.5 479.92 T
6 F
(addr) 156.5 475.8 T
(annotation) 156.5 467.22 T
(tower) 156.5 457.96 T
9 F
(db_lists_t) 220.12 556.45 T
6 F
(entry_list) 220.12 547.86 T
(object_list) 220.12 539.27 T
(interface_list) 220.12 530.68 T
9 F
(db_lists_mgmt_t) 217.94 674.35 T
6 F
(entry_list) 217.94 665.75 T
(object_table) 217.94 657.16 T
(interface_table) 217.94 648.58 T
9 F
(db_list_t) 418.95 518.71 T
6 F
(*fwd) 418.95 510.11 T
(*back) 418.95 501.52 T
9 F
(db) 155.83 686.96 T
6 F
(dsh) 155.83 678.36 T
(object) 155.83 669.78 T
(lists_mgmt) 155.83 661.19 T
(lock) 155.83 652.6 T
(sliv_task1_h) 155.83 644.01 T
(sliv_task2_h) 155.83 635.43 T
(sliv_task2_cv) 155.83 626.84 T
297 528 341.5 558 R
7 X
V
0 X
N
9 F
(db_list_t) 300.12 547.87 T
6 F
(*fwd) 300.12 539.28 T
(*back) 300.12 530.69 T
305.11 646.33 349.61 676.33 R
7 X
V
0 X
N
9 F
(db_list_t) 308.24 666.21 T
6 F
(*fwd) 308.24 657.61 T
(*back) 308.24 649.02 T
379.92 636.47 448.42 665.97 R
7 X
V
0 X
N
9 F
(db_hash_table_t) 381.71 656.51 T
6 F
(*fwd) 381.71 647.91 T
(*back) 381.71 639.32 T
402.56 589.93 471.06 619.43 R
7 X
V
0 X
N
9 F
(db_hash_table_t) 404.35 609.97 T
6 F
(*fwd) 404.35 601.38 T
(*back) 404.35 592.79 T
364.5 402.5 409 432.5 R
7 X
V
0 X
N
9 F
(db_list_t) 367.62 422.37 T
6 F
(*fwd) 367.62 413.78 T
(*back) 367.62 405.19 T
226.45 582.93 245.45 601.93 R
N
245.45 582.93 264.45 601.93 R
N
264.45 582.93 283.45 601.93 R
N
283.45 582.93 302.45 601.93 R
N
302.45 582.93 321.45 601.93 R
N
321.45 582.93 340.45 601.93 R
N
477.81 645.77 496.81 664.77 R
N
293.31 458.43 312.31 477.43 R
6 X
V
0 X
N
312.31 458.43 331.31 477.43 R
6 X
V
0 X
N
331.31 458.43 350.31 477.43 R
6 X
V
0 X
N
350.31 458.43 369.31 477.43 R
6 X
V
0 X
N
369.31 458.43 388.31 477.43 R
6 X
V
0 X
N
477.81 683.77 496.81 702.77 R
N
441.33 552.77 460.33 571.77 R
4 X
V
0 X
N
422.33 552.77 441.33 571.77 R
4 X
V
0 X
N
403.33 552.77 422.33 571.77 R
4 X
V
0 X
N
384.33 552.77 403.33 571.77 R
4 X
V
0 X
N
477.81 664.77 496.81 683.77 R
4 X
V
0 X
N
283.45 601.93 297 558 2 L
4 X
V
8 X
N
283.45 582.93 297 528 2 L
4 X
V
8 X
N
302.45 601.93 341.5 558 2 L
4 X
V
8 X
N
3 F
0 X
(\254) 279.5 593 T
(\256) 300.5 584.19 T
211.8 561.91 217 558.91 211.8 555.91 3 L
N
170.27 558.91 217 558.91 2 L
4 X
V
0 X
N
291.8 552.86 297 549.86 291.8 546.86 3 L
N
252.11 549.86 297 549.86 2 L
4 X
V
0 X
N
421.61 571.27 460.67 527.33 2 L
4 X
V
8 X
N
369.95 476.43 409 432.5 2 L
4 X
V
8 X
N
350.45 476.93 364 433 2 L
4 X
V
8 X
N
402.95 571.93 416.5 528 2 L
4 X
V
8 X
N
349.95 458.93 363.5 404 2 L
4 X
V
8 X
N
402.95 553.93 416.5 499 2 L
4 X
V
8 X
N
410.3 521 415.5 518 410.3 515 3 L
0 X
N
255.67 541.27 284.5 541.27 276 518 415.5 518 4 L
N
359.3 428 364.5 425 359.3 422 3 L
N
265 532.68 276 532.68 237 425 364.5 425 4 L
N
(\256) 419.5 553.69 T
(\256) 366 459.19 T
(\254) 396.67 565 T
(\254) 344 468 T
208.8 666.19 214 663.19 208.8 660.19 3 L
N
194.04 663.19 214 663.19 2 L
N
298.3 671.42 303.5 668.42 298.3 665.42 3 L
N
249.93 668.42 303.5 668.42 2 L
N
337.76 601.56 335.5 596 331.82 600.74 3 L
N
328.23 649.02 335.5 596 2 L
N
236.53 596.07 230.61 595.1 232.73 600.71 3 L
N
310.68 660.28 230.61 595.1 2 L
N
8 F
(ALL ENTRIES) 259 605.5 T
(ENTRIES[IF UUID = ABC]) 293.83 479.69 T
(ENTRIES[OBJ UUID = XYZ]) 371.5 574.39 T
(=XYZ) 178.17 505.5 T
(=ABC) 187.17 497.19 T
477.81 626.77 496.81 645.77 R
N
509.31 558.43 528.31 577.43 R
6 X
V
0 X
N
509.31 596.43 528.31 615.43 R
N
509.31 577.43 528.31 596.43 R
N
509.31 539.43 528.31 558.43 R
N
504.11 606.38 509.31 603.38 504.11 600.38 3 L
N
419.9 603.38 509.31 603.38 2 L
N
505.14 549.5 510.33 546.5 505.14 543.5 3 L
N
425.68 594.79 498.33 594.79 485.33 546.5 510.33 546.5 4 L
N
472.8 698.5 478 695.5 472.8 692.5 3 L
N
397.26 647.91 469 647.91 441.5 695.5 478 695.5 4 L
N
471.8 642.32 477 639.32 471.8 636.32 3 L
N
401.71 639.32 477 639.32 2 L
N
6 F
(uuid_hash\050ABC\051) 476.5 563 T
(uuid_hash\050XYZ\051) 473.33 672.19 T
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "7" 84
%%Page: "8" 84
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-8) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 168.97 712 T
(e 5-3: Getting an Entry into the Endpoint Database) 195.85 712 T
0 F
(Endpoint Database Internal Operations) 72 362.5 T
2 F
(The) 108 342.5 T
0 F
(rpcd) 129.65 342.5 T
2 F
( implementation separates the low-level database creation, list manage-) 153.63 342.5 T
-0.19 (ment \050addition to, deletion from\051, and list traversal operations from operations spe-) 108 329 P
(ci\336c to DCE RPC endpoints. In part, this separation is just a matter of reasonable) 108 315.5 T
(modularity) 108 302 T
(, and in part, it has to do with the) 159.86 302 T
0 F
(rpcd) 321.1 302 T
2 F
(\325) 345.09 302 T
(s heritage \050NCS 1.5.1\051 and cur-) 348.42 302 T
-0.12 (rent requirements that it continue to support other forms of endpoint database. Fig-) 108 288.5 P
(ure 5-4 describes the or) 108 275 T
(ganization of basic database management and DCE RPC) 220.35 275 T
(endpoint operations implemented in) 108 261.5 T
5 11 Q
(rpcddb.c) 283.89 261.5 T
2 12 Q
( and) 336.63 261.5 T
5 11 Q
(rpcdepdb.c) 359.95 261.5 T
2 12 Q
(.) 425.86 261.5 T
108 384 504 708 C
225 576.33 279 617.33 R
7 X
0 K
V
0.5 H
0 Z
0 X
N
307 565.5 384.5 688 R
5 X
V
0 X
N
9 8 Q
(db_entry_t) 310.95 678.47 T
6 F
(lists) 310.95 669.85 T
(read_nrefs) 310.95 661.23 T
(ncomm_fails) 310.95 652.61 T
(delete_\337ag) 310.95 643.99 T
(object_nil) 310.95 635.36 T
(if_nil) 310.95 626.74 T
(object) 310.95 618.12 T
(interface) 310.95 609.5 T
3 F
(\267) 310.95 603.02 T
(\267) 310.95 597.78 T
(\267) 310.95 592.54 T
6 F
(addr) 310.95 588.41 T
(annotation) 310.95 579.79 T
(tower) 310.95 570.5 T
124.5 672 197 683.5 R
7 X
V
0 X
N
124.5 660.5 197 672 R
7 X
V
0 X
N
124.5 649 197 660.5 R
7 X
V
0 X
N
124.5 637.5 197 649 R
7 X
V
0 X
N
(if UUID/version) 134 675 T
(xfer syntax UUID) 132 662.69 T
(protocol) 147 651.89 T
(address) 147.5 640.08 T
9 F
(ept_entry_t) 227.5 608.5 T
6 F
(object) 227.5 599.19 T
(tower) 227.5 589.89 T
(annotation) 227.5 580.58 T
9 F
(tower_t) 147 687.5 T
180.78 392.93 199.78 411.93 R
N
199.78 392.93 218.78 411.93 R
N
218.78 392.93 237.78 411.93 R
N
237.78 392.93 256.78 411.93 R
N
256.78 392.93 275.78 411.93 R
N
275.78 392.93 294.78 411.93 R
N
182.95 509.32 201.95 528.32 R
N
201.95 509.32 220.95 528.32 R
5 X
V
0 X
N
220.95 509.32 239.95 528.32 R
N
3 F
(\256) 218 510.08 T
161.78 393.04 180.78 412.04 R
N
182.95 488.37 201.95 507.37 R
N
201.95 488.37 220.95 507.37 R
N
220.95 488.37 239.95 507.37 R
N
(\256) 218 491.13 T
246.28 509.32 265.28 528.32 R
5 X
V
0 X
N
246.28 488.37 265.28 507.37 R
N
221.11 466.27 240.11 485.27 R
N
202.11 445.32 221.11 464.32 R
N
221.11 445.32 240.11 464.32 R
N
(\254) 213.17 455.39 T
(\256) 219.5 446.58 T
246.45 466.27 265.45 485.27 R
N
246.45 445.32 265.45 464.32 R
N
387.78 508.65 406.78 527.65 R
N
406.78 508.65 425.78 527.65 R
N
425.78 508.65 444.78 527.65 R
5 X
V
0 X
N
(\254) 475.33 515.72 T
(\256) 404.83 509.91 T
368.78 487.7 387.78 506.7 R
N
387.78 487.7 406.78 506.7 R
N
406.78 487.7 425.78 506.7 R
N
425.78 487.7 444.78 506.7 R
N
(\254) 383.83 497.77 T
(\256) 404.83 488.96 T
449.78 508.65 468.78 527.65 R
5 X
V
0 X
N
449.78 487.7 468.78 506.7 R
N
368.95 465.6 387.95 484.6 R
N
387.95 465.6 406.95 484.6 R
N
406.95 465.6 425.95 484.6 R
N
425.95 465.6 444.95 484.6 R
N
(\254) 384 475.67 T
(\256) 405 466.86 T
406.95 444.65 425.95 463.65 R
N
425.95 444.65 444.95 463.65 R
N
(\254) 418 454.72 T
(\256) 424.33 445.91 T
368.95 423.7 387.95 442.7 R
N
387.95 423.7 406.95 442.7 R
N
406.95 423.7 425.95 442.7 R
N
425.95 423.7 444.95 442.7 R
N
(\254) 384 433.77 T
(\256) 405 424.96 T
449.95 465.6 468.95 484.6 R
N
449.95 444.65 468.95 463.65 R
N
449.95 423.7 468.95 442.7 R
N
313.78 392.93 332.78 411.93 R
N
332.78 392.93 351.78 411.93 R
N
351.78 392.93 370.78 411.93 R
N
371.28 392.77 390.28 411.77 R
N
389.78 392.93 408.78 411.93 R
5 X
V
0 X
N
408.78 392.93 427.78 411.93 R
N
294.78 393.04 313.78 412.04 R
N
243.67 441 271.67 547 R
8 X
N
447.17 420.5 473.67 548 R
N
6 F
0 X
(entry_list) 258.5 399 T
(object_lists) 160.5 533.69 T
(interface_lists) 360.33 532.39 T
(object_table) 238 550.08 T
(interface_table) 434.5 550.77 T
3 F
(\254) 196.17 500.39 T
(\254) 196.17 520.39 T
6 F
(UUID=ABC) 323.33 515.08 T
(UUID=DEF) 323.33 491.97 T
(UUID=GHI) 323.33 469.66 T
(UUID=XYZ) 133.5 513 T
(UUID=UVW) 133.5 491.69 T
(UUID=RST) 133.5 470.89 T
3 F
(\267) 152.5 457.92 T
(\267) 152.5 454.7 T
(\267) 152.5 451.48 T
(\267) 339.33 455.42 T
(\267) 339.33 452.2 T
(\267) 339.33 448.98 T
6 F
(UUID=ABC) 342.67 609.75 T
(UUID=XYZ) 342 619.5 T
304.8 584.91 310 581.91 304.8 578.91 3 L
N
264.84 581.91 310 581.91 2 L
N
299.8 572.33 305 569.33 299.8 566.33 3 L
N
247.05 591.22 294 591.22 285.5 569.33 305 569.33 4 L
N
304.8 622.33 310 619.33 304.8 616.33 3 L
N
248.83 600.53 299 600.53 288 619.33 310 619.33 4 L
N
0.25 H
2 Z
180 270 32.3 28.04 203.47 629.53 A
180 270 50.25 43.62 203.46 629.53 A
171.15 629.53 153.2 629.53 2 L
N
203.46 601.49 203.46 612.4 225 593.71 203.46 575 203.46 585.91 5 L
N
(index=uuid_hash\050ABC\051) 0 -270 492 447.5 TF
(index=uuid_hash\050XYZ\051) 0 -270 290.5 447.69 TF
3 F
(\254) 421.33 519.22 T
(\254) 274.33 514.72 T
(\254) 386 395 T
(\256) 407.17 406.19 T
239.2 519.5 234 522.5 239.2 525.5 3 L
0.5 H
0 Z
N
251 522.5 234 522.5 2 L
N
239.2 498.87 234 501.87 239.2 504.87 3 L
N
255.78 501.87 234 501.87 2 L
N
238.7 476.1 233.5 479.1 238.7 482.1 3 L
N
255.95 479.1 233.5 479.1 2 L
N
237.2 455.82 232 458.82 237.2 461.82 3 L
N
255.95 458.82 232 458.82 2 L
N
441.2 519.33 436 522.33 441.2 525.33 3 L
N
454.5 522.33 436 522.33 2 L
N
441.7 498.2 436.5 501.2 441.7 504.2 3 L
N
459.28 501.2 436.5 501.2 2 L
N
440.7 475.43 435.5 478.43 440.7 481.43 3 L
N
459.45 478.43 435.5 478.43 2 L
N
443.2 454.49 438 457.49 443.2 460.49 3 L
N
459.45 457.49 438 457.49 2 L
N
442.2 433.54 437 436.54 442.2 439.54 3 L
N
459.45 436.54 437 436.54 2 L
N
397.2 511.83 392 514.83 397.2 517.83 3 L
N
458 514.83 392 514.83 2 L
N
380.2 491.54 375 494.54 380.2 497.54 3 L
N
459.28 494.54 375 494.54 2 L
N
383.2 468.77 378 471.77 383.2 474.77 3 L
N
459.45 471.77 378 471.77 2 L
N
416.03 449.15 410.83 452.15 416.03 455.15 3 L
N
460.78 452.15 410.83 452.15 2 L
N
380.7 426.87 375.5 429.87 380.7 432.87 3 L
N
459.45 429.87 375.5 429.87 2 L
N
195.7 513.15 190.5 516.15 195.7 519.15 3 L
N
255.78 516.15 190.5 516.15 2 L
N
197.7 492.87 192.5 495.87 197.7 498.87 3 L
N
255.78 495.87 192.5 495.87 2 L
N
216.86 449.82 211.67 452.82 216.86 455.82 3 L
N
249.11 452.82 211.67 452.82 2 L
N
219.03 468 213.83 471 219.03 474 3 L
N
254.33 471 213.83 471 2 L
N
6 F
(*fwd) 246.5 518.5 T
(*back) 246 510.19 T
(*back) 450 509.19 T
(*fwd) 451 519 T
0.25 H
2 Z
0 90 28.04 32.3 387.51 575.4 A
0 90 43.62 50.25 387.51 575.41 A
387.5 607.72 387.5 625.67 2 L
N
415.55 575.41 404.64 575.41 423.33 553.87 442.04 575.41 431.12 575.41 5 L
N
0 0 612 792 C
108 384 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "8" 85
%%Page: "9" 85
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-9) 524.01 34.67 T
(Figur) 218.63 712 T
(e 5-4:Endpoint Database Internal Operations) 245.51 712 T
328.87 361.19 144 361.19 2 L
V
0.59 H
0 Z
N
2 F
(Basic Database Management Routines) 144 362.5 T
(The following routines, implemented in) 144 342.5 T
5 11 Q
(rpcddb.c) 337.89 342.5 T
2 12 Q
(, comprise the basic database) 390.62 342.5 T
(operations that lie between the) 144 329 T
0 F
(rpcd) 293.56 329 T
2 F
(\325) 317.55 329 T
(s endpoint operations and the dsm database) 320.88 329 T
-0.28 (machinery) 144 315.5 P
-0.28 (. They include routines that set up and manage the various lists and hash) 193.85 315.5 P
(tables onto which the) 144 302 T
0 F
(rpcd) 249.27 302 T
2 F
( or) 273.25 302 T
(ganizes database entries, and routines that traverse) 286.03 302 T
(these lists.) 144 288.5 T
(Since list traversal is a remote operation, all lookup, map, and forwarding opera-) 144 269 T
(tions take a context handle ar) 144 255.5 T
(gument so that clients can look through the database) 284.01 255.5 T
(in sequential \050though not necessarily successive\051 calls. T) 144 242 T
(able 5-5 illustrates this) 414.97 242 T
(structure.) 144 228.5 T
144 384 540 708 C
157.33 444.67 274.67 513.33 R
5 X
0 K
V
6 8 Q
0 X
(db_list_\336rst) 162.5 448.46 T
(db_list_next) 223.67 447.82 T
162 496 170.67 505.33 R
0.5 H
0 Z
N
170.67 496 179.33 505.33 R
N
179.33 496 188 505.33 R
N
188 496 196.67 505.33 R
N
196.67 496 205.33 505.33 R
N
205.33 496 214 505.33 R
N
214 496 222.67 505.33 R
N
222.67 496 231.33 505.33 R
N
162 488 170.67 497.33 R
N
170.67 488 179.33 497.33 R
N
179.33 488 188 497.33 R
N
188 488 196.67 497.33 R
N
196.67 488 205.33 497.33 R
N
205.33 488 214 497.33 R
N
214 488 222.67 497.33 R
N
222.67 488 231.33 497.33 R
N
162 480 170.67 489.33 R
N
170.67 480 179.33 489.33 R
N
179.33 480 188 489.33 R
N
188 480 196.67 489.33 R
N
196.67 480 205.33 489.33 R
N
205.33 480 214 489.33 R
N
214 480 222.67 489.33 R
N
222.67 480 231.33 489.33 R
N
162 472 170.67 481.33 R
N
170.67 472 179.33 481.33 R
N
179.33 472 188 481.33 R
N
188 472 196.67 481.33 R
N
196.67 472 205.33 481.33 R
N
205.33 472 214 481.33 R
N
214 472 222.67 481.33 R
N
222.67 472 231.33 481.33 R
N
162 464 170.67 473.33 R
N
170.67 464 179.33 473.33 R
N
179.33 464 188 473.33 R
N
188 464 196.67 473.33 R
N
196.67 464 205.33 473.33 R
N
205.33 464 214 473.33 R
N
214 464 222.67 473.33 R
N
222.67 464 231.33 473.33 R
N
236 464 245.33 472.67 R
N
236 472.67 245.33 481.33 R
N
236 481.33 245.33 490 R
N
236 490 245.33 498.67 R
N
246.43 492.49 240.66 490.84 242.11 496.66 3 L
N
351.38 669.86 414.38 669.86 240.67 490.83 3 L
N
364.36 649.62 359.17 652.62 364.36 655.62 3 L
N
331.73 466.44 285 466.44 471.19 652.62 359.17 652.62 4 L
N
303.33 502 440 607.33 R
7 X
V
8 X
N
0 X
(epdb_insert) 309.5 597.08 T
(epdb_delete) 316.17 585.9 T
(epdb_lookup) 316.17 530 T
(epdb_chk_entry) 309.5 574.72 T
(epdb_insert_entry) 309.5 518.82 T
(epdb_replace_entry) 309.5 507.64 T
(epdb_is_replace_candidate) 330.83 552.36 T
(epdb_delete_replaceable_entries) 319.5 563.54 T
(epdb_lookup_entry) 309.5 541.18 T
156 528.67 274.67 701.33 R
6 X
V
0 X
N
329.5 419.67 387.33 475.33 R
7 X
V
0 X
N
(db_open) 172.33 667.35 T
(db_init_lists) 172.42 680.26 T
(db_htable_add) 190.54 613.06 T
(db_htable_remove) 190.54 601.49 T
(db_lists_add) 179.83 641.54 T
(db_lists_remove) 179.83 629.97 T
(db_list_add) 190.46 589.91 T
(db_list_remove) 190.46 578.34 T
(list_add) 204.21 561.43 T
(list_remove) 204.21 552.52 T
(db_get_context) 459.5 493.51 T
(db_save_context) 459.5 483.7 T
(db_delete_context) 459.5 472.4 T
9 F
(db_contexth_t) 331.73 466.44 T
6 F
(*db_handle) 331.73 455.86 T
(list_type) 331.73 445.29 T
(*lp) 331.73 434.72 T
(pass) 331.73 424.14 T
(epdb_init) 159.5 693.17 T
(epdb_inq_handle) 428.17 693.03 T
(epdb_handle_from_ohandle) 428.17 683.72 T
(epdb_fwd) 460.17 421.83 T
(epdb_map) 460.17 412.52 T
(epdb_inq_object) 428.17 673.88 T
(epdb_recreate_lists) 172.17 654.45 T
(lookup) 460.17 432.14 T
(lookup_match) 460.17 442.84 T
(map) 460.17 402.86 T
(map_match) 460.17 394.22 T
472.08 540.25 526.08 581.25 R
7 X
V
0 X
N
9 F
(ept_entry_t) 474.58 572.42 T
6 F
(object) 474.58 563.11 T
(tower) 474.58 553.8 T
(annotation) 474.58 544.5 T
304.67 629.83 359.17 702.83 R
7 X
V
0 X
N
9 F
(db) 308 694.79 T
6 F
(dsh) 308 686.2 T
(object) 308 677.61 T
(lists_mgmt) 308 669.02 T
(lock) 308 660.43 T
(sliv_task1_h) 308 651.85 T
(sliv_task2_h) 308 643.26 T
(sliv_task2_cv) 308 634.67 T
201.83 545 253.83 571.5 R
8 X
N
186.33 540.5 259.83 624 R
N
176.83 534.83 264.33 650.83 R
N
227.79 512.69 223.33 508.67 222.08 514.54 3 L
0 X
N
230 529.33 223.41 508.9 2 L
2 Z
N
457.33 466.67 529.33 503.33 R
0 Z
8 X
N
455.33 388.67 518.67 450 R
N
422 667.33 533.33 700 R
N
297.47 698.33 302.67 695.33 297.47 692.33 3 L
0 X
N
198.67 695.33 302.42 695.33 2 L
2 Z
N
361.86 688.33 356.67 691.33 361.86 694.33 3 L
0 Z
N
422.67 691.33 356.92 691.33 2 L
2 Z
N
446.53 561 441.33 564 446.53 567 3 L
0 Z
N
472 564 441.58 564 2 L
2 Z
N
392.53 444.33 387.33 447.33 392.53 450.33 3 L
0 Z
N
455.33 426.67 403.33 426.67 426.67 447.33 387.58 447.33 4 L
2 Z
N
389.86 461 384.67 464 389.86 467 3 L
0 Z
N
458 488 408.67 488 430 464 384.92 464 4 L
2 Z
N
234.71 637.34 231.87 642.63 237.87 642.45 3 L
0 Z
N
303.33 598.87 231.88 642.62 2 L
N
346.2 669.86 373.13 669.86 2 L
N
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "9" 86
%%Page: "10" 86
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-10) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
5 11 Q
(db_open) 108 496.5 T
2 12 Q
(opens the endpoint database and does database version checking) 180 496.5 T
5 11 Q
(db_update_entry) 108 477.67 T
2 12 Q
(calls the dsm library to updates a record in stable \050disk\051 storage.) 180 465 T
5 11 Q
(db_init_lists) 108 446.17 T
2 12 Q
(initializes the forward and back pointers to the hashed object and) 180 433.5 T
(interface tables, and to the entry list. Backward pointers are initial-) 180 420 T
(ized to point to the last entry) 180 406.5 T
(. Forward pointers are initialized to) 316.47 406.5 T
(NULL. This function also computes the of) 180 393 T
(fset used to determine) 383.98 393 T
(the beginning of the list.) 180 379.5 T
5 11 Q
(db_htable_add) 108 360.67 T
2 12 Q
-0.23 (adds an entry to the uuid-hashed list. This and all other hashing rou-) 180 348 P
-0.21 (tines call uuid_hash to compute the entry\325) 180 334.5 P
-0.21 (s hash bucket. Hash buck-) 379.27 334.5 P
-0.37 (ets are mildly coerced to \336t into the maximum number of hash table) 180 321 P
(entries.) 180 307.5 T
5 11 Q
(db_htable_remove) 108 288.67 T
2 12 Q
(deletes an entry from the uuid-hashed list) 180 276 T
5 11 Q
(db_lists_add) 108 257.17 T
(, db_lists_remove) 187.1 257.17 T
2 12 Q
(adds/removes an entry to/from all three \050entry) 180 244.5 T
(, interface, object\051) 399.72 244.5 T
(lists) 180 231 T
5 11 Q
(db_list_add, db_list_remove,) 108 212.17 T
2 12 Q
(lower -level functions called by) 180 199.5 T
5 11 Q
(db_lists_add) 334.88 199.5 T
2 12 Q
( and) 413.98 199.5 T
5 11 Q
(db_lists_remove) 180 186 T
2 12 Q
(to operate on individual lists.) 285.47 186 T
5 11 Q
(list_add) 108 166.5 T
2 12 Q
(the \322add\323 primitive) 180 166.5 T
5 11 Q
(list_remove) 108 147.67 T
2 12 Q
(the \322remove\323 primitive) 180 135 T
5 11 Q
(db_list_f) 108 116.17 T
(irst) 167.33 116.17 T
2 12 Q
-0.19 (returns a pointer to the \336rst list element for the speci\336ed type of list.) 180 103.5 P
4 F
(T) 222.99 694 T
(able 5-5: db_contexth_t structur) 228.56 694 T
(e) 383.68 694 T
7 11 Q
(db_contexth_t {) 110 672.67 T
5 F
(*db_handle) 110 653.67 T
(/* opaque pointer to the database we\325re) 218 653.67 T
(using */) 218 640.67 T
(list_type) 110 621.67 T
(/* type of list \050entry, object, interface\051) 218 621.67 T
(we\325re traversing */) 218 608.67 T
(*lp) 110 589.67 T
(/*list element to which we were last point-) 218 589.67 T
(ing */) 218 576.67 T
(pass) 110 557.67 T
(/* traversal pass \050set by db_list_f) 218 557.67 T
(irst/) 448.71 557.67 T
(next operations */) 218 544.67 T
7 F
(}) 110 525.67 T
106.75 685 106.75 517 2 L
V
0.5 H
0 Z
N
109.25 682.5 109.25 519.5 2 L
V
N
214.75 664.75 214.75 537.25 2 L
V
N
217.25 664.75 217.25 537.25 2 L
V
N
502.75 682.5 502.75 519.5 2 L
V
N
505.25 685 505.25 517 2 L
V
N
106.5 685.25 505.5 685.25 2 L
V
N
109 682.75 503 682.75 2 L
V
N
109.5 665 502.5 665 2 L
V
N
109.5 633 502.5 633 2 L
V
N
109.5 601 502.5 601 2 L
V
N
109.5 569 502.5 569 2 L
V
N
109.5 537 502.5 537 2 L
V
N
109 519.25 503 519.25 2 L
V
N
106.5 516.75 505.5 516.75 2 L
V
N
FMENDPAGE
%%EndPage: "10" 87
%%Page: "11" 87
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-11) 518.02 34.67 T
5 11 Q
(db_list_next) 144 712.67 T
2 12 Q
(returns a pointer to the element following the speci\336ed element on) 216 700 T
(the speci\336ed list. List traversal proceeds as:) 216 686.5 T
7 11 Q
(while) 234 667.67 T
5 F
( \050entry != NULL\051 {) 266.96 667.67 T
(entry=db_list_next\050list\051) 252 655.67 T
(}) 234 643.67 T
(db_get_context, db_save_context, db_delete_context) 144 619.67 T
2 12 Q
(gets/saves/deletes an entrypoint database lookup context handle) 216 607 T
5 11 Q
(db_bad_context, db_different_context) 144 588.17 T
2 12 Q
(These routines are used to validate context handles before using) 216 575.5 T
(them to continue an endpoint database lookup operation.) 216 562 T
5 11 Q
(db_lock, db_unlock) 144 543.17 T
2 12 Q
(mutex locks/unlocks the endpoint database handle) 216 530.5 T
5 11 Q
(db_to_ept_ecode) 144 511.67 T
2 12 Q
(maps primitive \050dsm\051 error codes to DCE error statuses.) 216 499 T
330.86 478.19 144 478.19 2 L
V
0.59 H
0 Z
N
(Endpoint Database Internal Operations) 144 479.5 T
(Operations speci\336c to the endpoint database \050as opposed to the NCS 1.5.1 local) 144 459.5 T
-0.44 (location broker database, which the) 144 446 P
0 F
-0.44 (rpcd) 315 446 P
2 F
-0.44 ( also supports\051 are implemented in the \336le) 338.98 446 P
5 11 Q
(rpcdepdb.c.) 144 432.5 T
2 12 Q
(Nearly all the operations in this facility reference, either directly or through an) 144 413 T
(opaque) 144 399.5 T
5 11 Q
(epdb_handle_t) 181.63 399.5 T
2 12 Q
( pointer type, the endpoint database handle structure.) 267.33 399.5 T
(illustrated in T) 144 386 T
(able 5-6.) 213.79 386 T
(Brief descriptions of the more important endpoint database routines follow:) 144 100.5 T
5 11 Q
(epdb_init) 144 81 T
2 12 Q
-0.55 (This function calls) 216 81 P
5 11 Q
-1.2 (db_open) 306.64 81 P
2 12 Q
-0.55 (,) 352.79 81 P
5 11 Q
-1.2 (db_init_lists) 358.24 81 P
2 12 Q
-0.55 (, and other database) 443.93 81 P
4 F
(T) 286.97 368 T
(able 5-6: db structur) 292.54 368 T
(e) 391.7 368 T
7 11 Q
(db {) 146 346.67 T
5 F
(dsh) 146 327.67 T
(/* dsm database handle type */) 254 327.67 T
(object) 146 308.67 T
(/* object UUID of this database object */) 254 308.67 T
(lists_mgmt) 146 289.67 T
(/* the entry list and \050hashed\051 object and) 254 289.67 T
(interface UUID lists */) 254 276.67 T
(lock) 146 257.67 T
(/* the mutex lock for this database */) 254 257.67 T
(sliv_task1_h) 146 238.67 T
(/* thread handle to server liveness task 1) 254 238.67 T
(*/) 254 225.67 T
(sliv_task2_h) 146 206.67 T
(/* thread handle to server liveness task 2) 254 206.67 T
(*/) 254 193.67 T
(sliv_task_2_cv) 146 174.67 T
-1.01 (/* server liveness task condition variable,) 254 174.67 P
(used to communicate between the two server) 254 161.67 T
(liveness tasks */) 254 148.67 T
7 F
(}) 146 129.67 T
142.75 359 142.75 121 2 L
V
0.5 H
N
145.25 356.5 145.25 123.5 2 L
V
N
250.75 338.75 250.75 141.25 2 L
V
N
253.25 338.75 253.25 141.25 2 L
V
N
538.75 356.5 538.75 123.5 2 L
V
N
541.25 359 541.25 121 2 L
V
N
142.5 359.25 541.5 359.25 2 L
V
N
145 356.75 539 356.75 2 L
V
N
145.5 339 538.5 339 2 L
V
N
145.5 320 538.5 320 2 L
V
N
145.5 301 538.5 301 2 L
V
N
145.5 269 538.5 269 2 L
V
N
145.5 250 538.5 250 2 L
V
N
145.5 218 538.5 218 2 L
V
N
145.5 186 538.5 186 2 L
V
N
145.5 141 538.5 141 2 L
V
N
145 123.25 539 123.25 2 L
V
N
142.5 120.75 541.5 120.75 2 L
V
N
FMENDPAGE
%%EndPage: "11" 88
%%Page: "12" 88
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-12) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(management operations to set up the in-memory representation of) 180 712 T
-0.38 (the endpoint database. It initializes the database\325) 180 698.5 P
-0.38 (s mutex lock, starts) 409.9 698.5 P
(the server liveness tasks, and returns the database handle that oper-) 180 685 T
(ations on the database will reference.) 180 671.5 T
5 11 Q
(epdb_inq_handle) 108 652.67 T
2 12 Q
(returns the handle of the local endpoint database) 180 640 T
5 11 Q
(epdb_handle_from_ohandle) 108 621.17 T
2 12 Q
(returns the handle of the local or a remote endpoint database) 180 608.5 T
5 11 Q
(epdb_insert) 108 589.67 T
2 12 Q
(This function is terminal node of the \322insert\323 path. It lies between) 180 577 T
5 11 Q
(ept_insert) 180 563.5 T
2 12 Q
( and the various tower and naf routines that validate) 245.92 563.5 T
(the tower to be inserted. It locks the database, then, calls the appro-) 180 550 T
(priate replace or delete functions described below) 180 536.5 T
(.) 417.68 536.5 T
5 11 Q
(epdb_delete) 108 517.67 T
2 12 Q
(This is the terminal node of the \322delete\323 path. It deletes an entry if) 180 505 T
(its) 180 491.5 T
5 11 Q
(read_nrefs) 194.33 491.5 T
2 12 Q
( \337ag has dropped to zero, otherwise, marks it for) 260.25 491.5 T
(deletion by setting its) 180 478 T
5 11 Q
(delete_f) 285.95 478 T
(lag) 338.68 478 T
2 12 Q
( to true.) 358.46 478 T
5 11 Q
(epdb_mgmt_delete) 108 459.17 T
2 12 Q
(Since every server exports the management interface, deletion of) 180 446.5 T
(these endpoints must proceed a little dif) 180 433 T
(ferently) 370.99 433 T
(. This function gets) 407.52 433 T
(the object and interface from the supplied tower) 180 419.5 T
(, then calls) 409.67 419.5 T
5 11 Q
(epdb_delete_entries_by_obj_if_addr) 180 406 T
2 12 Q
(to delete manager) 410.71 406 T
(interface entries corresponding to that binding handle.) 180 392.5 T
5 11 Q
(epdb_lookup) 108 373.67 T
2 12 Q
-0.17 (just a wrapper for lookup that locks the database, then performs the) 180 361 P
(speci\336ed type \050object or interface\051 of lookup.) 180 347.5 T
5 11 Q
(epdb_fwd) 108 328 T
2 12 Q
(calls) 180 328 T
5 11 Q
(map) 204.98 328 T
2 12 Q
( or) 224.76 328 T
5 11 Q
(map_mgmt) 240.74 328 T
2 12 Q
( \050depending on the interface type\051 to build) 293.48 328 T
(an array of forwarding addresses for use by the) 180 314.5 T
0 F
(rpcd) 408.8 314.5 T
2 F
(\325) 432.79 314.5 T
(s forwarding) 436.12 314.5 T
(function.) 180 301 T
5 11 Q
(epdb_inq_object) 108 282.17 T
2 12 Q
(This function returns the object UUID for a given endpoint data-) 180 269.5 T
(base object \050returns the value in the) 180 256 T
5 11 Q
(object) 353.53 256 T
2 12 Q
( \336eld of the) 393.08 256 T
5 11 Q
(epdb_handle) 180 242.5 T
2 12 Q
(\051.) 252.51 242.5 T
5 11 Q
(epdb_delete_lookup_handle) 108 223.67 T
2 12 Q
(deletes the lookup context handle) 180 211 T
5 11 Q
(epdb_recreate_lists) 108 192.17 T
2 12 Q
(recreates the entry) 180 179.5 T
(, interface, and object lists at rpcd startup time) 267.13 179.5 T
(from stably-stored data.) 180 166 T
5 11 Q
(epdb_chk_entry) 108 147.17 T
2 12 Q
(rejects any) 180 134.5 T
5 11 Q
(ept_entry_t) 234.62 134.5 T
2 12 Q
( with a nil interface UUID. If the entry) 307.13 134.5 T
(passes this simple validation,) 180 121 T
5 11 Q
(epdb_chk_entry) 322.92 121 T
2 12 Q
( also makes sure) 415.21 121 T
-0.54 (that) 180 107.5 P
5 11 Q
-1.2 (rpc_tower_to_binding) 200.45 107.5 P
2 12 Q
-0.54 ( can be called successfully on tower) 332.28 107.5 P
(referenced by the) 180 94 T
5 11 Q
(ept_entry_t) 266.24 94 T
2 12 Q
(\325) 338.75 94 T
(s) 342.09 94 T
5 11 Q
(tower) 349.75 94 T
2 12 Q
( \336eld.) 382.71 94 T
FMENDPAGE
%%EndPage: "12" 89
%%Page: "13" 89
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-13) 518.02 34.67 T
5 11 Q
(epdb_chk_map_entry) 144 712.67 T
2 12 Q
(similar to) 216 700 T
5 11 Q
(epdb_chk_entry) 264.64 700 T
2 12 Q
(, but does not call) 356.15 700 T
5 11 Q
-0.01 (rpc_tower_to_binding) 216 686.5 P
2 12 Q
0 ( and does add an additional test that the) 347.84 686.5 P
(protocol sequence in the tower is supported on the host.) 216 673 T
5 11 Q
(epdb_to_ept) 144 654.17 T
2 12 Q
(converts an endpoint database entry to an) 216 641.5 T
5 11 Q
(ept_entry_t) 417.51 641.5 T
2 12 Q
( \050wire rep) 490.02 641.5 T
(of an entry\051) 216 628 T
5 11 Q
(epdb_insert_entry) 144 609.17 T
2 12 Q
(writes an entry into the stable store, then calls) 216 596.5 T
5 11 Q
(db_lists_add) 438.51 596.5 T
2 12 Q
( to) 517.61 596.5 T
(add it to the endpoint mapper) 216 583 T
(\325) 357.35 583 T
(s list structures.) 360.69 583 T
5 11 Q
(epdb_replace_entry) 144 564.17 T
2 12 Q
(This is the low-level replace function that actually modi\336es a data-) 216 551.5 T
(base entry) 216 538 T
(.) 264.18 538 T
5 11 Q
(epdb_is_replace_candidate) 144 519.17 T
2 12 Q
-0.5 (called during) 216 506.5 P
5 11 Q
-1.09 (epdb_replace_entry) 280.96 506.5 P
2 12 Q
-0.5 ( to compare object, interface,) 399.61 506.5 P
(protseq, data transfer syntax, and protocol.) 216 493 T
5 11 Q
(epdb_delete_replaceable_entries) 144 474.17 T
2 12 Q
(This is the beginning of the \322replace\323 path. It \336rst determines can-) 216 461.5 T
(didacy by calling) 216 448 T
5 11 Q
(epdb_is_replace_candidate) 301.61 448 T
2 12 Q
(. Successful) 466.4 448 T
(candidates are tested by matching their addr and vers_minor \336elds) 216 434.5 T
(against the tar) 216 421 T
(get entry) 283.07 421 T
(.) 324.59 421 T
5 11 Q
(epdb_delete_entries_by_obj_if_addr) 144 402.17 T
2 12 Q
-0.28 (This function is used to delete management interface entries, which) 216 389.5 P
(all servers export, from the endpoint database.) 216 376 T
5 11 Q
(epdb_lookup_entry) 144 357.17 T
2 12 Q
(This function is called by) 216 344.5 T
5 11 Q
(epdb_insert) 340.92 344.5 T
2 12 Q
( and) 413.43 344.5 T
5 11 Q
(epdb_delete) 436.75 344.5 T
2 12 Q
( to) 509.26 344.5 T
(return an entry to match) 216 331 T
5 11 Q
(lookup) 144 311.5 T
2 12 Q
(This primitive gets a lookup context \050establishes one if necessary\051,) 216 311.5 T
(then hands of) 216 298 T
(f the actual looking up to) 280.4 298 T
5 11 Q
(lookup_match) 403.66 298 T
2 12 Q
(.) 482.76 298 T
5 11 Q
(lookup_match) 144 279.17 T
2 12 Q
(This is the real lookup function. It \336rst matches by object UUID,) 216 266.5 T
(interface UUID, or both \050match by entry always returns true\051, then) 216 253 T
-0.01 (proceeds to match the interface version according to one of the ver-) 216 239.5 P
(sion matching options described in the AES. These can be summa-) 216 226 T
(rized as returning true for the following match types when we\325re) 216 212.5 T
(matching a candidate) 216 199 T
5 11 Q
(if) 320.92 199 T
2 12 Q
(against an entry) 340.69 199 T
5 11 Q
(entp) 419.63 199 T
2 12 Q
(.) 446 199 T
FMENDPAGE
%%EndPage: "13" 90
%%Page: "14" 90
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-14) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
5 11 Q
(compatible:) 180 712.67 T
(if->vers_major == entp->vers_major &&) 216 700.67 T
(if->vers_minor >= entp->vers_minor) 216 688.67 T
(exact:) 180 664.67 T
(if->vers_major == entp->vers_major &&) 216 652.67 T
(if->vers_minor == entp->vers_minor) 216 640.67 T
(major_only:) 180 616.67 T
(if->vers_major == entp->vers_major) 216 604.67 T
(upto:) 180 580.67 T
(if->vers_major > entp->vers_major ||) 216 568.67 T
(\050) 216 556.67 T
(if->vers_major == entp->vers_minor &&) 234 556.67 T
(if->vers_minor >= entp->vers_minor) 234 544.67 T
(\051) 216 532.67 T
(epdb_map) 108 508 T
2 12 Q
(This is the highest-level endpoint mapping function. It invokes) 180 508 T
-0.01 (either map or map_mgmt, depending on whether the interface spec) 180 494.5 P
(to be mapped is the management interface \050which all RPC servers) 180 481 T
-0.14 (export\051, which in turn invoke the appropriate \337avor of \322match\323 rou-) 180 467.5 P
(tine below) 180 454 T
(.) 229.52 454 T
5 11 Q
(map, map_mgmt) 108 435.17 T
2 12 Q
(These functions implement the mapping rules illustrated in Figure) 180 422.5 T
(5-8. Mapping can be done in one or two passes \050hence the) 180 409 T
5 11 Q
(pass) 461.45 409 T
2 12 Q
(\336eld of the) 180 395.5 T
5 11 Q
(db_contexth_t) 234.97 395.5 T
2 12 Q
(\050T) 327.25 395.5 T
(able 5-5\051\051. If there is a non-nil) 337.73 395.5 T
-0.12 (object UUID to match against, then pass one does the object UUID) 180 382 P
(matching. Otherwise, we go directly to pass two and match the) 180 368.5 T
(interface UUID.) 180 355 T
5 11 Q
(map_match, map_mgmt_match) 108 336.17 T
2 12 Q
-0.24 (These functions take care of mapping the object, interface, data rep-) 180 323.5 P
-0.01 (resentation, protocol version, and protocol sequence \336elds of a can-) 180 310 P
(didate tower and an endpoint database entry) 180 296.5 T
(.) 390.39 296.5 T
5 11 Q
(map_mgmt_endpt_unique) 108 277.67 T
2 12 Q
(This simple function called by) 180 265 T
5 11 Q
(map_mgmt) 328.91 265 T
2 12 Q
( scans a list of mapped) 381.64 265 T
(entries looking for a speci\336c endpoint. Since all servers export the) 180 251.5 T
-0.06 (management interface, they can only be dif) 180 238 P
-0.06 (ferentiated by endpoint,) 386.93 238 P
-0.09 (and this routine takes care of preventing duplicate entries in lists of) 180 224.5 P
(management interface endpoints.) 180 211 T
239.14 180.78 72 180.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(Common Endpoint Services) 72 182.17 T
2 12 Q
(The common endpoint services, implemented in) 108 161.5 T
5 11 Q
(comep.c) 342.18 161.5 T
2 12 Q
(, provide:) 388.33 161.5 T
(\245) 108 142 T
(public interfaces to the endpoint mapper) 126 142 T
(\325) 319.97 142 T
(s registration, unregistration, and) 323.3 142 T
(lookup functions) 126 128.5 T
(\245) 108 109 T
(private routines that support the public interfaces) 126 109 T
(\245) 108 89.5 T
-0.07 (management routines used by applications such as) 126 89.5 P
0 F
-0.07 (rpccp) 370.36 89.5 P
2 F
-0.07 ( to examine and mod-) 399.67 89.5 P
(ify the endpoint database.) 126 76 T
FMENDPAGE
%%EndPage: "14" 91
%%Page: "15" 91
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-15) 518.02 34.67 T
2 F
(For the most part, these common routines operate by invoking remote operations) 144 712 T
(on the endpoint mapper) 144 698.5 T
(\325) 258.03 698.5 T
(s manager epv) 261.37 698.5 T
(, which in turn is the principal caller of the) 329.86 698.5 T
(database management, lookup, and mapping routines described in earlier sections) 144 685 T
(of this chapter) 144 671.5 T
(.) 211.96 671.5 T
0 F
(Registering Endpoint Entries) 108 652 T
2 F
-0.28 (Servers call one of the common endpoint services\325 endpoint registration functions,) 144 632 P
5 11 Q
(rpc_ep_register) 144 618.5 T
2 12 Q
( and) 242.88 618.5 T
5 11 Q
(rpc_ep_register_no_replace) 266.19 618.5 T
2 12 Q
(, with a vector of) 437.58 618.5 T
(binding handles and, optionally) 144 605 T
(, of object UUIDs that they wish to register in the) 294.47 605 T
(endpoint database. The actual server registration in the database typically consists) 144 591.5 T
(of multiple database entries constructed from the cross product of these vectors,) 144 578 T
(with the object/interface UUIDs applied to each entry) 144 564.5 T
(.) 400.68 564.5 T
4 F
(Figur) 232.79 545 T
(e 5-5: Composing a Server Registration) 259.67 545 T
2 F
(As we illustrate in Figure 5-5, this process consists of a server) 144 195.5 T
(-side operation,) 441.56 195.5 T
5 11 Q
(ep_register) 144 182 T
2 12 Q
(, that composes an) 216.03 182 T
5 11 Q
( ept_entry_t) 304.64 182 T
2 12 Q
( structure for each combination) 383.74 182 T
(of server interface/object pairs using the logic described in Figure 5-6. Each com-) 144 168.5 T
(posed entry is supplied as an ar) 144 155 T
(gument to the endpoint mapper) 293.68 155 T
(\325) 444.03 155 T
(s remote \322insert\323) 447.36 155 T
(primitive, which takes care of invoking the operations that the) 144 141.5 T
0 F
(rpcd) 444.8 141.5 T
2 F
( uses to actu-) 468.78 141.5 T
(ally create a database entry from an) 144 128 T
5 11 Q
(ept_entry_t) 317.51 128 T
2 12 Q
(.) 390.02 128 T
144 217 540 541 C
471.16 189.1 549.16 274.1 R
7 X
0 K
V
0.5 H
0 Z
0 X
N
6 8 Q
(db_entry_t) 473.61 265.58 T
(object) 474.61 237.72 T
(interface) 474.94 228.1 T
3 F
(\267) 478.61 218.63 T
(\267) 478.61 213.39 T
(\267) 478.11 257.13 T
(\267) 478.11 251.89 T
(\267) 478.11 246.65 T
461.53 247.02 539.53 332.02 R
7 X
V
0 X
N
9 F
(db_entry_t) 463.98 323.5 T
6 F
(object) 464.98 295.64 T
(interface) 465.32 286.02 T
3 F
(\267) 468.98 276.55 T
(\267) 468.98 271.31 T
(\267) 468.98 266.07 T
6 F
(annotation) 464.48 259.31 T
(tower) 464.98 248.52 T
3 F
(\267) 468.48 315.05 T
(\267) 468.48 309.81 T
(\267) 468.48 304.57 T
448.33 305.66 526.33 390.66 R
7 X
V
0 X
N
9 F
(db_entry_t) 450.78 382.13 T
6 F
(object) 451.78 354.28 T
(interface) 452.12 344.66 T
3 F
(\267) 455.78 335.18 T
(\267) 455.78 329.94 T
(\267) 455.78 324.7 T
6 F
(annotation) 451.28 317.95 T
(tower) 451.78 307.16 T
3 F
(\267) 455.28 373.68 T
(\267) 455.28 368.44 T
(\267) 455.28 363.2 T
435.13 363.58 513.13 448.58 R
7 X
V
0 X
N
9 F
(db_entry_t) 437.58 440.05 T
6 F
(object) 438.58 412.2 T
(interface) 438.92 402.58 T
3 F
(\267) 442.58 393.1 T
(\267) 442.58 387.86 T
(\267) 442.58 382.62 T
6 F
(annotation) 438.08 375.87 T
(tower) 438.58 365.08 T
3 F
(\267) 442.08 431.6 T
(\267) 442.08 426.36 T
(\267) 442.08 421.12 T
328.64 465.9 382.64 506.9 R
7 X
V
0 X
N
421.93 421.5 499.93 506.5 R
7 X
V
0 X
N
9 F
(db_entry_t) 424.38 497.97 T
6 F
(object) 425.38 470.12 T
(interface) 425.72 460.5 T
3 F
(\267) 429.38 451.02 T
(\267) 429.38 445.78 T
(\267) 429.38 440.54 T
6 F
(annotation) 424.88 433.79 T
(tower) 425.38 423 T
156 464.9 254.68 476.9 R
7 X
V
0 X
N
156 452.9 254.68 464.9 R
7 X
V
0 X
N
156 440.9 254.68 452.9 R
7 X
V
0 X
N
156 428.9 254.68 440.9 R
7 X
V
0 X
N
(if UUID/version) 160.83 468.16 T
(xfer syntax UUID) 161 455.32 T
(protocol) 170.42 444.04 T
(address) 170.52 431.72 T
9 F
(ept_entry_t) 331.14 498.07 T
6 F
(object) 331.14 488.77 T
(tower) 331.14 479.46 T
(annotation) 331.14 470.15 T
9 F
(tower_t) 190.5 480.9 T
6 F
(=ABC/1.1) 219.44 467.64 T
8 F
(BINDING VECT) 172.5 493.87 T
(OR) 229.22 493.87 T
(OBJECT VECT) 174.67 271.78 T
(OR) 229.61 271.78 T
6 F
(UUID=UVW) 180.33 256.11 T
(UUID=XYZ) 179.83 246.12 T
156 398.22 254.68 410.22 R
7 X
V
0 X
N
156 386.22 254.68 398.22 R
7 X
V
0 X
N
156 374.22 254.68 386.22 R
7 X
V
0 X
N
156 362.22 254.68 374.22 R
7 X
V
0 X
N
(if UUID/version) 160.83 401.48 T
(xfer syntax UUID) 161 388.64 T
(protocol) 170.42 377.36 T
(address) 170.52 365.04 T
9 F
(tower_t) 190.5 414.22 T
156 331.54 254.68 343.54 R
7 X
V
0 X
N
156 319.54 254.68 331.54 R
7 X
V
0 X
N
156 307.54 254.68 319.54 R
7 X
V
0 X
N
156 295.54 254.68 307.54 R
7 X
V
0 X
N
6 F
(if UUID/version) 160.83 334.79 T
(xfer syntax UUID) 161 321.95 T
(protocol) 170.42 310.67 T
(address) 170.52 298.36 T
9 F
(tower_t) 190.5 347.54 T
6 F
(=DEF/1.1) 217.5 401.6 T
(=GHI/1.2) 218 334.29 T
152.17 289.57 257.67 503.57 R
8 X
N
151.5 240.4 258 285.9 R
N
328.64 417.7 382.64 458.7 R
7 X
V
0 X
N
9 F
(ept_entry_t) 331.14 449.87 T
6 F
(object) 331.14 440.57 T
(tower) 331.14 431.26 T
(annotation) 331.14 421.95 T
328.64 369.51 382.64 410.51 R
7 X
V
0 X
N
9 F
(ept_entry_t) 331.14 401.67 T
6 F
(object) 331.14 392.36 T
(tower) 331.14 383.06 T
(annotation) 331.14 373.75 T
328.64 321.3 382.64 362.3 R
7 X
V
0 X
N
9 F
(ept_entry_t) 331.14 353.47 T
6 F
(object) 331.14 344.17 T
(tower) 331.14 334.86 T
(annotation) 331.14 325.55 T
328.64 273.11 382.64 314.11 R
7 X
V
0 X
N
9 F
(ept_entry_t) 331.14 305.27 T
6 F
(object) 331.14 295.96 T
(tower) 331.14 286.66 T
(annotation) 331.14 277.35 T
328.64 224.91 382.64 265.91 R
7 X
V
0 X
N
9 F
(ept_entry_t) 331.14 257.07 T
6 F
(object) 331.14 247.77 T
(tower) 331.14 238.46 T
(annotation) 331.14 229.15 T
3 F
(\267) 428.88 489.52 T
(\267) 428.88 484.28 T
(\267) 428.88 479.04 T
6 F
(annotation=[brief description]) 152 228.22 T
8 F
(Server Registration Information) 151 522.52 T
6 F
(ep_register) 277.25 522.52 T
(ept_insert) 400.5 522.52 T
8 F
(on the wire) 336.11 522.52 T
(in the epdb) 463.25 522.52 T
6 F
(=ABC/1.1) 457.8 461.25 T
(=ABC/1.1) 471.15 403.42 T
(=DEF/1.1) 485.32 344.85 T
(=DEF/1.1) 498.68 286.49 T
(=GHI/1.2) 507.79 228.26 T
(UUID=UVW) 450.3 470.97 T
(UUID=UVW) 478.66 354.76 T
(UUID=UVW) 498.33 238.11 T
(UUID=XYZ) 490.51 295.97 T
(UUID=XYZ) 463.66 412.83 T
(=[brief de) 465.72 435.04 T
(=[brief de) 478.72 377.22 T
(=[brief de) 491.89 318.86 T
303.22 530.45 303.22 537.96 324.76 522.93 303.22 507.9 303.22 515.41 5 L
0.2 H
2 Z
N
303.22 530.45 272.45 530.45 272.45 515.41 303.22 515.41 4 L
N
426.4 530.84 426.4 538.35 447.94 523.32 426.4 508.29 426.4 515.81 5 L
N
426.4 530.84 395.63 530.84 395.63 515.81 426.4 515.81 4 L
N
0 0 612 792 C
144 217 540 541 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "15" 92
%%Page: "16" 92
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-16) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 218.34 712 T
(e 5-6: ept_r) 245.22 712 T
(egister pseudocode) 301.39 712 T
7 11 Q
(while) 108 687.17 T
5 F
( \050the binding vector is non-NULL\051 {) 140.96 687.17 T
(allocate an ept_entry_t) 126 675.17 T
(ept_entry->annotation=[annotation string]) 126 663.17 T
7 F
(if) 126 651.17 T
5 F
( \050the object UUID vector is NULL\051 {) 139.18 651.17 T
7 F
(for) 144 639.17 T
5 F
( \050each binding in the vector\051 {) 163.77 639.17 T
(ept_entry->object = nil_uuid) 162 627.17 T
(ept_entry->tower = binding) 162 615.17 T
(ept_insert\050,,ept_entry,\051) 162 603.17 T
(}) 144 591.17 T
(}) 126 579.17 T
7 F
(else) 126 567.17 T
(for) 144 555.17 T
5 F
( \050each object UUID in the vector\051 {) 163.77 555.17 T
7 F
(for) 162 543.17 T
5 F
( \050each binding in the vector\051 {) 181.77 543.17 T
(ept_entry->object = object_uuid) 180 531.17 T
(ept_entry->tower = binding) 180 519.17 T
(ept_insert\050,,ept_entry,\051) 180 507.17 T
(}) 162 495.17 T
(}) 144 483.17 T
(}) 126 471.17 T
(}) 108 459.17 T
2 12 Q
-0.31 (Registration operations include a \322replace\323 \337ag that speci\336es whether or not a new) 108 434.5 P
(registration should replace a matching registration already in the endpoint data-) 108 421 T
(base. There is a good deal of logic associated with determining whether or not a) 108 407.5 T
(candidate) 108 394 T
5 11 Q
(ept_entry_t) 156.96 394 T
2 12 Q
( matches an existing) 229.47 394 T
5 11 Q
(db_entry_t) 330.07 394 T
2 12 Q
(, which we try to sum-) 395.99 394 T
(marize in Figure 5-8.) 108 380.5 T
(Notwithstanding all of the code \050in) 108 361 T
5 11 Q
(rpcdepdb.c) 278.56 361 T
2 12 Q
(\051 involved in the replace/no_re-) 344.48 361 T
(place decision, the rules that govern this choice can be stated simply as:) 108 347.5 T
(\245) 108 328 T
(If the registration speci\336es \322replace,\323 then the candidate) 126 328 T
5 11 Q
(ept_entry_t) 398.11 328 T
2 12 Q
( and) 470.62 328 T
(the tar) 126 314.5 T
(get) 156.09 314.5 T
5 11 Q
(db_entry_t) 173.75 314.5 T
2 12 Q
( must match in all \336elds except the) 239.66 314.5 T
5 11 Q
(annotation) 409.56 314.5 T
2 12 Q
( and) 475.48 314.5 T
-0.17 (network address \050) 126 301 P
5 11 Q
-0.38 (db_entry->addr) 210.91 301 P
2 12 Q
-0.17 (\051 for replacement \321 which involves noth-) 303.2 301 P
(ing more complicated than changing the) 126 287.5 T
5 11 Q
(epdb_entry_t) 321.86 287.5 T
2 12 Q
(\325) 400.97 287.5 T
(s annotation \336eld) 404.3 287.5 T
(and resetting the) 126 274 T
5 11 Q
(ncomm_fails) 208.27 274 T
2 12 Q
( and) 280.79 274 T
5 11 Q
(delete_f) 304.1 274 T
(lag) 356.83 274 T
2 12 Q
( \336elds.) 376.61 274 T
(\245) 108 254.5 T
(If the registration speci\336es \322no_replace,\323 then the) 126 254.5 T
5 11 Q
(ept_entry_t) 367.14 254.5 T
2 12 Q
( is simply) 439.65 254.5 T
(rendered into a) 126 241 T
5 11 Q
(db_entry_t) 200.93 241 T
2 12 Q
(and added to the endpoint database.) 273.45 241 T
FMENDPAGE
%%EndPage: "16" 93
%%Page: "17" 93
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-17) 518.02 34.67 T
(Figur) 219.14 712 T
(e 5-7: Endpoint Database Entry Replacement) 246.02 712 T
0 F
(Finding Matching Entries) 108 386.07 T
2 F
(Although the connectionless and connection-oriented RPC protocols make dif) 144 366.07 T
(fer-) 518.21 366.07 T
-0.16 (ent use of the entry lookup services supplied by the endpoint mapper) 144 352.57 P
-0.16 (, the mapping) 471.86 352.57 P
(rules and the operations that implement them are the same in both cases.) 144 339.07 T
(Connection oriented clients call) 144 319.57 T
5 11 Q
(rpc_ep_resolve_binding) 299.23 319.57 T
2 12 Q
( with an interface) 444.25 319.57 T
(UUID and an object UUID \050which may be nil\051. Using this information, the) 144 306.07 T
0 F
(rpcd) 506.08 306.07 T
2 F
(on the host speci\336ed in the input handle examines the endpoint database, looking) 144 292.57 T
(for a compatible server instance. The input handle to) 144 279.07 T
5 11 Q
-0.37 (rpc_ep_resolve_binding) 144 265.57 P
2 12 Q
-0.17 ( may be partially or fully bound. In the normal case,) 289.02 265.57 P
(a client requesting resolution of a partially bound handle \050one in which) 144 252.07 T
5 11 Q
(addr_has_endpoint) 144 238.57 T
2 12 Q
( is false\051 will get back either a fully-bound handle if the) 256.06 238.57 T
-0.33 (endpoint mapper comes up with a match, or a status of) 144 225.07 P
5 11 Q
-0.73 (ept_s_not_registered) 405.5 225.07 P
2 12 Q
(if no compatible servers are registered. When a client inadvertently calls) 144 211.57 T
5 11 Q
(rpc_ep_resolve_binding) 144 198.07 T
2 12 Q
( with a fully-bound handle, the handle is simply) 289.02 198.07 T
(returned to the client without involving the) 144 184.57 T
0 F
(rpcd) 352.88 184.57 T
2 F
(. No checking is done to guard) 376.86 184.57 T
(against concurrent use of a binding handle \050e.g., by multiple threads\051.) 144 171.07 T
-0.04 (Connectionless RPC clients do not execute a speci\336c \322resolve binding\323 operation.) 144 151.57 P
(Instead, when confronted with a partially-bound handle, they call the) 144 138.07 T
0 F
(rpcd) 477.75 138.07 T
2 F
( on the) 501.74 138.07 T
-0.38 (host speci\336ed in the handle. The) 144 124.57 P
0 F
-0.38 (rpcd) 299.95 124.57 P
2 F
-0.38 ( then forwards the call to a compatible server) 323.93 124.57 P
(instance on that host if one exists. The client obtains the actual server endpoint) 144 111.07 T
(from the server) 144 97.57 T
(\325) 217.71 97.57 T
(s response.) 221.05 97.57 T
144 407.57 540 708 C
161.54 632.11 217.25 643.89 R
6 X
0 K
V
276.21 445.82 369.96 457.61 R
V
276.21 575.46 369.96 587.25 R
5 X
V
276.21 516.53 369.96 528.32 R
6 X
V
276.21 504.75 369.96 516.54 R
V
276.21 492.96 369.96 504.75 R
V
276.21 540.11 369.96 551.89 R
V
276.21 528.32 369.96 540.11 R
V
276.21 551.89 369.96 563.68 R
V
276.21 563.68 369.96 575.46 R
V
9 8 Q
0 X
(db_entry_t) 280.71 660.61 T
6 F
(lists) 280.71 648.78 T
(read_nrefs) 280.71 638.4 T
(ncomm_fails) 280.71 625.87 T
(delete_\337ag) 280.71 614.05 T
(object_nil) 280.71 602.95 T
(if_nil) 280.71 591.13 T
(object) 280.71 579.32 T
(interface) 280.71 567.5 T
(data_rep_id) 280.71 555.69 T
(data_rep_vers_major) 280.71 543.16 T
(data_rep_vers_minor) 280.71 531.34 T
(rpc_protocol) 280.71 519.53 T
(rpc_protocol_vers_major) 280.71 508.43 T
(rpc_protocol_vers_minor) 280.71 495.9 T
(type) 280.71 484.08 T
(llb_\337ags) 280.71 472.27 T
(saddr_len) 280.71 460.45 T
(addr) 280.71 448.64 T
(annotation) 280.71 437.53 T
(tower) 280.71 424.29 T
276.21 646.18 369.96 657.96 R
276.21 634.39 369.96 646.18 R
276.21 622.61 369.96 634.39 R
276.21 610.82 369.96 622.61 R
276.21 599.03 369.96 610.82 R
276.21 587.25 369.96 599.04 R
276.21 481.18 369.96 492.96 R
276.21 469.39 369.96 481.18 R
276.21 457.6 369.96 469.39 R
276.21 434.03 369.96 445.82 R
276.21 422.25 369.96 434.03 R
161.54 643.89 217.25 655.68 R
5 X
V
0 X
(annotation) 166.04 623.46 T
(tower) 166.57 635.22 T
161.54 618.71 217.25 632.11 R
(object) 165 646.68 T
9 F
(ept_entry_t) 162.86 660.61 T
273.39 419.39 370.68 670.79 R
0.5 H
0 Z
N
160.18 618.71 217.25 670.79 R
N
426.07 445.82 519.82 457.61 R
6 X
V
426.07 575.46 519.82 587.25 R
5 X
V
426.07 516.53 519.82 528.32 R
6 X
V
426.07 504.75 519.82 516.54 R
V
426.07 492.96 519.82 504.75 R
V
426.07 540.11 519.82 551.89 R
V
426.07 528.32 519.82 540.11 R
V
426.07 551.89 519.82 563.68 R
V
426.07 563.68 519.82 575.46 R
V
0 X
(db_entry_t) 430.57 660.61 T
6 F
(lists) 430.57 648.78 T
(read_nrefs) 430.57 638.4 T
(ncomm_fails) 430.57 625.87 T
(delete_\337ag) 430.57 614.05 T
(object_nil) 430.57 602.95 T
(if_nil) 430.57 591.13 T
(object) 430.57 579.32 T
(interface) 430.57 567.5 T
(data_rep_id) 430.57 555.69 T
(data_rep_vers_major) 430.57 543.16 T
(data_rep_vers_minor) 430.57 531.34 T
(rpc_protocol) 430.57 519.53 T
(rpc_protocol_vers_major) 430.57 508.43 T
(rpc_protocol_vers_minor) 430.57 495.9 T
(type) 430.57 484.08 T
(llb_\337ags) 430.57 472.27 T
(saddr_len) 430.57 460.45 T
(addr) 430.57 448.64 T
(annotation) 430.57 437.53 T
(tower) 430.57 424.29 T
426.07 646.18 519.82 657.96 R
426.07 634.39 519.82 646.18 R
426.07 622.61 519.82 634.39 R
426.07 610.82 519.82 622.61 R
426.07 599.03 519.82 610.82 R
426.07 587.25 519.82 599.04 R
426.07 481.18 519.82 492.96 R
426.07 469.39 519.82 481.18 R
426.07 457.6 519.82 469.39 R
426.07 434.03 519.82 445.82 R
426.07 422.25 519.82 434.03 R
423.25 419.39 520.54 670.79 R
N
8 F
(Candidate) 169.29 686.6 T
(T) 301.07 686.6 T
(arget Entry) 305.22 686.6 T
(Replacement) 454.29 686.6 T
6 F
(=n) 323.57 614.68 T
(=n) 328.57 626.26 T
(=0) 477.86 626.06 T
(=0) 475.18 614.61 T
(=[New Annotation]) 469.82 437.81 T
(=[Old Annotation]) 321.07 437.07 T
(=[New Annotation]) 204.79 623.02 T
8 F
(all shaded) 159.38 553.25 T
(\336elds must) 159.38 543.94 T
(match \050all) 159.38 534.64 T
(interface,) 159.38 525.33 T
(protocol,) 159.38 516.02 T
(xfer syntax) 159.38 506.71 T
(data is in) 159.38 497.41 T
(the tower\051) 159.38 488.1 T
0 0 612 792 C
144 407.57 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "17" 94
%%Page: "18" 94
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-18) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(Matching rules for determining interface compatibility are described in detail in) 108 712 T
(the AES, but can be summarized as shown in Figure 5-8. After all of the other) 108 698.5 T
-0.43 (\336elds have been matched, the endpoint mapper tries for an exact match of interface) 108 685 P
(and object UUIDs. If that fails, it will settle for an interface-only match with a nil) 108 671.5 T
(object UUID.) 108 658 T
4 F
(Figur) 154.32 638.5 T
(e 5-8: Endpoint Mapper Object/Interface Matching Rules) 181.2 638.5 T
0 F
(Endpoint Services Data Structur) 72 446.5 T
(es) 239.36 446.5 T
2 F
-0.09 (Most of the common endpoint services operate on the endpoint database and refer-) 108 426.5 P
-0.22 (ence the structures we\325ve already described\051. The only other data structure de\336ned) 108 77 P
4 F
(T) 196.73 408.5 T
(able 5-7: mgmt_ep_inq_r) 202.29 408.5 T
(ep_t data structur) 324.43 408.5 T
(e) 409.95 408.5 T
7 11 Q
(mgmt_ep_inq_rep_t {) 110 387.17 T
5 F
(usage) 110 368.17 T
(/* always mgmt_ep_c_inquiry_context in DCE) 218 368.17 T
(1.x */) 218 355.17 T
(done) 110 336.17 T
(/* true if done with this inq_rep */) 218 336.17 T
(ep_binding) 110 317.17 T
(/* binding handle for endpoint mapper */) 218 317.17 T
(inquiry_type) 110 298.17 T
(/* one of [rpc_c_ep_] all_elts,) 218 298.17 T
(match_by_if, match_by_obj, match_by_both*/) 218 285.17 T
(object) 110 266.17 T
(/* object UUID */) 218 266.17 T
(if_id) 110 247.17 T
(/* interface id */) 218 247.17 T
(vers_option) 110 228.17 T
(/* version matching rules: one of) 218 228.17 T
([rpc_c_vers_] all, compatible, exact,) 218 215.17 T
(major_only, upto */) 218 202.17 T
(entry_handle) 110 183.17 T
(/* lookup handle */) 218 183.17 T
(num_ents) 110 164.17 T
(/* how many entries \050below\051 */) 218 164.17 T
(next_ent) 110 145.17 T
(/* index of next entry element */) 218 145.17 T
(entries[]) 110 126.17 T
(/* array of ept_entry_t */) 218 126.17 T
7 F
(}) 110 107.17 T
106.75 399.5 106.75 98.5 2 L
V
0.5 H
0 Z
N
109.25 397 109.25 101 2 L
V
N
214.75 379.25 214.75 118.75 2 L
V
N
217.25 379.25 217.25 118.75 2 L
V
N
502.75 397 502.75 101 2 L
V
N
505.25 399.5 505.25 98.5 2 L
V
N
106.5 399.75 505.5 399.75 2 L
V
N
109 397.25 503 397.25 2 L
V
N
109.5 379.5 502.5 379.5 2 L
V
N
109.5 347.5 502.5 347.5 2 L
V
N
109.5 328.5 502.5 328.5 2 L
V
N
109.5 309.5 502.5 309.5 2 L
V
N
109.5 277.5 502.5 277.5 2 L
V
N
109.5 258.5 502.5 258.5 2 L
V
N
109.5 239.5 502.5 239.5 2 L
V
N
109.5 194.5 502.5 194.5 2 L
V
N
109.5 175.5 502.5 175.5 2 L
V
N
109.5 156.5 502.5 156.5 2 L
V
N
109.5 137.5 502.5 137.5 2 L
V
N
109.5 118.5 502.5 118.5 2 L
V
N
109 100.75 503 100.75 2 L
V
N
106.5 98.25 505.5 98.25 2 L
V
N
108 468 504 634.5 C
285.43 596.64 322.4 614.32 R
4 X
0 K
V
0.5 H
0 Z
0 X
N
285.57 578.64 322.54 596.32 R
6 X
V
0 X
N
234.5 544.43 271.47 562.11 R
4 X
V
0 X
N
234.65 526.43 271.61 544.11 R
6 X
V
0 X
N
323.26 596.64 360.22 614.32 R
4 X
V
0 X
N
323.4 578.64 360.37 596.32 R
6 X
V
0 X
N
361.09 596.64 398.05 614.32 R
4 X
V
0 X
N
361.23 578.64 398.19 596.32 R
6 X
V
0 X
N
398.91 596.64 435.88 614.32 R
4 X
V
0 X
N
399.06 578.64 436.02 596.32 R
6 X
V
0 X
N
436.74 596.64 473.7 614.32 R
4 X
V
0 X
N
436.88 578.64 473.85 596.32 R
6 X
V
0 X
N
234.03 503.78 271 521.46 R
4 X
V
0 X
N
234.17 485.78 271.14 503.46 R
6 X
V
0 X
N
6 8 Q
(uuid_nil) 289.89 601.93 T
(uuid_BAR) 437.75 602.33 T
(if_ABC) 240.43 532.44 T
(uuid_nil) 238.79 550.36 T
(uuid_nil) 327.14 602.36 T
(uuid_FOO) 399.32 602.01 T
(uuid_FOO) 361.07 602.04 T
(if_ABC) 239.86 490.51 T
(if_ABC) 442.86 585.01 T
(if_ABC) 367.29 583.98 T
(if_ABC) 293.32 584.55 T
(uuid_FOO) 235.15 509.22 T
(if_XYZ) 404.82 584.76 T
(if_XYZ) 328.18 584.26 T
(endpoint database entries) 327.22 621 T
284.86 525.25 322.36 563.29 R
N
323.08 525.25 360.58 563.29 R
8 X
V
0 X
N
361.3 525.25 398.8 563.29 R
8 X
V
0 X
N
399.52 525.25 437.02 563.29 R
8 X
V
0 X
N
437.74 525.25 475.24 563.29 R
8 X
V
0 X
N
284.86 486.71 322.36 524.75 R
6 X
V
0 X
N
323.08 486.71 360.58 524.75 R
8 X
V
0 X
N
361.3 486.71 398.8 524.75 R
N
399.52 486.71 437.02 524.75 R
8 X
V
0 X
N
437.74 486.71 475.24 524.75 R
8 X
V
0 X
N
126.85 596.5 163.82 614.18 R
4 X
V
125.92 555.46 162.89 573.14 R
6 X
V
362 506.83 398.96 524.51 R
4 X
V
362.14 488 399.1 505.68 R
6 X
V
285.35 544.37 322.32 562.05 R
4 X
V
285.49 525.54 322.46 543.21 R
6 X
V
0 X
(object UUID) 123.82 586.71 T
(interface UUID) 118.64 544.37 T
277.04 623.14 277.04 481.18 2 L
6 X
V
1 H
11 X
N
235.07 569.93 492.22 569.93 2 L
6 X
V
10 X
N
126 508.86 163.08 526.5 R
8 X
V
0 X
(no match) 127.5 499.12 T
(ept_entry_t\325) 227.5 587.25 T
(s) 269.13 587.25 T
(to match) 227.5 577.94 T
0 0 612 792 C
108 468 504 634.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "18" 95
%%Page: "19" 95
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-19) 518.02 34.67 T
2 F
(as part of these services is the inquiry context that supports the) 144 712 T
5 11 Q
(rpc_ep_mgmt) 447.79 712 T
2 12 Q
(operations. T) 144 698.5 T
(able 5-7 illustrates this type.) 206.45 698.5 T
0 F
(Common Endpoint Services Internal Operations) 108 679 T
2 F
(The endpoint services implemented in) 144 659 T
5 11 Q
(comep.c) 330.21 659 T
2 12 Q
( comprise eight public interfaces) 376.35 659 T
(and 12 internal ones. Several of these are wrappers for others, and several others) 144 645.5 T
0 (provide support for managing the endpoint database \050e.g., via) 144 632 P
0 F
0 (rpccp) 441.75 632 P
2 F
0 (\051. The bulk of) 471.06 632 P
(the work is accomplished in the base) 144 618.5 T
5 11 Q
(ep_register) 323.54 618.5 T
2 12 Q
( and) 396.05 618.5 T
5 11 Q
(rpc_ep_unregister) 419.37 618.5 T
2 12 Q
-0.1 (functions. Since many of these routines work by binding to the) 144 605 P
0 F
-0.1 (rpcd) 447.36 605 P
2 F
-0.1 ( and invoking) 471.34 605 P
(remote operations de\336ned in the endpoint mapper manager epv) 144 591.5 T
(\050) 144 578 T
5 11 Q
(ept_v3_0_mgr_epv) 147.99 578 T
2 12 Q
(\051, we describe these routines, which are implemented in) 253.46 578 T
5 11 Q
(rpcdep.c) 144 564.5 T
2 12 Q
(, here as well.) 196.73 564.5 T
4 F
(Figur) 196.98 545 T
(e 5-9: Common Endpoint Services Internal Operations) 223.86 545 T
277.26 194.19 144 194.19 2 L
V
0.59 H
0 Z
N
2 F
(Public Endpoint Operations) 144 195.5 T
5 11 Q
(rpc_ep_register) 144 176.17 T
(rpc_ep_register_no_replace) 144 164.17 T
2 12 Q
-0.06 (These are the public entrypoints to) 216 151.5 P
5 11 Q
-0.13 (ep_register) 384.87 151.5 P
2 12 Q
-0.06 (, the internal rou-) 456.9 151.5 P
(tine that does the real work of registering a server entry in the end-) 216 138 T
(point database.) 216 124.5 T
5 11 Q
(rpc_ep_unregister) 144 105.67 T
2 12 Q
(essentially the inverse of) 216 93 T
5 11 Q
(ep_register) 337.91 93 T
2 12 Q
(, and invoked by the) 409.94 93 T
5 11 Q
(ep_register) 216 79.5 T
2 12 Q
( cleanup section to unregister the contents of par-) 288.51 79.5 T
108 72 540 720 C
144 217 540 541 C
307.33 303.33 391.33 402.67 R
7 X
0 K
V
0.5 H
0 Z
0 X
N
162 239.33 272.67 519.33 R
6 X
V
0 8 Q
0 X
(rpc_ep_r) 391.33 504.67 T
(egister) 422.28 504.67 T
(rpc_ep_r) 391.33 493.96 T
(egister_no_r) 422.28 493.96 T
(eplace) 464.77 493.96 T
(rpc_ep_unr) 391.33 472.59 T
(egister) 431.17 472.59 T
(rpc_ep_r) 391.33 268.56 T
(esolve_binding) 422.28 268.56 T
(rpc_mgmt_ep_elt_inq_begin) 391.33 434.52 T
(rpc_mgmt_ep_elt_inq_next) 391.33 423.15 T
(rpc_mgmt_ep_elt_inq_done) 391.33 411.78 T
(rpc_mgmt_ep_unr) 391.33 459.75 T
(egister) 455.15 459.75 T
6 F
(ep_register) 283.33 482 T
(get_ep_binding) 284 469.33 T
(tower_to_if_id) 299.33 423.33 T
(ep_get_endpoint) 298.67 268.67 T
(ept_insert) 166 503.33 T
(ept_delete) 166 454.75 T
(ept_lookup) 166 424.84 T
(ept_map) 166 269.59 T
(ept_lookup_handle_free) 166 409.01 T
(ept_inq_object) 166 393.1 T
(ept_mgmt_delete) 166 443.85 T
389.33 489.33 488 514.67 R
8 X
N
280.67 464 344.67 492 R
N
351.92 483.09 345.99 484 349.74 488.68 3 L
0 X
N
387.33 500 346.23 484.09 2 L
2 Z
N
351.07 471.94 346.66 476 352.39 477.79 3 L
0 Z
N
392 466 346.91 475.95 2 L
2 Z
N
206.96 499.14 202.66 503.33 208.44 504.96 3 L
0 Z
N
280 484 202.91 503.27 2 L
2 Z
N
206.99 454 201.33 456 205.89 459.9 3 L
0 Z
N
281.33 470.67 201.58 456.05 2 L
2 Z
N
353.86 422.33 348.67 425.33 353.86 428.33 3 L
0 Z
N
390.67 425.33 348.92 425.33 2 L
2 Z
N
212.53 423 207.33 426 212.53 429 3 L
0 Z
N
298 426 207.58 426 2 L
2 Z
N
258.53 409 253.33 412 258.53 415 3 L
0 Z
N
392 412 253.58 412 2 L
2 Z
N
(ept_v3_0_c_epv) 182.67 524 T
361.86 267 356.67 270 361.86 273 3 L
0 Z
N
389.33 270 356.92 270 2 L
2 Z
N
203.86 267.67 198.67 270.67 203.86 273.67 3 L
0 Z
N
296.67 270.67 198.92 270.67 2 L
2 Z
N
(mgmt_ep_inq_rep_t) 310 394.67 T
(usage) 310 386.67 T
(done) 310 378.67 T
(ep_binding) 310 370.67 T
(inquiry_type) 310 362.67 T
(object) 310 354.67 T
(if_id) 310 346.67 T
(vers_option) 310 338.67 T
(entry_handle) 310 330.67 T
(num_ents) 310 322.67 T
(next_ent) 310 314.67 T
(entries[]) 310 306.67 T
298.8 361 304 358 298.8 355 3 L
0 Z
N
236.67 394.67 292.67 394.67 280.67 358 303.75 358 4 L
2 Z
N
164.67 387.33 252 433.33 R
0 Z
8 X
N
108 72 540 720 C
144 217 540 541 R
3 H
0 Z
3 X
0 K
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "19" 96
%%Page: "20" 96
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-20) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(tially registered object and if vectors.) 180 712 T
5 11 Q
(rpc_ep_resolve_binding) 108 693.17 T
2 12 Q
(This is the public wrapper for the private routine) 180 680.5 T
5 11 Q
(ep_get_endpoint,) 180 667 T
2 12 Q
( which we describe below) 285.47 667 T
(.) 409.25 667 T
5 11 Q
(rpc_mgmt_ep_elt_inq_begin, rpc_mgmt_ep_elt_inq_next) 108 648.17 T
(rpc_mgmt_ep_elt_inq_done, rpc_mgmt_ep_unregister) 108 636.17 T
2 12 Q
(these are all support functions for use by management applications) 180 623.5 T
-0.15 (such as) 180 610 P
0 F
-0.15 (rpccp) 217.67 610 P
2 F
-0.15 (. The \322begin, next, end\323 sequence is used to set up an) 246.99 610 P
(inquiry context, then traverse it using a set of matching rules speci-) 180 596.5 T
(\336ed in the) 180 583 T
5 11 Q
(inquiry_type) 230.97 583 T
2 12 Q
( \336eld of the) 310.07 583 T
5 11 Q
(mgmt_ep_inq_rep_t) 368.04 583 T
2 12 Q
(structure. Management applications that want to delete individual) 180 569.5 T
-0.11 (endpoint database elements need a special version of the unregister) 180 556 P
-0.44 (operation that allows them to construct the tower reference required) 180 542.5 P
(by the endpoint database. The) 180 529 T
5 11 Q
(rpc_mgmt_ep_unregister) 326.56 529 T
2 12 Q
( func-) 471.58 529 T
-0.32 (tion includes a \322canned\323 if spec template which it \337eshes out with a) 180 515.5 P
-0.12 (supplied UUID and version. The resulting if spec is then convert to) 180 502 P
(a tower with which to call the) 180 488.5 T
5 11 Q
(ept_mgmt_delete) 325.56 488.5 T
2 12 Q
( operation \050part) 424.44 488.5 T
(of the endpoint mapper) 180 475 T
(\325) 292.03 475 T
(s manager epv\051.) 295.36 475 T
284.88 454.19 108 454.19 2 L
V
0.59 H
0 Z
N
(Private Endpoint Mapper Operations) 108 455.5 T
5 11 Q
(ep_register) 108 435.5 T
2 12 Q
(This is the base endpoint database registration function. It) 180.51 435.5 T
(rejects) 460.99 435.5 T
(any bindings in the supplied array that do not have endpoints, then) 180 422 T
(calls the endpoint mapper epv\325) 180 408.5 T
(s) 327.23 408.5 T
5 11 Q
( ept_insert) 331.9 408.5 T
2 12 Q
( function to insert) 404.41 408.5 T
(bindings one at a time. This function registers the cross product of) 180 395 T
(the vector of object UUIDs and the vector of binding handles. If) 180 381.5 T
(there are no object UUIDs to register \050vector is null or has length) 180 368 T
(0\051, it registers an ep entry with a nil object UUID and the interface) 180 354.5 T
(UUID from the supplied tower) 180 341 T
(. Otherwise, it populates the rpcd\325) 327.23 341 T
(s) 489.45 341 T
(list structures with as many interface and object entries as the vec-) 180 327.5 T
(tor represents. For any returned status other than ok or) 180 314 T
(comm_failure, this function will unregister everything that has so) 180 300.5 T
(far been registered, on the theory that only a completely successful) 180 287 T
(registration counts.) 180 273.5 T
5 11 Q
(get_ep_binding) 108 254.67 T
2 12 Q
(delivers the binding handle of the) 180 242 T
0 F
(rpcd) 343.89 242 T
2 F
( on a speci\336ed host, or con-) 367.88 242 T
(structs a string binding \050) 180 228.5 T
5 11 Q
(rpc__network_inq_protseqs,) 296.6 228.5 T
(rpc_binding_from_string_binding) 180 215 T
2 12 Q
(\051 to the local) 384.35 215 T
0 F
(rpcd) 447.64 215 T
2 F
( if) 471.62 215 T
(input handle is NULL.) 180 201.5 T
5 11 Q
(tower_to_if_id) 108 182.67 T
2 12 Q
(converts a tower \050) 180 170 T
5 11 Q
(tower_p_t) 266.26 170 T
2 12 Q
(\051 to an interface id \050) 325.58 170 T
5 11 Q
(rpc_if_id_t) 420.5 170 T
2 12 Q
(\051) 493.01 170 T
-0.31 (by calling) 180 156.5 P
5 11 Q
-0.69 (rpc__tower_to_tower_ref) 230.01 156.5 P
2 12 Q
-0.31 ( to build a tower ref, then) 381.62 156.5 P
(calling) 180 143 T
5 11 Q
(rpc__tower_f) 215.64 143 T
(lr_to_if_id) 294.75 143 T
2 12 Q
( to derive the interface id) 367.26 143 T
(from tower \337oor 1, after which it frees the tower ref.) 180 129.5 T
5 11 Q
(ep_get_endpoint) 108 110.67 T
2 12 Q
-0.37 (This is the base endpoint resolution function that does the real work) 180 98 P
(of getting endpoint information into a binding rep. It initially tries) 180 84.5 T
FMENDPAGE
%%EndPage: "20" 97
%%Page: "21" 97
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-21) 518.02 34.67 T
2 F
(to \336ll in the endpoint from the if spec by calling) 216 712 T
5 11 Q
(rpc__if_set_wk_endpoint) 216 698.5 T
2 12 Q
( \050which in turn calls into the naf) 367.61 698.5 T
-0.16 (epv\051. If this fails, the routine calls the) 216 685 P
0 F
-0.16 (rpcd) 397.23 685 P
2 F
-0.16 ( with a modi\336ed version) 421.22 685 P
-0.18 (of the binding in question \050) 216 671.5 P
5 11 Q
-0.39 (com_timeout) 345.38 671.5 P
2 12 Q
-0.18 ( and) 417.89 671.5 P
5 11 Q
-0.39 (auth_info) 440.86 671.5 P
2 12 Q
-0.18 (are set) 506.39 671.5 P
-0.33 (to) 216 658 P
5 11 Q
-0.73 (default_imeout) 228 658 P
2 12 Q
-0.33 ( and NULL, respectively) 320.28 658 P
-0.33 (. The object UUID is) 437.74 658 P
-0.27 (set nil, since the input binding will be used to contact the) 216 644.5 P
0 F
-0.27 (rpcd) 488.91 644.5 P
2 F
-0.27 (. The) 512.9 644.5 P
(mapping operation in the) 216 631 T
0 F
(rpcd) 339.26 631 T
2 F
( is keyed by a tower reference \050the) 363.24 631 T
5 11 Q
(map_tower) 216 617.5 T
2 12 Q
(\051, which this function obtains by getting a vector of) 275.33 617.5 T
(tower refs\051, then picking the \336rst vector element. Using this) 216 604 T
5 11 Q
(map_tower) 216 590.5 T
2 12 Q
(,) 274.85 590.5 T
5 11 Q
(ep_get_endpoint) 280.84 590.5 T
2 12 Q
( calls the endpoint epv\325) 379.72 590.5 T
(s) 490.98 590.5 T
5 11 Q
(ept_map) 216 577 T
2 12 Q
( function to deliver all of the bindings to which the) 262.14 577 T
5 11 Q
(map_tower) 216 563.5 T
2 12 Q
( maps, then return a random selection from that array) 275.33 563.5 T
(.) 529.68 563.5 T
(Once a compatible tower has been obtained, that tower) 216 550 T
(\325) 479.9 550 T
(s endpoint) 483.24 550 T
(data \050) 216 536.5 T
5 11 Q
(rpc__naf_addr_inq_endpoint) 242.97 536.5 T
2 12 Q
(\051 is used to complete the) 414.36 536.5 T
(input binding handle. This function also resets the binding to clear) 216 523 T
-0.34 (the boot time \050which when returned is the) 216 509.5 P
0 F
-0.34 (rpcd) 416.45 509.5 P
2 F
-0.34 (\325) 440.43 509.5 P
-0.34 (s boot time\051, so that) 443.77 509.5 P
-0.5 (calls made on this binding won\325) 216 496 P
-0.5 (t fail with a \322wrong boot time\323 error) 366.84 496 P
(over the datagram RPC protocol.) 216 482.5 T
5 11 Q
(rpc__ep_mem_alloc, rpc__ep_mem_free) 144 463.67 T
2 12 Q
(these routines are wrappers that cast the) 216 451 T
5 11 Q
(ptr) 410.17 451 T
2 12 Q
( ar) 429.95 451 T
(gument of the) 442.05 451 T
(RPC_MEM_ALLOC[FREE] macros to an) 216 437.5 T
5 11 Q
(idl_void_p_t) 423.88 437.5 T
2 12 Q
(.) 502.98 437.5 T
321.2 416.69 144 416.69 2 L
V
0.59 H
0 Z
N
(The Endpoint Mapper Manager EPV) 144 418 T
(These routines constitute the manager epv that the) 144 398 T
0 F
(rpcd) 387.83 398 T
2 F
( exports. Most are quite) 411.81 398 T
(simple, in that they simply obtain a handle to the endpoint database, then invoke) 144 384.5 T
(one of the epdb_* operations described earlier in this chapter to actually do the) 144 371 T
(requested database manipulations. The remote interfaces to these routines are) 144 357.5 T
(de\336ned in) 144 344 T
5 11 Q
(ep.idl) 194.64 344 T
2 12 Q
(.) 234.19 344 T
5 11 Q
(ept_insert) 144 324.5 T
2 12 Q
(gets the epdb handle, then calls) 216 324.5 T
5 11 Q
(epdb_insert) 368.89 324.5 T
2 12 Q
( for each of the sup-) 441.4 324.5 T
(plied array of) 216 311 T
5 11 Q
(ept_entry_t) 283.61 311 T
2 12 Q
( elements. if any individual insertion) 356.12 311 T
(fails, all array elements are deleted via) 216 297.5 T
5 11 Q
(ept_delete) 403.84 297.5 T
(ept_delete) 144 278 T
2 12 Q
(inverse of) 216 278 T
5 11 Q
(ept_insert) 266.62 278 T
2 12 Q
(. gets the epdb handle, then calls) 332.54 278 T
5 11 Q
-0.45 (epdb_delete) 216 264.5 P
2 12 Q
-0.21 ( for each of the supplied array of) 288.51 264.5 P
5 11 Q
-0.45 (ept_entry_t) 446.72 264.5 P
2 12 Q
-0.21 ( ele-) 519.23 264.5 P
(ments. if any individual deletion fails, this routine returns an error) 216 251 T
(status) 216 237.5 T
5 11 Q
(ept_lookup) 144 218 T
2 12 Q
(acquires the epdb handle, then calls) 216 218 T
5 11 Q
(epdb_lookup) 389.53 218 T
2 12 Q
( to perform the) 462.04 218 T
(inquiry) 216 204.5 T
5 11 Q
(ept_map) 144 185 T
2 12 Q
-0.42 (acquires epdb handle, then calls) 216 185 P
5 11 Q
-0.92 (epdb_map) 369.78 185 P
2 12 Q
-0.42 ( to perform the mapping) 422.51 185 P
(operation\050s\051) 216 171.5 T
5 11 Q
(ept_lookup_handle_free) 144 152.67 T
2 12 Q
(calls) 216 140 T
5 11 Q
(epdb_delete_lookup_handle) 240.98 140 T
2 12 Q
( on the supplied handle to) 405.78 140 T
-0.01 (free the context handle used in an) 216 126.5 P
5 11 Q
-0.03 ( ept_map) 377.12 126.5 P
2 12 Q
-0.01 ( or) 429.83 126.5 P
5 11 Q
-0.03 (ept_lookup) 445.79 126.5 P
2 12 Q
-0.01 ( oper-) 511.71 126.5 P
(ation) 216 113 T
5 11 Q
(ept_inq_object) 144 94.17 T
2 12 Q
0 (acquires the epdb handle, then calls) 216 81.5 P
5 11 Q
-0.01 (epdb_inq_object) 389.51 81.5 P
2 12 Q
0 ( to deliver) 488.38 81.5 P
FMENDPAGE
%%EndPage: "21" 98
%%Page: "22" 98
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-22) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(the epdb\325) 180 712 T
(s object UUID.) 224.3 712 T
271.39 681.78 72 681.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(Other Endpoint Mapper Services) 72 683.17 T
2 12 Q
(In addition to the database management, endpoint resolution, and registration) 108 662.5 T
-0.5 (functions we\325ve described so far) 108 649 P
-0.5 (, the) 261.37 649 P
0 F
-0.5 ( rpcd) 281.52 649 P
2 F
-0.5 ( also monitors server liveness \050really just) 308 649 P
(another database management function\051 and forwards datagram-protocol RPCs to) 108 635.5 T
(a compatible server instance.) 108 622 T
0 F
(Monitoring Server Liveness) 72 602.5 T
2 F
(When it starts up, the) 108 582.5 T
0 F
(rpcd) 213.27 582.5 T
2 F
( kicks of) 237.25 582.5 T
(f two threads, each of which runs one of the) 278.34 582.5 T
0 F
(rpcd) 108 569 T
2 F
(\325) 131.99 569 T
(s server liveness tasks. These tasks, referred to as) 135.32 569 T
5 11 Q
(sliv_task1) 374.79 569 T
2 12 Q
( and) 440.71 569 T
5 11 Q
(sliv_task2) 108 555.5 T
2 12 Q
(, periodically attempt to contact each registered server to see if it is) 173.92 555.5 T
-0.46 (still alive. Following are descriptions of the server liveness machinery) 108 542 P
-0.46 (, all of which) 439.54 542 P
(is implemented in) 108 528.5 T
5 11 Q
(rpcd/sliv.c) 196.96 528.5 T
2 12 Q
(.) 269.46 528.5 T
5 11 Q
(sliv_init) 108 509 T
2 12 Q
(starts the server liveness threads and initializes the condition vari-) 180 509 T
(able used to synchronize their operations.) 180 495.5 T
5 11 Q
(sliv_task1) 108 476 T
2 12 Q
(This task runs at an interval speci\336ed by the) 180 476 T
5 11 Q
(sliv_c_long_wait) 394.19 476 T
2 12 Q
(constant \050currently 15 minutes\051. Each time it runs, it:) 180 462.5 T
-0.32 (\245 deletes any database entry whose) 180 443 P
5 11 Q
-0.7 (delete_f) 347.48 443 P
-0.7 (lag) 400.22 443 P
2 12 Q
-0.32 ( has been set true) 419.99 443 P
(\050by) 180 429.5 T
5 11 Q
(sliv_task2) 198.99 429.5 T
2 12 Q
(\051 and whose) 264.9 429.5 T
5 11 Q
(read_nrefs) 325.85 429.5 T
2 12 Q
( \336eld has dropped to) 391.77 429.5 T
(zero.) 180 416 T
(\245 attempts to ping any server represented by an entry whose) 180 396.5 T
5 11 Q
(ncomm_fails) 180 383 T
2 12 Q
( \336eld is still zero \050meaning that server has always) 252.51 383 T
(responded to past pings by) 180 369.5 T
5 11 Q
(sliv_task1) 310.92 369.5 T
2 12 Q
(\051. If a server fails to) 376.84 369.5 T
(respond to the ping,) 180 356 T
5 11 Q
(sliv_task1) 278.27 356 T
2 12 Q
( sets the server entry\325) 344.19 356 T
(s) 446.11 356 T
5 11 Q
(ncomm_fails) 180 342.5 T
2 12 Q
( \336eld and signals) 252.51 342.5 T
5 11 Q
(sliv_task2) 336.46 342.5 T
2 12 Q
( by toggling its con-) 402.38 342.5 T
(dition variable \050) 180 329 T
5 11 Q
(sliv_task2_cv) 256.61 329 T
2 12 Q
(\051.) 342.31 329 T
5 11 Q
(sliv_task2) 108 309.5 T
2 12 Q
-0.21 (This task is responsible for ascertaining the status of a server that is) 180 309.5 P
(thought to be unresponsive. It pings any server whose entry has an) 180 296 T
5 11 Q
(ncomm_fails) 180 282.5 T
2 12 Q
( \336eld in the range) 252.51 282.5 T
5 11 Q
(1-) 216 263.67 T
(sliv_c_max_server_not_listening) 235.77 263.67 T
2 12 Q
(\050currently 20\051. Initially) 180 239 T
(, ping attempts are scheduled to happen at) 289.48 239 T
(15-minute) 180 225.5 T
(\050) 232.3 225.5 T
5 11 Q
(sliv_c_long_wait) 236.3 225.5 T
2 12 Q
(\051 intervals. However) 341.77 225.5 T
(, if the \336rst) 439.54 225.5 T
(ping fails, this interval is immediately reset to the) 180 212 T
5 11 Q
(sliv_c_short_wait) 180 198.5 T
2 12 Q
( value \050currently one minute\051. Upon com-) 292.06 198.5 T
(pletion of the maximum number of ping attempts \050i.e., when) 180 185 T
5 11 Q
-0.18 (ncomm_fails=20) 180 171.5 P
2 12 Q
-0.08 (\051,) 272.29 171.5 P
5 11 Q
-0.18 (sliv_task2) 282.2 171.5 P
2 12 Q
-0.08 (sets the entry\325) 354.53 171.5 P
-0.08 (s) 420.99 171.5 P
5 11 Q
-0.18 (delete_f) 428.57 171.5 P
-0.18 (lag) 481.31 171.5 P
2 12 Q
(and goes on to the next entry on the list.) 180 158 T
5 11 Q
(ping_server) 108 139.17 T
2 12 Q
(This function is essentially a wrapper that calls) 180 126.5 T
5 11 Q
(rpc_mgmt_is_server_listening) 180 113 T
2 12 Q
(with a speci\336ed \322short) 371.16 113 T
(timeout\323 value \050currently 3\051.) 180 99.5 T
(This two-task arrangement means that:) 108 80 T
FMENDPAGE
%%EndPage: "22" 99
%%Page: "23" 99
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Endpoint Mapping Services) 406.75 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(5-23) 518.02 34.67 T
2 F
(\245) 144 712 T
(as long as every registered server is reachable,) 162 712 T
5 11 Q
(sliv_task2) 387.46 712 T
2 12 Q
( will never run) 453.38 712 T
(\245) 144 692.5 T
(once one server fails to respond to a ping by) 162 692.5 T
5 11 Q
(sliv_task1) 377.17 692.5 T
2 12 Q
(,) 443.09 692.5 T
5 11 Q
(sliv_task2) 449.09 692.5 T
2 12 Q
( will) 515.01 692.5 T
(begin to run and will not stop until every registered server has been declared) 162 679 T
(living. \050I.e., no entries in the) 162 665.5 T
5 11 Q
(entry_list) 301.24 665.5 T
2 12 Q
( have an) 367.16 665.5 T
5 11 Q
(ncomm_fails > 0) 410.12 665.5 T
2 12 Q
(.\051) 509 665.5 T
(The server liveness tasks traverse the endpoint database\325) 144 646 T
(s entry list, which is a lin-) 414.79 646 T
(ear list of all entries ordered by their registration time \050essentially a FIFO list\051. In) 144 632.5 T
(practice, especially if there are more than a few entries, both server liveness tasks) 144 619 T
(will be examining the list at the same time. However) 144 605.5 T
(, since) 396.69 605.5 T
5 11 Q
(sliv_task1) 430.33 605.5 T
2 12 Q
( only) 496.25 605.5 T
(pings servers whose) 144 592 T
5 11 Q
(ncomm_fails = 0) 243.59 592 T
2 12 Q
( and) 342.47 592 T
5 11 Q
(sliv_task2) 365.79 592 T
2 12 Q
( only pings servers) 431.7 592 T
-0.23 (whose) 144 578.5 P
5 11 Q
-0.5 (ncomm_fails > 0) 177.41 578.5 P
2 12 Q
-0.23 (, only one task should ever be pinging a given server at) 275.28 578.5 P
(a time.) 144 565 T
(Both of the server liveness tasks acquire the) 144 545.5 T
5 11 Q
(db_lock) 357.84 545.5 T
2 12 Q
( \050endpoint database mutex) 403.98 545.5 T
-0.47 (lock\051 before beginning their traversal of the database. T) 144 532 P
-0.47 (o prevent the database from) 406.15 532 P
(remaining locked for long periods when there\325) 144 518.5 T
(s a lot of server liveness activity) 366.5 518.5 T
(going on, these tasks periodically release the lock so that new registrations and) 144 505 T
(unregistrations can take place.) 144 491.5 T
0 (Both of the server liveness tasks keep time by means of the standard system clock) 144 472 P
(\050e.g.,) 144 458.5 T
5 11 Q
(gettimeofday\050\051) 171.31 458.5 T
2 12 Q
(\051 on Unix systems\051, rather than the clock and timer rou-) 263.59 458.5 T
(tines described on page 3-8.) 144 445 T
0 F
(Forwarding) 108 425.5 T
2 F
(Datagram RPC clients that have not yet established an endpoint at which to reach) 144 405.5 T
-0.03 (the server with which they will communicate make use of a forwarding scheme in) 144 392 P
-0.43 (which calls on a partially bound handle are transmitted to the) 144 378.5 P
0 F
-0.43 (rpcd) 435.43 378.5 P
2 F
-0.43 (, which looks up) 459.42 378.5 P
(a compatible server instance, then forwards the call to that server in a way that) 144 365 T
(makes it appear as though the call had originated at the original caller \050rather than) 144 351.5 T
(at the) 144 338 T
0 F
(rpcd) 173.31 338 T
2 F
(\051. The client is able to obtain the server) 197.3 338 T
(\325) 385.27 338 T
(s endpoint by examining the) 388.61 338 T
(\336rst response packet returned by the server) 144 324.5 T
(.) 349.17 324.5 T
(The endpoint database routines and the) 144 305 T
0 F
(rpcd) 334.53 305 T
2 F
( itself \050) 358.51 305 T
5 11 Q
(rpcd.c) 392.49 305 T
2 12 Q
(\051 include some of the) 432.04 305 T
(machinery required to manage datagram RPC forwarding requirements. The high-) 144 291.5 T
-0.16 (est level forwarding map function,) 144 278 P
5 11 Q
-0.36 (fwd_map) 311.73 278 P
2 12 Q
-0.16 (, in) 357.87 278 P
5 11 Q
-0.36 (rpcd.c) 375.88 278 P
2 12 Q
-0.16 (, invokes the) 415.42 278 P
5 11 Q
-0.36 (*_fwd) 478.9 278 P
2 12 Q
-0.16 ( oper-) 511.86 278 P
(ations \050) 144 264.5 T
5 11 Q
(epdb_fwd) 179.64 264.5 T
2 12 Q
(,) 232.38 264.5 T
5 11 Q
(llb_fwd) 238.38 264.5 T
2 12 Q
(\051 to build a list of forwarding addresses that the) 284.52 264.5 T
(datagram protocol service will use when forwarding a call, then decides what) 144 251 T
(action to take based on whether or not there are any compatible interfaces regis-) 144 237.5 T
(tered.) 144 224 T
(W) 144 204.5 T
(e discuss the mechanics of forwarding in the datagram protocol service\325) 154.36 204.5 T
(s run-) 498.77 204.5 T
(time on page 7-16.) 144 191 T
FMENDPAGE
%%EndPage: "23" 100
%%Page: "24" 100
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Endpoint Mapping Services) 72 748 T
(Revised 7/27/93) 427.05 748 T
(5-24) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
FMENDPAGE
%%EndPage: "24" 101
%%Page: "1" 101
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-1) 524.01 34.67 T
360.65 706.22 151.51 706.22 2 L
V
1.71 H
0 Z
N
0 18 Q
0.9 (Chapter 6: Datagram Pr) 151.51 708 S
540 706.22 360.33 706.22 2 L
V
N
0.9 (otocol Service, part I) 360.33 708 S
2 12 Q
(The datagram protocol service is one of the two \322protocol engines\323 in DCE 1.0.) 144 592 T
4 F
(x) 526.72 592 T
2 F
(RPC. It is responsible for implementing all of the state machinery for connection-) 144 578.5 T
(less RPC as de\336ned in the RPC AES, as well as the programming interfaces for) 144 565 T
(applications and for stubs.) 144 551.5 T
(In this chapter we provide an overview of the major datagram RPC protocol ser-) 144 532 T
(vice elements, then discuss:) 144 518.5 T
(\245) 144 499 T
(datagram RPC packets) 162 499 T
(\245) 144 479.5 T
(datagram RPC \337ow control) 162 479.5 T
(\245) 144 460 T
(activity UUIDs and related sequence and serial numbers) 162 460 T
(\245) 144 440.5 T
(the major datagram RPC data structures and their relationships) 162 440.5 T
219.13 410.28 108 410.28 2 L
V
1.33 H
N
0 14 Q
(Datagram RPC Pr) 108 411.67 T
360.32 410.28 218.88 410.28 2 L
V
N
(otocol Service Elements) 218.88 411.67 T
2 12 Q
-0.33 (DCE\325) 144 391 P
-0.33 (s datagram RPC protocol supports various levels of call reliability) 171.32 391 P
-0.33 (, expressed) 484.38 391 P
(in the call semantics, over and above what is inherent in an essentially unreliable) 144 377.5 T
(datagram protocol such as the internet User Datagram Protocol \050UDP/IP\051. For) 144 364 T
(example, support for at-most-once \050non-idempotent\051 semantics implies an ability) 144 350.5 T
(to detect duplicate packets \050packets that are part of \322old\323 calls\051. Support for calls) 144 337 T
(whose ar) 144 323.5 T
(guments do not \336t into a single packet requires reassembly of call \322frag-) 186.74 323.5 T
(ments\323 at the server side of an RPC. Ef) 144 310 T
(\336cient client/server communications) 331.98 310 T
(requires protocol optimizations that can be employed when, for example, low net-) 144 296.5 T
(work traf) 144 283 T
(\336c, high network reliability) 188.08 283 T
(, and adequate local buf) 318.55 283 T
(fering and processing) 432.57 283 T
(power are available. But any sort of reliably at all requires that both sides of an) 144 269.5 T
(RPC be able to cope with situations in which the local machine, the remote) 144 256 T
(machine, and the network that ties them together are perhaps not operating \337aw-) 144 242.5 T
(lessly) 144 229 T
(.) 170.54 229 T
(The machinery that accomplishes all this in DCE 1.0.) 144 209.5 T
4 F
(x) 400.5 209.5 T
2 F
( RPC can be categorized) 405.83 209.5 T
(more or less as follows:) 144 196 T
(\245) 144 176.5 T
-0.1 (packet structures \050headers and bodies\051 that are tailored to the needs of the data-) 162 176.5 P
(gram RPC protocol.) 162 163 T
(\245) 144 143.5 T
(connection tables that allow clients and servers to keep track of outstanding) 162 143.5 T
(calls) 162 130 T
(\245) 144 110.5 T
(queues of marshalled data awaiting transmission, and queues of received data) 162 110.5 T
(awaiting delivery to stubs) 162 97 T
(\245) 144 77.5 T
(call handles that hold most of the state associated with a call) 162 77.5 T
FMENDPAGE
%%EndPage: "1" 102
%%Page: "2" 102
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(\245) 108 712 T
-0.03 (routines that deal with reassembly of call fragments and detection of duplicate) 126 712 P
(requests) 126 698.5 T
(\245) 108 679 T
(routines that adjust the \337ow \050rate of transmission\051 of RPC packets to suit the) 126 679 T
(needs of client, server) 126 665.5 T
(, and network \050this includes retry logic\051) 230.76 665.5 T
(\245) 108 646 T
-0.37 (context handle and related liveness maintenance functions that allow servers to) 126 646 P
(maintain context on behalf of clients even during periods of nominal client) 126 632.5 T
(inactivity) 126 619 T
(.) 170.53 619 T
(Figure 6-1 illustrates some of these major service elements.) 108 599.5 T
4 F
(Figur) 176.03 580 T
(e 6-1:Datagram RPC Pr) 202.91 580 T
(otocol Service Elements) 320.72 580 T
2 F
(This functional taxonomy provides the basis for code modularity in the datagram) 108 230.5 T
(protocol service implementation \321 modularity that is evident in the names and) 108 217 T
(functional contents of the \336les listed here.) 108 203.5 T
5 11 Q
(dg.c, dg.h) 108 184 T
2 12 Q
(common data structures, call epv) 180 184 T
5 11 Q
(dgauth.c) 108 164.5 T
2 12 Q
(call authentication machinery) 180 164.5 T
(, interface to DCE Security Service.) 321.11 164.5 T
5 11 Q
(dgcall.c, dgcall.h) 108 145.67 T
2 12 Q
(common low-level call transmission routines) 180 133 T
5 11 Q
(dgccall.c, dgccall.h) 108 114.17 T
2 12 Q
(client-side call routines) 180 101.5 T
108 252 504 576 C
413.57 421.28 498.22 470.03 R
4 X
0 K
V
0.5 H
0 Z
0 X
N
413.57 428.78 482.68 470.03 R
5 X
V
0 X
N
179.82 558.89 M
 192.84 551.08 192.84 551.08 194.53 549.2 D
 196.22 547.33 196.22 547.33 203.02 557.98 D
 209.83 568.63 209.83 568.63 220.37 569.6 D
 230.9 570.57 230.9 570.57 238.37 560.89 D
 245.83 551.2 245.83 551.2 248.51 536.32 D
 251.18 521.43 251.18 521.43 258.6 525.66 D
 266.02 529.89 266.02 529.89 276.42 520.35 D
 286.81 510.8 286.81 510.8 290.11 487.82 D
 293.41 464.83 293.41 464.83 290.11 446.44 D
 286.81 428.05 286.81 428.05 292.71 412.72 D
 298.62 397.4 298.62 397.4 299 373.79 D
 299.4 350.19 299.4 350.19 293.24 333.51 D
 287.1 316.83 287.1 316.83 279.63 309.08 D
 272.17 301.34 272.17 301.34 262.12 307.22 D
 252.07 313.11 252.07 313.11 248.07 295.6 D
 244.07 278.09 244.07 278.09 232.66 265.5 D
 221.24 252.9 221.24 252.9 208.95 256.79 D
 196.66 260.66 196.66 260.66 189.97 277.31 D
 183.29 293.95 183.29 293.95 173.73 286.02 D
 164.17 278.09 164.17 278.09 158.02 281.97 D
 151.88 285.84 151.88 285.84 147.09 302.16 D
 142.3 318.47 142.3 318.47 133.04 314.75 D
 123.78 311.02 123.78 311.02 115 323.61 D
 106.22 336.2 106.22 336.2 104.46 357.51 D
 102.71 378.81 102.71 378.81 107.57 395.77 D
 112.43 412.72 112.43 412.72 107.74 426.51 D
 103.05 440.31 103.05 440.31 103.05 459.46 D
 103.05 478.62 103.05 478.62 111.91 494.57 D
 120.77 510.52 120.77 510.52 128.86 510.52 D
 136.95 510.52 136.95 510.52 140.9 527.96 D
 144.85 545.39 144.85 545.39 151.44 555.07 D
 158.02 564.76 158.02 564.76 162.41 565.73 D
 166.8 566.7 166.8 566.7 179.82 558.89 D
O
0.2 H
N
388.02 265.58 M
 402.07 273.54 402.07 273.54 403.89 275.46 D
 405.71 277.37 405.71 277.37 413.05 266.5 D
 420.4 255.63 420.4 255.63 431.77 254.65 D
 443.13 253.65 443.13 253.65 451.19 263.54 D
 459.24 273.42 459.24 273.42 462.13 288.61 D
 465.02 303.79 465.02 303.79 473.02 299.47 D
 481.03 295.16 481.03 295.16 492.24 304.9 D
 503.46 314.64 503.46 314.64 507.02 338.09 D
 510.58 361.54 510.58 361.54 507.02 380.3 D
 503.46 399.07 503.46 399.07 509.83 414.7 D
 516.2 430.34 516.2 430.34 516.62 454.42 D
 517.04 478.5 517.04 478.5 510.4 495.52 D
 503.77 512.53 503.77 512.53 495.72 520.44 D
 487.66 528.34 487.66 528.34 476.82 522.33 D
 465.98 516.33 465.98 516.33 461.66 534.19 D
 457.35 552.05 457.35 552.05 445.03 564.9 D
 432.71 577.75 432.71 577.75 419.45 573.79 D
 406.18 569.84 406.18 569.84 398.98 552.86 D
 391.77 535.87 391.77 535.87 381.45 543.96 D
 371.13 552.05 371.13 552.05 364.5 548.1 D
 357.87 544.15 357.87 544.15 352.7 527.5 D
 347.54 510.86 347.54 510.86 337.55 514.66 D
 327.55 518.46 327.55 518.46 318.08 505.61 D
 308.6 492.77 308.6 492.77 306.71 471.03 D
 304.81 449.3 304.81 449.3 310.06 432 D
 315.31 414.7 315.31 414.7 310.25 400.63 D
 305.19 386.56 305.19 386.56 305.19 367.01 D
 305.19 347.47 305.19 347.47 314.74 331.19 D
 324.3 314.92 324.3 314.92 333.03 314.92 D
 341.76 314.92 341.76 314.92 346.02 297.13 D
 350.29 279.35 350.29 279.35 357.39 269.47 D
 364.5 259.59 364.5 259.59 369.24 258.6 D
 373.97 257.61 373.97 257.61 388.02 265.58 D
O
N
10 8 Q
(CLIENT) 120 557.68 T
(SERVER) 461.25 558.01 T
8 F
(client socket) 320.36 389.58 T
(server socket) 316.61 444.02 T
7 X
90 450 2.95 2.95 339.38 400.8 G
0.5 H
0 X
90 450 2.95 2.95 339.38 400.8 A
3 X
90 450 2.95 2.95 339.38 438.87 G
0 X
90 450 2.95 2.95 339.38 438.87 A
149.29 516.64 173.93 525.75 R
N
149.29 507.53 173.93 516.64 R
N
149.29 498.43 173.93 507.53 R
N
149.29 489.32 173.93 498.43 R
N
149.29 480.21 173.93 489.32 R
N
149.29 471.11 173.93 480.21 R
N
396.75 524.71 421.4 533.82 R
N
396.75 515.61 421.4 524.71 R
N
396.75 506.5 421.4 515.61 R
N
396.75 497.39 421.4 506.5 R
N
396.75 488.28 421.4 497.39 R
N
396.75 479.18 421.4 488.28 R
N
(Client Connection T) 148.39 540.21 T
(able) 217.87 540.21 T
6 F
(rpc_g_cct) 148.93 529.83 T
8 F
(Connection T) 396.43 538.74 T
(able) 443.25 538.74 T
6 F
(rpc_g_sct) 425.36 528.9 T
8 F
(Client Call Handle) 135.81 407.09 T
6 F
(rpc_dg_ccall) 154.91 399.39 T
8 F
(Server Call Handle) 413.57 411.16 T
6 F
(rpc_g_scall) 413.57 402.56 T
(rpc_g_my_cas_uuid) 169.29 298.08 T
(pkt pool) 245.72 405.2 T
8 F
(client rep table) 446.79 353.04 T
(Server) 401.79 546.04 T
415.54 444.14 426.25 454.86 R
N
426.25 444.14 436.97 454.86 R
N
436.97 444.14 447.68 454.86 R
N
447.68 444.14 458.39 454.86 R
N
458.4 444.14 469.11 454.86 R
N
469.11 444.14 479.82 454.86 R
N
415.54 432.39 426.25 443.11 R
N
426.25 432.39 436.97 443.11 R
N
436.97 432.39 447.68 443.11 R
N
447.68 432.39 458.39 443.11 R
N
458.4 432.39 469.11 443.11 R
N
469.11 432.39 479.82 443.11 R
N
413.57 457 443.57 469.86 R
6 X
V
0 X
N
6 F
(c) 419.47 462.49 T
(c) 455.9 462.49 T
(c) 487.5 462.49 T
(xmitq) 420.54 446.4 T
(recvq) 420.54 434.95 T
115.14 417.03 199.79 465.78 R
4 X
V
0 X
N
130.68 424.53 199.79 465.78 R
5 X
V
0 X
N
187.11 439.89 197.82 450.61 R
N
176.39 439.89 187.11 450.61 R
N
165.68 439.89 176.39 450.61 R
N
154.97 439.89 165.68 450.61 R
N
144.25 439.89 154.97 450.61 R
N
133.54 439.89 144.25 450.61 R
N
187.11 428.14 197.82 438.86 R
N
176.39 428.14 187.11 438.86 R
N
165.68 428.14 176.39 438.86 R
N
154.97 428.14 165.68 438.86 R
N
144.25 428.14 154.97 438.86 R
N
133.54 428.14 144.25 438.86 R
N
169.79 452.75 199.79 465.61 R
6 X
V
0 X
N
(c) 189.9 458.24 T
(c) 153.47 458.24 T
(c) 121.86 458.24 T
(recvq) 173.27 442.15 T
(xmitq) 173.72 430.7 T
1 X
90 450 18.48 19.55 339.38 420.12 A
8 F
0 X
(network) 325.73 423.78 T
(listener) 326.84 415.9 T
(thread) 328.39 408.74 T
11 F
(s) 317.68 417.71 T
(t) 354.07 417.21 T
8 F
(client socket) 239.43 437.11 T
(server socket) 235.68 491.56 T
7 X
90 450 2.95 2.95 258.45 448.34 G
0 X
90 450 2.95 2.95 258.45 448.34 A
3 X
90 450 2.95 2.95 258.45 486.41 G
0 X
90 450 2.95 2.95 258.45 486.41 A
1 X
90 450 18.48 19.55 258.45 467.66 A
0 X
(network) 244.8 471.32 T
(listener) 245.91 463.44 T
(thread) 247.47 456.28 T
11 F
(s) 236.75 465.25 T
(t) 273.14 464.75 T
6 F
(rpc_dg_binding_client) 199.29 510.75 T
(rpc_dg_binding_server) 310.18 466.62 T
177.29 373.64 186.39 387.57 R
N
186.39 373.64 195.5 387.57 R
N
195.5 373.64 204.61 387.57 R
N
204.61 373.64 213.72 387.57 R
N
213.71 373.64 222.82 387.57 R
N
222.82 373.64 231.93 387.57 R
N
449.22 362.25 458.32 376.18 R
N
458.32 362.25 467.43 376.18 R
N
467.43 362.25 476.54 376.18 R
N
476.54 362.25 485.65 376.18 R
N
485.65 362.25 494.75 376.18 R
N
494.75 362.25 503.86 376.18 R
N
8 F
(maintenance bindings) 177.32 365.03 T
383.5 383.86 408.15 392.96 R
N
383.5 374.75 408.15 383.85 R
N
383.5 365.64 408.15 374.75 R
N
383.5 356.53 408.15 365.64 R
N
383.5 347.43 408.15 356.53 R
N
383.5 338.32 408.15 347.43 R
N
(Server Call T) 378.57 327.53 T
(able) 424.48 327.53 T
(Client Call T) 118.93 339.3 T
(able) 161.73 339.3 T
6 F
(rpc_g_ccallt) 118.93 330.35 T
(rpc_g_scallt) 380.9 319.43 T
123.21 392.82 147.86 401.93 R
N
123.21 383.71 147.86 392.82 R
N
123.21 374.61 147.86 383.71 R
N
123.21 365.5 147.86 374.6 R
N
123.21 356.39 147.86 365.5 R
N
123.21 347.28 147.86 356.39 R
N
427.34 499.18 422.15 502.18 427.34 505.18 3 L
N
491.25 468.96 491.25 502.18 422.15 502.18 3 L
N
354.43 477.37 351.43 472.18 348.43 477.37 3 L
N
398.04 501.11 351.43 501.11 351.43 472.18 3 L
N
(rpc_dg_client_rep_t) 428.93 344.44 T
411.81 384.53 406.61 387.53 411.81 390.53 3 L
N
486.43 420.75 486.43 387.53 406.61 387.53 3 L
N
494.25 380.94 491.25 375.75 488.25 380.94 3 L
N
491.25 420.21 491.25 375.75 2 L
N
414.63 438.57 419.82 435.57 414.63 432.57 3 L
8 X
N
338.93 439.86 378.04 439.86 355 435.57 419.82 435.57 4 L
N
265.55 445.07 260.36 448.07 265.55 451.07 3 L
1 X
N
418.4 449.14 375.54 449.14 384.65 458.25 294.11 458.25 304.29 448.07 260.36 448.07 6 L
N
144.27 497.68 149.46 494.68 144.27 491.68 3 L
N
119.46 463.61 119.46 494.68 149.46 494.68 3 L
N
192.48 515.89 197.68 512.89 192.48 509.89 3 L
N
171.96 493.61 203.04 493.61 183.75 512.89 197.68 512.89 4 L
N
115.39 411.8 118.39 417 121.39 411.8 3 L
N
128.04 387 118.39 387 118.39 417 3 L
N
211.39 391.12 208.39 385.93 205.39 391.12 3 L
N
196.61 420.21 208.39 420.21 208.39 385.93 3 L
N
200.73 441.32 195.54 444.32 200.73 447.32 3 L
8 X
N
258.22 448.07 215.89 448.07 238.93 444.32 195.54 444.32 4 L
N
329.63 443.03 334.82 440.03 329.63 437.03 3 L
0 X
N
196.61 431.46 308.84 431.46 301.05 440.03 334.82 440.03 4 L
N
236.79 395.03 282.32 422.36 R
8 X
N
0 X
(pkt pool) 327.64 366.66 T
318.72 356.5 364.25 383.82 R
8 X
N
8 F
0 X
(Client Address Space UUID) 148.93 305.91 T
0 0 612 792 C
108 252 504 576 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "2" 103
%%Page: "3" 103
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-3) 524.01 34.67 T
5 11 Q
(dgccallt.c, dgccallt.h) 144 712.67 T
2 12 Q
(routines that manage the client call table) 216 700 T
5 11 Q
(dgcct.c, dgcct.h) 144 681.17 T
2 12 Q
(routines that manage the client connection table) 216 668.5 T
5 11 Q
(dgclive.c) 144 649 T
2 12 Q
(client liveness maintenance functions) 216 649 T
5 11 Q
(dgclsn.c, dgclsn.h) 144 630.17 T
2 12 Q
(client-oriented routines that run in the network listener thread) 216 617.5 T
5 11 Q
(dgexec.c, dgexec.h) 144 598.67 T
2 12 Q
(call execution machinery) 216 586 T
5 11 Q
(dgfwd.c, dgfwd.h) 144 567.17 T
2 12 Q
(call \050packet\051 forwarding) 216 554.5 T
5 11 Q
(dghnd.c, dghnd.h) 144 535.67 T
2 12 Q
(binding handle manipulation) 216 523 T
5 11 Q
(dginit.c) 144 503.5 T
2 12 Q
(initialization, declaration of epvs) 216 503.5 T
5 11 Q
(dglossy.c) 144 484.67 T
2 12 Q
(lossy-mode support, this is essentially a test/simulation facility) 216 472 T
5 11 Q
(dglsn.c) 144 452.5 T
2 12 Q
(base network listener thread routines) 216 452.5 T
5 11 Q
(dgpkt.c, dgpkt.h) 144 433.67 T
2 12 Q
(packet rationing functions) 216 421 T
5 11 Q
(dgrq.c, dgrq.h) 144 402.17 T
2 12 Q
(receive queue management) 216 389.5 T
5 11 Q
(dgscall.c, dgscall.h) 144 370.67 T
2 12 Q
(server call handle management) 216 358 T
5 11 Q
(dgsct.c, dgsct.h) 144 339.17 T
2 12 Q
(server connection table management) 216 326.5 T
5 11 Q
(dgslive.c, dgslive.h) 144 307.67 T
2 12 Q
(server) 216 295 T
(-side liveness maintenance routines) 245.06 295 T
5 11 Q
(dgslsn.c, dgslsn.h) 144 276.17 T
2 12 Q
(server) 216 263.5 T
(-side listener thread routines) 245.06 263.5 T
5 11 Q
(dgsoc.c, dgsoc.h) 144 244.67 T
2 12 Q
(low-level datagram \050IP\051 socket manipulation) 216 232 T
5 11 Q
(dgutl.c, dgutl.h) 144 213.17 T
2 12 Q
(utility functions) 216 200.5 T
5 11 Q
(dgxq.c, dgxq.h) 144 181.67 T
2 12 Q
(transmit queue management) 216 169 T
299.57 138.78 108 138.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(Datagram RPC Packet Structur) 108 140.17 T
388.71 138.78 299.32 138.78 2 L
V
N
(e and Contents) 299.32 140.17 T
2 12 Q
-0.26 (The datagram RPC packet structures are de\336ned in) 144 119.5 P
5 11 Q
-0.57 (dg.h) 389.06 119.5 P
2 12 Q
-0.26 (. There are several packet) 415.43 119.5 P
(types that have specialized body structures intended to promote ef) 144 106 T
(\336cient process-) 460.55 106 T
(ing. The datagram RPC packet header is common to all packet types.) 144 92.5 T
FMENDPAGE
%%EndPage: "3" 104
%%Page: "4" 104
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-4) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
0 F
(Datagram RPC Packet T) 72 712 T
(ypes) 199.35 712 T
2 F
(Much packet processing is based on packet type. Packet types are associated with) 108 692 T
(call types, and call types are dictated by the needs of the dg RPC protocol. Each) 108 678.5 T
(packet type has an associated direction \050client-to-server) 108 665 T
(, server) 373.97 665 T
(-to-client\051. Figure) 409.02 665 T
(6-2 illustrates packet types and directions.) 108 651.5 T
4 F
(Figur) 170.98 632 T
(e 6-2:Datagram RPC Packet T) 197.85 632 T
(ypes and Dir) 345.53 632 T
(ections) 407.04 632 T
2 F
(Here are brief descriptions of the types:) 108 282.5 T
(Client-to-server) 108 263 T
5 11 Q
(request) 108 243.5 T
2 12 Q
(a \050partial\051 RPC, an interface\325) 180 243.5 T
(s \322in\323 ar) 318.22 243.5 T
(guments) 357.97 243.5 T
5 11 Q
(ping) 108 224 T
2 12 Q
(a request for information about how a server is progressing with) 180 224 T
(call execution.) 180 210.5 T
5 11 Q
(ack) 108 191 T
2 12 Q
(acknowledgment of packet receipt) 180 191 T
5 11 Q
(quit) 108 171.5 T
2 12 Q
(a request to stop work on a call \050roughly equivalent to an async) 180 171.5 T
(interrupt\051) 180 158 T
(Server) 108 138.5 T
(-to-client) 139.06 138.5 T
5 11 Q
(response) 108 119 T
2 12 Q
(a \050partial\051 RPC. an interface\325) 180 119 T
(s \322out\323 ar) 318.22 119 T
(guments) 363.97 119 T
5 11 Q
(fault) 108 99.5 T
2 12 Q
-0.17 (an indication that the call generated a synchronous fault during exe-) 180 99.5 P
(cution in the server) 180 86 T
108 304 504 628 C
158.66 584.41 M
 167.36 577.52 167.36 577.52 168.48 575.87 D
 169.61 574.21 169.61 574.21 174.15 583.61 D
 178.7 593 178.7 593 185.74 593.86 D
 192.77 594.71 192.77 594.71 197.75 586.17 D
 202.74 577.63 202.74 577.63 204.53 564.5 D
 206.31 551.37 206.31 551.37 211.27 555.11 D
 216.22 558.84 216.22 558.84 223.16 550.42 D
 230.1 542 230.1 542 232.3 521.73 D
 234.51 501.45 234.51 501.45 232.3 485.23 D
 230.1 469.01 230.1 469.01 234.04 455.49 D
 237.99 441.98 237.99 441.98 238.24 421.16 D
 238.5 400.34 238.5 400.34 234.4 385.63 D
 230.29 370.92 230.29 370.92 225.31 364.09 D
 220.33 357.26 220.33 357.26 213.62 362.45 D
 206.91 367.64 206.91 367.64 204.24 352.2 D
 201.57 336.76 201.57 336.76 193.94 325.65 D
 186.32 314.55 186.32 314.55 178.11 317.96 D
 169.9 321.38 169.9 321.38 165.44 336.06 D
 160.98 350.74 160.98 350.74 154.6 343.75 D
 148.21 336.76 148.21 336.76 144.11 340.17 D
 140 343.59 140 343.59 136.81 357.98 D
 133.61 372.37 133.61 372.37 127.43 369.08 D
 121.24 365.8 121.24 365.8 115.38 376.9 D
 109.51 388.01 109.51 388.01 108.34 406.8 D
 107.17 425.59 107.17 425.59 110.42 440.54 D
 113.66 455.49 113.66 455.49 110.53 467.66 D
 107.4 479.83 107.4 479.83 107.4 496.72 D
 107.4 513.61 107.4 513.61 113.32 527.68 D
 119.23 541.76 119.23 541.76 124.63 541.76 D
 130.04 541.76 130.04 541.76 132.67 557.13 D
 135.31 572.51 135.31 572.51 139.71 581.05 D
 144.11 589.59 144.11 589.59 147.04 590.44 D
 149.97 591.3 149.97 591.3 158.66 584.41 D
O
7 X
0 K
V
0.2 H
0 Z
0 X
N
6 8 Q
(rpc_c_dg_pt_) 257.11 579.46 T
9 F
(request) 305.55 579.46 T
6 F
(rpc_c_dg_pt_) 257.11 566.55 T
9 F
(ping) 305.55 566.55 T
6 F
(rpc_c_dg_pt_) 272.64 478.65 T
9 F
(response) 321.09 478.65 T
6 F
(rpc_c_dg_pt_) 272.64 465.73 T
9 F
(fault) 321.09 465.73 T
6 F
(rpc_c_dg_pt_) 272.64 452.82 T
9 F
(working) 321.09 452.82 T
6 F
(rpc_c_dg_pt_) 272.64 439.9 T
9 F
(nocall) 321.09 439.9 T
6 F
(rpc_c_dg_pt_) 272.64 426.99 T
9 F
(reject) 321.09 426.99 T
6 F
(rpc_c_dg_pt_) 257.11 553.63 T
9 F
(ack) 305.55 553.63 T
6 F
(rpc_c_dg_pt_) 257.11 540.72 T
9 F
(quit) 305.55 540.72 T
6 F
(rpc_c_dg_pt_) 271.93 353.33 T
9 F
(fack) 320.38 353.33 T
6 F
(rpc_c_dg_pt_) 272.64 414.07 T
9 F
(quack) 321.09 414.07 T
421.19 592.7 M
 430.56 585.84 430.56 585.84 431.77 584.19 D
 432.99 582.54 432.99 582.54 437.88 591.9 D
 442.78 601.26 442.78 601.26 450.36 602.11 D
 457.94 602.96 457.94 602.96 463.31 594.45 D
 468.68 585.95 468.68 585.95 470.61 572.87 D
 472.53 559.79 472.53 559.79 477.87 563.51 D
 483.21 567.23 483.21 567.23 490.69 558.84 D
 498.16 550.45 498.16 550.45 500.54 530.25 D
 502.91 510.06 502.91 510.06 500.54 493.9 D
 498.16 477.74 498.16 477.74 502.41 464.28 D
 506.66 450.81 506.66 450.81 506.94 430.08 D
 507.22 409.34 507.22 409.34 502.8 394.68 D
 498.37 380.03 498.37 380.03 493 373.22 D
 487.63 366.42 487.63 366.42 480.4 371.59 D
 473.17 376.76 473.17 376.76 470.3 361.38 D
 467.42 345.99 467.42 345.99 459.2 334.93 D
 450.99 323.87 450.99 323.87 442.15 327.27 D
 433.3 330.68 433.3 330.68 428.5 345.3 D
 423.69 359.93 423.69 359.93 416.81 352.96 D
 409.93 345.99 409.93 345.99 405.51 349.4 D
 401.08 352.8 401.08 352.8 397.64 367.14 D
 394.2 381.47 394.2 381.47 387.53 378.2 D
 380.87 374.92 380.87 374.92 374.55 385.99 D
 368.23 397.05 368.23 397.05 366.97 415.77 D
 365.71 434.49 365.71 434.49 369.2 449.38 D
 372.7 464.28 372.7 464.28 369.33 476.4 D
 365.96 488.52 365.96 488.52 365.96 505.35 D
 365.96 522.18 365.96 522.18 372.33 536.19 D
 378.7 550.21 378.7 550.21 384.52 550.21 D
 390.34 550.21 390.34 550.21 393.19 565.52 D
 396.03 580.84 396.03 580.84 400.77 589.35 D
 405.51 597.86 405.51 597.86 408.67 598.71 D
 411.82 599.56 411.82 599.56 421.19 592.7 D
O
7 X
V
0 X
N
315.89 592.46 315.89 624.63 362.06 560.29 315.89 495.94 315.89 528.11 5 L
2 Z
N
315.89 592.46 249.94 592.46 249.94 528.11 315.89 528.11 4 L
N
257.01 344.88 257.01 334.01 235.12 355.75 257.01 377.49 257.01 366.62 5 L
N
290.91 409.38 290.91 371.04 241.43 447.72 290.91 524.39 290.91 486.05 5 L
N
290.91 409.38 361.6 409.38 361.6 486.05 290.91 486.05 4 L
N
360.44 344.88 360.44 334.01 382.33 355.75 360.44 377.49 360.44 366.62 5 L
N
257.01 366.62 360.44 366.62 2 L
0.5 H
0 Z
N
257.01 344.88 360.44 344.88 2 L
N
10 F
(CLIENT) 156.86 466.6 T
(SERVER) 420.43 468.01 T
0 0 612 792 C
108 304 504 628 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "4" 105
%%Page: "5" 105
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-5) 524.01 34.67 T
5 11 Q
(working) 144 712 T
2 12 Q
(a response to a ping indicating that the server knows about a call) 216 712 T
(and is working on it) 216 698.5 T
5 11 Q
(nocall) 144 679 T
2 12 Q
-0.36 (a response to a ping indicating that the server has never heard of the) 216 679 P
(caller) 216 665.5 T
5 11 Q
(reject) 144 646 T
2 12 Q
(a response indicating that a call has been rejected) 216 646 T
5 11 Q
(quack) 144 626.5 T
2 12 Q
(\322quit acknowledge,\323 an acknowledgment of receipt of a quit) 216 626.5 T
(request) 216 613 T
(Bidirectional) 144 593.5 T
5 11 Q
(fack) 144 574 T
2 12 Q
(\322fragment acknowledge,\323 acknowledgment that a fragment has) 216 574 T
(been received) 216 560.5 T
0 F
(The Datagram RPC Packet Header) 108 541 T
2 F
(The datagram RPC packet header is de\336ned in) 144 521 T
5 11 Q
(dg.h) 369.84 521 T
2 12 Q
(. This structure, which we) 396.2 521 T
(illustrate inT) 144 507.5 T
(able 6-1, is set up so that all of a packet header) 204.79 507.5 T
(\325) 429.73 507.5 T
(s scalar data are natu-) 433.07 507.5 T
-0.04 (rally aligned on eight-byte boundaries, which in turn allows ef) 144 494 P
-0.04 (\336cient references to) 442.54 494 P
(header contents. The header itself is an integral multiple of eight bytes, as are the) 144 480.5 T
-0.05 (packet bodies of all packets except those carrying the last fragment of a request or) 144 467 P
-0.43 (response. This constraint ensures that no NDR scalar value will ever be split across) 144 453.5 P
(packet buf) 144 440 T
(fers, and allows the stub/runtime interface to reference packet contents) 194.07 440 T
(by simply returning pointers to the buf) 144 426.5 T
(fers in which they reside.) 329.01 426.5 T
-0.31 (Some provisions have been made in the datagram protocol service implementation) 144 407 P
(for maintaining these alignment rules in the face of an architecture that does not) 144 393.5 T
(permit addressing at this level \050i.e., is not \322byte-addressable\323\051. Such architectures) 144 380 T
FMENDPAGE
%%EndPage: "5" 106
%%Page: "6" 106
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-6) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(are referred to in the code as \322mispacked header\323 architectures, and are at least) 108 712 T
(partially supported.) 108 698.5 T
-0.28 (Figure 6-4 may help the reader visualize the way this structure appears in memory) 108 237 P
-0.28 (.) 498.28 237 P
(More detail on some of the \336elds appears below) 108 223.5 T
(.) 337.72 223.5 T
5 11 Q
(_rpc_vers) 108 204 T
2 12 Q
(RPC version number \050range 0>15\051. The DCE RPC accessor macro) 180 204 T
(that examines this \336eld \050) 180 190.5 T
5 11 Q
(RPC_DG_HDR_INQ_VERS) 297.93 190.5 T
2 12 Q
(\051 only examines) 423.17 190.5 T
(the low four bits, although the full eight-bit value is required for) 180 177 T
(NCS 1.5.1 compatibility) 180 163.5 T
(. The \322set\323 macro) 296.5 163.5 T
(\050) 180 150 T
5 11 Q
(RPC_DG_HDR_SET_VERS) 183.99 150 T
2 12 Q
(\051 sets the four high bits to zero.) 309.24 150 T
5 11 Q
(_ptype) 108 130.5 T
2 12 Q
(Packet type \050range 0-31\051.The DCE RPC accessor macro that exam-) 180 130.5 T
(ines this \336eld \050) 180 117 T
5 11 Q
(RPC_DG_HDR_INQ_PTYPE) 250.96 117 T
2 12 Q
(\051 only examines the low) 382.8 117 T
(\336ve bits, although the full eight-bit value is required for NCS 1.5.1) 180 103.5 T
(compatibility) 180 90 T
(. The \322set\323 macro) 243.19 90 T
(\050) 330.78 90 T
5 11 Q
(RPC_DG_HDR_SET_PTYPE) 334.77 90 T
2 12 Q
(\051 sets) 466.61 90 T
(the three high bits to zero.) 180 76.5 T
4 F
(T) 213.66 680.5 T
(able 6-1: rpc_dg_pkt_hdr_t structur) 219.23 680.5 T
(e) 393.01 680.5 T
7 11 Q
(rpc_dg_pkt_hdr_t {) 110 659.17 T
5 F
(_rpc_vers) 110 640.17 T
(/* RPC version */) 200 640.17 T
(_ptype) 110 621.17 T
(/* packet type \050request, response, ...\051 */) 200 621.17 T
(f) 110 602.17 T
(lags) 116.59 602.17 T
(/* packet f) 200 602.17 T
(lags */) 272.51 602.17 T
(f) 110 583.17 T
(lags2) 116.59 583.17 T
(/* more packet f) 200 583.17 T
(lags */) 305.47 583.17 T
(drep[3]) 110 564.17 T
(/* sender\325s data representation */) 200 564.17 T
(serial_hi) 110 545.17 T
(/* high byte of packet serial number */) 200 545.17 T
(object) 110 526.17 T
(/* object UUID */) 200 526.17 T
(if_id) 110 507.17 T
(/* interface UUID */) 200 507.17 T
(actuid) 110 488.17 T
(/* activity id \050UUID\051 */) 200 488.17 T
(server_boot) 110 469.17 T
(/* server boot time */) 200 469.17 T
(if_vers) 110 450.17 T
(/* interface version */) 200 450.17 T
(seq) 110 431.17 T
(/* sequence number of this packet */) 200 431.17 T
(opnum) 110 412.17 T
(/* operation number within interface */) 200 412.17 T
(ihint) 110 393.17 T
(/* interface hint \050help locate interface) 200 393.17 T
(within server\051 */) 200 380.17 T
(ahint) 110 361.17 T
(/* activity hint */) 200 361.17 T
(len) 110 342.17 T
(/* length of packet body */) 200 342.17 T
(fragnum) 110 323.17 T
(/* number of this fragment */) 200 323.17 T
(auth_proto) 110 304.17 T
(/* authentication protocol to use */) 200 304.17 T
(serial_lo) 110 285.17 T
(/* low byte of packet serial number */) 200 285.17 T
7 F
(}) 110 266.17 T
106.75 671.5 106.75 257.5 2 L
V
0.5 H
0 Z
N
109.25 669 109.25 260 2 L
V
N
196.75 651.25 196.75 277.75 2 L
V
N
199.25 651.25 199.25 277.75 2 L
V
N
502.75 669 502.75 260 2 L
V
N
505.25 671.5 505.25 257.5 2 L
V
N
106.5 671.75 505.5 671.75 2 L
V
N
109 669.25 503 669.25 2 L
V
N
109.5 651.5 502.5 651.5 2 L
V
N
109.5 632.5 502.5 632.5 2 L
V
N
109.5 613.5 502.5 613.5 2 L
V
N
109.5 594.5 502.5 594.5 2 L
V
N
109.5 575.5 502.5 575.5 2 L
V
N
109.5 556.5 502.5 556.5 2 L
V
N
109.5 537.5 502.5 537.5 2 L
V
N
109.5 518.5 502.5 518.5 2 L
V
N
109.5 499.5 502.5 499.5 2 L
V
N
109.5 480.5 502.5 480.5 2 L
V
N
109.5 461.5 502.5 461.5 2 L
V
N
109.5 442.5 502.5 442.5 2 L
V
N
109.5 423.5 502.5 423.5 2 L
V
N
109.5 404.5 502.5 404.5 2 L
V
N
109.5 372.5 502.5 372.5 2 L
V
N
109.5 353.5 502.5 353.5 2 L
V
N
109.5 334.5 502.5 334.5 2 L
V
N
109.5 315.5 502.5 315.5 2 L
V
N
109.5 296.5 502.5 296.5 2 L
V
N
109.5 277.5 502.5 277.5 2 L
V
N
109 259.75 503 259.75 2 L
V
N
106.5 257.25 505.5 257.25 2 L
V
N
FMENDPAGE
%%EndPage: "6" 107
%%Page: "7" 107
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-7) 524.01 34.67 T
5 11 Q
(f) 144 712 T
(lags) 150.59 712 T
2 12 Q
(Some combination of:) 216 712 T
(W) 216 512.5 T
(ith the exception of the call semantics \336elds \050) 226.84 512.5 T
5 11 Q
(maybe) 444.03 512.5 T
2 12 Q
(,) 476.99 512.5 T
5 11 Q
(idempo-) 482.99 512.5 T
(tent) 216 499 T
2 12 Q
(, and) 242.37 499 T
5 11 Q
(broadcast) 268.68 499 T
2 12 Q
(, shaded in the table above\051, any combina-) 328.01 499 T
(tion of \337ags can be logically ORed together to make) 216 485.5 T
5 11 Q
(f) 469.83 485.5 T
(lags) 476.42 485.5 T
2 12 Q
(. Each) 502.79 485.5 T
(\337ag is associated with a speci\336c call direction \050client-to-server) 216 472 T
(,) 515.3 472 T
(server) 216 458.5 T
3 F
(-) 245.3 458.5 T
2 F
(to-client\051. See Figure 6-3 for details.) 251.88 458.5 T
(\337ags2) 144 439 T
(Some combination of:) 216 439 T
5 11 Q
(rpc_c_dg_pf_) 222 692.67 T
(meaning) 330 692.67 T
(forwarded) 222 677.67 T
(packet was forwarded) 330 677.67 T
(last_frag) 222 662.67 T
-1.16 (packet is last fragment of this) 330 662.67 P
(call) 330 649.67 T
(frag) 222 634.67 T
(packet is a fragment of a call) 330 634.67 T
(no_fack) 222 619.67 T
(don\325t bother to send a fack) 330 619.67 T
-0.12 (packet acknowledging this frag-) 330 606.67 P
(ment.) 330 593.67 T
216.25 573 323.75 588 R
5 X
V
0 X
(maybe) 222 578.67 T
(call has maybe semantics) 330 578.67 T
216.25 558 323.75 573 R
5 X
V
0 X
(idempotent) 222 563.67 T
(call has idempotent semantics) 330 563.67 T
216.25 543 323.75 558 R
5 X
V
0 X
(broadcast) 222 548.67 T
(call has broadcast semantics) 330 548.67 T
(blast_outs) 222 533.67 T
(outs can be \322blasted.\323) 330 533.67 T
(rpc_c_dg_pf2_) 222 419.67 T
(meaning) 330 419.67 T
(forwarded2) 222 404.67 T
(packet was forwarded in two) 330 404.67 T
(pieces) 330 391.67 T
(cancel_pending) 222 376.67 T
(a cancel was pending at) 330 376.67 T
(call_end) 330 363.67 T
(reserved04) 222 348.67 T
(reserved) 330 348.67 T
(reserved08) 222 333.67 T
(reserved) 330 333.67 T
(reserved10) 222 318.67 T
(reserved) 330 318.67 T
(reserved20) 222 303.67 T
(reserved) 330 303.67 T
(reserved40) 222 288.67 T
(reserved) 330 288.67 T
(reserved0) 222 273.67 T
(reserved) 330 273.67 T
216 701.75 216 528.25 2 L
V
0.5 H
0 Z
N
324 702.25 324 527.75 2 L
V
N
540 701.75 540 528.25 2 L
V
N
215.75 702 540.25 702 2 L
V
N
216.25 688.25 539.75 688.25 2 L
V
N
216.25 685.75 539.75 685.75 2 L
V
N
215.75 528 540.25 528 2 L
V
N
216 428.75 216 268.25 2 L
V
N
324 429.25 324 267.75 2 L
V
N
540 428.75 540 268.25 2 L
V
N
215.75 429 540.25 429 2 L
V
N
216.25 415.25 539.75 415.25 2 L
V
N
216.25 412.75 539.75 412.75 2 L
V
N
215.75 268 540.25 268 2 L
V
N
FMENDPAGE
%%EndPage: "7" 108
%%Page: "8" 108
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-8) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 208.34 712 T
(e 6-3: Packet Flags and Dir) 235.22 712 T
(ections) 369.68 712 T
5 11 Q
(drep) 108 362.5 T
2 12 Q
(Data representation. The actual) 180 362.5 T
5 11 Q
(ndr_format_t) 332.87 362.5 T
2 12 Q
( type de\336ned in) 411.97 362.5 T
5 11 Q
(ndrp.h) 180 349 T
2 12 Q
( is a four) 219.55 349 T
(-byte value, two bytes of which are reserved \050and) 261.61 349 T
(unused in DCE 1.0.x\051. Only \050the low-order\051 three bytes of the) 180 335.5 T
5 11 Q
(ndr_format_t) 180 322 T
2 12 Q
( are present in the datagram RPC packet header) 259.1 322 T
(.) 486.26 322 T
5 11 Q
(serial_hi, serial_lo) 108 303.17 T
2 12 Q
(Packets associated with a given activity are serially numbered to) 180 290.5 T
(give the runtime a way to deal with retransmitted packets. The) 180 277 T
-0.13 (serial number of this packet is the 16-bit value obtained by concate-) 180 263.5 P
-0.02 (nating) 180 250 P
5 11 Q
-0.04 (serial_hi) 212.96 250 P
2 12 Q
-0.02 ( and) 272.29 250 P
5 11 Q
-0.04 (serial_lo) 295.57 250 P
2 12 Q
-0.02 (. \050The value is split in the data-) 354.89 250 P
(gram RPC packet header solely for alignment reasons.\051) 180 236.5 T
5 11 Q
(actuid) 108 217 T
2 12 Q
-0.25 (a UUID that uniquely de\336nes the activity \050roughly analogous to the) 180 217 P
(call and any related callbacks\051 with which this packet is associated.) 180 203.5 T
5 11 Q
(server_boot) 108 184.67 T
2 12 Q
(The boot time of the server in which this call is being executed.) 180 172 T
-0.09 (Each server records its boot time in a global value, which it applies) 180 158.5 P
(to all calls it services. Clients and servers use this value to distin-) 180 145 T
(guish between otherwise identical requests or responses. For exam-) 180 131.5 T
(ple, when a server is shut down and re-started, it may register) 180 118 T
(bindings that are identical to those registered by the shut-down) 180 104.5 T
(server instance. In such cases, examination of the) 180 91 T
5 11 Q
(boot_time) 419.81 91 T
2 12 Q
-0.22 (\336eld of an incoming packet reveals whether it is really part of a call) 180 77.5 P
108 384 504 708 C
6 8 Q
0 X
0 K
(rpc_c_dg_pf_) 250.44 655.3 T
9 F
(forwarded) 298.89 655.3 T
6 F
(rpc_c_dg_pf_) 250.44 623.21 T
9 F
(maybe) 298.89 623.21 T
6 F
(rpc_c_dg_pf_) 252.64 546.15 T
9 F
(cancel_pending) 301.09 546.15 T
6 F
(rpc_c_dg_pf_) 250.44 634.53 T
9 F
(idempotent) 298.89 634.53 T
6 F
(rpc_c_dg_pf_) 250.44 612.49 T
9 F
(broadcast) 298.89 612.49 T
6 F
(rpc_c_dg_pf_) 265.26 482.5 T
9 F
(last_frag) 313.71 482.5 T
255.11 455.45 255.11 435.67 233.04 475.23 255.11 514.78 255.11 495.01 5 L
0.2 H
2 Z
N
287.66 531.46 287.66 514.38 232.27 548.55 287.66 582.72 287.66 565.63 5 L
N
287.66 531.46 366.81 531.46 366.81 565.63 287.66 565.63 4 L
N
359.42 455.45 359.42 435.67 381.5 475.23 359.42 514.78 359.42 495.01 5 L
N
255.11 495.01 359.42 495.01 2 L
0.5 H
0 Z
N
255.11 455.45 359.42 455.45 2 L
N
152 664.41 M
 160.69 657.52 160.69 657.52 161.82 655.87 D
 162.95 654.21 162.95 654.21 167.49 663.61 D
 172.03 673 172.03 673 179.07 673.86 D
 186.1 674.71 186.1 674.71 191.09 666.17 D
 196.07 657.63 196.07 657.63 197.86 644.5 D
 199.65 631.37 199.65 631.37 204.6 635.11 D
 209.56 638.84 209.56 638.84 216.49 630.42 D
 223.43 622 223.43 622 225.64 601.73 D
 227.84 581.45 227.84 581.45 225.64 565.23 D
 223.43 549.01 223.43 549.01 227.38 535.49 D
 231.32 521.98 231.32 521.98 231.58 501.16 D
 231.84 480.34 231.84 480.34 227.73 465.63 D
 223.63 450.92 223.63 450.92 218.65 444.09 D
 213.66 437.26 213.66 437.26 206.95 442.45 D
 200.24 447.64 200.24 447.64 197.57 432.2 D
 194.9 416.76 194.9 416.76 187.28 405.65 D
 179.65 394.55 179.65 394.55 171.45 397.96 D
 163.24 401.38 163.24 401.38 158.78 416.06 D
 154.31 430.74 154.31 430.74 147.93 423.75 D
 141.54 416.76 141.54 416.76 137.44 420.17 D
 133.34 423.59 133.34 423.59 130.14 437.98 D
 126.94 452.37 126.94 452.37 120.76 449.08 D
 114.57 445.8 114.57 445.8 108.71 456.9 D
 102.85 468.01 102.85 468.01 101.68 486.8 D
 100.5 505.59 100.5 505.59 103.75 520.54 D
 107 535.49 107 535.49 103.86 547.66 D
 100.73 559.82 100.73 559.82 100.73 576.72 D
 100.73 593.62 100.73 593.62 106.65 607.68 D
 112.56 621.76 112.56 621.76 117.97 621.76 D
 123.37 621.76 123.37 621.76 126.01 637.13 D
 128.65 652.51 128.65 652.51 133.04 661.05 D
 137.44 669.59 137.44 669.59 140.37 670.44 D
 143.3 671.3 143.3 671.3 152 664.41 D
O
7 X
V
0.2 H
0 X
N
433.5 664.66 M
 442.19 657.77 442.19 657.77 443.32 656.12 D
 444.45 654.46 444.45 654.46 448.99 663.86 D
 453.53 673.25 453.53 673.25 460.57 674.11 D
 467.61 674.96 467.61 674.96 472.59 666.42 D
 477.57 657.88 477.57 657.88 479.36 644.75 D
 481.15 631.62 481.15 631.62 486.1 635.36 D
 491.06 639.09 491.06 639.09 498 630.67 D
 504.93 622.25 504.93 622.25 507.14 601.98 D
 509.34 581.7 509.34 581.7 507.14 565.48 D
 504.93 549.26 504.93 549.26 508.88 535.74 D
 512.82 522.23 512.82 522.23 513.08 501.41 D
 513.34 480.59 513.34 480.59 509.23 465.88 D
 505.13 451.17 505.13 451.17 500.14 444.34 D
 495.16 437.51 495.16 437.51 488.45 442.7 D
 481.74 447.89 481.74 447.89 479.07 432.45 D
 476.4 417.01 476.4 417.01 468.78 405.9 D
 461.15 394.8 461.15 394.8 452.95 398.21 D
 444.74 401.63 444.74 401.63 440.28 416.31 D
 435.82 430.99 435.82 430.99 429.43 424 D
 423.05 417.01 423.05 417.01 418.94 420.42 D
 414.84 423.84 414.84 423.84 411.64 438.23 D
 408.45 452.62 408.45 452.62 402.26 449.33 D
 396.07 446.05 396.07 446.05 390.21 457.15 D
 384.35 468.26 384.35 468.26 383.17 487.05 D
 382 505.84 382 505.84 385.25 520.79 D
 388.5 535.74 388.5 535.74 385.37 547.91 D
 382.23 560.07 382.23 560.07 382.23 576.97 D
 382.23 593.87 382.23 593.87 388.15 607.93 D
 394.06 622.01 394.06 622.01 399.47 622.01 D
 404.87 622.01 404.87 622.01 407.51 637.38 D
 410.15 652.76 410.15 652.76 414.54 661.3 D
 418.94 669.84 418.94 669.84 421.87 670.69 D
 424.8 671.55 424.8 671.55 433.5 664.66 D
O
7 X
V
0 X
N
315.2 667.1 315.2 698.8 372.69 635.39 315.2 571.98 315.2 603.69 5 L
2 Z
N
315.2 667.1 233.06 667.1 233.06 603.69 315.2 603.69 4 L
N
6 F
(rpc_c_dg_pf_) 251.09 644.91 T
9 F
(forwarded2) 299.53 644.91 T
6 F
(rpc_c_dg_pf_) 265.26 473.2 T
9 F
(frag) 313.71 473.2 T
6 F
(rpc_c_dg_pf_) 266.1 463.05 T
9 F
(no_fack) 314.54 463.05 T
10 F
(CLIENT) 153.38 539.5 T
(SERVER) 428.38 538.37 T
0 0 612 792 C
108 384 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "8" 109
%%Page: "9" 109
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-9) 524.01 34.67 T
2 F
(that this server instance should execute.) 216 712 T
5 11 Q
(if_vers) 144 692.5 T
2 12 Q
(Interface version \050see page 3-32\051) 216 692.5 T
5 11 Q
(seq) 144 673 T
2 12 Q
(Sequence number within activity of the call with which this packet) 216 673 T
(is associated.) 216 659.5 T
5 11 Q
(ihint) 144 640 T
2 12 Q
(Interface hint \050see page 3-32\051) 216 640 T
5 11 Q
(ahint) 144 620.5 T
2 12 Q
(Activity hint, used as an index into the server connection table) 216 620.5 T
5 11 Q
(len) 144 601 T
2 12 Q
(length of packet body) 216 601 T
5 11 Q
(fragnum) 144 581.5 T
2 12 Q
(in request packets, this represents the call fragment contained in) 216 581.5 T
(this packet. In fack packets, this represents the number of the high-) 216 568 T
(est in-order packet seen by the sender \050) 216 554.5 T
5 11 Q
(0xffff) 403.51 554.5 T
2 12 Q
( if no packets have) 443.06 554.5 T
(been seen yet\051. Set in) 216 541 T
5 11 Q
(rpc__dg_xmitq_elt_xmit) 321.25 541 T
2 12 Q
(.) 466.27 541 T
4 F
(Figur) 219.97 521.5 T
(e 6-4: Datagram RPC Packet Header Layout) 246.85 521.5 T
0 F
(Specialized Packet Body T) 108 172 T
(ypes) 242.71 172 T
2 F
(DCE datagram RPC de\336nes body structures for four specialized packet types. For) 144 152 T
-0.07 (all other packet types, the body is simply an eight-byte aligned octet string \050on the) 144 138.5 P
(wire\051. The specialized body types are:) 144 125 T
(error) 144 105.5 T
-0.26 (Error packet bodies, used in reject and fault packet types, consist of) 216 105.5 P
(a 32-bit error status \050four octets on the wire\051.) 216 92 T
144 193.5 540 517.5 C
340.25 215.9 380.97 230.9 R
8 X
0 K
V
0.5 H
0 Z
0 X
N
344.04 219.53 377.25 227.57 R
7 X
V
0 X
N
177.39 333.5 218.11 348.5 R
4 X
V
0 X
N
177.39 392.3 218.11 407.3 R
5 X
V
0 X
N
177.39 451.1 218.11 466.1 R
6 X
V
0 X
N
6 8 Q
(object) 185.47 455.95 T
218.11 451.1 258.82 466.1 R
6 X
V
0 X
N
258.82 451.1 299.54 466.1 R
6 X
V
0 X
N
299.54 451.1 340.25 466.1 R
6 X
V
0 X
N
340.25 451.1 380.97 466.1 R
6 X
V
0 X
N
380.97 451.1 421.68 466.1 R
6 X
V
0 X
N
421.68 451.1 462.4 466.1 R
6 X
V
0 X
N
462.4 451.1 503.11 466.1 R
6 X
V
0 X
N
177.39 421.7 218.11 436.7 R
6 X
V
0 X
N
218.11 421.7 258.82 436.7 R
6 X
V
0 X
N
258.82 421.7 299.54 436.7 R
6 X
V
0 X
N
299.54 421.7 340.25 436.7 R
6 X
V
0 X
N
340.25 421.7 380.97 436.7 R
6 X
V
0 X
N
380.97 421.7 421.68 436.7 R
6 X
V
0 X
N
421.68 421.7 462.4 436.7 R
6 X
V
0 X
N
462.4 421.7 503.11 436.7 R
6 X
V
0 X
N
(_rpc_vers) 179.86 486 T
(_ptype) 227.73 485.81 T
(\337ags) 271.18 485.14 T
(\337ags2) 308.14 484.94 T
(serial_hi) 468.86 485.54 T
(if_id) 187.61 396.82 T
(actuid) 186 337.15 T
(fragnum) 345.82 221.41 T
(auth_proto) 423.79 220.68 T
(serial_lo) 467.82 220.48 T
177.39 480.5 218.11 495.5 R
N
218.11 480.5 258.82 495.5 R
N
258.82 480.5 299.54 495.5 R
N
299.54 480.5 340.25 495.5 R
N
340.25 480.5 380.97 495.5 R
13 X
V
0 X
N
380.97 480.5 421.68 495.5 R
13 X
V
0 X
N
421.68 480.5 462.4 495.5 R
13 X
V
0 X
N
462.4 480.5 503.11 495.5 R
N
218.11 392.3 258.82 407.3 R
5 X
V
0 X
N
258.82 392.3 299.54 407.3 R
5 X
V
0 X
N
299.54 392.3 340.25 407.3 R
5 X
V
0 X
N
340.25 392.3 380.97 407.3 R
5 X
V
0 X
N
380.97 392.3 421.68 407.3 R
5 X
V
0 X
N
421.68 392.3 462.4 407.3 R
5 X
V
0 X
N
462.4 392.3 503.11 407.3 R
5 X
V
0 X
N
177.39 362.9 218.11 377.9 R
5 X
V
0 X
N
218.11 362.9 258.82 377.9 R
5 X
V
0 X
N
258.82 362.9 299.54 377.9 R
5 X
V
0 X
N
299.54 362.9 340.25 377.9 R
5 X
V
0 X
N
340.25 362.9 380.97 377.9 R
5 X
V
0 X
N
380.97 362.9 421.68 377.9 R
5 X
V
0 X
N
421.68 362.9 462.4 377.9 R
5 X
V
0 X
N
462.4 362.9 503.11 377.9 R
5 X
V
0 X
N
218.11 333.5 258.82 348.5 R
4 X
V
0 X
N
258.82 333.5 299.54 348.5 R
4 X
V
0 X
N
299.54 333.5 340.25 348.5 R
4 X
V
0 X
N
340.25 333.5 380.97 348.5 R
4 X
V
0 X
N
380.97 333.5 421.68 348.5 R
4 X
V
0 X
N
421.68 333.5 462.4 348.5 R
4 X
V
0 X
N
462.4 333.5 503.11 348.5 R
4 X
V
0 X
N
177.39 304.1 218.11 319.1 R
4 X
V
0 X
N
218.11 304.1 258.82 319.1 R
4 X
V
0 X
N
258.82 304.1 299.54 319.1 R
4 X
V
0 X
N
299.54 304.1 340.25 319.1 R
4 X
V
0 X
N
340.25 304.1 380.97 319.1 R
4 X
V
0 X
N
380.97 304.1 421.68 319.1 R
4 X
V
0 X
N
421.68 304.1 462.4 319.1 R
4 X
V
0 X
N
462.4 304.1 503.11 319.1 R
4 X
V
0 X
N
177.39 274.7 218.11 289.7 R
3 X
V
0 X
N
218.11 274.7 258.82 289.7 R
3 X
V
0 X
N
258.82 274.7 299.54 289.7 R
3 X
V
0 X
N
299.54 274.7 340.25 289.7 R
3 X
V
0 X
N
340.25 274.7 380.97 289.7 R
1 X
V
0 X
N
380.97 274.7 421.68 289.7 R
1 X
V
0 X
N
421.68 274.7 462.4 289.7 R
1 X
V
0 X
N
462.4 274.7 503.11 289.7 R
1 X
V
0 X
N
177.39 245.3 218.11 260.3 R
12 X
V
0 X
N
218.11 245.3 258.82 260.3 R
12 X
V
0 X
N
258.82 245.3 299.54 260.3 R
12 X
V
0 X
N
299.54 245.3 340.25 260.3 R
12 X
V
0 X
N
340.25 245.3 380.97 260.3 R
10 X
V
0 X
N
380.97 245.3 421.68 260.3 R
10 X
V
0 X
N
421.68 245.3 462.4 260.3 R
11 X
V
0 X
N
462.4 245.3 503.11 260.3 R
11 X
V
0 X
N
177.39 215.9 218.11 230.9 R
9 X
V
0 X
N
218.11 215.9 258.82 230.9 R
9 X
V
0 X
N
258.82 215.9 299.54 230.9 R
14 X
V
0 X
N
299.54 215.9 340.25 230.9 R
14 X
V
0 X
N
380.97 215.9 421.68 230.9 R
8 X
V
0 X
N
421.68 215.9 462.4 230.9 R
N
462.4 215.9 503.11 230.9 R
N
(0) 164.2 483.46 T
(8) 164.2 453.64 T
(16) 159.75 424.18 T
(32) 159.75 367.01 T
(48) 159.75 307.53 T
(64) 159.75 249.29 T
(24) 159.75 396.86 T
(40) 159.75 338.46 T
(56) 159.75 278.28 T
(72) 159.75 219.35 T
346.89 482.93 369.93 493.11 R
7 X
V
0 X
(drep) 349.93 486.17 T
182.79 278.46 229.93 285.96 R
7 X
V
0 X
N
344.57 277.39 379.93 285.43 R
7 X
V
0 X
N
181.18 247.93 208.5 256.5 R
7 X
V
0 X
N
344.57 246.85 381 255.96 R
7 X
V
0 X
N
426 247.46 457.07 254.96 R
7 X
V
0 X
N
183.32 219.35 212.25 226.32 R
7 X
V
0 X
N
264.22 219.53 292.07 226.5 R
7 X
V
0 X
N
(server_boot) 184.93 279.28 T
(if_vers) 348.86 278.9 T
(seq) 185.47 250.12 T
(opnum) 348.86 249.35 T
(ihint) 430.29 249.05 T
(ahint) 187.61 220.74 T
(len) 267.43 220.54 T
0 0 612 792 C
144 193.5 540 517.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "9" 110
%%Page: "10" 110
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-10) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(quit) 106.12 712 T
(Quit packet bodies are used in cancel requests, and consist of a 32-) 178.12 712 T
(bit quit body format version identi\336er and a 32-bit cancel-request) 178.12 698.5 T
(event identi\336er) 178.12 685 T
(.) 249.75 685 T
(quack) 106.12 665.5 T
-0.01 (Quack packet bodies consist of a 32-bit quack body format version) 178.12 665.5 P
(identi\336er) 178.12 652 T
(, a 32-bit cancel-request identi\336er) 220.95 652 T
(, and a boolean that indi-) 382.01 652 T
(cates whether or not the server is accepting cancels. A cancel) 178.12 638.5 T
(request generates a quit packet for a given cancel event id, the) 178.12 625 T
(response generates a quack packet with the same cancel event id.) 178.12 611.5 T
(fack) 106.12 592 T
-0.03 (Fack packet bodies \050see T) 178.12 592 P
-0.03 (able 6-2\051 include information intended to) 301.75 592 P
(help a sender optimize transmission rates for future transmissions,) 178.12 578.5 T
(as well as packet serialization information on which clients and) 178.12 565 T
(servers base their decisions on whether and when to retransmit.) 178.12 551.5 T
(Fack packet bodies are also used in) 178.12 532 T
5 11 Q
(nocall) 350.33 532 T
2 12 Q
( packets as of) 389.88 532 T
(DCE1.0.2. In earlier versions of DCE RPC,) 178.12 142 T
5 11 Q
(nocall) 390.32 142 T
2 12 Q
( packets have) 429.88 142 T
(zero-length bodies.) 178.12 128.5 T
4 F
(T) 234.47 514 T
(able 6-2: rpc_dg_fackpkt_body_t structur) 240.03 514 T
(e) 440.46 514 T
7 11 Q
(rpc_dg_fackpkt_body_t) 180.12 492.67 T
5 F
( {) 318.55 492.67 T
(vers) 180.12 473.67 T
(/* version of fack packet body) 288.12 473.67 T
(*/) 288.12 460.67 T
(pad1) 180.12 441.67 T
(/* alignment padding */) 288.12 441.67 T
(window_size) 180.12 422.67 T
(/* the receiver\325s advertised) 288.12 422.67 T
(window size */) 288.12 409.67 T
(max_tsdu) 180.12 390.67 T
(/* largest transport service) 288.12 390.67 T
(data unit \050packet\051. No packet) 288.12 377.67 T
(larger than this can be pro-) 288.12 364.67 T
(cessed by the receiver */) 288.12 351.67 T
(max_path_tpdu) 180.12 332.67 T
(/* largest transport protocol) 288.12 332.67 T
(data unit. Packets larger than) 288.12 319.67 T
(this will be subject to fragmen-) 288.12 306.67 T
(tation at the transport level */) 288.12 293.67 T
(serial_num) 180.12 274.67 T
(/* serial number of the packet) 288.12 274.67 T
(that this fack acknowledges */) 288.12 261.67 T
(selack_len) 180.12 242.67 T
(/* number of elements in the) 288.12 242.67 T
(selack array */) 288.12 229.67 T
(selack[1]) 180.12 210.67 T
-0.92 (/* array of 32-bit selective ack) 288.12 210.67 P
(masks */) 288.12 197.67 T
7 F
(}) 180.12 178.67 T
176.88 505 176.88 170 2 L
V
0.5 H
0 Z
N
179.38 502.5 179.38 172.5 2 L
V
N
284.88 484.75 284.88 190.25 2 L
V
N
287.38 484.75 287.38 190.25 2 L
V
N
500.88 502.5 500.88 172.5 2 L
V
N
503.38 505 503.38 170 2 L
V
N
176.62 505.25 503.62 505.25 2 L
V
N
179.12 502.75 501.12 502.75 2 L
V
N
179.62 485 500.62 485 2 L
V
N
179.62 453 500.62 453 2 L
V
N
179.62 434 500.62 434 2 L
V
N
179.62 402 500.62 402 2 L
V
N
179.62 344 500.62 344 2 L
V
N
179.62 286 500.62 286 2 L
V
N
179.62 254 500.62 254 2 L
V
N
179.62 222 500.62 222 2 L
V
N
179.62 190 500.62 190 2 L
V
N
179.12 172.25 501.12 172.25 2 L
V
N
176.62 169.75 503.62 169.75 2 L
V
N
FMENDPAGE
%%EndPage: "10" 111
%%Page: "11" 111
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-11) 518.02 34.67 T
(Figur) 249.96 712 T
(e 6-5: Specialized Packet Bodies) 276.83 712 T
2 F
(forwarded) 144 424.38 T
(Forwarded packets include a \322subheader\323 inserted between the) 216 424.38 T
-0.33 (packet header and the original packet body) 216 410.88 P
-0.33 (. The subheader includes) 419.08 410.88 P
(the address and data representation of the original sender of the) 216 397.38 T
-0.04 (packet. The receiver of a forwarded packet uses this information to) 216 383.88 P
(establish contact with the original sender) 216 370.38 T
(. See page 7-16 for more) 411.54 370.38 T
(on forwarding.) 216 356.88 T
176.79 326.66 108 326.66 2 L
V
1.33 H
0 Z
N
0 14 Q
(Flow Contr) 108 328.04 T
187.42 326.66 176.53 326.66 2 L
V
N
(ol) 176.53 328.04 T
2 12 Q
(Since a fair amount of the datagram protocol service\325) 144 307.38 T
(s data structure real estate is) 399.14 307.38 T
0 (occupied by information pertaining to \337ow control, it makes sense to digress for a) 144 293.88 P
(few pages here in an attempt to illuminate some of the guiding principals behind) 144 280.38 T
(the datagram RPC \337ow control methods and how those principals are put into) 144 266.88 T
(practice in the DCE 1.0.) 144 253.38 T
4 F
(x) 259.92 253.38 T
2 F
( RPC implementation.) 265.24 253.38 T
(V) 144 233.88 T
(iewed at the highest level, the datagram RPC protocol attempts to maintain an) 151.94 233.88 T
(ef) 144 220.38 T
(\336cient, reliable logical connection between a client and a server using some) 153.1 220.38 T
-0.17 (underlying datagram protocol which, by de\336nition, does not provide reliable deliv-) 144 206.88 P
(ery of data. Doing this requires the datagram RPC protocol service to provide\321at) 144 193.38 T
(a minimum\321for acknowledgment of datagram receipt, along with the ability to) 144 179.88 T
(detect and retransmit lost datagrams and weed out retransmitted duplicates.) 144 166.38 T
(Datagram RPC \337ow control draws heavily on the TCP protocol described in Inter-) 144 146.88 T
(net RFC 793, and makes use of several modi\336cations to the base TCP design sug-) 144 133.38 T
(gested by Jacobson [\322Congestion A) 144 119.88 T
(voidance and Control,\323) 314.33 119.88 T
4 F
(Pr) 428.92 119.88 T
(oceedings of ACM) 440.46 119.88 T
(SIGCOMM \32588) 144 106.38 T
2 F
(]) 218.27 106.38 T
1 F
(.) 222.27 106.38 T
2 F
(That is to say) 228.27 106.38 T
(, it includes the notion of a receiver) 291.78 106.38 T
(\325) 462.1 106.38 T
(s advertised) 465.43 106.38 T
(window size \050the amount of data that the receiver is able to buf) 144 92.88 T
(fer\051 and a conges-) 446.22 92.88 T
-0.08 (tion window of variable size that is part of the per) 144 79.38 P
-0.08 (-connection state. Of course, the) 382.17 79.38 P
140.25 445.88 540 708 C
6 8 Q
0 X
0 K
(error) 158.25 690 T
(quit) 158.25 659.84 T
(quack) 158.25 624.67 T
(fack) 158.25 574.51 T
(forwarded) 158.25 508.63 T
203.5 685.06 244.22 700.06 R
0.5 H
0 Z
N
244.22 685.06 284.93 700.06 R
N
284.93 685.06 325.65 700.06 R
N
325.64 685.06 366.36 700.06 R
N
203.5 652.06 244.22 667.06 R
N
244.22 652.06 284.93 667.06 R
N
284.93 652.06 325.65 667.06 R
N
325.64 652.06 366.36 667.06 R
N
366.36 652.06 407.07 667.06 R
6 X
V
0 X
N
407.07 652.06 447.79 667.06 R
6 X
V
0 X
N
447.79 652.06 488.5 667.06 R
6 X
V
0 X
N
488.5 652.06 529.22 667.06 R
6 X
V
0 X
N
203.5 484.34 244.22 499.34 R
N
244.22 484.34 284.93 499.34 R
N
284.93 484.34 325.65 499.34 R
N
325.64 484.34 366.36 499.34 R
N
366.36 484.34 407.07 499.34 R
N
407.07 484.34 447.79 499.34 R
N
447.79 484.34 488.5 499.34 R
N
488.5 484.34 529.22 499.34 R
N
203.5 619.05 244.22 634.05 R
N
244.22 619.05 284.93 634.05 R
N
284.93 619.05 325.65 634.05 R
N
325.64 619.05 366.36 634.05 R
N
366.36 619.05 407.07 634.05 R
6 X
V
0 X
N
407.07 619.05 447.79 634.05 R
6 X
V
0 X
N
447.79 619.05 488.5 634.05 R
6 X
V
0 X
N
488.5 619.05 529.22 634.05 R
6 X
V
0 X
N
203.5 568.91 244.22 583.91 R
N
244.22 568.91 284.93 583.91 R
N
284.93 568.91 325.65 583.91 R
6 X
V
0 X
N
325.64 568.91 366.36 583.91 R
6 X
V
0 X
N
366.36 568.91 407.07 583.91 R
5 X
V
0 X
N
407.07 568.91 447.79 583.91 R
5 X
V
0 X
N
447.79 568.91 488.5 583.91 R
5 X
V
0 X
N
488.5 568.91 529.22 583.91 R
5 X
V
0 X
N
203.5 501.63 244.22 516.63 R
N
244.22 501.63 284.93 516.63 R
N
284.93 501.63 325.65 516.63 R
N
325.64 501.63 366.36 516.63 R
N
366.36 501.63 407.07 516.63 R
N
407.07 501.63 447.79 516.63 R
N
447.79 501.63 488.5 516.63 R
N
488.5 501.63 529.22 516.63 R
N
203.65 601.63 244.36 616.63 R
5 X
V
0 X
N
(status) 213.75 690.21 T
(vers) 214.29 656.26 T
(cancel_id) 369.65 658.21 T
(server_is_accepting) 207.32 606.58 T
(vers) 212.65 623.08 T
203.64 552.2 244.36 567.2 R
4 X
V
0 X
N
244.36 552.2 285.07 567.2 R
4 X
V
0 X
N
285.07 552.2 325.79 567.2 R
4 X
V
0 X
N
325.79 552.2 366.5 567.2 R
4 X
V
0 X
N
366.5 552.2 407.22 567.2 R
2 X
V
0 X
N
407.22 552.2 447.93 567.2 R
2 X
V
0 X
N
447.93 552.2 488.65 567.2 R
13 X
V
0 X
N
488.65 552.2 529.36 567.2 R
13 X
V
0 X
N
203.07 535.63 243.79 550.63 R
14 X
V
0 X
N
243.79 535.63 284.5 550.63 R
14 X
V
0 X
N
284.5 535.63 325.22 550.63 R
14 X
V
0 X
N
325.22 535.63 365.93 550.63 R
14 X
V
0 X
N
(vers) 213.75 572.89 T
(pad1) 255.54 573.23 T
(window_size) 297.32 573.03 T
(max_tsdu) 371.25 572.29 T
(max_path_tpdu) 205.18 556.55 T
(serial_num) 368.04 557.43 T
(selack_len) 450 557.76 T
(selack[1]) 208.4 540.96 T
(cancel_id) 369.07 623.42 T
(len) 212.14 506.46 T
(addr) 377.68 506.26 T
(drep) 376.61 488.38 T
204 467.17 244.72 482.17 R
N
244.72 467.17 285.43 482.17 R
N
285.43 467.17 326.15 482.17 R
N
8 F
(original packet body) 231.88 472 T
355.43 476.66 360.63 473.66 355.43 470.66 3 L
1 H
3 X
N
305.48 473.66 360.63 473.66 2 L
N
366.28 534.92 407 549.92 R
0.5 H
8 X
N
407 534.92 447.71 549.92 R
N
447.71 534.92 488.43 549.92 R
N
488.43 534.92 529.14 549.92 R
N
6 F
0 X
(\050selack[2] ...\051) 382.88 539.5 T
0 0 612 792 C
140.25 445.88 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "11" 112
%%Page: "12" 112
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-12) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.29 (idea of per) 108 712 P
-0.29 (-connection state has to be coerced somewhat into applicability to a con-) 158.46 712 P
(nectionless protocol, but by substituting the word \322call\323 for the word \322connec-) 108 698.5 T
-0.19 (tion,\323 most of other concepts can be made to fall into place. Speci\336cally) 108 685 P
-0.19 (, datagram) 450.75 685 P
(RPC \337ow control is based on the TCP protocol\325) 108 671.5 T
(s idea of a transmission queue of) 337.22 671.5 T
(sequentially numbered elements that includes two elements of particular interest:) 108 658 T
(\245) 108 638.5 T
(an element with the highest sequence number transmitted but not yet acknowl-) 126 638.5 T
(edged. \050This element is referred to as) 126 625 T
5 11 Q
(UNA) 307.18 625 T
2 12 Q
( in RFC 793, where it is simply a) 326.96 625 T
-0.24 (byte. Its analogue in datagram RPC is the) 126 611.5 P
5 11 Q
-0.53 (head) 326.28 611.5 P
2 12 Q
-0.24 ( element of the transmit queue.\051) 352.65 611.5 P
(\245) 108 592 T
-0.43 (an element that is the next in sequence to send. \050RFC 793\325) 126 592 P
-0.43 (s) 400.43 592 P
5 11 Q
-0.94 (NXT) 407.66 592 P
2 12 Q
-0.43 ( element, and is) 427.44 592 P
(analogous to the) 126 578.5 T
5 11 Q
(f) 207.62 578.5 T
(irst_unsent) 214.21 578.5 T
2 12 Q
( element of the datagram RPC transmit) 286.72 578.5 T
(queue.\051) 126 565 T
(Given this layout, some number of additional queue elements can be sent before) 108 545.5 T
(the) 108 532 T
5 11 Q
(UNA/head) 125.65 532 T
2 12 Q
( is acknowledged. The total of these elements is based on the) 178.39 532 T
(\322receive window\323 advertised by the receiver) 108 518.5 T
(. If there are more elements in the) 320.81 518.5 T
(queue, they cannot be sent until after) 108 505 T
5 11 Q
(UNA/head) 287.86 505 T
2 12 Q
( is acknowledged. The datagram) 340.6 505 T
(RPC protocol service constrains the number of elements actually sent using a) 108 491.5 T
(\322slow start\323 algorithm as much like the one described by Jacobson. As illustrated) 108 478 T
-0.23 (in Figure 6-6, the initial transmission in a call consists of one packet. On receipt of) 108 464.5 P
(the \336rst fack from the receiver) 108 451 T
(, the sender doubles the size of the congestion win-) 253.06 451 T
(dow) 108 437.5 T
(. This process continues until either the maximum receive window size is) 127.87 437.5 T
(reached or packet loss is detected.) 108 424 T
FMENDPAGE
%%EndPage: "12" 113
%%Page: "13" 113
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-13) 518.02 34.67 T
(Figur) 245.16 712 T
(e 6-6: Congestion W) 272.04 712 T
(indow Gr) 370.31 712 T
(owth) 415.51 712 T
2 F
(Data loss \050or lack of it\051 during transmission has a lot to do with the \337ow control) 144 362.5 T
(strategy) 144 349 T
(. Datagram RPC manages \337ow control in a TCP-like manner under low/) 181.19 349 T
-0.14 (no-loss conditions. As things begin to get more \322lossy\323 \050that is to say) 144 335.5 P
-0.14 (, as more and) 473.63 335.5 P
(more packets start getting lost in transmission\051, the strategy diver) 144 322 T
(ges somewhat) 456.92 322 T
(from that employed by TCP) 144 308.5 T
(.) 277.26 308.5 T
0 F
(Flow Contr) 108 289 T
(ol on an Err) 166.74 289 T
(or) 228.83 289 T
(-Fr) 239.71 289 T
(ee Connection) 256.14 289 T
2 F
-0.31 (The runtime maintains, in the transmit queue structure, \337ow-control-related values) 144 269 P
-0.18 (for \050among other things\051 the receiver) 144 255.5 P
-0.18 (\325) 320.39 255.5 P
-0.18 (s advertised receive window) 323.72 255.5 P
-0.18 (, the current con-) 458.62 255.5 P
(gestion window size, and the number of fragments \050queue elements\051 that have) 144 242 T
(been sent but not yet acknowledged. W) 144 228.5 T
(ith every incoming fack, we dequeue the) 332.38 228.5 T
(acknowledged fragments) 144 215 T
1 F
(,) 264.23 215 T
2 F
(slide the remaining queue elements \322to the left,\323 and) 270.23 215 T
(increase the congestion window by twice the number of elements dequeued. As a) 144 201.5 T
(result, the actual congestion window always equals the nominal congestion win-) 144 188 T
(dow size plus the number of fragments sent but unacknowledged.) 144 174.5 T
(This division of the actual \322next send count\323 into two parts allows better manage-) 144 155 T
-0.03 (ment of situations in which back-to-back facks are received. It also allows the run-) 144 141.5 P
(time to take advantage of a selective acknowledgment algorithm that improves) 144 128 T
(performance but can result in a transmit queue that does not consist of contiguous) 144 114.5 T
(blocks of data.) 144 101 T
144 384 540 708 C
271.64 651.96 289.86 670.18 R
6 X
0 K
V
0.5 H
0 Z
0 X
N
289.86 651.96 308.07 670.18 R
N
308.07 651.96 326.29 670.18 R
N
326.29 651.96 344.5 670.18 R
N
344.5 651.96 362.72 670.18 R
N
362.72 651.96 380.93 670.18 R
N
380.93 651.96 399.14 670.18 R
N
399.14 651.96 417.36 670.18 R
N
417.36 651.96 435.57 670.18 R
N
435.57 651.96 453.79 670.18 R
N
453.79 651.96 472 670.18 R
N
472 651.96 490.22 670.71 R
N
490.22 651.96 508.43 670.18 R
8 X
N
446.76 677.29 381.42 677.29 2 L
0.25 H
2 Z
0 X
N
180 270 17.82 10.89 381.16 688.16 A
0 90 7.68 4.51 446.76 672.77 A
279.95 677.29 345.29 677.29 2 L
N
270 360 17.82 10.89 345.52 688.16 A
90 180 7.67 4.51 279.95 672.77 A
6 8 Q
(1) 279.68 656.21 T
(2) 296.73 656.21 T
(3) 313.77 656.21 T
(4) 330.82 656.21 T
(5) 347.86 656.21 T
(6) 366.34 656.21 T
(7) 385.52 656.21 T
(8) 404.71 656.21 T
(9) 422.47 656.21 T
(10) 438.09 656.21 T
(1) 458.15 656.21 T
(1) 462.01 656.21 T
(12) 476.07 656.21 T
(13) 497.56 656.21 T
(16) 384.22 491.68 T
271.64 596.91 289.86 615.13 R
6 X
V
0.5 H
0 Z
0 X
N
289.86 596.91 308.07 615.13 R
6 X
V
0 X
N
308.07 596.91 326.29 615.13 R
N
326.29 596.91 344.5 615.13 R
N
344.5 596.91 362.72 615.13 R
N
362.72 596.91 380.93 615.13 R
N
380.93 596.91 399.14 615.13 R
N
399.14 596.91 417.36 615.13 R
N
417.36 596.91 435.57 615.13 R
N
435.57 596.91 453.79 615.13 R
N
453.79 596.91 472 615.13 R
N
472 596.78 490.22 615 R
N
490.22 596.78 508.43 615 R
8 X
N
446.76 622.66 381.42 622.66 2 L
0.25 H
2 Z
0 X
N
180 270 17.82 10.89 381.16 633.53 A
0 90 7.68 4.51 446.76 618.15 A
279.95 622.66 345.29 622.66 2 L
N
270 360 17.82 10.89 345.52 633.53 A
90 180 7.67 4.51 279.95 618.15 A
271.64 542.29 289.86 560.5 R
6 X
V
0.5 H
0 Z
0 X
N
289.86 542.29 308.07 560.5 R
6 X
V
0 X
N
308.07 542.29 326.29 560.5 R
6 X
V
0 X
N
326.29 542.29 344.5 560.5 R
6 X
V
0 X
N
344.5 542.29 362.72 560.5 R
N
362.72 542.29 380.93 560.5 R
N
380.93 542.29 399.14 560.5 R
N
399.14 542.29 417.36 560.5 R
N
417.36 542.29 435.57 560.5 R
N
435.57 542.29 453.79 560.5 R
N
453.79 542.29 472 560.5 R
N
472 542.28 490.22 560.5 R
N
490.22 542.28 508.43 560.5 R
8 X
N
446.76 568.04 381.42 568.04 2 L
0.25 H
2 Z
0 X
N
180 270 17.82 10.89 381.16 578.91 A
0 90 7.68 4.51 446.76 563.53 A
279.95 568.04 345.29 568.04 2 L
N
270 360 17.82 10.89 345.52 578.91 A
90 180 7.67 4.51 279.95 563.53 A
271.79 486.43 290 504.65 R
6 X
V
0.5 H
0 Z
0 X
N
290 486.43 308.22 504.65 R
6 X
V
0 X
N
308.22 486.43 326.43 504.65 R
6 X
V
0 X
N
326.43 486.43 344.64 504.65 R
6 X
V
0 X
N
344.64 486.43 362.86 504.65 R
6 X
V
0 X
N
362.86 486.43 381.07 504.65 R
6 X
V
0 X
N
381.07 486.43 399.29 504.65 R
6 X
V
0 X
N
399.29 486.43 417.5 504.65 R
6 X
V
0 X
N
417.5 486.43 435.72 504.65 R
N
435.72 486.43 453.93 504.65 R
N
453.93 486.43 472.15 504.65 R
N
472.15 486.43 490.36 504.64 R
N
490.36 486.43 508.57 504.64 R
8 X
N
446.9 512.18 381.57 512.18 2 L
0.25 H
2 Z
0 X
N
180 270 17.82 10.89 381.31 523.06 A
0 90 7.68 4.51 446.91 507.67 A
280.09 512.18 345.43 512.18 2 L
N
270 360 17.82 10.89 345.67 523.06 A
90 180 7.67 4.51 280.09 507.67 A
(2) 277.05 602.14 T
(3) 294.09 602.14 T
(4) 311.14 602.14 T
(5) 328.18 602.14 T
(6) 346.66 602.14 T
(7) 365.85 602.14 T
(8) 385.03 602.14 T
(9) 402.79 602.14 T
(10) 418.41 602.14 T
(1) 438.47 602.14 T
(1) 442.33 602.14 T
(12) 456.39 602.14 T
(13) 477.88 602.14 T
(6) 279.12 547.35 T
(7) 298.31 547.35 T
(8) 317.5 547.35 T
(9) 335.26 547.35 T
(10) 350.88 547.35 T
(1) 368.8 547.35 T
(1) 372.65 547.35 T
(12) 387.43 547.35 T
(13) 404.63 547.35 T
(10) 274.05 492.03 T
(1) 294.12 492.03 T
(1) 297.97 492.03 T
(12) 312.04 492.03 T
(13) 333.53 492.03 T
(17) 404.57 492.07 T
(18) 422.79 492.07 T
(19) 442.07 492.07 T
(20) 459.22 492.07 T
(21) 478.5 492.07 T
(22) 496.18 492.07 T
(14) 349.93 492.07 T
(15) 366.54 492.07 T
(16) 383.68 492.07 T
(17) 475.79 547.82 T
(18) 494 547.82 T
(14) 421.14 547.82 T
(15) 437.75 547.82 T
(16) 456.32 547.82 T
(14) 494.5 602.5 T
508.43 542.28 526.65 560.5 R
0.5 H
0 Z
8 X
N
508.43 651.96 526.65 670.18 R
N
508.43 596.78 526.65 615 R
N
508.57 486.43 526.79 504.64 R
N
9 12 Q
0 X
(\311) 512.25 493.78 T
(\311) 511.15 549.71 T
(\311) 512.72 604.03 T
(\311) 511.61 659.78 T
197.09 651.82 191.89 654.82 197.09 657.82 3 L
N
285.11 654.82 191.89 654.82 2 L
N
196.02 597.21 190.82 600.21 196.02 603.21 3 L
N
303.32 600.21 190.82 600.21 2 L
N
197.09 542.03 191.89 545.03 197.09 548.03 3 L
N
339.22 545.03 191.89 545.03 2 L
N
197.09 486.32 191.89 489.32 197.09 492.32 3 L
N
409.93 489.32 191.89 489.32 2 L
N
242.17 619.94 242.17 616.38 254.23 625.27 242.17 634.2 242.17 630.63 5 L
7 X
V
0.2 H
2 Z
0 X
N
242.17 619.94 232.48 619.94 232.48 630.63 242.17 630.63 4 L
7 X
V
0 X
N
6 8 Q
(fack) 234.5 622.89 T
242.17 564.8 242.17 561.23 254.23 570.13 242.17 579.05 242.17 575.48 5 L
7 X
V
0 X
N
242.17 564.8 232.48 564.8 232.48 575.48 242.17 575.48 4 L
7 X
V
0 X
N
(fack) 234.5 567.75 T
242.17 511.26 242.17 507.7 254.23 516.59 242.17 525.52 242.17 521.95 5 L
7 X
V
0 X
N
242.17 511.26 232.48 511.26 232.48 521.95 242.17 521.95 4 L
7 X
V
0 X
N
(fack) 234.5 514.21 T
(16) 382.04 433.86 T
269.61 428.61 287.82 446.82 R
6 X
V
0.5 H
0 Z
0 X
N
287.82 428.61 306.04 446.82 R
6 X
V
0 X
N
306.04 428.61 324.25 446.82 R
6 X
V
0 X
N
324.25 428.61 342.47 446.82 R
6 X
V
0 X
N
342.47 428.61 360.68 446.82 R
6 X
V
0 X
N
360.68 428.61 378.89 446.82 R
6 X
V
0 X
N
378.89 428.61 397.11 446.82 R
6 X
V
0 X
N
397.11 428.61 415.32 446.82 R
6 X
V
0 X
N
415.32 428.61 433.54 446.82 R
6 X
V
0 X
N
433.54 428.61 451.75 446.82 R
6 X
V
0 X
N
451.75 428.61 469.97 446.82 R
N
469.97 428.6 488.18 446.82 R
N
488.18 428.6 506.4 446.82 R
8 X
N
444.73 454.36 379.39 454.36 2 L
0.25 H
2 Z
0 X
N
180 270 17.82 10.89 379.13 465.23 A
0 90 7.68 4.51 444.73 449.85 A
277.91 454.36 343.25 454.36 2 L
N
270 360 17.82 10.89 343.49 465.23 A
90 180 7.67 4.51 277.91 449.85 A
(18) 273.82 433.73 T
(19) 293.11 433.73 T
(20) 310.25 433.73 T
(21) 329.54 433.73 T
(22) 347.22 433.73 T
506.4 428.6 524.61 446.82 R
0.5 H
0 Z
8 X
N
9 12 Q
0 X
(\311) 510.08 435.96 T
239.99 453.44 239.99 449.88 252.05 458.77 239.99 467.7 239.99 464.12 5 L
7 X
V
0.2 H
2 Z
0 X
N
239.99 453.44 230.31 453.44 230.31 464.12 239.99 464.12 4 L
7 X
V
0 X
N
6 8 Q
(fack) 232.32 456.39 T
(23) 364.93 433.4 T
(24) 384.22 433.4 T
(25) 402.43 433.4 T
(26) 421.18 433.4 T
(27) 439.4 433.4 T
(28) 457.07 433.4 T
(29) 475.29 433.4 T
(30) 494.57 433.4 T
197.62 427.92 192.43 430.92 197.62 433.92 3 L
0.5 H
0 Z
N
448.5 430.92 192.43 430.92 2 L
7 X
V
0 X
N
(window_size = 10) 339.22 690.21 T
(cwindow_size = 1) 269.96 640.19 T
(head) 181.71 683.39 T
(\336rst_unsent) 217.43 691.22 T
298.34 669.75 299.92 663.96 294.12 665.49 3 L
8 X
N
259.75 692.36 272.07 680.03 272.07 691.82 299.93 663.96 4 L
N
275.55 667.71 279.75 663.43 273.94 661.93 3 L
N
202.61 684.32 279.75 663.43 2 L
N
0 X
(cwindow_size = 4) 269.96 525.58 T
(cwindow_size = 2) 272.72 585.08 T
(cwindow_size = 8) 269.96 472.08 T
(cwindow_size = window_size) 269.96 415.33 T
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "13" 114
%%Page: "14" 114
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-14) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
0 F
(Flow Contr) 72 712 T
(ol Under Lossy Conditions) 130.74 712 T
2 F
(When packets start getting lost in transmission, the datagram protocol service) 108 692 T
(responds by invoking its selective acknowledgment scheme, which allows it to) 108 678.5 T
(maintain the lar) 108 665 T
(gest possible congestion window even in the face of a lossy con-) 183.07 665 T
(nection. This scheme is based on the knowledge that the RPC runtime manages) 108 651.5 T
(both the client and server sides of a connection, and can therefore transmit and) 108 638 T
(receive out-of-order packets in way that, say) 108 624.5 T
(, TCP cannot. \050W) 320.7 624.5 T
(ith a TCP connec-) 404.5 624.5 T
(tion, the \336rst lost packet ef) 108 611 T
(fectively collapses the congestion window back to one-) 235.71 611 T
(packet size, since the entire congestion window must be retransmitted.\051 It also) 108 597.5 T
-0.22 (makes use of the idea that transmissions are also subject to a certain amount of net-) 108 584 P
(work buf) 108 570.5 T
(fering that should be included in the computation of a receiver) 151.42 570.5 T
(\325) 450.98 570.5 T
(s window) 454.31 570.5 T
(size.) 108 557 T
240.24 536.19 108 536.19 2 L
V
0.59 H
0 Z
N
(Selective Acknowledgment) 108 537.5 T
(In addition to the expected acknowledgment of in-order data received, datagram) 108 517.5 T
(RPC fack packets may also include information acknowledging any out-of-order) 108 504 T
-0.22 (packets received. This array of \322selective acks\323 allows the sender to dequeue pack-) 108 490.5 P
-0.31 (ets within the current congestion window regardless of the order in which they had) 108 477 P
(been enqueued. This in turn allows the sender to re\336ll the transmit window with) 108 463.5 T
(new packets, keeping the transmit pipeline full at the mar) 108 450 T
(ginal expense of some-) 382.92 450 T
(what more complicated fack processing.) 108 436.5 T
-0.22 (Selective acks take the form of 32-bit masks describing each received packet as an) 108 417 P
(of) 108 403.5 T
(fset from the \050highest-numbered in-order\051 packet being acknowledged in the) 117.78 403.5 T
(fack. Figure 6-7 illustrates a simpli\336ed case where several packets are dropped) 108 390 T
(after \337ow has reached a steady state for a receive window of 10. In this example,) 108 376.5 T
(the selective ack mask associated with the fack of fragment 20 \050the highest-num-) 108 363 T
(bered in-order fragment received\051 has a value) 108 349.5 T
5 11 Q
(0x36) 329.46 349.5 T
2 12 Q
( \050) 355.83 349.5 T
5 11 Q
(110100) 362.82 349.5 T
2 12 Q
( binary\051, signifying) 402.37 349.5 T
(that the receiver has also gotten lower) 108 336 T
(-numbered packets at of) 289.62 336 T
(fsets of 3, 5, and 6) 404.97 336 T
(from the fragment nominally being facked. The number of selective ack masks) 108 322.5 T
(included in a) 108 309 T
5 11 Q
(selack) 172.96 309 T
2 12 Q
( array is determined by the highest-numbered fragment \050in-) 212.51 309 T
(or out-of-order\051 the receiver has seen so far) 108 295.5 T
(.) 315.47 295.5 T
FMENDPAGE
%%EndPage: "14" 115
%%Page: "15" 115
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-15) 518.02 34.67 T
(Figur) 249.13 712 T
(e 6-7: Selective Acknowledgment) 276.01 712 T
239.6 361.19 144 361.19 2 L
V
0.59 H
0 Z
N
2 F
(Packet Serialization) 144 362.5 T
(The transmitter assigns each packet a unique serial number before transmitting it.) 144 342.5 T
-0.06 (These serial numbers are unique on a per) 144 329 P
-0.06 (-queue basis. The \336rst packet transmitted) 340.17 329 P
(has serial number 0. Upon receipt of a fack request, the receiver returns a fack) 144 315.5 T
(packet to the sender that includes the serial number \050) 144 302 T
5 11 Q
(serial_num) 396.81 302 T
2 12 Q
(\051 of the packet) 462.73 302 T
(that induced the fack. The sender can safely assume that all packets still on the) 144 288.5 T
-0.14 (transmit queue that have serial numbers lower than) 144 275 P
5 11 Q
-0.31 (serial_num) 390.71 275 P
2 12 Q
-0.14 ( and are not men-) 456.63 275 P
(tioned in the fack body\325) 144 261.5 T
(s selective ack masks have been lost.) 257.92 261.5 T
260.94 240.69 144 240.69 2 L
V
N
(Retransmission Strategy) 144 242 T
-0.23 (The need to retransmit packets is usually detected during fack processing, but may) 144 222 P
(also be detected in routines that process nocall and ping packets, and by routines) 144 208.5 T
-0.34 (run in the timer thread. The transmit queue includes a pointer to a retransmit queue) 144 195 P
(on which these routines place packets that need to be retransmitted. The actual) 144 181.5 T
(retransmission is handled in the main transmission routines, since retransmitted) 144 168 T
(packets have to \336t within the current congestion window) 144 154.5 T
(, which is managed by) 415.04 154.5 T
(these routines.) 144 141 T
-0.45 (The retransmit queue itself is temporary in the sense that nobody ever holds a write) 144 121.5 P
-0.2 (lock on it. The RPC runtime assumes that any function operating on the retransmit) 144 108 P
(queue contents must have the latest data on what needs to be retransmitted.) 144 94.5 T
144 384 540 708 C
464.84 456.28 468.86 451.82 462.98 450.58 3 L
0.5 H
0 Z
0 X
0 K
N
191.89 577.18 482.25 476.46 392.79 476.46 468.86 451.82 4 L
N
291.68 525.6 381.68 562.03 R
4 X
V
291.54 479 382.07 525.61 R
5 X
V
6 8 Q
0 X
(16) 388.43 656.29 T
276 651.03 294.21 669.25 R
6 X
V
0 X
N
294.21 651.03 312.43 669.25 R
6 X
V
0 X
N
312.43 651.03 330.64 669.25 R
6 X
V
0 X
N
330.64 651.03 348.86 669.25 R
6 X
V
0 X
N
348.86 651.03 367.07 669.25 R
6 X
V
0 X
N
367.07 651.03 385.29 669.25 R
6 X
V
0 X
N
385.29 651.03 403.5 669.25 R
6 X
V
0 X
N
403.5 651.03 421.71 669.25 R
6 X
V
0 X
N
421.71 651.03 439.93 669.25 R
6 X
V
0 X
N
439.93 651.03 458.14 669.25 R
6 X
V
0 X
N
458.14 651.03 476.36 669.25 R
N
476.36 651.03 494.57 669.25 R
N
494.57 651.03 512.79 669.25 R
8 X
N
451.12 676.79 385.78 676.79 2 L
0.25 H
2 Z
0 X
N
180 270 17.82 10.89 385.52 687.66 A
0 90 7.68 4.51 451.12 672.27 A
284.3 676.79 349.64 676.79 2 L
N
270 360 17.82 10.89 349.88 687.66 A
90 180 7.67 4.51 284.3 672.27 A
(18) 280.21 656.16 T
(19) 299.5 656.16 T
(20) 316.64 656.16 T
(21) 335.93 656.16 T
(22) 353.61 656.16 T
512.78 651.03 531 669.25 R
0.5 H
0 Z
8 X
N
9 12 Q
0 X
(\311) 516.47 658.39 T
6 8 Q
(23) 371.32 655.83 T
(24) 390.61 655.83 T
(25) 408.82 655.83 T
(26) 427.57 655.83 T
(27) 445.79 655.83 T
(28) 463.46 655.83 T
(29) 481.68 655.83 T
(30) 500.96 655.83 T
(16) 265.43 587.25 T
153 582.01 171.22 600.22 R
6 X
V
0 X
N
171.21 582.01 189.43 600.22 R
6 X
V
0 X
N
189.43 582.01 207.64 600.22 R
6 X
V
0 X
N
207.64 582.01 225.86 600.22 R
6 X
V
0 X
N
225.86 582.01 244.07 600.22 R
6 X
V
0 X
N
244.07 582.01 262.29 600.22 R
6 X
V
0 X
N
262.29 582.01 280.5 600.22 R
6 X
V
0 X
N
280.5 582.01 298.72 600.22 R
6 X
V
0 X
N
298.71 582.01 316.93 600.22 R
6 X
V
0 X
N
316.93 582.01 335.14 600.22 R
6 X
V
0 X
N
(18) 157.21 587.13 T
(19) 176.5 587.13 T
(20) 193.64 587.13 T
(23) 211.45 587.42 T
(25) 231.45 587.51 T
(26) 249.57 587.51 T
(16) 391.38 424.88 T
278.95 419.63 297.16 437.84 R
6 X
V
0 X
N
297.16 419.63 315.38 437.84 R
6 X
V
0 X
N
315.38 419.63 333.59 437.84 R
6 X
V
0 X
N
333.59 419.63 351.8 437.84 R
6 X
V
0 X
N
351.8 419.63 370.02 437.84 R
6 X
V
0 X
N
370.02 419.63 388.23 437.84 R
6 X
V
0 X
N
388.23 419.63 406.45 437.84 R
6 X
V
0 X
N
406.45 419.63 424.66 437.84 R
6 X
V
0 X
N
424.66 419.63 442.88 437.84 R
6 X
V
0 X
N
442.88 419.63 461.09 437.84 R
6 X
V
0 X
N
461.09 419.63 479.31 437.84 R
N
479.3 419.62 497.52 437.84 R
N
497.52 419.62 515.73 437.84 R
8 X
N
454.07 445.38 388.73 445.38 2 L
0.25 H
2 Z
0 X
N
180 270 17.82 10.89 388.47 456.25 A
0 90 7.68 4.51 454.07 440.87 A
287.25 445.38 352.59 445.38 2 L
N
270 360 17.82 10.89 352.83 456.25 A
90 180 7.67 4.51 287.25 440.87 A
(21) 283.88 424.04 T
(22) 301.55 424.04 T
515.73 419.62 533.95 437.84 R
0.5 H
0 Z
8 X
N
9 12 Q
0 X
(\311) 519.41 426.98 T
6 8 Q
(24) 319.8 424.04 T
(27) 338.11 424.04 T
(28) 355.16 424.04 T
(29) 374.63 424.04 T
(30) 394.54 424.04 T
(window_size=10) 295.06 511.41 T
(selack_len=1) 295.06 490.11 T
(selack[1]=0x36) 295.06 480.81 T
(fragnum=20) 295.06 532.71 T
(_ptype=fack) 295.06 554.01 T
9 12 Q
(\311) 0 -270 306.28 540.26 TF
(\311) 0 -270 306.28 518.96 TF
(\311) 0 -270 306.28 497.66 TF
6 8 Q
(1) 234.39 480.03 T
(10100) 238.25 480.03 T
(20+3) 213.5 509.5 T
(20+5) 213.5 500.19 T
(20+6) 213.5 490.88 T
207.97 476.28 265.29 521.82 R
8 X
N
288.3 486.34 293.5 483.34 288.3 480.34 3 L
0 X
N
262.43 483.34 293.5 483.34 2 L
N
347.09 588.11 341.89 591.11 347.09 594.11 3 L
N
454.68 653.69 236.89 653.69 427.07 591.11 341.89 591.11 4 L
N
(31) 411 424.04 T
(32) 428.68 424.04 T
(33) 447.97 424.04 T
(34) 465.65 424.04 T
(35) 483.86 424.04 T
(36) 500.47 424.04 T
8 F
(transmit queue) 476.36 443.25 T
(receive queue) 184.39 606.98 T
(transmit queue) 465.61 679.54 T
(packet header) 385.82 537 T
(fack body) 386.36 515.37 T
(fack of packet 20, selectively) 153.38 550.13 T
(retransmitting 21, 22, 24) 174.22 412.85 T
170.84 418.89 165.64 421.89 170.84 424.89 3 L
N
456.86 421.89 165.64 421.89 2 L
N
(acknowledging receipt of) 153.38 540.82 T
(packets 23, 25, and 26) 153.38 531.52 T
249.86 486.57 249.86 513.57 231.86 513.57 3 L
N
241.07 486.64 241.07 503.25 234.11 503.25 3 L
N
236.25 487.71 236.25 493.07 231.97 493.07 3 L
N
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "15" 116
%%Page: "16" 116
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-16) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
0 F
(The Packet Pipeline) 72 712 T
2 F
(The datagram RPC code has the notion of a packet pipeline that is constrained by) 108 692 T
(the receiver) 108 678.5 T
(\325) 164.72 678.5 T
(s advertised window size as well as by some amount of network buf) 168.05 678.5 T
(f-) 494.27 678.5 T
-0.42 (ering that can be measured in packet round-trip time \050R) 108 665 P
-0.42 (TT\051, which we de\336ne as the) 369.63 665 P
-0.39 (interval between the transmission of a packet and acknowledgment of its receipt. It) 108 651.5 P
-0.28 (is quite possible for R) 108 638 P
-0.28 (TT) 211.44 638 P
-0.28 (s to be insigni\336cant in comparison with receiver buf) 225.26 638 P
-0.28 (fering) 472.64 638 P
(capacity and/or the transmitter) 108 624.5 T
(\325) 254.67 624.5 T
(s ability to stuf) 258 624.5 T
(f packets on the transmit queue.) 329.42 624.5 T
0 (Nevertheless, the designers of datagram RPC have observed that there are enough) 108 611 P
(cases where network buf) 108 597.5 T
(fering is a signi\336cant help to RPC performance to justify) 226.68 597.5 T
(adding transmit logic that takes R) 108 584 T
(TT) 268.86 584 T
(s into account.) 282.67 584 T
(The contents of the packet pipeline can be described in terms of:) 108 564.5 T
(\245) 108 545 T
-0.2 (The current blast size, which is the number of packets that the sender will send) 126 545 P
(back-to-back \050i.e., without asking for an explicit per) 126 531.5 T
(-packet ack\051. Blast size) 375.57 531.5 T
-0.41 (varies with network congestion and receiver responsiveness, going down when) 126 518 P
(either of these begin to show signs of trouble.) 126 504.5 T
(\245) 108 485 T
(The number of outstanding fack requests, which is the total of all packets sent) 126 485 T
-0.09 (in an attempt to induce a fack.) 126 471.5 P
-0.09 (Fack requests are managed in a way that allows) 273.29 471.5 P
(acceptable redundancy in the detection of lost packets without incurring too) 126 458 T
(much \322backward traf) 126 444.5 T
(\336c\323 from the receiver to the sender) 227.02 444.5 T
(.) 393.55 444.5 T
(Blast size and outstanding fack requests interact in several ways:) 108 425 T
(\245) 108 405.5 T
(Backward traf) 126 405.5 T
(\336c can be decreased by increasing the blast size and decreasing) 194.05 405.5 T
(the number of outstanding fack requests. An optimal mix of these two values) 126 392 T
(occurs when the blast size equals the receive window and the number of out-) 126 378.5 T
(standing fack requests never goes above one.) 126 365 T
(\245) 108 345.5 T
(Calls can be made less susceptible to time-outs \050which result when all fack) 126 345.5 T
(requests and/or their corresponding facks are lost in transmission\051 by increas-) 126 332 T
(ing the number of outstanding fack requests per) 126 318.5 T
(-R) 354.59 318.5 T
(TT) 365.87 318.5 T
(. The most conservative) 379.64 318.5 T
(approach, of course, is to request a fack for every packet sent.) 126 305 T
(\245) 108 285.5 T
(Packets can be spaced most uniformly within the packet pipeline \050something) 126 285.5 T
(that could theoretically make packet processing easier for busy receivers\051 by) 126 272 T
(interspersing blasts and fack requests in way that keeps the number of out-) 126 258.5 T
-0.51 (standing fack requests somewhere between the maximum and minimum values) 126 245 P
(we\325ve described.) 126 231.5 T
(In practice, the packet pipeline is made to grow using the congestion window) 108 212 T
(method described in Figure 6-6, and the R) 108 198.5 T
(TT is monitored by noting the time it) 309.81 198.5 T
(takes for the initial and subsequent facks to arrive at the sender) 108 185 T
(. At each stage of) 409.44 185 T
-0.4 (congestion window growth after the \336rst \050one-packet stage\051, the transmission logic) 108 171.5 P
(sends two congestion windows of packets, requesting a fack after each window) 108 158 T
(.) 487.59 158 T
(This provides desirable fack redundancy at the cost of slowing the growth of the) 108 144.5 T
-0.06 (pipeline somewhat. It also seeks to limit the size of each blast in a way that makes) 108 131 P
(best use of network buf) 108 117.5 T
(fering \050the number of blasts per R) 220.37 117.5 T
(TT is kept high by keep-) 382.19 117.5 T
(ing the number of fack requests per R) 108 104 T
(TT high\051.) 288.14 104 T
(Packet transmission proceeds like this:) 108 84.5 T
FMENDPAGE
%%EndPage: "16" 117
%%Page: "17" 117
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-17) 518.02 34.67 T
2 F
(\245) 144 712 T
(Upon receipt of a fack, the sender checks the serial number and selective ack) 162 712 T
(information to \336nd out how many packets the fack is actually acknowledging) 162 698.5 T
(\245) 144 679 T
(The sender then computes a new blast size of twice the number of packets) 162 679 T
(being facked.) 162 665.5 T
(\245) 144 646 T
(The sender adjusts the new blast size if necessary to \336t into the receive win-) 162 646 T
(dow) 162 632.5 T
(.) 181.87 632.5 T
(\245) 144 613 T
(If the total number of packets required for the blast are available for transmis-) 162 613 T
(sion \050i.e., are on the transmit and/or retransmit queues\051, the sender transmits) 162 599.5 T
(them. If not, the sender reduces the blast size to the number of packets avail-) 162 586 T
(able.) 162 572.5 T
(\245) 144 553 T
(If there are more packets to send, the process begins again.) 162 553 T
-0.32 (The local idea of window size is based on several constants de\336ned in) 144 533.5 P
5 11 Q
-0.7 (dg.h) 478.62 533.5 P
2 12 Q
-0.32 (, along) 504.99 533.5 P
(with a computation using the value returned from the host operating system in) 144 520 T
(response to a request for a speci\336c amount of buf) 144 506.5 T
(fering. The constants include a) 379.93 506.5 T
(maximum window size and a \322socket load\323 factor that represents the number of) 144 493 T
(simultaneous calls we expect a socket to handle and how many fragments \050pack-) 144 479.5 T
(ets\051 each call will require.) 144 466 T
(W) 271.23 466 T
(e make the further assumption that we can establish) 281.59 466 T
-0.3 (send buf) 144 452.5 P
-0.3 (fering adequate to the needs of a receiver with the same amount of receive) 184.46 452.5 P
-0.52 (buf) 144 439 P
-0.52 (fering we believe the local environment provides \050i.e., send buf) 159.77 439 P
-0.52 (fering is initially) 458.61 439 P
(consistent with our advertised receive window\051.) 144 425.5 T
435.63 395.28 108 395.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Activity IDs, Fragment, Sequence, and Serial Numbers) 108 396.67 T
2 12 Q
(Every datagram RPC packet header includes, as we\325ve described, fragment,) 144 376 T
(sequence, and serial numbers, as well as an activity UUID. These four values pro-) 144 362.5 T
(vide the means of associating a packet with a call, and of detecting duplicate) 144 349 T
(receives.) 144 335.5 T
(\245) 144 316 T
(Activity UUIDs and sequence numbers are the key to associating calls with) 162 316 T
-0.17 (logical connections. A given pairing of activity UUID and sequence number is) 162 302.5 P
(guaranteed unique for all packets associated with a given RPC. Activity) 162 289 T
(UUIDs can be reused, which is why we need sequence numbers to distinguish) 162 275.5 T
(among instances of activity UUID reuse. Each re-use of an activity UUID) 162 262 T
(increments the sequence number) 162 248.5 T
(. Calls made with a given activity UUID) 318.21 248.5 T
(always have the same authentication information, and servers cache per) 162 235 T
(-activ-) 505.48 235 T
(ity state for reuse in executing subsequent calls with the same activity UUID.) 162 221.5 T
(\245) 144 202 T
(Fragment numbers increase monotonically per packet for calls whose ar) 162 202 T
(gu-) 507.18 202 T
(ments cannot all \336t in a single packet.) 162 188.5 T
(\245) 144 169 T
(Serial numbers are unique per packet, and are part of the datagram protocol) 162 169 T
(service\325) 162 155.5 T
(s retransmission and duplicate-detection machinery) 199.3 155.5 T
(. When a packet is) 445.01 155.5 T
-0.2 (transmitted, it gets the \322next serial number\323 associated with its transmit queue.) 162 142 P
(If it needs to be retransmitted, it is put on the transmit queue\325) 162 128.5 T
(s retransmission) 454.82 128.5 T
(queue and given a new serial number) 162 115 T
(.) 339.86 115 T
FMENDPAGE
%%EndPage: "17" 118
%%Page: "18" 118
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-18) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.36 (T) 108 712 P
-0.36 (aken together) 114.49 712 P
-0.36 (, these values ensure that every datagram RPC packet is unique, and) 178.59 712 P
(let servers start up call execution with minimal overhead \050no need to perform a) 108 698.5 T
(W) 108 685 T
(A) 117.99 685 T
(Y callback\051 when activity UUIDs are re-used.) 125.55 685 T
(Figure 6-8 should help sort out the uses of these four values.) 108 665.5 T
4 F
(Figur) 149.83 646 T
(e 6-8: Activity ID, Fragment, Sequence, and Serial Number) 176.71 646 T
192.45 291.78 72 291.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(Major Datagram Pr) 72 293.17 T
362.01 291.78 192.19 291.78 2 L
V
N
(otocol Service Data Structur) 192.19 293.17 T
373.41 291.78 361.75 291.78 2 L
V
N
(es) 361.75 293.17 T
2 12 Q
(There are a number of important data structures that more or less de\336ne calls and) 108 272.5 T
-0.14 (logical \322connections\323 between clients and servers. Since the structures themselves) 108 259 P
(are closely interrelated, we will describe them all in this section, even though) 108 245.5 T
(many of the functions that reference these structures\325 contents will be detailed) 108 232 T
(later) 108 218.5 T
(.) 128.65 218.5 T
0 F
(Refer) 72 199 T
(ence Counts) 100.41 199 T
2 F
(Many of the datagram RPC service\325) 108 179 T
(s data structures include a \336eld named) 280.21 179 T
5 11 Q
(refcnt) 108 165.5 T
2 12 Q
(, which is the structure\325) 147.55 165.5 T
(s reference count. Reference counts provide an) 259.81 165.5 T
(auxiliary locking mechanism used in conjunction with mutex locking to protect) 108 152 T
-0.16 (heap-allocated critical data needs to be locked for \322long\323 intervals \321 long enough) 108 138.5 P
-0.16 (to make it inef) 108 125 P
-0.16 (\336cient to simply mutex lock the entire structure for the entire time\321) 176.94 125 P
(or that needs to be temporarily unlocked by a lock-holder that needs to acquire a) 108 111.5 T
-0.04 (higher) 108 98 P
-0.04 (-level lock. Reference counts provide a way of guaranteeing that a structure) 138.4 98 P
108 318 504 642 C
6 8 Q
0 X
0 K
(actuid=) 152.14 615.25 T
(fragnum=) 152.14 605.94 T
(seq=) 152.14 596.64 T
(serial=) 152.14 587.33 T
150.54 584 214.82 624.18 R
0.5 H
0 Z
N
(actuid=) 216.43 615.25 T
(fragnum=) 216.43 605.94 T
(seq=) 216.43 596.64 T
(serial=) 216.43 587.33 T
214.82 584 279.11 624.18 R
N
(actuid=) 280.72 615.25 T
(fragnum=) 280.72 605.94 T
(seq=) 280.72 596.64 T
(serial=) 280.72 587.33 T
279.11 584 343.4 624.18 R
N
(actuid=) 345 615.25 T
(fragnum=) 345 605.94 T
(seq=) 345 596.64 T
(serial=) 345 587.33 T
343.39 584 407.68 624.18 R
N
(actuuid=) 393.31 369.27 T
(fragnum=) 393.31 359.96 T
(seq=) 394.38 350.12 T
(serial=) 393.31 341.35 T
391.7 338.01 455.99 378.19 R
N
(0001) 191.25 615.11 T
(0000) 191.25 605.8 T
(0000) 191.25 596.49 T
(0000) 191.25 587.19 T
(0001) 254.43 615.68 T
(0001) 254.43 606.37 T
(0000) 254.43 597.06 T
(0001) 254.43 587.76 T
(0001) 320.82 615.18 T
(0002) 320.82 605.87 T
(0000) 320.82 596.56 T
(0002) 320.82 587.26 T
(0001) 384 615.21 T
(0003) 384 605.91 T
(0000) 384 596.6 T
(0003) 384 587.29 T
(0002) 436.02 368.73 T
(0003) 436.02 359.42 T
(0000) 436.02 350.12 T
(0012) 436.02 340.81 T
(actuuid=) 152.14 526.08 T
(fragnum=) 152.14 516.77 T
(seq=) 152.14 507.46 T
(serial=) 152.14 498.16 T
150.54 494.83 214.82 535.01 R
N
(actuuid=) 216.43 526.08 T
(fragnum=) 216.43 516.77 T
(seq=) 216.43 507.46 T
(serial=) 216.43 498.16 T
214.82 494.83 279.11 535.01 R
N
(actuuid=) 280.72 526.08 T
(fragnum=) 280.72 516.77 T
(seq=) 280.72 507.46 T
(serial=) 280.72 498.16 T
279.11 494.83 343.4 535.01 R
N
(actuuid=) 345 526.08 T
(fragnum=) 345 516.77 T
(seq=) 345 507.46 T
(serial=) 345 498.16 T
343.39 494.83 407.68 535.01 R
N
(0001) 191.25 525.93 T
(0000) 191.25 516.63 T
(0001) 191.25 507.32 T
(0004) 191.25 498.01 T
(0001) 254.43 526.51 T
(0001) 254.43 517.2 T
(0001) 254.43 507.89 T
(0005) 254.43 498.58 T
(0001) 320.82 526.01 T
(0002) 320.82 516.7 T
(0001) 320.82 507.39 T
(0006) 320.82 498.08 T
(0001) 384 526.04 T
(0003) 384 516.73 T
(0001) 384 507.43 T
(0007) 384 498.12 T
(a reused activity UUID \050new call, same principal\051) 150.75 481.08 T
(a call whose arguments \336t into four packets) 151.88 572.32 T
(retransmitted packet) 310.63 338.71 T
(actuuid=) 152.14 432.53 T
(fragnum=) 152.14 423.22 T
(seq=) 152.14 413.92 T
(serial=) 152.14 404.61 T
150.54 401.28 214.82 441.46 R
N
(actuuid=) 216.43 432.53 T
(fragnum=) 216.43 423.22 T
(seq=) 216.43 413.92 T
(serial=) 216.43 404.61 T
214.82 401.28 279.11 441.46 R
N
(actuuid=) 280.72 432.53 T
(fragnum=) 280.72 423.22 T
(seq=) 280.72 413.92 T
(serial=) 280.72 404.61 T
279.11 401.28 343.4 441.46 R
N
(actuuid=) 345 432.53 T
(fragnum=) 345 423.22 T
(seq=) 345 413.92 T
(serial=) 345 404.61 T
343.39 401.28 407.68 441.46 R
N
(0002) 191.25 432.39 T
(0000) 191.25 423.08 T
(0000) 191.25 413.77 T
(0008) 191.25 404.46 T
(0002) 254.43 432.96 T
(0001) 254.43 423.65 T
(0000) 254.43 414.34 T
(0009) 254.43 405.04 T
(0002) 320.82 432.46 T
(0002) 320.82 423.15 T
(0000) 320.82 413.84 T
(0010) 320.82 404.54 T
(0002) 384 432.49 T
(0003) 384 423.19 T
(0000) 384 413.88 T
(001) 384 404.57 T
(1) 396.75 404.57 T
(a new activity \050new call, new principal\051) 152 390.03 T
129.57 567.65 124.38 570.65 129.57 573.65 3 L
N
305.19 570.65 124.38 570.65 2 L
N
130.2 476.41 125 479.41 130.2 482.41 3 L
N
322.7 479.41 125 479.41 2 L
N
128.32 384.53 123.13 387.53 128.32 390.53 3 L
N
287.52 387.53 123.13 387.53 2 L
N
127.07 329.25 121.88 332.25 127.07 335.25 3 L
N
453.75 332.25 121.88 332.25 2 L
N
383.4 369.72 384.98 363.93 379.18 365.46 3 L
1 H
8 X
N
373.13 398.92 390.63 381.42 367.5 381.42 385 363.91 4 L
N
0 0 612 792 C
108 318 504 642 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "18" 119
%%Page: "19" 119
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-19) 518.02 34.67 T
2 F
(of interest will not be freed even though the interested party may not have it) 144 712 T
(locked.) 144 698.5 T
-0.02 (Reference counts for) 144 679 P
-0.02 (, say) 243.38 679 P
-0.02 (, a) 264.57 679 P
5 11 Q
-0.05 (dummy_t) 278.84 679 P
2 12 Q
-0.02 ( structure are typically used as shown in Fig-) 324.98 679 P
(ure 6-9.) 144 665.5 T
4 F
(Figur) 254.84 646 T
(e 6-9: Using Refer) 281.71 646 T
(ence Counts) 370.2 646 T
5 11 Q
(MUTEX_LOCK\050dummy\051) 162 621.17 T
(f) 162 609.17 T
(iddle_with \050dummy->member\051) 168.59 609.17 T
(dummy->refcnt++) 162 597.17 T
(/* grab a reference */) 270 597.17 T
(MUTEX_UNLOCK\050dummy\051) 162 585.17 T
(/********************************) 162 573.17 T
(** do some long-running chore **) 162 561.17 T
(********************************/) 162 549.17 T
(MUTEX_LOCK\050dummy\051) 162 537.17 T
(f) 162 525.17 T
(iddle_with \050dummy->member\051) 168.59 525.17 T
(dummy->refcnt--) 162 513.17 T
(/* free our reference */) 270 513.17 T
(/* now call a \322release\323 function, which) 162 501.17 T
(** does something like this:) 162 489.17 T
(*/) 162 477.17 T
7 F
(if) 162 465.17 T
5 F
( \050dummy->refcnt == 0\051;) 175.18 465.17 T
({) 331.19 465.17 T
7 F
(free) 180 453.17 T
5 F
( \050dummy\051;) 206.37 453.17 T
7 F
(else) 162 441.17 T
5 F
(MUTEX_UNLOCK\050dummy\051;) 180 429.17 T
(}) 162 417.17 T
2 12 Q
(The mechanism is simple, consisting of an integer member that all functions with) 144 392.5 T
(an interest in the structure\325) 144 379 T
(s contents agree to increment when examining or alter-) 271.91 379 T
0 (ing the structure and decrement when they\325re done. Structures with a) 144 365.5 P
5 11 Q
-0.01 (refcnt==0) 477.68 365.5 P
2 12 Q
-0.14 (are assumed to have no readers and may be freed. \050The implementation provides a) 144 352 P
(release function that should be called to examine a structure\325) 144 338.5 T
(s refcnt \336eld and do) 434.78 338.5 T
(the right \050) 144 325 T
5 11 Q
(UNLOCK/free) 191.3 325 T
2 12 Q
(\051 thing.\051 Rules for using reference counts can be summa-) 263.81 325 T
(rized as:) 144 311.5 T
(\245) 144 292 T
(Functions that examine reference-counted data structures should return with) 162 292 T
(the entry locked and the reference count incremented.) 162 278.5 T
(\245) 144 259 T
(Functions that need to grab or release a reference must lock the referenced) 162 259 T
(structure \336rst.) 162 245.5 T
(\245) 144 226 T
(Once a function has released its reference to a structure, it cannot reference) 162 226 T
(structure elements again without \336rst re-acquiring a reference.) 162 212.5 T
0 F
(T) 108 193 T
(ransmit and Receive Queues) 115.11 193 T
2 F
-0.23 (T) 144 173 P
-0.23 (ransmit and receive queues are queues of elements that are essentially pointers to) 150.91 173 P
(headerless packets. Each queue element includes \337ags, an activity UUID, and) 144 159.5 T
(sequence, serial, and fragment numbers from which call transmit functions con-) 144 146 T
(struct a packet header that is prepended to the packet prior to transmission.) 144 132.5 T
151.33 111.69 144 111.69 2 L
V
0.59 H
0 Z
N
(T) 144 113 T
328.11 111.69 150.91 111.69 2 L
V
N
(ransmit Queues and Queue Elements) 150.91 113 T
(T) 144 93 T
(ransmit queue elements and transmit queues are de\336ned in) 150.91 93 T
5 11 Q
(dg.h) 434.37 93 T
2 12 Q
(. Individual) 460.74 93 T
-0.24 (queue elements, as illustrated in T) 144 79.5 P
-0.24 (able 6-3, are subject to whatever locking require-) 305.86 79.5 P
FMENDPAGE
%%EndPage: "19" 120
%%Page: "20" 120
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-20) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.43 (ments apply to the queue on which they reside. If they do not yet reside on a queue,) 108 712 P
(they need not be locked.) 108 698.5 T
4 F
(T) 232.93 680.5 T
(able 6-3: rpc_dg_xmitq_elt_t) 238.49 680.5 T
5 11 Q
(rpc_dg_xmitq_elt_t {) 110 659.17 T
(*next) 110 640.17 T
(/* pointer to next elt */) 218 640.17 T
(*next_rexmit) 110 621.17 T
(/* pointer to next elt on rexmit queue */) 218 621.17 T
(f) 110 602.17 T
(lags) 116.59 602.17 T
(/* pkt hdr f) 218 602.17 T
(lags */) 297.1 602.17 T
(fragnum) 110 583.17 T
(/* pkt hdr fragnum */) 218 583.17 T
(serial_num) 110 564.17 T
(/* pkt hdr serial number */) 218 564.17 T
(body_len) 110 545.17 T
(/* sizeof \050body\051 */) 218 545.17 T
(body) 110 526.17 T
(/* pointer to body of this element */) 218 526.17 T
(in_cwindow) 110 507.17 T
(/* true iff body is part of the current) 218 507.17 T
(congestion window */) 218 494.17 T
(}) 110 475.17 T
106.75 671.5 106.75 466.5 2 L
V
0.5 H
0 Z
N
109.25 669 109.25 469 2 L
V
N
214.75 651.25 214.75 486.75 2 L
V
N
217.25 651.25 217.25 486.75 2 L
V
N
502.75 669 502.75 469 2 L
V
N
505.25 671.5 505.25 466.5 2 L
V
N
106.5 671.75 505.5 671.75 2 L
V
N
109 669.25 503 669.25 2 L
V
N
109.5 651.5 502.5 651.5 2 L
V
N
109.5 632.5 502.5 632.5 2 L
V
N
109.5 613.5 502.5 613.5 2 L
V
N
109.5 594.5 502.5 594.5 2 L
V
N
109.5 575.5 502.5 575.5 2 L
V
N
109.5 556.5 502.5 556.5 2 L
V
N
109.5 537.5 502.5 537.5 2 L
V
N
109.5 518.5 502.5 518.5 2 L
V
N
109.5 486.5 502.5 486.5 2 L
V
N
109 468.75 503 468.75 2 L
V
N
106.5 466.25 505.5 466.25 2 L
V
N
FMENDPAGE
%%EndPage: "20" 121
%%Page: "21" 121
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-21) 518.02 34.67 T
2 F
(The transmit queue itself is a lar) 144 712 T
(ge structure that includes, in addition to the requi-) 298.34 712 T
4 F
(T) 246 694 T
(able 6-4: rpc_dg_xmitq_elt_t structur) 251.56 694 T
(e) 432.68 694 T
5 11 Q
(rpc_dg_xmitq_t {) 146 673.67 T
(head) 146 656.67 T
(/* pointer to f) 297.2 656.67 T
(irst pkt on queue */) 396.08 656.67 T
(f) 146 639.67 T
(irst_unsent) 152.59 639.67 T
(/* pointer to f) 297.2 639.67 T
(irst unsent pkt on) 396.08 639.67 T
(queue */) 297.2 626.67 T
(tail) 146 609.67 T
(/* pointer to last pkt on queue */) 297.2 609.67 T
(rexmitq) 146 592.67 T
(/* pointer to f) 297.2 592.67 T
(irst pkt on retrans-) 396.08 592.67 T
(mission queue */) 297.2 579.67 T
(part_xqe) 146 562.67 T
-0.62 (/* pointer to partially-f) 297.2 562.67 P
-0.62 (illed pkt */) 460.14 562.67 P
(hdr) 146 545.67 T
(/* prototype packet header */) 297.2 545.67 T
(awaiting_ack_timestamp) 146 528.67 T
-0.52 (/* when awaiting_ack f) 297.2 528.67 P
-0.52 (ield was set */) 440.67 528.67 P
(timestamp) 146 511.67 T
(/* most recent \050re\051xmit time */) 297.2 511.67 T
(rexmit_timeout) 146 494.67 T
(/* how long until next rexmit */) 297.2 494.67 T
(base_f) 146 477.67 T
(lags) 185.55 477.67 T
(/* f) 297.2 477.67 T
(lags f) 323.57 477.67 T
(ield for all pkt hdrs */) 363.12 477.67 T
(base_f) 146 460.67 T
(lags2) 185.55 460.67 T
(/* f) 297.2 460.67 T
(lags2 f) 323.57 460.67 T
(ield for all pkt hdrs */) 369.71 460.67 T
(next_fragnum) 146 443.67 T
(/* fragnum for next pkt hdr */) 297.2 443.67 T
(next_serial_num) 146 426.67 T
(/* serial_num for next pkt hdr */) 297.2 426.67 T
(last_fack_serial) 146 409.67 T
-0.44 (/* serial number of pkt that induced) 297.2 409.67 P
(most recently-received fack */) 297.2 396.67 T
(window_size) 146 379.67 T
(/* receive window size \050pkts\051 */) 297.2 379.67 T
(cwindow_size) 146 362.67 T
(/* congestion window size \050pkts\051 */) 297.2 362.67 T
(max_tsdu) 146 345.67 T
(/* largest pkt we can send through) 297.2 345.67 T
(the local transport API */) 297.2 332.67 T
(max_path_tpdu) 146 315.67 T
(/* largest pkt that won\325t get frag-) 297.2 315.67 T
(mented on the wire */) 297.2 302.67 T
(max_pkt_size) 146 285.67 T
(/* min of max*t*du above */) 297.2 285.67 T
(blast_size) 146 268.67 T
(/* current blast size */) 297.2 268.67 T
(max_blast_size) 146 251.67 T
(/* maximum allowable blast size */) 297.2 251.67 T
(xq_timer) 146 234.67 T
(/* schedules adjustments to blast) 297.2 234.67 T
(size */) 297.2 221.67 T
(xq_timer_throttle) 146 204.67 T
(/* how much to delay next blast */) 297.2 204.67 T
(high_cwindow) 146 187.67 T
(/* largest congestion window seen */) 297.2 187.67 T
(freqs_out) 146 170.67 T
(/* number of outstanding fack) 297.2 170.67 T
(requests */) 297.2 157.67 T
(push) 146 140.67 T
(/* false == keep at least one pkt) 297.2 140.67 T
(awaiting_ack) 146 123.67 T
(/* true if we\325re waiting for an ack) 297.2 123.67 T
(*/) 297.2 110.67 T
(}) 146 93.67 T
142.75 685 142.75 86 2 L
V
0.5 H
0 Z
N
145.25 682.5 145.25 88.5 2 L
V
N
293.95 666.75 293.95 104.25 2 L
V
N
296.45 666.75 296.45 104.25 2 L
V
N
538.75 682.5 538.75 88.5 2 L
V
N
541.25 685 541.25 86 2 L
V
N
142.5 685.25 541.5 685.25 2 L
V
N
145 682.75 539 682.75 2 L
V
N
145.5 667 538.5 667 2 L
V
N
145.5 650 538.5 650 2 L
V
N
145.5 620 538.5 620 2 L
V
N
145.5 603 538.5 603 2 L
V
N
145.5 573 538.5 573 2 L
V
N
145.5 556 538.5 556 2 L
V
N
145.5 539 538.5 539 2 L
V
N
145.5 522 538.5 522 2 L
V
N
145.5 505 538.5 505 2 L
V
N
145.5 488 538.5 488 2 L
V
N
145.5 471 538.5 471 2 L
V
N
145.5 454 538.5 454 2 L
V
N
145.5 437 538.5 437 2 L
V
N
145.5 420 538.5 420 2 L
V
N
145.5 390 538.5 390 2 L
V
N
145.5 373 538.5 373 2 L
V
N
145.5 356 538.5 356 2 L
V
N
145.5 326 538.5 326 2 L
V
N
145.5 296 538.5 296 2 L
V
N
145.5 279 538.5 279 2 L
V
N
145.5 262 538.5 262 2 L
V
N
145.5 245 538.5 245 2 L
V
N
145.5 215 538.5 215 2 L
V
N
145.5 198 538.5 198 2 L
V
N
145.5 181 538.5 181 2 L
V
N
145.5 151 538.5 151 2 L
V
N
145.5 134 538.5 134 2 L
V
N
145.5 104 538.5 104 2 L
V
N
145 88.25 539 88.25 2 L
V
N
142.5 85.75 541.5 85.75 2 L
V
N
FMENDPAGE
%%EndPage: "21" 122
%%Page: "22" 122
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-22) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.18 (site element pointers, all the information needed to initialize packet headers and to) 108 712 P
(manage \337ow control. T) 108 698.5 T
(able 6-4 describes the \336elds of this structure. Additional) 219.08 698.5 T
(information on certain \336elds follows.) 108 685 T
5 11 Q
(rexmitq) 108 665.5 T
2 12 Q
(pointer to the head of the retransmit queue) 180 665.5 T
5 11 Q
(part_xqe) 108 646 T
2 12 Q
(pointer to a partially-\336lled queue element) 180 646 T
5 11 Q
(awaiting_ack, awaiting_ack_timestamp) 108 627.17 T
2 12 Q
(These values are used to help determine whether a receiver has) 180 614.5 T
(died.) 180 601 T
5 11 Q
(awaiting_ack) 206.65 601 T
2 12 Q
( is set true by any routine that transmits a) 285.75 601 T
(packet expected to induce an acknowledgment. acknowledgment) 180 587.5 T
(can consist of a working, fack, ack, or response packet.) 180 574 T
5 11 Q
(timestamp) 108 554.5 T
(rpc_clock_t) 180 554.5 T
2 12 Q
( when the most recent transmission was made) 252.51 554.5 T
5 11 Q
(rexmit_timeout) 108 535.67 T
2 12 Q
(Interval to wait before retransmitting, Retransmission is typically) 180 523 T
(deferred until) 180 509.5 T
5 11 Q
(timestamp+rexmit_timeout) 247.94 509.5 T
2 12 Q
( has been reached.) 406.15 509.5 T
5 11 Q
(base_f) 108 490.67 T
(lags, base_f) 147.55 490.67 T
(lags2) 226.65 490.67 T
2 12 Q
(The \336rst of these values is logically ORed with a queue element\325) 180 478 T
(s) 490.13 478 T
(\337ags value to produce the \337ags \336eld in the packet header) 180 464.5 T
(. The sec-) 451.81 464.5 T
(ond is simply applied to the header as) 180 451 T
5 11 Q
(f) 363.88 451 T
(lags2) 370.48 451 T
2 12 Q
(.) 403.43 451 T
5 11 Q
(next_fragnum) 108 432.17 T
2 12 Q
(The next fragment number to use. Initialized to zero for the \336rst) 180 419.5 T
-0.07 (packet of a call. Incremented for each subsequent packet in the call.) 180 406 P
5 11 Q
(next_serial_num) 108 387.17 T
2 12 Q
-0.19 (The next serial number to use. Initialized to zero for the \336rst packet) 180 374.5 P
-0.27 (in the queue. Incremented for each packet transmitted or retransmit-) 180 361 P
(ted.) 180 347.5 T
5 11 Q
(last_fack_serial) 108 328.67 T
2 12 Q
-0.25 (Serial number of the packet that induced the most recently received) 180 316 P
(fack. Used when setting blast size.) 180 302.5 T
5 11 Q
(max_tsdu, max_path_tpdu, max_pkt_size) 108 283.67 T
2 12 Q
-0.42 (W) 180 271 P
-0.42 (e want to send the lar) 190.36 271 P
-0.42 (gest packet we can that will not be subject to) 290.32 271 P
(fragmentation not under our control \050e.g., IP fragmentation on the) 180 257.5 T
(network\051, so we set) 180 244 T
5 11 Q
(max_pkt_size) 276.26 244 T
2 12 Q
( to the smaller of) 355.36 244 T
5 11 Q
(max_tsdu) 439.64 244 T
2 12 Q
(and) 180 230.5 T
5 11 Q
(max_path_tpdu) 200.32 230.5 T
2 12 Q
(.) 286.01 230.5 T
5 11 Q
(max_blast_size, xq_timer, xq_timer_throttle, high_cwindow) 108 211.67 T
2 12 Q
-0.43 (These four \336elds are used in determining how many packets to send) 180 199 P
(in a blast \050) 180 185.5 T
5 11 Q
(blast_size) 230.3 185.5 T
2 12 Q
(\051. When a connection is reliable \050no lost) 296.22 185.5 T
(packets\051 and round-trip times are short, our \337ow control logic may) 180 172 T
(not allow the congestion window to grow as fast at it could. Under) 180 158.5 T
(such conditions,) 180 145 T
5 11 Q
(max_blast_size) 260.96 145 T
2 12 Q
( may be periodically adjusted) 353.24 145 T
-0.31 (at intervals controlled by the) 180 131.5 P
5 11 Q
-0.69 (xq_timer) 318.68 131.5 P
2 12 Q
-0.31 (, which is set to the number) 370.93 131.5 P
(of \322good\323 facks that must be received before upping) 180 118 T
5 11 Q
-0.45 (max_blast_size) 180 104.5 P
2 12 Q
-0.21 (. The initial value of) 272.29 104.5 P
5 11 Q
-0.45 (xq_timer) 371.86 104.5 P
2 12 Q
-0.21 ( is 8. T) 424.59 104.5 P
-0.21 (o prevent) 456.45 104.5 P
(oscillation around a given) 180 91 T
5 11 Q
(max_blast_size) 307.25 91 T
2 12 Q
(,) 399.54 91 T
5 11 Q
(xq_timer) 405.53 91 T
2 12 Q
( is) 458.27 91 T
(reset) 475.86 91 T
(to) 180 77.5 T
5 11 Q
(\050) 192.33 77.5 T
(xq_timer_throttle) 198.92 77.5 T
(* xq_timer\051) 313.98 77.5 T
2 12 Q
( after each increase of) 386.49 77.5 T
FMENDPAGE
%%EndPage: "22" 123
%%Page: "23" 123
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-23) 518.02 34.67 T
5 11 Q
(max_blast_size) 216 712 T
1 12 Q
(.) 308.29 712 T
5 11 Q
(push) 144 692.5 T
2 12 Q
(set true when all queue elements\321even those that are partially) 216 692.5 T
(\336lled\321should be transmitted. In DCE 1.0.2, it is always true.) 216 679 T
323.85 658.19 144 658.19 2 L
V
0.59 H
0 Z
N
(Receive Queues and Queue Elements) 144 659.5 T
(Receive queue elements \050T) 144 639.5 T
(able 6-5\051 are essentially received packets embellished) 273.39 639.5 T
(with some additional information.) 144 626 T
-0.12 (Here\325) 144 277.5 P
-0.12 (s some additional information on some of the receive queue element\325) 170.64 277.5 P
-0.12 (s \336elds.) 500.58 277.5 P
5 11 Q
(hdrp, hdr) 144 258 T
-0.03 (hdrp) 216 258 P
2 12 Q
-0.01 (is a pointer to the header as it was received.) 248.93 258 P
5 11 Q
-0.03 (hdr) 460.98 258 P
2 12 Q
-0.01 ( is a pointer) 480.75 258 P
-0.03 (to a dummy structure laid out by the local compiler) 216 244.5 P
-0.03 (, into which val-) 461.46 244.5 P
-0.4 (ues from) 216 231 P
5 11 Q
-0.88 (hdrp) 260.5 231 P
2 12 Q
-0.4 ( are plugged.) 286.86 231 P
-0.4 (When possible \050i.e., when the local and) 350.94 231 P
(remote layouts are the same\051,) 216 217.5 T
5 11 Q
(hdrp) 359.89 217.5 T
2 12 Q
( points directly to) 386.25 217.5 T
5 11 Q
(pkt->hdr) 473.54 217.5 T
2 12 Q
(,) 525.79 217.5 T
(saving a data copy) 216 204 T
(.) 304.15 204 T
5 11 Q
(pkt, pkt_real) 144 185.17 T
(pkt_real) 216 172.5 T
2 12 Q
( points to a buf) 268.73 172.5 T
(fer that has been allocated to hold the) 340.48 172.5 T
(packet as it arrived from the sender) 216 159 T
(.) 384.53 159 T
5 11 Q
(pkt) 390.53 159 T
2 12 Q
( points to a copy of) 410.3 159 T
5 11 Q
-0.63 (pkt_real) 216 145.5 P
2 12 Q
-0.29 ( that has been aligned on a) 268.73 145.5 P
5 11 Q
-0.63 (\0500 mod 8\051) 396.97 145.5 P
2 12 Q
-0.29 ( boundary) 455.03 145.5 P
-0.29 (, which) 502.27 145.5 P
(the stubs require. All processing of received packets uses) 216 132 T
5 11 Q
(pkt) 493.12 132 T
2 12 Q
(, not) 512.9 132 T
5 11 Q
(pkt_real) 216 118.5 T
2 12 Q
(.) 268.73 118.5 T
5 11 Q
(was_rationing, low_on_pkts) 144 99.67 T
2 12 Q
(These two values are used by the packet rationing code to deter-) 216 87 T
4 F
(T) 246.23 608 T
(able 6-5: rpc_dg_r) 251.79 608 T
(ecvq_elt_t structur) 342.62 608 T
(e) 432.45 608 T
7 11 Q
(rpc_dg_recvq_elt_t {) 146 586.67 T
5 F
(*next) 146 567.67 T
(/* pointer to next queue element */) 254 567.67 T
(hdrp) 146 548.67 T
(/* pointer to \322usable\323 pkt hdr */) 254 548.67 T
(hdr) 146 529.67 T
(/* properly-aligned *hdrp */) 254 529.67 T
(sock) 146 510.67 T
(/* where to send response \050rpc_socket_t\051 */) 254 510.67 T
(from_len) 146 491.67 T
(/* length of .from f) 254 491.67 T
(ield */) 385.84 491.67 T
(pkt_len) 146 472.67 T
(/* length of raw packet as received */) 254 472.67 T
(from) 146 453.67 T
(/* rpc_addr_t of sender */) 254 453.67 T
(was_rationing) 146 434.67 T
(/* sender was rationing packets when this) 254 434.67 T
(one was allocated */) 254 421.67 T
(low_on_pkts) 146 402.67 T
(/* sender was low on packets when this one) 254 402.67 T
(was allocated */) 254 389.67 T
(pkt) 146 370.67 T
(/* offset to beginning of pkt \050gets us) 254 370.67 T
(through any alignment padding\051 */) 254 357.67 T
(pkt_real) 146 338.67 T
(/* pointer to actual start of received) 254 338.67 T
(packet */) 254 325.67 T
7 F
(}) 146 306.67 T
142.75 599 142.75 298 2 L
V
0.5 H
N
145.25 596.5 145.25 300.5 2 L
V
N
250.75 578.75 250.75 318.25 2 L
V
N
253.25 578.75 253.25 318.25 2 L
V
N
538.75 596.5 538.75 300.5 2 L
V
N
541.25 599 541.25 298 2 L
V
N
142.5 599.25 541.5 599.25 2 L
V
N
145 596.75 539 596.75 2 L
V
N
145.5 579 538.5 579 2 L
V
N
145.5 560 538.5 560 2 L
V
N
145.5 541 538.5 541 2 L
V
N
145.5 522 538.5 522 2 L
V
N
145.5 503 538.5 503 2 L
V
N
145.5 484 538.5 484 2 L
V
N
145.5 465 538.5 465 2 L
V
N
145.5 446 538.5 446 2 L
V
N
145.5 414 538.5 414 2 L
V
N
145.5 382 538.5 382 2 L
V
N
145.5 350 538.5 350 2 L
V
N
145.5 318 538.5 318 2 L
V
N
145 300.25 539 300.25 2 L
V
N
142.5 297.75 541.5 297.75 2 L
V
N
FMENDPAGE
%%EndPage: "23" 124
%%Page: "24" 124
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-24) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(mine how lar) 180 712 T
(ge a receive window to advertise. Systems that are) 243.07 712 T
(rationing packets are never allowed to queue more than one packet) 180 698.5 T
(at a time, and so set their) 180 685 T
5 11 Q
(window_size) 302.58 685 T
2 12 Q
( to 1.) 375.09 685 T
(Receive queue elements are subject to whatever locking is in ef) 108 665.5 T
(fect on the queues) 412.21 665.5 T
(on which they reside. Beyond that, they have no locking requirements.) 108 652 T
-0.26 (Receive queues \050T) 108 632.5 P
-0.26 (able 6-6\051 or) 195.89 632.5 P
-0.26 (ganize queue elements so that they can be ef) 251.1 632.5 P
-0.26 (\336ciently) 461.95 632.5 P
(delivered, in order) 108 619 T
(, to the stubs.) 195.78 619 T
-0.29 (Elements are dequeued from the head of the queue. Element ordering on the queue) 108 231.5 P
(is based on fragment number \050the lowest-numbered packet is \336rst in the queue\051.) 108 218 T
(Other useful per) 108 204.5 T
(-\336eld information includes:) 185.69 204.5 T
5 11 Q
(last_inorder) 108 185.67 T
2 12 Q
(If this \336eld is) 180 173 T
5 11 Q
(NULL) 246.63 173 T
2 12 Q
(, then there is either a gap at the head of the) 273 173 T
(queue or the queue is empty) 180 159.5 T
(.) 314.12 159.5 T
5 11 Q
(next_fragnum, high_fragnum, high_serial_num) 108 140.67 T
2 12 Q
(Queue or) 180 128 T
(ganization functions use these values to determine the) 224.08 128 T
(order in which to insert a a new queue elements.) 180 114.5 T
4 F
(T) 219.22 601 T
(able 6-6: rpc_dg_r) 224.79 601 T
(ecvq_t structur) 315.61 601 T
(e) 387.45 601 T
7 11 Q
(rpc_dg_recvq_t {) 110 579.67 T
5 F
(head) 110 560.67 T
(/* pointer to f) 236 560.67 T
(irst queue element */) 334.88 560.67 T
(last_inorder) 110 541.67 T
(/* pointer to highest-numbered in-order) 236 541.67 T
(queue element */) 236 528.67 T
(next_fragnum) 110 509.67 T
-0.53 (/* next in-order fragment we want to see) 236 509.67 P
(*/) 236 496.67 T
(high_serial_num) 110 477.67 T
(/* highest serial number seen so far */) 236 477.67 T
(window_size) 110 458.67 T
(/* receive window size \050pkts\051 */) 236 458.67 T
(wake_thread_qsize) 110 439.67 T
(/* number of elements to enqueue before) 236 439.67 T
(waking up the executor thread */) 236 426.67 T
(queue_len) 110 407.67 T
(/* number of elements in the queue */) 236 407.67 T
(inorder_len) 110 388.67 T
-0.71 (/* total number of contiguous \050in-order\051) 236 388.67 P
(element in the queue */) 236 375.67 T
(recving_frags) 110 356.67 T
-0.61 (/* true iff we are still enqueueing frag-) 236 356.67 P
(ments */) 236 343.67 T
(all_pkts_received) 110 324.67 T
-0.53 (/* true iff we\325ve received all data pkts) 236 324.67 P
(for this call */) 236 311.67 T
(is_way_validated) 110 292.67 T
(/* true if this connection has survived) 236 292.67 T
(who-are-you callback validation */) 236 279.67 T
7 F
(}) 110 260.67 T
106.75 592 106.75 252 2 L
V
0.5 H
0 Z
N
109.25 589.5 109.25 254.5 2 L
V
N
232.75 571.75 232.75 272.25 2 L
V
N
235.25 571.75 235.25 272.25 2 L
V
N
502.75 589.5 502.75 254.5 2 L
V
N
505.25 592 505.25 252 2 L
V
N
106.5 592.25 505.5 592.25 2 L
V
N
109 589.75 503 589.75 2 L
V
N
109.5 572 502.5 572 2 L
V
N
109.5 553 502.5 553 2 L
V
N
109.5 521 502.5 521 2 L
V
N
109.5 489 502.5 489 2 L
V
N
109.5 470 502.5 470 2 L
V
N
109.5 451 502.5 451 2 L
V
N
109.5 419 502.5 419 2 L
V
N
109.5 400 502.5 400 2 L
V
N
109.5 368 502.5 368 2 L
V
N
109.5 336 502.5 336 2 L
V
N
109.5 304 502.5 304 2 L
V
N
109.5 272 502.5 272 2 L
V
N
109 254.25 503 254.25 2 L
V
N
106.5 251.75 505.5 251.75 2 L
V
N
FMENDPAGE
%%EndPage: "24" 125
%%Page: "25" 125
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-25) 518.02 34.67 T
0 F
(Client and Server Connection T) 108 712 T
(ables) 270.14 712 T
2 F
(These tables provide the state needed to maintain a \322connection\323 over a connec-) 144 692 T
(tionless protocol.) 144 678.5 T
241.95 657.69 144 657.69 2 L
V
0.59 H
0 Z
N
(Client Connection T) 144 659 T
291.73 657.69 241.11 657.69 2 L
V
N
(able and T) 241.11 659 T
358.51 657.69 290.89 657.69 2 L
V
N
(able Elements) 290.89 659 T
-0.29 (The Client Connection T) 144 639 P
-0.29 (able \050CCT\051 is a hash table of Client Connection T) 261.9 639 P
-0.29 (able Ele-) 497.33 639 P
(ments \050CCTEs\051 that provide a client with information on connection to remote) 144 625.5 T
(servers. Each CCTE is keyed by a call\325) 144 612 T
(s authentication information) 331.19 612 T
1 F
(.) 466.44 612 T
2 F
(Since a dis-) 472.44 612 T
(cussion of authenticated RPC is beyond the scope of this document, we will) 144 598.5 T
-0.16 (assume that this is opaque data that is \322always correct.\323 The base CCTE is de\336ned) 144 585 P
(in) 144 571.5 T
5 11 Q
(dg.h) 156.33 571.5 T
2 12 Q
( and illustrated here in T) 182.7 571.5 T
(able 6-7.) 299.44 571.5 T
(The CCT itself is simplya separately-chained hash table referenced through the) 144 313 T
(structure illustrated in T) 144 299.5 T
(able 6-8.) 258.75 299.5 T
4 F
(T) 252.33 553.5 T
(able 6-7: rpc_dg_cct_elt_t structur) 257.9 553.5 T
(e) 426.34 553.5 T
7 11 Q
(rpc_dg_cct_elt_t {) 146 532.17 T
5 F
(*next) 146 513.17 T
(/* pointer to next element in hash chain */) 254 513.17 T
(auth_info) 146 494.17 T
(/* pointer to auth info for this call */) 254 494.17 T
(key_info) 146 475.17 T
(/* auth key */) 254 475.17 T
(*auth_epv) 146 456.17 T
(/* pointer to auth epv */) 254 456.17 T
(actid) 146 437.17 T
(/* activity ID */) 254 437.17 T
(actid_hash) 146 418.17 T
(/* uuid_hash\050actid\051 */) 254 418.17 T
(seq) 146 399.17 T
(/* sequence number to use in next call */) 254 399.17 T
(timestamp) 146 380.17 T
-0.6 (/* last time this CCTE was used in a call */) 254 380.17 P
(refcnt) 146 361.17 T
(/* number of references to this CCTE */) 254 361.17 T
7 F
(}) 146 342.17 T
4 12 Q
(T) 261.33 281.5 T
(able 6-8: rpc_dg_cct_t structur) 266.89 281.5 T
(e) 417.35 281.5 T
7 11 Q
(rpc_dg_cct_t {) 146 260.17 T
5 F
(gc_count) 146 241.17 T
(/* number of times this table has been gar-) 254 241.17 T
(bage-collected */) 254 228.17 T
(t) 146 209.17 T
-0.86 (/* a two-element structure with pointers to) 254 209.17 P
(the f) 254 196.17 T
(irst and last CCTEs:) 286.96 196.17 T
(struct {) 264.99 183.17 T
(rpc_dg_cct_elt_p_t) 319.92 170.17 T
(f) 460.54 170.17 T
(irst;) 467.14 170.17 T
(rpc_dg_cct_elt_p_t) 319.92 157.17 T
(last;) 460.54 157.17 T
(}) 314.42 144.17 T
(t) 326.51 144.17 T
(*/) 254 131.17 T
7 F
(}) 146 112.17 T
142.75 544.5 142.75 333.5 2 L
V
0.5 H
N
145.25 542 145.25 336 2 L
V
N
250.75 524.25 250.75 353.75 2 L
V
N
253.25 524.25 253.25 353.75 2 L
V
N
538.75 542 538.75 336 2 L
V
N
541.25 544.5 541.25 333.5 2 L
V
N
142.5 544.75 541.5 544.75 2 L
V
N
145 542.25 539 542.25 2 L
V
N
145.5 524.5 538.5 524.5 2 L
V
N
145.5 505.5 538.5 505.5 2 L
V
N
145.5 486.5 538.5 486.5 2 L
V
N
145.5 467.5 538.5 467.5 2 L
V
N
145.5 448.5 538.5 448.5 2 L
V
N
145.5 429.5 538.5 429.5 2 L
V
N
145.5 410.5 538.5 410.5 2 L
V
N
145.5 391.5 538.5 391.5 2 L
V
N
145.5 372.5 538.5 372.5 2 L
V
N
145.5 353.5 538.5 353.5 2 L
V
N
145 335.75 539 335.75 2 L
V
N
142.5 333.25 541.5 333.25 2 L
V
N
142.75 272.5 142.75 103.5 2 L
V
N
145.25 270 145.25 106 2 L
V
N
250.75 252.25 250.75 123.75 2 L
V
N
253.25 252.25 253.25 123.75 2 L
V
N
538.75 270 538.75 106 2 L
V
N
541.25 272.5 541.25 103.5 2 L
V
N
142.5 272.75 541.5 272.75 2 L
V
N
145 270.25 539 270.25 2 L
V
N
145.5 252.5 538.5 252.5 2 L
V
N
145.5 220.5 538.5 220.5 2 L
V
N
145.5 123.5 538.5 123.5 2 L
V
N
145 105.75 539 105.75 2 L
V
N
142.5 103.25 541.5 103.25 2 L
V
N
FMENDPAGE
%%EndPage: "25" 126
%%Page: "26" 126
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-26) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(CCTEs are re-usable and also garbage-collectable. Actual references to a CCTE) 108 712 T
(are made through a \322soft\323 pointer that includes a) 108 698.5 T
5 11 Q
(gc_count) 344.15 698.5 T
2 12 Q
( \336eld \050T) 396.89 698.5 T
(able 6-9\051.) 434.69 698.5 T
(The CCTE reference is considered valid if the soft pointer) 108 547 T
(\325) 387.23 547 T
(s) 390.57 547 T
5 11 Q
(gc_count) 398.23 547 T
2 12 Q
( matches) 450.96 547 T
(that of the) 108 533.5 T
5 11 Q
(cct_t) 159.63 533.5 T
2 12 Q
( on which the element resides.) 192.59 533.5 T
-0.2 (Each CCTE has a) 108 514 P
5 11 Q
-0.44 (refcnt) 195.14 514 P
2 12 Q
-0.2 ( \336eld that is incremented by every object that believes it) 234.7 514 P
-0.47 (is holding a reference to the element. This includes, at a minimum, a reference held) 108 500.5 P
(by the CCT itself, as well as the reference to the CCTE held by the call. When a) 108 487 T
-0.18 (client wants to make a call, it \336rst looks for a CCTE with an) 108 473.5 P
5 11 Q
-0.4 (auth_info) 396.92 473.5 P
2 12 Q
-0.18 ( \336eld that) 456.24 473.5 P
(matches the client\325) 108 460 T
(s) 197.94 460 T
5 11 Q
( auth_info) 202.6 460 T
2 12 Q
( and a) 268.52 460 T
5 11 Q
(refcnt==0) 300.16 460 T
2 12 Q
(. If it \336nds one, it increments) 359.49 460 T
(the reference count \050declaring the CCTE in use\051, then increments the sequence) 108 446.5 T
(number and makes the call using the CCTE\325) 108 433 T
(s activity UUID. If the client cannot) 320.2 433 T
(\336nd a matching CCTE, it creates one, generating a new activity UUID and setting) 108 419.5 T
(the) 108 406 T
5 11 Q
(auth_info) 125.65 406 T
2 12 Q
( \336eld. CCTEs are chained onto the tail of the CCT) 184.98 406 T
(, which means) 424.95 406 T
(that clients, in their search for a CCTE to use, examine the oldest entries \336rst,) 108 392.5 T
(which improves their chances of \336nding a free CCTE.) 108 379 T
207.93 358.19 108 358.19 2 L
V
0.59 H
0 Z
N
(Server Connection T) 108 359.5 T
257.71 358.19 207.09 358.19 2 L
V
N
(able and T) 207.09 359.5 T
324.49 358.19 256.87 358.19 2 L
V
N
(able Elements) 256.87 359.5 T
(The Server Connection T) 108 339.5 T
(able \050SCT\051 is a hash table of Server Connection T) 228.74 339.5 T
(able) 467.39 339.5 T
(Element \050SCTE\051 structures that provides the basis for demultiplexing received) 108 326 T
-0.29 (packets based on activity/sequence data. It also maintains a cache of call state \050e.g.) 108 312.5 P
5 11 Q
(auth_info) 108 299 T
2 12 Q
(\051 for re-use by calls with the same activity UUID. Servers keep this) 167.33 299 T
(information in a single table \050as opposed to clients, who store analogous informa-) 108 285.5 T
(tion in the CCT and the CCALL) 108 272 T
(T\051 to optimize their frequent dealings with newly-) 262.15 272 T
-0.31 (arrived requests from previously unheard-of clients. When this happens, the server) 108 258.5 P
(only has to manage lookups/inserts on a single table. \050Clients, we assume, always) 108 245 T
(know the source of any request packets with which they have to deal.\051) 108 231.5 T
4 F
(T) 206.89 680.5 T
(able 6-9: rpc_dg_cct_elt_r) 212.46 680.5 T
(ef_t structur) 341.26 680.5 T
(e) 399.78 680.5 T
5 11 Q
(rpc_dg_cct_elt_ref_t {) 110 659.17 T
(*ccte) 110 640.17 T
(/* pointer to CCTE, valid iff) 218 640.17 T
(gc_count \050below\051 == CCT->gc_count */) 218 627.17 T
(gc_count) 110 608.17 T
(/* number of times we think the table con-) 218 608.17 T
(taining this entry has been GC\325d */) 218 595.17 T
(}) 110 576.17 T
106.75 671.5 106.75 567.5 2 L
V
0.5 H
N
109.25 669 109.25 570 2 L
V
N
214.75 651.25 214.75 587.75 2 L
V
N
217.25 651.25 217.25 587.75 2 L
V
N
502.75 669 502.75 570 2 L
V
N
505.25 671.5 505.25 567.5 2 L
V
N
106.5 671.75 505.5 671.75 2 L
V
N
109 669.25 503 669.25 2 L
V
N
109.5 651.5 502.5 651.5 2 L
V
N
109.5 619.5 502.5 619.5 2 L
V
N
109.5 587.5 502.5 587.5 2 L
V
N
109 569.75 503 569.75 2 L
V
N
106.5 567.25 505.5 567.25 2 L
V
N
FMENDPAGE
%%EndPage: "26" 127
%%Page: "27" 127
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-27) 518.02 34.67 T
2 F
(SCTEs are added to the SCT by the network listener thread. The SCT and all its) 144 712 T
(elements are protected by the RPC global mutex. T) 144 281.5 T
(able 6-10 illustrates an SCTE.) 388.67 281.5 T
(Additional useful information on SCTE \336elds:) 144 262 T
5 11 Q
(high_seq, high_seq_is_way_validated) 144 243.17 T
2 12 Q
(Servers attempt to maintain sequence number information that) 216 230.5 T
-0.25 (accurately re\337ects the information held by the client \050whose idea of) 216 217 P
(a call\325) 216 203.5 T
(s sequence number is always correct\051, since they need this) 244.98 203.5 T
-0.14 (information to maintain the integrity of non-idempotent call seman-) 216 190 P
-0.34 (tics. Since this information is only approximate \050the server does not) 216 176.5 P
(always see every call the client makes, nor is the client required to) 216 163 T
-0.25 (increase the sequence number by 1 on successive reuses of an activ-) 216 149.5 P
-0.37 (ity UUID\051, we assume that the server) 216 136 P
-0.37 (\325) 393.06 136 P
-0.37 (s idea of call sequence is only) 396.39 136 P
(approximate until it has executed a Who Are Y) 216 122.5 T
(ou \050W) 441.3 122.5 T
(A) 470.27 122.5 T
(Y\051 callback) 477.83 122.5 T
(to the client to validate/correct it. See page 7-20 for more informa-) 216 109 T
(tion on W) 216 95.5 T
(A) 262.64 95.5 T
(Y callbacks and the conversation manager) 270.2 95.5 T
(.) 472.37 95.5 T
(When an SCTE is created, in response to the arrival of a request) 216 76 T
4 F
(T) 249.66 694 T
(able 6-10: rpc_dg_sct_elt_t structur) 255.23 694 T
(e) 429.01 694 T
5 11 Q
(rpc_dg_sct_elt_t {) 146 672.67 T
(*next) 146 653.67 T
(/* pointer to next elt in hash) 326 653.67 T
(chain */) 326 640.67 T
(actid) 146 621.67 T
(/* activity UUID */) 326 621.67 T
(ahint) 146 602.67 T
(/* activity hint \050from pkt) 326 602.67 T
(header\051, used as the index of) 326 589.67 T
(this SCTE */) 326 576.67 T
(high_seq) 146 557.67 T
(/* highest sequence number yet) 326 557.67 T
(seen for this actid */) 326 544.67 T
(high_seq_is_way_validated) 146 525.67 T
(/* true if high_seq above has) 326 525.67 T
(survived WAY validation */) 326 512.67 T
(refcnt) 146 493.67 T
-0.92 (/* reference count, always >= 1,) 326 493.67 P
(since the SCT itself holds a) 326 480.67 T
(reference */) 326 467.67 T
(key_info) 146 448.67 T
(/* auth key information */) 326 448.67 T
(*auth_epv) 146 429.67 T
(/* pointer to auth epv */) 326 429.67 T
(scall) 146 410.67 T
-0.92 (/* pointer to server call handle) 326 410.67 P
(for this call */) 326 397.67 T
(timestamp) 146 378.67 T
(/* last time this SCTE was used) 326 378.67 T
(by a call */) 326 365.67 T
(client) 146 346.67 T
-0.92 (/* pointer to client call handle) 326 346.67 P
(*/) 326 333.67 T
(}) 146 314.67 T
142.75 685 142.75 306 2 L
V
0.5 H
0 Z
N
145.25 682.5 145.25 308.5 2 L
V
N
322.75 664.75 322.75 326.25 2 L
V
N
325.25 664.75 325.25 326.25 2 L
V
N
538.75 682.5 538.75 308.5 2 L
V
N
541.25 685 541.25 306 2 L
V
N
142.5 685.25 541.5 685.25 2 L
V
N
145 682.75 539 682.75 2 L
V
N
145.5 665 538.5 665 2 L
V
N
145.5 633 538.5 633 2 L
V
N
145.5 614 538.5 614 2 L
V
N
145.5 569 538.5 569 2 L
V
N
145.5 537 538.5 537 2 L
V
N
145.5 505 538.5 505 2 L
V
N
145.5 460 538.5 460 2 L
V
N
145.5 441 538.5 441 2 L
V
N
145.5 422 538.5 422 2 L
V
N
145.5 390 538.5 390 2 L
V
N
145.5 358 538.5 358 2 L
V
N
145.5 326 538.5 326 2 L
V
N
145 308.25 539 308.25 2 L
V
N
142.5 305.75 541.5 305.75 2 L
V
N
FMENDPAGE
%%EndPage: "27" 128
%%Page: "28" 128
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-28) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(fragment bearing an activity/sequence pair that the server hasn\325) 180 712 T
(t) 484.2 712 T
(previously seen, it\325) 180 698.5 T
(s) 270.95 698.5 T
5 11 Q
(high_seq) 278.61 698.5 T
2 12 Q
( member is initialized to) 331.34 698.5 T
5 11 Q
(\050\050fragment->seq\051-1\051) 234 679.67 T
2 12 Q
(which represents the value that an existing SCTE for that activity) 180 655 T
(would have had before that fragment was received. At any instant,) 180 641.5 T
5 11 Q
-0.51 (high_seq) 180 628 P
2 12 Q
-0.23 ( represents the highest sequence number associated with) 232.73 628 P
(any call:) 180 614.5 T
(\245) 180 595 T
(executed by the server) 196.19 595 T
(, or) 303.28 595 T
(\245) 180 575.5 T
(accepted for potential execution on the basis that its sequence) 196.19 575.5 T
-0.03 (number is greater than) 180 562 P
5 11 Q
-0.07 (high_seq) 290.46 562 P
2 12 Q
-0.03 ( \050acceptance resets) 343.19 562 P
5 11 Q
-0.07 (high_seq) 436 562 P
2 12 Q
-0.03 ( to) 488.73 562 P
(the new value\051, or) 180 548.5 T
(\245) 180 529 T
(that acknowledges a W) 196.19 529 T
(A) 306.43 529 T
(Y callback.) 313.99 529 T
(No call may be executed unless the server) 180 509.5 T
(\325) 381.95 509.5 T
(s and client\325) 385.28 509.5 T
(s idea of) 443.24 509.5 T
5 11 Q
(high_seq) 180 496 T
2 12 Q
( have been synchronized via a W) 232.73 496 T
(A) 389.93 496 T
(Y callback. Once this) 397.49 496 T
(has happened,) 180 482.5 T
5 11 Q
(high_seq_is_way_validated) 250.94 482.5 T
2 12 Q
( is set true.) 415.74 482.5 T
5 11 Q
(scall) 108 463 T
2 12 Q
-0.51 (This pointer to the scall structure \050T) 180 463 P
-0.51 (able 6-14, page 6-35\051 associated) 348.67 463 P
(with a call that is currently using this connection. If the scall\325) 180 449.5 T
(s) 473.14 449.5 T
5 11 Q
(call_seq) 180 436 T
2 12 Q
( value matches this SCTE\325) 232.73 436 T
(s) 360 436 T
5 11 Q
(high_seq) 367.66 436 T
2 12 Q
( value, then this) 420.39 436 T
(SCTE represents the connection\325) 180 422.5 T
(s current \050or just-completed\051 call.) 337.56 422.5 T
(Otherwise, the SCTE is just caching auth and activity information) 180 409 T
(in anticipation of later re-use.) 180 395.5 T
0 F
(Client and Server Call Handles) 72 376 T
2 F
(Call handles are the logical representations of RPCs in the client and server) 108 356 T
(address spaces. They hold all of a call\325) 108 342.5 T
(s state, by which we mean both the formal) 293.19 342.5 T
(states de\336ned in the datagram RPC state tables and the informal \050though volumi-) 108 329 T
(nous\051 collection of information required to actually execute the call.) 108 315.5 T
(Call handles have several parts:) 108 296 T
(\245) 108 276.5 T
-0.04 (A common call handle structure that includes information common to all RPC) 126 276.5 P
(protocols.) 126 263 T
(\245) 108 243.5 T
-0.11 (A per) 126 243.5 P
-0.11 (-protocol call handle structure that includes information common to both) 152.63 243.5 P
(client and server call handles for a given protocol.) 126 230 T
(\245) 108 210.5 T
(Client and server call handle structures made up of the structures described) 126 210.5 T
(above as well as additional information useful only to clients or servers.) 126 197 T
(Figure 6-10 describes this hierarchy) 108 177.5 T
(. Note that the arrows do not signify pointer) 279.76 177.5 T
(relationships. This is a hierarchy of member types.) 108 164 T
FMENDPAGE
%%EndPage: "28" 129
%%Page: "29" 129
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-29) 518.02 34.67 T
(Figur) 254.5 712 T
(e 6-10: Call Handle Structur) 281.37 712 T
(es) 419.51 712 T
296.24 361.19 144 361.19 2 L
V
0.59 H
0 Z
N
2 F
(Common Call Handle Structure) 144 362.5 T
(The common call handle structure is de\336ned in) 144 342.5 T
5 11 Q
(com.h) 372.51 342.5 T
2 12 Q
(. W) 405.47 342.5 T
(e illustrate it in T) 421.83 342.5 T
(able 6-) 503.61 342.5 T
(12. Note that in com.h, the client/server union) 144 329 T
5 11 Q
( u) 364.52 329 T
2 12 Q
( is de\336ned in-line, as is the) 377.71 329 T
5 11 Q
(u.server.cancel) 144 315.5 T
2 12 Q
( structure, which made it necessary for us to take a few stylis-) 242.88 315.5 T
(tic liberties in deriving our illustration.) 144 302 T
144 384 540 708 C
364.88 398.87 516.75 681.37 R
5 X
0 K
V
156.88 400.12 301.88 681.37 R
6 X
V
9 8 Q
0 X
(rpc_dg_scall_t) 173.93 665.04 T
(rpc_dg_ccall_t) 447.86 663.76 T
6 F
(c) 447.86 654.46 T
9 F
(rpc_dg_call_t) 212.32 588.93 T
6 F
(c) 212.32 579.63 T
9 F
(rpc_call_rep_t) 233.39 492.82 T
6 F
(c) 173.93 655.73 T
9 12 Q
(\311) 0 -270 184.46 643.21 TF
(\311) 0 -270 457.97 638.46 TF
(\311) 0 -270 221.86 566.21 TF
(\311) 0 -270 240.75 474.81 TF
172.32 614.14 236.07 674.14 R
0.5 H
0 Z
N
445.72 610.93 507.33 674.14 R
N
210.18 519.89 266.43 600.25 R
N
232.32 429 289.64 502.39 R
N
9 8 Q
(rpc_dg_call_t) 409.07 588.93 T
6 F
(c) 409.07 579.63 T
9 12 Q
(\311) 0 -270 418.61 566.21 TF
406.93 519.89 463.18 600.25 R
N
9 8 Q
(rpc_call_rep_t) 373.36 492.82 T
9 12 Q
(\311) 0 -270 380.72 474.81 TF
372.29 429 429.61 502.39 R
N
229.98 499.41 235.18 496.41 229.98 493.41 3 L
N
217.04 581.06 289.29 581.06 204.64 496.41 235.18 496.41 4 L
N
206.41 597.84 211.61 594.84 206.41 591.84 3 L
N
179.36 656.44 220.9 656.44 159.29 594.84 211.61 594.84 4 L
N
408.11 500.81 402.31 499.28 403.89 505.07 3 L
N
413.07 579.63 482.68 579.63 402.32 499.27 3 L
N
441.86 596.52 436.06 595 437.64 600.79 3 L
N
451.86 654.46 495.54 654.46 436.07 594.99 3 L
N
8 8 Q
(Server) 210.63 693.87 T
(Client) 427.92 693.87 T
(common) 315 468.87 T
(dg common) 309.45 566.44 T
(client/server) 308.78 653.39 T
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "29" 130
%%Page: "30" 130
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-30) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(T) 201.32 712 T
(able 6-1) 206.89 712 T
(1) 245.64 712 T
2 F
(:) 251.64 712 T
4 F
(rpc_call_r) 257.97 712 T
(ep_t structur) 308.16 712 T
(e) 369.35 712 T
293.9 264.69 108 264.69 2 L
V
0.59 H
0 Z
N
2 F
(Common Datagram RPC Call Handles) 108 266 T
(The portion of a call rep that is common across datagram RPC clients and servers) 108 246 T
(is de\336ned in) 108 232.5 T
5 11 Q
(dg.h) 169.63 232.5 T
2 12 Q
(. In conjunction with several \336elds of the transmit queue\325) 196 232.5 T
(s pro-) 469.82 232.5 T
-0.16 (totype packet header \050T) 108 219 P
-0.16 (able 6-1\051, it holds the bulk of the per) 220.23 219 P
-0.16 (-call state. Most of the) 394.23 219 P
(\336elds in this structure are protected by the call handle\325) 108 205.5 T
(s mutex. W) 368.15 205.5 T
(e\325ll describe) 422.15 205.5 T
(exceptions to this rule when we discuss individual members.) 108 192 T
5 11 Q
(rpc_call_rep_t {) 109 690.67 T
(link) 109 671.67 T
(/* list of which we are a member */) 254 671.67 T
(m) 109 652.67 T
(/* mutex that protects us */) 254 652.67 T
(protocol_id) 109 633.67 T
(/* protocol id, used to dispatch the) 254 633.67 T
(call to the appropriate protocol\325s) 254 620.67 T
(call epv */) 254 607.67 T
(is_server) 109 588.67 T
(/* discriminator for server/client) 254 588.67 T
(union \322u\323, true iff this is a server) 254 575.67 T
(call handle */) 254 562.67 T
(u) 109 543.67 T
-0.62 (/* beginning of client/server informa-) 254 543.67 P
(tion \050a union type\051 */) 254 530.67 T
108.5 504.25 250.5 522.75 R
6 X
V
0 X
(u.server) 109 511.67 T
253.5 504.25 502.5 522.75 R
6 X
V
0 X
(/* server arm of the union */) 254 511.67 T
108.5 485.25 250.5 503.75 R
6 X
V
0 X
(cancel{) 130.97 492.67 T
253.5 485.25 502.5 503.75 R
6 X
V
0 X
(/* cancel info structure */) 254 492.67 T
108.5 466.25 250.5 484.75 R
6 X
V
0 X
(accepting) 174.92 473.67 T
253.5 466.25 502.5 484.75 R
6 X
V
0 X
(/* true iff accepting cancels */) 254 473.67 T
108.5 447.25 250.5 465.75 R
6 X
V
0 X
(queuing) 174.92 454.67 T
253.5 447.25 502.5 465.75 R
6 X
V
0 X
(/* true iff queuing cancels */) 254 454.67 T
108.5 415.25 250.5 446.75 R
6 X
V
0 X
(had_pending) 174.92 435.67 T
253.5 415.25 502.5 446.75 R
6 X
V
0 X
(/* true iff call thread has a cancel) 254 435.67 T
(pending \050queued\051 */) 254 422.67 T
108.5 383.25 250.5 414.75 R
6 X
V
0 X
(count) 174.92 403.67 T
253.5 383.25 502.5 414.75 R
6 X
V
0 X
(/* number of cancels posted to call) 254 403.67 T
(thread */) 254 390.67 T
108.5 364.25 250.5 382.75 R
6 X
V
0 X
(}) 130.97 371.67 T
253.5 364.25 502.5 382.75 R
6 X
V
0 X
(/* end of cancel info */) 254 371.67 T
108.5 345.25 250.5 363.75 R
6 X
V
0 X
(cthread) 130.97 352.67 T
253.5 345.25 502.5 363.75 R
6 X
V
0 X
(/* thread-private data */) 254 352.67 T
108.5 326.25 250.5 344.75 R
5 X
V
0 X
(u.client) 109 333.67 T
253.5 326.25 502.5 344.75 R
5 X
V
0 X
(/* client arm of union */) 254 333.67 T
108.5 307.25 250.5 325.75 R
5 X
V
0 X
(dummy) 130.97 314.67 T
253.5 307.25 502.5 325.75 R
5 X
V
0 X
(/* no client-only data \050yet\051 */) 254 314.67 T
(}) 109 295.67 T
105.75 703 105.75 287 2 L
V
0.5 H
N
108.25 700.5 108.25 289.5 2 L
V
N
250.75 682.75 250.75 307.25 2 L
V
N
253.25 682.75 253.25 307.25 2 L
V
N
502.75 700.5 502.75 289.5 2 L
V
N
505.25 703 505.25 287 2 L
V
N
105.5 703.25 505.5 703.25 2 L
V
N
108 700.75 503 700.75 2 L
V
N
108.5 683 502.5 683 2 L
V
N
108.5 664 502.5 664 2 L
V
N
108.5 645 502.5 645 2 L
V
N
108.5 600 502.5 600 2 L
V
N
108.5 555 502.5 555 2 L
V
N
108.5 523 502.5 523 2 L
V
N
108.5 504 502.5 504 2 L
V
N
108.5 485 502.5 485 2 L
V
N
108.5 466 502.5 466 2 L
V
N
108.5 447 502.5 447 2 L
V
N
108.5 415 502.5 415 2 L
V
N
108.5 383 502.5 383 2 L
V
N
108.5 364 502.5 364 2 L
V
N
108.5 345 502.5 345 2 L
V
N
108.5 326 502.5 326 2 L
V
N
108.5 307 502.5 307 2 L
V
N
108 289.25 503 289.25 2 L
V
N
105.5 286.75 505.5 286.75 2 L
V
N
FMENDPAGE
%%EndPage: "30" 131
%%Page: "31" 131
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-31) 518.02 34.67 T
2 F
(T) 144 712 T
(able 6-12 illustrates the common datagram RPC call handle.) 150.49 712 T
4 F
(T) 256.33 694 T
(able 6-12: rpc_dg_call_t structur) 261.89 694 T
(e) 422.35 694 T
5 11 Q
(rpc_dg_call_t {) 146 672.67 T
(c) 146 653.67 T
-0.62 (/* common portion \050rpc_dg_call_rep_t\051) 290 653.67 P
(*/) 290 640.67 T
(*next) 146 621.67 T
(/* pointer to next element in hash) 290 621.67 T
(chain */) 290 608.67 T
(state) 146 589.67 T
(/* FSM state of the call */) 290 589.67 T
(status) 146 570.67 T
-0.36 (/* current error status of the call */) 290 570.67 P
(state_timestamp) 146 551.67 T
(/* when .state was last changed */) 290 551.67 T
(cv) 146 532.67 T
(/* the call\325s condition variable */) 290 532.67 T
(xq) 146 513.67 T
(/* the calls transmit queue */) 290 513.67 T
(rq) 146 494.67 T
(/* the calls receive queue */) 290 494.67 T
(*sock_ref) 146 475.67 T
(/* pointer to socket pool elt */) 290 475.67 T
(actid_hash) 146 456.67 T
(/* uuid_hash\050acitivty_uuid\051 */) 290 456.67 T
(key_info) 146 437.67 T
(/* auth key info */) 290 437.67 T
(*auth_epv) 146 418.67 T
(/* pointer to auth epv */) 290 418.67 T
(addr) 146 399.67 T
(/* rpc_addr_t of \050client/server\051 */) 290 399.67 T
(timer) 146 380.67 T
(/* call timer */) 290 380.67 T
(last_rcv_timestamp) 146 361.67 T
(/* when we last added a pkt to .rq */) 290 361.67 T
(start_time) 146 342.67 T
(/* rpc_clock_t when call started */) 290 342.67 T
(high_seq) 146 323.67 T
(/* current sequence number */) 290 323.67 T
(*pkt_chain) 146 304.67 T
(/* pointer to list of XQEs */) 290 304.67 T
(com_timeout_knob) 146 285.67 T
(/* the big knob */) 290 285.67 T
(refcnt) 146 266.67 T
-0.36 (/* count of references to this call */) 290 266.67 P
(stop_timer) 146 247.67 T
(/* true iff timer routine should die) 290 247.67 T
(after next execution */) 290 234.67 T
(is_cbk) 146 215.67 T
-0.36 (/* true iff this call was created spe-) 290 215.67 P
(cif) 290 202.67 T
(ically to do a callback */) 309.77 202.67 T
(has_pkt_reservation) 146 183.67 T
-1.01 (/* true iff the call has a packet pool) 290 183.67 P
(reservation */) 290 170.67 T
(0) 146 151.67 T
(/* alignment padding*/) 290 151.67 T
(is_in_pkt_chain) 146 132.67 T
-1.01 (/* true iff the call is waiting for an) 290 132.67 P
(XQE to free up */) 290 119.67 T
(0) 146 100.67 T
(/* alignment padding*/) 290 100.67 T
(}) 146 81.67 T
142.75 685 142.75 73 2 L
V
0.5 H
0 Z
N
145.25 682.5 145.25 75.5 2 L
V
N
286.75 664.75 286.75 93.25 2 L
V
N
289.25 664.75 289.25 93.25 2 L
V
N
538.75 682.5 538.75 75.5 2 L
V
N
541.25 685 541.25 73 2 L
V
N
142.5 685.25 541.5 685.25 2 L
V
N
145 682.75 539 682.75 2 L
V
N
145.5 665 538.5 665 2 L
V
N
145.5 633 538.5 633 2 L
V
N
145.5 601 538.5 601 2 L
V
N
145.5 582 538.5 582 2 L
V
N
145.5 563 538.5 563 2 L
V
N
145.5 544 538.5 544 2 L
V
N
145.5 525 538.5 525 2 L
V
N
145.5 506 538.5 506 2 L
V
N
145.5 487 538.5 487 2 L
V
N
145.5 468 538.5 468 2 L
V
N
145.5 449 538.5 449 2 L
V
N
145.5 430 538.5 430 2 L
V
N
145.5 411 538.5 411 2 L
V
N
145.5 392 538.5 392 2 L
V
N
145.5 373 538.5 373 2 L
V
N
145.5 354 538.5 354 2 L
V
N
145.5 335 538.5 335 2 L
V
N
145.5 316 538.5 316 2 L
V
N
145.5 297 538.5 297 2 L
V
N
145.5 278 538.5 278 2 L
V
N
145.5 259 538.5 259 2 L
V
N
145.5 227 538.5 227 2 L
V
N
145.5 195 538.5 195 2 L
V
N
145.5 163 538.5 163 2 L
V
N
145.5 144 538.5 144 2 L
V
N
145.5 112 538.5 112 2 L
V
N
145.5 93 538.5 93 2 L
V
N
145 75.25 539 75.25 2 L
V
N
142.5 72.75 541.5 72.75 2 L
V
N
FMENDPAGE
%%EndPage: "31" 132
%%Page: "32" 132
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-32) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(3-83-8Here\325) 108 712 T
(s some more information on speci\336c structure elements.) 166.61 712 T
5 11 Q
(*next) 108 692.5 T
2 12 Q
(This value is protected by whatever locking mechanism is used by) 180 692.5 T
(the data structure of which the call handle is a member) 180 679 T
(.) 441.8 679 T
5 11 Q
(state) 108 659.5 T
2 12 Q
(This \336eld describes which of the states of the datagram protocol) 180 659.5 T
-0.29 (Finite State Machine the call is currently assumed to be in. Possible) 180 646 P
(values are:) 180 632.5 T
5 11 Q
(status) 108 502 T
2 12 Q
(This this the current status code, the one most recently returned by) 180 502 T
(whatever piece of call transmission/execution machinery is run-) 180 488.5 T
(ning.) 180 475 T
5 11 Q
(cv) 108 455.5 T
2 12 Q
-0.04 (This condition variable is used in conjunction with the) 180 455.5 P
5 11 Q
-0.09 (mutex) 443.8 455.5 P
2 12 Q
-0.04 ( \336eld) 476.76 455.5 P
(\050in the common part of the call handle\051 to signal waiters that the) 180 442 T
(call handle has changed \050e.g.,) 180 428.5 T
5 11 Q
(xq) 324.55 428.5 T
2 12 Q
( or) 337.73 428.5 T
5 11 Q
(rq) 353.71 428.5 T
2 12 Q
( have new data\051.) 366.9 428.5 T
5 11 Q
(xq) 108 409 T
2 12 Q
(The call\325) 180 409 T
(s transmit queue. Several values that are logically part of) 222.3 409 T
(the call itself are stored in the transmit queue\325) 180 395.5 T
(s prototype packet) 399.18 395.5 T
(header as an optimization and referenced through this member) 180 382 T
(.) 479.1 382 T
(They are de\336ned as:) 180 368.5 T
5 11 Q
(*sock_ref) 108 223 T
2 12 Q
(Every call must hold a reference to a socket pool element. This is) 180 223 T
(the pointer to that element for this call.) 180 209.5 T
5 11 Q
(timer) 108 190 T
2 12 Q
(This call\325) 180 190 T
(s timer routine \050see) 224.98 190 T
(page 3-8\051.) 320.24 190 T
5 11 Q
(high_seq) 108 170.5 T
2 12 Q
(W) 180 170.5 T
(e track this per) 190.36 170.5 T
(-call so that in the event this call is a callback and) 261.06 170.5 T
(it times out, we can still begin a new call with the appropriate) 180 157 T
(sequence number) 180 143.5 T
1 F
(.) 262.93 143.5 T
2 F
(This value can be incremented by wither receiv-) 268.93 143.5 T
-0.5 (ing a request packet with this call\325) 180 130 P
-0.5 (s activity UUID, or by receiving a) 340.92 130 P
(response packet with a higher) 180 116.5 T
5 11 Q
(high_seq) 325.55 116.5 T
2 12 Q
(.) 378.29 116.5 T
5 11 Q
(*pkt_chain, has_pkt_reservation, in_pkt_chain) 108 97.67 T
2 12 Q
(These values are used by the packet rationing code to determine) 180 85 T
5 11 Q
(rpc_e_dg_cs_) 186 613.17 T
(meaning) 294 613.17 T
(init) 186 598.17 T
(initialized and in use) 294 598.17 T
(xmit) 186 583.17 T
(in use, sending data) 294 583.17 T
(recv) 186 568.17 T
(in use, awaiting data) 294 568.17 T
(f) 186 553.17 T
(inal) 192.59 553.17 T
(in use, ack pending) 294 553.17 T
(idle) 186 538.17 T
(not in use) 294 538.17 T
(orphan) 186 523.17 T
(in use) 294 523.17 T
12 F
(,) 333.55 523.17 T
5 F
( waiting to exit) 340.14 523.17 T
(call_actid) 186 349.17 T
(xq.hdr.actuid) 312 349.17 T
(call_object) 186 334.17 T
(xq.hdr.object) 312 334.17 T
(call_if_id) 186 319.17 T
(xq.hdr.if_id) 312 319.17 T
(call_if_vers) 186 304.17 T
(xq.hdr.if_vers) 312 304.17 T
(call_ahint) 186 289.17 T
(xq.hdr.ahint) 312 289.17 T
(call_opnum) 186 274.17 T
(xq.hdr.opnum) 312 274.17 T
(call_seq) 186 259.17 T
(xq.hdr.seq) 312 259.17 T
(call_server_boot) 186 244.17 T
(xq.hdr.server_boot) 312 244.17 T
180 622.25 180 517.75 2 L
V
0.5 H
0 Z
N
288 622.75 288 517.25 2 L
V
N
504 622.25 504 517.75 2 L
V
N
179.75 622.5 504.25 622.5 2 L
V
N
180.25 608.75 503.75 608.75 2 L
V
N
180.25 606.25 503.75 606.25 2 L
V
N
179.75 517.5 504.25 517.5 2 L
V
N
180 358.25 180 238.75 2 L
V
N
306 358.75 306 238.25 2 L
V
N
504 358.25 504 238.75 2 L
V
N
179.75 358.5 504.25 358.5 2 L
V
N
179.75 238.5 504.25 238.5 2 L
V
N
FMENDPAGE
%%EndPage: "32" 133
%%Page: "33" 133
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-33) 518.02 34.67 T
2 F
(whether the call has a reservation) 216 712 T
(\050) 216 698.5 T
5 11 Q
(has_pkt_reservation==true) 219.99 698.5 T
2 12 Q
(\051 and, if it does, whether it actu-) 384.79 698.5 T
(ally has been allocated a packet. W) 216 685 T
(e discuss packet rationing on) 383.9 685 T
(page 7-25.) 216 671.5 T
5 11 Q
(com_timeout_knob) 144 652.67 T
2 12 Q
(Every call includes a 32-bit timeout value known as the \322timeout) 216 640 T
(knob,\323 since it should be thought of as conferring not an absolute) 216 626.5 T
(timeout value on the call, but rather a relative \050e.g., \322none, short,) 216 613 T
(medium, long, forever\323\051 value. The actual values are speci\336ed in) 216 599.5 T
5 11 Q
(dgxq.c) 216 586 T
2 12 Q
(. The default value is 30 \322rpc clock seconds.\323) 255.55 586 T
233.95 565.19 144 565.19 2 L
V
0.59 H
0 Z
N
(Client Call Handle) 144 566.5 T
(The client-speci\336c part of a datagram call handle is the repository for information) 144 546.5 T
(associated with a single binding handle and a single CCTE. It provides the data) 144 533 T
(needed to manage an in-progress call, and also serves as a cache for data that is) 144 519.5 T
(likely to be associated with a new call that re-uses this call\325) 144 506 T
(s activity UUID. The) 428.14 506 T
(call handle is initialized with interface id, hint, and operation number data at the) 144 492.5 T
(start of each new call. Changes in a call\325) 144 479 T
(s binding handle \050e.g., new object UUID,) 337.51 479 T
FMENDPAGE
%%EndPage: "33" 134
%%Page: "34" 134
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-34) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
-0.28 (new server endpoint\051 need to be re\337ected in updates to the client call handle. T) 108 712 P
-0.28 (able) 481.3 712 P
(6-13 describes this structure.) 108 698.5 T
(More data on various \336elds:) 108 234 T
5 11 Q
(ping) 108 214.5 T
2 12 Q
(This references an) 180 214.5 T
5 11 Q
(rpc_dg_ping_info) 270.91 214.5 T
2 12 Q
( structure, de\336ned in) 376.38 214.5 T
5 11 Q
(dg.h) 180 201 T
2 12 Q
(, that records data used by the client ping logic.) 206.37 201 T
5 11 Q
(quit) 108 181.5 T
2 12 Q
(This references an) 180 181.5 T
5 11 Q
(rpc_dg_quit_info) 270.91 181.5 T
2 12 Q
( structure, de\336ned in) 376.38 181.5 T
5 11 Q
(dg.h) 180 168 T
2 12 Q
(, that records data used in client quit processing.) 206.37 168 T
5 11 Q
(cancel) 108 148.5 T
2 12 Q
(This references an) 180 148.5 T
5 11 Q
(rpc_dg_cancel_info) 270.91 148.5 T
2 12 Q
( structure, de\336ned in) 389.56 148.5 T
5 11 Q
(dg.h) 180 135 T
2 12 Q
(, that records data used in client quit logic.) 206.37 135 T
4 F
(T) 217.66 680.5 T
(able 6-13: rpc_dg_ccall_t structur) 223.23 680.5 T
(e) 389.01 680.5 T
5 11 Q
(rpc_dg_ccall_t {) 110 659.17 T
(c) 110 640.17 T
(/* rpc_dg_call_t, common to all dg) 254 640.17 T
(call handles */) 254 627.17 T
(fault_rqe) 110 608.17 T
-0.36 (/* pointer to fault packet on receive) 254 608.17 P
(queue */) 254 595.17 T
(reject_status) 110 576.17 T
(/* status from any reject pkt we\325ve) 254 576.17 T
(received */) 254 563.17 T
(cbk_start) 110 544.17 T
-0.36 (/* true iff we\325re starting a callback) 254 544.17 P
(*/) 254 531.17 T
(response_info_updated) 110 512.17 T
(/* true iff ahint, ihint, high_seq) 254 512.17 T
(have been updated from values in a) 254 499.17 T
(response pkt */) 254 486.17 T
(server_bound) 110 467.17 T
(/* true iff we have a server binding) 254 467.17 T
(*/) 254 454.17 T
(cbk_scall) 110 435.17 T
-0.28 (/* true if this is the client half of) 254 435.17 P
(a callback pair */) 254 422.17 T
(ccte_ref) 110 403.17 T
-1.3 (/* CCTE soft reference \050see Table 6-9\051) 254 403.17 P
(*/) 254 390.17 T
(*h) 110 371.17 T
-0.36 (/* pointer to binding handle on which) 254 371.17 P
(this call was made */) 254 358.17 T
(ping) 110 339.17 T
(/* a ping info structure */) 254 339.17 T
(quit) 110 320.17 T
(/* a quit info structure */) 254 320.17 T
(cancel) 110 301.17 T
(/* a cancel info structure */) 254 301.17 T
(timeout_stamp) 110 282.17 T
(/* max call execution time */) 254 282.17 T
(}) 110 263.17 T
106.75 671.5 106.75 254.5 2 L
V
0.5 H
0 Z
N
109.25 669 109.25 257 2 L
V
N
250.75 651.25 250.75 274.75 2 L
V
N
253.25 651.25 253.25 274.75 2 L
V
N
502.75 669 502.75 257 2 L
V
N
505.25 671.5 505.25 254.5 2 L
V
N
106.5 671.75 505.5 671.75 2 L
V
N
109 669.25 503 669.25 2 L
V
N
109.5 651.5 502.5 651.5 2 L
V
N
109.5 619.5 502.5 619.5 2 L
V
N
109.5 587.5 502.5 587.5 2 L
V
N
109.5 555.5 502.5 555.5 2 L
V
N
109.5 523.5 502.5 523.5 2 L
V
N
109.5 478.5 502.5 478.5 2 L
V
N
109.5 446.5 502.5 446.5 2 L
V
N
109.5 414.5 502.5 414.5 2 L
V
N
109.5 382.5 502.5 382.5 2 L
V
N
109.5 350.5 502.5 350.5 2 L
V
N
109.5 331.5 502.5 331.5 2 L
V
N
109.5 312.5 502.5 312.5 2 L
V
N
109.5 293.5 502.5 293.5 2 L
V
N
109.5 274.5 502.5 274.5 2 L
V
N
109 256.75 503 256.75 2 L
V
N
106.5 254.25 505.5 254.25 2 L
V
N
FMENDPAGE
%%EndPage: "34" 135
%%Page: "35" 135
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-35) 518.02 34.67 T
235.93 710.69 144 710.69 2 L
V
0.59 H
0 Z
N
2 F
(Server Call Handle) 144 712 T
(The server) 144 692 T
(-speci\336c part of a datagram RPC call handle links a call to its binding) 194.71 692 T
(handle and also to the client half of any callback the server made in the course of) 144 678.5 T
(executing this call.) 144 665 T
0 F
(Data Structur) 108 321.5 T
(e Relationships) 179.4 321.5 T
2 F
-0.1 (At this point, we have described all of the major data structures that are part of the) 144 301.5 P
(datagram RPC protocol service. These data structures are grouped functionally) 144 288 T
(into what can be described as Client Control Blocks and Server Control Blocks,) 144 274.5 T
-0.02 (each of which include many of the same basic elements. Figure 6-1) 144 261 P
-0.02 (1 and Figure 6-) 466.44 261 P
(12 are intended to provide a detailed view of the structural relationships sketched) 144 247.5 T
-0.42 (out in Figure 6-10. Most of the functions that reference client or server call handles) 144 234 P
(do so via the) 144 220.5 T
5 11 Q
(rpc_dg_binding_client) 207.96 220.5 T
2 12 Q
( and) 346.39 220.5 T
5 11 Q
(rpc_dg_binding_server) 369.7 220.5 T
2 12 Q
( struc-) 508.13 220.5 T
-0.36 (tures. These structures are fairly uncomplicated, so we will dispense with the usual) 144 207 P
(illustration in the hope that Figure 6-1) 144 193.5 T
(1 and Figure 6-1) 326.12 193.5 T
(1 will do the trick.) 405.29 193.5 T
4 F
(T) 253.99 647 T
(able 6-14: rpc_dg_scall_t structur) 259.56 647 T
(e) 424.68 647 T
5 11 Q
(rpc_dg_scall_t {) 146 625.67 T
(c) 146 606.67 T
(/* rpc_dg_call_t, common to all dg call) 272 606.67 T
(handles */) 272 593.67 T
(fwd2_rqe) 146 574.67 T
(/* pointer to the f) 272 574.67 T
(irst half of a two-) 397.24 574.67 T
(part forwarded pkt */) 272 561.67 T
(*scte) 146 542.67 T
-0.61 (/* pointer to the SCTE representing this) 272 542.67 P
(call */) 272 529.67 T
(*cbk_call) 146 510.67 T
(/* pointer to the client half) 272 510.67 T
(\050) 272 497.67 T
(rpc_dg_ccall_t\051 of a callback */) 278.59 497.67 T
(*h) 146 478.67 T
(/* the binding handle associated with) 272 478.67 T
(this call */) 272 465.67 T
(client_needs_sboot) 146 446.67 T
(/* true iff client does not yet know) 272 446.67 T
-0.61 (server boot time \050no WAY has occurred\051 */) 272 433.67 P
(call_is_setup) 146 414.67 T
-1.21 (/* true iff we have spawned a cthread for) 272 414.67 P
(this call */) 272 401.67 T
(call_executor_ref) 146 382.67 T
(/* true iff the call has been given an) 272 382.67 T
(executor thread reference */) 272 369.67 T
(}) 146 350.67 T
142.75 638 142.75 342 2 L
V
0.5 H
N
145.25 635.5 145.25 344.5 2 L
V
N
268.75 617.75 268.75 362.25 2 L
V
N
271.25 617.75 271.25 362.25 2 L
V
N
538.75 635.5 538.75 344.5 2 L
V
N
541.25 638 541.25 342 2 L
V
N
142.5 638.25 541.5 638.25 2 L
V
N
145 635.75 539 635.75 2 L
V
N
145.5 618 538.5 618 2 L
V
N
145.5 586 538.5 586 2 L
V
N
145.5 554 538.5 554 2 L
V
N
145.5 522 538.5 522 2 L
V
N
145.5 490 538.5 490 2 L
V
N
145.5 458 538.5 458 2 L
V
N
145.5 426 538.5 426 2 L
V
N
145.5 394 538.5 394 2 L
V
N
145.5 362 538.5 362 2 L
V
N
145 344.25 539 344.25 2 L
V
N
142.5 341.75 541.5 341.75 2 L
V
N
FMENDPAGE
%%EndPage: "35" 136
%%Page: "36" 136
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-36) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 149.47 712 T
(e 6-1) 176.35 712 T
(1: Client Datagram RPC Data Structur) 199.77 712 T
(e Relationships) 388.9 712 T
108 72 504 708 C
325.45 685.5 320.25 688.5 325.45 691.5 3 L
0.5 H
0 Z
0 X
0 K
N
124.93 270 108.75 270 414.75 688.5 320.25 688.5 4 L
N
217.82 661.02 318.22 672.21 R
5 X
V
120.81 335.25 126 332.25 120.81 329.25 3 L
0 X
N
236.4 664.23 365.25 664.23 111.75 332.25 126 332.25 4 L
N
400.47 662.12 500.86 673.32 R
5 X
V
400.47 673.32 501 683.68 R
6 X
V
401 683.68 501 694.04 R
13 X
V
409.79 589.17 497.98 482.04 2 L
V
8 X
N
217.68 672.21 318.22 682.57 R
6 X
V
119.46 671.5 214.29 684.36 R
13 X
V
119.46 672.54 213.75 696.11 R
0 X
N
123.67 550.25 214.2 609 R
13 X
V
192.7 78.06 262.08 166.19 R
7 X
V
0 X
N
185.08 184.7 203.83 203.45 R
7 X
V
0 X
N
203.83 184.7 222.58 203.45 R
7 X
V
0 X
N
222.58 184.7 241.33 203.45 R
7 X
V
0 X
N
241.33 184.7 260.08 203.45 R
7 X
V
0 X
N
260.08 184.7 278.83 203.45 R
7 X
V
0 X
N
3 8 Q
(\256) 257.66 195.99 T
(\256) 238.37 195.99 T
(\256) 220.54 195.99 T
(\256) 201.04 195.99 T
278.83 184.7 297.58 203.45 R
7 X
V
0 X
N
297.58 184.7 316.33 203.45 R
7 X
V
0 X
N
316.33 184.7 335.08 203.45 R
7 X
V
0 X
N
335.08 184.7 353.83 203.45 R
7 X
V
0 X
N
353.83 184.7 372.58 203.45 R
7 X
V
0 X
N
(\256) 351.41 195.99 T
(\256) 332.12 195.99 T
(\256) 314.29 195.99 T
(\256) 294.79 195.99 T
(\256) 276.91 196.03 T
125.76 229.58 212.54 334.58 R
5 X
V
125.43 335.02 214.58 550.27 R
6 X
V
6 F
0 X
(link) 128.69 601.26 T
(m) 128.69 593.92 T
(protocol_id) 128.69 586.75 T
9 F
(is_server=0) 128.69 578.16 T
6 F
(u.server) 128.69 569.57 T
(.cancel) 157.13 569.57 T
(u.server) 128.69 560.99 T
(.cthread) 157.13 560.99 T
(u.client.dummy) 128.69 552.4 T
(*next) 128.69 543.81 T
(state) 128.69 535.23 T
(status) 128.69 526.64 T
(state_timestamp) 128.69 518.05 T
(cv) 128.69 509.46 T
(xq) 128.69 500.88 T
(rq) 128.69 492.29 T
(*sock_ref) 128.69 483.7 T
(actid_hash) 128.69 475.12 T
(key_info) 128.69 466.53 T
(*auth_epv) 128.69 457.94 T
(addr) 128.69 449.36 T
(timer) 128.69 440.77 T
(last_rcv_timestamp) 128.69 432.18 T
(start_time) 128.69 423.6 T
(high_seq) 128.69 415.01 T
(*pkt_chain) 128.69 406.42 T
(timeout_knob) 128.69 397.84 T
(refcnt) 128.69 389.25 T
(stop_timer) 128.69 380.66 T
(is_cbk) 128.69 372.08 T
(has_pkt_reservation) 128.69 363.49 T
(0) 128.69 354.9 T
(is_in_pkt_chain) 128.69 346.31 T
(0) 128.69 337.73 T
(fault_rqe) 128.69 327 T
(reject_status) 128.69 319.12 T
(cbk_start) 128.69 310.54 T
(response_info_updated) 128.69 301.95 T
(server_bound) 128.69 293.36 T
(cbk_scall) 128.69 284.78 T
(ccte_ref) 128.69 276.19 T
(*h) 128.69 267.6 T
(ping) 128.69 259.73 T
(quit) 128.69 251.14 T
(cancel) 128.69 242.56 T
(timeout_stamp) 128.69 233.97 T
124.93 230.69 213.43 608.7 R
N
290.17 195.25 284.37 193.72 285.95 199.51 3 L
N
157.96 276.19 366.88 276.19 284.38 193.69 3 L
N
216.53 262.58 309.86 377.98 R
6 X
V
8 X
N
125.83 175.33 180.21 215.33 R
7 X
V
0 X
N
408.21 357.83 493.59 234.27 2 L
7 X
V
8 X
N
414.3 234.27 493.59 341.41 R
7 X
V
0 X
N
318.21 388.04 390.96 562.04 R
7 X
V
0 X
N
421.1 482.04 497.98 562.04 R
7 X
V
0 X
N
9 F
(rpc_dg_xmitq_elt_t) 422.74 553.65 T
6 F
(*next) 422.74 545.06 T
(*next_rexmit) 422.74 536.47 T
(\337ags) 422.74 527.88 T
(fragnum) 422.74 519.3 T
(serial_num) 422.74 510.71 T
(body_len) 422.74 502.12 T
(body) 422.74 493.54 T
(in_cwindow) 422.74 484.95 T
216.67 380.23 309.17 608.35 R
6 X
V
8 X
N
0 X
(rpc_dg_recvq_t) 218.72 370.09 T
(head) 218.72 361.44 T
(last_inorder) 218.72 352.79 T
(next_fragnum) 218.72 344.15 T
(high_fragnum) 218.72 335.51 T
(high_serial_num) 218.72 326.86 T
(window_size) 218.72 318.22 T
(wake_thread_qsize) 218.72 309.58 T
(queue_len) 218.72 300.94 T
(inorder_len) 218.72 292.29 T
(recving_frags) 218.72 283.65 T
(all_pkts_recvd) 218.72 275.84 T
(is_way_validated) 218.72 266.36 T
9 F
(rpc_dg_recvq_elt_t) 416.98 332.31 T
6 F
(*next) 416.98 323.71 T
(hdrp) 416.98 315.12 T
(hdr) 416.98 306.54 T
(sock) 416.98 297.95 T
(from_len) 416.98 289.36 T
(pkt_len) 416.98 280.78 T
(from) 416.98 272.19 T
(was_rationing) 416.98 263.6 T
(low_on_pkts) 416.98 255.02 T
(pkt) 416.98 246.43 T
(pkt_real) 416.98 237.84 T
(rpc_dg_xmitq_t) 219.44 598.92 T
(head) 219.44 591.04 T
(\336rst_unsent) 219.44 584.6 T
(tail) 219.44 576.72 T
(rexmitq) 219.44 569.56 T
(part_xqe) 219.44 562.4 T
(hdr) 219.44 554.53 T
(awaiting_ack_timestamp) 219.44 547.37 T
(timestamp) 219.44 538.77 T
(rexmit_timeout) 219.44 530.18 T
(base_\337ags) 219.44 521.6 T
(base_\337ags2) 219.44 513.01 T
(next_fragnum) 219.44 504.42 T
(next_serial_num) 219.44 495.84 T
(last_fack_serial) 219.44 487.25 T
(window_size) 219.44 478.66 T
(max_tsdu) 219.44 470.08 T
(max_path_tpdu) 219.44 461.49 T
(max_pkt_size) 219.44 452.9 T
(blast_size) 219.44 444.32 T
(max_blast_size) 219.44 435.73 T
(xq_timer) 219.44 427.14 T
(xq_timer_throttle) 219.44 418.56 T
(high_cwindow) 219.44 409.97 T
(freqs_out) 219.44 401.38 T
(push) 219.44 392.8 T
(awaiting_ack) 219.44 384.21 T
9 F
(rpc_dg_cct_elt_t) 193.77 158.33 T
6 F
(*next) 193.77 149.73 T
(auth_info) 193.77 141.15 T
(key_info) 193.77 132.56 T
(*auth_epv) 193.77 123.97 T
(actid) 193.77 115.39 T
(actid_hash) 193.77 106.8 T
(seq) 193.77 98.21 T
(timestamp) 193.77 89.62 T
(refcnt) 193.77 81.04 T
9 F
(xq) 281.49 599.14 T
(rq) 280.95 369.12 T
(rpc_dg_pkt_hdr_t) 319.71 554.22 T
6 F
(vers) 319.71 545.63 T
(ptype) 319.71 537.04 T
(\337ags) 319.71 528.45 T
(\337ags2) 319.71 519.87 T
(drep) 319.71 511.28 T
(serial_hi) 319.71 502.69 T
(object) 319.71 494.11 T
(if_id) 319.71 485.52 T
(actuid) 319.71 476.93 T
(server_boot) 319.71 468.35 T
(if_vers) 319.71 459.76 T
(seq) 319.71 451.17 T
(opnum) 319.71 442.58 T
(ihint) 319.71 434 T
(ahint) 319.71 425.41 T
(len) 319.71 416.82 T
(fragnum) 319.71 408.24 T
(auth_proto) 319.71 399.65 T
(serial_lo) 319.71 391.06 T
316.04 589.17 334.79 607.92 R
7 X
V
0 X
N
334.79 589.17 353.54 607.92 R
7 X
V
0 X
N
353.54 589.17 372.29 607.92 R
7 X
V
0 X
N
372.29 589.17 391.04 607.92 R
7 X
V
8 X
N
318.14 597.08 323.33 594.08 318.14 591.08 3 L
0 X
N
240.21 594.08 323.33 594.08 2 L
7 X
V
0 X
N
345.54 589.93 348.54 595.12 351.54 589.93 3 L
N
265.42 587 348.54 587 348.54 595.12 3 L
N
391.04 589.17 409.79 607.92 R
7 X
V
0 X
N
401.17 589.1 404.17 594.29 407.17 589.1 3 L
N
231.04 579.92 404.17 579.92 404.17 594.29 3 L
N
312.72 560.03 317.92 557.03 312.72 554.03 3 L
N
230.99 557.03 317.92 557.03 2 L
N
314.46 357.83 333.21 376.58 R
7 X
V
0 X
N
333.21 357.83 351.96 376.58 R
7 X
V
0 X
N
351.96 357.83 370.71 376.58 R
7 X
V
0 X
N
370.71 357.83 389.46 376.58 R
7 X
V
8 X
N
389.46 357.83 408.21 376.58 R
7 X
V
0 X
N
314.6 366.94 319.79 363.94 314.6 360.94 3 L
N
239.01 363.94 319.79 363.94 2 L
7 X
V
0 X
N
361.79 360.97 364.79 366.17 367.79 360.97 3 L
N
260.49 354.46 364.79 354.46 364.79 366.17 3 L
N
408.21 376.58 493.59 341.41 2 L
8 X
N
389.46 376.58 414.3 341.41 2 L
N
389.46 357.83 414.3 234.27 2 L
N
3 F
0 X
(\256) 388.54 600.37 T
(\256) 351.54 600.37 T
(\256) 387.04 369.12 T
(\256) 367.75 369.12 T
(\256) 349.92 369.12 T
(\256) 330.42 369.12 T
(\256) 369.67 600.37 T
(\256) 332.04 600.37 T
9 F
(rpc_dg_cct_t) 128.75 205.54 T
6 F
(gc_count) 128.75 196.94 T
(t.\336rst) 128.75 188.36 T
(t.last) 128.75 179.77 T
189.18 193.86 194.38 190.86 189.18 187.86 3 L
N
146.91 190.86 194.38 190.86 2 L
N
358.04 189.51 361.04 194.71 364.04 189.51 3 L
N
145.64 182.27 361.04 182.27 361.04 194.71 3 L
N
269.26 217 353.63 248.87 R
7 X
V
0 X
N
9 F
(rpc_dg_cct_elt_ref_t) 271.76 238.87 T
6 F
(*ccte) 271.76 230.28 T
(gc_count) 271.76 221.69 T
278.83 203.45 192.7 166.19 2 L
7 X
V
9 X
N
297.58 203.45 262.08 166.19 2 L
7 X
V
9 X
N
297.58 184.7 262.08 78.06 2 L
7 X
V
9 X
N
307.03 216.16 324.35 233.48 2 L
7 X
V
0 X
N
9 F
(\245) 323.81 231.1 T
138.99 503.25 217.2 503.25 2 L
7 X
V
9 X
N
137.92 493.61 208.63 493.61 208.63 347.35 216.67 347.35 4 L
N
0 X
(rpc_dg_binding_rep_t) 123.75 687.54 T
6 F
(c) 123.75 678.94 T
218.25 614.68 318.97 696.11 R
N
9 F
(rpc_dg_binding_client_t) 220.41 687.16 T
6 F
(c) 220.41 674.96 T
(ccall) 220.41 664.23 T
(server_boot) 220.41 654.92 T
(*shand) 220.41 645.61 T
(maint_binding) 220.41 636.31 T
(host_bound) 220.41 627 T
(is_W) 220.41 617.69 T
(A) 237.88 617.69 T
(Y_binding) 242.62 617.69 T
409.79 607.92 497.98 562.04 2 L
8 X
N
391.04 607.92 421.1 562.04 2 L
N
391.04 589.17 421.1 482.04 2 L
N
9 F
0 X
(rpc_binding_rep_t) 403.93 686.29 T
(rpc_dg_binding_rep_t) 403.93 675.55 T
(rpc_dg_ccall_p_t) 403.93 666.24 T
8 F
(KEY) 483.22 697.65 T
117.08 270 130.21 270 2 L
N
0 0 612 792 C
108 72 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "36" 137
%%Page: "37" 137
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part I) 374.44 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(6-37) 518.02 34.67 T
(Figur) 199.03 712 T
(e 6-12:Server Datagram RPC Structur) 225.91 712 T
(e Relationships) 411.34 712 T
144 72 540 708 C
419.29 163.16 515 89.5 2 L
0.5 H
0 Z
8 X
0 K
N
433.75 89.5 515 144.5 R
7 X
V
0 X
N
262.17 656.15 362.57 667.34 R
4 X
V
156.63 336.87 161.83 333.87 156.63 330.87 3 L
0 X
N
161.83 333.87 146.88 333.87 353.13 662.62 284.38 662.62 4 L
N
367.7 688.79 362.5 691.79 367.7 694.79 3 L
N
163.77 304.21 146.88 304.21 388.13 691.79 362.5 691.79 4 L
N
162.55 272.53 246.65 334.67 R
4 X
V
261.97 675.26 362.5 685.62 R
6 X
V
444.13 589.17 534.56 483.31 2 L
V
8 X
N
161.75 548.37 247.29 607.12 R
13 X
V
159.41 222.41 178.16 241.16 R
0 X
N
178.16 222.41 196.91 241.16 R
N
196.91 222.41 215.66 241.16 R
N
215.66 222.41 234.41 241.16 R
N
234.41 222.41 253.16 241.16 R
N
3 8 Q
(\256) 231.99 233.7 T
(\256) 212.7 233.7 T
(\256) 194.87 233.7 T
(\256) 175.37 233.7 T
253.16 222.41 271.91 241.16 R
N
271.91 222.41 290.66 241.16 R
N
290.66 222.41 309.41 241.16 R
N
309.41 222.41 328.16 241.16 R
N
328.16 222.41 346.91 241.16 R
N
(\256) 325.74 233.7 T
(\256) 306.45 233.7 T
(\256) 288.62 233.7 T
(\256) 269.12 233.7 T
(\256) 251.24 233.74 T
282.85 236.76 277.01 235.39 278.73 241.13 3 L
N
181.54 321.39 368.13 321.39 277.01 235.37 3 L
N
271.91 222.41 161.4 85.03 2 L
9 X
N
161.4 85.03 263.28 191.91 R
7 X
V
0 X
N
161.83 335.03 245.62 548.14 R
6 X
V
6 F
0 X
(link) 163.77 597.93 T
(m) 163.77 590.59 T
(protocol_id) 163.77 583.25 T
9 F
(is_server=1) 163.77 575.91 T
6 F
(u.server) 163.77 567.33 T
(.cancel) 192.21 567.33 T
(u.server) 163.77 560.15 T
(.cthread) 192.21 560.15 T
(u.client.dummy) 163.77 551.57 T
(*next) 163.77 542.98 T
(state) 163.77 534.39 T
(status) 163.77 525.81 T
(state_timestamp) 163.77 517.22 T
(cv) 163.77 508.63 T
(xq) 163.77 500.05 T
(rq) 163.77 491.46 T
(*sock_ref) 163.77 482.87 T
(actid_hash) 163.77 474.29 T
(key_info) 163.77 465.7 T
(*auth_epv) 163.77 457.11 T
(addr) 163.77 448.52 T
(timer) 163.77 439.94 T
(last_rcv_timestamp) 163.77 431.35 T
(start_time) 163.77 422.77 T
(high_seq) 163.77 414.18 T
(*pkt_chain) 163.77 405.59 T
(timeout_knob) 163.77 397 T
(refcnt) 163.77 388.42 T
(stop_timer) 163.77 379.83 T
(is_cbk) 163.77 371.24 T
(has_pkt_reservation) 163.77 362.66 T
(0) 163.77 354.07 T
(is_in_pkt_chain) 163.77 345.48 T
(0) 163.77 336.89 T
(fwd2_rqe) 163.77 328.31 T
(*scte) 163.77 319.72 T
(*cbk_ccall) 163.77 311.14 T
(*h) 163.77 302.55 T
(client_needs_sboot) 163.77 293.96 T
(call_is_setup) 163.77 285.37 T
(has_call_executor_ref) 163.77 276.79 T
161.83 272.67 245.83 607.93 R
N
442.54 359.08 527.92 235.52 2 L
8 X
N
448.64 235.34 527.92 342.49 R
7 X
V
0 X
N
352.54 389.31 425.29 563.31 R
7 X
V
0 X
N
457.69 483.31 534.56 563.31 R
7 X
V
0 X
N
9 F
(rpc_dg_xmitq_elt_t) 459.32 554.92 T
6 F
(*next) 459.32 546.33 T
(*next_rexmit) 459.32 537.74 T
(\337ags) 459.32 529.15 T
(fragnum) 459.32 520.57 T
(serial_num) 459.32 511.98 T
(body_len) 459.32 503.39 T
(body) 459.32 494.8 T
(in_cwindow) 459.32 486.22 T
250.87 262.58 344.19 377.98 R
6 X
V
8 X
N
251 380.23 343.5 608.35 R
6 X
V
8 X
N
0 X
(rpc_dg_recvq_t) 253.06 370.09 T
(head) 253.06 361.44 T
(last_inorder) 253.06 352.79 T
(next_fragnum) 253.06 344.15 T
(high_fragnum) 253.06 335.51 T
(high_serial_num) 253.06 326.86 T
(window_size) 253.06 318.22 T
(wake_thread_qsize) 253.06 309.58 T
(queue_len) 253.06 300.94 T
(inorder_len) 253.06 292.29 T
(recving_frags) 253.06 283.65 T
(all_pkts_recvd) 253.06 275.01 T
(is_way_validated) 253.06 266.36 T
9 F
(rpc_dg_recvq_elt_t) 451.32 332.31 T
6 F
(*next) 451.32 323.71 T
(hdrp) 451.32 315.12 T
(hdr) 451.32 306.54 T
(sock) 451.32 297.95 T
(from_len) 451.32 289.36 T
(pkt_len) 451.32 280.78 T
(from) 451.32 272.19 T
(was_rationing) 451.32 263.6 T
(low_on_pkts) 451.32 255.02 T
(pkt) 451.32 247.68 T
(pkt_real) 451.32 239.09 T
(rpc_dg_xmitq_t) 253.77 598.92 T
(head) 253.77 591.04 T
(\336rst_unsent) 253.77 584.6 T
(tail) 253.77 576.72 T
(rexmitq) 253.77 569.56 T
(part_xqe) 253.77 562.4 T
(hdr) 253.77 554.53 T
(awaiting_ack_timestamp) 253.77 547.37 T
(timestamp) 253.77 538.77 T
(rexmit_timeout) 253.77 530.18 T
(base_\337ags) 253.77 521.6 T
(base_\337ags2) 253.77 513.01 T
(next_fragnum) 253.77 504.42 T
(next_serial_num) 253.77 495.84 T
(last_fack_serial) 253.77 487.25 T
(window_size) 253.77 478.66 T
(max_tsdu) 253.77 470.08 T
(max_path_tpdu) 253.77 461.49 T
(max_pkt_size) 253.77 452.9 T
(blast_size) 253.77 444.32 T
(max_blast_size) 253.77 435.73 T
(xq_timer) 253.77 427.14 T
(xq_timer_throttle) 253.77 418.56 T
(high_cwindow) 253.77 409.97 T
(freqs_out) 253.77 401.38 T
(push) 253.77 392.8 T
(awaiting_ack) 253.77 384.21 T
9 F
(xq) 315.82 599.14 T
(rq) 315.29 369.12 T
(rpc_dg_pkt_hdr_t) 354.04 555.49 T
6 F
(vers) 354.04 546.9 T
(ptype) 354.04 538.31 T
(\337ags) 354.04 529.72 T
(\337ags2) 354.04 521.14 T
(drep) 354.04 512.55 T
(serial_hi) 354.04 503.96 T
(object) 354.04 495.38 T
(if_id) 354.04 486.79 T
(actuid) 354.04 478.2 T
(server_boot) 354.04 469.61 T
(if_vers) 354.04 461.03 T
(seq) 354.04 452.44 T
(opnum) 354.04 443.85 T
(ihint) 354.04 435.27 T
(ahint) 354.04 426.68 T
(len) 354.04 418.09 T
(fragnum) 354.04 409.51 T
(auth_proto) 354.04 400.92 T
(serial_lo) 354.04 392.33 T
350.38 589.17 369.13 607.92 R
7 X
V
0 X
N
369.13 589.17 387.88 607.92 R
7 X
V
0 X
N
387.88 589.17 406.63 607.92 R
7 X
V
0 X
N
406.63 589.17 425.38 607.92 R
7 X
V
8 X
N
352.47 597.08 357.67 594.08 352.47 591.08 3 L
0 X
N
274.54 594.08 357.67 594.08 2 L
7 X
V
0 X
N
376.54 589.1 379.54 594.29 382.54 589.1 3 L
N
296.42 586.17 379.54 586.17 379.54 594.29 3 L
N
425.38 589.17 444.13 607.92 R
7 X
V
0 X
N
435.5 589.1 438.5 594.29 441.5 589.1 3 L
N
265.38 579.92 438.5 579.92 438.5 594.29 3 L
N
347.06 560.03 352.25 557.03 347.06 554.03 3 L
N
265.32 557.03 352.25 557.03 2 L
N
348.79 357.83 367.54 376.58 R
7 X
V
0 X
N
367.54 357.83 386.29 376.58 R
7 X
V
0 X
N
386.29 357.83 405.04 376.58 R
7 X
V
0 X
N
405.04 357.83 423.79 376.58 R
7 X
V
8 X
N
423.79 357.83 442.54 376.58 R
7 X
V
0 X
N
348.93 366.94 354.13 363.94 348.93 360.94 3 L
N
273.34 363.94 354.13 363.94 2 L
7 X
V
0 X
N
396.13 360.97 399.13 366.17 402.13 360.97 3 L
N
294.83 354.46 399.13 354.46 399.13 366.17 3 L
N
442.54 376.58 527.92 341.41 2 L
8 X
N
423.79 376.58 448.64 341.41 2 L
N
423.79 362.83 448.64 239.27 2 L
N
3 F
0 X
(\256) 422.88 600.37 T
(\256) 385.88 600.37 T
(\256) 421.38 369.12 T
(\256) 402.08 369.12 T
(\256) 384.25 369.12 T
(\256) 364.75 369.12 T
(\256) 404 600.37 T
(\256) 366.38 600.37 T
9 F
(rpc_dg_sct_elt_t) 163.69 182.53 T
6 F
(*next) 163.69 173.94 T
(actid) 163.69 165.35 T
(ahint) 163.69 156.76 T
(high_seq) 163.69 148.18 T
(high_seq_is_way_validated) 163.69 139.59 T
(refcnt) 163.69 131 T
(key_info) 163.69 122.42 T
(*auth_epv) 163.69 113.83 T
(scall) 163.69 105.24 T
(timestamp) 163.69 96.66 T
(client) 163.69 88.07 T
271.91 241.16 161.4 191.91 2 L
9 X
N
290.66 241.16 263.27 191.91 2 L
N
290.66 222.41 263.27 85.03 2 L
N
173.21 502.18 250.9 502.18 2 L
N
172.68 492.53 240.72 492.53 240.72 349.5 251.43 349.5 4 L
N
444.13 607.92 534.56 563.31 2 L
8 X
N
425.38 607.92 457.69 563.31 2 L
N
425.38 589.17 457.69 483.31 2 L
N
436.47 662.12 536.86 673.32 R
4 X
V
436.47 673.32 537 683.68 R
6 X
V
437 683.68 537 694.04 R
13 X
V
9 F
0 X
(rpc_binding_rep_t) 439.93 686.29 T
(rpc_dg_binding_rep_t) 439.93 675.55 T
(rpc_dg_scall_p_t) 439.93 666.24 T
8 F
(KEY) 519.22 697.65 T
155.46 671.5 250.29 684.36 R
13 X
V
155.46 672.54 249.75 696.11 R
0 X
N
9 F
(rpc_dg_binding_rep_t) 159.75 687.54 T
6 F
(c) 159.75 678.94 T
9 F
(rpc_dg_binding_server_t) 264.38 687.57 T
6 F
(c) 264.38 678.26 T
(chand) 264.38 668.95 T
(scall) 264.38 659.64 T
261.46 656.11 362.71 696.11 R
N
158.54 304.21 165.44 304.21 2 L
N
9 F
(rpc_dg_client_rep_t) 435.63 136.37 T
6 F
(*next) 435.63 127.78 T
(cas_uuid) 435.63 119.19 T
(rundown) 435.63 110.6 T
(last_update) 435.63 102.02 T
(refcnt) 435.63 93.43 T
325.54 163.16 344.29 181.91 R
N
344.29 163.16 363.04 181.91 R
N
363.04 163.16 381.79 181.91 R
N
381.79 163.16 400.54 181.91 R
N
400.54 163.16 419.29 181.91 R
N
3 F
(\256) 398.12 174.45 T
(\256) 378.83 174.45 T
(\256) 361 174.45 T
(\256) 341.49 174.45 T
352.21 166.59 355.21 171.79 358.21 166.59 3 L
N
183.19 89.73 355.21 89.73 355.21 171.79 3 L
N
419.29 181.91 515 144.5 2 L
8 X
N
400.54 163.16 433.75 89.5 2 L
N
400.54 181.91 433.75 144.5 2 L
N
0 0 612 792 C
144 72 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "37" 138
%%Page: "38" 138
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part I) 72 748 T
(Revised 7/27/93) 427.05 748 T
(6-38) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
FMENDPAGE
%%EndPage: "38" 139
%%Page: "1" 139
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-1) 524.01 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-1) 524.01 34.67 T
352.75 706.22 143.61 706.22 2 L
V
1.71 H
0 Z
N
0 18 Q
0.9 (Chapter 7: Datagram Pr) 143.61 708 S
540 706.22 352.43 706.22 2 L
V
N
0.9 (otocol Service, part II) 352.43 708 S
2 12 Q
(In this chapter we discuss:) 144 592 T
(\245) 144 572.5 T
(the relationship of the datagram RPC protocol state machine to the actual) 162 572.5 T
(implementation, and describe the relationship between call states and packet) 162 559 T
(processing.) 162 545.5 T
(\245) 144 526 T
( common, client, and server routines that run in the network listener thread.) 162 526 T
(\245) 144 506.5 T
(forwarding) 162 506.5 T
(\245) 144 487 T
(liveness monitoring) 162 487 T
(\245) 144 467.5 T
(the Conversation Manager) 162 467.5 T
219.17 437.28 108 437.28 2 L
V
1.33 H
N
0 14 Q
(Call Handle States) 108 438.67 T
2 12 Q
-0.28 (As we\325ve described, the datagram RPC protocol service de\336nes half a dozen states) 144 418 P
(in which a call can legally reside. The local \050client or sever\051 process\325) 144 404.5 T
(s idea of the) 473.4 404.5 T
0 (call\325) 144 391 P
0 (s state is recorded in the call handle\325) 164.65 391 P
0 (s) 338.83 391 P
5 11 Q
-0.01 (state) 346.49 391 P
2 12 Q
0 ( \336eld. This \336eld is written and/or) 379.45 391 P
-0.26 (read by many of the internal datagram RPC protocol service functions we describe) 144 377.5 P
(in the next section, and is) 144 364 T
(link between protocol service operations and the formal) 268.92 364 T
(Finite State Machine on which the protocol is based. It also is the primary gover-) 144 350.5 T
(nor of call handle re-use and/or garbage collection, since only handles in the idle) 144 337 T
(state may be re-used or freed.) 144 323.5 T
(Before going into the details of how the datagram RPC protocol service actually) 144 304 T
-0.39 (implements the state transitions de\336ned in the AES, we want to introduce two state) 144 290.5 P
(diagrams derived from sketches in) 144 277 T
5 11 Q
(dg.h) 312.21 277 T
2 12 Q
(. These diagrams provide a local view of) 338.58 277 T
(the workings of the state machinery as expressed in the transitions of the) 144 263.5 T
5 11 Q
(state) 495.42 263.5 T
2 12 Q
0 (member of the call handle. Note that, while these diagrams are not identical to the) 144 250 P
-0.1 (ones provided in Chapter 10 of the AES, they are functionally equivalent from the) 144 236.5 P
(protocol perspective.) 144 223 T
0 F
(Client Call Handle State T) 108 203.5 T
(ransitions) 243.05 203.5 T
2 F
-0.1 (Figure 7-1 describes client-side state transitions and associates each transition and/) 144 183.5 P
(or state with an internal function. There are three fundamental paths through the) 144 170 T
(various states \050not all of which are part of every call\051.) 144 156.5 T
(\245) 144 137 T
-0.18 (A call with maybe semantics needs only to be transmitted and \050ef) 162 137 P
-0.18 (fectively\051 for-) 473.24 137 P
-0.13 (gotten about, so the client call handle transitions from init to xmit, then reverts) 162 123.5 P
(to the idle state awaiting re-use.) 162 110 T
(\245) 144 90.5 T
(Idempotent calls need to spend some time in the recv state and will exit only) 162 90.5 T
(after receiving an ack.) 162 77 T
FMENDPAGE
%%EndPage: "1" 140
%%Page: "2" 140
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-2) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(\245) 108 712 T
(Non-idempotent calls or idempotent calls with multi-packet \050sometimes) 126 712 T
(referred to as \322lar) 126 698.5 T
(ge\323\051 out ar) 210.03 698.5 T
(guments transition into a \336nal state awaiting a) 261.09 698.5 T
(delayed ack before reverting to idle.) 126 685 T
(For all paths through the client, transmission of a quit request ef) 108 665.5 T
(fectively orphans) 414.92 665.5 T
0 (the call on the client side, after which the client will transition to idle upon receipt) 108 652 P
(of a quack from the server) 108 638.5 T
(.) 233.56 638.5 T
FMENDPAGE
%%EndPage: "2" 141
%%Page: "3" 141
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-3) 524.01 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-3) 524.01 34.67 T
(Figur) 225.27 712 T
(e 7-1: Client Call Handle State T) 252.15 712 T
(ransitions) 410.74 712 T
0 F
(Server Call Handle State T) 108 189.06 T
(ransitions) 245.7 189.06 T
2 F
(Figure 7-2 describes server) 144 169.06 T
(-side state transitions and associates each transition) 273.98 169.06 T
-0.22 (and/or state with an internal function. As with the client side, there are three funda-) 144 155.56 P
(mental paths through the various states \050not all of which are part of every call\051. In) 144 142.06 T
(addition, any of the paths is subject to immediate transition to the idle state if the) 144 128.56 T
(client fails the Who Are Y) 144 115.06 T
(ou \050W) 269.7 115.06 T
(A) 298.68 115.06 T
(Y\051 callback.) 306.23 115.06 T
(\245) 144 95.56 T
(A call with maybe semantics needs only to be received and delivered to the) 162 95.56 T
(stub for potential execution.) 162 82.06 T
140.88 210.56 540 708 C
313.75 569.58 411.08 668.25 R
0.5 H
0 Z
8 X
0 K
N
13 X
90 450 20 9.06 338.59 596.87 G
0 X
90 450 20 9.06 338.59 596.87 A
6 8 Q
(idle) 333.59 593.77 T
6 X
90 450 20 9.06 286.93 680.32 G
0 X
90 450 20 9.06 286.93 680.32 A
14 X
90 450 20 9.06 341.01 644.87 G
0 X
90 450 20 9.06 341.01 644.87 A
7 X
90 450 20 9.06 182.13 680.32 G
0 X
90 450 20 9.06 182.13 680.32 A
(init) 176.92 677.72 T
(orphan) 329.01 642.45 T
(xmit) 278.14 677.83 T
261.74 683.32 266.93 680.32 261.74 677.32 3 L
1 H
N
202.13 680.32 266.93 680.32 2 L
7 X
V
0 X
N
314.02 599.14 319.22 596.14 314.02 593.14 3 L
N
286.93 671.26 286.93 596.14 319.22 596.14 3 L
N
317.76 649.64 319.34 643.85 313.54 645.37 3 L
8 X
N
291.1 672.1 319.35 643.84 2 L
N
344.01 612.79 341.01 607.59 338.01 612.79 3 L
9 X
N
341.01 636.64 341.01 607.59 2 L
N
178.09 665.94 181.09 671.14 184.09 665.94 3 L
0 X
N
324.45 590.46 324.45 567.38 181.09 567.38 181.09 671.14 4 L
N
13 X
90 450 20 9.06 337.88 440.14 G
0.5 H
0 X
90 450 20 9.06 337.88 440.14 A
(idle) 332.88 437.05 T
5 X
90 450 20 9.06 391.02 523.6 G
0 X
90 450 20 9.06 391.02 523.6 A
6 X
90 450 20 9.06 286.22 523.6 G
0 X
90 450 20 9.06 286.22 523.6 A
14 X
90 450 20 9.06 340.29 488.14 G
0 X
90 450 20 9.06 340.29 488.14 A
7 X
90 450 20 9.06 181.42 523.6 G
0 X
90 450 20 9.06 181.42 523.6 A
(init) 176.21 521 T
(orphan) 328.29 485.73 T
(xmit) 277.43 521.11 T
(recv) 383.14 521.3 T
261.02 526.6 266.22 523.6 261.02 520.6 3 L
1 H
N
201.42 523.6 266.22 523.6 2 L
7 X
V
0 X
N
365.82 526.6 371.02 523.6 365.82 520.6 3 L
N
306.22 523.6 371.02 523.6 2 L
7 X
V
0 X
N
369.5 490.44 363.7 488.91 365.28 494.7 3 L
9 X
N
389.35 514.54 363.71 488.9 2 L
7 X
V
9 X
N
317.04 492.92 318.62 487.14 312.82 488.66 3 L
8 X
N
290.39 515.37 318.64 487.12 2 L
7 X
V
8 X
N
343.29 456.07 340.29 450.87 337.29 456.07 3 L
9 X
N
340.29 479.92 340.29 450.87 2 L
7 X
V
9 X
N
177.38 509.22 180.38 514.42 183.38 509.22 3 L
0 X
N
323.73 433.74 323.73 410.66 180.38 410.66 180.38 514.42 4 L
N
363.7 437.46 358.5 440.46 363.7 443.46 3 L
N
397.88 514.26 397.88 440.46 358.5 440.46 3 L
N
13 X
90 450 20 9.06 338.38 270.95 G
0.5 H
0 X
90 450 20 9.06 338.38 270.95 A
(idle) 333.38 267.85 T
4 X
90 450 20 9.06 496.32 354.41 G
0 X
90 450 20 9.06 496.32 354.41 A
5 X
90 450 20 9.06 391.52 354.41 G
0 X
90 450 20 9.06 391.52 354.41 A
6 X
90 450 20 9.06 286.72 354.41 G
0 X
90 450 20 9.06 286.72 354.41 A
14 X
90 450 20 9.06 340.79 318.95 G
0 X
90 450 20 9.06 340.79 318.95 A
7 X
90 450 20 9.06 181.92 354.41 G
0 X
90 450 20 9.06 181.92 354.41 A
(init) 176.71 351.81 T
(orphan) 328.79 316.54 T
(xmit) 277.93 351.92 T
(recv) 383.64 352.11 T
(\336nal) 488.32 351.05 T
261.52 357.41 266.72 354.41 261.52 351.41 3 L
1 H
N
201.92 354.41 266.72 354.41 2 L
7 X
V
0 X
N
366.32 357.41 371.52 354.41 366.32 351.41 3 L
N
306.72 354.41 371.52 354.41 2 L
7 X
V
0 X
N
471.12 357.41 476.32 354.41 471.12 351.41 3 L
N
411.52 354.41 476.32 354.41 2 L
7 X
V
0 X
N
369.98 321.31 364.2 319.73 365.72 325.53 3 L
9 X
N
389.85 345.35 364.21 319.71 2 L
7 X
V
9 X
N
317.54 323.74 319.12 317.95 313.32 319.48 3 L
8 X
N
290.88 346.18 319.14 317.93 2 L
7 X
V
8 X
N
343.79 286.88 340.79 281.68 337.79 286.88 3 L
N
340.79 310.72 340.79 281.68 2 L
7 X
V
8 X
N
342.88 257.53 345.88 262.72 348.88 257.53 3 L
0 X
N
496.32 345.35 496.32 241.47 345.88 241.47 345.88 262.72 4 L
N
177.88 340.03 180.88 345.22 183.88 340.03 3 L
N
324.23 264.54 324.23 241.47 180.88 241.47 180.88 345.22 4 L
N
166.63 340.56 169.63 345.76 172.62 340.56 3 L
N
516.32 353.7 530.88 353.7 530.88 220.76 169.63 220.76 169.63 345.76 5 L
N
8 F
(maybe) 0 -270 152.86 626.25 TF
(idempotent with) 0 -270 152.99 228.48 TF
6 F
(non-idempotent) 0 -270 161.54 227.77 TF
8 F
(large \322outs\323) 0 -270 152.86 286.61 TF
(idempotent) 0 -270 152.86 450.4 TF
156.52 525.36 161.72 522.36 156.52 519.36 3 L
N
146.71 543.78 146.71 522.36 161.72 522.36 3 L
N
156.66 357.53 161.86 354.53 156.66 351.53 3 L
N
146.86 376.5 146.86 354.53 161.86 354.53 3 L
N
158.05 682.93 163.25 679.93 158.05 676.93 3 L
N
146.11 701.89 146.11 679.93 163.25 679.93 3 L
N
6 F
(ccall_reinit\050\051) 185.88 573.42 T
(rpc__dg_call_transmit_int\050\051) 245.33 697.33 T
(rpc__dg_call_transceive\050\051) 350.17 536.67 T
(rpc__dg_call_end\050\051) 460 368 T
(rpc__dg_call_end\050\051) 316.42 660.58 T
(rpc__dg_call_init\050\051) 148.67 697.33 T
(quack_recvd =0) 319.33 629.92 T
(quack_recvd =1) 319.33 615.79 T
306.12 424.71 410.33 512.75 R
0.5 H
8 X
N
0 X
(rpc__dg_call_end\050\051) 308.98 504.25 T
(quack_recvd =0) 317.52 472.58 T
(quack_recvd =1) 317.52 459.04 T
(rpc__dg_call_init\050\051) 150.83 536.67 T
(rpc__dg_call_transmit_int\050\051) 239.17 536.67 T
(ccall_reinit\050\051) 183.88 414.58 T
523.81 686.87 529 683.87 523.81 680.87 3 L
1 H
N
494.63 683.87 529 683.87 2 L
N
523.81 672 529 669 523.81 666 3 L
8 X
N
494.63 669 529 669 2 L
N
8 F
0 X
(KEY) 491.42 695.54 T
(normal execution) 455.22 687.07 T
(quit/cancel) 477.88 672.14 T
6 F
(rpc__dg_call_init\050\051) 150.71 368.04 T
(rpc__dg_call_transmit_int\050\051) 232.17 366.17 T
(rpc__dg_call_transceive\050\051) 342.54 367.42 T
(ccall_reinit\050\051) 186.25 246.58 T
(quack_recvd =0) 317.4 302.71 T
(quack_recvd =1) 317.4 288.53 T
(ccall_reinit\050\051) 173.62 224.21 T
(ack) 404.13 246.37 T
306 255.67 410.21 343.71 R
0.5 H
8 X
N
0 X
(rpc__dg_call_end\050\051) 309.9 336.25 T
0 0 612 792 C
140.88 210.56 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "3" 142
%%Page: "4" 142
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-4) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-4) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(\245) 108 712 T
(Idempotent calls need to spend some time in the xmit state to return acks and/) 126 712 T
(or out ar) 126 698.5 T
(guments to the client.) 166.42 698.5 T
(\245) 108 679 T
-0.58 (Non-idempotent calls or idempotent calls with multi-fragment \322out\323 ar) 126 679 P
-0.58 (guments) 460.93 679 P
(transition into a \336nal state awaiting acknowledgment from the client that all) 126 665.5 T
(outs have been received) 126 652 T
1 F
(.) 240.9 652 T
2 F
(On the server side, orphaned calls simply call) 108 632.5 T
5 11 Q
(exit\050\051) 329.51 632.5 T
2 12 Q
(.) 369.06 632.5 T
4 F
(Figur) 188.29 613 T
(e 7-2: Server Call Handle State T) 215.16 613 T
(ransitions) 375.73 613 T
2 F
(Every packet header carries the call\325) 108 90.06 T
(s type \050e.g., request, response, \311\051, and much) 282.17 90.06 T
(of the packet processing on the receiving side of a datagram RPC is based on) 108 76.56 T
104.88 111.56 504 609 C
13 X
0 K
90 450 20 9.06 302.59 497.87 G
0.5 H
0 Z
0 X
90 450 20 9.06 302.59 497.87 A
6 8 Q
(idle) 297.59 494.77 T
5 X
90 450 20 9.06 251.36 581.32 G
0 X
90 450 20 9.06 251.36 581.32 A
14 X
90 450 20 9.06 305.01 545.87 G
0 X
90 450 20 9.06 305.01 545.87 A
7 X
90 450 20 9.06 146.13 581.32 G
0 X
90 450 20 9.06 146.13 581.32 A
(init) 140.92 578.72 T
(orphan) 293.01 543.45 T
(recv) 243.48 579.02 T
225.74 584.32 230.93 581.32 225.74 578.32 3 L
1 H
N
166.13 581.32 230.93 581.32 2 L
7 X
V
0 X
N
278.02 500.14 283.22 497.14 278.02 494.14 3 L
N
250.93 572.26 250.93 497.14 283.22 497.14 3 L
N
281.76 550.64 283.34 544.85 277.54 546.37 3 L
8 X
N
255.1 573.1 283.35 544.84 2 L
N
142.09 566.94 145.09 572.14 148.09 566.94 3 L
0 X
N
288.45 491.46 288.45 468.39 145.09 468.39 145.09 572.14 4 L
N
13 X
90 450 20 9.06 301.88 341.14 G
0.5 H
0 X
90 450 20 9.06 301.88 341.14 A
(idle) 296.88 338.05 T
5 X
90 450 20 9.06 249.39 425.23 G
0 X
90 450 20 9.06 249.39 425.23 A
6 X
90 450 20 9.06 354.59 425.23 G
0 X
90 450 20 9.06 354.59 425.23 A
14 X
90 450 20 9.06 304.29 389.14 G
0 X
90 450 20 9.06 304.29 389.14 A
7 X
90 450 20 9.06 145.42 424.6 G
0 X
90 450 20 9.06 145.42 424.6 A
(init) 140.21 422 T
(orphan) 292.29 386.73 T
(xmit) 345.8 422.73 T
(recv) 241.52 422.93 T
225.02 427.6 230.22 424.6 225.02 421.6 3 L
1 H
N
165.42 424.6 230.22 424.6 2 L
7 X
V
0 X
N
329.82 427.6 335.02 424.6 329.82 421.6 3 L
N
270.22 424.6 335.02 424.6 2 L
7 X
V
0 X
N
333.5 391.44 327.7 389.91 329.28 395.7 3 L
9 X
N
353.35 415.54 327.71 389.9 2 L
7 X
V
9 X
N
281.04 393.92 282.62 388.14 276.82 389.66 3 L
8 X
N
254.38 416.37 282.64 388.12 2 L
7 X
V
8 X
N
141.38 410.22 144.38 415.42 147.38 410.22 3 L
0 X
N
287.73 334.74 287.73 311.66 144.38 311.66 144.38 415.42 4 L
N
327.7 338.46 322.5 341.46 327.7 344.46 3 L
N
361.88 415.26 361.88 341.46 322.5 341.46 3 L
N
13 X
90 450 20 9.06 302.38 171.95 G
0.5 H
0 X
90 450 20 9.06 302.38 171.95 A
(idle) 297.38 168.85 T
4 X
90 450 20 9.06 460.32 255.41 G
0 X
90 450 20 9.06 460.32 255.41 A
5 X
90 450 20 9.06 251.77 255.41 G
0 X
90 450 20 9.06 251.77 255.41 A
6 X
90 450 20 9.06 355.09 254.79 G
0 X
90 450 20 9.06 355.09 254.79 A
14 X
90 450 20 9.06 304.79 219.95 G
0 X
90 450 20 9.06 304.79 219.95 A
7 X
90 450 20 9.06 145.92 255.41 G
0 X
90 450 20 9.06 145.92 255.41 A
(init) 140.71 252.81 T
(orphan) 292.79 217.54 T
(xmit) 346.3 252.29 T
(recv) 243.89 253.11 T
(\336nal) 452.32 252.05 T
225.52 258.41 230.72 255.41 225.52 252.41 3 L
1 H
N
165.92 255.41 230.72 255.41 2 L
7 X
V
0 X
N
330.32 258.41 335.52 255.41 330.32 252.41 3 L
N
270.72 255.41 335.52 255.41 2 L
7 X
V
0 X
N
435.12 258.41 440.32 255.41 435.12 252.41 3 L
N
375.52 255.41 440.32 255.41 2 L
7 X
V
0 X
N
333.98 222.31 328.2 220.73 329.72 226.53 3 L
9 X
N
353.85 246.35 328.21 220.71 2 L
7 X
V
9 X
N
281.54 224.74 283.12 218.96 277.32 220.48 3 L
8 X
N
254.88 247.18 283.14 218.93 2 L
7 X
V
8 X
N
306.88 158.53 309.88 163.72 312.88 158.53 3 L
0 X
N
460.32 246.35 460.32 142.47 309.88 142.47 309.88 163.72 4 L
N
141.88 241.03 144.88 246.22 147.88 241.03 3 L
N
288.23 165.54 288.23 142.47 144.88 142.47 144.88 246.22 4 L
N
130.63 241.56 133.63 246.76 136.62 241.56 3 L
N
480.32 254.7 494.88 254.7 494.88 121.76 133.63 121.76 133.63 246.76 5 L
N
8 F
(maybe) 0 -270 116.86 527.25 TF
(idempotent with) 0 -270 116.99 129.48 TF
(non-idempotent) 0 -270 125.54 128.77 TF
(large \322outs\323) 0 -270 116.86 187.61 TF
(idempotent) 0 -270 116.86 351.4 TF
120.52 426.36 125.72 423.36 120.52 420.36 3 L
N
110.71 444.78 110.71 423.36 125.72 423.36 3 L
N
120.66 258.53 125.86 255.53 120.66 252.53 3 L
N
110.86 277.5 110.86 255.53 125.86 255.53 3 L
N
122.06 583.93 127.25 580.93 122.06 577.93 3 L
N
110.11 602.89 110.11 580.93 127.25 580.93 3 L
N
315.68 360.3 320.88 357.3 315.68 354.3 3 L
0.5 H
N
303.73 379.27 303.73 357.3 320.88 357.3 3 L
N
6 F
(exit\050\051) 323.38 355.71 T
316.81 517.93 322 514.93 316.81 511.93 3 L
N
304.86 536.89 304.86 514.93 322 514.93 3 L
N
(exit\050\051) 324.5 513.33 T
315.43 193.68 320.63 190.68 315.43 187.68 3 L
N
303.48 212.64 303.48 190.68 320.63 190.68 3 L
N
(exit\050\051) 323.13 189.08 T
252.6 497.14 153.17 497.14 153.17 572.37 3 L
1 H
12 X
N
243.8 500.17 249 497.17 243.8 494.17 3 L
N
234.63 497.17 249 497.17 2 L
N
278.18 343.5 283.38 340.5 278.18 337.5 3 L
N
151.91 416.03 151.91 340.5 283.38 340.5 3 L
N
275.47 173.5 280.67 170.5 275.47 167.5 3 L
N
153.05 246.95 153.05 170.5 280.67 170.5 3 L
N
0 X
(rpc__dg_execute_call\050\051) 409.17 269.67 T
(rpc__dg_scall_orphan_call) 177.62 215.88 T
(rpc__dg_scall_timer\050\051) 325.93 168.71 T
(rpc__dg_do_request) 210 269.67 T
(rpc__dg_scall_reinit\050\051) 161.33 149 T
(rpc__dg_scall_reinit\050\051) 161.33 127 T
(rpc__dg_do_ack\050\051) 316.9 146.46 T
(rpc__dg_call_init) 111.83 269.67 T
487.81 587.87 493 584.87 487.81 581.87 3 L
N
458.63 584.87 493 584.87 2 L
N
487.81 573 493 570 487.81 567 3 L
8 X
N
458.63 570 493 570 2 L
N
8 F
0 X
(KEY) 455.42 596.54 T
(normal execution) 419.22 588.07 T
(quit/cancel) 441.88 573.13 T
489.14 559.17 494.34 556.17 489.14 553.17 3 L
12 X
N
459.96 556.17 494.34 556.17 2 L
N
0 X
(W) 440.63 558.62 T
(A) 448.03 558.62 T
(Y reject) 452.77 558.62 T
6 F
(rpc__dg_scall_reinit\050\051) 146.83 315.38 T
(rpc__dg_scall_reinit\050\051) 147.96 472.38 T
(rpc__dg_call_init\050\051) 113.58 438.71 T
(rpc__dg_call_init\050\051) 112.21 596.79 T
(rpc__dg_do_request\050\051) 210.5 438.71 T
(rpc__dg_do_request\050\051) 213.5 593.13 T
(rpc__dg_scall_orphan_call\050\051) 197.89 381.13 T
(rpc__dg_scall_orphan_call\050\051) 328.75 544.46 T
(rpc__dg_call_transmit_int\050\051) 306.92 438.71 T
(rpc__dg_call_transmit_int\050\051) 301.17 269.67 T
0 0 612 792 C
104.88 111.56 504 609 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "4" 143
%%Page: "5" 143
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-5) 524.01 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-5) 524.01 34.67 T
2 F
(packet type and call state values. Figure 7-3 illustrates, in simpli\336ed form, the) 144 717.62 T
(packet processing done in the routine) 144 704.12 T
5 11 Q
(do_request_common) 325.87 704.12 T
2 12 Q
( \050in) 437.93 704.12 T
5 11 Q
( dgslsn.c) 454.25 704.12 T
2 12 Q
(\051.) 513.58 704.12 T
(\050Callbacks are handled dif) 144 690.62 T
(ferently from \322regular\323 calls in most respects. W) 270.02 690.62 T
(e dis-) 502.87 690.62 T
(cuss conversation manager callbacks later in this chapter) 144 677.12 T
(. A discussion of general-) 415.46 677.12 T
(ized callbacks is beyond the scope of this document.\051 In the normal case, a) 144 663.62 T
(comparison of the incoming packet\325) 144 650.12 T
(s sequence number with the current call\325) 316.55 650.12 T
(s) 510.4 650.12 T
(sequence number \050that is to say) 144 636.62 T
(, the SCTE\325) 294.11 636.62 T
(s) 350.42 636.62 T
5 11 Q
(high_seq) 358.08 636.62 T
2 12 Q
( value\051 provides the initial) 410.82 636.62 T
(form of discrimination among incoming packets. Packets with sequence numbers) 144 623.12 T
-0.21 (equal to that of the current call are deemed part of that call. Incoming packets with) 144 609.62 P
(higher sequence numbers are assumed to be part of a new call. Incoming packets) 144 596.12 T
(with lower sequence numbers are ignored.) 144 582.62 T
(Request processing can take one of half a dozen paths. These are expressed as an) 144 563.12 T
(enumerated type de\336ned in) 144 549.62 T
5 11 Q
(do_request_common) 277.23 549.62 T
2 12 Q
(. Figure 7-3 summarizes vari-) 389.3 549.62 T
(ous outcomes of packet analysis. Any incoming packet that is found to be part of) 144 536.12 T
(either the current call or a new one will be dispatched for additional processing.) 144 522.62 T
-0.26 (All other outcomes \050denoted by shading in the accompanying illustration\051 result in) 144 509.12 P
(the packet being dropped.) 144 495.62 T
4 F
(Figur) 244.97 476.12 T
(e 7-3:Analyzing a Received Packet) 271.85 476.12 T
2 F
-0.29 (W) 144 126.62 P
-0.29 (e describe the other components of the \322receive path\323 in greater detail later on in) 154.36 126.62 P
(this chapter) 144 113.12 T
(.) 198.97 113.12 T
144 148.12 540 472.12 C
6 X
0 K
90 450 36.96 17.41 308.18 175.82 G
0.5 H
0 Z
0 X
90 450 36.96 17.41 308.18 175.82 A
6 X
90 450 36.96 17.41 308.18 276.46 G
0 X
90 450 36.96 17.41 308.18 276.46 A
6 X
90 450 36.96 17.41 308.18 377.46 G
0 X
90 450 36.96 17.41 308.18 377.46 A
6 8 Q
(Illegal rerun of) 285.47 381.26 T
(non-idempotent) 285.47 375.55 T
(call) 285.47 369.85 T
(pkt for) 177.25 446.84 T
(current) 176.54 440.42 T
(call?) 180.82 434 T
(switch\050call->state\051) 167.79 409.83 T
(idle?) 178.79 375.14 T
(\336nal?) 177.68 333.49 T
(init?) 177.81 296.84 T
(recv?) 177.54 290.74 T
(xmit?) 177.68 250.39 T
(orphan?) 172.56 210.01 T
(pkt->\337ags =) 223.86 379.87 T
(idempotent?) 221.18 373.67 T
170.31 213.63 187.18 196.75 2 L
6 X
V
0 X
N
170.71 213.94 187.59 230.82 2 L
6 X
V
0 X
N
187.28 197.13 204.15 214.01 2 L
6 X
V
0 X
N
187.18 230.35 204.06 213.47 2 L
6 X
V
0 X
N
216.64 378.27 239.97 354.93 2 L
6 X
V
0 X
N
217.2 378.7 240.53 402.03 2 L
6 X
V
0 X
N
240.1 355.45 263.44 378.79 2 L
6 X
V
0 X
N
239.97 401.39 263.31 378.05 2 L
6 X
V
0 X
N
168.58 444.37 188.11 424.85 2 L
6 X
V
0 X
N
169.05 444.73 188.58 464.26 2 L
6 X
V
0 X
N
188.21 425.28 207.74 444.81 2 L
6 X
V
0 X
N
188.11 463.72 207.63 444.19 2 L
6 X
V
0 X
N
170.31 337.11 187.18 320.23 2 L
6 X
V
0 X
N
170.71 337.42 187.59 354.3 2 L
6 X
V
0 X
N
187.28 320.61 204.15 337.48 2 L
6 X
V
0 X
N
187.18 353.83 204.06 336.95 2 L
6 X
V
0 X
N
170.31 296.53 187.18 279.65 2 L
6 X
V
0 X
N
170.71 296.84 187.59 313.72 2 L
6 X
V
0 X
N
187.28 280.03 204.15 296.9 2 L
6 X
V
0 X
N
187.18 313.25 204.06 296.37 2 L
6 X
V
0 X
N
170.31 254.01 187.18 237.13 2 L
6 X
V
0 X
N
170.71 254.32 187.59 271.2 2 L
6 X
V
0 X
N
187.28 237.51 204.15 254.38 2 L
6 X
V
0 X
N
187.18 270.73 204.06 253.85 2 L
6 X
V
0 X
N
170.31 378.76 187.18 361.88 2 L
6 X
V
0 X
N
170.71 379.07 187.59 395.94 2 L
6 X
V
0 X
N
187.28 362.26 204.15 379.13 2 L
6 X
V
0 X
N
187.18 395.48 204.06 378.6 2 L
6 X
V
0 X
N
165.11 402.38 234.22 418.45 R
N
191.21 423.64 188.21 418.45 185.21 423.64 3 L
N
188.21 425.28 188.21 418.45 2 L
N
190.28 358.82 187.28 353.62 184.28 358.82 3 L
N
187.28 362.26 187.28 353.62 2 L
N
190.28 318.64 187.28 313.45 184.28 318.64 3 L
N
187.28 320.61 187.28 313.45 2 L
N
190.28 275.78 187.28 270.59 184.28 275.78 3 L
N
187.28 280.03 187.28 270.59 2 L
N
190.28 235.07 187.28 229.87 184.28 235.07 3 L
N
187.28 237.51 187.28 229.87 2 L
N
212.23 381.6 217.43 378.6 212.23 375.6 3 L
N
204.06 378.6 217.43 378.6 2 L
N
189.8 399.36 186.8 394.16 183.8 399.36 3 L
N
186.8 405.95 186.8 394.16 2 L
N
(switch\050call->state\051) 390.07 442.9 T
(idle?) 401.07 408.21 T
(\336nal?) 399.96 366.56 T
(init?) 403.56 332.77 T
(recv?) 401.26 325.96 T
(xmit?) 403.56 320.07 T
(orphan?) 394.85 283.08 T
392.6 286.7 409.47 269.83 2 L
N
393 287.01 409.88 303.89 2 L
N
409.56 270.2 426.44 287.08 2 L
N
409.47 303.42 426.34 286.55 2 L
N
392.6 370.18 409.47 353.3 2 L
N
393 370.49 409.88 387.37 2 L
N
409.56 353.68 426.44 370.55 2 L
N
409.47 386.9 426.34 370.02 2 L
N
392.6 329.6 409.47 312.73 2 L
N
393 329.91 409.88 346.79 2 L
N
409.56 313.1 426.44 329.98 2 L
N
409.47 346.32 426.34 329.45 2 L
N
392.6 411.83 409.47 394.95 2 L
N
393 412.14 409.88 429.02 2 L
N
409.56 395.33 426.44 412.2 2 L
N
409.47 428.55 426.34 411.67 2 L
N
387.39 437.41 454.9 452.95 R
N
412.56 391.89 409.56 386.7 406.56 391.89 3 L
N
409.56 395.33 409.56 386.7 2 L
N
412.56 351.71 409.56 346.52 406.56 351.71 3 L
N
409.56 353.68 409.56 346.52 2 L
N
412.56 308.86 409.56 303.66 406.56 308.86 3 L
N
409.56 313.1 409.56 303.66 2 L
N
412.09 432.43 409.09 427.23 406.09 432.43 3 L
N
409.09 439.02 409.09 427.23 2 L
N
(Y) 191.89 420.59 T
(N) 216.89 431.64 T
(client is pinging) 285.47 277.8 T
(retransmit reply) 285.47 272.1 T
(this is for an old) 285.47 175.77 T
(call, ignore it) 285.47 170.06 T
(queue the pkt) 285.47 226.79 T
(new call) 285.47 323.11 T
90 450 36.96 17.41 308.18 323.57 A
90 450 36.96 17.41 308.18 230.43 A
268.13 381.05 273.32 378.05 268.13 375.05 3 L
N
263.31 378.05 273.32 378.05 2 L
N
267.05 324.48 272.25 321.48 267.05 318.48 3 L
N
240.1 355.45 240.1 321.48 272.25 321.48 3 L
N
265.98 280.02 271.18 277.02 265.98 274.02 3 L
N
204.06 336.95 235.29 336.95 235.29 277.02 271.18 277.02 4 L
N
265.98 232.87 271.18 229.87 265.98 226.87 3 L
N
204.06 296.37 229.39 296.37 229.39 229.87 271.18 229.87 4 L
N
265.98 177.16 271.18 174.16 265.98 171.16 3 L
N
204.06 253.85 222.43 253.85 222.43 174.16 271.18 174.16 4 L
N
217.23 216.47 222.43 213.47 217.23 210.47 3 L
N
204.06 213.47 222.43 213.47 2 L
N
351.38 318.48 346.18 321.48 351.38 324.48 3 L
N
393 412.14 374.04 412.14 374.04 321.48 346.18 321.48 4 L
N
349.77 170.62 344.57 173.62 349.77 176.62 3 L
N
393 287.01 377.79 287.01 377.79 173.62 344.57 173.62 4 L
N
379.23 367.49 374.04 370.49 379.23 373.49 3 L
N
393 370.49 374.04 370.49 2 L
N
6 X
90 450 36.96 17.41 488.15 330.64 G
0 X
90 450 36.96 17.41 488.15 330.64 A
(orphan the) 471.9 331.12 T
(current call) 471.9 325.42 T
445.98 332.45 451.18 329.45 445.98 326.45 3 L
N
426.34 329.45 451.18 329.45 2 L
6 X
V
0 X
N
382.23 447.19 387.43 444.19 382.23 441.19 3 L
N
207.63 444.19 387.43 444.19 2 L
6 X
V
0 X
N
(N) 413.68 390.59 T
(N) 413.68 348.07 T
(N) 413.68 308.23 T
(N) 192.61 233.2 T
(N) 192.61 359.43 T
(N) 192.61 318.52 T
(N) 192.61 274.92 T
(N) 264.22 370.24 T
(Y) 207.79 285.4 T
(Y) 207.79 244.48 T
(Y) 382.61 403.39 T
(Y) 382.61 360.87 T
(Y) 207.79 204.24 T
(Y) 382.61 277.97 T
(Y) 431.36 322.24 T
(Y) 207.79 370.61 T
(Y) 207.79 327.26 T
(Y) 243.82 347.91 T
8 F
(Current Call) 236 459.91 T
(New Call) 341.63 459.91 T
3 F
(\256) 379.13 459.39 T
(\254) 224.75 459.39 T
6 F
(is) 185.46 452.62 T
0 0 612 792 C
144 148.12 540 472.12 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "5" 144
%%Page: "6" 144
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-6) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-6) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
109.71 709.28 72 709.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Call T) 72 710.67 T
135.1 709.28 108.67 709.28 2 L
V
N
(ypes) 108.67 710.67 T
2 12 Q
(In this section, we describe how the datagram RPC protocol service implements) 108 690 T
(the call semantics de\336ned by the \322Operation Attributes\323 listed in Chapter 4 of the) 108 676.5 T
(AES. From the protocol service\325) 108 663 T
(s point of view) 263.57 663 T
(, these attributes require varying) 334.41 663 T
(degrees of client/server \050sender/receiver\051 interaction:) 108 649.5 T
4 F
(maybe) 108 630 T
2 F
(essentially a raw datagram, which the sender transmits and for) 180 630 T
(gets) 478.89 630 T
(about. No form of response is required \050or even allowed\051, so there) 180 616.5 T
-0.28 (is essentially no client/server interaction at all. Maybe calls are also) 180 603 P
-0.07 (idempotent \050this is implicit in the attribute, but made explicit in the) 180 589.5 P
(packet header \337ags.\051 The maybe and broadcast attributes may be) 180 576 T
(combined.) 180 562.5 T
4 F
(br) 108 543 T
(oadcast) 118.22 543 T
2 F
(calls with the broadcast attribute may generate output, but never) 180 543 T
(require any other form of acknowledgment) 180 529.5 T
1 F
(.) 386.17 529.5 T
2 F
(A broadcast datagram) 392.16 529.5 T
(RPC with out ar) 180 516 T
(guments completes when any of the recipients) 257.42 516 T
-0.28 (responds. Broadcast calls are also idempotent \050this is implicit in the) 180 502.5 P
(attribute, but made explicit in the packet header \337ags.\051) 180 489 T
(The broad-) 444.14 489 T
(cast and maybe attributes may be combined.) 180 475.5 T
4 F
(idempotent) 108 456 T
2 F
(calls with the idempotent attribute may consist of any number of) 180 456 T
(packets \050fragments\051, and may be re-run any number of times with) 180 442.5 T
(the same result. Clients making idempotent calls typically query) 180 429 T
(servers when the call does not appear to be making adequate) 180 415.5 T
(progress. Beyond that, there is no client/server interaction beyond) 180 402 T
(the request and response.) 180 388.5 T
4 F
(at-most-once) 108 369 T
2 F
(this is the \322default\323 call attribute. The datagram protocol service) 180 369 T
-0.16 (assumes, and enforces, at-most-once call semantics none of the oth-) 180 355.5 P
(ers have been speci\336ed in the interface de\336nition. Enforcement of) 180 342 T
(at-most-once semantics requires that the server positively identify) 180 328.5 T
-0.15 (the client by doing a W) 180 315 P
-0.15 (A) 290.17 315 P
-0.15 (Y callback, and that the server take further) 297.73 315 P
(pains to prevent attempts by the client to re-run such procedures.) 180 301.5 T
(\050Such attempts are seldom deliberate on the client\325) 180 288 T
(s part. They usu-) 422.83 288 T
(ally are a side ef) 180 274.5 T
(fect of network problems.\051) 258.38 274.5 T
(Beyond mere semantic enforcement of formal call attributes, the datagram proto-) 108 255 T
(col service must also address special situations like:) 108 241.5 T
(\245) 108 222 T
-0.01 (calls for which the \322out\323 ar) 126 222 P
-0.01 (guments cannot \336t into a single packet \050a condition) 255.94 222 P
(referred to by the implementors as \322lar) 126 208.5 T
(ge\323 ins or outs\051) 311.63 208.5 T
(\245) 108 189 T
(calls that are expected to require long processing times at the server \050\322slow) 126 189 T
(calls\323\051) 126 175.5 T
(\245) 108 156 T
(calls that involve an extraordinary event such as a fault, quit, or cancel) 126 156 T
(\245) 108 136.5 T
(callbacks, which come in two types: the generalized kind provided for use by) 126 136.5 T
(applications that need such a feature, and the more specialized ones imple-) 126 123 T
(mented by the conversation manager for use by servers interested in con\336rm-) 126 109.5 T
(ing client identity and monitoring client liveness.) 126 96 T
FMENDPAGE
%%EndPage: "6" 145
%%Page: "7" 145
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-7) 524.01 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-7) 524.01 34.67 T
2 F
-0.01 (It\325) 144 717.62 P
-0.01 (s probably fair to say that most of the complexity in the datagram RPC protocol) 154.66 717.62 P
(service\325) 144 704.12 T
(s call semantic enforcement logic is dedicated to implementing at-most-) 181.3 704.12 T
(once semantics. The less rigorous requirements of maybe, broadcast, and idempo-) 144 690.62 T
(tent calls make their handling comparatively simple. However) 144 677.12 T
(, sensible and ef) 441.98 677.12 T
(\336-) 519.03 677.12 T
(cient handling of callbacks and cancels, not all of which is codi\336ed in the AES,) 144 663.62 T
-0.15 (accounts for a good deal of the code content in the datagram RPC protocol service.) 144 650.12 P
-0.01 (In preparation for our discussion of client and server) 144 630.62 P
-0.01 (-side call processing, we plan) 395.49 630.62 P
(to spend a few pages here detailing the paths that various combinations of packet) 144 617.12 T
-0.06 (type and call semantic follow through the code on the client and server sides of an) 144 603.62 P
(RPC.) 144 590.12 T
0 F
(Maybe Calls) 108 570.62 T
2 F
(Calls with) 144 550.62 T
4 F
(maybe) 195.98 550.62 T
2 F
( semantics behave essentially like raw datagrams do. The entire) 227.28 550.62 T
(call is required to \336t within a single fragment, so the client stub simply sets up the) 144 537.12 T
(call \050) 144 523.62 T
5 11 Q
(rpc__dg_call_start) 168.31 523.62 T
2 12 Q
(\051, then sends it \050) 286.96 523.62 T
5 11 Q
(rpc__dg_call_transceive) 363.91 523.62 T
2 12 Q
(\051.) 515.52 523.62 T
(Servers execute) 144 510.12 T
4 F
(maybe) 222.59 510.12 T
2 F
( calls as they would any) 253.9 510.12 T
4 F
(idempotent) 371.82 510.12 T
2 F
( call. Figure 7-4 illus-) 425.11 510.12 T
(trates a) 144 496.62 T
4 F
( maybe) 178.3 496.62 T
2 F
( call.) 212.6 496.62 T
4 F
(Figur) 279.6 477.12 T
(e 7-4: A Maybe Call) 306.48 477.12 T
2 F
-0.18 (Incoming) 144 285.75 P
4 F
-0.18 (maybe) 192.79 285.75 P
2 F
-0.18 ( packets are subjected to a server boot time check. If the test fails,) 224.09 285.75 P
(the packets are simply dropped. Maybe calls that fail or fault generate the appro-) 144 272.25 T
(priate type of response to the caller) 144 258.75 T
(.) 311.87 258.75 T
0 F
(Br) 108 239.25 T
(oadcast Calls) 121.11 239.25 T
2 F
(Rather than being sent to a speci\336c endpoint,) 144 219.25 T
4 F
(br) 362.86 219.25 T
(oadcast) 373.07 219.25 T
2 F
( RPCs are sent to a net-) 410.39 219.25 T
(work\325) 144 205.75 T
(s broadcast address. Any server that exports the call\325) 171.98 205.75 T
(s interface will receive) 424.12 205.75 T
-0.43 (and get a chance to execute the call, so the concept of) 144 192.25 P
5 11 Q
-0.94 (bound_server_instance) 399 192.25 P
2 12 Q
-0.43 (is meaningless in a broadcast context. On the client side,) 144 178.75 P
4 F
-0.43 (br) 414.23 178.75 P
-0.43 (oadcast) 424.45 178.75 P
2 F
-0.43 ( calls forego the) 461.76 178.75 P
(usual binding serialization \050intended to make sure that calls using a given binding) 144 165.25 T
(handle will be transmitted to the same server instance\051 and are also forced to wait) 144 151.75 T
-0.12 (for transmission until there are no other calls in progress, since) 144 138.25 P
4 F
-0.12 (br) 447.19 138.25 P
-0.12 (oadcast) 457.41 138.25 P
2 F
-0.12 ( calls are) 494.72 138.25 P
-0.07 (always transmitted with a partial binding that would ef) 144 124.75 P
-0.07 (fectively unbind any bound) 405.71 124.75 P
(server instance associated with an in-progress call.) 144 111.25 T
144 307.25 540 473.12 C
203.48 458.62 M
 213.67 449.93 213.67 449.93 214.99 447.85 D
 216.3 445.76 216.3 445.76 221.63 457.61 D
 226.95 469.47 226.95 469.47 235.19 470.55 D
 243.43 471.62 243.43 471.62 249.27 460.85 D
 255.1 450.07 255.1 450.07 257.2 433.51 D
 259.29 416.94 259.29 416.94 265.1 421.65 D
 270.9 426.36 270.9 426.36 279.03 415.74 D
 287.15 405.11 287.15 405.11 289.73 379.53 D
 292.32 353.95 292.32 353.95 289.73 333.49 D
 287.15 313.02 287.15 313.02 291.77 295.97 D
 296.39 278.91 296.39 278.91 296.69 252.65 D
 297 226.38 297 226.38 292.19 207.82 D
 287.38 189.26 287.38 189.26 281.54 180.64 D
 275.71 172.02 275.71 172.02 267.85 178.57 D
 259.99 185.12 259.99 185.12 256.86 165.64 D
 253.73 146.15 253.73 146.15 244.8 132.14 D
 235.88 118.12 235.88 118.12 226.26 122.44 D
 216.65 126.76 216.65 126.76 211.42 145.28 D
 206.2 163.8 206.2 163.8 198.72 154.98 D
 191.24 146.15 191.24 146.15 186.43 150.47 D
 181.63 154.78 181.63 154.78 177.88 172.93 D
 174.14 191.09 174.14 191.09 166.9 186.94 D
 159.65 182.79 159.65 182.79 152.78 196.81 D
 145.92 210.82 145.92 210.82 144.54 234.53 D
 143.17 258.24 143.17 258.24 146.97 277.1 D
 150.78 295.97 150.78 295.97 147.11 311.32 D
 143.44 326.67 143.44 326.67 143.44 347.98 D
 143.44 369.3 143.44 369.3 150.37 387.05 D
 157.3 404.8 157.3 404.8 163.62 404.8 D
 169.95 404.8 169.95 404.8 173.04 424.2 D
 176.13 443.6 176.13 443.6 181.28 454.38 D
 186.43 465.16 186.43 465.16 189.87 466.23 D
 193.3 467.31 193.3 467.31 203.48 458.62 D
O
1 H
0 Z
4 X
0 K
N
464.98 460.13 M
 475.17 451.44 475.17 451.44 476.48 449.35 D
 477.8 447.26 477.8 447.26 483.13 459.12 D
 488.45 470.97 488.45 470.97 496.69 472.05 D
 504.93 473.12 504.93 473.12 510.77 462.35 D
 516.6 451.57 516.6 451.57 518.7 435.01 D
 520.79 418.44 520.79 418.44 526.6 423.15 D
 532.4 427.86 532.4 427.86 540.53 417.24 D
 548.65 406.61 548.65 406.61 551.23 381.04 D
 553.82 355.45 553.82 355.45 551.23 334.99 D
 548.65 314.52 548.65 314.52 553.27 297.47 D
 557.89 280.42 557.89 280.42 558.19 254.15 D
 558.5 227.88 558.5 227.88 553.69 209.32 D
 548.88 190.76 548.88 190.76 543.04 182.14 D
 537.21 173.52 537.21 173.52 529.35 180.07 D
 521.49 186.62 521.49 186.62 518.36 167.14 D
 515.23 147.66 515.23 147.66 506.3 133.65 D
 497.38 119.63 497.38 119.63 487.76 123.95 D
 478.15 128.26 478.15 128.26 472.92 146.78 D
 467.7 165.3 467.7 165.3 460.22 156.48 D
 452.74 147.66 452.74 147.66 447.93 151.97 D
 443.12 156.28 443.12 156.28 439.38 174.43 D
 435.64 192.59 435.64 192.59 428.39 188.44 D
 421.15 184.3 421.15 184.3 414.28 198.31 D
 407.42 212.32 407.42 212.32 406.04 236.03 D
 404.67 259.74 404.67 259.74 408.47 278.6 D
 412.28 297.47 412.28 297.47 408.61 312.82 D
 404.94 328.17 404.94 328.17 404.94 349.48 D
 404.94 370.8 404.94 370.8 411.87 388.55 D
 418.8 406.31 418.8 406.31 425.12 406.31 D
 431.45 406.31 431.45 406.31 434.54 425.7 D
 437.63 445.1 437.63 445.1 442.78 455.88 D
 447.93 466.66 447.93 466.66 451.37 467.74 D
 454.8 468.82 454.8 468.82 464.98 460.13 D
O
N
8 8 Q
0 X
(CLIENT) 148.32 462.83 T
(SER) 502.21 462.83 T
(VER) 518.5 462.83 T
6 F
(rpc__dg_call_start\050\051) 179.13 400.88 T
(rpc__dg_call_transmit\050\051) 179.13 391.57 T
(rpc__dg_do_request\050\051) 425.86 371.88 T
414.14 375.61 419.33 372.61 414.14 369.61 3 L
0.5 H
N
265.99 393.23 337.46 393.23 316.83 372.61 419.33 372.61 4 L
N
(rpc__dg_call_end\050\051) 179.13 382.26 T
297.04 362.12 400.38 397.06 R
7 X
V
0 X
N
(act=0123) 298.9 384.58 T
(seq=0001) 298.9 377.88 T
(\337ags |= idempotent || maybe) 298.9 371.29 T
(ptype=request) 298.9 391.29 T
(serial=0000) 298.9 364.44 T
(rpc__dg_execute_call\050\051) 425.86 363.88 T
0 0 612 792 C
144 307.25 540 473.12 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "7" 146
%%Page: "8" 146
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-8) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-8) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(Clients making) 108 712 T
4 F
(br) 183.97 712 T
(oadcast) 194.18 712 T
2 F
(calls must also be able to cope with the likelihood that) 234.49 712 T
(they will receive multiple responses to the request. The \336rst one to return is used.) 108 698.5 T
(Any others are discarded. Broadcast calls never return a fault or reject packet,) 108 685 T
0 (since, with many servers executing a call, the knowledge that one of them encoun-) 108 671.5 P
-0.25 (tered trouble of some sort is probably not too useful to the client, and could be con-) 108 658 P
-0.42 (fusing. Since there can be no response beyond a single packet and since we assume) 108 644.5 P
(that there is a high probability that someone out there will execute the call and) 108 631 T
-0.07 (return any outs, broadcast calls time out quickly) 108 617.5 P
-0.07 (, after three rpc clock ticks. Broad-) 337.24 617.5 P
(cast calls do not ping. Figure 7-5 illustrates a) 108 604 T
4 F
(br) 326.53 604 T
(oadcast) 336.75 604 T
2 F
( RPC.) 374.06 604 T
4 F
(Figur) 235.49 584.5 T
(e 7-5: A Br) 262.36 584.5 T
(oadcast Call) 315.54 584.5 T
2 F
-0.44 ( Like) 108 235 P
4 F
-0.44 (maybe) 135.1 235 P
2 F
-0.44 ( calls,) 166.4 235 P
4 F
-0.44 (br) 196.5 235 P
-0.44 (oadcast) 206.72 235 P
2 F
-0.44 (calls are tagged) 246.59 235 P
4 F
-0.44 (idempotent) 322.87 235 P
2 F
-0.44 ( and are required to \336t into) 376.17 235 P
-0.07 (a single packet. They may also be de\336ned, in the interface de\336nition, as) 108 221.5 P
4 F
-0.07 (br) 453.54 221.5 P
-0.07 (oadcast) 463.76 221.5 P
(maybe) 108 208 T
2 F
( calls, in which case they are constrained to have no out ar) 139.3 208 T
(guments.) 418.53 208 T
0 F
(Idempotent Calls) 72 188.5 T
2 F
(Idempotent calls \050Figure 7-6\051 that do not carry either a broadcast or a maybe) 108 168.5 T
(attribute may consist of multiple fragments. When they do, \337ow control and con-) 108 155 T
(nection management come into play) 108 141.5 T
(, meaning that clients, after sending the initial) 281.1 141.5 T
-0.34 (blast of packets, invoke a timer routine that periodically checks to see if a response) 108 128 P
(has been received and, if not, begins to generate ping requests attempting to \336nd) 108 114.5 T
(out how things are progressing at the server end of the connection. Since at-most-) 108 101 T
(semantics do not need to be enforced, servers do not need to detect and prevent) 108 87.5 T
108 256.5 504 580.5 C
237.32 315.53 293.04 366.43 R
6 X
0 K
V
448.08 374.98 M
 454.94 372.1 454.94 372.1 455.83 371.4 D
 456.71 370.71 456.71 370.71 460.3 374.64 D
 463.88 378.57 463.88 378.57 469.43 378.93 D
 474.98 379.29 474.98 379.29 478.91 375.71 D
 482.84 372.14 482.84 372.14 484.25 366.64 D
 485.66 361.15 485.66 361.15 489.57 362.71 D
 493.48 364.27 493.48 364.27 498.95 360.75 D
 504.43 357.23 504.43 357.23 506.16 348.74 D
 507.9 340.25 507.9 340.25 506.16 333.46 D
 504.43 326.68 504.43 326.68 507.54 321.02 D
 510.65 315.36 510.65 315.36 510.85 306.65 D
 511.06 297.93 511.06 297.93 507.82 291.78 D
 504.58 285.62 504.58 285.62 500.65 282.76 D
 496.72 279.9 496.72 279.9 491.42 282.07 D
 486.13 284.25 486.13 284.25 484.02 277.78 D
 481.92 271.32 481.92 271.32 475.91 266.67 D
 469.89 262.01 469.89 262.01 463.42 263.45 D
 456.95 264.88 456.95 264.88 453.43 271.03 D
 449.91 277.17 449.91 277.17 444.87 274.25 D
 439.83 271.32 439.83 271.32 436.6 272.75 D
 433.36 274.18 433.36 274.18 430.84 280.2 D
 428.32 286.23 428.32 286.23 423.44 284.85 D
 418.56 283.48 418.56 283.48 413.94 288.12 D
 409.31 292.77 409.31 292.77 408.39 300.64 D
 407.46 308.5 407.46 308.5 410.02 314.76 D
 412.59 321.02 412.59 321.02 410.12 326.11 D
 407.65 331.2 407.65 331.2 407.65 338.27 D
 407.65 345.35 407.65 345.35 412.31 351.23 D
 416.98 357.12 416.98 357.12 421.24 357.12 D
 425.5 357.12 425.5 357.12 427.58 363.56 D
 429.66 369.99 429.66 369.99 433.13 373.57 D
 436.6 377.14 436.6 377.14 438.91 377.5 D
 441.22 377.86 441.22 377.86 448.08 374.98 D
O
7 X
V
1 H
0 Z
4 X
N
435.93 475.71 M
 442.21 472.98 442.21 472.98 443.03 472.32 D
 443.84 471.67 443.84 471.67 447.12 475.39 D
 450.4 479.11 450.4 479.11 455.48 479.45 D
 460.57 479.79 460.57 479.79 464.16 476.41 D
 467.76 473.02 467.76 473.02 469.05 467.82 D
 470.35 462.62 470.35 462.62 473.92 464.1 D
 477.5 465.58 477.5 465.58 482.51 462.24 D
 487.52 458.9 487.52 458.9 489.11 450.87 D
 490.7 442.83 490.7 442.83 489.11 436.41 D
 487.52 429.98 487.52 429.98 490.37 424.62 D
 493.22 419.27 493.22 419.27 493.4 411.02 D
 493.6 402.77 493.6 402.77 490.63 396.94 D
 487.66 391.11 487.66 391.11 484.06 388.4 D
 480.46 385.7 480.46 385.7 475.62 387.76 D
 470.77 389.81 470.77 389.81 468.84 383.69 D
 466.92 377.57 466.92 377.57 461.41 373.17 D
 455.91 368.77 455.91 368.77 449.98 370.13 D
 444.05 371.48 444.05 371.48 440.83 377.3 D
 437.61 383.12 437.61 383.12 433 380.35 D
 428.39 377.57 428.39 377.57 425.42 378.93 D
 422.46 380.28 422.46 380.28 420.15 385.98 D
 417.84 391.69 417.84 391.69 413.38 390.38 D
 408.91 389.08 408.91 389.08 404.68 393.48 D
 400.44 397.88 400.44 397.88 399.6 405.33 D
 398.75 412.77 398.75 412.77 401.09 418.7 D
 403.44 424.62 403.44 424.62 401.18 429.45 D
 398.92 434.27 398.92 434.27 398.92 440.96 D
 398.92 447.65 398.92 447.65 403.19 453.23 D
 407.46 458.81 407.46 458.81 411.36 458.81 D
 415.26 458.81 415.26 458.81 417.17 464.9 D
 419.07 470.99 419.07 470.99 422.25 474.38 D
 425.42 477.76 425.42 477.76 427.54 478.1 D
 429.66 478.44 429.66 478.44 435.93 475.71 D
O
7 X
V
4 X
N
167.48 566.54 M
 177.67 557.85 177.67 557.85 178.99 555.76 D
 180.3 553.67 180.3 553.67 185.63 565.52 D
 190.95 577.38 190.95 577.38 199.19 578.46 D
 207.43 579.53 207.43 579.53 213.27 568.76 D
 219.1 557.98 219.1 557.98 221.2 541.42 D
 223.29 524.85 223.29 524.85 229.1 529.56 D
 234.9 534.27 234.9 534.27 243.03 523.65 D
 251.15 513.02 251.15 513.02 253.73 487.44 D
 256.32 461.86 256.32 461.86 253.73 441.4 D
 251.15 420.93 251.15 420.93 255.77 403.88 D
 260.39 386.83 260.39 386.83 260.69 360.56 D
 261 334.29 261 334.29 256.19 315.73 D
 251.38 297.17 251.38 297.17 245.54 288.55 D
 239.71 279.93 239.71 279.93 231.85 286.48 D
 223.99 293.03 223.99 293.03 220.86 273.55 D
 217.73 254.06 217.73 254.06 208.8 240.05 D
 199.88 226.03 199.88 226.03 190.26 230.35 D
 180.65 234.66 180.65 234.66 175.42 253.19 D
 170.2 271.71 170.2 271.71 162.72 262.89 D
 155.24 254.06 155.24 254.06 150.43 258.38 D
 145.63 262.69 145.63 262.69 141.88 280.84 D
 138.14 299 138.14 299 130.9 294.85 D
 123.65 290.71 123.65 290.71 116.78 304.72 D
 109.92 318.73 109.92 318.73 108.54 342.44 D
 107.17 366.15 107.17 366.15 110.97 385.01 D
 114.78 403.88 114.78 403.88 111.11 419.23 D
 107.44 434.58 107.44 434.58 107.44 455.89 D
 107.44 477.21 107.44 477.21 114.37 494.96 D
 121.3 512.72 121.3 512.72 127.62 512.72 D
 133.95 512.72 133.95 512.72 137.04 532.11 D
 140.13 551.51 140.13 551.51 145.28 562.29 D
 150.43 573.07 150.43 573.07 153.87 574.15 D
 157.3 575.22 157.3 575.22 167.48 566.54 D
O
N
450.34 547.82 M
 456.79 544.8 456.79 544.8 457.62 544.08 D
 458.46 543.35 458.46 543.35 461.83 547.47 D
 465.19 551.6 465.19 551.6 470.41 551.97 D
 475.62 552.34 475.62 552.34 479.32 548.6 D
 483.01 544.85 483.01 544.85 484.34 539.09 D
 485.66 533.33 485.66 533.33 489.33 534.97 D
 493.01 536.61 493.01 536.61 498.15 532.92 D
 503.29 529.22 503.29 529.22 504.92 520.33 D
 506.56 511.43 506.56 511.43 504.92 504.32 D
 503.29 497.21 503.29 497.21 506.21 491.28 D
 509.14 485.35 509.14 485.35 509.33 476.22 D
 509.53 467.09 509.53 467.09 506.48 460.63 D
 503.43 454.18 503.43 454.18 499.74 451.18 D
 496.05 448.19 496.05 448.19 491.07 450.46 D
 486.1 452.74 486.1 452.74 484.12 445.97 D
 482.14 439.2 482.14 439.2 476.49 434.32 D
 470.84 429.44 470.84 429.44 464.76 430.95 D
 458.67 432.45 458.67 432.45 455.37 438.89 D
 452.06 445.33 452.06 445.33 447.33 442.26 D
 442.6 439.2 442.6 439.2 439.55 440.69 D
 436.51 442.19 436.51 442.19 434.14 448.51 D
 431.77 454.82 431.77 454.82 427.19 453.38 D
 422.61 451.93 422.61 451.93 418.26 456.8 D
 413.92 461.67 413.92 461.67 413.05 469.92 D
 412.18 478.16 412.18 478.16 414.58 484.72 D
 416.99 491.28 416.99 491.28 414.67 496.61 D
 412.35 501.95 412.35 501.95 412.35 509.36 D
 412.35 516.77 412.35 516.77 416.73 522.94 D
 421.12 529.11 421.12 529.11 425.12 529.11 D
 429.12 529.11 429.12 529.11 431.08 535.86 D
 433.04 542.6 433.04 542.6 436.3 546.35 D
 439.55 550.1 439.55 550.1 441.73 550.47 D
 443.9 550.85 443.9 550.85 450.34 547.82 D
O
7 X
V
4 X
N
8 8 Q
0 X
(CLIENT) 112.32 570.2 T
(SER) 459.96 568.95 T
(VERS) 476.25 568.95 T
6 F
(rpc__dg_call_start\050\051) 146.52 545.21 T
(rpc__dg_call_transceive\050\051) 140.98 519.83 T
(rpc__dg_call_end\050\051) 142.5 358.03 T
428.74 522.83 433.93 519.83 428.74 516.83 3 L
0.5 H
N
232.52 519.83 353.57 519.83 433.93 519.83 3 L
N
411.04 424.09 414.1 418.93 408.1 418.86 3 L
N
232.52 519.83 414.11 418.93 2 L
N
(rpc__dg_do_request\050\051) 418.93 513.75 T
(rpc__dg_execute_call\050\051) 417.32 497.48 T
(rpc__dg_do_request\050\051) 407.64 422.71 T
(rpc__dg_execute_call\050\051) 406.04 406.44 T
(rpc__dg_do_request\050\051) 418.32 345.07 T
(rpc__dg_execute_call\050\051) 416.72 328.8 T
218.13 363.98 212.14 363.76 214.94 369.06 3 L
N
416.99 491.28 212.14 363.75 2 L
N
249.15 339.9 243.21 340.72 246.9 345.45 3 L
N
406.04 406.44 243.22 340.71 2 L
N
247.8 352.92 243.21 356.79 248.85 358.83 3 L
N
421.61 325.18 243.22 356.78 2 L
N
8 F
(later) 250.72 334.28 T
(responses) 250.72 326.78 T
(dropped) 250.72 319.27 T
262.79 387.57 331.9 420.48 R
7 X
V
0 X
N
6 F
(act=0123) 265.47 408.56 T
(seq=0001) 265.47 402.24 T
(fragnum=0000) 265.47 396.04 T
(ptype=response) 265.47 414.87 T
(serial=0000) 265.47 389.58 T
431.81 361.33 433.93 355.71 428.01 356.69 3 L
N
232.52 519.83 433.93 355.71 2 L
7 X
V
0 X
N
258.89 486.85 374.45 525.45 R
7 X
V
0 X
N
(act=0123) 261.23 511.25 T
(seq=0001) 261.23 503.84 T
(\337ags |= idempotent || broadcast) 261.23 496.57 T
(ptype=request) 261.23 518.66 T
(serial=0000) 261.23 489 T
0 0 612 792 C
108 256.5 504 580.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "8" 147
%%Page: "9" 147
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-9) 524.01 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-9) 524.01 34.67 T
2 F
(attempted re-runs, so servers and clients do not need to validate each other) 144 712 T
(\325) 501.83 712 T
(s iden-) 505.17 712 T
-0.3 (tity before allowing a call to proceed on a connection. They only need to be able to) 144 698.5 P
(carry on a conversation about call progress.) 144 685 T
4 F
(Figur) 265.94 665.5 T
(e 7-6: An Idempotent Call) 292.82 665.5 T
0 F
(Non-Idempotent Calls) 108 316 T
2 F
(Non-idempotent calls; that is to say) 144 296 T
(, calls that must execute at most once, require) 313.45 296 T
(somewhat more complicated client/server interaction than other types, and other-) 144 282.5 T
-0.34 (wise complicate packet processing and call execution logic. Before executing such) 144 269 P
-0.12 (calls, servers and clients verify each other) 144 255.5 P
-0.12 (\325) 344.58 255.5 P
-0.12 (s identity by invoking one of the simpli-) 347.91 255.5 P
(\336ed callbacks described on page 7-20. Non-idempotent calls generate at least one) 144 242 T
(such callback for every new activity \050which is why activity UUID reuse is a good) 144 228.5 T
-0.18 (idea\051. Non-idempotent calls require the server to make sure that the client believes) 144 215 P
(the call is complete \050i.e., to acknowledge receipt of all the call\325) 144 201.5 T
(s out ar) 445.11 201.5 T
(guments\051) 480.2 201.5 T
(before modifying any internal call state \050e.g., freeing outs\051. Figure 7-7 describes a) 144 188 T
(simple case of a non-idempotent call.) 144 174.5 T
144 337.5 540 661.5 C
203.48 647 M
 213.67 638.31 213.67 638.31 214.99 636.22 D
 216.3 634.13 216.3 634.13 221.63 645.99 D
 226.95 657.84 226.95 657.84 235.19 658.92 D
 243.43 660 243.43 660 249.27 649.22 D
 255.1 638.44 255.1 638.44 257.2 621.88 D
 259.29 605.32 259.29 605.32 265.1 610.02 D
 270.9 614.74 270.9 614.74 279.03 604.11 D
 287.15 593.49 287.15 593.49 289.73 567.91 D
 292.32 542.33 292.32 542.33 289.73 521.86 D
 287.15 501.4 287.15 501.4 291.77 484.34 D
 296.39 467.29 296.39 467.29 296.69 441.02 D
 297 414.76 297 414.76 292.19 396.2 D
 287.38 377.64 287.38 377.64 281.54 369.02 D
 275.71 360.39 275.71 360.39 267.85 366.94 D
 259.99 373.49 259.99 373.49 256.86 354.01 D
 253.73 334.53 253.73 334.53 244.8 320.52 D
 235.88 306.5 235.88 306.5 226.26 310.82 D
 216.65 315.13 216.65 315.13 211.42 333.65 D
 206.2 352.18 206.2 352.18 198.72 343.35 D
 191.24 334.53 191.24 334.53 186.43 338.84 D
 181.63 343.15 181.63 343.15 177.88 361.31 D
 174.14 379.46 174.14 379.46 166.9 375.32 D
 159.65 371.17 159.65 371.17 152.78 385.18 D
 145.92 399.19 145.92 399.19 144.54 422.9 D
 143.17 446.61 143.17 446.61 146.97 465.48 D
 150.78 484.34 150.78 484.34 147.11 499.69 D
 143.44 515.04 143.44 515.04 143.44 536.36 D
 143.44 557.68 143.44 557.68 150.37 575.43 D
 157.3 593.18 157.3 593.18 163.62 593.18 D
 169.95 593.18 169.95 593.18 173.04 612.58 D
 176.13 631.98 176.13 631.98 181.28 642.76 D
 186.43 653.53 186.43 653.53 189.87 654.61 D
 193.3 655.69 193.3 655.69 203.48 647 D
O
1 H
0 Z
4 X
0 K
N
450.54 648.5 M
 462.3 639.81 462.3 639.81 463.82 637.72 D
 465.35 635.63 465.35 635.63 471.49 647.49 D
 477.63 659.34 477.63 659.34 487.15 660.42 D
 496.66 661.5 496.66 661.5 503.4 650.72 D
 510.14 639.95 510.14 639.95 512.55 623.38 D
 514.97 606.82 514.97 606.82 521.67 611.53 D
 528.37 616.24 528.37 616.24 537.75 605.61 D
 547.13 594.99 547.13 594.99 550.11 569.41 D
 553.09 543.83 553.09 543.83 550.11 523.36 D
 547.13 502.9 547.13 502.9 552.46 485.85 D
 557.8 468.79 557.8 468.79 558.15 442.52 D
 558.5 416.26 558.5 416.26 552.95 397.7 D
 547.4 379.14 547.4 379.14 540.66 370.52 D
 533.92 361.89 533.92 361.89 524.84 368.45 D
 515.77 374.99 515.77 374.99 512.16 355.51 D
 508.55 336.03 508.55 336.03 498.25 322.02 D
 487.94 308 487.94 308 476.84 312.32 D
 465.74 316.63 465.74 316.63 459.71 335.15 D
 453.68 353.68 453.68 353.68 445.04 344.85 D
 436.41 336.03 436.41 336.03 430.86 340.34 D
 425.31 344.65 425.31 344.65 420.99 362.81 D
 416.67 380.96 416.67 380.96 408.31 376.82 D
 399.94 372.67 399.94 372.67 392.02 386.68 D
 384.09 400.69 384.09 400.69 382.5 424.4 D
 380.92 448.11 380.92 448.11 385.31 466.98 D
 389.7 485.85 389.7 485.85 385.47 501.19 D
 381.23 516.54 381.23 516.54 381.23 537.86 D
 381.23 559.18 381.23 559.18 389.23 576.93 D
 397.23 594.68 397.23 594.68 404.53 594.68 D
 411.83 594.68 411.83 594.68 415.4 614.08 D
 418.97 633.48 418.97 633.48 424.92 644.26 D
 430.86 655.03 430.86 655.03 434.83 656.11 D
 438.79 657.19 438.79 657.19 450.54 648.5 D
O
N
8 8 Q
0 X
(CLIENT) 148.32 651.2 T
(SER) 502.21 651.2 T
(VER) 518.5 651.2 T
6 F
(rpc__dg_call_start\050\051) 179.13 589.25 T
(rpc__dg_call_transmit\050\051) 179.13 561.94 T
(rpc__dg_call_end\050\051) 179.13 507.33 T
(rpc__dg_call_transceive\050\051) 179.13 534.64 T
415.43 556.19 420.63 553.19 415.43 550.19 3 L
0.5 H
N
262.66 561.94 338.13 561.94 329.38 553.19 420.63 553.19 4 L
N
266.36 500.53 261.16 503.53 266.36 506.53 3 L
N
419.29 514.16 326.79 514.16 337.41 503.53 261.16 503.53 4 L
N
305.79 545.14 374.9 578.05 R
7 X
V
0 X
N
(act=0123) 308.47 566.13 T
(seq=0001) 308.47 559.81 T
(\337ags |= idempotent) 308.47 553.61 T
(ptype=request) 308.47 572.44 T
(serial=0000) 308.47 547.16 T
305.75 490 374.86 522.9 R
7 X
V
0 X
N
(act=0123) 308.43 510.98 T
(seq=0001) 308.43 504.67 T
(fragnum=0000) 308.43 498.46 T
(ptype=response) 308.43 517.3 T
(serial=0000) 308.43 492.01 T
(rpc__dg_do_request\050\051) 425.9 550.5 T
(rpc__dg_execute_call\050\051) 425.9 524.05 T
0 0 612 792 C
144 337.5 540 661.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "9" 148
%%Page: "10" 148
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-10) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-10) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 220.94 712 T
(e 7-7: A Non-Idempotent Call) 247.82 712 T
0 F
(Authenticated Calls) 72 362.5 T
2 F
(Information on this subject will be part of a future edition of this document.) 108 342.5 T
0 F
(\322Slow\323 Calls) 72 323 T
2 F
(A call that does not return in some predetermined interval is subject to invocation) 108 303 T
(of client ping and \050possibly\051 retransmission logic. In the normal case, the call\325) 108 289.5 T
(s) 481.75 289.5 T
-0.46 (timer routine begins to ping if the call has not returned after two seconds. This ping) 108 276 P
(interval increases until either the call returns or the call\325) 108 262.5 T
(s timeout time is reached.) 375.46 262.5 T
(The pings are handled within the conversation manager) 108 243 T
(, as illustrated in Figure 7-) 373.65 243 T
(8. Retransmission, if required, is handled through the normal call execution path.) 108 229.5 T
108 384 504 708 C
185 512.36 441.61 608.25 R
6 X
0 K
V
167.48 693.5 M
 177.67 684.81 177.67 684.81 178.99 682.72 D
 180.3 680.63 180.3 680.63 185.63 692.49 D
 190.95 704.34 190.95 704.34 199.19 705.42 D
 207.43 706.5 207.43 706.5 213.27 695.72 D
 219.1 684.94 219.1 684.94 221.2 668.38 D
 223.29 651.82 223.29 651.82 229.1 656.52 D
 234.9 661.24 234.9 661.24 243.03 650.61 D
 251.15 639.99 251.15 639.99 253.73 614.41 D
 256.32 588.83 256.32 588.83 253.73 568.36 D
 251.15 547.9 251.15 547.9 255.77 530.84 D
 260.39 513.79 260.39 513.79 260.69 487.52 D
 261 461.26 261 461.26 256.19 442.7 D
 251.38 424.14 251.38 424.14 245.54 415.52 D
 239.71 406.89 239.71 406.89 231.85 413.44 D
 223.99 419.99 223.99 419.99 220.86 400.51 D
 217.73 381.03 217.73 381.03 208.8 367.02 D
 199.88 353 199.88 353 190.26 357.32 D
 180.65 361.63 180.65 361.63 175.42 380.15 D
 170.2 398.68 170.2 398.68 162.72 389.85 D
 155.24 381.03 155.24 381.03 150.43 385.34 D
 145.63 389.65 145.63 389.65 141.88 407.81 D
 138.14 425.96 138.14 425.96 130.9 421.82 D
 123.65 417.67 123.65 417.67 116.78 431.68 D
 109.92 445.69 109.92 445.69 108.54 469.4 D
 107.17 493.11 107.17 493.11 110.97 511.98 D
 114.78 530.84 114.78 530.84 111.11 546.19 D
 107.44 561.54 107.44 561.54 107.44 582.86 D
 107.44 604.18 107.44 604.18 114.37 621.93 D
 121.3 639.68 121.3 639.68 127.62 639.68 D
 133.95 639.68 133.95 639.68 137.04 659.08 D
 140.13 678.48 140.13 678.48 145.28 689.26 D
 150.43 700.03 150.43 700.03 153.87 701.11 D
 157.3 702.19 157.3 702.19 167.48 693.5 D
O
1 H
0 Z
4 X
N
414.54 695 M
 426.3 686.31 426.3 686.31 427.82 684.22 D
 429.35 682.14 429.35 682.14 435.49 693.99 D
 441.63 705.84 441.63 705.84 451.15 706.92 D
 460.66 708 460.66 708 467.4 697.22 D
 474.14 686.44 474.14 686.44 476.55 669.88 D
 478.97 653.32 478.97 653.32 485.67 658.03 D
 492.37 662.74 492.37 662.74 501.75 652.11 D
 511.13 641.49 511.13 641.49 514.11 615.91 D
 517.09 590.33 517.09 590.33 514.11 569.86 D
 511.13 549.4 511.13 549.4 516.46 532.35 D
 521.8 515.29 521.8 515.29 522.15 489.02 D
 522.5 462.76 522.5 462.76 516.95 444.2 D
 511.4 425.64 511.4 425.64 504.66 417.02 D
 497.92 408.39 497.92 408.39 488.85 414.95 D
 479.77 421.49 479.77 421.49 476.16 402.01 D
 472.55 382.53 472.55 382.53 462.25 368.52 D
 451.94 354.5 451.94 354.5 440.84 358.82 D
 429.74 363.13 429.74 363.13 423.71 381.65 D
 417.68 400.18 417.68 400.18 409.04 391.35 D
 400.41 382.53 400.41 382.53 394.86 386.84 D
 389.31 391.15 389.31 391.15 384.99 409.31 D
 380.67 427.46 380.67 427.46 372.31 423.32 D
 363.94 419.17 363.94 419.17 356.02 433.18 D
 348.09 447.19 348.09 447.19 346.5 470.9 D
 344.92 494.61 344.92 494.61 349.31 513.48 D
 353.7 532.35 353.7 532.35 349.47 547.69 D
 345.23 563.04 345.23 563.04 345.23 584.36 D
 345.23 605.68 345.23 605.68 353.23 623.43 D
 361.23 641.18 361.23 641.18 368.53 641.18 D
 375.83 641.18 375.83 641.18 379.4 660.58 D
 382.97 679.98 382.97 679.98 388.92 690.76 D
 394.86 701.53 394.86 701.53 398.83 702.61 D
 402.79 703.69 402.79 703.69 414.54 695 D
O
N
8 8 Q
0 X
(CLIENT) 112.32 697.7 T
(SER) 466.21 697.7 T
(VER) 482.5 697.7 T
6 F
(rpc__dg_call_start\050\051) 147.95 659.32 T
(rpc__dg_call_transmit\050\051) 139.91 641.66 T
(rpc__dg_call_end\050\051) 142.59 470.61 T
(rpc__dg_call_transceive\050\051) 132.41 626.14 T
379.43 639.66 384.63 636.66 379.43 633.66 3 L
0.5 H
N
226.66 645.41 302.13 645.41 293.38 636.66 384.63 636.66 4 L
N
229.82 462.75 224.63 465.75 229.82 468.75 3 L
N
382.75 476.38 290.25 476.38 300.88 465.75 224.63 465.75 4 L
N
237.82 569.04 232.63 572.03 237.82 575.03 3 L
N
390.75 582.66 298.25 582.66 308.88 572.03 232.63 572.03 4 L
N
386.9 535.94 392.09 532.94 386.9 529.94 3 L
N
234.12 541.69 309.59 541.69 300.84 532.94 392.09 532.94 4 L
N
387.43 426.84 392.63 423.84 387.43 420.84 3 L
N
234.66 432.59 310.13 432.59 301.38 423.84 392.63 423.84 4 L
N
(request) 261.58 641.35 T
262.52 618.53 340.11 655.08 R
7 X
V
0 X
N
(act=0123) 264.67 643.16 T
(seq=0001) 264.67 636.85 T
(ptype=request) 264.67 649.48 T
(serial=0000) 264.67 629.91 T
(request) 268.98 428.71 T
269.39 413.82 340.11 442.44 R
7 X
V
0 X
N
(act=0123) 272.07 430.52 T
(seq=0001) 272.07 424.2 T
(ptype=ack) 272.07 436.84 T
(serial=0000) 272.07 417.26 T
(request) 268.98 469.96 T
269.39 455.07 340.11 483.69 R
7 X
V
0 X
N
(act=0123) 272.07 471.77 T
(seq=0001) 272.07 465.45 T
(ptype=response) 272.07 478.09 T
(serial=0000) 272.07 458.51 T
(server_boot=0000) 264.67 622.74 T
(request) 261.58 587.28 T
262.52 564.46 340.11 601.01 R
7 X
V
0 X
N
(act=0123) 264.67 589.09 T
(seq=0001) 264.67 582.77 T
(ptype=request) 264.67 595.41 T
(serial=0000) 264.67 575.84 T
(server_boot=0916) 264.67 568.67 T
(boot_time=0916) 398.47 668.79 T
(request) 261.58 544.28 T
262.52 521.46 340.11 558.01 R
7 X
V
0 X
N
(act=0123) 264.67 546.09 T
(seq=0001) 264.67 539.77 T
(ptype=response) 264.67 552.41 T
(serial=0000) 264.67 532.83 T
(server_boot=0916) 264.67 525.67 T
8 F
(conversation) 391.61 563.25 T
(manager) 391.61 553.94 T
6 F
(rpc__dg_do_request\050\051) 393.75 634.5 T
(rpc__dg_execute_call\050\051) 393.75 487.51 T
0 0 612 792 C
108 384 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "10" 149
%%Page: "11" 149
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-11) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-11) 518.02 34.67 T
(Figur) 245.11 712 T
(e 7-8: A \322Slow\323 Call \050Idempotent\051) 271.99 712 T
0 F
(Multi-Fragment Calls) 108 362.5 T
2 F
(Any call that is not broadcast or maybe may have more in or out ar) 144 342.5 T
(guments than) 464.88 342.5 T
(will \336t into a single packet. Such cases typically involve the \337ow-control logic) 144 329 T
(described on page 6-1) 144 315.5 T
(1 to deliver the out packets in one or more blasts of \050one) 249.13 315.5 T
-0.25 (hopes\051 increasing size. The server only send one acknowledgment per blast. When) 144 302 P
0 (the last packet is received, the ins are delivered to the stub for execution. Figure 7-) 144 288.5 P
(9 illustrates a simple case.) 144 275 T
144 384 540 708 C
204.5 497 447.5 578 R
6 X
0 K
V
203.48 693.5 M
 213.67 684.81 213.67 684.81 214.99 682.72 D
 216.3 680.63 216.3 680.63 221.63 692.49 D
 226.95 704.34 226.95 704.34 235.19 705.42 D
 243.43 706.5 243.43 706.5 249.27 695.72 D
 255.1 684.94 255.1 684.94 257.2 668.38 D
 259.29 651.82 259.29 651.82 265.1 656.52 D
 270.9 661.24 270.9 661.24 279.03 650.61 D
 287.15 639.99 287.15 639.99 289.73 614.41 D
 292.32 588.83 292.32 588.83 289.73 568.36 D
 287.15 547.9 287.15 547.9 291.77 530.84 D
 296.39 513.79 296.39 513.79 296.69 487.52 D
 297 461.26 297 461.26 292.19 442.7 D
 287.38 424.14 287.38 424.14 281.54 415.52 D
 275.71 406.89 275.71 406.89 267.85 413.44 D
 259.99 419.99 259.99 419.99 256.86 400.51 D
 253.73 381.03 253.73 381.03 244.8 367.02 D
 235.88 353 235.88 353 226.26 357.32 D
 216.65 361.63 216.65 361.63 211.42 380.15 D
 206.2 398.68 206.2 398.68 198.72 389.85 D
 191.24 381.03 191.24 381.03 186.43 385.34 D
 181.63 389.65 181.63 389.65 177.88 407.81 D
 174.14 425.96 174.14 425.96 166.9 421.82 D
 159.65 417.67 159.65 417.67 152.78 431.68 D
 145.92 445.69 145.92 445.69 144.54 469.4 D
 143.17 493.11 143.17 493.11 146.97 511.98 D
 150.78 530.84 150.78 530.84 147.11 546.19 D
 143.44 561.54 143.44 561.54 143.44 582.86 D
 143.44 604.18 143.44 604.18 150.37 621.93 D
 157.3 639.68 157.3 639.68 163.62 639.68 D
 169.95 639.68 169.95 639.68 173.04 659.08 D
 176.13 678.48 176.13 678.48 181.28 689.26 D
 186.43 700.03 186.43 700.03 189.87 701.11 D
 193.3 702.19 193.3 702.19 203.48 693.5 D
O
1 H
0 Z
4 X
N
450.54 695 M
 462.3 686.31 462.3 686.31 463.82 684.22 D
 465.35 682.14 465.35 682.14 471.49 693.99 D
 477.63 705.84 477.63 705.84 487.15 706.92 D
 496.66 708 496.66 708 503.4 697.22 D
 510.14 686.44 510.14 686.44 512.55 669.88 D
 514.97 653.32 514.97 653.32 521.67 658.03 D
 528.37 662.74 528.37 662.74 537.75 652.11 D
 547.13 641.49 547.13 641.49 550.11 615.91 D
 553.09 590.33 553.09 590.33 550.11 569.86 D
 547.13 549.4 547.13 549.4 552.46 532.35 D
 557.8 515.29 557.8 515.29 558.15 489.02 D
 558.5 462.76 558.5 462.76 552.95 444.2 D
 547.4 425.64 547.4 425.64 540.66 417.02 D
 533.92 408.39 533.92 408.39 524.84 414.95 D
 515.77 421.49 515.77 421.49 512.16 402.01 D
 508.55 382.53 508.55 382.53 498.25 368.52 D
 487.94 354.5 487.94 354.5 476.84 358.82 D
 465.74 363.13 465.74 363.13 459.71 381.65 D
 453.68 400.18 453.68 400.18 445.04 391.35 D
 436.41 382.53 436.41 382.53 430.86 386.84 D
 425.31 391.15 425.31 391.15 420.99 409.31 D
 416.67 427.46 416.67 427.46 408.31 423.32 D
 399.94 419.17 399.94 419.17 392.02 433.18 D
 384.09 447.19 384.09 447.19 382.5 470.9 D
 380.92 494.61 380.92 494.61 385.31 513.48 D
 389.7 532.35 389.7 532.35 385.47 547.69 D
 381.23 563.04 381.23 563.04 381.23 584.36 D
 381.23 605.68 381.23 605.68 389.23 623.43 D
 397.23 641.18 397.23 641.18 404.53 641.18 D
 411.83 641.18 411.83 641.18 415.4 660.58 D
 418.97 679.98 418.97 679.98 424.92 690.76 D
 430.86 701.53 430.86 701.53 434.83 702.61 D
 438.79 703.69 438.79 703.69 450.54 695 D
O
N
8 8 Q
0 X
(CLIENT) 148.32 697.7 T
(SER) 502.21 697.7 T
(VER) 518.5 697.7 T
6 F
(rpc__dg_call_start\050\051) 182.34 674.86 T
(rpc__dg_call_transmit\050\051) 172.16 655.05 T
(rpc__dg_call_end\050\051) 181.27 409.54 T
(rpc__dg_call_transceive\050\051) 175.38 633.64 T
411.14 650.37 416.34 647.37 411.14 644.37 3 L
0.5 H
N
258.37 656.12 333.84 656.12 325.09 647.37 416.34 647.37 4 L
N
270.64 460.07 265.45 463.07 270.64 466.07 3 L
N
423.57 473.7 331.07 473.7 341.7 463.07 265.45 463.07 4 L
N
422.9 596.02 428.09 593.02 422.9 590.02 3 L
N
270.12 601.78 345.59 601.78 336.84 593.02 428.09 593.02 4 L
N
276.5 555.82 271.3 558.82 276.5 561.82 3 L
N
429.43 569.45 336.93 569.45 347.56 558.82 271.3 558.82 4 L
N
419.14 519.53 424.34 516.53 419.14 513.53 3 L
N
266.37 525.28 341.84 525.28 333.09 516.53 424.34 516.53 4 L
N
273.82 419.42 268.63 422.42 273.82 425.42 3 L
N
426.75 433.04 334.25 433.04 344.88 422.42 268.63 422.42 4 L
N
8 F
(retransmission) 207.93 522.86 T
305.79 636.64 374.9 669.55 R
7 X
V
0 X
N
6 F
(act=0123) 308.47 657.63 T
(seq=0001) 308.47 651.31 T
(fragnum=0000) 308.47 645.11 T
(ptype=request) 308.47 663.95 T
(serial=0000) 308.47 638.66 T
305.79 585.25 374.9 618.15 R
7 X
V
0 X
N
(act=0123) 308.47 606.23 T
(seq=0001) 308.47 599.92 T
(fragnum=0000) 308.47 593.71 T
(ptype=ping) 308.29 612.55 T
(serial=0000) 308.47 587.26 T
305.79 500.07 374.9 532.98 R
7 X
V
0 X
N
(act=0123) 308.47 521.06 T
(seq=0001) 308.47 514.74 T
(fragnum=0000) 308.47 508.54 T
(ptype=request) 308.47 527.37 T
(serial=0001) 308.47 502.08 T
305.79 550.64 374.9 574.13 R
7 X
V
0 X
N
(act=0123) 308.47 561.17 T
(seq=0001) 308.47 554.64 T
(ptype=nocall) 308.29 567.7 T
305.79 455.85 374.9 478.58 R
7 X
V
0 X
N
(act=0123) 308.47 465.95 T
(seq=0001) 308.47 459.63 T
(ptype=working) 308.29 472.27 T
305.79 405.78 374.9 438.69 R
7 X
V
0 X
N
(act=0123) 308.47 426.77 T
(seq=0001) 308.47 420.45 T
(fragnum=0000) 308.47 414.25 T
(ptype=response) 308.47 433.09 T
(serial=0000) 308.47 407.8 T
(rpc__dg_do_request\050\051) 422.15 643.07 T
(rpc__dg_execute_call\050\051) 422.15 633.76 T
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "11" 150
%%Page: "12" 150
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-12) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-12) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 231.44 712 T
(e 7-9: Multi-Packet Calls) 258.31 712 T
0 F
(Extraordinary Conditions \050Rejects, Faults, Cancels, Orphans\051) 72 362.5 T
2 F
(Calls can fail for several reasons:) 108 342.5 T
(\245) 108 323 T
(Protocol errors \050e.g., attempts to re-run a non-idempotent call, clients picking) 126 323 T
(up a bad binding, \311\051 cause a call to be rejected by the server) 126 309.5 T
(.) 418.43 309.5 T
(\245) 108 290 T
(Asynchronous cancels in the client \050e.g., ^C\051 must cause the server to take) 126 290 T
(some appropriate action.) 126 276.5 T
(\245) 108 257 T
(Or) 126 257 T
(ganic errors in manager routines may cause synchronous faults during exe-) 138.44 257 T
(cution, which should be propagated back to the client.) 126 243.5 T
(Figure 7-10 summarizes various extraordinary conditions in terms of the packet) 108 224 T
(traf) 108 210.5 T
(\336c they generate.) 124.43 210.5 T
108 384 504 708 C
167.48 693.5 M
 177.67 684.81 177.67 684.81 178.99 682.72 D
 180.3 680.63 180.3 680.63 185.63 692.49 D
 190.95 704.34 190.95 704.34 199.19 705.42 D
 207.43 706.5 207.43 706.5 213.27 695.72 D
 219.1 684.94 219.1 684.94 221.2 668.38 D
 223.29 651.82 223.29 651.82 229.1 656.52 D
 234.9 661.24 234.9 661.24 243.03 650.61 D
 251.15 639.99 251.15 639.99 253.73 614.41 D
 256.32 588.83 256.32 588.83 253.73 568.36 D
 251.15 547.9 251.15 547.9 255.77 530.84 D
 260.39 513.79 260.39 513.79 260.69 487.52 D
 261 461.26 261 461.26 256.19 442.7 D
 251.38 424.14 251.38 424.14 245.54 415.52 D
 239.71 406.89 239.71 406.89 231.85 413.44 D
 223.99 419.99 223.99 419.99 220.86 400.51 D
 217.73 381.03 217.73 381.03 208.8 367.02 D
 199.88 353 199.88 353 190.26 357.32 D
 180.65 361.63 180.65 361.63 175.42 380.15 D
 170.2 398.68 170.2 398.68 162.72 389.85 D
 155.24 381.03 155.24 381.03 150.43 385.34 D
 145.63 389.65 145.63 389.65 141.88 407.81 D
 138.14 425.96 138.14 425.96 130.9 421.82 D
 123.65 417.67 123.65 417.67 116.78 431.68 D
 109.92 445.69 109.92 445.69 108.54 469.4 D
 107.17 493.11 107.17 493.11 110.97 511.98 D
 114.78 530.84 114.78 530.84 111.11 546.19 D
 107.44 561.54 107.44 561.54 107.44 582.86 D
 107.44 604.18 107.44 604.18 114.37 621.93 D
 121.3 639.68 121.3 639.68 127.62 639.68 D
 133.95 639.68 133.95 639.68 137.04 659.08 D
 140.13 678.48 140.13 678.48 145.28 689.26 D
 150.43 700.03 150.43 700.03 153.87 701.11 D
 157.3 702.19 157.3 702.19 167.48 693.5 D
O
1 H
0 Z
4 X
0 K
N
427.4 695 M
 439.16 686.31 439.16 686.31 440.68 684.22 D
 442.2 682.14 442.2 682.14 448.35 693.99 D
 454.49 705.84 454.49 705.84 464 706.92 D
 473.52 708 473.52 708 480.26 697.22 D
 486.99 686.44 486.99 686.44 489.41 669.88 D
 491.83 653.32 491.83 653.32 498.53 658.03 D
 505.23 662.74 505.23 662.74 514.61 652.11 D
 523.99 641.49 523.99 641.49 526.97 615.91 D
 529.95 590.33 529.95 590.33 526.97 569.86 D
 523.99 549.4 523.99 549.4 529.32 532.35 D
 534.65 515.29 534.65 515.29 535 489.02 D
 535.36 462.76 535.36 462.76 529.8 444.2 D
 524.25 425.64 524.25 425.64 517.51 417.02 D
 510.78 408.39 510.78 408.39 501.7 414.95 D
 492.63 421.49 492.63 421.49 489.02 402.01 D
 485.41 382.53 485.41 382.53 475.1 368.52 D
 464.8 354.5 464.8 354.5 453.7 358.82 D
 442.6 363.13 442.6 363.13 436.57 381.65 D
 430.53 400.18 430.53 400.18 421.9 391.35 D
 413.27 382.53 413.27 382.53 407.72 386.84 D
 402.17 391.15 402.17 391.15 397.85 409.31 D
 393.53 427.46 393.53 427.46 385.17 423.32 D
 376.8 419.17 376.8 419.17 368.87 433.18 D
 360.95 447.19 360.95 447.19 359.36 470.9 D
 357.78 494.61 357.78 494.61 362.17 513.48 D
 366.56 532.35 366.56 532.35 362.32 547.69 D
 358.09 563.04 358.09 563.04 358.09 584.36 D
 358.09 605.68 358.09 605.68 366.08 623.43 D
 374.08 641.18 374.08 641.18 381.39 641.18 D
 388.69 641.18 388.69 641.18 392.26 660.58 D
 395.83 679.98 395.83 679.98 401.77 690.76 D
 407.72 701.53 407.72 701.53 411.68 702.61 D
 415.65 703.69 415.65 703.69 427.4 695 D
O
N
8 8 Q
0 X
(CLIENT) 112.32 697.7 T
(SER) 466.21 697.7 T
(VER) 482.5 697.7 T
6 F
(rpc__dg_call_start\050\051) 148.66 657.71 T
(rpc__dg_call_transmit\050\051) 135.78 633.09 T
(rpc__dg_call_end\050\051) 150.88 406.33 T
(rpc__dg_call_transceive\050\051) 127.78 617.03 T
379.43 627.69 384.63 624.69 379.43 621.69 3 L
0.5 H
N
226.66 633.44 302.13 633.44 293.38 624.69 384.63 624.69 4 L
N
230.89 517.93 225.7 520.93 230.89 523.93 3 L
N
383.82 531.55 291.32 531.55 301.95 520.93 225.7 520.93 4 L
N
381 586.12 386.2 583.12 381 580.12 3 L
N
228.23 591.87 303.7 591.87 294.95 583.12 386.2 583.12 4 L
N
279.73 560.57 337.69 605.03 R
7 X
V
0 X
N
(act=0123) 281.04 589.54 T
(seq=0001) 281.04 581.85 T
(\337ags |= frag) 281.04 574.15 T
(fragnum=0004) 281.04 566.46 T
(ptype=request) 281.04 597.23 T
268.22 612.54 353.75 645.95 R
7 X
V
0 X
N
(act=0123) 271.53 633.89 T
(seq=0001) 271.53 627.47 T
(\337ags |= frag || no_fack) 271.53 621.06 T
(fragnum=0000) 271.53 614.65 T
(ptype=request) 271.53 640.3 T
265.54 507.03 358.41 549.35 R
7 X
V
0 X
N
(act=0123) 266.83 533.84 T
(seq=0001) 266.83 526.14 T
(fragnum=0004) 266.83 518.8 T
(ptype=fack) 266.83 541.55 T
(serial, selack, window) 266.83 510.72 T
(...) 343.7 510.72 T
385.79 469.91 390.98 466.91 385.79 463.91 3 L
N
233.01 475.66 308.48 475.66 299.73 466.91 390.98 466.91 4 L
N
277.48 452.93 340.73 493.11 R
7 X
V
0 X
N
(act=0123) 278.9 478.82 T
(seq=0001) 278.9 471.87 T
(\337ags |= last_frag) 278.9 464.92 T
(fragnum=0099) 278.9 457.97 T
(ptype=request) 278.9 485.77 T
237.29 409.21 232.09 412.21 237.29 415.21 3 L
N
390.22 422.84 297.72 422.84 308.34 412.21 232.09 412.21 4 L
N
265.54 397.78 347.08 440.64 R
7 X
V
0 X
N
(act=0123) 266.67 424.97 T
(seq=0001) 266.67 417.17 T
(fragnum=0099) 266.67 409.73 T
(ptype=fack) 266.67 432.77 T
(serial, selack, window) 266.67 401.55 T
(...) 343.54 401.55 T
(\245\245\245) 0 -270 241.47 609.32 TF
(\245\245\245) 0 -270 241.47 492.57 TF
(\245\245\245) 0 -270 372.68 556.89 TF
(rpc__dg_do_request\050\051) 392.68 626.46 T
(rpc__dg_execute_call\050\051) 396.43 456.44 T
0 0 612 792 C
108 384 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "12" 151
%%Page: "13" 151
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-13) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-13) 518.02 34.67 T
(Figur) 217.47 712 T
(e 7-10: Rejects, Faults, Cancels, and Orphans) 244.34 712 T
166.67 357.78 108 357.78 2 L
V
1.33 H
0 Z
N
0 14 Q
(Packet Pr) 108 359.17 T
332.77 357.78 166.42 357.78 2 L
V
N
(ocessing in the Listener Thr) 166.42 359.17 T
353.51 357.78 332.52 357.78 2 L
V
N
(ead) 332.52 359.17 T
2 12 Q
-0.01 (All packets received by the network listener thread \050see page 3-21\051 are handed of) 144 338.5 P
-0.01 (f) 533.02 338.5 P
-0.37 (to a \322receive\323 routine in the network epv) 144 325 P
-0.37 (. In the case of the datagram RPC protocol) 336.14 325 P
(service, this routine is) 144 311.5 T
5 11 Q
(rpc__dg_network_select_dispatch) 252.26 311.5 T
2 12 Q
(, which consti-) 456.61 311.5 T
(tutes the beginning of the datagram protocol service\325) 144 298 T
(s packet processing logic.) 396.82 298 T
-0.03 (W) 144 278.5 P
-0.03 (e refer to this as \322packet processing\323 because so much of what goes on involves) 154.36 278.5 P
(examining a packet\325) 144 265 T
(s header \050and, in some cases, body\051, then making some deci-) 240.6 265 T
(sion regarding the appropriate response as well as the correct disposition of the) 144 251.5 T
(packet\325) 144 238 T
(s data.) 178.64 238 T
(Routines that run in the network listener thread \050i.e., routines that are called,) 144 218.5 T
(directly or indirectly) 144 205 T
(, by) 241.82 205 T
5 11 Q
(rpc__dg_network_select_dispatch) 262.81 205 T
2 12 Q
(\051 can be cate-) 467.15 205 T
(gorized as:) 144 191.5 T
(\245) 144 172 T
(base routines that \322see\323 all datagram RPC packets received.) 162 172 T
(\245) 144 152.5 T
(client routines to which packets received on client sockets are directed) 162 152.5 T
(\245) 144 133 T
(server routines to which packets received on server sockets are directed) 162 133 T
(There are further sub-specialities within these categories, which we will deal with) 144 113.5 T
(later on.) 144 100 T
144 384 540 708 C
246 505.39 452.79 603.96 R
6 X
0 K
V
278.11 466 272.91 469 278.11 472 3 L
0.5 H
0 Z
0 X
N
431.04 479.62 338.54 479.62 349.16 469 272.91 469 4 L
N
203.48 693.5 M
 213.67 684.81 213.67 684.81 214.99 682.72 D
 216.3 680.63 216.3 680.63 221.63 692.49 D
 226.95 704.34 226.95 704.34 235.19 705.42 D
 243.43 706.5 243.43 706.5 249.27 695.72 D
 255.1 684.94 255.1 684.94 257.2 668.38 D
 259.29 651.82 259.29 651.82 265.1 656.52 D
 270.9 661.24 270.9 661.24 279.03 650.61 D
 287.15 639.99 287.15 639.99 289.73 614.41 D
 292.32 588.83 292.32 588.83 289.73 568.36 D
 287.15 547.9 287.15 547.9 291.77 530.84 D
 296.39 513.79 296.39 513.79 296.69 487.52 D
 297 461.26 297 461.26 292.19 442.7 D
 287.38 424.14 287.38 424.14 281.54 415.52 D
 275.71 406.89 275.71 406.89 267.85 413.44 D
 259.99 419.99 259.99 419.99 256.86 400.51 D
 253.73 381.03 253.73 381.03 244.8 367.02 D
 235.88 353 235.88 353 226.26 357.32 D
 216.65 361.63 216.65 361.63 211.42 380.15 D
 206.2 398.68 206.2 398.68 198.72 389.85 D
 191.24 381.03 191.24 381.03 186.43 385.34 D
 181.63 389.65 181.63 389.65 177.88 407.81 D
 174.14 425.96 174.14 425.96 166.9 421.82 D
 159.65 417.67 159.65 417.67 152.78 431.68 D
 145.92 445.69 145.92 445.69 144.54 469.4 D
 143.17 493.11 143.17 493.11 146.97 511.98 D
 150.78 530.84 150.78 530.84 147.11 546.19 D
 143.44 561.54 143.44 561.54 143.44 582.86 D
 143.44 604.18 143.44 604.18 150.37 621.93 D
 157.3 639.68 157.3 639.68 163.62 639.68 D
 169.95 639.68 169.95 639.68 173.04 659.08 D
 176.13 678.48 176.13 678.48 181.28 689.26 D
 186.43 700.03 186.43 700.03 189.87 701.11 D
 193.3 702.19 193.3 702.19 203.48 693.5 D
O
1 H
3 X
N
450.54 695 M
 462.3 686.31 462.3 686.31 463.82 684.22 D
 465.35 682.14 465.35 682.14 471.49 693.99 D
 477.63 705.84 477.63 705.84 487.15 706.92 D
 496.66 708 496.66 708 503.4 697.22 D
 510.14 686.44 510.14 686.44 512.55 669.88 D
 514.97 653.32 514.97 653.32 521.67 658.03 D
 528.37 662.74 528.37 662.74 537.75 652.11 D
 547.13 641.49 547.13 641.49 550.11 615.91 D
 553.09 590.33 553.09 590.33 550.11 569.86 D
 547.13 549.4 547.13 549.4 552.46 532.35 D
 557.8 515.29 557.8 515.29 558.15 489.02 D
 558.5 462.76 558.5 462.76 552.95 444.2 D
 547.4 425.64 547.4 425.64 540.66 417.02 D
 533.92 408.39 533.92 408.39 524.84 414.95 D
 515.77 421.49 515.77 421.49 512.16 402.01 D
 508.55 382.53 508.55 382.53 498.25 368.52 D
 487.94 354.5 487.94 354.5 476.84 358.82 D
 465.74 363.13 465.74 363.13 459.71 381.65 D
 453.68 400.18 453.68 400.18 445.04 391.35 D
 436.41 382.53 436.41 382.53 430.86 386.84 D
 425.31 391.15 425.31 391.15 420.99 409.31 D
 416.67 427.46 416.67 427.46 408.31 423.32 D
 399.94 419.17 399.94 419.17 392.02 433.18 D
 384.09 447.19 384.09 447.19 382.5 470.9 D
 380.92 494.61 380.92 494.61 385.31 513.48 D
 389.7 532.35 389.7 532.35 385.47 547.69 D
 381.23 563.04 381.23 563.04 381.23 584.36 D
 381.23 605.68 381.23 605.68 389.23 623.43 D
 397.23 641.18 397.23 641.18 404.53 641.18 D
 411.83 641.18 411.83 641.18 415.4 660.58 D
 418.97 679.98 418.97 679.98 424.92 690.76 D
 430.86 701.53 430.86 701.53 434.83 702.61 D
 438.79 703.69 438.79 703.69 450.54 695 D
O
4 X
N
8 8 Q
0 X
(CLIENT) 148.32 697.7 T
(SER) 502.21 697.7 T
(VER) 518.5 697.7 T
6 F
(rpc__dg_call_start\050\051) 183.41 659.32 T
(rpc__dg_call_transmit\050\051) 179.13 641.66 T
(rpc__dg_call_end\050\051) 182.34 409.01 T
(rpc__dg_call_transceive\050\051) 171.63 626.14 T
412.75 652.51 417.95 649.51 412.75 646.51 3 L
0.5 H
N
259.98 658.26 335.45 658.26 326.7 649.51 417.95 649.51 4 L
N
273.32 414 268.13 417 273.32 420 3 L
N
426.25 427.62 333.75 427.62 344.38 417 268.13 417 4 L
N
418.04 573.66 423.23 570.66 418.04 567.66 3 L
N
265.26 579.41 340.73 579.41 331.98 570.66 423.23 570.66 4 L
N
273.82 530.82 268.63 533.82 273.82 536.82 3 L
N
426.75 544.45 334.25 544.45 344.88 533.82 268.63 533.82 4 L
N
300.79 632.93 376.32 667.21 R
7 X
V
0 X
N
(act=0123) 301.82 652.02 T
(seq=0001) 301.82 644.51 T
(fragnum=0000) 301.82 637.36 T
(ptype=request) 301.82 659.53 T
301.86 397.78 376.32 439.03 R
7 X
V
0 X
N
(act=0123) 302.89 423.84 T
(seq=0001) 302.89 416.33 T
(fragnum=0000) 302.89 409.18 T
(ptype=reject) 302.89 431.35 T
(fault_status in body) 302.89 401.3 T
300.79 557.43 376.32 591.71 R
7 X
V
0 X
N
(act=0123) 301.82 576.52 T
(seq=0001) 301.82 569.01 T
(fragnum=0000) 301.82 561.86 T
(ptype=quit) 301.82 584.03 T
300.79 521.03 376.32 555.32 R
7 X
V
0 X
N
(act=0123) 301.82 540.13 T
(seq=0001) 301.82 532.62 T
(fragnum=0000) 301.82 525.46 T
(ptype=quack) 301.82 547.63 T
300.79 453.57 376.32 487.86 R
7 X
V
0 X
N
(act=0123) 301.82 472.66 T
(seq=0001) 301.82 465.16 T
(fragnum=0000) 301.82 458 T
(ptype=reject) 301.82 480.17 T
8 F
(unknown interface) 428.68 482.89 T
(wrong boot time) 428.68 471.44 T
(call faulted during execution) 428.68 426.24 T
(client decides to quit) 213.32 554.61 T
0 0 612 792 C
144 384 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "13" 152
%%Page: "14" 152
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-14) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-14) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
0 F
(T) 72 712 T
(op-Level Packet Dispatching) 78.9 712 T
2 F
(Most of the routines that deal with received packets at the top level are imple-) 108 692 T
(mented in the \336les) 108 678.5 T
5 11 Q
(dglsn.c) 199.28 678.5 T
2 12 Q
( and) 245.42 678.5 T
5 11 Q
(dglsn.h) 268.74 678.5 T
2 12 Q
(. The \322executive summary\323 of what) 314.88 678.5 T
(happens at this level would go\321in the errorless case\321roughly like this:) 108 665 T
(\245) 108 645.5 T
(Allocate a receive queue element \050rqe\051 to hold the packet\325) 126 645.5 T
(s contents.) 403.43 645.5 T
(\245) 108 626 T
(Receive the packet and stuf) 126 626 T
(f it into the rqe) 257.68 626 T
(\245) 108 606.5 T
(Filter the packet based on knowing what type of packet it is, what kind of) 126 606.5 T
(socket \050client or server\051 the packet arrived on, and by examining packet\325) 126 593 T
(s) 473.05 593 T
(header \337ags and interface/object UUIDs. Common outcomes of this process) 126 579.5 T
(include:) 126 566 T
-0.38 (\245) 180 546.5 P
-0.38 (forward the packet if its interface and object UUIDs do not match) 190.19 546.5 P
(those of a locally-registered interface) 180 533 T
(\245) 180 513.5 T
(dispatch packets for specialized manager interfaces \050e.g., conver-) 190.19 513.5 T
(sation manager\051) 180 500 T
(\245) 180 480.5 T
(look up the call handle with which the packet is associated) 190.19 480.5 T
(\245) 180 461 T
(deal with other packet types \050e.g., ping, working, fack, \311\051) 190.19 461 T
(\245) 180 441.5 T
(detect callbacks by looking at packet type and the type of socket) 190.19 441.5 T
-0.42 (on which the packet arrives. For example, when a packet type in the) 180 428 P
-0.28 (client-to-server family \050request, ping, \311\051 arrives on a client socket,) 180 414.5 P
(it indicates that a callback is in progress.) 180 401 T
(Figure 7-1) 108 381.5 T
(1 is a simpli\336ed illustration of listener thread packet processing at the) 157.86 381.5 T
(top level in) 108 368 T
5 11 Q
(rpc__dg_network_select_dispatch) 164.97 368 T
2 12 Q
( and) 369.31 368 T
5 11 Q
(recv_dispatch) 392.63 368 T
2 12 Q
(. At) 478.32 368 T
(the conclusion of this process, any packet not destined for forwarding or for \322spe-) 108 354.5 T
(cial handling\323 by the conversation manager has been handed of) 108 341 T
(f to a per) 411.88 341 T
(-type) 454.6 341 T
(\322do_\323 routine. In addition, all packets other than facks or requests have been asso-) 108 327.5 T
(ciated with a ccall or an scall,) 108 314 T
(callbacks have been detected and the proper refer-) 253.22 314 T
(ence count adjustments made, and the ccall/scall\325) 108 300.5 T
(s) 344.16 300.5 T
5 11 Q
(last_recv_timestamp) 351.83 300.5 T
2 12 Q
( and) 477.07 300.5 T
5 11 Q
(awaiting_ack) 108 287 T
2 12 Q
( \336elds have been updated.) 187.1 287 T
FMENDPAGE
%%EndPage: "14" 153
%%Page: "15" 153
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-15) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-15) 518.02 34.67 T
(Figur) 249.61 712 T
(e 7-1) 276.49 712 T
(1: Listener Thr) 299.91 712 T
(ead Routines) 372.1 712 T
2 F
(Once the initial decisions have been made about the disposition of a packet, the) 144 240.62 T
(processing can be divided into client- and server) 144 227.12 T
(-speci\336c routines, the bulk of) 375.92 227.12 T
(which are in) 144 213.62 T
5 11 Q
(dgclsn.c) 206.28 213.62 T
2 12 Q
( and) 259.02 213.62 T
5 11 Q
(dgslsn.c) 282.33 213.62 T
2 12 Q
(, respectively) 335.07 213.62 T
(. Fack packets, which are) 398.23 213.62 T
-0.11 (most commonly sent from servers to clients but can also go the other way) 144 200.12 P
-0.11 (, are han-) 495.26 200.12 P
-0.13 (dled by routines in) 144 186.62 P
5 11 Q
-0.28 (dglsn.c) 236.11 186.62 P
2 12 Q
-0.13 (, as are packets that carry the conversation manager) 282.25 186.62 P
-0.13 (\325) 529.13 186.62 P
-0.13 (s) 532.46 186.62 P
(interface id. W) 144 173.12 T
(e describe the conversation manager and its relations on page 7-20.) 214.64 173.12 T
(W) 144 159.62 T
(e\325ll discuss fack handling in the next section.) 154.36 159.62 T
0 F
(Fack Handling) 108 140.12 T
2 F
-0.11 (Fragment acknowledgment is an integral part of both connection liveness monitor-) 144 120.12 P
0 (ing and \337ow control. Receipt of any fack is a positive indication of the liveness of) 144 106.62 P
-0.34 (the connection, and, in the case of multi-fragment calls, also lets the receiver know) 144 93.12 P
140.81 262.12 540 708 C
410.47 282 535.83 531.11 R
6 X
0 K
V
443.02 693.21 448.22 690.21 443.02 687.21 3 L
0.5 H
0 Z
0 X
N
276.25 690.21 448.22 690.21 2 L
6 X
V
0 X
N
373.71 645.75 406.39 702.54 R
7 X
V
0 X
N
9 8 Q
(rpc__dg_network_select_dispatch) 148.35 687.89 T
6 F
(rpc__dg_pkt_alloc_rqe) 169.96 669.66 T
(rpc_socket_recvfrom) 182.66 651.78 T
9 F
(recv_dispatch) 448.53 688.01 T
6 F
(rpc__dg_fwd_pkt) 0 -270 530.49 633.16 TF
(rpc__dg_handle_conv) 0 -270 531.03 537.07 TF
(rpc__dg_sct_lookup) 0 -270 529.24 393.3 TF
(do_fack) 330.91 468.85 T
(rpc__dg_do_request) 331.15 520.08 T
(rpc__dg_do_ping) 327.99 416.59 T
(rpc__dg_do_ack) 329.06 364.78 T
(rpc__dg_do_quit) 328.89 311.1 T
(rpc__dg_do_response) 196.3 573.65 T
(rpc__dg_do_fault) 194.21 521.31 T
(rpc__dg_do_working) 193.59 469.5 T
(rpc__dg_do_nocall) 195.46 416.86 T
(rpc__dg_do_reject) 196.92 364.01 T
(rpc__dg_do_quack) 196.71 311.58 T
(do_bad_pkt) 185.67 276.27 T
10 F
(\311) 0 -270 383.67 670.8 TF
290.06 646 369.35 702.79 R
7 X
V
0 X
N
6 F
(rpc_dg_recvq_elt_t) 292.74 692.61 T
(*next) 292.74 684.01 T
(hdrp) 292.74 675.43 T
(pkt) 292.74 657.27 T
(pkt_real) 292.74 648.68 T
(_ptype) 376.19 695.57 T
(\337ags) 376.19 687.7 T
(\337ags2) 376.19 679.48 T
(object) 376.19 664.33 T
(if_id) 376.19 656.11 T
10 F
(\311) 0 -270 383.67 647.43 TF
146.14 418.7 167.62 397.22 2 L
7 X
V
0 X
N
146.66 419.1 168.14 440.58 2 L
7 X
V
0 X
N
167.74 397.7 189.22 419.18 2 L
7 X
V
0 X
N
167.62 439.98 189.1 418.51 2 L
7 X
V
0 X
N
6 F
(switch\050_ptype\051) 292.31 575.67 T
(request?) 286.31 520.01 T
(ping?) 293.13 415.13 T
(ack?) 295.24 363.68 T
(quit?) 294.13 310.63 T
(response?) 149.91 573 T
(fault?) 159.24 520.94 T
(working?) 153.27 467.39 T
(nocall?) 155.38 415.94 T
(reject?) 157.06 362.78 T
146.14 575.77 167.62 554.29 2 L
7 X
V
0 X
N
146.66 576.17 168.14 597.65 2 L
7 X
V
0 X
N
167.74 554.77 189.22 576.25 2 L
7 X
V
0 X
N
167.62 597.05 189.1 575.57 2 L
7 X
V
0 X
N
146.14 523.42 167.62 501.93 2 L
7 X
V
0 X
N
146.66 523.81 168.14 545.29 2 L
7 X
V
0 X
N
167.74 502.42 189.22 523.89 2 L
7 X
V
0 X
N
167.62 544.7 189.1 523.22 2 L
7 X
V
0 X
N
279.93 313.81 301.41 292.33 2 L
7 X
V
0 X
N
280.45 314.2 301.92 335.68 2 L
7 X
V
0 X
N
301.52 292.81 323.01 314.28 2 L
7 X
V
0 X
N
301.41 335.08 322.89 313.61 2 L
7 X
V
0 X
N
279.93 366.16 301.41 344.68 2 L
7 X
V
0 X
N
280.45 366.56 301.92 388.04 2 L
7 X
V
0 X
N
301.52 345.16 323.01 366.64 2 L
7 X
V
0 X
N
301.41 387.44 322.89 365.96 2 L
7 X
V
0 X
N
279.93 418.52 301.41 397.04 2 L
7 X
V
0 X
N
280.45 418.92 301.92 440.39 2 L
7 X
V
0 X
N
301.52 397.52 323.01 419 2 L
7 X
V
0 X
N
301.41 439.8 322.89 418.32 2 L
7 X
V
0 X
N
279.5 523.23 300.98 501.75 2 L
7 X
V
0 X
N
280.02 523.63 301.49 545.11 2 L
7 X
V
0 X
N
301.1 502.23 322.58 523.71 2 L
7 X
V
0 X
N
300.98 544.51 322.46 523.03 2 L
7 X
V
0 X
N
146.14 471.06 167.62 449.58 2 L
7 X
V
0 X
N
146.66 471.46 168.14 492.93 2 L
7 X
V
0 X
N
167.74 450.06 189.22 471.54 2 L
7 X
V
0 X
N
167.62 492.34 189.1 470.86 2 L
7 X
V
0 X
N
146.14 366.35 167.62 344.87 2 L
7 X
V
0 X
N
146.66 366.74 168.14 388.22 2 L
7 X
V
0 X
N
167.74 345.35 189.22 366.82 2 L
7 X
V
0 X
N
167.62 387.63 189.1 366.15 2 L
7 X
V
0 X
N
(quack?) 154.91 311.55 T
146.14 313.99 167.62 292.51 2 L
7 X
V
0 X
N
146.66 314.39 168.14 335.87 2 L
7 X
V
0 X
N
167.74 292.99 189.22 314.47 2 L
7 X
V
0 X
N
167.62 335.27 189.1 313.79 2 L
7 X
V
0 X
N
(type) 461.79 665.57 T
(registered) 451.79 658.41 T
(locally?) 456.97 651.42 T
447.76 660.55 469.24 639.07 2 L
7 X
V
0 X
N
448.27 660.95 469.75 682.43 2 L
7 X
V
0 X
N
469.36 639.55 490.84 661.03 2 L
7 X
V
0 X
N
469.24 681.83 490.71 660.35 2 L
7 X
V
0 X
N
(Y) 516.43 569.41 T
(Y) 473.34 632.25 T
(N) 175.18 337.71 T
(N) 175.18 391.08 T
(N) 175.18 443.38 T
(N) 175.18 497.82 T
(N) 175.18 547.44 T
(pkt is client) 432.68 586.28 T
3 F
(\256) 472.23 586.28 T
6 F
(server) 480.12 586.28 T
(&& socket is client &&) 431.25 578.41 T
(if_id=conv_v3_0\311?) 433.4 570.53 T
421.4 581.03 468.98 533.43 2 L
7 X
V
0 X
N
422.54 581.91 470.12 629.49 2 L
7 X
V
0 X
N
469.24 534.5 516.84 582.09 2 L
7 X
V
0 X
N
468.98 628.17 516.56 580.59 2 L
7 X
V
0 X
N
(ptype!=request?) 441.07 480.75 T
(ptype!=fack?) 444.65 472.15 T
279.5 470.87 300.98 449.39 2 L
7 X
V
0 X
N
280.02 471.27 301.49 492.75 2 L
7 X
V
0 X
N
301.1 449.87 322.58 471.35 2 L
7 X
V
0 X
N
300.98 492.15 322.46 470.68 2 L
7 X
V
0 X
N
(fack?) 292.99 468.93 T
190.16 578.35 195.36 575.35 190.16 572.35 3 L
N
188.39 575.35 195.36 575.35 2 L
7 X
V
0 X
N
170.5 550.01 167.5 544.82 164.5 550.01 3 L
N
167.5 555.53 167.5 544.82 2 L
7 X
V
0 X
N
170.5 496.98 167.5 491.78 164.5 496.98 3 L
N
167.5 503.03 167.5 491.78 2 L
7 X
V
0 X
N
188.93 526.71 193.75 523.93 188.93 521.14 3 L
N
188.93 523.93 193.75 523.93 2 L
7 X
V
0 X
N
188.93 473.05 192.68 470.89 188.93 468.73 3 L
N
188.93 470.89 192.68 470.89 2 L
7 X
V
0 X
N
304.07 391.37 301.07 386.18 298.07 391.37 3 L
N
301.07 396.89 301.07 386.18 2 L
7 X
V
0 X
N
171.04 443.94 168.04 438.75 165.04 443.94 3 L
N
168.04 448.93 168.04 438.75 2 L
7 X
V
0 X
N
170.5 392.52 167.5 387.32 164.5 392.52 3 L
N
167.5 398.03 167.5 387.32 2 L
7 X
V
0 X
N
170.5 340.01 167.5 334.82 164.5 340.01 3 L
N
167.5 345.53 167.5 334.82 2 L
7 X
V
0 X
N
304.61 339.94 301.61 334.75 298.61 339.94 3 L
N
301.61 344.39 301.61 334.75 2 L
7 X
V
0 X
N
188.93 421.17 193.75 418.39 188.93 415.61 3 L
N
188.93 418.39 193.75 418.39 2 L
7 X
V
0 X
N
190.16 368.89 195.36 365.89 190.16 362.89 3 L
N
188.93 365.89 195.36 365.89 2 L
7 X
V
0 X
N
190.16 316.92 195.36 313.92 190.16 310.92 3 L
N
188.93 313.92 195.36 313.92 2 L
7 X
V
0 X
N
323.04 368.52 326.79 366.36 323.04 364.19 3 L
N
323.04 366.36 326.79 366.36 2 L
7 X
V
0 X
N
323.04 316.33 327.32 313.86 323.04 311.38 3 L
N
323.04 313.86 327.32 313.86 2 L
7 X
V
0 X
N
323.04 420.78 326.25 418.93 323.04 417.07 3 L
N
323.04 418.93 326.25 418.93 2 L
7 X
V
0 X
N
323.04 473.14 327.86 470.36 323.04 467.57 3 L
N
323.04 470.36 327.86 470.36 2 L
7 X
V
0 X
N
323.73 525.86 328.93 522.86 323.73 519.86 3 L
N
323.04 522.86 328.93 522.86 2 L
7 X
V
0 X
N
304.07 445.02 301.07 439.82 298.07 445.02 3 L
N
301.07 450.53 301.07 439.82 2 L
7 X
V
0 X
N
304.07 496.98 301.07 491.78 298.07 496.98 3 L
N
301.07 501.96 301.07 491.78 2 L
7 X
V
0 X
N
170.73 602.75 167.73 597.55 164.73 602.75 3 L
N
301.61 295.79 301.61 284.57 275.61 284.57 275.61 616.25 167.73 616.25 167.73 597.55 6 L
N
178.02 282 183.22 279 178.02 276 3 L
N
167.68 293.46 167.68 279 183.22 279 3 L
N
290.39 568.5 346.64 588 R
N
369.81 669.11 375 666.11 369.81 663.11 3 L
9 X
N
306.97 677.36 357.86 677.36 346.61 666.11 375 666.11 4 L
N
205.5 681.48 202.5 676.29 199.5 681.48 3 L
0 X
N
202.5 684.32 202.5 676.29 2 L
N
206.57 664.87 203.57 659.68 200.57 664.87 3 L
N
203.57 666.64 203.57 659.68 2 L
N
(socket is) 453.04 416.28 T
(server?) 457.33 408.4 T
(rpc__dg_ccallt_lookup) 429.11 355.39 T
447.11 416.8 468.59 395.32 2 L
N
447.63 417.2 469.11 438.68 2 L
N
468.71 395.8 490.19 417.28 2 L
N
468.59 438.08 490.07 416.6 2 L
N
433.65 481.49 469.09 446.05 2 L
N
434.5 482.15 469.94 517.59 2 L
N
469.28 446.84 504.73 482.28 2 L
N
469.09 516.61 504.53 481.17 2 L
N
472.29 632.2 469.29 627 466.29 632.2 3 L
N
469.29 639.32 469.29 627 2 L
N
517.66 663.75 522.86 660.75 517.66 657.75 3 L
N
490.18 660.75 522.86 660.75 2 L
N
518.74 583.93 523.93 580.93 518.74 577.93 3 L
N
515.9 580.93 523.93 580.93 2 L
N
471.75 441.48 468.75 436.28 465.75 441.48 3 L
N
468.75 447.53 468.75 436.28 2 L
N
516.06 419.46 521.25 416.46 516.06 413.46 3 L
N
490.18 416.46 521.25 416.46 2 L
N
471.75 372.37 468.75 367.18 465.75 372.37 3 L
N
468.75 395.03 468.75 367.18 2 L
N
352.98 577.39 347.79 580.39 352.98 583.39 3 L
N
420.65 580.39 347.79 580.39 2 L
N
304.18 549.16 301.18 543.96 298.18 549.16 3 L
N
301.18 568.61 301.18 543.96 2 L
N
(N) 410.65 571.28 T
(N) 492.97 653.05 T
10 F
(\311) 0 -270 300.06 664.97 TF
146.54 631.55 279.93 699.86 R
8 X
N
472.04 517.55 469.04 512.36 466.04 517.55 3 L
0 X
N
419.75 579.86 419.75 520.93 469.04 520.93 469.04 512.36 4 L
N
8 F
(call handle lookup and) 420.65 323.78 T
(callback detection for) 420.65 314.48 T
(non-request, non-fack) 420.65 305.17 T
(packets) 420.65 295.86 T
6 F
(Y) 472.61 441.11 T
(Y) 490.83 407.69 T
(N) 472.61 388.74 T
(N) 307.32 495.15 T
(N) 307.32 390.18 T
(N) 307.32 339.33 T
(N) 307.32 286.86 T
(N) 307.32 442.72 T
(N) 175.18 288.96 T
(recv_pkt) 238.5 639.08 T
245.88 649.07 242.88 643.87 239.88 649.07 3 L
N
242.88 651.37 242.88 643.87 2 L
N
0 0 612 792 C
140.81 262.12 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "15" 154
%%Page: "16" 154
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-16) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-16) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(which packets have been received \050we discuss the theory behind datagram RPC) 108 712 T
(\337ow control beginning on page 6-1) 108 698.5 T
(1\051. Fack processing includes:) 276.45 698.5 T
(\245) 108 679 T
-0.38 (classifying the facks into client-to-server or server) 126 679 P
-0.38 (-to-client types, based on the) 364.64 679 P
(type of socket on which they arrive.) 126 665.5 T
(\245) 108 646 T
-0.13 (further classifying facks arriving on client sockets into acknowledgments of in) 126 646 P
(ar) 126 632.5 T
(guments \050the common case\051 and acknowledgment of out ar) 135.1 632.5 T
(guments that are) 418.67 632.5 T
(part of a callback.) 126 619 T
(\245) 108 599.5 T
(associating the fack with a ccall or scall \050and making sure to ignore facks for) 126 599.5 T
(calls that are in the orphan state\051) 126 586 T
(\245) 108 566.5 T
(processing the fack body\325) 126 566.5 T
(s) 248.91 566.5 T
5 11 Q
(window_size) 256.57 566.5 T
2 12 Q
(,) 329.08 566.5 T
5 11 Q
(serial_num) 335.08 566.5 T
2 12 Q
(, and selective ack) 401 566.5 T
(information and making appropriate blast size and retransmit queue adjust-) 126 553 T
(ments.) 126 539.5 T
(Because of their \322bidirectional\323 nature, boot time validation and processing for) 108 520 T
(fack packets depends on the type of socket on which the fack arrived. Facks that) 108 506.5 T
(are deemed to be a \322response\323 by virtue of having arrived on a client socket and) 108 493 T
-0.12 (not having an activity UUID that can be found in the SCALL) 108 479.5 P
-0.12 (T are run through the) 399.69 479.5 P
(client-oriented routine) 108 466 T
5 11 Q
(rpc__dg_do_common_response) 217.92 466 T
2 12 Q
(, which veri\336es hat the) 389.31 466 T
(server boot time in the packet is correct. \322Request\323 facks are processed through) 108 452.5 T
5 11 Q
(rpc__dg_server_chk_and_set_sboot) 108 439 T
2 12 Q
(.) 318.94 439 T
(All fack packets with a length greater than 12 bytes are assumed to contain selec-) 108 419.5 T
(tive ack information. This slight overloading of the packet header) 108 406 T
(\325) 422.89 406 T
(s) 426.22 406 T
5 11 Q
(len) 433.89 406 T
2 12 Q
( \336eld) 453.66 406 T
(allows compatibility with earlier \050NCS\051 versions of DCE RPC by making it possi-) 108 392.5 T
-0.26 (ble to discriminate between old and new fack packets without requiring an explicit) 108 379 P
(protocol version number change.) 108 365.5 T
143.51 335.28 72 335.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Forwarding) 72 336.67 T
2 12 Q
(Another set of top-level packet processing routines that deserves at least a little) 108 316 T
-0.11 (illumination here are those that deal with packet forwarding. In DCE 1.0.2, packet) 108 302.5 P
(forwarding is handled by the) 108 289 T
0 F
(rpcd) 248.9 289 T
2 F
(, which we describe in Chapter 5. Even though) 272.89 289 T
(the forwarding process involves retransmission of the forwarded packet\050s\051, for-) 108 275.5 T
-0.28 (warding is always an intramachine operation, since the forwarder and the recipient) 108 262 P
(are required to be on the same host.) 108 248.5 T
(Packet forwarding introduces several problems for the runtime:) 108 229 T
(\245) 108 209.5 T
(Packets that need to be forwarded must be detected more or less upon receipt,) 126 209.5 T
-0.03 (transformed as necessary into forwarded packets, and dispatched to the packet) 126 196 P
(forwarding function.) 126 182.5 T
(\245) 108 163 T
(The packet forwarding function must be able to \336gure out where the packet) 126 163 T
(should go.) 126 149.5 T
(\245) 108 130 T
(Forwarded packets must be recomposed into \322ordinary\323 packets upon receipt.) 126 130 T
(\245) 108 110.5 T
(None of the packet transformation must af) 126 110.5 T
(fect the authentication checksum in) 328.96 110.5 T
(the original packet \050i.e., no byte-reordering may take place\051.) 126 97 T
(\245) 108 77.5 T
-0.37 (Packets originating in the NCS RPC world may have their \322forwarded\323 \337ag set) 126 77.5 P
FMENDPAGE
%%EndPage: "16" 155
%%Page: "17" 155
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-17) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-17) 518.02 34.67 T
2 F
(incorrectly as far as the DCE RPC runtime is concerned. This condition must) 164.14 712 T
(be detected and corrected before any other packet processing is done.) 164.14 698.5 T
0 F
(Forwarding a Packet) 110.14 679 T
2 F
(As we\325ve described, received packet processing in the listener thread routine) 146.14 659 T
5 11 Q
-0.38 (recv_dispatch) 146.14 645.5 P
2 12 Q
-0.17 ( checks to see whether the object and interface UUIDs carried in) 231.84 645.5 P
(a packet\325) 146.14 632 T
(s header reference an interface and/or interface/object pair registered on) 189.1 632 T
-0.44 (the local host. If so, the packet is dispatched to) 146.14 618.5 P
5 11 Q
-0.96 (rpc__dg_fwd_pkt) 368.96 618.5 P
2 12 Q
-0.44 ( which invokes) 467.83 618.5 P
(the remote) 146.14 605 T
5 11 Q
(rpc_g_fwd_fn) 200.1 605 T
2 12 Q
( operation to determine the packet\325) 279.2 605 T
(s fate. This opera-) 446.08 605 T
-0.32 (tion is de\336ned in) 146.14 591.5 P
5 11 Q
-0.7 (comfwd.h) 228.16 591.5 P
2 12 Q
-0.32 ( and implemented in) 280.9 591.5 P
5 11 Q
-0.7 (rpcd.c) 380.9 591.5 P
2 12 Q
-0.32 (. The runtime calls it as a) 420.45 591.5 P
(remote operation via a procedure pointer in) 146.14 578 T
5 11 Q
(rpc__dg_fwd_pkt) 356.98 578 T
2 12 Q
(. It returns one of) 455.85 578 T
(three possible packet dispositions:) 146.14 564.5 T
(\245) 146.14 545 T
(drop the packet with no noti\336cation to the sender) 164.14 545 T
(, it cannot be forwarded.) 398.84 545 T
(\245) 146.14 525.5 T
(drop the packet and deliver a reject message to the original sender \050unless the) 164.14 525.5 T
(packet is a broadcast RPC\051 This return code should never happen in DCE) 164.14 512 T
(1.0.2.) 164.14 498.5 T
(\245) 146.14 479 T
(forward the packet to the address supplied by the function) 164.14 479 T
(If the packet is to be forwarded, it is \336rst transformed into a forwarded packet.) 146.14 459.5 T
(This involves hijacking the \336rst 16 bytes of the packet\325) 146.14 446 T
(s body and inserting a spe-) 409.65 446 T
(cial \322subheader\323 there \050see page 6-1) 146.14 432.5 T
(1 for an illustration\051 that includes:) 319.2 432.5 T
(\245) 146.14 413 T
-0.41 (a four) 164.14 413 P
-0.41 (-byte representation of the packet\325) 191.8 413 P
-0.41 (s original body length \050before insertion) 354.04 413 P
(of the subheader\051) 164.14 399.5 T
(\245) 146.14 380 T
(an eight-byte representation of the original sender) 164.14 380 T
(\325) 403.73 380 T
(s address) 407.07 380 T
(\245) 146.14 360.5 T
(a four) 164.14 360.5 T
(-byte representation of the original sender) 192.21 360.5 T
(\325) 393.49 360.5 T
(s data representation) 396.83 360.5 T
(This, along with setting the \322forwarded\323 \337ag in the packet header is all the packet) 146.14 341 T
-0.16 (manipulation that\325) 146.14 327.5 P
-0.16 (s necessary when the packet\325) 233.61 327.5 P
-0.16 (s original length is at least 16 bytes) 371.52 327.5 P
(less than the maximum packet length. Figure 7-12 describes this process for the) 146.14 314 T
(case where) 146.14 300.5 T
5 11 Q
(rpc__dg_fwd_pkt) 202.08 300.5 T
2 12 Q
( returns) 300.96 300.5 T
5 11 Q
(fwd_forward) 340.26 300.5 T
2 12 Q
(. \050In the alternative case,) 412.77 300.5 T
(the) 146.14 287 T
5 11 Q
(rqe) 163.8 287 T
2 12 Q
( is simply freed.\051) 183.57 287 T
FMENDPAGE
%%EndPage: "17" 156
%%Page: "18" 156
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-18) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-18) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 222.83 712 T
(e 7-12: Forwar) 249.71 712 T
(ding a Packet) 323.22 712 T
2 F
-0.34 (Packets with inadequate subheader room must be forwarded in two pieces, the \336rst) 108 362.5 P
(of which is a copy of the original header) 108 349 T
(, with the \322forwarded in two pieces\323 \337ag) 301.37 349 T
(set and a body consisting only of the subheader) 108 335.5 T
(, the second is just the original) 334.7 335.5 T
(packet with neither of the \322forwarded\323 \337ags set.) 108 322 T
0 F
(Pr) 72 302.5 T
(ocessing a Forwarded Packet) 84.44 302.5 T
2 F
(Operations on one-part forwarded packets are handled in) 108 282.5 T
5 11 Q
(rpc__dg_network_select_dispatch) 108 269 T
2 12 Q
( via the) 312.35 269 T
5 11 Q
(recv_pkt) 350.65 269 T
2 12 Q
( routine. Receiving) 403.39 269 T
(them is a simple matter of reversing the body manipulations performed in) 108 255.5 T
5 11 Q
(forward_fwd) 108 242 T
2 12 Q
(. The packet header) 180.51 242 T
(\325) 274.86 242 T
(s address and data rep are replaced with the) 278.2 242 T
(ones in the subheader) 108 228.5 T
(, the \322forwarded\323 \337ag is cleared, then the subheader is) 211.11 228.5 T
(removed and the body restored to its original condition, making the packet appear) 108 215 T
(to have never been forwarded. Figure 7-13 illustrates this case.) 108 201.5 T
-0.01 (T) 108 182 P
-0.01 (wo-part forwards have to be handled in an environment that allows the two parts) 114.49 182 P
(to be kept on hand until they can be reconstituted as originally sent. The earliest) 108 168.5 T
(place this can happen in the packet processing machinery is in) 108 155 T
5 11 Q
-0.07 (rpc__dg_do_request) 108 141.5 P
2 12 Q
-0.03 (. \050T) 226.65 141.5 P
-0.03 (wo-part forwards are always requests.\051 When this rou-) 243.1 141.5 P
(tine sees a packet with the \322forwarded in two parts\323 \337ag set, it keeps the rqe on-) 108 128 T
(hand, as its) 108 114.5 T
5 11 Q
(scall->fwd2_rqe) 164.63 114.5 T
2 12 Q
(, until the second half of the request\321which is) 263.51 114.5 T
-0.27 (identi\336ed as such by virtue of having the same serial number and activity UUID as) 108 101 P
(the \336rst half of the request\321comes in, at which point the second half under) 108 87.5 T
(goes a) 469.53 87.5 T
108 384 504 708 C
0.25 H
2 Z
0 X
0 K
180 270 56.51 76.23 241.91 594.41 A
180 270 87.91 118.59 241.88 594.41 A
185.38 594.43 153.98 594.43 2 L
N
241.9 518.18 241.9 547.84 279.58 497.02 241.9 446.15 241.9 475.82 5 L
N
220.48 629.8 220.48 555.35 238.46 567.49 239.55 554.54 245 569.92 252.63 555.35 252.63 630.61 7 Y
6 X
V
0.5 H
0 Z
9 X
N
220.42 632.06 253.63 697.95 R
7 X
V
0 X
N
10 8 Q
(\311) 0 -270 231.1 659.07 TF
6 F
(_ptype) 223.61 690.98 T
(\337ags) 223.61 683.12 T
(\337ags2) 223.61 674.89 T
(object) 223.61 653.32 T
(if_id) 223.61 645.81 T
10 F
(\311) 0 -270 231.1 634.99 TF
6 F
(drep) 223.34 667.58 T
8 F
(body) 226.73 582.04 T
138.56 590.75 217.85 697.89 R
7 X
V
0 X
N
6 F
(rpc_dg_recvq_elt_t) 141.24 688.78 T
(*next) 141.24 680.19 T
(hdrp) 141.24 671.6 T
(hdr) 141.24 663.01 T
(sock) 141.24 654.43 T
(from_len) 141.24 645.84 T
(pkt_len) 141.24 637.25 T
(from) 141.24 628.67 T
(was_rationing) 141.24 620.08 T
(low_on_pkts) 141.24 611.49 T
(pkt) 141.24 602.91 T
(pkt_real) 141.24 594.32 T
214.75 688.26 219.95 685.26 214.75 682.26 3 L
8 X
N
159.41 673.47 210.84 673.47 199.05 685.26 219.95 685.26 4 L
N
216.36 627.72 221.55 624.72 216.36 621.72 3 L
N
155.66 605.43 215.66 605.43 196.38 624.72 221.55 624.72 4 L
N
9 F
0 X
(recv_dispatch) 391.5 691.29 T
6 F
(rpc__object_inq_type\050object, \311\051) 384.54 655.19 T
(rpc__dg_fwd_pkt\050rqe, \311\051) 305.25 547.13 T
(rpc__if_lookup\050if_id, if_vers, \311\051) 347.57 624.26 T
(object=) 340.61 658.7 T
355.31 678.16 334.09 656.95 354.13 636.91 375.34 658.12 4 Y
N
(uuid_nil?) 340.61 651.54 T
379.34 660.53 384.54 657.53 379.34 654.54 3 L
N
375.97 657.53 384.54 657.53 2 L
N
357 633.8 354 628.61 351 633.8 3 L
N
354 637.18 354 628.61 2 L
N
277.91 470.69 277.91 396.24 295.89 408.38 296.98 395.43 302.42 410.8 310.05 396.24 310.05 471.5 7 Y
6 X
V
9 X
N
277.84 448.16 310.52 471.73 R
5 X
V
8 X
N
277.84 472.94 311.06 538.84 R
7 X
V
0 X
N
10 F
(\311) 0 -270 288.52 499.96 TF
6 F
(_ptype) 281.04 531.87 T
(\337ags) 281.04 524 T
(\337ags2) 281.04 515.78 T
(object) 281.04 494.2 T
(if_id) 281.04 486.69 T
10 F
(\311) 0 -270 288.52 475.88 TF
6 F
(drep) 280.77 508.46 T
(len) 280.77 464.18 T
(addr) 280.77 456.3 T
(drep) 280.77 449.14 T
8 F
(body) 284.16 422.93 T
6 F
(= 0) 304.87 515.94 T
(=0) 249 674.32 T
(= rpc_dg_pf_forwarded) 304.36 523.94 T
(&= rpc_dg_pf_forwarded) 243.65 683.92 T
274.88 461.78 280.07 458.78 274.88 455.78 3 L
N
141.32 630.75 129 630.75 129 458.78 280.07 458.78 4 L
N
393.89 490.99 393.89 503.21 436.53 478.77 393.89 454.33 393.89 466.55 5 L
7 X
V
0.2 H
2 Z
0 X
N
393.89 490.99 332.97 490.99 332.97 466.55 393.89 466.55 4 L
7 X
V
0 X
N
(rpc__dg_xmit_pkt) 344.36 475.93 T
275.95 468.21 281.14 465.21 275.95 462.21 3 L
0.5 H
0 Z
N
142.39 638.79 118.82 638.79 118.82 465.21 281.14 465.21 4 L
N
328.29 612.54 499.18 679.5 R
8 X
N
8 F
0 X
(If the interface isn\325t) 320.25 587.89 T
(registered on the local) 320.25 578.58 T
(host, try to forward the packet) 320.25 569.28 T
357.49 556.18 351.85 554.15 352.91 560.05 3 L
N
400.07 611.46 351.86 554.14 2 L
N
6 F
(fwd_forward) 204.98 500.12 T
271.66 454.28 276.86 451.28 271.66 448.28 3 L
N
242.57 669.32 260.25 669.32 260.25 451.28 276.86 451.28 4 L
N
0 0 612 792 C
108 384 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "18" 157
%%Page: "19" 157
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-19) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-19) 518.02 34.67 T
2 F
(transformation similar to the one previously described for one-part forwards; the) 144 712 T
-0.34 (sender) 144 698.5 P
-0.34 (\325) 175.75 698.5 P
-0.34 (s address retrieved from the body of the \336rst half replaces the address in the) 179.08 698.5 P
(header of the second half, and the packet is now ready to be associated with an) 144 685 T
-0.25 (scall or ccall. \050The \322forwarded\323 \337ags are never set on the second half of a two-part) 144 671.5 P
(forward.\051) 144 658 T
4 F
(Figur) 232.91 638.5 T
(e 7-13: Pr) 259.79 638.5 T
(ocessing a Forwar) 308.63 638.5 T
(ded Packet) 398.14 638.5 T
0 F
(The Packet Forwarding Function) 108 325.96 T
2 F
(The) 144 305.96 T
5 11 Q
(fwd_map) 165.65 305.96 T
2 12 Q
( forwarding function invokes the rpcd\325) 211.79 305.96 T
(s) 396.66 305.96 T
5 11 Q
(epdb_fwd) 404.32 305.96 T
2 12 Q
( routine, which) 457.05 305.96 T
(searches the endpoint database on the local host for in interface and/or object) 144 292.46 T
-0.09 (UUID match as described on page 5-18. Even though) 144 278.97 P
5 11 Q
-0.2 (fwd_map) 402.97 278.97 P
2 12 Q
-0.09 ( is de\336ned and car-) 449.11 278.97 P
(ried out as a remote operation, it is always an intramachine operation in DCE) 144 265.47 T
(1.0.2.) 144 251.97 T
389.41 221.75 108 221.75 2 L
V
1.33 H
0 Z
N
0 14 Q
(Liveness, Context, and Conversation Callbacks) 108 223.13 T
2 12 Q
(Part of the work of connection maintenance involves making sure that clients and) 144 202.47 T
(servers can identify each other in ways that allow enforcement of call semantics) 144 188.97 T
(\050e.g., at-most-once\051, detection of a \322death\323 at either end of the connection, and) 144 175.47 T
(maintenance of client context \050context handles\051 in the server) 144 161.97 T
(\325) 434.22 161.97 T
(s address space. T) 437.55 161.97 T
(o) 523.3 161.97 T
(these ends, the datagram RPC protocol service provides three closely related facil-) 144 148.47 T
(ities:) 144 134.97 T
(\245) 144 115.47 T
(a conversation manager \050) 162 115.47 T
5 11 Q
(conv) 282.89 115.47 T
2 12 Q
(\051 that implements several simpli\336ed callback) 309.26 115.47 T
(operations that clients and servers use to establish various details of each oth-) 162 101.97 T
(ers\325 identities.) 162 88.47 T
148.29 347.46 540 634.5 C
257.14 484.33 257.14 409.88 275.12 422.02 276.21 409.07 281.66 424.44 289.29 409.88 289.29 485.14 7 Y
6 X
0 K
V
0.5 H
0 Z
9 X
N
257.08 461.8 289.76 485.37 R
5 X
V
8 X
N
278.57 464.78 473.57 464.78 2 L
5 X
V
0 X
N
0.25 H
2 Z
180 270 42.05 44.01 307.22 559.49 A
180 270 65.42 68.47 307.2 559.49 A
265.15 559.5 241.79 559.5 2 L
N
307.21 515.48 307.21 532.6 335.25 503.26 307.21 473.89 307.21 491.02 5 L
N
257.08 486.58 290.29 552.48 R
7 X
V
0.5 H
0 Z
0 X
N
9 8 Q
(rpc__dg_network_select_dispatch) 155.65 615.51 T
6 F
(rpc__dg_pkt_alloc_rqe) 176.72 598.35 T
(rpc_socket_recvfrom) 189.43 580.47 T
10 F
(\311) 0 -270 267.76 513.6 TF
6 F
(_ptype) 260.27 545.51 T
(\337ags) 260.27 537.64 T
(\337ags2) 260.27 529.42 T
(object) 260.27 507.85 T
(if_id) 260.27 500.33 T
10 F
(\311) 0 -270 267.76 489.52 TF
212.27 610.17 209.27 604.98 206.27 610.17 3 L
N
209.27 613.01 209.27 604.98 2 L
7 X
V
0 X
N
213.34 593.56 210.34 588.37 207.34 593.56 3 L
N
210.34 595.33 210.34 588.37 2 L
7 X
V
0 X
N
153.3 560.24 286.7 628.55 R
8 X
N
6 F
0 X
(recv_pkt) 245.27 567.06 T
252.64 577.76 249.64 572.57 246.64 577.76 3 L
N
249.64 580.07 249.64 572.57 2 L
N
(drep) 260 522.1 T
(len) 260 477.82 T
(addr) 260 469.94 T
(drep) 260 462.78 T
8 F
(body) 263.39 436.57 T
175.22 445.28 254.51 552.42 R
7 X
V
0 X
N
6 F
(rpc_dg_recvq_elt_t) 177.9 543.31 T
(*next) 177.9 534.72 T
(hdrp) 177.9 526.13 T
(hdr) 177.9 517.54 T
(sock) 177.9 508.96 T
(from_len) 177.9 500.37 T
(pkt_len) 177.9 491.78 T
(from) 177.9 483.2 T
(was_rationing) 177.9 474.61 T
(low_on_pkts) 177.9 466.02 T
(pkt) 177.9 457.43 T
(pkt_real) 177.9 448.85 T
(= rpc_dg_pf_forwarded) 282.86 537.64 T
(= 0) 284.11 529.58 T
251.41 542.78 256.61 539.78 251.41 536.78 3 L
8 X
N
196.07 528 247.5 528 235.72 539.78 256.61 539.78 4 L
N
253.02 482.25 258.22 479.25 253.02 476.25 3 L
N
192.32 459.96 252.32 459.96 233.04 479.25 258.22 479.25 4 L
N
418.18 439.9 418.18 365.45 436.16 377.59 437.25 364.64 442.7 380.02 450.32 365.45 450.32 440.71 7 Y
6 X
V
9 X
N
418.12 442.15 451.33 508.05 R
7 X
V
0 X
N
10 F
(\311) 0 -270 428.8 469.17 TF
6 F
(_ptype) 421.31 501.08 T
(\337ags) 421.31 493.21 T
(\337ags2) 421.31 484.99 T
(object) 421.31 463.42 T
(if_id) 421.31 455.9 T
10 F
(\311) 0 -270 428.8 445.09 TF
6 F
(drep) 421.04 477.67 T
8 F
(body) 424.43 392.14 T
336.26 400.85 415.55 507.99 R
7 X
V
0 X
N
6 F
(rpc_dg_recvq_elt_t) 338.94 498.88 T
(*next) 338.94 490.29 T
(hdrp) 338.94 481.7 T
(hdr) 338.94 473.11 T
(sock) 338.94 464.53 T
(from_len) 338.94 455.94 T
(pkt_len) 338.94 447.35 T
(from) 338.94 438.77 T
(was_rationing) 338.94 430.18 T
(low_on_pkts) 338.94 421.59 T
(pkt) 338.94 413.01 T
(pkt_real) 338.94 404.42 T
(&= rpc_dg_pf_forwarded) 443.9 493.21 T
(= 0) 445.15 485.15 T
412.45 498.35 417.64 495.35 412.45 492.35 3 L
8 X
N
357.11 483.57 408.54 483.57 396.75 495.35 417.64 495.35 4 L
N
414.06 437.82 419.25 434.82 414.06 431.82 3 L
N
353.36 415.53 413.36 415.53 394.07 434.82 419.25 434.82 4 L
N
333.38 444.03 338.57 441.03 333.38 438.03 3 L
0 X
N
276.43 472.1 310.18 472.1 301.07 441.03 338.57 441.03 4 L
N
332.84 451 338.04 448 332.84 445 3 L
N
271.61 481.75 334.29 481.75 325.72 448 338.04 448 4 L
N
439.77 474.53 436.07 479.25 442.01 480.09 3 L
N
473.57 464.25 436.07 479.25 2 L
N
504.76 397.26 504.76 411.76 529.31 382.77 504.76 353.77 504.76 368.27 5 L
7 X
V
0.2 H
2 Z
0 X
N
504.76 397.26 469.69 397.26 469.69 368.27 504.76 368.27 4 L
7 X
V
0 X
N
(recv_dispatch) 473.04 380.14 T
0 0 612 792 C
148.29 347.46 540 634.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "19" 158
%%Page: "20" 158
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-20) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-20) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(\245) 108 712 T
-0.12 (a client conversation \050) 126 712 P
5 11 Q
-0.25 (convc) 231.9 712 P
2 12 Q
-0.12 (\051 operation that clients invoke to let servers know) 264.86 712 P
(that they are still alive, even though they may not have been heard from with) 126 698.5 T
(any \322real work\323 in a while) 126 685 T
(\245) 108 665.5 T
(a server) 126 665.5 T
(-side) 163.38 665.5 T
5 11 Q
(client_rep) 189.7 665.5 T
2 12 Q
( data structure that identi\336es a client by means of a) 255.62 665.5 T
(special UUID that, once established, is associated with every call made from) 126 652 T
(that client\325) 126 638.5 T
(s local address space.) 176.97 638.5 T
-0.03 (The latter two facilities are part of context handle support, and only come into use) 108 619 P
(when context handles are speci\336ed in an interface de\336nition. The conversation) 108 605.5 T
(manager becomes part of every non-idempotent RPC.) 108 592 T
0 F
(The Conversation Manager) 72 572.5 T
2 F
(Datagram RPC client/server connections generate their own \322conversational\323 traf-) 108 552.5 T
(\336c unrelated to the content of calls made over them. These conversations concern:) 108 539 T
(\245) 108 519.5 T
(Client and/or server identity veri\336cation, in which clients and servers try to) 126 519.5 T
(identify each other by various means \050and with varying levels of certainty\051) 126 506 T
(\245) 108 486.5 T
-0.29 (Liveness tests, in which one party attempts to ascertain whether the other party) 126 486.5 P
(is dead or unreachable \050both of which amount to the same thing for an RPC\051.) 126 473 T
(Any such conversation requires clients and servers to temporarily reverse roles,) 108 453.5 T
-0.32 (and is in ef) 108 440 P
-0.32 (fect a callback mechanism. Rather than try to implement conversational) 159.79 440 P
(callbacks as part of the normal datagram RPC callback mechanism, the datagram) 108 426.5 T
(RPC protocol service provides a simpli\336ed, specialized, lightweight facility) 108 413 T
(known internally as the conversation manager to handle these interactions.) 108 399.5 T
(The conversation manager comprises a set of routines de\336ned in) 108 380 T
5 11 Q
(dglsn.c) 419.77 380 T
2 12 Q
( and) 465.91 380 T
5 11 Q
(conv.c) 108 366.5 T
2 12 Q
(. The routines are a combination of packet processing operations and) 147.55 366.5 T
(pseudo-stubs that implement the conversation manager) 108 353 T
(\325) 372.6 353 T
(s \322manager routines.\323) 375.93 353 T
(There is also a conversation thread and a conversation queue that support poten-) 108 339.5 T
(tially-long-running conversations that would otherwise block runtime progress.) 108 326 T
(For the most part, the manager routines simply unmarshal the request packets) 108 306.5 T
(\050which are fairly uncomplicated\051 in place and, for local operations \050the kind we) 108 293 T
(will discuss here\051, construct and transmit the appropriate response. There are four) 108 279.5 T
(operations in the) 108 266 T
5 11 Q
(conv) 190.95 266 T
2 12 Q
( interface:) 217.31 266 T
5 11 Q
(conv_who_are_you) 108 247.17 T
2 12 Q
(When a server receives a non-idempotent request packet that con-) 180 234.5 T
(tains a new activity/sequence pair) 180 221 T
(, it sends a) 341.39 221 T
5 11 Q
(conv_who_are_you) 395.03 221 T
2 12 Q
(request \050commonly referred to as a W) 180 207.5 T
(A) 360.51 207.5 T
(Y callback\051, to the client to) 368.07 207.5 T
(ask for the client\325) 180 194 T
(s current sequence number) 263.61 194 T
(.) 391.17 194 T
5 11 Q
(conv_who_are_you2) 108 175.17 T
2 12 Q
(This operation \050W) 180 162.5 T
(A) 266.6 162.5 T
(Y2\051 is similar to a W) 274.16 162.5 T
(A) 373.77 162.5 T
(Y callback, but also) 381.32 162.5 T
(returns to the caller with a Client Address Space UUID) 180 149 T
(\050) 180 135.5 T
5 11 Q
(cas_uuid) 183.99 135.5 T
2 12 Q
(\051, used as part of the runtime\325) 236.73 135.5 T
(s support for context han-) 377.63 135.5 T
(dles. When a server receives a non-idempotent request packet that) 180 122 T
(contains a new activity/sequence pair and an indication that a con-) 180 108.5 T
(text handle is to be used, it sends a W) 180 95 T
(A) 359.22 95 T
(Y2 request to the client to) 366.77 95 T
(ask for the client\325) 180 81.5 T
(s current sequence number and) 263.61 81.5 T
5 11 Q
( cas_uuid) 412.14 81.5 T
2 12 Q
(.) 471.47 81.5 T
FMENDPAGE
%%EndPage: "20" 159
%%Page: "21" 159
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-21) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-21) 518.02 34.67 T
2 F
(DCE RPC implements the W) 216 712 T
(A) 355.27 712 T
(Y callback type only because it) 362.82 712 T
(needs to support earlier \050NCS RPC\051 clients. If it did not need to) 216 698.5 T
-0.43 (make this concession to backward compatibility) 216 685 P
-0.43 (, all W) 443.91 685 P
-0.43 (A) 474.02 685 P
-0.43 (Y callbacks) 481.58 685 P
(would also request the) 216 671.5 T
5 11 Q
(cas_uuid) 326.59 671.5 T
2 12 Q
(.) 379.33 671.5 T
5 11 Q
(conv_who_are_you_auth) 144 652.67 T
2 12 Q
(Servers call this operation \050W) 216 640 T
(A) 357.89 640 T
(Y) 365.45 640 T
(-AUTH\051 whenever a new connec-) 372.78 640 T
(tion \050new activity/sequence\051 is set up for a call that requires some) 216 626.5 T
(form of authentication or authorization.) 216 613 T
5 11 Q
(conv_are_you_there) 144 594.17 T
2 12 Q
(This operation \050A) 216 581.5 T
(YT\051 is intended to provide support for a server) 300.17 581.5 T
(-) 523.76 581.5 T
(side \322ping\323 analogue, but is not really used in DCE 1.0.2. It may) 216 568 T
(turn out to be unnecessary) 216 554.5 T
(, since today) 341.13 554.5 T
(, a client that has not trans-) 400.64 554.5 T
(mitted all of its ins and has never pinged the server can be safely) 216 541 T
(presumed dead.) 216 527.5 T
(Currently) 144 508 T
(, all conv operations other than W) 189.19 508 T
(A) 350.74 508 T
(Y) 358.3 508 T
(-AUTH are handled via the \322fast) 365.63 508 T
(path,\323 on which the requests, represented as free receive queue elements, are sim-) 144 494.5 T
(ply handed of) 144 481 T
(f to) 209.74 481 T
5 11 Q
(rpc__dg_handle_conv_int) 229.06 481 T
2 12 Q
(, which is responsible for build-) 380.67 481 T
-0.39 (ing and transmitting the appropriate response packet. W) 144 467.5 P
-0.39 (A) 408.39 467.5 P
-0.39 (Y) 415.94 467.5 P
-0.39 (-AUTH requests, which) 423.27 467.5 P
(involve a potentially time-consuming RPC to the DCE Security Service, are) 144 454 T
(queued for handling by the conversation manager thread.) 144 440.5 T
(The conversation manager) 144 421 T
(\325) 271.67 421 T
(s queue \050) 275 421 T
5 11 Q
(convq) 318.3 421 T
2 12 Q
(\051 is a simple structure de\336ned in) 351.26 421 T
5 11 Q
(dglsn.c) 144 407.5 T
2 12 Q
(, with head and tail pointers as well as its own mutex and condition vari-) 190.14 407.5 T
(able. This queue holds some \050small, since it is limited to the number of simulta-) 144 394 T
(neous in-progress client calls\051 number of receive queue elements \050see page 6-23\051.) 144 380.5 T
(These elements are indexed by the callback\325) 144 367 T
(s activity UUID. A) 355.83 367 T
5 11 Q
(conv) 450.1 367 T
2 12 Q
( callback is) 476.46 367 T
(its own activity) 144 353.5 T
(, and) 217.18 353.5 T
5 11 Q
( conv) 240.5 353.5 T
2 12 Q
( packets carry this activity UUID in the packet header) 273.46 353.5 T
(.) 530.92 353.5 T
(The \322parent\323 activity UUID is included in the) 144 340 T
5 11 Q
(conv) 366.5 340 T
2 12 Q
( packet body) 392.87 340 T
(.) 453.38 340 T
(When the \336rst W) 144 320.5 T
(A) 224.94 320.5 T
(Y) 232.5 320.5 T
(-AUTH request arrives, the runtime initializes the conversa-) 239.83 320.5 T
(tion manager) 144 307 T
(\325) 207.4 307 T
(s queue and starts up the conversation thread. This thread executes) 210.73 307 T
-0.38 (the) 144 293.5 P
5 11 Q
-0.84 (convq_loop) 161.27 293.5 P
2 12 Q
-0.38 ( routine, which traverses the queue each time an element is added) 227.19 293.5 P
(\050signalled by the change in the queue\325) 144 280 T
(s condition variable\051 and runs the) 325.87 280 T
5 11 Q
(handle_conv_int) 144 266.5 T
2 12 Q
( routine sequentially on each queue element. Figure 7-14) 242.88 266.5 T
(illustrates the operations of the conversation manager) 144 253 T
(.) 399.82 253 T
FMENDPAGE
%%EndPage: "21" 160
%%Page: "22" 160
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-22) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-22) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 207.62 712 T
(e 7-14: The Conversation Manager) 234.49 712 T
2 F
(In DCE 1.0.2, only) 108 362.5 T
5 11 Q
(conv_who_are_you_auth) 202.28 362.5 T
2 12 Q
( and conversation) 340.71 362.5 T
5 11 Q
(ping) 428.31 362.5 T
2 12 Q
( requests) 454.67 362.5 T
(\050that is to say) 108 349 T
(, packets of the) 171.52 349 T
5 11 Q
(ping) 247.12 349 T
2 12 Q
( type that include the) 273.49 349 T
5 11 Q
(conv_V3_0) 377.09 349 T
2 12 Q
( interface) 436.42 349 T
(UUID\051 are queued on the) 108 335.5 T
5 11 Q
(convq) 232.89 335.5 T
2 12 Q
(. Conversations generate their own ping traf) 265.85 335.5 T
(\336c,) 476.48 335.5 T
(just like any other idempotent RPC.) 108 322 T
0 F
(Context Handle Support) 72 302.5 T
2 F
(Servers can, if requested, maintain context on a client\325) 108 282.5 T
(s behalf. This context must) 368.47 282.5 T
(be maintained across all calls made from a client, and should be freed as soon as) 108 269 T
(the client no longer needs it. This task is complicated somewhat by the fact that) 108 255.5 T
-0.1 (servers, which normally \322see\323 clients as a series of otherwise unrelated calls, need) 108 242 P
(a way to associate all calls originating from one local client address space with) 108 228.5 T
-0.23 (some remote object. The datagram RPC protocol service enables this by providing) 108 215 P
(clients with the notion of an address space UUID with which they \050and their con-) 108 201.5 T
(text\051 can be associated in a server) 108 188 T
(\325) 269.64 188 T
(s address space, and by providing a simple) 272.97 188 T
(means for a client to periodically reassure the server \322I\325m not dead yet.\323) 108 174.5 T
108 384 504 708 C
137.5 451.39 175 500.14 R
7 X
0 K
V
0.5 H
0 Z
0 X
N
6 8 Q
(rpc__dg_handle_conv) 371.79 584.34 T
(rpc__dg_handle_conv_int) 372.32 472.71 T
(convq_loop) 190.18 520.73 T
(recv_dispatch \050\311, rqe\051) 403.75 676.24 T
9 F
(convq_t) 140.71 492.47 T
6 F
(head) 140.71 484.95 T
(tail) 140.71 477.45 T
(cnt) 140.71 469.94 T
(m) 140.71 462.43 T
(cv) 140.71 454.92 T
(convq_add) 320.36 559.3 T
(convq_remove) 127.5 426.25 T
(conv_stub_who_are_you) 372.32 428.73 T
(conv_stub_who_are_you2) 372.32 419.42 T
(conv_stub_are_you_there) 372.32 410.11 T
(conv_stub_who_are_you_auth) 372.32 401.34 T
190.18 481.49 208.93 500.24 R
7 X
V
0 X
N
208.93 481.49 227.68 500.24 R
7 X
V
0 X
N
227.69 481.49 246.44 500.24 R
7 X
V
0 X
N
246.44 481.49 265.19 500.24 R
7 X
V
8 X
N
265.18 481.49 283.93 500.24 R
7 X
V
0 X
N
3 F
(\256) 262.77 492.78 T
(\256) 243.48 492.78 T
(\256) 225.64 492.78 T
(\256) 206.14 492.78 T
198.02 490.82 203.22 487.82 198.02 484.82 3 L
N
159.82 487.82 203.22 487.82 2 L
7 X
V
0 X
N
273.61 482.27 276.61 487.46 279.61 482.27 3 L
N
151.25 478.89 276.61 478.89 276.61 487.46 3 L
N
293.36 649.53 361.4 701.5 R
7 X
V
0 X
N
6 F
(act=0123) 294.39 686.31 T
(seq=0001) 294.39 678.8 T
(if_id=conv_v3_0\311) 294.39 671.64 T
(ptype=request) 294.39 693.81 T
(opnum=) 293.75 664.07 T
8 F
(n) 323.22 664.07 T
184.99 561.89 264.28 669.04 R
7 X
V
0 X
N
9 F
(rpc_dg_recvq_elt_t) 187.67 658.86 T
6 F
(*next) 187.67 650.26 T
(hdrp) 187.67 641.68 T
(hdr) 187.67 633.09 T
(sock) 187.67 624.5 T
(from_len) 187.67 615.91 T
(pkt_len) 187.67 607.33 T
(from) 187.67 598.74 T
(was_rationing) 187.67 590.15 T
(low_on_pkts) 187.67 581.57 T
(pkt) 187.67 574.23 T
(pkt_real) 187.67 565.64 T
10 F
(\311) 0 -270 301.25 653.16 TF
283.02 691.71 288.22 688.71 283.02 685.71 3 L
8 X
N
201.43 635.14 296.25 635.14 265.72 688.71 288.22 688.71 4 L
N
367.88 687.32 362.68 690.32 367.88 693.32 3 L
N
476.79 682.82 476.79 690.32 362.68 690.32 3 L
N
390.45 559.16 411.92 537.68 2 L
0 X
N
390.96 559.56 412.44 581.03 2 L
N
412.04 538.16 433.52 559.63 2 L
N
411.92 580.44 433.4 558.96 2 L
N
6 F
(opnum=3?) 393.57 556.57 T
(Y) 375 543.87 T
(N) 418.4 526.53 T
1 H
3 X
90 450 88.93 67.5 211.61 477.64 A
11 F
0 X
(s) 119.46 475.83 T
(t) 296.79 475.83 T
366.27 556.07 361.07 559.07 366.27 562.07 3 L
0.5 H
1 X
N
390 559.07 361.07 559.07 2 L
N
370.18 523.71 454.82 599.25 R
9 X
N
291.33 494.71 285.53 493.19 287.11 498.98 3 L
0 X
N
320.89 556.93 297.86 533.89 326.25 533.89 285.54 493.18 4 L
N
426.22 608.73 423.22 603.53 420.22 608.73 3 L
N
423.22 669.43 423.22 603.53 2 L
N
414.43 483.91 411.43 478.71 408.43 483.91 3 L
N
411.43 538.18 411.43 478.71 2 L
N
363.38 476.35 368.57 473.35 363.38 470.35 3 L
N
300.54 473.35 368.57 473.35 2 L
N
414.97 448.01 411.97 442.82 408.97 448.01 3 L
N
411.97 466.39 411.97 442.82 2 L
N
6 F
(rpc__dg_network_select_dispatch) 123.82 691.82 T
172.95 639.76 174.53 633.97 168.73 635.49 3 L
N
130.07 703.61 160.61 673.07 135.43 673.07 174.54 633.96 4 L
N
8 F
(a free rqe,) 129 615.75 T
(not on any rq) 129 606.44 T
0 0 612 792 C
108 384 504 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "22" 161
%%Page: "23" 161
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-23) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-23) 518.02 34.67 T
196.95 710.69 144 710.69 2 L
V
0.59 H
0 Z
N
2 F
(The Server) 144 712 T
329.3 710.69 196.71 710.69 2 L
V
N
(-Side Client Representation) 196.71 712 T
(The server side of the datagram RPC runtime associates each client with a \322client) 144 692 T
(rep\323 data structure de\336ned in) 144 678.5 T
5 11 Q
(dg.h) 286.22 678.5 T
2 12 Q
( and illustrated here in T) 312.58 678.5 T
(able 7-1.) 429.33 678.5 T
(This structure provides a way for a server to associate multiple connections \050activ-) 144 470 T
(ities\051 with a single remote object, to know how long it has been since that object) 144 456.5 T
(last transacted any business with the server) 144 443 T
(, and to know what to do once it has) 350.04 443 T
-0.23 (been determined that the remote object no longer exists. When context handles are) 144 429.5 P
(in use, a server associates a client rep structure with one or more SCTEs proceed-) 144 416 T
(ing roughly as follows:) 144 402.5 T
(\245) 144 383 T
(a call invokes the) 162 383 T
5 11 Q
(rpc__dg_binding_inq_client) 248.6 383 T
2 12 Q
(operation to associate a) 422.99 383 T
(client rep the call\325) 162 369.5 T
(s SCTE. If such an association exists, the existing client rep) 248.27 369.5 T
(gets another reference.) 162 356 T
(\245) 144 336.5 T
(if no client rep exists, the server makes a W) 162 336.5 T
(A) 370.51 336.5 T
(Y2 callback and initializes a new) 378.06 336.5 T
(client rep with the returned) 162 323 T
5 11 Q
(cas_uuid) 294.9 323 T
2 12 Q
(, a NULL) 347.63 323 T
5 11 Q
(rundown) 396.93 323 T
2 12 Q
( entry) 443.07 323 T
(, and) 469.93 323 T
5 11 Q
(last_update=0) 162 309.5 T
2 12 Q
(.) 247.69 309.5 T
(\245) 144 290 T
(if the server stub wants to monitor client liveness, it calls) 162 290 T
5 11 Q
(rpc_dg_network_mon) 162 276.5 T
2 12 Q
(, supplying a) 280.65 276.5 T
5 11 Q
(rundown) 345.29 276.5 T
2 12 Q
( function pointer) 391.43 276.5 T
(. The client) 470.72 276.5 T
(rep\325) 162 263 T
(s) 180.65 263 T
5 11 Q
(rundown) 188.31 263 T
2 12 Q
( entry is pointed at the rundown function, and the) 234.46 263 T
5 11 Q
(last_up-) 473.96 263 T
(date) 162 249.5 T
2 12 Q
( \336eld is timestamped.) 188.37 249.5 T
272.57 228.69 144 228.69 2 L
V
N
(The convc_indy Operation) 144 230 T
(Clients that are using context handles periodically send an \322I\325m not dead yet\323) 144 210 T
(\050\322indy\323\051 request to the server\050s\051 with which they are communicating. The indy) 144 196.5 T
(request is the sole operation in the) 144 183 T
5 11 Q
(convc_v1_0) 310.89 183 T
2 12 Q
( interface, which, like the) 376.81 183 T
5 11 Q
(conv) 501.71 183 T
2 12 Q
(interface, is implemented in pseudo-stub form in the \336le) 144 169.5 T
5 11 Q
(dgclive.c) 416.49 169.5 T
2 12 Q
(. Clients) 475.82 169.5 T
(maintain a queue of server bindings to which) 144 156 T
5 11 Q
(convc) 363.18 156 T
2 12 Q
( requests should be sent. The) 396.14 156 T
(\322indy thread\323 traverses the queue periodically \050in DCE 1.0.2, every 20 seconds\051) 144 142.5 T
(and transmits a) 144 129 T
5 11 Q
( convc) 216.62 129 T
2 12 Q
( request to each server represented there. The) 256.17 129 T
5 11 Q
(convc) 476.3 129 T
2 12 Q
(request contains only the client\325) 144 115.5 T
(s) 296.57 115.5 T
5 11 Q
(cas_uuid) 304.23 115.5 T
2 12 Q
(.) 356.97 115.5 T
-0.43 (Like) 144 96 P
5 11 Q
-0.94 ( conv) 165.98 96 P
2 12 Q
-0.43 ( requests, incoming) 198 96 P
5 11 Q
-0.94 (convc) 293.32 96 P
2 12 Q
-0.43 ( requests are handled by the network listener) 326.27 96 P
(thread, which dispatches them immediately to the server routine) 144 82.5 T
4 F
(T) 244.22 660.5 T
(able 7-1: rpc_dg_client_r) 249.79 660.5 T
(ep_t structur) 373.26 660.5 T
(e) 434.45 660.5 T
5 11 Q
(rpc_dg_client_rep_t {) 146 639.17 T
(*next) 146 620.17 T
(/* next element in chain */) 254 620.17 T
(cas_uuid) 146 601.17 T
(/* client address space UUID */) 254 601.17 T
(rundown) 146 582.17 T
(/* pointer to context rundown routine to) 254 582.17 T
(call if client dies */) 254 569.17 T
(last_update) 146 550.17 T
(/* rpc_clock_t when we last heard from the) 254 550.17 T
(client */) 254 537.17 T
(refcnt) 146 518.17 T
(/* references held to this element */) 254 518.17 T
(}) 146 499.17 T
142.75 651.5 142.75 490.5 2 L
V
0.5 H
N
145.25 649 145.25 493 2 L
V
N
250.75 631.25 250.75 510.75 2 L
V
N
253.25 631.25 253.25 510.75 2 L
V
N
538.75 649 538.75 493 2 L
V
N
541.25 651.5 541.25 490.5 2 L
V
N
142.5 651.75 541.5 651.75 2 L
V
N
145 649.25 539 649.25 2 L
V
N
145.5 631.5 538.5 631.5 2 L
V
N
145.5 612.5 538.5 612.5 2 L
V
N
145.5 593.5 538.5 593.5 2 L
V
N
145.5 561.5 538.5 561.5 2 L
V
N
145.5 529.5 538.5 529.5 2 L
V
N
145.5 510.5 538.5 510.5 2 L
V
N
145 492.75 539 492.75 2 L
V
N
142.5 490.25 541.5 490.25 2 L
V
N
FMENDPAGE
%%EndPage: "23" 162
%%Page: "24" 162
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-24) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-24) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
5 11 Q
(rpc__dg_handle_convc) 144 712 T
2 12 Q
(. A recipient of an indy request simply updates the) 275.84 712 T
(associated client rep\325) 144 698.5 T
(s) 244.59 698.5 T
5 11 Q
(last_update) 252.25 698.5 T
2 12 Q
( \336eld with the current) 324.76 698.5 T
5 11 Q
(rpc_clock_t) 431.02 698.5 T
2 12 Q
( times-) 503.53 698.5 T
(tamp. Figure 7-15 illustrates this process.) 144 685 T
4 F
(Figur) 240.29 665.5 T
(e 7-15: Client Liveness Maintenance) 267.17 665.5 T
147.63 311.28 108 311.28 2 L
V
1.33 H
0 Z
N
0 14 Q
(Server) 108 312.67 T
301.02 311.28 147.11 311.28 2 L
V
N
(-Side Listener Operations) 147.11 312.67 T
2 12 Q
(As we\325ve noted, operations that are run by the network listener thread can conve-) 144 292 T
-0.11 (niently be divided into server) 144 278.5 P
-0.11 (- and client-oriented types. While any process can be) 283.89 278.5 P
(either a server or a client \050and, when callbacks come into play) 144 265 T
(, both\051, we think of) 440.31 265 T
-0.42 (server) 144 251.5 P
-0.42 (-side routines as the ones that handle request and ping packets. Except where) 173.06 251.5 P
-0.21 (otherwise noted, all of the functions we describe in this section are scoped internal.) 144 238 P
0 F
(Request Handling) 108 218.5 T
2 F
(Most of the basic request handling functions are implemented in the \336le) 144 198.5 T
5 11 Q
(dgslsn.c) 144 185 T
2 12 Q
(. Request packets are dispatched to the internal routine) 196.73 185 T
5 11 Q
(rpc__dg_do_request) 144 171.5 T
2 12 Q
( which, along with its associated functions) 262.65 171.5 T
5 11 Q
(do_cbk_request) 144 158 T
2 12 Q
( and) 236.29 158 T
5 11 Q
(do_request_common) 259.6 158 T
2 12 Q
(, comprises the heart of request) 371.66 158 T
(handling in the datagram RPC runtime.) 144 144.5 T
(W) 144 125 T
(ork accomplished in) 154.36 125 T
5 11 Q
(rpc__dg_do_request) 254.63 125 T
2 12 Q
( can be summarized as:) 373.28 125 T
(\245) 144 105.5 T
(Separation of requests that are part of a call from those that are part of a call-) 162 105.5 T
(back. Requests that arrive on a client socket are assumed to be part of a call-) 162 92 T
(back and are dispatched to) 162 78.5 T
5 11 Q
(do_cbk_request) 292.22 78.5 T
2 12 Q
(.) 384.51 78.5 T
144 337.5 540 661.5 C
381.06 645.75 386.25 642.75 381.06 639.75 3 L
0.5 H
0 Z
0 X
0 K
N
328.93 438.64 389.47 438.64 301.61 642.75 386.25 642.75 4 L
N
443.75 705.65 M
 459.72 694.79 459.72 694.79 461.79 692.18 D
 463.85 689.57 463.85 689.57 472.2 704.39 D
 480.54 719.21 480.54 719.21 493.46 720.55 D
 506.38 721.9 506.38 721.9 515.53 708.43 D
 524.68 694.96 524.68 694.96 527.97 674.25 D
 531.25 653.55 531.25 653.55 540.35 659.43 D
 549.45 665.32 549.45 665.32 562.18 652.04 D
 574.93 638.76 574.93 638.76 578.97 606.79 D
 583.02 574.81 583.02 574.81 578.97 549.23 D
 574.93 523.65 574.93 523.65 582.17 502.33 D
 589.41 481.02 589.41 481.02 589.88 448.18 D
 590.37 415.35 590.37 415.35 582.82 392.15 D
 575.28 368.95 575.28 368.95 566.13 358.18 D
 556.98 347.4 556.98 347.4 544.66 355.59 D
 532.34 363.77 532.34 363.77 527.43 339.42 D
 522.53 315.07 522.53 315.07 508.53 297.56 D
 494.54 280.03 494.54 280.03 479.46 285.43 D
 464.39 290.82 464.39 290.82 456.2 313.98 D
 448.01 337.13 448.01 337.13 436.28 326.1 D
 424.56 315.07 424.56 315.07 417.02 320.46 D
 409.49 325.85 409.49 325.85 403.62 348.54 D
 397.75 371.24 397.75 371.24 386.39 366.05 D
 375.03 360.87 375.03 360.87 364.27 378.38 D
 353.5 395.89 353.5 395.89 351.35 425.53 D
 349.2 455.17 349.2 455.17 355.16 478.75 D
 361.12 502.33 361.12 502.33 355.37 521.52 D
 349.62 540.71 349.62 540.71 349.62 567.35 D
 349.62 594 349.62 594 360.48 616.19 D
 371.34 638.38 371.34 638.38 381.26 638.38 D
 391.18 638.38 391.18 638.38 396.03 662.63 D
 400.87 686.88 400.87 686.88 408.95 700.35 D
 417.02 713.82 417.02 713.82 422.4 715.16 D
 427.79 716.51 427.79 716.51 443.75 705.65 D
O
7 X
V
1 H
3 X
N
410.71 551.7 407.71 546.5 404.71 551.7 3 L
0.5 H
0 X
N
407.71 635.25 407.71 546.5 2 L
7 X
V
0 X
N
370.1 586.64 448.85 630.57 R
7 X
V
0 X
N
210.54 536.68 251.25 475.61 2 L
7 X
V
8 X
N
6 8 Q
0 X
(recv_dispatch \050\311, rqe\051) 372.25 538.67 T
457.9 569.29 528.61 614.29 R
7 X
V
0 X
N
(act=0123) 458.93 599.09 T
(seq=0001) 458.93 591.59 T
(if_id=convc_v1_0\311) 458.93 584.43 T
(ptype=request) 458.93 606.6 T
9 F
(rpc_dg_recvq_elt_t) 372.78 620.39 T
6 F
(*next) 372.78 611.8 T
(hdrp) 372.78 603.21 T
10 F
(\311) 0 -270 465.79 572.37 TF
6 F
(rpc__dg_network_select_dispatch) 394.47 639.25 T
8 F
(a free rqe,) 353.22 580.23 T
(not on any rq) 353.22 572.59 T
10 F
(\311) 0 -270 378.64 594.49 TF
451.95 608.25 457.15 605.25 451.95 602.25 3 L
8 X
N
389.64 605.25 457.15 605.25 2 L
7 X
V
8 X
N
6 F
0 X
(rpc__dg_handle_convc\050cas_uuid\051) 387.32 513.64 T
431.73 425.93 527.45 352.27 2 L
7 X
V
8 X
N
446.2 352.27 527.45 407.27 R
7 X
V
0 X
N
9 F
(rpc_dg_client_rep_t) 448.07 399.14 T
6 F
(*next) 448.07 390.55 T
(cas_uuid) 448.07 381.96 T
(rundown) 448.07 373.38 T
(last_update) 448.07 364.79 T
(refcnt) 448.07 356.2 T
395.84 425.22 414.59 443.97 R
N
414.59 425.22 433.34 443.97 R
N
433.34 425.22 452.09 443.97 R
N
452.09 425.22 470.84 443.97 R
N
470.84 425.22 489.59 443.97 R
N
3 F
(\256) 468.42 436.51 T
(\256) 449.13 436.51 T
(\256) 431.3 436.51 T
(\256) 411.8 436.51 T
431.73 444.68 527.45 407.27 2 L
8 X
N
412.98 425.93 446.2 352.27 2 L
N
412.98 444.68 446.2 407.27 2 L
N
6 F
0 X
(rpc__dg_convc_indy\050cas_uuid\051) 416.25 500.05 T
(\336nd_client\050cas_uuid\051) 452.15 486.99 T
457.9 550.57 528.61 567.71 R
6 X
V
0 X
N
9 F
(cas_uuid) 475.36 558.95 T
388.22 479.53 533.4 523.46 R
9 X
N
410.68 530.62 407.68 525.43 404.68 530.62 3 L
0 X
N
407.68 536.68 407.68 525.43 2 L
N
495.56 363.14 490.36 366.14 495.56 369.14 3 L
N
508.58 482.93 508.58 366.14 490.36 366.14 3 L
N
490.93 551.84 493.93 557.03 496.93 551.84 3 L
8 X
N
493.93 517.93 493.93 557.03 2 L
N
202.95 477.66 251.52 519.81 R
7 X
V
0 X
N
6 F
(*next) 204.82 503.09 T
153.66 536.68 172.41 555.43 R
N
172.41 536.68 191.16 555.43 R
N
191.16 536.68 209.91 555.43 R
N
209.91 536.68 228.66 555.43 R
N
228.66 536.68 247.41 555.43 R
N
3 F
(\256) 226.24 547.98 T
(\256) 206.95 547.98 T
(\256) 189.12 547.98 T
(\256) 169.62 547.98 T
9 F
(maint_elt_t) 204.82 511.99 T
6 F
(refcnt) 204.82 484.47 T
(shand) 204.82 494.45 T
209.47 554.89 251.79 520.07 2 L
8 X
N
190.72 554.35 203.57 520.07 2 L
N
191.25 537.75 202.5 479.36 2 L
N
0 X
(network_maintain_liveness) 160.54 574.89 T
1 H
3 X
90 450 77.41 75.71 206.34 533.64 A
0 X
(convc_v1_0_epv) 148.57 437.03 T
(.convc_indy\050shand,) 207.98 437.03 T
(my_cas_uuid\051) 279.08 437.03 T
(global my_cas_uuid) 190.72 392.57 T
11 F
(t) 279.75 531.65 T
(t) 158.64 469.31 T
(t) 167.21 597.05 T
199.18 451.58 199.82 445.61 194.33 448.04 3 L
0.5 H
N
188.57 461.14 199.82 445.6 2 L
N
229.46 489.48 228.75 495.43 234.26 493.07 3 L
8 X
N
265.72 445.6 228.75 495.43 2 L
N
207.13 651.29 M
 220.83 642.6 220.83 642.6 222.6 640.51 D
 224.38 638.42 224.38 638.42 231.53 650.27 D
 238.69 662.13 238.69 662.13 249.77 663.21 D
 260.85 664.28 260.85 664.28 268.7 653.51 D
 276.55 642.73 276.55 642.73 279.37 626.17 D
 282.18 609.6 282.18 609.6 289.99 614.31 D
 297.79 619.02 297.79 619.02 308.72 608.4 D
 319.65 597.77 319.65 597.77 323.12 572.19 D
 326.59 546.61 326.59 546.61 323.12 526.15 D
 319.65 505.68 319.65 505.68 325.86 488.63 D
 332.07 471.58 332.07 471.58 332.48 445.31 D
 332.89 419.04 332.89 419.04 326.42 400.48 D
 319.95 381.92 319.95 381.92 312.11 373.3 D
 304.26 364.68 304.26 364.68 293.69 371.23 D
 283.12 377.78 283.12 377.78 278.91 358.3 D
 274.7 338.81 274.7 338.81 262.7 324.8 D
 250.69 310.79 250.69 310.79 237.77 315.1 D
 224.84 319.42 224.84 319.42 217.81 337.94 D
 210.78 356.46 210.78 356.46 200.73 347.64 D
 190.67 338.81 190.67 338.81 184.21 343.12 D
 177.74 347.44 177.74 347.44 172.71 365.59 D
 167.67 383.75 167.67 383.75 157.93 379.6 D
 148.19 375.46 148.19 375.46 138.95 389.47 D
 129.72 403.48 129.72 403.48 127.87 427.19 D
 126.03 450.9 126.03 450.9 131.14 469.76 D
 136.26 488.63 136.26 488.63 131.32 503.98 D
 126.39 519.33 126.39 519.33 126.39 540.64 D
 126.39 561.96 126.39 561.96 135.71 579.71 D
 145.02 597.46 145.02 597.46 153.53 597.46 D
 162.04 597.46 162.04 597.46 166.2 616.86 D
 170.35 636.26 170.35 636.26 177.28 647.04 D
 184.21 657.82 184.21 657.82 188.82 658.9 D
 193.44 659.97 193.44 659.97 207.13 651.29 D
O
1 H
3 X
N
8 F
0 X
(CLIENT) 237.14 649.87 T
(SER) 398.39 649.87 T
(VER) 414.69 649.87 T
259.9 402.81 253.93 402.22 256.4 407.69 3 L
0.5 H
9 X
N
298.39 433.82 253.93 402.21 2 L
N
427.29 443.3 424.29 438.1 421.29 443.3 3 L
0 X
N
363.75 456.85 424.29 456.85 424.29 438.1 3 L
N
6 F
(SCTE->client) 355.89 459.18 T
(pkt_real) 372.5 588.37 T
451.68 561.37 456.88 558.37 451.68 555.37 3 L
9 X
N
406.25 591.5 453.75 591.5 420.63 558.37 456.88 558.37 4 L
N
0 0 612 792 C
144 337.5 540 661.5 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "24" 163
%%Page: "25" 163
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-25) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-25) 518.02 34.67 T
2 F
(\245) 144 712 T
(Handling) 162 712 T
5 11 Q
(convc) 209.64 712 T
2 12 Q
( requests, as described on page 7-20.) 242.6 712 T
(\245) 144 692.5 T
(Associating the packet with a server call handle \050SCALL\051 structure.) 162 692.5 T
(\245) 144 673 T
(Setting up the executor thread that will, if all goes well. execute the call, and,) 162 673 T
(in the process, dealing with any complications that may be induced by packet) 162 659.5 T
(rationing.) 162 646 T
(As we\325ve described,) 144 626.5 T
5 11 Q
(rpc__dg_do_request) 244.58 626.5 T
2 12 Q
( calls) 363.23 626.5 T
5 11 Q
(do_request_common) 391.21 626.5 T
2 12 Q
( to per-) 503.27 626.5 T
(form the initial \336ltering of the packet. Figure 7-3 illustrates the operations of) 144 613 T
5 11 Q
(do_request_common) 144 599.5 T
2 12 Q
(. Depending on the outcome of) 256.06 599.5 T
5 11 Q
(do_request_common) 407.62 599.5 T
2 12 Q
(,) 519.68 599.5 T
5 11 Q
(rpc__dg_do_request) 144 586 T
2 12 Q
( will do one of the following:) 262.65 586 T
(\245) 144 566.5 T
(respond to a client ping) 162 566.5 T
(\245) 144 547 T
0 (transmit an error response if the packet was deemed to be part of an attempted) 162 547 P
(re-run of an idempotent call) 162 533.5 T
(\245) 144 514 T
(set up a new Server Connection T) 162 514 T
(able Entry \050SCTE\051 if the packet is part of a) 323.71 514 T
(new call) 162 500.5 T
(\245) 144 481 T
(add the packet to the receive queue for the current call.) 162 481 T
(\245) 144 461.5 T
(prod the application thread to run the call if it is a callback) 162 461.5 T
-0.32 (T) 144 442 P
-0.32 (wo-part forwarded packets \050see page 7-17\051 are handled at this stage as well, since) 150.49 442 P
(each part can be \336ltered through) 144 428.5 T
5 11 Q
(do_request_common) 301.87 428.5 T
2 12 Q
( and end up at the \322same) 413.93 428.5 T
(place.\323) 144 415 T
(If the value of the) 144 395.5 T
5 11 Q
(scall->call_is_setup) 232.26 395.5 T
2 12 Q
( \336eld indicates that the call does not) 364.1 395.5 T
-0.12 (yet have an executor thread,) 144 382 P
5 11 Q
-0.26 (rpc__dg_do_request) 281.29 382 P
2 12 Q
-0.12 ( creates one through a call to) 399.94 382 P
5 11 Q
(rpc__cthread_invoke_null) 144 368.5 T
2 12 Q
(, passing it the name of the internal) 302.2 368.5 T
5 11 Q
-0.29 (rpc__dg_execute_call) 144 355 P
2 12 Q
-0.13 ( function as the routine the thread should run. This rou-) 275.84 355 P
(tine will either succeed in making a packet reservation, in which case the call will) 144 341.5 T
-0.18 (be able to proceed toward execution, or it won\325) 144 328 P
-0.18 (t, in which case the entire call must) 369.2 328 P
-0.52 (be \322backed out\323 via a call to) 144 314.5 P
5 11 Q
-1.15 (rpc__dg_sct_backout_new_call) 279.23 314.5 P
2 12 Q
-0.52 (, a function that) 463.8 314.5 P
(simply decrements the SCTE\325) 144 301 T
(s) 287.58 301 T
5 11 Q
(high_seq) 295.25 301 T
2 12 Q
( member) 347.98 301 T
(. When this happens, the serv-) 389.62 301 T
(er) 144 287.5 T
(\325) 153.76 287.5 T
(s behavior is seen by the client as identical to what it would have been had the) 157.1 287.5 T
-0.09 (packet been dropped or lost in transmission so the client should eventually retrans-) 144 274 P
(mit and, with luck, be able to secure a reservation.) 144 260.5 T
(W) 144 241 T
(e describe packet rationing in more detail in the next section.) 154.36 241 T
0 F
(Packet Rationing) 108 221.5 T
2 F
(The datagram RPC protocol service implements a packet rationing scheme) 144 201.5 T
(intended to guarantee that, regardless of the number of packets available in the) 144 188 T
-0.36 (host system\325) 144 174.5 P
-0.36 (s packet buf) 203.28 174.5 P
-0.36 (fer space, a call will always be able to obtain the packets it) 260.29 174.5 P
-0.32 (needs to make progress. In this context, we de\336ne progress as the ability of a client) 144 161 P
-0.29 (and server to exchange at least one packet at a time \050i.e., to never block because no) 144 147.5 P
(packets can be acquired for transmit or receive queues\051. The need for this feature) 144 134 T
(was based on the observation that, in other RPC protocols, call progress can be) 144 120.5 T
(slowed or ef) 144 107 T
(fectively halted when either side of a connection is consuming lar) 203.07 107 T
(ge) 517.95 107 T
(quantities of packets. Packets can be a scarce resource, especially in kernel envi-) 144 93.5 T
FMENDPAGE
%%EndPage: "25" 164
%%Page: "26" 164
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-26) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-26) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
2 F
(ronments, and much of the motivation for the DCE 1.0) 144 712 T
4 F
(.x) 406.84 712 T
2 F
( RPC packet rationing) 415.16 712 T
(implementation arose after consideration of the needs of the DCE DFS.) 144 698.5 T
-0.31 (Packet rationing is applicable to both the client \050sender\051 and server \050receiver\051 sides) 144 679 P
(of an RPC. In this section, we will concentrate on the implementation \050and impli-) 144 665.5 T
(cations\051 of packet rationing for receivers.) 144 652 T
(The fundamental premises of packet rationing are simple:) 144 632.5 T
(\245) 144 613 T
-0.26 (The runtime establishes a packet pool consisting of a quantity of packets based) 162 613 P
-0.27 (on the expected number of active client and server threads that will need to run) 162 599.5 P
(concurrently) 162 586 T
(. At a minimum, this pool must contain) 221.84 586 T
5 11 Q
(\0501+2S+2C\051) 413.08 586 T
2 12 Q
( packets,) 472.41 586 T
-0.02 (where) 162 572.5 P
5 11 Q
-0.05 (S) 194.27 572.5 P
2 12 Q
-0.02 ( represents the maximum number of call executor \050server\051 threads and) 200.87 572.5 P
5 11 Q
(C) 162 559 T
2 12 Q
( represents the maximum number of concurrent client calls that the system) 168.59 559 T
(will be able to support. \050The additional packet is for the listener thread.\051) 162 545.5 T
(\245) 144 526 T
(Every call must be able to reserve at least one packet from the packet pool) 162 526 T
(before it can begin execution. If the system is rationing, any call that does not) 162 512.5 T
(have a reservation \050as indicated by the state of the common datagram call han-) 162 499 T
(dle\325) 162 485.5 T
(s) 179.99 485.5 T
5 11 Q
(has_pkt_reservation) 187.65 485.5 T
2 12 Q
( \337ag\051 won\325) 312.9 485.5 T
(t be allowed to queue data to its) 365.31 485.5 T
(transmit or receive queues. This enforces enough fairness to prevent packet-) 162 472 T
(hungry clients or servers from starving those with more modest packet appe-) 162 458.5 T
(tites.) 162 445 T
(\245) 144 425.5 T
-0.22 (Clients have to acquire a reservation in the) 162 425.5 P
5 11 Q
-0.49 (rpc__dg_call_start) 368.06 425.5 P
2 12 Q
-0.22 ( routine. If) 486.71 425.5 P
-0.26 (they cannot, the call will block. Servers initially try to acquire their reservation) 162 412 P
-0.01 (in) 162 398.5 P
5 11 Q
-0.03 (rpc__dg_do_request) 174.32 398.5 P
2 12 Q
-0.01 (. If this fails \050it cannot be allowed to block, since it) 292.97 398.5 P
-0.36 (runs in the listener thread\051, a second attempt is made after the call is handed of) 162 385 P
-0.36 (f) 533.37 385 P
(to the executor thread. If the second attempt fails, the call is \322backed out\323 and) 162 371.5 T
(the request ef) 162 358 T
(fectively dropped, forcing the client to retransmit.) 226.39 358 T
(\245) 144 338.5 T
( A system begins rationing when:) 162 338.5 T
(\245) 216 319 T
(the number of packets in the pool is less than or equal to the num-) 223.2 319 T
(ber of reservations) 216 305.5 T
(\245) 216 286 T
(a call has blocked awaiting a reservation) 223.2 286 T
(\245) 144 266.5 T
(A conversation callback does not need to acquire a reservation. It inherits the) 162 266.5 T
(reservation made by the call that induced it.) 162 253 T
(As an optimization, the actual packet rationing code allocates two packets for) 144 233.5 T
(every \322reservation,\323 based on the following observations:) 144 220 T
(\245) 144 200.5 T
(Receivers hand of) 162 200.5 T
(f packets to stubs without knowing when they will be freed.) 248.38 200.5 T
(Having an extra packet reserved makes it unnecessary for the receiver to take) 162 187 T
(this uncertainty into account.) 162 173.5 T
(\245) 144 154 T
-0.24 (A receiver \050server\051 may need to both queue a packet and do a W) 162 154 P
-0.24 (A) 466.23 154 P
-0.24 (Y callback in) 473.78 154 P
-0.2 (order to ensure that the call will progress. Since no packets are delivered to the) 162 140.5 P
(stubs until after any required W) 162 127 T
(A) 312.89 127 T
(Y succeeds, having two reserved packets) 320.45 127 T
(allows both operations to happen.) 162 113.5 T
FMENDPAGE
%%EndPage: "26" 165
%%Page: "27" 165
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-27) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-27) 518.02 34.67 T
298.23 710.69 144 710.69 2 L
V
0.59 H
0 Z
N
2 F
(Server Side Rationing Concerns) 144 712 T
(On the server side of the runtime, it is especially important that new calls be) 144 692 T
(allowed to get started, even in times of stress. This translates, in the rationing) 144 678.5 T
(implementation, to an emphasis on getting running calls to drain their receive) 144 665 T
(queues, thereby freeing packets.) 144 651.5 T
4 F
(Figur) 239.46 632 T
(e 7-16: Server Side Packet Rationing) 266.34 632 T
2 F
(As illustrated in Figure 7-16,) 144 282.5 T
5 11 Q
(rpc__dg_call_recvq_insert) 285.92 282.5 T
2 12 Q
(has the last) 457.3 282.5 T
(chance at acquiring a reservation. If it can do so, it takes the additional precaution) 144 269 T
(of making sure the packet is \322really needed at this time,\323 a condition that is satis-) 144 255.5 T
(\336ed only if the packet is the \336rst packet in the queue or will become the \336rst in-) 144 242 T
-0.15 (order packet. All other conditions result in the packet being dropped and the client) 144 228.5 P
(being forced into retransmission. This strategy keeps queue sizes down \050and pack-) 144 215 T
(ets more available\051 without\321it is hoped\321signi\336cantly slowing call progress.) 144 201.5 T
-0.26 (Note that on the server side of a system that is rationing, a queued call cannot get a) 144 182 P
(reservation. Such calls will appear to be set up, but will have no queued data. All) 144 168.5 T
(requests that are part of such a call will be dropped, though their senders will) 144 155 T
(receive \050if they asked for one\051 a fack of fragment number -1 that also indicates a) 144 141.5 T
(receive window size of zero.) 144 128 T
144 304 540 628 C
292.99 610.75 324.32 592.15 294.1 574.21 263.14 592.59 4 Y
0.5 H
0 Z
0 X
0 K
N
6 8 Q
(rpc__dg_do_request) 152.85 589.02 T
(call_is_setup?) 267.85 590.16 T
(is_cbk?) 356.77 588.35 T
(rpc__cthread_invoke_null\050\311, rpc__dg_execute_call, \311\051) 0 -270 522.85 418.86 TF
(recvq_insert) 171.77 496.52 T
(has_pkt_reservation?) 162.13 459.36 T
(rpc__dg_pkt_-) 313.92 534.52 T
(no_fack?) 185.35 362.71 T
(rpc__dg_call_xmit_fack) 165.52 333.94 T
(recv_dispatch) 152.85 614.24 T
439.06 577.93 461.61 559.6 439.85 541.93 417.57 560.04 4 Y
N
369.3 609.57 387.46 591.25 369.95 573.57 352 591.68 4 Y
N
(status_ok?) 420 557.32 T
(make_reservation\050\311, block=0\051) 313.92 526.64 T
347.84 594.61 353.04 591.61 347.84 588.61 3 L
N
325.18 591.61 353.04 591.61 2 L
N
372.65 541.62 369.65 536.43 366.65 541.62 3 L
N
369.65 572.86 369.65 536.43 2 L
N
375.38 557 370.18 560 375.38 563 3 L
N
416.79 560 370.18 560 2 L
N
183.54 601.8 180.54 596.61 177.54 601.8 3 L
N
180.54 610 180.54 596.61 2 L
N
199.17 483 244.21 462.22 200.76 442.17 156.25 462.71 4 Y
N
(pkt is) 189.64 417.68 T
(next_inorder?) 177.32 410.51 T
200.36 435.32 229.21 413.18 201.37 391.82 172.86 413.7 4 Y
N
223.23 496.11 218.04 499.11 223.23 502.11 3 L
N
439.82 540.89 439.82 499.11 218.04 499.11 3 L
N
346.93 504.3 343.93 499.11 340.93 504.3 3 L
N
343.93 524.28 343.93 499.11 2 L
N
297.11 504.3 294.11 499.11 291.11 504.3 3 L
N
294.11 574.64 294.11 499.11 2 L
N
256.59 594.96 261.79 591.96 256.59 588.96 3 L
N
229.11 591.96 261.79 591.96 2 L
N
201.75 488.77 198.75 483.57 195.75 488.77 3 L
N
198.75 493.75 198.75 483.57 2 L
N
203.14 440.18 200.36 435.36 197.57 440.18 3 L
N
200.36 440.18 200.36 435.36 2 L
N
200.82 381.75 221.18 365.06 201.54 348.96 181.43 365.45 4 Y
N
(return\050false\051) 231.97 427.86 T
(return\050true\051) 231.97 362.65 T
203.89 388.05 200.89 382.85 197.89 388.05 3 L
N
200.89 393.03 200.89 382.85 2 L
N
204.43 344.66 201.43 339.46 198.43 344.66 3 L
N
201.43 348.03 201.43 339.46 2 L
N
153.39 311.07 280.89 521.07 R
8 X
N
258.54 440.55 255.54 435.36 252.54 440.55 3 L
0 X
N
243.75 462.14 255.54 462.14 255.54 435.36 3 L
N
254.68 419.44 257.68 424.64 260.68 419.44 3 L
N
231.43 413.39 257.68 413.39 257.68 424.64 3 L
N
254.68 354.62 257.68 359.82 260.68 354.62 3 L
N
200.89 331.96 200.89 318.03 257.68 318.03 257.68 359.82 4 L
N
225.7 368.18 230.9 365.18 225.7 362.18 3 L
N
222.32 365.18 230.9 365.18 2 L
N
(N) 326.25 584.28 T
(N) 391.07 582.48 T
(N) 244.29 454.24 T
(N) 222.86 355.8 T
(N) 233.04 403.82 T
(N) 443.04 535.41 T
(Y) 362.15 566.82 T
(Y) 411.43 551.08 T
(Y) 297.86 566.95 T
444.43 583.05 441.43 577.86 438.43 583.05 3 L
N
385.72 591.25 441.43 591.25 441.43 577.86 3 L
N
465.38 552.36 460.18 555.36 465.38 558.36 3 L
8 X
N
516.43 568.21 482.15 568.21 495 555.36 460.18 555.36 4 L
N
0 0 612 792 C
144 304 540 628 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "27" 166
%%Page: "28" 166
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-28) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-28) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
296.26 710.69 144 710.69 2 L
V
0.59 H
0 Z
N
2 F
(Client Side Rationing Concerns) 144 712 T
(Clients who are also senders \050the typical case\051 cannot drain their transmit queues) 144 692 T
(until they have made contact with a server) 144 678.5 T
(. In situations where the client stubs are) 346.18 678.5 T
(generating lar) 144 665 T
(ge outs and no server is available, or \050more likely\051 in a kernel envi-) 210.06 665 T
(ronment, it\325) 144 651.5 T
(s possible for a group of intercommunicating processes to expend all) 199.97 651.5 T
(available reservations on data awaiting transmission, leaving them no way to start) 144 638 T
-0.17 (any server threads. T) 144 624.5 P
-0.17 (o avoid this, a quantity of reservations are dedicated to server) 243.21 624.5 P
-0.17 (-) 536.01 624.5 P
-0.36 (thread startup needs by being \322pre-reserved\323 for use by calls coming in over server) 144 611 P
(sockets.) 144 597.5 T
(A clients does not actually try to get a reservation until after it has established its) 144 578 T
(call handle and registered its timer routine, since rationing-induced call blockage) 144 564.5 T
(has to be handled using the call\325) 144 551 T
(s normal retransmission and timeout strategies.) 297.9 551 T
452.11 530.19 144 530.19 2 L
V
N
(Major Packet Rationing Data Structures and Internal Operations) 144 531.5 T
(The global data structure illustrated in T) 144 511.5 T
(able 7-2 is de\336ned in) 336.36 511.5 T
5 11 Q
(dgpkt.h) 439.96 511.5 T
2 12 Q
( and used) 486.1 511.5 T
(to manage the pool of packets available to the datagram RPC runtime. Individual) 144 498 T
(pool elements \050T) 144 484.5 T
(able 7-3\051 are de\336ned as a union of two structs, each of which rep-) 224.44 484.5 T
(resents a packet destined for use by a sender or a receiver) 144 471 T
(.) 418.76 471 T
-0.15 (These data structures, along with the call handles of the calls involved in rationing) 144 451.5 P
(\050waiting for a packet or a reservation\051 are operated on by a small collection of) 144 438 T
(internal routines:) 144 424.5 T
5 11 Q
(rpc__dg_pkt_make_reservation) 144 405.67 T
2 12 Q
(Depending on the value of this call\325) 216 393 T
(s \322block\323 ar) 387.22 393 T
(gument, it will) 444.28 393 T
-0.48 (either loop until it can make a reservation \050blocking mode\051 or return) 216 379.5 P
(without one. Senders call this routine in) 216 366 T
5 11 Q
(rpc__dg_call_start) 409.89 366 T
2 12 Q
(.) 528.54 366 T
-0.29 (Receivers call it twice \050as described in the previous section\051, \336rst in) 216 352.5 P
(nonblocking mode in) 216 339 T
5 11 Q
(do_request) 320.94 339 T
2 12 Q
(, then in blocking mode in) 386.86 339 T
5 11 Q
(rpc__dg_execute_call) 216 325.5 T
2 12 Q
(.) 347.84 325.5 T
5 11 Q
(rpc__dg_pkt_alloc_rqe, rpc__dg_pkt_alloc_xqe) 144 306.67 T
2 12 Q
(These routines allocate the) 216 294 T
5 11 Q
(rqe) 347.23 294 T
2 12 Q
( or) 367.01 294 T
5 11 Q
(xqe) 382.99 294 T
2 12 Q
( needed to actually receive) 402.77 294 T
(or send a packet. A call may block waiting for an) 216 280.5 T
5 11 Q
(xqe) 455.15 280.5 T
2 12 Q
(, but should) 474.92 280.5 T
-0.49 (never block waiting for an) 216 267 P
5 11 Q
-1.08 (rqe) 343.12 267 P
2 12 Q
-0.49 (, since these are all initially allocated) 362.89 267 P
(to the listener thread, which never actually queues anything itself.) 216 253.5 T
(The actual) 216 240 T
5 11 Q
( rqe) 266.29 240 T
2 12 Q
( allocation is requested in the function) 292.66 240 T
5 11 Q
-0.03 (rpc__dg_network_select_dispatch) 216 226.5 P
2 12 Q
-0.01 (, while) 420.35 226.5 P
5 11 Q
-0.03 (xqe) 455.96 226.5 P
2 12 Q
-0.01 ( allocation is) 475.74 226.5 P
(requested in) 216 213 T
5 11 Q
(rpc__dg_call_transmit_int) 277.29 213 T
2 12 Q
(.) 442.08 213 T
5 11 Q
(rpc__dg_pkt_free_rqe, rpc__dg_pkt_free_xqe) 144 194.17 T
2 12 Q
-0.34 (These are the inverse of the \322alloc\323 routines above. These functions) 216 181.5 P
(also signal any calls that may be waiting for a queue element to) 216 168 T
(become available.) 216 154.5 T
5 11 Q
(rpc__dg_pkt_cancel_reservation) 144 135.67 T
2 12 Q
-0.37 (This function, typically invoked by) 216 123 P
5 11 Q
-0.82 (rpc__dg_call_end) 386.04 123 P
2 12 Q
-0.37 ( cancels a) 491.5 123 P
(call\325) 216 109.5 T
(s reservation, which in turn may take the system out of ration-) 236.65 109.5 T
(ing mode. If that happens, this function also signals any calls that) 216 96 T
-0.11 (are waiting on the availability of reservations \050\336rst\051 or packets \050sec-) 216 82.5 P
FMENDPAGE
%%EndPage: "28" 167
%%Page: "29" 167
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-29) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-29) 518.02 34.67 T
2 F
(ond\051.) 216 712 T
5 11 Q
(rpc__dg_pkt_pool_fork_handler) 144 693.17 T
2 12 Q
-0.41 (This function frees up packets on the free list and cleans up the pool) 216 680.5 P
(in the postfork child.) 216 667 T
4 F
(T) 229.33 647.5 T
(able 7-2: rpc_dg_pkt_pool_t structur) 234.9 647.5 T
(e) 413.35 647.5 T
5 11 Q
(rpc_dg_pkt_pool_t {) 146 626.17 T
(pkt_mutex) 146 607.17 T
(/* the mutex that protects this struc-) 272 607.17 T
(ture */) 272 594.17 T
(max_pkt_count) 146 575.17 T
-0.53 (/* initial number of packets in the pool) 272 575.17 P
(\05010000\051 */) 272 562.17 T
(pkt_count) 146 543.17 T
(/* number of packets remaining in the) 272 543.17 T
(pool */) 272 530.17 T
(reservations) 146 511.17 T
(/* number of \322ordinary\323 reservation cur-) 272 511.17 T
(rently held */) 272 498.17 T
(srv_resv_avail) 146 479.17 T
(/* number of server reservations avail-) 272 479.17 T
(able */) 272 466.17 T
(active_rqes) 146 447.17 T
(/* number of rqe\325s allocated to active) 272 447.17 T
(calls */) 272 434.17 T
(active_xqes) 146 415.17 T
(/* number of xqes allocated to active) 272 415.17 T
(calls */) 272 402.17 T
(failed_alloc_rqe) 146 383.17 T
(/* number of receivers blocked awaiting) 272 383.17 T
-1.36 (allocation of an rqe \050should always be 0,) 272 370.17 P
(since alloc_rqe should never fail\051 */) 272 357.17 T
(blocked_alloc_xqe) 146 338.17 T
(/* number of senders blocked awaiting) 272 338.17 T
(allocation of an xqe */) 272 325.17 T
(free_count) 146 306.17 T
-1.36 (/* number of elements on the free_list */) 272 306.17 P
(free_list) 146 287.17 T
(/* pointer to the head of a linked list) 272 287.17 T
(of free pool elements */) 272 274.17 T
(pkt_waiters_head) 146 255.17 T
(/* pointer to the head of the list of) 272 255.17 T
(call handles to signal when a packet) 272 242.17 T
(becomes available */) 272 229.17 T
(pkt_waiters_tail) 146 210.17 T
(/* and the tail pointer */) 272 210.17 T
(rsv_waiters_head) 146 191.17 T
-0.43 (/* pointer to the head of a list of call) 272 191.17 P
(handles to signal when a reservation) 272 178.17 T
(becomes available */) 272 165.17 T
(rsv_waiters_tail) 146 146.17 T
(/* and the tail pointer */) 272 146.17 T
(}) 146 127.17 T
142.75 638.5 142.75 118.5 2 L
V
0.5 H
0 Z
N
145.25 636 145.25 121 2 L
V
N
268.75 618.25 268.75 138.75 2 L
V
N
271.25 618.25 271.25 138.75 2 L
V
N
538.75 636 538.75 121 2 L
V
N
541.25 638.5 541.25 118.5 2 L
V
N
142.5 638.75 541.5 638.75 2 L
V
N
145 636.25 539 636.25 2 L
V
N
145.5 618.5 538.5 618.5 2 L
V
N
145.5 586.5 538.5 586.5 2 L
V
N
145.5 554.5 538.5 554.5 2 L
V
N
145.5 522.5 538.5 522.5 2 L
V
N
145.5 490.5 538.5 490.5 2 L
V
N
145.5 458.5 538.5 458.5 2 L
V
N
145.5 426.5 538.5 426.5 2 L
V
N
145.5 394.5 538.5 394.5 2 L
V
N
145.5 349.5 538.5 349.5 2 L
V
N
145.5 317.5 538.5 317.5 2 L
V
N
145.5 298.5 538.5 298.5 2 L
V
N
145.5 266.5 538.5 266.5 2 L
V
N
145.5 221.5 538.5 221.5 2 L
V
N
145.5 202.5 538.5 202.5 2 L
V
N
145.5 157.5 538.5 157.5 2 L
V
N
145.5 138.5 538.5 138.5 2 L
V
N
145 120.75 539 120.75 2 L
V
N
142.5 118.25 541.5 118.25 2 L
V
N
FMENDPAGE
%%EndPage: "29" 168
%%Page: "30" 168
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-30) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-30) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
0 F
(Call Execution) 108 561 T
2 F
(Once a packet has been added to an SCALL) 144 541 T
(\325) 354.72 541 T
(s receive queue, it becomes \322part of\323) 358.06 541 T
0 (the call. The call itself will not be executed \050that is to say) 144 527.5 P
0 (, handed of) 417.33 527.5 P
0 (f to the server) 470.74 527.5 P
(stub\051 until all the packets for it have been received. All of the processing between) 144 514 T
5 11 Q
(rpc__dg_do_request) 144 500.5 T
2 12 Q
( and the actual handof) 262.65 500.5 T
(f to the stub takes place in) 368.35 500.5 T
5 11 Q
(rpc__dg_execute_call) 144 487 T
2 12 Q
(, which itself is being executed in a call thread \050see) 275.84 487 T
-0.42 (page 3-13\051. When it is called by the thread,) 144 473.5 P
5 11 Q
-0.93 (rpc__dg_execute_call) 350.38 473.5 P
2 12 Q
-0.42 ( increments) 482.22 473.5 P
(the SCALL) 144 460 T
(\325) 198.53 460 T
(s) 201.87 460 T
5 11 Q
(refcnt) 209.53 460 T
2 12 Q
( \336eld and initially locks the call. The executor thread holds) 249.08 460 T
-0.47 (this reference until the call is dispatched to the stub, but it must periodically release) 144 446.5 P
(and reacquire the call lock due to locking hierarchy requirements. Being handed) 144 433 T
(of) 144 419.5 T
(f to) 153.77 419.5 T
5 11 Q
(rpc__dg_execute_call) 173.1 419.5 T
2 12 Q
( does not guarantee that the call will in fact be) 304.93 419.5 T
-0.28 (executed. There are several potential failures that may crop up in the course of exe-) 144 406 P
(cuting this function, and much of the complexity in) 144 392.5 T
5 11 Q
(rpc__dg_execute_call) 393.19 392.5 T
2 12 Q
( is) 525.02 392.5 T
(a consequence of the need to handle these failures robustly) 144 379 T
(.) 425.33 379 T
(W) 144 359.5 T
(e can summarize the workings of) 154.36 359.5 T
5 11 Q
(rpc__dg_execute_call) 316.24 359.5 T
2 12 Q
( as follows:) 448.07 359.5 T
(\245) 144 340 T
(Check to be sure the call is still in the receive state. If it isn\325) 162 340 T
(t, assume it was) 449.25 340 T
(cancelled and clean up.) 162 326.5 T
(\245) 144 307 T
(Make sure the call has a packet reservation. This requires unlocking the call) 162 307 T
(lock, acquiring the global lock, then reacquiring the call lock.) 162 293.5 T
(\245) 144 274 T
(Prod a waiting client into sending new data if the call is able to get a reserva-) 162 274 T
(tion) 162 260.5 T
(\245) 144 241 T
(Enable receipt of async cancels. The call thread running) 162 241 T
5 11 Q
(rpc__dg_execute_call) 162 227.5 T
2 12 Q
( was invoked with async cancellability disabled.) 293.84 227.5 T
(\245) 144 208 T
(Create a server binding handle if necessary) 162 208 T
(.) 367.71 208 T
(\245) 144 188.5 T
(Call) 162 188.5 T
5 11 Q
(rpc__dg_call_receive_int) 184.99 188.5 T
2 12 Q
( to retrieve the \336rst packet from the) 343.19 188.5 T
(receive queue) 162 175 T
(\245) 144 155.5 T
(Retrieve/update the call\325) 162 155.5 T
(s auth info as necessary) 279.25 155.5 T
(.) 391.71 155.5 T
(\245) 144 136 T
(V) 162 136 T
(erify that the call\325) 169.33 136 T
(s interface and type are supported on the local machine.) 254.26 136 T
(\245) 144 116.5 T
-0.27 (If the call is non-idempotent, verify that the server) 162 116.5 P
-0.27 (\325) 401.75 116.5 P
-0.27 (s idea of the call\325) 405.08 116.5 P
-0.27 (s sequence) 485.93 116.5 P
(number is the same as the client\325) 162 103 T
(s by invoking the conversation manager) 318.56 103 T
(\325) 510.54 103 T
(s) 513.88 103 T
(W) 162 89.5 T
(A) 171.99 89.5 T
(Y callback if necessary) 179.55 89.5 T
(. The call is unlocked during this operation.) 290.33 89.5 T
4 F
(T) 238.34 712 T
(able 7-3: rpc_dg_pkt_pool_elt_t structur) 243.9 712 T
(e) 440.34 712 T
5 11 Q
(rpc_dg_pkt_pool_elt_t {) 146 690.67 T
(*next) 146 671.67 T
(/* next element on free list */) 254 671.67 T
(xqe) 146 652.67 T
(/* a structure consisting of an xqe type) 254 652.67 T
(and a packet body type */) 254 639.67 T
(rqe) 146 620.67 T
(/* a structure consisting of an rqe type) 254 620.67 T
(and a raw packet body type */) 254 607.67 T
(}) 146 588.67 T
142.75 703 142.75 580 2 L
V
0.5 H
0 Z
N
145.25 700.5 145.25 582.5 2 L
V
N
250.75 682.75 250.75 600.25 2 L
V
N
253.25 682.75 253.25 600.25 2 L
V
N
538.75 700.5 538.75 582.5 2 L
V
N
541.25 703 541.25 580 2 L
V
N
142.5 703.25 541.5 703.25 2 L
V
N
145 700.75 539 700.75 2 L
V
N
145.5 683 538.5 683 2 L
V
N
145.5 664 538.5 664 2 L
V
N
145.5 632 538.5 632 2 L
V
N
145.5 600 538.5 600 2 L
V
N
145 582.25 539 582.25 2 L
V
N
142.5 579.75 541.5 579.75 2 L
V
N
FMENDPAGE
%%EndPage: "30" 169
%%Page: "31" 169
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-31) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-31) 518.02 34.67 T
2 F
(\245) 144 712 T
(Dispatch the call to the stub and free up resources no longer needed.) 162 712 T
(\245) 144 692.5 T
(Queue \050but not transmit\051 any reject response that may have been generated by) 162 692.5 T
(the stub, and/or a response packet for a call that has no \322out\323 ar) 162 679 T
(guments.) 465.54 679 T
(\245) 144 659.5 T
(T) 162 659.5 T
(ransmit the call\325) 168.91 659.5 T
(s out ar) 246.19 659.5 T
(guments when the stub returns.) 281.29 659.5 T
(\245) 144 640 T
(Clean up in various ways. This can include \337ushing any pending cancels, free-) 162 640 T
(ing the transmit queue, surrendering the call\325) 162 626.5 T
(s packet reservation, and setting) 376.85 626.5 T
-0.22 (the call\325) 162 613 P
-0.22 (s state to \322idle.\323 Non-idempotent calls and idempotent calls with multi-) 200.09 613 P
(packet out ar) 162 599.5 T
(guments transition to the \322\336nal\323 state awaiting acknowledgment) 223.73 599.5 T
(from the client that all the outs have been received. Once this ack comes in,) 162 586 T
(they transition to the \322idle\323 state.) 162 572.5 T
(Figure 7-17 attempts to diagram this process. Shaded areas in the \336gure indicate) 144 553 T
-0.09 (the parts of the execution path where the call is unlocked during \050what is expected) 144 539.5 P
(to be\051 a long-running operation. There are several other places in) 144 526 T
5 11 Q
(rpc__dg_execute_call) 144 512.5 T
2 12 Q
( where the call gets momentarily unlocked so that the) 275.84 512.5 T
(global mutex can be acquired. At all such unlock/relock junctures, the call\325) 144 499 T
(s state) 503.41 499 T
-0.32 (is examined upon reacquisition o the lock and, if it isn\325) 144 485.5 P
-0.32 (t) 404.73 485.5 P
5 11 Q
-0.71 (recv) 410.74 485.5 P
2 12 Q
-0.32 (, the routine jumps to) 436.33 485.5 P
-0.1 (the) 144 472 P
5 11 Q
-0.22 (END_OF_CALL) 161.56 472 P
2 12 Q
-0.1 ( label on the assumption that some other process has acquired a) 234.07 472 P
(call lock in the meantime.) 144 458.5 T
FMENDPAGE
%%EndPage: "31" 170
%%Page: "32" 170
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-32) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Datagram Protocol Service, part II) 72 748 T
(Revised 7/27/93) 427.05 748 T
(7-32) 72 34.67 T
(Copyright) 280.72 34.67 T
3 14 Q
(\343) 332.37 34.67 T
4 12 Q
( 1993 Open Software Foundation) 343.42 34.67 T
(Figur) 274.1 712 T
(e 7-17: Call Execution) 300.98 712 T
140.25 78 540 708 C
168.75 83.25 243.13 123.25 R
6 X
0 K
V
248.25 186 356.25 213 R
V
7 X
90 450 27 13.12 206.25 102.96 G
0.5 H
0 Z
0 X
90 450 27 13.12 206.25 102.96 A
7 X
90 450 30.38 16.5 305.13 397.94 G
0 X
90 450 30.38 16.5 305.13 397.94 A
7 X
90 450 51.43 15.54 206.74 574.8 G
0 X
90 450 51.43 15.54 206.74 574.8 A
456.29 176.47 495.62 159.78 457.67 143.68 418.81 160.17 4 Y
N
9 8 Q
(rpc__dg_execute_call) 278.38 694.19 T
205.66 680.75 251.52 657.79 207.27 635.64 161.95 658.33 4 Y
N
6 F
(has_pkt_reservation?) 168.95 655.68 T
(rpc__dg_pkt_make_reservation) 264.94 655.84 T
(rpc__dg_call_xmit_fack) 264.94 643.67 T
(rpc__cthread_cancel_enable_post) 145.63 610.09 T
(_REINIT) 161.91 577.3 T
8 F
(or) 194.79 577.3 T
6 F
( binding_alloc) 201.9 577.3 T
8 F
(a server binding handle) 161.91 567.99 T
6 F
(rpc__dg_call_receive_int) 162.52 491.2 T
(get auth_info) 282.36 396.23 T
(auth_proto !=0 &&) 173.33 404.56 T
(key_info == NULL &&) 173.33 395.96 T
(!maybe && !is_cbk) 173.33 386.66 T
205.46 428.92 259.83 396.96 207.37 366.13 153.65 397.71 4 Y
N
(rpc__object_inq_type) 168.74 340.58 T
(rpc__if_lookup) 168.74 331.27 T
(W) 178.67 195.92 T
(A) 185.92 195.92 T
(Y validated?) 190.66 195.92 T
(rpc__dg_sct_way_validate) 257.68 198.05 T
(auth checksum ok?) 171.67 143.51 T
205.77 164.2 246.7 145.06 207.22 126.59 166.77 145.51 4 Y
N
205.77 219.81 246.7 200.67 207.22 182.2 166.77 201.12 4 Y
N
(SCT is) 195.28 203.95 T
(call stub) 190.82 99.9 T
(opnum in range?) 175.51 250.83 T
205.81 268.99 245.09 253.12 207.2 237.81 168.38 253.5 4 Y
N
(status) 450.8 644.67 T
460.7 656.81 480.84 644.33 461.41 632.29 441.51 644.62 4 Y
N
(ok?) 455.32 637.74 T
(status) 196.36 299.37 T
206.26 311.52 226.41 299.04 206.97 286.99 187.07 299.33 4 Y
N
(ok?) 200.88 292.45 T
(status) 196.36 459.3 T
206.26 471.44 226.41 458.96 206.97 446.92 187.07 459.25 4 Y
N
(ok?) 200.88 452.37 T
(status) 196.36 529.12 T
206.26 541.26 226.41 528.78 206.97 516.74 187.07 529.08 4 Y
N
(ok?) 200.88 522.2 T
(status) 252 173.99 T
261.91 186.13 282.05 173.65 262.62 161.61 242.71 173.95 4 Y
N
(ok?) 256.52 167.07 T
209.25 621.57 206.25 616.37 203.25 621.57 3 L
N
206.25 633.87 206.25 616.37 2 L
N
209.25 596.57 206.25 591.37 203.25 596.57 3 L
N
206.25 605.12 206.25 591.37 2 L
N
209.25 546.57 206.25 541.37 203.25 546.57 3 L
N
206.25 555.75 206.25 541.37 2 L
N
209.25 503.44 206.25 498.25 203.25 503.44 3 L
N
206.25 515.75 206.25 498.25 2 L
N
209.25 477.82 206.25 472.62 203.25 477.82 3 L
N
206.25 486.37 206.25 472.62 2 L
N
209.88 433.44 206.88 428.25 203.88 433.44 3 L
N
206.88 446.37 206.88 428.25 2 L
N
209.88 350.94 206.88 345.75 203.88 350.94 3 L
N
206.88 365.12 206.88 345.75 2 L
N
210.5 317.82 207.5 312.62 204.5 317.82 3 L
N
207.5 331.37 207.5 312.62 2 L
N
257.31 661.25 262.5 658.25 257.31 655.25 3 L
N
250.63 658.25 262.5 658.25 2 L
N
269.81 400.62 275 397.62 269.81 394.62 3 L
N
260 397.62 275 397.62 2 L
N
212.7 621.5 207.5 624.5 212.7 627.5 3 L
N
303.75 640.75 303.75 624.5 207.5 624.5 3 L
N
210.5 273.44 207.5 268.25 204.5 273.44 3 L
N
207.5 286.37 207.5 268.25 2 L
N
210.5 224.69 207.5 219.5 204.5 224.69 3 L
N
207.5 237 207.5 219.5 2 L
N
209.88 169.69 206.88 164.5 203.88 169.69 3 L
N
206.88 180.12 206.88 164.5 2 L
N
251.68 203.12 256.88 200.12 251.68 197.12 3 L
N
247.5 200.12 256.88 200.12 2 L
N
210.5 120.32 207.5 115.12 204.5 120.32 3 L
N
207.5 126.37 207.5 115.12 2 L
N
265.5 191.57 262.5 186.37 259.5 191.57 3 L
N
262.5 197 262.5 186.37 2 L
N
212.7 170.87 207.5 173.87 212.7 176.87 3 L
N
241.88 173.87 207.5 173.87 2 L
N
(AFTER_CALL_T) 414.77 690.96 T
(O_STUB:) 474.61 690.96 T
(rpc__dg_recvq_free) 425.62 676.57 T
(queue_mapped_reject) 421.4 606.74 T
460.37 586.98 494.58 566.79 461.58 547.32 427.77 567.27 4 Y
N
(state==recv) 441.07 570.17 T
(&& ! maybe?) 438.29 561.77 T
(rpc__dg_call_transmit_int) 415.63 532.8 T
(rpc__cthread_cancel_caf) 415.63 523.49 T
(state!=orphan?) 434.09 489.14 T
(rpc__dg_call_xmitq_push) 415.85 451.44 T
460.38 507.9 494.26 490.89 461.57 474.48 428.08 491.29 4 Y
N
409.38 443.87 517.5 687 R
8 X
N
463.63 662.82 460.63 657.62 457.63 662.82 3 L
0 X
N
460.63 673.87 460.63 657.62 2 L
N
464.88 615.95 461.88 610.75 458.88 615.95 3 L
N
461.88 630.75 461.88 610.75 2 L
N
464.88 592.82 461.88 587.62 458.88 592.82 3 L
N
461.88 605.12 461.88 587.62 2 L
N
465.5 541.57 462.5 536.37 459.5 541.57 3 L
N
462.5 547 462.5 536.37 2 L
N
463 512.82 460 507.62 457 512.82 3 L
N
460 521.37 460 507.62 2 L
N
464.25 463.44 461.25 458.25 458.25 463.44 3 L
N
461.25 474.5 461.25 458.25 2 L
N
(END_OF_CALL:) 433.75 334.5 T
(sent_response?) 430.13 299.19 T
(rpc__cthread_cancel_caf) 0 -270 524.29 236.67 TF
(call is not) 441.76 251.66 T
(idempotent and) 430.87 242.35 T
(we are sending) 431.32 233.05 T
(frags?) 447.32 223.74 T
456.14 266.6 501.87 241.65 457.75 217.57 412.56 242.23 4 Y
N
(state=\336nal) 490.75 204.5 T
(rpc__dg_xmitq_free) 421.89 196.23 T
(state!=orphan?) 431.15 157.42 T
(state=idle) 439.99 118.13 T
(rpc__dg_pkt_cancel_reservation) 399.44 90.83 T
456.36 319.89 492.8 301.93 457.64 284.61 421.63 302.36 4 Y
N
460.5 271.57 457.5 266.37 454.5 271.57 3 L
N
457.5 283.87 457.5 266.37 2 L
N
459.88 205.32 456.88 200.12 453.88 205.32 3 L
N
456.88 217 456.88 200.12 2 L
N
459.88 182.19 456.88 177 453.88 182.19 3 L
N
456.88 193.25 456.88 177 2 L
N
459.88 129.69 456.88 124.49 453.88 129.69 3 L
N
456.88 142.62 456.88 124.49 2 L
N
459.25 101.57 456.25 96.37 453.25 101.57 3 L
N
456.25 114.49 456.25 96.37 2 L
N
513 215.94 510 210.75 507 215.94 3 L
N
501.88 240.75 510 240.75 510 210.75 3 L
N
514.18 305 519.38 302 514.18 299 3 L
N
492.5 302 519.38 302 2 L
N
462.07 105.25 456.88 108.25 462.07 111.25 3 L
N
494.38 160.12 513.13 160.12 513.13 108.25 456.88 108.25 4 L
N
396.25 85.75 531.25 330.75 R
8 X
N
0 X
(END_OF_CALL:) 238 525.75 T
(AFTER_CALL_T) 259.88 328.57 T
(O_STUB:) 319.71 328.57 T
(status) 292.86 361.29 T
302.76 373.44 322.91 360.96 303.47 348.92 283.57 361.25 4 Y
N
(ok?) 297.38 354.37 T
306.13 379.07 303.13 373.87 300.13 379.07 3 L
1 X
N
303.13 380.75 303.13 373.87 2 L
N
211.45 357.75 206.25 360.75 211.45 363.75 3 L
N
284.38 360.75 206.25 360.75 2 L
N
230.43 531.25 235.63 528.25 230.43 525.25 3 L
N
227.5 528.25 235.63 528.25 2 L
N
306.13 341.57 303.13 336.37 300.13 341.57 3 L
N
303.13 350.12 303.13 336.37 2 L
N
0 X
(AFTER_CALL_T) 242.88 119.94 T
(O_STUB:) 302.71 119.94 T
265.5 131.57 262.5 126.37 259.5 131.57 3 L
N
262.5 161.37 262.5 126.37 2 L
N
256.68 148.33 261.88 145.33 256.68 142.33 3 L
N
247.5 145.33 261.88 145.33 2 L
N
(END_OF_CALL:) 296.63 98.37 T
(status) 251.23 102 T
261.14 114.14 281.28 101.66 261.85 89.62 241.94 101.95 4 Y
N
(ok?) 255.76 95.07 T
236.06 104.37 241.25 101.37 236.06 98.37 3 L
N
233.13 101.37 241.25 101.37 2 L
N
289.81 104.37 295 101.37 289.81 98.37 3 L
N
281.88 101.37 295 101.37 2 L
N
(Y) 237.5 164.5 T
(Y) 277.5 352.07 T
(Y) 210.63 439.63 T
(Y) 214.38 225.95 T
(Y) 503.13 231.64 T
(Y) 460.63 276.71 T
(N) 496.88 293.66 T
(N) 308.13 342.48 T
(N) 228.13 287.54 T
(N) 264.38 152.61 T
(N) 285 92.05 T
(N) 460 208.87 T
(N) 460 135.19 T
(N) 249.38 135.26 T
(N) 246.88 244.08 T
(Y) 213.75 119.48 T
(Y) 498.13 151.43 T
300.75 321.8 303.75 327 306.75 321.8 3 L
N
246.25 252.62 303.75 252.62 303.75 327 3 L
N
297.31 301.25 302.5 298.25 297.31 295.25 3 L
N
227.5 298.25 302.5 298.25 2 L
N
(N) 224.59 519.5 T
(N) 253.75 647.69 T
(N) 483.13 636.51 T
(Y) 465.63 467.82 T
(Y) 468.13 542.26 T
(Y) 209.38 627.33 T
(Y) 212.5 509.9 T
(END_OF_CALL:) 0 -270 512.75 616 TF
498.56 647.5 503.75 644.5 498.56 641.5 3 L
N
480 644.5 503.75 644.5 2 L
N
209.25 686.57 206.25 681.37 203.25 686.57 3 L
N
274.38 696.37 206.25 696.37 206.25 681.37 3 L
N
0 0 612 792 C
140.25 78 540 708 R
3 H
0 Z
3 X
0 K
N
FMENDPAGE
%%EndPage: "32" 171
%%Page: "33" 171
612 792 0 FMBEGINPAGE
4 12 Q
0 X
0 K
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-33) 518.02 34.67 T
(Revised 7/27/93) 108 748 T
(Datagram Protocol Service, part II) 370.45 748 T
(Copyright) 108 34.67 T
3 14 Q
(\343) 159.64 34.67 T
4 12 Q
( 1993 Open Software Foundation) 170.7 34.67 T
(7-33) 518.02 34.67 T
0 F
(Ping Handling) 108 712 T
2 F
(Information on this subject will be part of a future edition of this document.) 144 692 T
0 F
(Cancel Pr) 108 672.5 T
(ocessing) 158.74 672.5 T
2 F
(Information on this subject will be part of a future edition of this document.) 144 652.5 T
FMENDPAGE
%%EndPage: "33" 172
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 171 1
%%DocumentFonts: Times-Bold
%%+ Times-BoldItalic
%%+ Times-Roman
%%+ Symbol
%%+ Times-Italic
%%+ Courier
%%+ Helvetica
%%+ Courier-Bold
%%+ Helvetica-Oblique
%%+ Helvetica-Bold
%%+ Helvetica-BoldOblique
%%+ ZapfDingbats
%%+ Courier-BoldOblique
