...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: VL_ChangeAddress.3dfs,v $
...\" Revision 1.1.2.3  1994/08/30  00:32:35  jeff
...\" 	{defect, 11947, R1.1}
...\" 	Correct/clarify some DFS APIs.
...\" 	[1994/08/30  00:31:31  jeff]
...\"
...\" Revision 1.1.2.2  1994/06/10  21:13:58  devobj
...\" 	cr10872 - fixed copyright
...\" 	[1994/06/10  20:53:55  devobj]
...\" 
...\" Revision 1.1.2.1  1994/04/05  15:18:37  rom
...\" 	{enh, 10283, R1.1}
...\" 	Moved from dce_books/app_ref/man3dfs/VL_ChangeAddress.3dfs to
...\" 	supp_docs/redistrib/dfs_app_gdref/man3dfs/VL_ChangeAddress.3dfs.
...\" 	[1994/04/04  22:07:56  rom]
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED
.TH "VL_ChangeAddress" "3dfs" "" "" ""
...\'wH NOT_HANDLED{hspace{.15 in}}
...\" .iX "functions"  "in DFS"  "\*LVL_ChangeAddress(\|)\*O"
...\" .iX "\*LVL_ChangeAddress(\|)\*O"
.iX "network address"  "altering entry (DFS)"
.SH "NAME"
.PP
\*LVL_ChangeAddress\*O - Alters a network address entry for a server
.SH "SYNOPSIS"
.PP
.sS
...\'wH NOT_HANDLED{hspace{.15 in}}
\*Lerror_status_t VL_ChangeAddress(
.nL
\*Lhandle_t \*VrpcBinding\*L,
.nL
\*LafsNetAddr *\*VOldAddr\*L,
.nL
\*LafsNetAddr *\*VNewAddr\*L)
.nL
.br
.ne 1.5i
.SH "PARAMETERS"
...\'wH NOT_HANDLED{hspace{.15 in}}
.SS Input
.VL 8m
...\'wH UNDEFINED{tightenlist}
.LI "\*VrpcBinding\*O"
The RPC handle.
.LI "\*VOldAddr\*O"
The old address.
.LI "\*VNewAddr\*O"
The address to change it to.
.LE
.br
.ne 1.5i
.SH "DESCRIPTION"
...\'wH NOT_HANDLED{hspace{.15 in}}
.PP
\*LVL_ChangeAddress(\|)\*O changes one of the network addresses
in an equivalence class for a file server to a new value.
It is comparable to 
\*LVL_AddAddress(OldAddr,\ NewAddr)\*O,
followed by
\*LVL_RemoveAddress(OldAddr)\*O,
but does not require that the equivalence class have space available.
.PP
The paradigm for equivalence classes of network addresses is explained
more fully in the discussion of \*LVL_AddAddress(\|)\*O.
.PP
\*VOldAddr\*O is the address to be changed, and \*VNewAddr\*O is the new value
to which it should be changed.
.br
.ne 1.5i
.SH "ERRORS"
...\'wH NOT_HANDLED{hspace{.15 in}}
.VL 14m
...\'wH UNDEFINED{tightenlist}
.LI "\*LVL_PERM\*O"
The caller is not the Fileset Server administrator.
.LI "\*LVL_BADENTRY\*O"
A bad value for \*VNewAddr\*O exists.
.LI "\*LVL_IO\*O"
An error from an underlying database occurred.
.LI "\*LVL_NOENT\*O"
FLDB:  There is no such entry.
.LI "\*LVL_BADINDEX\*O"
Internal corruption in the table of equivalence classes occurred.
.LI "\*LVL_SITESCORRUPTED\*O"
Another sort of internal corruption in the table of
equivalence classes occurred.
.LI "\*LVL_ADDRESSELSEWHERE\*O"
FLDB:  The address already exists in another site.
.LE
.br
.ne .75i
.SH "RELATED INFORMATION"
...\'wH NOT_HANDLED{hspace{.15 in}}
.ad l
.PP
Functions:
\*LVL_AddAddress(3dfs)\*O.
.ad b
