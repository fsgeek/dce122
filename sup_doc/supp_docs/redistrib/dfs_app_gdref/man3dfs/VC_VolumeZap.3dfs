...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: VC_VolumeZap.3dfs,v $
...\" Revision 1.1.2.2  1994/06/10  21:13:50  devobj
...\" 	cr10872 - fixed copyright
...\" 	[1994/06/10  20:53:42  devobj]
...\"
...\" Revision 1.1.2.1  1994/04/05  15:18:27  rom
...\" 	{enh, 10283, R1.1}
...\" 	Moved from dce_books/app_ref/man3dfs/VC_VolumeZap.3dfs to
...\" 	supp_docs/redistrib/dfs_app_gdref/man3dfs/VC_VolumeZap.3dfs.
...\" 	[1994/04/04  22:07:35  rom]
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED
.TH "VC_VolumeZap" "3dfs" "" "" ""
...\'wH NOT_HANDLED{hspace{.15 in}}
...\" .iX "functions"  "in DFS"  "\*LVC_VolumeZap(\|)\*O"
...\" .iX "\*LVC_VolumeZap(\|)\*O"
.iX "fileset"  "deleting (DFS)"
...\" .iX "fileset"  "in DFS"  "removing"
.iX "deleting DFS fileset"
...\" .iX "removing"  "in DFS"  "fileset"
.SH "NAME"
.PP
\*LVC_VolumeZap\*O - Deletes a fileset without updating the Fileset Location Database (DCE LFS filesets only)
.SH "SYNOPSIS"
.PP
.sS
...\'wH NOT_HANDLED{hspace{.15 in}}
\*Lunsigned32 VC_VolumeZap(
.nL
\*Lrpc_binding_handle_t \*VRpcBinding\*L,
.nL
\*Lstruct sockaddr *\*VservAddrp\*L,
.nL
\*Lunsigned32 \*VaggrID\*L,
.nL
\*Lstruct afsHyper *\*VfilesetIDp\*L)
.sE
.br
.ne 1.5i
.SH "PARAMETERS"
...\'wH NOT_HANDLED{hspace{.15 in}}
.SS Input
.VL 8m
...\'wH UNDEFINED{tightenlist}
.LI "\*VRpcBinding\*O"
The RPC handle.
.LI "\*VservAddrp\*O"
The server address.
.LI "\*VaggrID\*O"
The aggregate on which the fileset resides.
.LI "\*VfilesetIDp\*O"
The fileset ID.
.LE
.br
.ne 1.5i
.SH "DESCRIPTION"
...\'wH NOT_HANDLED{hspace{.15 in}}
.PP
\*LVC_VolumeZap(\|)\*O deletes a fileset. Unlike \*LVC_DeleteVolume(\|)\*O,
\*LVC_VolumeZap(\|)\*O does not update the FLDB.
.PP
You should use \*LVC_VolumeZap(\|)\*O instead of \*LVC_DeleteVolume(\|)\*O
if the FLDB entry is corrupted or does not exist, or if you have multiple
copies of a fileset and some of them are garbage.
.SH "Caution"
.PP
Because \*LVC_VolumeZap(\|)\*O does not update the FLDB, the FLDB may believe
that the fileset exists when it does not after this call. You should
exercise care in the use of this function.
.PP
This function applies only to DCE LFS filesets.
.br
.ne .75i
.SH "RELATED INFORMATION"
...\'wH NOT_HANDLED{hspace{.15 in}}
.ad l
.PP
Functions:
\*LVC_DeleteVolume(3dfs)\*O.
.ad b
