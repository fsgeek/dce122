...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: FTSERVER_GetStatus.3dfs,v $
...\" Revision 1.1.2.3  1994/08/30  00:24:41  jeff
...\" 	{defect, 11947, R1.1}
...\" 	Correct/clarify some DFS APIs.
...\" 	[1994/08/30  00:24:10  jeff]
...\"
...\" Revision 1.1.2.2  1994/06/10  21:12:33  devobj
...\" 	cr10872 - fixed copyright
...\" 	[1994/06/10  20:52:07  devobj]
...\" 
...\" Revision 1.1.2.1  1994/04/05  15:17:29  rom
...\" 	{enh, 10283, R1.1}
...\" 	Moved from dce_books/app_ref/man3dfs/FTSERVER_GetStatus.3dfs to
...\" 	supp_docs/redistrib/dfs_app_gdref/man3dfs/FTSERVER_GetStatus.3dfs.
...\" 	[1994/04/04  22:05:52  rom]
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED
.TH "FTSERVER_GetStatus" "3dfs" "" "" ""
...\'wH NOT_HANDLED{hspace{.15 in}}
...\" .iX "functions"  "in DFS"  "\*LFTSERVER_GetStatus(\|)\*O"
...\" .iX "\*LFTSERVER_GetStatus(\|)\*O"
.iX "fileset"  "displaying full status information (DFS)"
.SH "NAME"
.PP
\*LFTSERVER_GetStatus\*O - Gets the full status of a fileset
.SH "SYNOPSIS"
.PP
.sS
\*Lerror_status_t FTSERVER_GetStatus(
.nL
\*Lhandle_t \*VRpcBinding\*L,
.nL
\*Lunsigned32 \*VtransID\*L,
.nL
\*Lftserver_status *\*Vstatus\*L)
.sE
.br
.ne 1.5i
.SH "PARAMETERS"
...\'wH NOT_HANDLED{hspace{.15 in}}
.SS Input
.VL 8m
...\'wH UNDEFINED{tightenlist}
.LI "\*VRpcBinding\*O"
The RPC handle.
.LI "\*VtransID\*O"
The transaction ID on the target fileset.
.LE
.SS Output
.VL 8m
.LI "\*Vstatus\*O"
The returned status.
.LE
.br
.ne 1.5i
.SH "DESCRIPTION"
...\'wH NOT_HANDLED{hspace{.15 in}}
.iX "\*Lftserver_status\*O structure (DFS)"
.iX "\*Lftserver_status_static\*O structure (DFS)"
.iX "\*Lftserver_status_dynamic\*O structure (DFS)"
.PP
\*LFTSERVER_GetStatus(\|)\*O returns,
by way of \*Vstatus\*O, the status information associated with the
fileset associated with the transaction \*VtransID\*O. The structure
definitions and descriptions of the fields follow.
...\'wH UNDEFINED{footnotesize}
.zA "defect, 6360, r1.0.2, changes to ftserver_status"
.iS
struct ftserver_status {
\&       ftserver_status_static vss;
\&       ftserver_status_dynamic vsd;
\&       }

struct ftserver_status_static {
\&       struct afsHyper volId;
\&       struct afsHyper parentId;
\&       struct afsTimeval cloneTime;
\&       struct afsTimeval vvCurrentTime;
\&       struct afsTimeval vvPingCurrentTime;
\&       unsigned32 type; 
\&       unsigned32 accStatus;
\&       unsigned32 accError;
\&       unsigned32 states;
\&       unsigned32 reclaimDally;
\&       unsigned32 tokenTimeout;
\&       unsigned32 activeVnops;
\&       unsigned32 volMoveTimeout;
\&       unsigned32 static_spare4;
\&       unsigned32 static_spare5;
\&       unsigned32 static_spare6;
\&       unsigned32 static_spare7;
\&       unsigned32 static_spare8;
\&       unsigned32 static_spare9;
\&       unsigned char volName[FTSERVER_MAXFSNAME];
\&       unsigned char concurrency;
\&       unsigned char static_cspares[15];
\&       }

struct ftserver_status_dynamic {
\&       struct afsTimeval creationDate;
\&       struct afsTimeval updateDate;
\&       struct afsTimeval accessDate;
\&       struct afsTimeval backupDate;
\&       struct afsTimeval copyDate;
\&       struct afsHyper volversion; 
\&       struct afsHyper backupId;
\&       struct afsHyper cloneId;
\&       struct afsHyper llBackId;
\&       struct afsHyper llFwdId;
\&       struct afsHyper allocLimit;
\&       struct afsHyper allocUsage;
\&       struct afsHyper visQuotaLimit;
\&       struct afsHyper visQuotaUsage;
\&       unsigned32 fileCount;
\&       unsigned32 minQuota;
\&       unsigned32 owner;
\&       unsigned32 unique;
\&       unsigned32 index;
\&       unsigned32 rwindex;
\&       unsigned32 backupIndex;
\&       unsigned32 parentIndex;
\&       unsigned32 cloneIndex;
\&       unsigned32 nodeMax;
\&       unsigned32 dynamic_spare1;
\&       unsigned32 dynamic_spare2;
\&       unsigned32 dynamic_spare3;
\&       unsigned32 dynamic_spare4;
\&       unsigned32 dynamic_spare5;
\&       unsigned32 dynamic_spare6;
\&       codesetTag tag;
\&       unsigned32 msgLen;
\&       unsigned char statusMsg[128];
\&       unsigned char dynamic_cspares[16];
\&       }
.iE
.PP
The fields of these structures are as follows.
.ad l
.ML
...\'wH UNDEFINED{tightenlist}
.LI
\*Lftserver_status_static\*O
.ML
...\'wH UNDEFINED{tightenlist}
.LI
\*LvolId\*O: The ID of the fileset, which should be unique throughout
this DFS cell.
.LI
\*LparentId\*O: Fileset ID of the read/write source, if this is a
read-only or backup clone.
.LI
\*LcloneTime\*O: The time the last clone was made of this fileset.
.LI
\*LvvCurrentTime\*O: The most recent time that the fileset version
number was known to be current on the read/write site.
Applications should not modify this field.
.LI
\*LvvPingCurrentTime\*O: The most recent time that a read-only site
tried to contact a read/write site to determine how current the fileset
version number is. Applications should not modify this field.
.LI
\*Ltype\*O: The fileset's type.
.LI
\*LaccStatus\*O: The access status on the fileset; the status will be
one of the codes described under \*LFTSERVER_CreateTrans(\|)\*O. This field
should never be modified by an application program.
.LI
\*LaccError\*O: The access error on a fileset; this will be
one of the codes described under \*LFTSERVER_CreateTrans(\|)\*O. This field
should never be modified by an application program.
.LI
\*Lstates\*O: The status flag, as set by \*LFTSERVER_SetFlags(\|)\*O
and \*LFTSERVER_SetStatus(\|)\*O.
.LI
\*LreclaimDally\*O: The time, in seconds, that deleted files will be 
preserved after the most recent keep-alive message from the Cache Manager.
.LI
\*LtokenTimeout\*O: The clock value when the \*LVOL_HAND_TOKEN\*O bit in 
\*Lstates\*O will time out.
.LI
\*LactiveVnops\*O: The number of vnode operations currently in progress for
the fileset.
.LI
\*LvolMoveTimeout\*O: The clock value when the \*LVOL_MOVE_TARGET\*O and
\*LVOL_MOVE_SOURCE\*O bits in \*Lstates\*O will time out.
.LI
\*Lstatic_spare4\*O through \*Lstatic_spare9\*O: Spares reserved for future
use.
.LI
\*LvolName\*O: The name of the fileset.
.LI
\*Lconcurrency\*O: A flag indicating which operations may be performed on
the fileset; one of \*LVOL_CONCUR_ALLOPS, VOL_CONCUR_READONLY,\*O or 
\*LVOL_CONCUR_NOOPS\*O.
.LI
\*Lstatic_cspares\*O: Reserved for future use.
.LE
.LI
\*Lftserver_status_dynamic\*O
.ML
...\'wH UNDEFINED{tightenlist}
.LI
\*LcreationDate\*O: The date of the fileset's creation.
.LI
\*LupdateDate\*O: The timestamp of the last modification to the fileset.
.LI
\*LaccessDate\*O: The last access time for the fileset.
.LI
\*LbackupDate\*O: The date at which the last backup clone was made.
.LI
\*LcopyDate\*O: The time that this copy of the fileset was created.
.LI
\*Lvolversion\*O: The current version number of the fileset.
.LI
\*LbackupId\*O: The fileset ID of the latest backup version of this
fileset.
.LI
\*LcloneId\*O: The fileset ID of the clone.
.LI
\*LllBackId\*O and \*LllFwdId\*O: The links for all related filesets in a
doubly linked list; used to find the correct fileset to unclone when
deleting a fileset.
.LI
\*LallocLimit\*O: The maximum amount of disk space the fileset is allowed
to take up, expressed in bytes. A value of 0 (zero) means there is no limit.
.LI
\*LallocUsage\*O: The amount of disk space currently in use by the fileset.
.LI
\*LvisQuotaLimit\*O: The maximum amount of disk space that may be used by
this fileset and its clones and backups.  
.LI
\*LvisQuotaUsage\*O: The amount of disk space currently in use by the fileset
and its clones and backups.
.LI
\*LfileCount\*O: The number of files in the fileset.
.LI
\*LminQuota\*O: The amount of disk space guaranteed to be available for
the fileset, expressed in 1024-byte units. Other filesets on the
partition are prevented from growing if their growth would impinge
on this limit.
.LI
\*Lowner\*O: The DFS ID of the owner of the fileset.
.LI
\*Lunique\*O: The uniquifier, a value combined with other IDs to
guarantee uniqueness (do not modify this).
.LI
\*Lindex\*O, \*Lrwindex\*O, \*LbackupIndex\*O, \*LparentIndex\*O,
and \*LcloneIndex\*O: Information about where other related filesets are
located within an aggregate; for the remote application user they are
meaningless. They cannot be set remotely.
.LI
\*LnodeMax\*O: Maximum filesystem-independent index that can be used on the 
fileset.
.LI
\*Ldynamic_spare1\*O through \*Ldynamic_spare6\*O: Spares reserved
for future use.
.LI
\*Ltag\*O and \*LmsgLen\*O: Spares reserved for future use.
.LI
\*LstatusMsg\*O: Message field used by low-level code to transmit
error messages back up to the caller (across the Fileset
Server-to-kernel interface).
Applications should not use this field.
.LI
\*Ldynamic_cspares\*O: Reserved for future use.
.LE
.LE
.zZ "defect, 6360, r1.0.2, changes to ftserver_status"
.br
.ne 1.5i
.SH "ERRORS"
.VL 17m
.LI "\*LFTSERVER_ERR_NOTRANS\*O"
The transaction was not found.
.LI "\*LDAUT_ERROR_ACCESS_DENIED\*O"
Access was denied.
.LE
.ad b
.br
.ne 1.0i
.SH "RELATED INFORMATION"
.ad l
.PP
Functions:
\*LFTSERVER_ListVolumes(3dfs), FTSERVER_SetStatus(3dfs),
VC_VolserStatus(3dfs)\*O.
