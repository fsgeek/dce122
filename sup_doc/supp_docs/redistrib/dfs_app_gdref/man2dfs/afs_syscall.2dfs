...\" @OSF_COPYRIGHT@
...\" COPYRIGHT NOTICE
...\" Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
...\" ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
...\" the full copyright text.
...\" 
...\" 
...\" HISTORY
...\" $Log: afs_syscall.2dfs,v $
...\" Revision 1.1.2.2  1994/06/10  21:08:26  devobj
...\" 	cr10872 - fixed copyright
...\" 	[1994/06/10  20:48:26  devobj]
...\"
...\" Revision 1.1.2.1  1994/04/05  15:14:45  rom
...\" 	{enh, 10283, R1.1}
...\" 	Moved from dce_books/app_ref/man2dfs/afs_syscall.2dfs to
...\" 	supp_docs/redistrib/dfs_app_gdref/man2dfs/afs_syscall.2dfs.
...\" 	[1994/04/04  21:46:49  rom]
...\" 
...\" $EndLog$
...\"
...\" (c) Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED
.TH "afs_syscall" "2dfs" "" "" ""
...\'wH NOT_HANDLED{hspace{.15 in}}
...\" .iX "calls"  "in DFS"  "\*Lafs_syscall(\|)\*O"
...\" .iX "\*Lafs_syscall(\|)\*O"
.SH "NAME"
.PP
\*Lafs_syscall\*O - Sets, changes, or modifies the Access Control List on a file or directory
.SH "SYNOPSIS"
.PP
.sS
...\'wH NOT_HANDLED{hspace{.15 in}}
.PP
.zA"defect,5992,r1.0.2,fixed include directory"
\*L#include<dcedfs/syscall.h>
.nL
#include<dcedfs/aclint.h>\*L
.zZ"defect,5992,r1.0.2,fixed include directory"
.PP
\*Lsigned16 afs_syscall\*L(
.nL
	\*Lsigned16 AFSCALL_VNODE_OPS\*L,
.nL
	\*Lsigned16 VNX_OPCODE_GETACL\*L,
.nL
	\*Lchar *\*Vpathname\*L,
.nL
	\*Lchar *\*Vacl\*L,
.nL
	\*Lsigned16 *\*Vlength\*L,
.nL
	\*Lsigned16 \*Vwhichacl\*L)
.PP
\*Lsigned16 afs_syscall\*L(
.nL
	\*Lsigned16 AFSCALL_VNODE_OPS\*L,
.nL
	\*Lsigned16 VNX_OPCODE_SETACL\*L,
.nL
	\*Lchar *\*Vpathname\*L,
.nL
	\*Lchar *\*Vacl\*L,
.nL
	\*Lsigned16 \*Vlength\*L,
.nL
	\*Lsigned16\*O \*Vwhichacl\*L)
.PP
\*Lsigned16 afs_syscall\*L(
.nL
	\*Lsigned16 AFSCALL_VNODE_OPS\*L,
.nL
	\*Lsigned16 VNX_OPCODE_COPYACL\*L,
.nL
	\*Lchar *\*Vdest_pathname\*L,
.nL
	\*Lchar *\*Vsource_pathname\*L,
.nL
	\*Lsigned16 \*Vdest_whichacl\*L
.nL
	\*Lsigned16\*O \*Vsource_whichacl\*L)
.sE
.br
.ne 1.5i
.SH "PARAMETERS"
...\'wH NOT_HANDLED{hspace{.15 in}}
.SS Input
.VL 8m
...\'wH UNDEFINED{tightenlist}
.LI "\*Vpathname\*O"
The file or directory affected.
...\" .LI "\*Vacl\*O"
...\" The ACL (see the following for the format).
...\" .LI "\*Vlength\*O"
...\" The length of \*Vacl\*O.
.LI "\*Vwhichacl\*O"
Specifies which of three ACLs to set on a directory.
.LI "\*Vdest_pathname\*O"
The target file or directory for the ACL.
.LI "\*Vsource_pathname\*O"
The file or directory whose ACL is to be copied.
.LI "\*Vdest_whichacl\*O"
The ACL to set in the destination object.
.LI "\*Vsource_whichacl\*O"
The ACL to use from the source object.
.LE
.SS Input/Output
.VL 8m
.LI "\*Vacl\*O"
The ACL (see the following for the format).
.LI "\*Vlength\*O"
The length of \*Vacl\*O.
.LE
.br
.ne 1.5i
.SH "DESCRIPTION"
...\'wH NOT_HANDLED{hspace{.15 in}}
.iX "Access Control List"  "in DFS"
.PP
The \*Lafs_syscall(\|)\*O system call gets, sets, and
copies DFS ACLs.  A directory can have up to three ACLs, as follows:
.VL 13m
...\'wH UNDEFINED{tightenlist}
.LI "\*LVNX_ACL_REGULAR_ACL\*O"
The directory itself.
.LI "\*LVNX_ACL_INITIAL_ACL\*O"
The files created in the directory.
.LI "\*LVNX_ACL_DEFAULT_ACL\*O"
The directories created in the directory.
.LE
A file can have only one ACL. The \*Vwhichacl\*O parameter determines which
of these ACLs is affected; for files, use \*LVNX_ACL_REGULAR_ACL\*O.
For the \*LVNX_OPCODE_COPYACL\*O call, \*Vdest_whichacl\*O specifies
the ACL to set in the destination file, and \*Vsource_whichacl\*O
specifies which ACL in the source to copy.
.PP
The \*Vpathname, dest_pathname,\*O and \*Vsource_pathname\*O parameters
are all full pathnames for the file or directory to be affected. \*Vacl\*O
is the ACL string, and its length is \*Vlength\*O.
.PP
The ACL is a character array with the following components:
.ML
...\'wH UNDEFINED{tightenlist}
.LI
The manager type, where the length is that 
of a \*Luuid_t\*O. For DFS ACLs this is always
\*LepisodeAclMgmtUuid\*O.
.LI
The default realm UUID, the length of a \*Luuid_t\*O.
.LI
The number of ACL entries, the length of a 32-bit unsigned integer.
.LI
For each ACL entry, the following components:
.ML
...\'wH UNDEFINED{tightenlist}
.LI
The permission bits, represented by 4 bytes.
.LI
The entry type, represented by 4 bytes.
.LI
Type-dependent information.
.LE
.LE
.PP
The permission bits are represented as a mask of the desired values from
the following list:
.ML
...\'wH UNDEFINED{tightenlist}
.LI
\*Lsec_acl_perm_read\*O
.LI
\*Lsec_acl_perm_write\*O
.LI
\*Lsec_acl_perm_execute\*O
.LI
\*Lsec_acl_perm_control\*O
.LI
\*Lsec_acl_perm_insert\*O
.LI
\*Lsec_acl_perm_delete\*O
.LE
.PP
The entry type is one of the following:
.ML
...\'wH UNDEFINED{tightenlist}
.LI
\*Lsec_acl_e_type_user_obj\*O
.LI
\*Lsec_acl_e_type_group_obj\*O
.LI
\*Lsec_acl_e_type_other_obj\*O
.LI
\*Lsec_acl_e_type_user\*O
.LI
\*Lsec_acl_e_type_group\*O
.LI
\*Lsec_acl_e_type_mask_obj\*O
.LI
\*Lsec_acl_e_type_foreign_user\*O
.LI
\*Lsec_acl_e_type_foreign_group\*O
.LI
\*Lsec_acl_e_type_foreign_other\*O
.LI
\*Lsec_acl_e_type_unauthenticated\*O
.LI
\*Lsec_acl_e_type_extended\*O
.LI
\*Lsec_acl_e_type_any_other\*O
.LE
.PP
The last items in an ACL entry depend on the type of the entry.
If the type is \*Lsec_acl_e_type_user\*O,
\*Lsec_acl_e_type_group\*O, or \*Lsec_acl_e_type_foreign_other\*O,
then the remaining data is a UUID of the length of a \*Luuid_t\*O,
identifying the user or group.
.PP
If the type is \*Lsec_acl_e_type_foreign_user\*O or
\*Lsec_acl_e_type_foreign_group\*O, then the remaining data is
a UUID indicating the ID of the foreign user or group
(length of a \*Luuid_t\*O),
followed by a UUID indicating the realm of the foreign user or group
(length of a \*Luuid_t\*O).
.PP
If the type is \*Lsec_acl_e_type_extended\*O, then the data is the
following, in the order shown:
.ML
...\'wH UNDEFINED{tightenlist}
.LI
Extension type UUID (\*Luuid_t\*O)
.LI
Format label, consisting of the following:
.ML
...\'wH UNDEFINED{tightenlist}
.LI
Integer byte order (\*Lsigned16\*O)
.LI
Character format (\*Lsigned16\*O)
.LI
Floating-point format (\*Lsigned16\*O)
.LI
Reserved bytes (\*Lchar\*O)
.LE
.LI
The number of bytes of data following (unsigned 32-bit integer)
.LI
The data
.LI
Whatever padding is necessary to get to a 4-byte boundary
.LE
.PP
For more information about the various components of an ACL, see the
\*VOSF DCE Application Development Guide\*O, and Chapter 5 of this manual.
.br
.ne 1.5i
.SH "ERRORS"
...\'wH NOT_HANDLED{hspace{.15in}}
.PP
The following are possible values for \*Lerrno\*O:
.VL 6m
...\'wH UNDEFINED{tightenlist}
.LI "[\*LEPERM\*O]"
Calling process doesn't own the specified entry.
.LI "[\*LENOTDIR\*O]"
Specified entry is not a directory.
.LI "[\*LENOENT\*O]"
No such file or directory was found.
.LI "[\*LEACCES\*O]"
Permission was denied.
.LI "[\*LEROFS\*O]"
The entry specifies a read-only file system.
.LI "[\*LEMFILE\*O]"
Too many files are open.
.LI "[\*LENXIO\*O]"
A nonexistent pathname was specified.
.LI "[\*LEFAULT\*O]"
A bad pathname was specified.
.LI "[\*LELOOP\*O]"
The pathname involves too many levels of symbolic links.
.LI "[\*LEINVAL\*O]"
Bad syscall number or ACL cannot be validated.
.LI "[\*LEIO\*O]"
File is not exported, or error in storing ACL.
.LI "[\*LERANGE\*O]"
ACL does not fit into an 8188-byte buffer.
.LI "[\*LESPIPE\*O]"
ACL is malformed and ordinary permission bits cannot be determined.
.LI "[\*LENOMEM\*O]"
Out of memory.
.LI "[\*LEDQUOT\*O]"
Fileset full; cannot write ACL.
.LI "[\*LENOSPC\*O]"
Aggregate full; cannot write ACL.
.LI "[\*LENOSYS\*O]"
File is not exported, or is an exported AIX file.
.LI "[\*LEFBIG\*O]"
ACL is too large for file system.
.LE
.br
.ne 1.2i
.SH "RELATED INFORMATION"
.PP
.ad l
Functions:
\*Lsyscall(2)\*O.
.PP
Books:
\*VOSF DCE Application Development Guide\*O.
.ad b
...\'wH NOT_HANDLED{hspace{.15 in}}
