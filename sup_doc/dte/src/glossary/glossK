|.# Copyright 1991,1992,1993 Open Software Foundation, Inc.,
|.# Cambridge, Massachusetts
|.# All rights reserved.
|.# 
|.# @OSF_COPYRIGHT@
|.# 
|.# HISTORY
|.# $Log: glossK,v $
|.# Revision 1.1.2.12  1995/05/16  19:42:59  rcb
|.# 	DCE entries updated by buckler
|.# 	[1995/05/16  19:38:01  rcb]
|.#
|.# Revision 1.1.2.11  1994/10/04  18:04:38  willie
|.# 	{enh, 11783, R1.1}
|.# 	More editorial comments incorporated. Many added entries.
|.# 	[1994/10/04  18:00:10  willie]
|.# 
|.# Revision 1.1.2.10  1994/07/28  21:14:20  bmoy
|.# 	new terminology for 2.0 Motif Style guide
|.# 	[1994/07/28  21:11:40  bmoy]
|.# 
|.# Revision 1.1.2.9  1993/04/10  00:03:26  bowe
|.# 	Add OSF copyright.
|.# 	[1993/04/09  23:58:31  bowe]
|.# 
|.# Revision 1.1.2.8  1993/02/19  18:29:26  billb
|.# 	Incorporated editorial and technical comments in preparation for
|.# 	releasing Design Guide to Prentice Hall.
|.# 	[1993/02/19  18:22:43  billb]
|.# 
|.# Revision 1.1.2.7  1993/01/14  01:53:42  billb
|.# 	Added "kernel exec" entry for Design Guide.
|.# 	[1993/01/14  01:17:36  billb]
|.# 
|.# Revision 1.1.2.6  1993/01/13  17:18:09  billb
|.# 	Added the following entries for the Design Guide:
|.# 
|.# 	keep-on-exec
|.# 	kernel exec
|.# 	kernel map
|.# 	kernel mode
|.# 	kernel stack
|.# 	kernel task
|.# 	kernel thread
|.# 	known modules list
|.# 	[1993/01/12  21:45:32  billb]
|.# 
|.# Revision 1.1.2.5  1992/12/23  19:57:10  steiner
|.# 	Revised "keytab file"
|.# 	[1992/12/23  19:56:06  steiner]
|.# 
|.# Revision 1.1.2.4  1992/12/08  21:48:40  steiner
|.# 	Merged general & DFS "key file" definitions into one def. per
|.# 	Jeff Kaminski's suggestion.
|.# 	[1992/12/08  21:48:26  steiner]
|.# 
|.# Revision 1.1.2.3  1992/12/08  21:03:19  steiner
|.# 	CR 3793, comments from IBM.  Made "key file" definition more general
|.# 	rather than DFS specific.
|.# 	[1992/12/08  21:01:58  steiner]
|.# 
|.# Revision 1.1.2.2  1992/07/15  19:46:33  bowe
|.# 	initial revision
|.# 	[1992/07/15  19:40:30  bowe]
|.# 
|.# $EndLog$
|.# 
|.# $Header: /u1/rcs/dte/glossary/glossK,v 1.1.2.12 1995/05/16 19:42:59 rcb Exp $
|.# 
|.TERM|K-byte
|.ACR|
	|.DEFIN|1|*
		|.XREF|kilobyte
		|.BOOK|
		|.TOPIC|
|.TERM|kanji
|.ACR|
	|.DEFIN|1|A graphic character set consisting of symbols used in Japanese
ideographic alphabets.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|katakana
|.ACR|
	|.DEFIN|1|A character set of symbols used in one of the two common
Japanese phonetic alphabets that is used primarily to write foreign words
phonetically.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|KB
|.ACR|
	|.DEFIN|1|*
		|.XREF|kilobyte
		|.BOOK|
		|.TOPIC|
|.TERM|keep-on-exec
|.ACR|
	|.DEFIN|1|Generally, the \*Lexec(\|)\*O system call
deallocates the allocated regions of a virtual address space before it
maps in the new program.  Regions that are marked \*Ekeep-on-exec\*O
are not deallocated during a call to \*Lexec(\|).
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|Kerberos
|.ACR|
	|.DEFIN|1|The authentication protocol implemented
by DCE shared-secret authentication. Kerberos was developed
at the Massachusetts Institute of Technology. In classical
mythology, Kerberos was the three-headed dog that guarded
the entrance to the underworld.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|kernel
|.ACR|
	|.DEFIN|1|The part of a system that contains programs for such
tasks as input/output, management and control of hardware and the scheduling
of user tasks.
		|.XREF|
		|.BOOK|OSAdminGd
		|.BOOK|OSUsersGd
		|.TOPIC|
|.TERM|kernel exec
|.ACR|
	|.DEFIN|1|In OSF/1, the \*Lexec(\|)\*O system call is referred
to as the \*Ekernel exec\*O to distinguish it from the user space
program loader.
		|.XREF|program loader
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kernel initialization
|.ACR|
	|.DEFIN|1|The code, steps, and procedures required to configure and
start up the kernel for normal system operation.  This encompasses the
kernel routines that must be called to perform these operations.
		|.XREF|user level initialization
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kernel level
|.ACR|
	|.DEFIN|1|*
		|.XREF|user level
		|.BOOK|
		|.TOPIC|
|.TERM|kernel load server
|.ACR|
	|.DEFIN|1|A privileged user space task that manages the
dynamic loading of modules into the kernel's address space.
		|.XREF|program loader
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kernel map
|.ACR|
	|.DEFIN|1|In OSF/1, the address map data structure that
describes the kernel's address space.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kernel mode
|.ACR|
	|.DEFIN|1|The state in which a process executes kernel code.
Contrast with
\(LI\s12\f(HIuser mode\(LI\s12\fH.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|2|A privileged mode of execution in which the CPU can
execute kernel code and access kernel data structures.  A user process
executes in kernel mode when it \*Etraps\*O into the kernel by
executing a \*Esystem call\*O.
		|.XREF|system call
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kernel parameters
|.ACR|
	|.DEFIN|1|Variables that specify how the kernel allocates certain system
resources. Synonymous with \(LI\s12\f(HIsystem parameters\(LI\s12\fH.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|kernel service
|.ACR|
	|.DEFIN|1|In OSF/1 dynamic configuration, the entry points in the
core kernel or one of the core frameworks that perform configuration
functions.
		|.XREF|
		|.BOOK|OSExtGd
		|.TOPIC|
|.TERM|kernel stack
|.ACR|
	|.DEFIN|1|The stack used by the CPU when a process executes in
kernel mode.
		|.XREF|user stack
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kernel task
|.ACR|
	|.DEFIN|1|In OSF/1, the task that is associated with the
kernel's virtual address space.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kernel thread
|.ACR|
	|.DEFIN|1|A thread that executes within the kernel task to
perform system-related operations.  For example, the pageout daemon
executes as a kernel thread.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|kerning
|.ACR|
	|.DEFIN|1|The design of graphic characters so that their character boxes
overlap. The toned picture elements (pels) of the character appear outside
the character cell.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|key
|.ACR|
	|.DEFIN|1|A value used to encrypt and decrypt data.
		|.XREF|encryption key
		|.BOOK|introDCE
		|.TOPIC|
	|.DEFIN|2|One or more characters used to identify a record and establish
the record's order within an indexed file.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|3|A unique identifier (of type \s12\f(HBkey_t\s12\fH) that names
the particular interprocess communications member.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|4|Identifies the name of the shared library text image.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|5|An identifier within a set of data elements.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|6|A character string that matches a definition in a key table.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|7|For threads, this is an opaque object that can be used by
all threads in a process to assign thread specific values.  Two or
more threads can use the same key, but they set and access different
thread specific data values associated with that key.
		|.XREF|thread
		|.BOOK|OSApplProgGd
		|.TOPIC|
|.TERM|keytab file
|.ACR|
	|.DEFIN|1|A security file that contains the encryption keys for
server processes (for example, DFS processes) that run on the host machine.
Typically, encryption keys for human principals are not stored in a
keytab file.
		|.XREF|encryption key
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|key management facility
|.ACR|
	|.DEFIN|1|A DCE security facility that enables noninteractive
principals to manage their secret keys.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|key pad
|.ACR|
	|.DEFIN|1|A physical grouping of keys on a keyboard such as the numeric
key pad, and the cursor key pad.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|keyboard
|.ACR|
	|.DEFIN|1|An input device consisting of various keys that allows
the user to input data, control cursor and pointer locations, and to
control the dialog with the workstation.
		|.XREF|
		|.BOOK|OSUsersGd
          |.BOOK|MotifStyleGd
		|.TOPIC|
|.TERM|keyboard click
|.ACR|key click
	|.DEFIN|1|Transient pulses or surges on a transmission line set up by the
opening or closing of keying circuit contacts.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|keyboard focus
|.ACR|
     |.DEFIN|1|Indicates the window or component within a window that
receives keyboard input.  It is sometimes called the input focus.
          |.XREF|
          |.BOOK|MotifStyleGd
          |.BOOK|MotifUsersGd
          |.TOPIC|
     |.DEFIN|2|A state of the system that indicates which
component receives keyboard events.  A component is said to have the focus
if keyboard events are sent to that component.
          |.XREF|
          |.BOOK|MotifProgGd
          |.TOPIC|
|.TERM|keyboard traversal
|.ACR|
	|.DEFIN|1|The set of actions, usually invoked from the keyboard,
that cause focus to move from one component to another within an
application or between applications.
		|.XREF|
		|.BOOK|MotifProgGd
		|.TOPIC|
|.TERM|keysym
|.ACR|
	|.DEFIN|1|An encoding of a symbol on a keycap on a keyboard.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|keyword
|.ACR|
	|.DEFIN|1|A predefined word in a programming language. A reserved word.
		|.XREF|
		|.BOOK|OSApplProgGd
		|.TOPIC|
	|.DEFIN|2|In programming languages, a lexical unit that characterizes some
language construct. A keyword normally has the form of an identifier.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|3|A name or symbol that identifies a parameter.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|4|Part of a command operand that consists of a specific character
string.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|keyword argument
|.ACR|
	|.DEFIN|1|A variable assignment that can be made on the command line.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|keyboard navigation
|.ACR|
        |.DEFIN|1|Use of the keyboard to move the active cursor.
                |.XREF|
                |.BOOK|MotifStyleGd
                |.TOPIC|
|.TERM|keyword parameter
|.ACR|
	|.DEFIN|1|A parameter that consists of a keyword, followed by one or more
values.
		|.XREF|positional parameter
		|.BOOK|
		|.TOPIC|
|.TERM|kill
|.ACR|
	|.DEFIN|1|An operating system command that stops a process.
		|.XREF|
		|.BOOK|OSUsersGd
		|.TOPIC|
|.TERM|kill character
|.ACR|
	|.DEFIN|1|Character that deletes a line of characters entered after a
prompt.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|kilobyte
|.ACR|KB
	|.DEFIN|1|A unit of measurement for storage capacity equal
to 1024 (2\u\s-410\s0\d) bytes.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
	|.DEFIN|2|1024 bytes.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|knowledge reference
|.ACR|
	|.DEFIN|1|Knowledge that associates, either directly or
indirectly, a DIT entry with the DSA in which it is located.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|known modules list
|.ACR|
	|.DEFIN|1|The records that represent modules that are being
loaded in a process's address space are placed in the loader context's
\*Eknown modules list\*O.  The order in which modules are placed on
this list is important because it determines the order of symbol
resolution.
		|.XREF|loader context
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|Korn shell
|.ACR|
	|.DEFIN|1|*
		|.XREF|shell
		|.BOOK|OSUsersGd
		|.TOPIC|
|.TERM|kprocs
|.ACR|
	|.DEFIN|1|A kernel parameter that establishes the maximum number of
processes the kernel can run simultaneously.
		|.XREF|
		|.BOOK|
		|.TOPIC|
