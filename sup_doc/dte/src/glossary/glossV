|.# Copyright 1991,1992,1993 Open Software Foundation, Inc.,
|.# Cambridge, Massachusetts
|.# All rights reserved.
|.# 
|.# @OSF_COPYRIGHT@
|.# 
|.# HISTORY
|.# $Log: glossV,v $
|.# Revision 1.1.2.13  1995/05/16  19:44:09  rcb
|.# 	DCE entries updated by buckler
|.# 	[1995/05/16  19:39:09  rcb]
|.#
|.# Revision 1.1.2.12  1994/07/29  14:12:45  bmoy
|.# 	new terminology for 2.0 Motif Style guide
|.# 	[1994/07/29  14:10:51  bmoy]
|.# 
|.# Revision 1.1.2.11  1993/10/28  19:04:40  neilson
|.# 	Added DME terms
|.# 	[1993/10/28  19:01:05  neilson]
|.# 
|.# Revision 1.1.2.10  1993/04/10  00:04:17  bowe
|.# 	Add OSF copyright.
|.# 	[1993/04/10  00:00:02  bowe]
|.# 
|.# Revision 1.1.2.9  1993/02/23  20:16:20  steiner
|.# 	Broke the "virtual file system" definition into two definitions:
|.# 	"Virtual File System" for DCE (we use caps) and "virtual file
|.# 	system" for the OSF/1 architecture book (doesn't use caps).
|.# 	[1993/02/23  20:16:05  steiner]
|.# 
|.# Revision 1.1.2.8  1993/02/19  18:30:21  billb
|.# 	Incorporated editorial and technical comments in preparation for
|.# 	releasing Design Guide to Prentice Hall.
|.# 	[1993/02/19  18:25:26  billb]
|.# 
|.# Revision 1.1.2.7  1993/01/14  02:57:55  billb
|.# 	No changes.
|.# 	[1993/01/14  02:57:28  billb]
|.# 
|.# Revision 1.1.2.6  1993/01/14  01:54:09  billb
|.# 	Fixed entry for "Virtual Machine."
|.# 	[1993/01/14  01:49:32  billb]
|.# 
|.# Revision 1.1.2.5  1993/01/13  17:18:58  billb
|.# 	Added the following entries for the Design Guide:
|.# 
|.# 	validity fault
|.# 	VFS
|.# 	virtual address
|.# 	virtual address space
|.# 	virtual file system
|.# 	virtual machine
|.# 	virtual memory
|.# 	virtual memory object
|.# 	virtual page
|.# 	virtual-to-physical table
|.# 	VM object
|.# 	vnode
|.# 	vnode page
|.# 	vstruct
|.# 	[1993/01/13  16:53:14  billb]
|.# 
|.# Revision 1.1.2.4  1993/01/07  15:48:51  bmoy
|.# 	Fixed Volume Group Reserved Area (VGRA), Volume Group Status Area
|.# 	(VGSA), volume, Volume Group Descriptor Area (VGDA) terms for
|.# 	DesignofOS.
|.# 	[1993/01/07  15:38:38  bmoy]
|.# 
|.# Revision 1.1.2.3  1992/11/02  18:50:51  rcb
|.# 	{edit,final,R1.1.2}
|.# 	Made corrections for Sys Admin Guide.
|.# 	[1992/11/02  18:47:09  rcb]
|.# 
|.# Revision 1.1.2.2  1992/07/15  19:47:52  bowe
|.# 	initial revision
|.# 	[1992/07/15  19:41:38  bowe]
|.# 
|.# $EndLog$
|.# 
|.# $Header: /u1/rcs/dte/glossary/glossV,v 1.1.2.13 1995/05/16 19:44:09 rcb Exp $
|.# 
|.TERM|V file
|.ACR|
	|.DEFIN|1|DFS: With disk caches, a file on the disk that, by
default, can hold up to 64 kilobytes of cached data. A maximum of
32,000 V files can be used for one disk cache.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|V.24
|.ACR|
	|.DEFIN|1|The 24th CCITT recommendation in the V series, listing the
definitions for interchange circuits between a DTE and a DCE.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|V.35
|.ACR|
	|.DEFIN|1|The 35th CCITT recommendation in the V series, defining data
transmission at 48 kilobits per second using 60-180 kHz group band circuits.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|valid
|.ACR|
	|.DEFIN|1|Allowed.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|2|True, or conforming to an appropriate standard or authority.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|validity fault
|.ACR|
	|.DEFIN|1|A page fault that is generated when a thread
attempts to reference a page that is not in resident memory.
		|.XREF|page fault
		|.XREF|page fault handler
		|.XREF|protection fault
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|value
|.ACR|
	|.DEFIN|1|XOM: An arbitrarily complex information item that can be
viewed as a characteristic or property of an object.
		|.XREF|attribute value
		|.BOOK|introDCE
		|.TOPIC|
	|.DEFIN|2|A set of characters or a quantity associated with a parameter or
name.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|3|In programming, the contents of a variable or a storage location.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|4|A specific occurrence of an attribute, such as blue for the
attribute color.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|5|A quantity assigned to a constant, variable, parameter, or
symbol.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|value choice
|.ACR|
        |.DEFIN|1|A type of choice that allows the user to indicate whether a
value is set or unset (or in some circumstances, indeterminate).
Value choices can be presented, for example, in list boxes,
radio buttons, check boxes, value set, and menus.
                |.XREF|
                |.BOOK|MotifStyleGd
                |.TOPIC|
|.TERM|value set
|.ACR|
        |.DEFIN|1|A control that contains a mutually exclusive set of choices,
each of which is usually labeled graphically.
                |.XREF|
                |.BOOK|MotifStyleGd
                |.TOPIC|
|.TERM|variable
|.ACR|
	|.DEFIN|1|A name used to represent a data item whose value can change
while the program is running. 
		|.XREF|
		|.BOOK|OSUsersGd
		|.TOPIC|
	|.DEFIN|2|In programming languages, a language object that can take
different values at different times.
		|.XREF|
		|.BOOK|OSUsersGd
		|.TOPIC|
	|.DEFIN|3|A quantity that can assume any of a given set of values.
		|.XREF|
		|.BOOK|OSUsersGd
		|.TOPIC|
|.TERM|variable substitution
|.ACR|
	|.DEFIN|1|The ability to change and display the values of variables in a
string, replacing a name of a variable with the value it represents. In
the\s12\f(HB sh \s12\fHshell command language, variable substitution is
denoted by a $ (dollar sign).
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|varying array
|.ACR|
	|.DEFIN|1|RPC: An array whose elements do not all need to be
transmitted during a remote procedure call.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|VC
|.ACR|
	|.DEFIN|1|*
		|.XREF|virtual circuit\(LI\s12\f(HB.
		|.BOOK|
		|.TOPIC|
|.TERM|vector
|.ACR|
	|.DEFIN|1|RPC: An array of other structures and the number
of array items.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
	|.DEFIN|2|An array of one dimension.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|3|A quantity usually characterized by an ordered set of numbers.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|4|In computer graphics, a directed line segment.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|vendor ID
|.ACR|
	|.DEFIN|1|In LMS, the identifier of a vendor of licensed products
Using vendor IDs, license servers can distinguish among any number of
vendors established in a network.
		|.XREF|
		|.BOOK|DMEintro
		|.BOOK|DMEadmin
		|.BOOK|DMEappdev
		|.TOPIC|
|.TERM|vendor password
|.ACR|
	|.DEFIN|1|In LMS, a string encoded with information about a vendor
that, together with a vendor ID, establishes the vendor of a licensed
product in a license database.
		|.XREF|
		|.BOOK|DMEintro
		|.BOOK|DMEadmin
		|.TOPIC|
|.TERM|verification
|.ACR|
	|.DEFIN|1|In SDS, the analysis performed by the \*Lswverify\*O command,
including (but not limited to) checking software objects for
completeness and proper checksums.
		|.XREF|
		|.BOOK|DMEintro
		|.BOOK|DMEadmin
		|.BOOK|DMEappdev
		|.TOPIC|
|.TERM|verify
|.ACR|
	|.DEFIN|1|To confirm the correctness.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|2|To determine whether a transcription of data or other operation
has been accomplished accurately.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|version
|.ACR|
	|.DEFIN|1|In addition to an object's name, information that identifies
different modification levels of the same logical object.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|version identifier
|.ACR|
	|.DEFIN|1|In LMS, a string that identifies a version of a product; by
means of version identifiers, the license server distinguishes among
different versions of a product.
		|.XREF|
		|.BOOK|DMEintro
		|.BOOK|DMEappdev
		|.TOPIC|
|.TERM|vertical navigation
|.ACR|
        |.DEFIN|1|Keyboard navigation which moves the cursor in a
vertical direction.
                |.XREF|
                |.BOOK|MotifStyleGd
                |.TOPIC|
|.TERM|VFS
|.ACR|
	|.DEFIN|1|*
		|.XREF|Virtual File System
		|.BOOK|introDCE
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|VFS+
|.ACR|
	|.DEFIN|1|DFS: Extensions to the standard UNIX Virtual File
System (VFS).
		|.XREF|Virtual File System
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|VGDA
|.ACR|
	|.DEFIN|1|Physical volume data area that contains essential
information for the initialization of the Logical Volume Manager.
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|volume group reserved area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|view
|.ACR|
        |.DEFIN|1|A presentation of (a) information by an application in the
viewing area of a window, or of (b) the representation of an object
within a window.
                |.XREF|
                |.BOOK|MotifStyleGd
                |.TOPIC|
|.TERM|viewing area
|.ACR|
        |.DEFIN|1|One or more controls that together present a coherent
view of data or information in the window.
                |.XREF|
                |.BOOK|MotifStyleGd
                |.TOPIC|
|.TERM|visible signal
|.ACR|
        |.DEFIN|1|A transient but prominent change in the visual
appearance of an element of the interface, usually generated by the
operating environment, for use as a visible warning signal.  For
example, if the screen flashed a few times or a visible window blinked
(disappeared for a moment and reappeared), the user would be alert.
Generally used in an environment in which just an audible alert would
be ineffective.
                |.XREF|
                |.BOOK|MotifStyleGd
                |.TOPIC|
|.TERM|Volume Group Reserved Area
|.ACR|VGRA
	|.DEFIN|1|Physical volume data area that describes the volume
group containing the current physical volume.
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|physical volume reserved area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|Volume Group Status Area
|.ACR|VGSA
	|.DEFIN|1|Physical volume data area contained in the VGRA.
This area describes and maintains the current state of physical
volumes in the volume grou.
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|volume group reserved area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual address
|.ACR|
	|.DEFIN|1|An address that specifies a location in a virtual
address space.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual address space
|.ACR|
	|.DEFIN|1|A contiguous range of virtual memory.  In UNIX
systems, each process has a single virtual address space that contains
the process's executable text and data.
		|.XREF|address translation
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual binding
|.ACR|
	|.DEFIN|1|An assocation between an abstract key or pointer
button, known as a virtual key or virtual button, and a physical key or
button on the display.
		|.XREF|
		|.BOOK|MotifProgGd
		|.TOPIC|
|.TERM|virtual button
|.ACR|
     |.DEFIN|1|A model, used by this style guide, which defines mouse
button bindings independent of the actual number of buttons on the mouse.
          |.XREF|
          |.BOOK|MotifStyleGd
          |.TOPIC|
     |.DEFIN|2|An abstract representation of a pointer button that is
independent of any physical button.  A virtual button is associated with
a physical button by means of a virtual binding.
          |.XREF|
          |.BOOK|MotifProgGd
          |.TOPIC|
|.TERM|virtual circuit
|.ACR|VC
	|.DEFIN|1|In X.25 communications, those facilities provided by a network
that give the appearance to the user of an actual connection. (TC97)
		|.XREF|switched virtual circuit
		|.XREF|permanent virtual circuit
		|.BOOK|
		|.TOPIC|
|.TERM|virtual device
|.ACR|
	|.DEFIN|1|A device that appears to the user as a separate entity, but is
actually a shared portion of a real device.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|virtual device driver
|.ACR|VDD
	|.DEFIN|1|*
		|.XREF|device handler
		|.BOOK|
		|.TOPIC|
|.TERM|Virtual File System
|.ACR|VFS
	|.DEFIN|1|DFS: A level of abstraction above the specific interfaces
to various types of file systems. It is used to avoid having to change
kernel code to handle low-level, system-specific differences.
		|.XREF|
		|.BOOK|introDCE
		|.TOPIC|
|.TERM|virtual file system
|.ACR|VFS
	|.DEFIN|1|In OSF/1, a kernel subsystem that implements a level
of abstraction above the specific interfaces to various types of file
systems.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual interrupt handler
|.ACR|
	|.DEFIN|1|The second-level interrupt handler of a device head.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|virtual key
|.ACR|
	|.DEFIN|1|An abstract representation of a key that is
independent of any physical key.  A virtual key is associated with a
physical key by means of a virtual binding.
		|.XREF|
		|.BOOK|MotifProgGd
		|.TOPIC|
|.TERM|virtual machine
|.ACR|
	|.DEFIN|1|A functional simulation of a computer and its
related devices. A virtual machine usually includes an operating
system and one or more virtual devices.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual memory
|.ACR|
	|.DEFIN|1|Addressable space that appears to be real memory.
From virtual memory, virtual addresses are mapped into real memory
locations. The size of virtual memory is limited by the addressing
scheme of the computer system and by the amount of auxiliary storage
available, not by the actual number of main storage locations.
Contrast with \fBreal memory\fP.
		|.XREF|
		|.BOOK|OSPortGd
		|.BOOK|OSAdminGd
		|.TOPIC|
	|.DEFIN|1|Addressable space that appears to be real memory.
From virtual memory, virtual addresses are mapped into real memory
locations. The size of virtual memory is limited by the addressing
scheme of the system's hardware.
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual memory object (VM object)
|.ACR|
	|.DEFIN|1|A kernel data structure that represents a set of
virtual pages that are mapped into one or more virtual address spaces.
		|.XREF|memory object
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual page
|.ACR|
	|.DEFIN|1|A software abstraction that the kernel uses to
manage the system's memory resources.  Each system has a
system-specific virtual page size that either matches the hardware's
page frame size or is a multiple of two of that size.
		|.XREF|page frame
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|virtual storage
|.ACR|
	|.DEFIN|1|See Virtual Memory.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|virtual-to-physical table
|.ACR|
	|.DEFIN|1|In OSF/1, the kernel's resident page table.  It is a
hash table that contains an entry for each virtual page that is in
resident memory.  The table's hash function is based on the tuple
which specifies the virtual page's VM object and the page's offset
within the VM object (<object,offset>).
		|.XREF|
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|visible
|.ACR|
	|.DEFIN|1|A region of a window that is viewable and not occluded on the
screen by the user.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|VM
|.ACR|
	|.DEFIN|1|*
		|.XREF|virtual memory
		|.BOOK|
		|.TOPIC|
|.TERM|VM object
|.ACR|
	|.DEFIN|1|*
		|.XREF|virtual memory object
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|vnode
|.ACR|
	|.DEFIN|1|DFS: The structure used to access the inode or anode
structure associated with a specific file through a virtual file system
interface. The term vnode stands for virtual node.
		|.XREF|anode
		|.BOOK|introDCE
		|.TOPIC|
	|.DEFIN|2|A data structure used by the kernel to manage a
file or directory.  There is a unique vnode allocated for each of the
system's active files and directories.  Each vnode represents an
underlying, file-system-specific data structure.  The vnode construct
allows the kernel's virtual file system to manage different file
systems through a uniform interface.
		|.XREF|default pager
		|.XREF|memory object
		|.XREF|paging file
		|.XREF|vnode
		|.XREF|vstruct
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|vnode pager
|.ACR|
	|.DEFIN|1|The kernel's default pager, and the pager
that manages paging operations on mapped files.  The vnode pager is so
named because the memory objects it manages are represented by vnodes.
		|.XREF|memory object
		|.XREF|paging file
		|.XREF|vnode
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|voice-grade telephone line
|.ACR|
	|.DEFIN|1|A telephone line normally used for transmission of voice
communications. The line requires a modem for data communications.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|volatile attribute
|.ACR|
	|.DEFIN|1|The keyword \s12\f(HBvolatile\s12\fH located in a definition,
declaration, or cast. It causes the C language compiler to place the value of
the data object in storage and to reload this value at each reference to the
data object.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|volatile register
|.ACR|
	|.DEFIN|1|In a C language program, a register whose value on entry need
not be preserved when the called routine returns.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|volgrp
|.ACR|
	|.DEFIN|1|Structure which is allocated when the volume group< is
activated.  This structure contains general information about a volume
group.
		|.XREF|Logical Volume Manager
		|.XREF|physical volum
		|.XREF|logical volume
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|volume
|.ACR|
	|.DEFIN|1|A certain portion of data, together with its data carrier, that
can be handled conveniently as a unit.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|2|The level of sound of the system.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|3|The physical storage location of a file system.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|4|A block storage devicie.  Corresponds to a disk
driver, or a disk partition in a traditional UNIX system.
		|.XREF|Logical Volume Manager
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|volume group
|.ACR|
	|.DEFIN|1|A collection of physical volumes (read-write hard drives) of
varying size and type.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|1|A set of physical and logical volumes, and the
mappings between them.  Logical volumes can only map physical volumes
that are in the same volume group.
		|.XREF|physical volume
		|.XREF|logical volume
		|.XREF|Logical Volume Manager
		|.BOOK|DesignofOS
		|.BOOK|OSAdminGd
		|.TOPIC|
|.TERM|volume group
|.ACR|
	|.DEFIN|1|A collection of physical volumes (read-write hard drives) of
varying size and type.
		|.XREF|
		|.BOOK|
		|.TOPIC|
	|.DEFIN|1|Set of physical and logical volumes, and the mappings
between them.  Logical volumes can only map physical volumes that are
in the same volume group.
		|.XREF|Physical Volume
		|.XREF|Logical Volume Manager
		|.BOOK|DesignofOS
		|.BOOK|OSAdminGd
		|.TOPIC|
|.TERM|volume group descriptor area
|.ACR|VGDA
	|.DEFIN|1|Physical volume data area contained in the VGRA.
This area is used at the activation of the volume group.  It contains
configuration information such as the volume group ID number, the
maximum number of physical volumes allowed in the volume group, the
number of currently installed physical volumes in the group, and
lists and descriptions of logical and physical volumes in the volume
group.
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|volume group reserved area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|volume group header
|.ACR|
	|.DEFIN|1|Volume group descriptor area field that contains global
information about the volume group.
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|volume group descriptor area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|volume group reserved area
|.ACR|VGRA
	|.DEFIN|1|Physical volume data area that contains information
that the Logical Volume Manager needs to know about the physical
volume (and the volume group to which the physical volume belongs).
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|physical volume reserved area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|volume group status area
|.ACR|VGSA
	|.DEFIN|1|Physical volume data area used to track the validity and
availability of the physical volumes.
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|volume group reserved area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|volume group trailer
|.ACR|
	|.DEFIN|1|Volume group descriptor area field that contains a
timestamp value describing when the volume group descriptor was last updated.
		|.XREF|Logical Volume Manager
		|.XREF|physical volume
		|.XREF|volume group descriptor area
		|.BOOK|DesignofOS
		|.TOPIC|
|.TERM|Volume ID
|.ACR|Vol ID
	|.DEFIN|1|A series of characters, recorded on the disk, used to identify
the disk to the user and to the system.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|volume label
|.ACR|
	|.DEFIN|1|An area on tape or disk that is used to identify the tape volume
and its owner.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|VRC
|.ACR|
	|.DEFIN|1|Vertical redundancy check.
		|.XREF|
		|.BOOK|
		|.TOPIC|
|.TERM|vstruct
|.ACR|
	|.DEFIN|1|A data structure that the vnode pager uses to manage
paging operations on a memory object.
		|.XREF|memory object
		|.XREF|paging file
		|.XREF|vnode pager
		|.BOOK|DesignofOS
		|.TOPIC|
