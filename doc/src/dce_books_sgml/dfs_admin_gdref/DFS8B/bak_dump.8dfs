<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: bak_dump.8dfs,v $
# Revision 1.1.2.4  1996/11/07  18:40:47  weir
# 	Cleaned up history
# 	[1996/11/07  18:40:27  weir]
#
# Revision 1.1.2.3  1996/10/28  17:43:27  carrig
# 	{enh,R1.2.2}
# 	Ready for editing
# 	[1996/10/28  17:39:17  carrig]
# 
# Revision 1.1.2.2  1996/10/24  19:52:30  carrig
# 	{enh,R1.2.2}
# 	Fixed VarLists
# 	[1996/10/24  19:52:06  carrig]
# 
# Revision 1.1.2.1  1996/10/22  20:53:44  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/10/22  20:50:03  wardr]
# 
# Revision 1.1.1.2  1996/10/22  20:50:03  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DFSAGR.MAN33.rsml.1">
<RefMeta>
<RefEntryTitle>bak dump</RefEntryTitle>
<ManVolNum>8dfs</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Command>bak dump</Command></RefName>
<RefPurpose><Command>bak dump </Command> &minus; Dumps a specific fileset family at a specific dump level
</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  Copyright (C) 1989, 1991, 1992, 1993 Transarc Corporation-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- HISTORY-->
<!-- Revision 1.1.12.1  1996/05/14  20:26:42  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/14  20:22:01  wardr]-->
<!---->
<!-- Revision 1.1.10.2  1995/12/29  17:41:10  wfl-->
<!-- 	{edit, R1.2.1}-->
<!-- 	made copy edits-->
<!-- 	[1995/12/29  17:40:48  wfl]-->
<!-- -->
<!-- Revision 1.1.10.1  1995/10/04  13:49:57  wfl-->
<!-- 	{def, 13140, R1.2.1}-->
<!-- 	Fixed quotes in change markers-->
<!-- 	[1995/10/04  13:49:33  wfl]-->
<!-- -->
<!-- Revision 1.1.8.6  1995/07/13  18:04:37  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/07/13  18:03:57  buckler]-->
<!-- -->
<!-- Revision 1.1.8.5  1994/05/10  20:18:48  jeff-->
<!-- 	Fix formatting error.-->
<!-- 	[1994/05/10  20:18:23  jeff]-->
<!-- -->
<!-- Revision 1.1.8.4  1993/10/08  15:01:14  weir-->
<!-- 	Inserted Transarc copyright-->
<!-- 	[1993/10/08  14:58:01  weir]-->
<!-- -->
<!-- Revision 1.1.8.3  1993/09/23  13:24:16  kdu-->
<!-- 	{def,7715,R1.0.3}-->
<!-- 	Examples of sysname.-->
<!-- 	[1993/09/23  13:23:39  kdu]-->
<!-- -->
<!-- Revision 1.1.8.2  1993/07/31  02:10:10  tmw-->
<!-- 	Added index entries for second version of master index.-->
<!-- 	[1993/07/31  02:02:18  tmw]-->
<!-- -->
<!-- Revision 1.1.6.5  1993/02/24  00:25:02  jeff-->
<!-- 	Fix for defects 5795, 6832, and 6835.-->
<!-- 	[1993/02/24  00:16:56  jeff]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/02/09  01:38:02  jeff-->
<!-- 	Fix for defect 7156, correct dump/restore restrictions.-->
<!-- 	[1993/02/09  01:35:58  jeff]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/28  02:12:05  dbelch-->
<!-- 	Embedding copyright notice-->
<!-- 	[1993/01/28  00:46:06  dbelch]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/09/10  15:14:59  weir-->
<!-- 	Removed change bar macros; moved into 1.0.2doc tree-->
<!-- 	[1992/09/10  14:10:32  weir]-->
<!-- -->
<!-- Revision 1.1.4.2  1992/09/08  18:53:42  casey-->
<!-- 	Prentice Hall production-->
<!-- 	[1992/09/08  16:47:11  casey]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/09  17:19:06  jeff-->
<!-- 	Verified and/or modified italics and other editorial-->
<!-- 	aspects of the file.-->
<!-- 	[1992/05/09  17:16:58  jeff]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/04/10  17:33:31  jeff-->
<!-- 	Included appropriate references to new bak deletedump command.  Also-->
<!-- 	fixed some small formatting problems (italics).-->
<!-- 	[1992/04/10  16:50:31  jeff]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:52:56  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--DOCUMENTSTYLE [12pt]{book}-->
<IndexTerm Id="DFSAGR.MAN33.indx.1">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>dump</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.MAN33.indx.2">
<Primary>fileset families</Primary>
<Secondary>dumping</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.MAN33.indx.3">
<Primary>dump sets</Primary>
<Secondary>creating</Secondary>
</IndexTerm>
<RefSynopsisDiv>
<CmdSynopsis>
<Command>bak dump</Command>
<Arg Choice="plain"><Option>family</Option><Replaceable>fileset_family_name</Replaceable></Arg>
<Arg Choice="plain"><Option>level</Option><Replaceable>dump_level</Replaceable></Arg>
<Arg Choice="opt"><Option>tcid</Option><Replaceable>tc_number</Replaceable></Arg>
<Arg Choice="opt"><Option>noaction</Option></Arg>
<Arg Choice="opt"><Option>help</Option></Arg>
</CmdSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>OPTIONS</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Option>family</Option> <Symbol Role="Variable">fileset_family_name</Symbol></Term>
<ListItem>
<Para>Names the fileset family (already defined in the Backup Database using the
<Command>bak addftfamily</Command> and <Command>bak addftentry</Command> commands) to be dumped.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>level</Option> <Symbol Role="Variable">dump_level</Symbol></Term>
<ListItem>
<Para>Indicates the dump level (already defined in the Backup Database using the
<Command>bak adddump</Command> command) to be used in dumping the fileset family.  Provide
a full pathname for the dump level, including all necessary / (slashes).  This
option determines whether the dump is full or incremental and, in the latter
case, determines which dump level serves as the parent for the dump.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>tcid</Option> <Symbol Role="Variable">tc_number</Symbol></Term>
<ListItem>
<Para>Specifies the Tape Coordinator ID (TCID) of the Tape Coordinator for the
tape drive containing the tape.  If omitted, it defaults to <Literal>0</Literal> (zero).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>noaction</Option></Term>
<ListItem>
<Para>Displays all filesets that would be included
in the indicated dump without actually performing the dump.  This lets you
check a fileset family's size before actually dumping it so that you can
calculate the correct number of tapes needed.  Specify all other options
as you would to actually perform the operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>help</Option></Term>
<ListItem>
<Para>Prints the online help for this command.  All other valid options specified
with this option are ignored.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>The <Command>bak dump</Command> command dumps the fileset family specified by <Option>family</Option>
at the dump level specified as a pathname by <Option>level</Option>.  There are two types
of dumps:
</Para>
<ItemizedList>
<ListItem>
<Para>A <Literal>full dump</Literal> records the structure of all directories in each fileset in
the fileset family and includes all the data in each fileset.
</Para>
</ListItem>
<ListItem>
<Para>An <Literal>incremental dump</Literal> also records the structure of all directories in
each fileset in the fileset family, but it includes data from only those files
in the filesets that changed since the fileset family was dumped at the
parent dump level; such files have modification time stamps later
than the date and time at which the fileset family was dumped at the parent
dump level.  The program uses the next-to-last element in the <Option>level</Option>
pathname as the parent dump and consults the Backup Database to learn the date
and time at which this fileset family was last dumped at that level.
</Para>
<Para>If the program cannot locate a dump set dumped at a parent dump level, it looks
recursively in the Backup Database for a dump set created at the dump level one
higher in the pathname.  If it can find no dump set created at a higher dump
level in the hierarchy, it creates a full dump set.
</Para>
</ListItem>
</ItemizedList>
<Para>If the Backup System is unable to access a fileset (for example, because of a
File Server machine or Fileset Server outage), it attempts to access the
fileset three times over the course of the operation.  If it cannot access the
fileset after the third attempt, it omits the fileset from the dump instead
of stopping the dump entirely.  If the Tape Coordinator performing the dump was
initialized at debug level 1, a report on the failure to include the fileset
appears in the Tape Coordinator's monitoring window.  The Tape Coordinator's
error file also records the fileset's omission.
</Para>
<Para>If the failure to access a fileset occurs during a full dump, the next
incremental dump of the fileset includes the entire fileset.  If the failure
occurs during an incremental dump, the next incremental dump of the fileset
includes all files modified since the fileset was last included in a dump set.
</Para>
<Para>Before writing the dump to tape, the Tape Coordinator checks that the tape in
the indicated tape drive has an acceptable name on its label.  If the name on
the label is not acceptable, the Backup System prompts for the correct tape.
There are three acceptable types of names:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>The tape is labeled
<Symbol Role="Variable">fileset_family_name.dump_level.index</Symbol>, where <Symbol Role="Variable">fileset_family_name</Symbol>
and <Symbol Role="Variable">dump_level</Symbol> match the values provided on the command line (with
<Option>family</Option> and <Option>level</Option>).  The <Symbol Role="Variable">dump_level</Symbol> is the last component of
the specified dump level; the <Symbol Role="Variable">index</Symbol> distinguishes this tape from others
that contain this same dump set.  If a single tape contains the entire dump set,
its index is 1.
</Para>
</ListItem>
<ListItem>
<Para>The tape is labeled as empty.  The Backup System labels the tape with the
correct name of the form <Symbol Role="Variable">fileset_family_name.dump_level.index</Symbol>.
</Para>
</ListItem>
<ListItem>
<Para>The tape is not labeled because it has never been used in the Backup System.
The Backup System labels the tape with the correct name of the form
<Symbol Role="Variable">fileset_family_name.dump_level.index</Symbol>.
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>If it finds that the name on the tape label is acceptable, the Backup System
checks the expiration date on the tape before it writes data to it.  If the
expiration date has not expired, the system does not write data to the tape
unless the issuer relabels the tape with the <Command>bak labeltape</Command> command
(because the label records the expiration date, erasing the label removes the
obstacle to overwriting).  If the expiration date has expired or if no
expiration date is associated with the tape, the system overwrites the contents
of the tape without question (given that the tape has an acceptable name).
</Para>
<Para>The tape label also tells the Tape Coordinator the size of the tape.  However,
the Tape Coordinator applies the capacity specified in the <Literal>TapeConfig</Literal>
file for the tape drive containing the tape to any tape, regardless of the
size specified in the tape's label.  Make sure the tapes are at least as large
as the tape size listed in the <Literal>TapeConfig</Literal> file.  If a tape is larger,
some of its capacity simply may not be used for the dump; if it is smaller,
the dump may fail, but only after the Backup System fills the tape and
determines that the tape is too small for the drive.
</Para>
<Para>The Backup System does not require that a fileset fit entirely on a single
tape.  If the Tape Coordinator reaches the end of a tape while dumping a
fileset, it puts the remaining data onto the next tape.  The Backup Database
automatically records that the fileset is on multiple tapes.
</Para>
<Para>The <Option>noaction</Option> option instructs the program to display a list of the
filesets to be included in a dump set without actually performing the dump.
This allows the issuer to determine how large the filesets are before actually
dumping them; the issuer can then better calculate the required number of
tapes.  The command ignores a value specified with the <Option>tcid</Option> option if
the <Option>noaction</Option> option is used with the command.
</Para>
<Para>The <Command>bak restoreft</Command>, <Command>bak restoredisk</Command>, and <Command>bak restoreftfamily</Command>
commands can be used to restore data dumped with the <Command>bak dump</Command> command.
You can use the commands to restore data to any type of file system (DCE LFS
or non-LFS), regardless of the type of file system from which it was dumped.
Thus, you can dump and restore data between DCE LFS and non-LFS file systems,
and between different types of non-LFS file systems. (See the documentation
for the <Command>bak restoreft</Command>, <Command>bak restoredisk</Command>, and <Command>bak
restoreftfamily</Command> commands for more information about restoring data; see
your vendor's documentation to verify the level of support for dump and
restore operations between different types of file systems.)
<?sml-break><?sml-need 2.5i></Para>
<RefSect2>
<Title>Privilege Required</Title>
<Para>The issuer must be listed in the <Filename>admin.bak</Filename> files on all Backup Database
machines.  The issuer must also be listed in the <Filename>admin.fl</Filename> files on all
Fileset Database machines and in the <Filename>admin.ft</Filename> files on all File Server
machines from which filesets are to be dumped.
</Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>OUTPUT</Title>
<Para>The following header is displayed in the command window followed by a list of
the filesets, identified by name and fileset ID number, to be included in the
dump set:
</Para>
<InformalExample>
<Para><ProgramListing>Preparing to dump the following filesets: <Symbol Role="Variable">list of filesets</Symbol> 
</ProgramListing></Para>
</InformalExample>
<Para>The following message indicates that the Backup System has passed the dump
request to the indicated Tape Coordinator: 
</Para>
<InformalExample>
<Para><ProgramListing>Starting dump.
</ProgramListing></Para>
</InformalExample>
<Para>It is followed by a message that reports the unique dump ID number associated
with this dump operation:
</Para>
<InformalExample>
<Para><ProgramListing>Dump ID of dump <Symbol Role="Variable">fileset_family_name.dump_level</Symbol>:<Replaceable> dump_ID_number</Replaceable>
</ProgramListing></Para>
</InformalExample>
<Para>The dump ID also appears in the Tape Coordinator monitoring window if the
<Command>butc</Command> command is issued with debug level 1. The dump ID is not the same
as the job ID number visible with <Literal>(bak) jobs</Literal> when <Command>bak dump</Command> is
issued in interactive mode.
</Para>
<Para>If the issuer includes the <Option>noaction</Option> option, the output is
</Para>
<InformalExample>
<Para><ProgramListing role="page-wide">Starting dump of fileset family '<Symbol Role="Variable">fileset family</Symbol>' (dump level '<FirstTerm>dump level</FirstTerm>')
Total number of filesets : <Symbol Role="Variable">number</Symbol> 
Would have dumped the following filesets:
 &ensp;&ensp;&ensp;&ensp;&ensp;<Symbol Role="Variable">list of filesets</Symbol> 
</ProgramListing></Para>
</InformalExample>
</RefSect1>
<RefSect1>
<Title>EXAMPLES</Title>
<Para>The following command dumps the filesets in the fileset family <Literal>user</Literal>
according to the dump level <Literal>/full/week2/monday</Literal>.  The issuer places the
necessary tapes in the drive with TCID 5.
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Literal>bak dump user /full/week2/monday 5</Literal>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>Preparing to dump the following filesets:
user.jones.bak 387623900
user.pat.bak 486219245
user.smith.bak 597315841
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;.
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;.
Starting dump.
Dump ID of dump user.monday: 34
</ProgramListing></Para>
</InformalExample>
<Para>The following command displays the list of filesets to be dumped when the
<Literal>sys.rs_aix32</Literal> fileset family is dumped at the <Literal>/full</Literal> dump level:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Literal>bak dump sys.rs_aix32 /full -n</Literal>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>Starting dump of fileset family 'sys.rs_aix32' (dump level '/full')
Total number of filesets : 24
Would have dumped the following filesets:
 &ensp;&ensp;&ensp;&ensp;&ensp;rs_aix32 124857238
 &ensp;&ensp;&ensp;&ensp;&ensp;rs_aix32.bin 124857241
 &ensp;&ensp;&ensp;&ensp;&ensp;rs_aix32.etc 124857246
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;.&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;.
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;.&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;.
</ProgramListing></Para>
</InformalExample>
</RefSect1>
<RefSect1>
<Title>RELATED INFORMATION</Title>
<!--no-op:  l-->
<Para>Commands:
<Literal>bak&ensp;adddump(8dfs)</Literal>,
<Literal>bak&ensp;addftentry(8dfs)</Literal>,
<Literal>bak&ensp;addftfamily(8dfs)</Literal>,
<Literal>bak&ensp;deletedump(8dfs)</Literal>,
<Literal>bak&ensp;dumpinfo(8dfs)</Literal>,
<Literal>bak&ensp;ftinfo(8dfs)</Literal>,
<Literal>bak&ensp;labeltape(8dfs)</Literal>,
<Literal>bak&ensp;lsdumps(8dfs)</Literal>,
<Literal>bak&ensp;readlabel(8dfs)</Literal>,
<Literal>bak&ensp;restoredisk(8dfs)</Literal>,
<Literal>bak&ensp;restoreft(8dfs)</Literal>,
<Literal>bak&ensp;rmdump(8dfs)</Literal>,
<Literal>bak&ensp;rmftfamily(8dfs)</Literal>.
<Literal>bak restoreftfamily(8dfs)</Literal>,
<!--no-op:  b-->
<IndexTerm Id="DFSAGR.MAN33.indx.4" SpanEnd="DFSAGR.MAN33.indx.1"><IndexTerm Id="DFSAGR.MAN33.indx.5" SpanEnd="DFSAGR.MAN33.indx.2"><IndexTerm Id="DFSAGR.MAN33.indx.6" SpanEnd="DFSAGR.MAN33.indx.3">
</Para>
</RefSect1>
<!--+ 10/19/96 18:43:16
    | tagMorph:  $Id: bak_dump.8dfs,v 1.1.2.4 1996/11/07 18:40:47 weir Exp $
    | tagMorph library:  $Id: bak_dump.8dfs,v 1.1.2.4 1996/11/07 18:40:47 weir Exp $
    | sml-to-docbook:  1.23
    +-->
</RefEntry>
