<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: backrest.sgm,v $
# Revision 1.1.2.6  1996/12/15  23:01:42  wardr
# 	{edit,R1.2.2}
# 	[D[DFiformatting problems before penultimate build
# 	[1996/12/15  23:00:01  wardr]
#
# Revision 1.1.2.5  1996/12/14  23:14:03  wardr
# 	{edit,R1.2.2}
# 	Fixed figure problems
# 	[1996/12/14  23:12:19  wardr]
# 
# Revision 1.1.2.4  1996/11/06  18:46:53  weir
# 	Cleaned up history
# 	[1996/11/06  18:45:42  weir]
# 
# Revision 1.1.2.3  1996/10/28  17:33:38  carrig
# 	{enh,R1.2.2}
# 	Ready for editor
# 	[1996/10/28  17:19:23  carrig]
# 
# Revision 1.1.2.2  1996/10/24  20:10:13  carrig
# 	{enh,R1.2.2}
# 	Fixed tables
# 	[1996/10/24  20:08:10  carrig]
# 
# Revision 1.1.2.1  1996/10/22  20:42:31  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/10/22  20:40:55  wardr]
# 
# Revision 1.1.1.2  1996/10/22  20:40:55  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<!---->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!-- src directory for the full copyright text.-->
<!---->
<!---->
<!-- HISTORY-->
<!-- Revision 1.1.10.1  1996/05/14  19:52:02  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/14  19:50:55  wardr]-->
<!---->
<!-- Revision 1.1.8.4  1995/12/29  17:11:38  wfl-->
<!-- 	{edit, R1.2.1}-->
<!-- 	Made copy edits-->
<!-- 	[1995/12/29  17:10:25  wfl]-->
<!-- -->
<!-- Revision 1.1.8.3  1995/10/13  14:49:06  wfl-->
<!-- 	{edit,R1.2.1}-->
<!-- 	Fixed Change Bar Problem-->
<!-- 	[1995/10/13  14:48:18  wfl]-->
<!-- -->
<!-- Revision 1.1.8.2  1995/10/04  15:52:50  wfl-->
<!-- 	{def, 13140, R1.2.1}-->
<!-- 	Fixed quotes in change markers-->
<!-- 	[1995/10/04  15:52:28  wfl]-->
<!-- -->
<!-- Revision 1.1.8.1  1995/09/16  16:01:33  wfl-->
<!-- 	{enh,13106,R1.2.1}-->
<!-- 	Update backup system-->
<!-- 	{enh,13112,R2.2.1}-->
<!-- 	Add bak_restoreftfamily command-->
<!-- 	[1995/09/16  16:00:40  wfl]-->
<!-- -->
<!-- Revision 1.1.6.11  1995/07/24  18:42:32  weir-->
<!-- 	Prentice-Hall corrections-->
<!-- 	[1995/07/24  18:41:55  weir]-->
<!-- -->
<!-- Revision 1.1.6.9  1994/07/08  17:23:01  jeff-->
<!-- 	Correct editorial mistakes.-->
<!-- 	[1994/07/08  17:22:28  jeff]-->
<!-- -->
<!-- Revision 1.1.6.8  1994/05/19  20:53:55  jeff-->
<!-- 	{defect, 10688, R1.1}-->
<!-- 	Correct Tape Coordinator configuration steps.-->
<!-- -->
<!-- 	{defect, 8118, R1.1}-->
<!-- 	Correct use of double quotes.-->
<!-- 	[1994/05/19  20:53:17  jeff]-->
<!-- -->
<!-- Revision 1.1.6.7  1994/05/12  19:06:06  jeff-->
<!-- 	{defect, 8118, R1.1}-->
<!-- 	Work release notes into documentation.-->
<!-- 	[1994/05/12  19:05:36  jeff]-->
<!-- -->
<!-- Revision 1.1.6.6  1994/04/28  22:22:20  jeff-->
<!-- 	{defect, 10439, R1.1}-->
<!-- 	Correct cross-references for reorganization of DFS documentation.-->
<!-- 	[1994/04/28  22:14:07  jeff]-->
<!-- -->
<!-- Revision 1.1.6.5  1993/10/13  20:51:50  tmw-->
<!-- 	Added index entries for second version of master index.-->
<!-- 	[1993/10/13  20:50:38  tmw]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/09/16  11:33:15  kdu-->
<!-- 	{def,5778,R1.0.3}-->
<!-- 	Short forms of machine names.-->
<!-- 	[1993/09/16  11:32:45  kdu]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/08/11  00:11:06  jeff-->
<!-- 	Changed versions for defect fixes from 1.0.2A to 1.0.3.-->
<!-- 	[1993/08/11  00:10:30  jeff]-->
<!-- -->
<!-- Revision 1.1.6.2  1993/07/30  18:09:10  kdu-->
<!-- 	{def,8386,R1.0.3}-->
<!-- 	Incorporate OSF editorial comments into DFS Admin Guide and related-->
<!-- 	documentation.-->
<!-- 	[1993/07/30  18:07:52  kdu]-->
<!-- -->
<!-- Revision 1.1.4.7  1993/02/24  00:38:38  jeff-->
<!-- 	Fix for defects 5795, 6832, and 6835.-->
<!-- 	[1993/02/24  00:37:52  jeff]-->
<!-- -->
<!-- Revision 1.1.4.6  1993/02/09  01:46:07  jeff-->
<!-- 	Fix for defect 7156, correct dump/restore restrictions.-->
<!-- 	[1993/02/09  01:42:48  jeff]-->
<!-- -->
<!-- Revision 1.1.4.5  1993/02/04  01:48:01  jeff-->
<!-- 	Fix for defect 7073.-->
<!-- 	[1993/02/04  01:47:30  jeff]-->
<!-- -->
<!-- Revision 1.1.4.4  1993/01/28  19:04:51  dbelch-->
<!-- 	Embedding copyright notice-->
<!-- 	[1993/01/28  18:28:39  dbelch]-->
<!-- -->
<!-- Revision 1.1.4.3  1993/01/27  21:10:27  buckler-->
<!-- 	Fixed cross-refs and figure calls for new book org-->
<!-- 	[1993/01/27  21:06:11  buckler]-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/26  12:08:51  weir-->
<!-- 	Removed change bars-->
<!-- 	[1992/08/26  11:51:30  weir]-->
<!-- -->
<!-- Revision 1.1.2.7  1992/07/05  21:15:47  jeff-->
<!-- 	Reformatted table for consistency.-->
<!-- 	[1992/07/05  21:15:14  jeff]-->
<!-- -->
<!-- Revision 1.1.2.6  1992/07/02  17:09:09  jeff-->
<!-- 	Corrected ACL permissions and small editorial stuff.-->
<!-- 	[1992/07/02  17:04:03  jeff]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/06/07  02:09:55  jeff-->
<!-- 	Clarified the description of the DCE pathname used to-->
<!-- 	specify a machine name.-->
<!-- 	[1992/06/07  01:44:19  jeff]-->
<!-- -->
<!-- 	Clarified the description of the DCE pathname used to-->
<!-- 	specify a server machine.-->
<!-- 	[1992/06/06  23:59:39  jeff]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/05/12  16:22:01  jeff-->
<!-- 	Verified and/or modified italics and other editorial-->
<!-- 	aspects of the file.-->
<!-- 	[1992/05/12  14:35:05  jeff]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/04/22  20:14:52  jeff-->
<!-- 	Clarified use of bak verifydb command, especially with respect to-->
<!-- 	its -verbose option.-->
<!-- 	[1992/04/22  19:33:12  jeff]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/04/22  13:24:31  jeff-->
<!-- 	Included references to the new bak deletedump command in the-->
<!-- 	appropriate places, and added two new sections providing-->
<!-- 	detailed information and instructions for the command.  Also-->
<!-- 	fixed some small formatting problems.-->
<!-- 	[1992/04/21  21:00:31  jeff]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  16:14:31  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--no-op:  Copyright (C) 1989, 1991, Transarc Corporation-->
<!--no-op:  The Gulf Tower-->
<!--no-op:  707 Grant Street-->
<!--no-op:  Pittsburgh, PA  15219-->
<!-- CHANGED-->
<!-- 12-09-91:  Section 10.3.7:  Removed 5 dashes from the second line of-->
<!--            bak scantape command output.-->
<!-- 12-09-91:  Section 10.3.7:  Removed a dash from before and after End of-->
<!--            tape label line of bak scantape command output.-->
<!-- 12-09-91:  Section 10.3.7:  Reformatted fileset line of bak scantape-->
<!--            command output to resemble End of tape label line of output.-->
<!-- 12-09-91:  Section 10.3.7:  Removed extraneous line of dashes following-->
<!--            fileset line of bak scantape command output.-->
<!-- 12-10-91:  Section 10.3.5:  Removed 9 extraneous dashes from output of-->
<!--            bak lshosts command.-->
<!-- 12-10-91:  Section 10.3.6:  Added an additional space before the parent-->
<!--            ID in the example output for the first Dump ID.-->
<!-- 12-10-91:  Section 10.5.1.1:  Bolded the 0 (zero) that appears as a-->
<!--            possible option for the -date option.-->
<!-- END CHANGED-->
<!--DOCUMENTSTYLE [12pt]{book}-->
<Chapter Id="DFSAGR.BKR.div.1">
<Title>Backing Up and Restoring Data</Title>
<IndexTerm Id="DFSAGR.BKR.indx.1">
<Primary>Backup Database</Primary>
<Secondary>contents</Secondary>
</IndexTerm>
<Para>Once the DFS Backup System is properly configured, it can be used to help
automate the process of making backup copies of both DCE LFS and non-LFS
filesets on tape.  These copies can then be used to restore data to the file
system in the event of data loss.  The Backup Database, which stores
information about the dump schedule for backups, the locations of the Backup
System's Tape Coordinators, the fileset families and their entries that can
be dumped, and other administrative information, can also be backed up to
tape and restored if the file system becomes damaged or corrupted.
</Para>
<Para>This chapter describes how to use the Backup System to list backup 
information, back up file system data, and restore data to the file system 
if necessary.  It also details the operations involved in administering the 
Backup Database, and describes canceling operations from the 
interactive interface.
</Para>
<Para>The operations in this chapter assume that the Tape Coordinator
machines are properly configured (including any special requirements
for stackers, jukeboxes, or other automated backup devices), the
fileset families and fileset entries are defined, the dump hierarchy
is defined, and the required tapes are labeled, as necessary.  Chapter
9 describes configuration of the Backup System in detail; make sure
the Backup System is properly configured according to the guidelines
detailed in Chapter 9 before attempting to use it to perform any of
the operations described in this chapter.
</Para>
<Sect1 Id="DFSAGR.BKR.div.2">
<Title>Introduction to the Backup Process</Title>
<IndexTerm Id="DFSAGR.BKR.indx.2">
<Primary>Backup System</Primary>
<Secondary>how it works</Secondary>
</IndexTerm>
<Para>Backing up, or dumping, data is the most basic operation performed with the
Backup System.  Data must be dumped to tape before it can be tracked in the
Backup Database and before it can be restored from tape to the file system.
This section provides an overview of the backup process.
</Para>
<Para>Dumping a fileset makes it inaccessible to other file system users for the
duration of the dump process.  To reduce inconvenience, create a backup version
of a fileset (a version with a <Literal>.backup</Literal> extension) and dump the backup
version rather than the read/write version; this does not interrupt a user's
work.  Creating a backup version of a fileset, using the <Command>fts clone</Command> or
<Command>fts clonesys</Command> command described in detail in Chapter 6, does make its
read/write source fileset unavailable for a short period of time; therefore,
you may wish to create backup versions during periods of low system usage,
using <Command>bos</Command> commands to create a <Literal>cron</Literal> process to automate the
procedure. (See Chapter 5 for a description of the <Command>bos</Command> commands.)
</Para>
<Para>Occasionally, the Backup System cannot access a fileset, perhaps because of a
File Server machine or Fileset Server outage.  When this happens, it attempts
to access the fileset three times over the course of the operation.  If it still
cannot access the fileset after the third attempt, it omits the fileset from
the dump rather than aborting the dump or waiting for the fileset to become
accessible.  If the access failure occurs during a full dump, the next
incremental dump of the fileset includes the entire fileset; if the failure
occurs during an incremental dump, the next incremental dump of the fileset
includes all files modified since the last successful dump of the fileset.  You
can set the Tape Coordinator performing the dump to notify you of the omission
in its monitoring window (by specifying a value of <Literal>1</Literal> with the
<Option>debuglevel</Option> option of the <Command>butc</Command> command used to start the Tape
Coordinator).  The Tape Coordinator's error file also records the fileset's
omission.
</Para>
<Para>Following is a summary of the process the system uses to perform a typical
backup.  The example assumes that a backup is being performed on a Wednesday; 
the fileset family <Literal>usersys</Literal> is to be dumped at the dump level whose name 
in the dump hierarchy is <Literal>/sunday/wednesday</Literal> in this example.  Note
that the Backup System makes no implied connection between the name of a
dump level and the date and time at which a dump at that level is to
occur; descriptive dump level names serve merely as reminders to system
administrators of when dumps are to be performed.
</Para>
<ItemizedList>
<ListItem>
<Para>The Backup System reads the dump hierarchy in the Backup Database to see if
<Literal>/wednesday</Literal> is an incremental dump and, if so, to determine which
preceding level is its parent.  In this example, the <Literal>/wednesday</Literal> level is
incremental, and <Literal>/sunday</Literal> is its parent.
</Para>
<InformalExample>
<Para><ProgramListing>/sunday
&ensp;&ensp;&ensp;&ensp;&ensp;/monday
&ensp;&ensp;&ensp;&ensp;&ensp;/tuesday
&ensp;&ensp;&ensp;&ensp;&ensp;/wednesday
&ensp;&ensp;&ensp;&ensp;&ensp;/thursday
&ensp;&ensp;&ensp;&ensp;&ensp;/friday
</ProgramListing></Para>
</InformalExample>
<Para>If <Literal>/sunday</Literal> were specified, this would be a full dump; the system would
copy the complete contents of each fileset in <Literal>usersys</Literal>.  Because
<Literal>/sunday/wednesday</Literal> is an incremental dump level, the dump set includes
only those files that changed since <Literal>usersys</Literal> was dumped at the
<Literal>/sunday</Literal> level.
</Para>
</ListItem>
<ListItem>
<Para>Because <Literal>/sunday</Literal> is the parent for <Literal>/wednesday</Literal>, the Backup System
checks the Backup Database for the date and time of the last dump of
<Literal>usersys</Literal> at the <Literal>sunday</Literal> level.
</Para>
</ListItem>
<ListItem>
<Para>The Backup System reads the fileset family <Literal>usersys</Literal> in the Backup Database
to learn which fileset family entries it contains.  The fileset family and its
entries were created beforehand with the <Command>bak addftfamily</Command> and <Command>bak
addftentry</Command> commands.  In this example, the entries are
</Para>
<InformalExample>
<Para><ProgramListing>.* .* user.*
.* .* sys.*
</ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>The Backup System scans the FLDB to match the wildcards from each fileset
entry and generates a complete list of the filesets to be included in the
dump.  If duplicates are found, they are not dumped; only one occurrence of
any fileset is included.
</Para>
</ListItem>
<ListItem>
<Para>The Backup System reads the label on the tape in the drive to verify that the
tape name is acceptable and that the tape does not contain an unexpired
expiration date.
</Para>
</ListItem>
<ListItem>
<Para>The system transfers the list of filesets to be backed up to the appropriate
Fileset Server processes, which determine which data in the filesets was
modified after the date and time of the last dump at the <Literal>/sunday</Literal> level.
</Para>
</ListItem>
<ListItem>
<Para>The designated Tape Coordinator puts the gathered data onto tape; the
expiration date and other information associated with the dump are stored in
the tape's label, and a unique dump ID number is assigned to the dump.
If one tape is not large enough to hold the entire dump set, the Backup System
prompts the operator to place additional tapes in the drive, as needed.
</Para>
</ListItem>
</ItemizedList>
<IndexTerm Id="DFSAGR.BKR.indx.3" SpanEnd="DFSAGR.BKR.indx.2">
</Sect1>
<Sect1 Id="DFSAGR.BKR.div.3">
<Title>Standard Information in this Chapter</Title>
<Para>The following subsections present standard options and arguments common to 
many of the commands described in this chapter.  They also present some 
common operations repeated throughout this chapter.
</Para>
<Sect2 Id="DFSAGR.BKR.div.4">
<Title>Standard Options and Arguments</Title>
<Para>The following options and arguments are used with many of the commands
described in this chapter.  If an option or argument is not described with a
command in the text, a description of it appears here. (See Part 2 of this
guide and reference for complete details about each command.)
</Para>
<ItemizedList>
<ListItem>
<Para>The <Option>family</Option> <Symbol Role="Variable">fileset_family_name</Symbol> option is the name of the
fileset family to be used in the command.  To make it easier to track the
contents of a fileset family, its name should give some indication of the
contents of the fileset entries it contains (for example,
<Literal>user</Literal> for the fileset family that includes all user filesets in
the file system).
</Para>
</ListItem>
<ListItem>
<Para>The <Option>level</Option> <Symbol Role="Variable">dump_level</Symbol> option is the name of the dump
level to be used in the command.  The complete pathname of a dump level
must always be specified.  There are two types of dump levels: 
</Para>
<ItemizedList>
<ListItem>
<Para>Full dumps, which consist of a name
preceded by a single / (slash); for example, <Literal>/full</Literal>.
</Para>
</ListItem>
<ListItem>
<Para>Incremental dumps, which consist of multiple elements that resemble a 
pathname listing the dump levels that serve as the parents of the dump 
level, starting with a full dump level
and proceeding in order down the hierarchy; for example,
<Literal>/full/weekly/monday</Literal>.
</Para>
</ListItem>
</ItemizedList>
</ListItem>
<ListItem>
<Para>The <Option>tcid</Option> <Symbol Role="Variable">tc_number</Symbol> option is the TCID of the Tape Coordinator 
to be used for the command.  Legal values are integers from 0 (zero) to 1023. 
If this option is omitted, the Tape Coordinator with a TCID of 0 is 
used to execute the command by default.
</Para>
</ListItem>
</ItemizedList>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.5">
<Title>Standard Commands and Operations</Title>
<Para>The following subsections describe commands and operations that are used 
frequently in this chapter.  If a command or operation is described in detail 
here, it generally is not described in depth in later sections of this 
chapter where it is used.
</Para>
<Sect3 Id="DFSAGR.BKR.div.6">
<Title>Starting a Tape Coordinator</Title>
<IndexTerm Id="DFSAGR.BKR.indx.4">
<Primary>Tape Coordinators</Primary>
<Secondary>starting</Secondary>
</IndexTerm>
<Para>Before performing a backup or restore operation, you must install at
least one tape drive on a Tape Coordinator machine and define the tape drive's
corresponding Tape Coordinator in both the
<Symbol Role="Variable">dcelocal</Symbol><Literal>/var/dfs/backup/TapeConfig</Literal> file and the Backup
Database. If you are using automated backup equipment, you must also
create a user-defined configuration file. (See Chapter 9 for a
description of these and other configuration operations that must be
performed.) 
</Para>
<Para>This section explains how to start a Tape Coordinator. You
must have a Tape Coordinator running whenever you access a tape drive
for use with the Backup System.
</Para>
<OrderedList>
<ListItem>
<Para>Make certain that you have the <Literal>w</Literal> (write) and <Literal>x</Literal> (execute) 
permissions on the <Symbol Role="Variable">dcelocal</Symbol><Filename>/var/dfs/backup</Filename> directory, which is the 
directory in which the Tape Coordinator creates its <Filename>TL</Filename> (log) and 
<Filename>TE</Filename> (error) files.
</Para>
</ListItem>
<ListItem>
<Para>Start a new terminal session on the Tape Coordinator machine to use as the
monitoring window for the Tape Coordinator.  It must remain open while the Tape
Coordinator runs.
</Para>
</ListItem>
<ListItem>
<Para>In the newly opened window, issue the <Command>butc</Command> command to
start the Tape Coordinator.  The binary file for the <Command>butc</Command>
program resides in the <Symbol Role="Variable">dceshared</Symbol><Filename>/bin</Filename> directory.
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>butc</Command> [<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>] [<Option>debuglevel </Option><Symbol Role="Variable">trace_level</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>debuglevel</Option> <Symbol Role="Variable">trace_level</Symbol> option specifies the type of 
messages to be displayed.  There are two valid arguments:
</Para>
<VariableList>
<VarListEntry>
<Term>1</Term>
<ListItem>
<Para>Indicates that the Tape Coordinator is to report on its
activities as it restores filesets, in addition to prompting for new tapes
as necessary.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>0</Term>
<ListItem>
<Para>Indicates that the Tape Coordinator only prompts for new tapes; it also 
displays some output as necessary for operations that it executes.  This is 
the default.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</OrderedList>
</Sect3>
<Sect3 Id="DFSAGR.BKR.div.7">
<Title>Stopping a Tape Coordinator</Title>
<IndexTerm Id="DFSAGR.BKR.indx.5">
<Primary>Tape Coordinators</Primary>
<Secondary>stopping</Secondary>
</IndexTerm>
<Para>When you are finished using a Tape Coordinator, you should stop it from
running.  To stop a Tape Coordinator process, enter an interrupt signal
(<Literal>&lt;Ctrl-c></Literal> or its equivalent) in the Tape Coordinator's monitoring window.
</Para>
</Sect3>
<Sect3 Id="DFSAGR.BKR.div.8">
<Title>Using the Interactive Interface</Title>
<IndexTerm Id="DFSAGR.BKR.indx.6">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary>interactive mode</Secondary>
</IndexTerm>
<Para>You can use the <Command>bak</Command> commands in regular command mode or in interactive
mode.  If you use interactive mode, note the following:
</Para>
<ItemizedList>
<ListItem>
<Para>You do not need to enter the string <Command>bak</Command> with each <Command>bak</Command> command; 
the <ComputerOutput>bak></ComputerOutput> prompt replaces the command shell prompt.
</Para>
</ListItem>
<ListItem>
<Para>You do not have to escape regular expression characters; in regular command
mode, you must place all regular expression characters in "&thinsp;" (double quotes)
or escape each with a <Literal>&bsol;</Literal> (backslash).
</Para>
</ListItem>
<ListItem>
<Para>You can track executing and pending operations with the <Command>bak jobs</Command>
command; in regular command mode, you cannot track operations.
</Para>
</ListItem>
<ListItem>
<Para>You can cancel currently executing and pending operations with the <Command>bak
kill</Command> command; in regular command mode, you cannot use the <Command>bak kill</Command>
command.
</Para>
</ListItem>
<ListItem>
<Para>You do not have to establish a new connection each time you issue a command,
so execution time is quicker; in regular command mode, each command establishes
new connections to the <Command>bakserver</Command> and <Command>flserver</Command> processes, as
necessary.
</Para>
</ListItem>
</ItemizedList>
<?sml-break>
<?sml-need 20>
<Para>Most of the operations described in this chapter are presented in regular
command mode.  Where appropriate, some operations include steps introduced as
<Replaceable>Optional</Replaceable> to indicate where working in interactive mode could be useful.
The <Command>bak jobs</Command> and <Command>bak kill</Command> commands can be entered <Replaceable>only</Replaceable> in
interactive mode.
</Para>
<Sect4 Id="DFSAGR.BKR.div.9">
<Title>Entering Interactive Mode</Title>
<Para>Enter the <Command>bak</Command> command to initiate interactive mode:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
</Sect4>
<Sect4 Id="DFSAGR.BKR.div.10">
<Title>Leaving Interactive Mode</Title>
<Para>Enter the <Literal>quit</Literal> command at the <ComputerOutput>bak></ComputerOutput> prompt to terminate interactive
mode:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>bak> <Literal>quit</Literal>
</UserInput></ProgramListing></Para>
</InformalExample>
</Sect4>
</Sect3>
<Sect3 Id="DFSAGR.BKR.div.11">
<Title>Using Commands That Execute in the Background</Title>
<IndexTerm Id="DFSAGR.BKR.indx.7">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary>background execution</Secondary>
</IndexTerm>
<Para>The following commands used with the Backup System execute in the
background:
</Para>
<ItemizedList>
<ListItem>
<Para><Command>bak dump</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>bak labeltape</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>bak restoredb</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>bak restoredisk</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>bak restoreft</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>bak restoreftfamily</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>bak savedb</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>bak scantape</Command>
</Para>
</ListItem>
</ItemizedList>
<?sml-break>
<?sml-need 20>
<Para>As soon as you enter a command that executes in the background, the prompt at
which you entered the command returns to the screen.  The command continues to
execute, but you can enter additional commands at the prompt while it executes.
When you enter a command that does not execute in the background, the prompt
does not return until the command is finished executing. (See the appropriate
sections in this chapter and in Chapter 9 for more information about these
commands.)
</Para>
</Sect3>
<Sect3 Id="DFSAGR.BKR.div.12">
<Title>Checking the Status of a Background Operation</Title>
<IndexTerm Id="DFSAGR.BKR.indx.8">
<Primary>background operations</Primary>
<Secondary>checking status</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.9">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>status</Command></Secondary>
</IndexTerm>
<Para>You can check the status of a command that is executing in the background by
</Para>
<ItemizedList>
<ListItem>
<Para>Looking in the monitoring window for output from the command
</Para>
</ListItem>
<ListItem>
<Para>Entering the <Command>bak status</Command> command
</Para>
</ListItem>
<ListItem>
<Para>Entering the <Command>bak jobs</Command> command if you are working in interactive mode
</Para>
</ListItem>
</ItemizedList>
<Para>Issue the <Command>bak status</Command> command to check the status of the
operation that a Tape Coordinator is currently executing:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak status </Command>[<Option>tcid </Option><Symbol Role="Variable">number</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The command produces output that includes the following:
</Para>
<ItemizedList>
<ListItem>
<Para>A name describing the operation the Tape Coordinator is performing.  One of the
following operation names is displayed: 
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>Dump (</Literal><Symbol Role="Variable">dump_set</Symbol><ComputerOutput>)</ComputerOutput>
</Para>
<Para>This is displayed for a dump operation initiated with the
<Command>bak dump</Command> command; <Symbol Role="Variable">dump_set</Symbol> is the name of the dump set in the form
<Symbol Role="Variable">fileset_family_name</Symbol><Literal>.</Literal><Symbol Role="Variable">dump_level</Symbol>.
</Para>
</ListItem>
<ListItem>
<Para><Filename>Restore</Filename> 
</Para>
<Para>This is displayed for a restore operation initiated with the <Command>bak
restoreft</Command>, <Command>bak restoredisk</Command>, or <Command>bak restoreftfamily</Command> command.
</Para>
</ListItem>
<ListItem>
<Para><Literal>Labeltape (</Literal><Symbol Role="Variable">tape_label</Symbol><ComputerOutput>)</ComputerOutput>
</Para>
<Para>This is displayed for a tape labeling operation started
with the <Command>bak labeltape</Command> command; <Symbol Role="Variable">tape_label</Symbol> is the label being
placed on the tape.
<?sml-break><?sml-need 20></Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>Scantape</ComputerOutput>
</Para>
<Para>This is displayed for a tape scanning operation initiated with the 
<Command>bak scantape</Command> command.
</Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>SaveDb</ComputerOutput>
</Para>
<Para>This is displayed for a database saving operation initiated with the <Command>bak
savedb</Command> command.
</Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>RestoreDb</ComputerOutput>
</Para>
<Para>This is displayed for a database restoring operation started with the <Command>bak
restoredb</Command> command.
</Para>
</ListItem>
</ItemizedList>
</ListItem>
<ListItem>
<Para>The number of kilobytes transferred so far (from the file system to tape 
for a dump operation, or from tape to the file system for a restore operation).
</Para>
</ListItem>
<ListItem>
<Para>For a dump operation, the string <ComputerOutput>fileset</ComputerOutput> followed by the name of the
fileset currently being dumped; for a restore operation, the string
<ComputerOutput>fileset</ComputerOutput> followed by the name of the fileset currently being restored.
</Para>
</ListItem>
<ListItem>
<Para>A message reporting additional status information about the operation.  No
message is displayed if the operation is proceeding normally.
</Para>
<ItemizedList>
<ListItem>
<Para>The <ComputerOutput>[abort requested]</ComputerOutput> message is displayed if the <Command>kill</Command> command 
was issued but the operation is not yet canceled.
</Para>
</ListItem>
<ListItem>
<Para>The <ComputerOutput>[abort sent]</ComputerOutput> message is displayed if the operation is canceled but 
its execution is not yet stopped.
</Para>
</ListItem>
<ListItem>
<Para>The <ComputerOutput>[operator wait]</ComputerOutput> message is displayed if the Tape Coordinator 
is waiting for the operator to insert a tape in the drive.
</Para>
</ListItem>
</ItemizedList>
</ListItem>
</ItemizedList>
<Para><IndexTerm Id="DFSAGR.BKR.indx.10">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>status</Command></Secondary>
</IndexTerm>The following example shows the status of the operation currently being
performed by the Tape Coordinator whose TCID is 0:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput><?sml-size -1>
$ <Command>bak status</Command>
Dump (usersys.monday):312105 Kbytes transferred,fileset user.terry.
<?sml-size +1>
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>(See Section 10.7.1 for information about the <Command>bak jobs</Command> command.)
<IndexTerm Id="DFSAGR.BKR.indx.11" SpanEnd="DFSAGR.BKR.indx.8"><?sml-break><?sml-need 20></Para>
</Sect3>
</Sect2>
</Sect1>
<Sect1 Id="DFSAGR.BKR.div.13">
<Title>Listing Backup Information</Title>
<IndexTerm Id="DFSAGR.BKR.indx.12">
<Primary>Backup Database</Primary>
<Secondary>viewing information</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.13">
<Primary>tapes</Primary>
<Secondary>viewing Backup Database information</Secondary>
</IndexTerm>
<Para>The following commands can be used to list information about the Backup
Database:
</Para>
<VariableList>
<VarListEntry>
<Term><Command>bak verifydb</Command></Term>
<ListItem>
<Para>Checks the status of the Backup Database
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>bak lsftfamilies</Command></Term>
<ListItem>
<Para>Lists fileset families and fileset family entries
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>bak lsdumps</Command></Term>
<ListItem>
<Para>Lists the entries in the dump hierarchy
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>bak dumpinfo</Command></Term>
<ListItem>
<Para>Displays information about specific backups
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>bak lshosts</Command></Term>
<ListItem>
<Para>Lists Tape Coordinator IDs
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>bak ftinfo</Command></Term>
<ListItem>
<Para>Displays the dump history for a fileset
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para><IndexTerm Id="DFSAGR.BKR.indx.14">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>scantape</Command></Secondary>
</IndexTerm>In addition to the preceding commands, which display information from the 
Backup Database, the <Command>bak scantape</Command> command reads a tape, extracting its 
tape label and information from the fileset header of each fileset on the 
tape.  This command can detect damage to a tape that makes filesets incomplete;
if it encounters damage, the scan aborts.  All of the commands in the following
subsections, like all <Command>bak</Command> commands, require that you be included in the
<Filename>admin.bak</Filename> administrative list.
</Para>
<Sect2 Id="DFSAGR.BKR.div.14">
<Title>Verifying Backup Database Status</Title>
<IndexTerm Id="DFSAGR.BKR.indx.15">
<Primary>Backup Database</Primary>
<Secondary>checking status</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.16">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Literal>verifydb</Literal></Secondary>
</IndexTerm>
<Para>Issue the <Command>bak verifydb</Command> command to check the status of the Backup
Database:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak verifydb </Command>[<Option>verbose</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>verbose</Option> option directs the command to display additional 
information about the Backup Database.
</Para>
<Para>Following is an example of the output from this command when the database is
undamaged:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak verifydb</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>Database OK.
</ProgramListing></Para>
</InformalExample>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.15">
<Title>Listing Fileset Families and Fileset Family Entries</Title>
<IndexTerm Id="DFSAGR.BKR.indx.17">
<Primary>fileset families</Primary>
<Secondary>viewing entries</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.18">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>lsftfamilies</Command></Secondary>
</IndexTerm>
<Para>Issue the <Command>bak lsftfamilies</Command> command to view a fileset family
and its entries:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak lsftfamilies </Command>[<Option>family </Option><Symbol Role="Variable">fileset_family_name</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>family</Option> <Symbol Role="Variable">fileset_family_name</Symbol> option is the name of the 
fileset family whose entries are to be listed.  Omit this option to view 
all of the fileset families and entries defined in the Backup Database.
</Para>
<Para>Following is an example of the output from this command:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak lsftfamilies usersys</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>Fileset family usersys:
&ensp;Entry 1: server .*, aggregate .*, filesets: user.*
&ensp;Entry 2: server .*, aggregate .*, filesets: sys.*
</ProgramListing></Para>
</InformalExample>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.16">
<Title>Listing Entries in the Dump Hierarchy</Title>
<IndexTerm Id="DFSAGR.BKR.indx.19">
<Primary>dump hierarchies</Primary>
<Secondary>viewing</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.20">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>lsdumps</Command></Secondary>
</IndexTerm>
<Para>Issue the <Command>bak lsdumps</Command> command to view the entries in the dump hierarchy:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak lsdumps</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The following example shows a dump hierarchy. The <Literal>sunday</Literal> entry is the
full dump level; the remainder of the entries are incremental dump levels that
each have <Literal>/sunday</Literal> as their parent dump level.
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak lsdumps</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>/sunday
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;/monday
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;/tuesday
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;/wednesday
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;/thursday
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;/friday
</ProgramListing></Para>
</InformalExample>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.17">
<Title>Viewing Recent Backup Information</Title>
<IndexTerm Id="DFSAGR.BKR.indx.21">
<Primary>Backup Database</Primary>
<Secondary>viewing specific dump sets</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.22">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>dumpinfo</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.23">
<Primary>dump sets</Primary>
<Secondary>viewing information</Secondary>
</IndexTerm>
<Para>Issue the <Command>bak dumpinfo</Command> command to list information about specific
backups:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak dumpinfo </Command>[{<Option>ndumps </Option><Symbol Role="Variable">number</Symbol> | <Option>id </Option><Symbol Role="Variable">dumpID</Symbol>}] [<Option>verbose</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>ndumps</Option> <Symbol Role="Variable">number</Symbol> option specifies the number of dumps about 
which information is to be displayed; information about the most recent 
number of dumps specified with this option is displayed.  Use this option or 
use the <Option>id</Option> option; omit both options to list information about 
the last 10 dumps.
</Para>
<Para>The <Option>id</Option> <Symbol Role="Variable">dumpID</Symbol> option specifies the unique dump ID number of a 
specific dump about which information is to be displayed.  Use this option 
or use the <Option>ndumps</Option> option; omit both options to list information 
about the last 10 dumps.
</Para>
<Para>The <Option>verbose</Option> option includes a detailed list of information about 
the dump specified with the <Option>id</Option> option.  This option can be used only 
with the <Option>id</Option> option.
</Para>
<Para>The dump ID, parent ID, dump level, and other dump information are displayed
about the indicated dumps.  The following example shows information about the
last three dumps:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Literal>bak dumpinfo -ndumps 3</Literal>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>&ensp;&ensp;&ensp;&ensp;DumpID &ensp;&ensp;parentID lvl &ensp;&ensp;&ensp;&ensp;created &ensp;&ensp;&ensp;&ensp;nt nfsets dump_name
-------------------------------------------------------------
 729293644 &ensp;729289323 &ensp;&ensp;1 &ensp;02/09/93 &ensp;5:34 &ensp;1&ensp;&ensp;&ensp;&ensp;&ensp;43 users.tue
 729287531 &ensp;729286818 &ensp;&ensp;1 &ensp;02/08/93 &ensp;4:52 &ensp;1&ensp;&ensp;&ensp;&ensp;&ensp;23 users.mon
 729286056 &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;0 &ensp;&ensp;0 &ensp;02/07/93 &ensp;4:27 &ensp;1&ensp;&ensp;&ensp;&ensp;&ensp;31 users.wk1
</ProgramListing></Para>
</InformalExample>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.18">
<Title>Listing Tape Coordinator TCIDs</Title>
<IndexTerm Id="DFSAGR.BKR.indx.24">
<Primary>Tape Coordinator IDs (TCIDs)</Primary>
<Secondary>viewing</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.25">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>lshosts</Command></Secondary>
</IndexTerm>
<Para>Issue the <Command>bak lshosts</Command> command to list all of the Tape Coordinators 
that have entries in the Backup Database:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak lshosts</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The output lists the name of the machine for which each Tape Coordinator is
defined and the TCID of the Tape Coordinator.  A Tape Coordinator's presence in
the output does not imply that it is currently running.
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak lshosts</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>Tape hosts:
Host /.../abc.com/hosts/bak1, TCID 0
Host /.../abc.com/hosts/bak1, TCID 1
Host /.../abc.com/hosts/bak2, TCID 3
Host /.../abc.com/hosts/bak3, TCID 8
Host /.../abc.com/hosts/bak3, TCID 7
Host /.../abc.com/hosts/bak3, TCID 6
</ProgramListing></Para>
</InformalExample>
<IndexTerm Id="DFSAGR.BKR.indx.26" SpanEnd="DFSAGR.BKR.indx.24">
<IndexTerm Id="DFSAGR.BKR.indx.27" SpanEnd="DFSAGR.BKR.indx.25">
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.19">
<Title>Displaying a Fileset's Dump History</Title>
<IndexTerm Id="DFSAGR.BKR.indx.28">
<Primary>filesets</Primary>
<Secondary>viewing dump history</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.29">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Literal>ftinfo</Literal></Secondary>
</IndexTerm>
<Para>Issue the <Command>bak ftinfo</Command> command to display the dump history of a fileset:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak ftinfo -fileset </Command><Symbol Role="Variable">name</Symbol>
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>fileset</Option> <Symbol Role="Variable">name</Symbol> option names the fileset whose dump history 
is to be displayed.  Include the <Literal>.backup</Literal> extension if the backup 
version of the fileset was dumped.
<?sml-break><?sml-need 20></Para>
<Para>The dump ID, parent ID, dump level, and other dump information are displayed
about dumps of the indicated fileset.  The following example shows part of the
dump history of the <Replaceable>user.smith.backup</Replaceable> fileset:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput><?sml-size -1>
$ <Literal>bak ftinfo user.smith.backup</Literal>
<?sml-size +1>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing><?Pub _font TypeSize="8pt">
&ensp;&ensp;&ensp;DumpID &ensp;&ensp;parentID lvl creation date&ensp;&ensp;&ensp;clone date&ensp;&ensp;&ensp;&ensp;tape name
654972910 &ensp;654946323 1&ensp;&ensp;10/01/91 &ensp;5:07&ensp;&ensp;10/01/91 4:01 users.tuesday.1
654960415 &ensp;654946323 1&ensp;&ensp;09/30/91 &ensp;5:11&ensp;&ensp;09/30/91 4:16 users.monday.1
654946323 &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;0 0&ensp;&ensp;09/29/91 &ensp;5:36&ensp;&ensp;09/28/91 4:31 users.week.1
<?Pub /_font><?Pub Caret>
</ProgramListing></Para>
</InformalExample>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.20">
<Title>Scanning the Contents of a Dump Tape</Title>
<IndexTerm Id="DFSAGR.BKR.indx.30">
<Primary>tapes</Primary>
<Secondary>scanning contents</Secondary>
</IndexTerm>
<Para>To scan the contents of a dump tape, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak scantape</Command> command to display information from a tape:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak scantape </Command>[<Option>dbadd</Option>] [<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>dbadd</Option> option indicates that information extracted from the tape
is to be added to the Backup Database; information is not added if the tape
is damaged or if the entry has a dump ID number that is already used by an
entry in the Backup Database. (See Section 10.6.3 for information about using
this option.)
</Para>
</ListItem>
<ListItem>
<Para>Place the tape in the drive, and press <Literal>Return</Literal> in the corresponding
Tape Coordinator's monitoring window.  When using this command, you must insert
tapes sequentially.
</Para>
<Para>An example of the output from this command, which lists tape label and fileset
information, follows.  The output is displayed in the monitoring window of the
Tape Coordinator:
<?sml-break><?sml-need 20></Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak scantape</Command>
</UserInput></ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>Tape label
----------
name = &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;guests.monthly.1
createTime = &ensp;&ensp;&ensp;Fri Nov 22 05:59:31 1990
cell = &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;/.../abc.com
size = &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;20103324 Kbytes
dump path = &ensp;&ensp;&ensp;&ensp;/monthly
dump id = &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;729369701
useCount = &ensp;&ensp;&ensp;&ensp;&ensp;1
-- End of tape label --
</ProgramListing></Para>
</InformalExample>
<InformalExample>
<Para><ProgramListing>-- fileset --
fileset name: user.guest10.backup
fileset ID 0,,112262
dumpSetName: guests.monthly
dumpID 729369701
level 0
parentID 0
endTime 0
clonedate Fri Nov 22 05:36:29 1991
   .   .   .
</ProgramListing></Para>
</InformalExample>
</ListItem>
</OrderedList>
<IndexTerm Id="DFSAGR.BKR.indx.31" SpanEnd="DFSAGR.BKR.indx.30">
<IndexTerm Id="DFSAGR.BKR.indx.32" SpanEnd="DFSAGR.BKR.indx.12">
</Sect2>
</Sect1>
<Sect1 Id="DFSAGR.BKR.div.21">
<Title>Backing Up Data</Title>
<IndexTerm Id="DFSAGR.BKR.indx.33">
<Primary>backup operations</Primary>
<Secondary>procedure</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.34">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>dump</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.35">
<Primary>filesets</Primary>
<Secondary>dumping</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.36">
<Primary>dump sets</Primary>
<Secondary>creating</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.37">
<Primary>dump sets</Primary>
<Secondary>status of incomplete</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.38">
<Primary>Backup Database</Primary>
<Secondary>status of incomplete dump sets</Secondary>
</IndexTerm>
<Para>The <Command>bak dump</Command> command is used to perform a dump operation. When you
enter the command, specify the fileset family to be dumped and the level
at which the family is to be dumped.  All entries in the specified fileset
family are dumped according to the dump level that you specify.  If you specify
a full dump level, all of the data in all of the filesets included in the 
specified family is dumped; if you specify an incremental dump, only the data 
in the filesets that has changed since the filesets were dumped at the 
parent of the dump level that you specify is dumped.
<?sml-break><?sml-need 20></Para>
<Para>The fileset family and dump level that you specify produce a dump set.  To 
indicate the contents of the dump set, the dump set name consists of the 
fileset family name joined by a dot to the last component of the name of
the dump level at which the family was dumped.  For example, if the 
fileset family named <Literal>usersys</Literal> is dumped at the <Literal>/weekly/monday</Literal> 
level, the name of the resulting dump set is <Literal>usersys.monday</Literal>.
</Para>
<Para>The Backup System overwrites a tape that contains an existing dump set only
if both of the following conditions are true:
</Para>
<ItemizedList>
<ListItem>
<Para>The tape's label contains an acceptable name.  An acceptable name is one that
matches the name of the dump set you want to dump to the tape, in the form
<Symbol Role="Variable">fileset_family_name</Symbol><Literal>.</Literal><Symbol Role="Variable">dump_level</Symbol><Literal>.</Literal><Symbol Role="Variable">index</Symbol>.  Note that a tape's 
index is its position in the sequence of tapes necessary to accommodate the 
dump set; for example, the first tape for a dump set has an index of 1.  A 
tape that is labeled as empty or that has no label is also acceptable.
</Para>
</ListItem>
<ListItem>
<Para>The tape's expiration date, if it exists, has expired.  The Backup System
refuses to overwrite a tape whose expiration date has not expired.  Once a
tape's expiration date has expired, the Backup System overwrites the contents
of the tape with a dump set that has an acceptable name.
</Para>
</ListItem>
</ItemizedList>
<Para>Use the <Command>bak labeltape</Command> command to overwrite a label that has an
unacceptable name or an unexpired expiration date.  Overwriting a tape's label
removes all obstacles that can prevent it from being overwritten.
</Para>
<Note>
<Para>If a dump operation is interrupted or fails for any reason, you cannot be sure
that any fileset is complete on one tape; the Backup Database contains an entry
for the incomplete dump set, which cannot be used to restore data.  Immediately
restart the backup, using the same tape to record the dump set; using the same
tape automatically removes the entry for the incomplete dump set from the
Backup Database.  If you use a different tape, you will need to use the <Command>bak
deletedump</Command> command to manually remove the entry for the incomplete dump set
from the database. (See Section 10.4.3 for more information about the <Command>bak
deletedump</Command> command.)
</Para>
</Note>
<IndexTerm Id="DFSAGR.BKR.indx.39" SpanEnd="DFSAGR.BKR.indx.38">
<IndexTerm Id="DFSAGR.BKR.indx.40" SpanEnd="DFSAGR.BKR.indx.37">
<?sml-break>
<?sml-need 20>
<Sect2 Id="DFSAGR.BKR.div.22">
<Title>Using Tapes with a Backup Operation</Title>
<IndexTerm Id="DFSAGR.BKR.indx.41">
<Primary>tapes</Primary>
<Secondary>compatibility for full and incremental dumps</Secondary>
</IndexTerm>
<Para>You must place all dumps of a given fileset family (both full and
incremental) onto tapes that are readable by a single tape drive.  This
is required because a single Tape Coordinator performs an entire restore
operation, using a full dump set and any incremental dump sets as
necessary.  If a single Tape Coordinator cannot read all of the tapes on
which the dump sets are recorded, you cannot restore all of the dumps of
the fileset family.
</Para>
<Para>For example, suppose the full dump of a fileset family is stored on
8-mm tape and the incremental dumps, which are done at a different time, are 
stored on streaming cartridge tape.  When you restore a fileset from that 
fileset family, you must use a Tape Coordinator that uses 8-mm tapes 
because a restore always begins with the full dump.  However, you cannot 
restore any of the incremental dumps because the same Tape Coordinator 
cannot read the streaming cartridge tapes and you cannot switch to another 
Tape Coordinator to continue the restore operation.
</Para>
<Para><IndexTerm Id="DFSAGR.BKR.indx.42">
<Primary><Literal>TapeConfig</Literal> file</Primary>
</IndexTerm>Before performing a backup, make sure the tapes are at least as
large as the tape size listed in the <Literal>TapeConfig</Literal> file for
the tape drive to be used for the operation.  The Backup System fills a
tape only with the amount of data listed as the capacity for the drive
in the <Literal>TapeConfig</Literal> file.  If a tape is larger than the tape
size listed in that file, it simply is not filled to capacity when the
backup is performed.  However, if the tape is smaller than the size
listed in the <Literal>TapeConfig</Literal> file, the backup operation fails,
but only after it fills the tape and determines that it is too small for
the drive.
</Para>
<Para>A dump set does not have to fit entirely on a single tape; if the Backup
System reaches the end of a tape while dumping a fileset from a fileset
family, it puts the remaining data on another tape.  The Backup Database
automatically records that the fileset resides on multiple tapes.
</Para>
<Para><IndexTerm Id="DFSAGR.BKR.indx.43">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary>dump, previewing effects</Secondary>
</IndexTerm>Prior to performing a backup, you can preview the effects of your
command without having the system actually perform the dump.  Simply
include the <Option>noaction</Option> option with the <Command>bak dump</Command>
command, specifying the remaining options as you would to really execute
the dump.  This lets you check a fileset family's size before actually
dumping it so that you can calculate the correct number of tapes needed.
</Para>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.23">
<Title>Backing Up a Fileset (Creating a Dump Set)</Title>
<Para>To back up a fileset, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists.
If necessary, issue the <Command>bos lsadmin</Command> command to check.
</Para>
</ListItem>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para><Replaceable>Optional</Replaceable>.  At this point, you can issue the <Command>bak</Command> command at the
system prompt to enter interactive mode. (See Section 10.2.2.3 for the
advantages of interactive mode.) The commands in the following steps assume
that regular command mode is used, not interactive mode.
</Para>
</ListItem>
<ListItem>
<Para>Decide which fileset family and dump level to use.  If necessary, use the
<Command>bak lsftfamilies</Command> or <Command>bak lsdumps</Command> command to display information
about existing fileset families and dump hierarchies.
</Para>
</ListItem>
<ListItem>
<Para>Check that you have a sufficient number of tapes; if you do not have
enough tapes, you will not be able to complete the backup.  Also, check
that the tapes are <Symbol Role="Variable">not</Symbol> smaller than
the tape size listed in the <Literal>TapeConfig</Literal> file for the drive.
You must also check that the tapes are properly prelabeled (if
necessary, use the <Command>bak readlabel</Command> command to check the
labels); you must relabel any tape that
</Para>
<ItemizedList>
<ListItem>
<Para>Is labeled with an incorrect name; tape names have the following format:
</Para>
<Para><Symbol Role="Variable">fileset_family_name</Symbol><Literal>.</Literal><Symbol Role="Variable">dump_level</Symbol><Literal>.</Literal><Symbol Role="Variable">index</Symbol>.
</Para>
</ListItem>
<ListItem>
<Para>Has an unexpired date; if a tape has an expiration date associated
with it from a previous dump, you will not be able to use the tape
unless the date is expired.
</Para>
</ListItem>
</ItemizedList>
<Para>If a label is incorrect, use the <Command>bak labeltape</Command> command to
label the tape correctly.
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak dump</Command> command to dump the fileset family onto
tape:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak dump -family </Command><Symbol Role="Variable">fileset_family_name</Symbol> <Option>level</Option> <Symbol Role="Variable">dump_level</Symbol> \
[<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>] [<Option>noaction</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<?sml-break>
<?sml-need 20>
<Para>The <Option>noaction</Option> option specifies that all filesets that would be
included in the indicated dump be displayed without the dump actually
being performed.  Specify all other options as you would to actually
perform the operation.
</Para>
</ListItem>
<ListItem>
<Para>For manually loaded tape drives, place the correct tape in the drive;
the backup process begins immediately. If more than one tape is
required, you must remain at the console to respond to prompts for
subsequent tapes; if you do not respond immediately, a bell rings
periodically to draw your attention. (If you are using automated
backup equipment, the user-defined configuration file must be set up
to handle tape loading. See Chapter 9 for details.)
</Para>
</ListItem>
</OrderedList>
<IndexTerm Id="DFSAGR.BKR.indx.44" SpanEnd="DFSAGR.BKR.indx.36">
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.24">
<Title>Deleting Backup Information</Title>
<IndexTerm Id="DFSAGR.BKR.indx.45">
<Primary>dump sets</Primary>
<Secondary>deleting</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.46">
<Primary>Backup Database</Primary>
<Secondary>deleting dump sets</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.47">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>deletedump</Command></Secondary>
</IndexTerm>
<Para>The Backup System automatically removes the record of a dump set from the
Backup Database when the tape containing the dump set is overwritten.  The
<Command>bak deletedump</Command> command can be used to manually remove information
about a dump set from the Backup Database.  It can be used to remove the
record of a dump set that contains incorrect information (possibly because
a dump operation was interrupted or failed) or for which the corresponding
tape is to be discarded.  Before issuing the <Command>bak deletedump</Command> command, 
use the <Command>bak dumpinfo</Command> command to display the current dump IDs from 
the database.
</Para>
<Para>After you use the <Command>bak deletedump</Command> command to delete the record of a dump
set from the Backup Database, any dumps for which it serves as the parent,
either directly or indirectly, are unusable.  You can reissue the <Command>bak
deletedump</Command> command to delete those dump sets from the database.  However,
leaving them in the database, while possibly confusing, causes no problems.
Also, as long as the tape that contains the parent dump set remains available,
you can always use the <Command>bak scantape</Command> command to restore dump set
information about the parent from that tape to the database, making the dump
sets that rely on the parent dump set usable again. (See Section 10.6.3 for
more information about the <Command>bak scantape</Command> command.)
</Para>
<Para>To delete backup information from the Backup Database, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists.  If
necessary, issue the <Command>bos lsadmin</Command> command to check.
<?sml-break><?sml-need 20></Para>
</ListItem>
<ListItem>
<Para><Replaceable>Optional</Replaceable>.  At this point, you can issue the <Command>bak</Command> command at the
system prompt to enter interactive mode. (See Section 10.2.2.3 for the
advantages of interactive mode.) The commands in the following steps assume
that regular command mode is used, not interactive mode.
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak dumpinfo</Command> command to list information, including dump
IDs, about dump sets recorded in the Backup Database.  A dump set's dump ID
is required to delete it from the Backup Database.
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak dumpinfo </Command>[{<Option>ndumps </Option><Symbol Role="Variable">number</Symbol> | <Option>id </Option><Symbol Role="Variable">dumpID</Symbol>}] [<Option>verbose</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>ndumps</Option> <Symbol Role="Variable">number</Symbol> option specifies the number of dumps about 
which information is to be displayed; information about the most recent
<Option>ndumps</Option> is displayed.  Use this option or use the <Option>id</Option> option; 
omit both options to list information about the last 10 dumps.
</Para>
<Para>The <Option>id</Option> <Symbol Role="Variable">dumpID</Symbol> option specifies the unique dump ID number of 
a specific dump about which information is to be displayed.  Use this option 
or use the <Option>ndumps</Option> option; omit both options to list information about 
the last 10 dumps.
</Para>
<Para>The <Option>verbose</Option> option includes a detailed list of information about 
the dump specified with the <Option>id</Option> option.  The <Option>verbose</Option> option can 
be used only with the <Option>id</Option> option.
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak deletedump</Command> command to delete the desired dump set:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak deletedump -id </Command><Symbol Role="Variable">dumpID</Symbol>
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>id</Option> <Symbol Role="Variable">dumpID</Symbol> option specifies the dump ID number of the dump 
set whose entry is to be deleted from the Backup Database.
</Para>
</ListItem>
</OrderedList>
<IndexTerm Id="DFSAGR.BKR.indx.48" SpanEnd="DFSAGR.BKR.indx.45">
<IndexTerm Id="DFSAGR.BKR.indx.49" SpanEnd="DFSAGR.BKR.indx.46">
<IndexTerm Id="DFSAGR.BKR.indx.50" SpanEnd="DFSAGR.BKR.indx.33">
<?sml-break>
<?sml-need 20>
</Sect2>
</Sect1>
<Sect1 Id="DFSAGR.BKR.div.25">
<Title>Restoring Data</Title>
<IndexTerm Id="DFSAGR.BKR.indx.51">
<Primary>restore operations</Primary>
<Secondary>procedures</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.52">
<Primary>filesets</Primary>
<Secondary>restoring from tape</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.53">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoreft</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.54">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoredisk</Command></Secondary>
</IndexTerm>
<Para><IndexTerm Id="DFSAGR.BKR.indx.55">
<Primary>restore operations</Primary>
<Secondary>procedures</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.56">
<Primary>filesets</Primary>
<Secondary>restoring from tape</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.57">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoreft</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.58">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoredisk</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.59">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoreftfamily</Command></Secondary>
</IndexTerm></Para>
<Para>The DFS Backup System provides the following commands for restoring data to
the file system in different situations:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Command>bak restoreft</Command></Term>
<ListItem>
<Para>Useful for restoring individual filesets. For example, if a
single fileset becomes corrupted or is accidentally deleted, you can use this
command to restore the fileset.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Command>bak restoredisk</Command></Term>
<ListItem>
<Para>Useful for restoring all of the filesets that reside on a
single aggregate. For example, if a hardware failure corrupts the partition
that houses an aggregate, you can use this command to restore all of the
filesets that reside on the aggregate.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Command>bak restoreftfamily</Command></Term>
<ListItem>
<Para>Useful for restoring all of the filesets that reside on
multiple aggregates or multiple File Server machines. For example, if a
catastrophic system failure corrupts all of the data on a group of File Server
machines, you can use this command to restore all of the filesets that reside
on the machines.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>You can use these commands to restore data to a file system that is different
from the file system from which the data was dumped. For instance, data dumped
from a DCE LFS fileset can be restored to a DCE LFS fileset or to any type of
non-LFS fileset. Similarly, data dumped from a non-LFS fileset can be restored
to a DCE LFS fileset or to a different type of non-LFS fileset. (See your
vendor's documentation to verify the level of support for dump and restore
operations between different types of file systems.)
</Para>
<Para>Restored data is translated into the appropriate format for the file system to
which it is restored. Note that incompatible information may be lost when a
fileset is dumped and restored between different types of file systems. For
example, ACLs on objects in a DCE LFS fileset may be lost if the fileset is
restored to a file system that does not support ACLs.
</Para>
<Para>The commands that restore data determine the tapes and dumps they need
before they begin a restore operation. The commands then prompt for a
given tape only once during a restore operation. Before performing a
restore operation, you can direct these commands to list the tapes
needed to complete the operation. This allows you to locate and
assemble the proper tapes before actually issuing the command. To view
the list of required tapes, include the <Option>noaction</Option> option with
the command along with any other options you intend to use.
</Para>
<Note>
<Para>If you have equipment that can automatically retrieve tapes, you can
use a user-defined configuration file to override the prompts to
mount a particular tape. You can also create executable routines to
automatically retrieve the required tapes. See Chapter 9 for details.
</Para>
</Note>
<Para>The <Option>noaction</Option> option of the <Command>bak restoreftfamily</Command> command provides
additional information, such as the filesets that were dumped to tape and the
sites to which the filesets would be restored. You can use the command's
<Option>noaction</Option> and <Option>family</Option> options to generate information about all of
the filesets in a fileset family. You can write the information to a file and
then modify the file for use with the command's <Option>file</Option> option. See Section
10.5.4 for information about using the <Command>bak restoreftfamily</Command> command.
</Para>
<Note>
<IndexTerm Id="DFSAGR.BKR.indx.60">
<Primary>restore operations</Primary>
<Secondary>interruptions</Secondary>
</IndexTerm>
<Para>If a restore operation is interrupted or fails for any reason, you cannot be
sure that any fileset is complete in the file system; immediately restart the
operation.  If you do not, the file system may contain inconsistent information,
which can result in problems in the future.
</Para>
</Note>
<?sml-break>
<?sml-need 20>
<Sect2 Id="DFSAGR.BKR.div.26">
<Title>Specifying the Type and Destination of a Restore Operation</Title>
<IndexTerm Id="DFSAGR.BKR.indx.61">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoreft</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.62">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoredisk</Command></Secondary>
</IndexTerm>
<Para>You can perform two types of restore operations: a full restore and a
date-specific restore.  A full restore recreates a fileset as it existed when
it was last dumped, including data from the last full dump and any subsequent
incremental dumps.  A date-specific restore recreates a fileset as it was when
it was last dumped before an indicated date; it includes the last full dump
and any incremental dumps done before the indicated date.
</Para>
<Para>The <Command>bak restoredisk</Command> and <Command>bak restoreftfamily</Command> commands always perform
full restores of every specified fileset. The <Command>bak restoreft</Command> command
performs a full restore of each specified fileset by default, but you can
use the command's <Option>date</Option> option to perform a date-specific restore.
</Para>
<Para>Using any of the three commands, you can restore data to the location that it
currently occupies, in which case it overwrites the existing version of the
data. Overwrite existing data as follows:
</Para>
<ItemizedList>
<ListItem>
<Para>To use the <Command>bak restoreft</Command> command to restore a fileset to its current
location, specify the fileset's existing site with the <Option>server</Option> and
<Option>aggregate</Option> options.
</Para>
</ListItem>
<ListItem>
<Para>To use the <Command>bak restoredisk</Command> command to restore all of the filesets on
an aggregate to their current location, omit the <Option>newserver</Option> and
<Option>newaggregate</Option> options from the command; the filesets are restored to
the site at which they currently reside.
</Para>
</ListItem>
<ListItem>
<Para>To use the <Command>bak restoreftfamily</Command> command to restore filesets to their
current locations, use the <Option>family</Option> option to specify the fileset
families from which filesets are to be restored; the filesets are always
restored to their current sites. You can also use the <Option>file</Option> option
of the command to specify a file that names the filesets to be restored and
indicates the locations to which they are to be restored; to overwrite the
filesets, simply specify their current sites as the locations to which they
are to be restored.
</Para>
</ListItem>
</ItemizedList>
<Para>Using any of the commands, you can also restore data to a different location,
as follows:
</Para>
<ItemizedList>
<ListItem>
<Para>To use the <Command>bak restoreft</Command> command to restore a fileset to a different
location, specify a new site with the command's <Option>server</Option> and
<Option>aggregate</Option> options.
</Para>
</ListItem>
<ListItem>
<Para>To use the <Command>bak restoredisk</Command> command to restore all of the filesets on
an aggregate to a different location, specify a new site with the
<Option>newserver</Option> option, the <Option>newaggregate</Option> option, or both.
</Para>
</ListItem>
<ListItem>
<Para>To use the <Command>bak restoreftfamily</Command> command to restore filesets to a different
location, use the command's <Option>file</Option> option to specify a file that
identifies new sites for the filesets to be restored.
</Para>
</ListItem>
</ItemizedList>
<Para>If you plan to specify a new site for a restored fileset, you must
remove the current version of the fileset, if it exists, before
restoring it. A restore operation fails if a version of a fileset to
be restored still exists at a site other than the site to which the
fileset is to be restored. If you are using the <Command>bak restoreft</Command>
command or the <Command>bak restoreftfamily</Command> command with the <Option>file</Option>
option to restore individual filesets, you can use either the <Command>fts
zap</Command> or <Command>fts delete</Command> command to remove the existing filesets. If
you are using the <Command>bak restoredisk</Command> command to restore all of the
filesets on an aggregate, you can use only the <Command>fts zap</Command> command
to remove the existing filesets.
</Para>
<Para>With the <Command>bak restoreft</Command> command, you can preserve the current contents of
a fileset in the file system by restoring the data to a new fileset that has
the same name as the existing fileset with the addition of a distinguishing
extension. You can use the command's <Option>extension</Option> option to specify an
extension such as <Literal>.restored</Literal> to be appended to the name of the restored
fileset. A new FLDB entry is created for the fileset and the fileset is
assigned its own fileset ID number. You can restore the new fileset to the
same site as the existing fileset or to a different site.
</Para>
<Para>To restore a fileset that no longer exists in the file system and for which an
entry no longer exists in the FLDB, use the <Command>bak restoreft</Command> command, or use
the <Command>bak restoreftfamily</Command> command with the <Option>file</Option> option. A new FLDB
entry is created for the fileset and a fileset ID number is assigned to it.
The <Command>bak restoredisk</Command> command examines the FLDB to determine the filesets
to be restored, so you cannot use the command to restore filesets that no
longer have entries in the FLDB. The same is true of the <Command>bak
restoreftfamily</Command> command when it is issued with the <Option>family</Option> option.
</Para>
<Para>The following subsections provide detailed information about using the <Command>bak
restoreft</Command>, <Command>bak restoredisk</Command>, and <Command>bak restoreftfamily</Command> commands.
</Para>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.27">
<Title>Restoring Individual Filesets</Title>
<IndexTerm Id="DFSAGR.BKR.indx.63">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoreft</Command></Secondary>
</IndexTerm>
<Para>Use the <Command>bak restoreft</Command> command to restore one or more individual filesets.
Table 10-1 summarizes the options available with the command.  Unless indicated
as Optional in the table, each option is required.
<?sml-break></Para>
<Table Frame="all" Remap="center" Orient="Port">
<Title>Options Available with the bak restoreft Command</Title>
<TGroup Rowsep="0" Colsep="0" Cols="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colwidth="0.75*" Colname="col1" Colnum="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colwidth="1.6*" Colname="col2" Colnum="2">
<ColSpec Rowsep="1" Align="Left" Colwidth="2.2*" Colname="col3" Colnum="3">
<THead>
<Row>
<Entry Rowsep="1"><Literal>Option</Literal></Entry>
<Entry Rowsep="1"><Literal>Specifies</Literal></Entry>
<Entry Rowsep="1"><Literal>Additional Information</Literal></Entry>
</Row>
</THead>
<TBody>
<Row>
<Entry Rowsep="1"><Option>server</Option>
</Entry>
<Entry Rowsep="1">The File Server machine to which to restore each fileset
</Entry>
<Entry Rowsep="1">The specified machine can be a fileset's current site or a different site.
</Entry>
</Row>
<!-- _-->
<Row>
<Entry Rowsep="1"><Option>aggregate</Option>
</Entry>
<Entry Rowsep="1">The aggregate to which to restore each fileset
</Entry>
<Entry Rowsep="1">The specified aggregate can be a fileset's current site or a different site.
</Entry>
</Row>
<!-- _-->
<Row>
<Entry Rowsep="1"><Option>fileset</Option>
</Entry>
<Entry Rowsep="1">Each fileset to be restored
</Entry>
<Entry Rowsep="1">Specify the name of the read/write version of each fileset to be restored,
even if you dumped the <Literal>.backup</Literal> version of a fileset.
</Entry>
</Row>
<!-- _-->
<?sml-break>
<?sml-need 20>
<Row>
<Entry Rowsep="1"><Option>extension</Option>
<?sml-break>&ensp;&ensp;&ensp;(Optional)
</Entry>
<Entry Rowsep="1">An extension to add to the name of each restored fileset
</Entry>
<Entry Rowsep="1">Specify an extension to preserve filesets in the file system that have the
same names as those to be restored.  If you want a dot to separate the
extension from each name, specify the dot as the first character of the
extension (for example, <Literal>.restored</Literal>).
</Entry>
</Row>
<!-- _-->
<Row>
<Entry><Option>date</Option>
<?sml-break>&ensp;&ensp;&ensp;(Optional)
</Entry>
<Entry>The date and, optionally, the time to use for a date-specific restore
</Entry>
<Entry>Only dump sets of the indicated filesets dated before the specified date
are restored.  Omit this option to perform a full restore of the most recently
dumped version of each fileset.  Specify <Symbol Role="Variable">mm/dd/yy</Symbol> to indicate 00:00
(12:00 a.m.) on day <Symbol Role="Variable">mm/dd/yy</Symbol>; specify <Literal>"</Literal><Symbol Role="Variable">mm/dd/yy</Symbol>
<Symbol Role="Variable">hh</Symbol>:<Symbol Role="Variable">mm</Symbol><Literal>"</Literal> to indicate time <Symbol Role="Variable">hh</Symbol>:<Symbol Role="Variable">mm</Symbol> on day <Symbol Role="Variable">mm/dd/yy</Symbol>.
A time must be in 24-hour format (for example, <Literal>20:30</Literal> for 8:30 p.m.).
</Entry>
</Row>
</TBody>
</TGroup>
</Table>
<?sml-space 5>
<Para>To restore individual filesets, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists.  If
necessary, issue the <Command>bos lsadmin</Command> command to check.
</Para>
</ListItem>
<ListItem>
<Para><Replaceable>Optional</Replaceable>.  At this point, you can issue the <Command>bak</Command> command at the
system prompt to enter interactive mode. (See Section 10.2.2.3 for the
advantages of interactive mode.) The command in the following step assumes
that regular command mode is used, not interactive mode.
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak restoreft</Command> command with the appropriate options:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak restoreft -server </Command><Symbol Role="Variable">machine</Symbol> <Option>aggregate</Option> <Symbol Role="Variable">name</Symbol> <Option>fileset</Option> <Symbol Role="Variable">name</Symbol>... \
[<Option>extension </Option><Symbol Role="Variable">name_extension</Symbol>] [<Option>date </Option><Symbol Role="Variable">date</Symbol>] [<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>] \
[<Option>noaction</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>server</Option> <Symbol Role="Variable">machine</Symbol> option names the File Server machine to which
to restore each fileset.  Specify the File Server machine using the machine's
DCE pathname, the machine's host name, or the machine's IP address.
</Para>
<Para>The <Option>aggregate</Option> <Symbol Role="Variable">name</Symbol> option is the device name or aggregate name
of the aggregate to which to restore each fileset.
</Para>
<Para>The <Option>fileset</Option> <Symbol Role="Variable">name</Symbol> option is the name of each fileset to be
restored.
</Para>
<Para>The <Option>extension</Option> <Symbol Role="Variable">name_extension</Symbol> option is a new extension to be
added to the name of each fileset when it is restored.
</Para>
<Para>The <Option>date</Option> <Symbol Role="Variable">date</Symbol> option specifies the date and, optionally, the time
to use for a date-specific restore; only dumps performed prior to the specified
date (and time) are included in the restore.  There are two valid arguments:
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">mm</Symbol>/<Symbol Role="Variable">dd</Symbol>/<Symbol Role="Variable">yy</Symbol></Term>
<ListItem>
<Para>Causes a date-specific restore of dumps that were done before 00:00 (12:00
a.m.) on the indicated date.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">mm</Symbol>/<Symbol Role="Variable">dd</Symbol>/<Symbol Role="Variable">yy</Symbol> <Symbol Role="Variable">hh</Symbol>:<Symbol Role="Variable">mm</Symbol></Term>
<ListItem>
<?sml-break>
<Para>Causes a date-specific restore of dumps that were done before the specified
time on the indicated date.  The time must be in 24-hour format (for example,
<Literal>20:30</Literal> for 8:30 p.m.).  Surround the entire argument with <Literal>"&thinsp; "</Literal>
(double quotes) because it contains a space.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The <Option>noaction</Option> option directs the command to display the list of tapes
needed to complete the restore without performing the actual operation.
</Para>
</ListItem>
</OrderedList>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.28">
<Title>Restoring an Aggregate with the bak restoredisk Command</Title>
<IndexTerm Id="DFSAGR.BKR.indx.64">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoredisk</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.65">
<Primary>aggregates</Primary>
<Secondary>restoring contents</Secondary>
</IndexTerm>
<Para>Use the <Command>bak restoredisk</Command> command to restore all of the filesets on an
aggregate.  Table 10-2 summarizes the options available with the command.
Unless indicated as Optional in the table, each option is required.
<?sml-break></Para>
<Table Frame="all" Remap="center" Orient="Port">
<Title>Options Available with the bak restoredisk Command</Title>
<TGroup Rowsep="0" Colsep="0" Cols="3">
<ColSpec Colsep="1" Align="Left" Colwidth="1.0*" Colname="col1" Colnum="1">
<ColSpec Colsep="1" Align="Left" Colwidth="1.6*" Colname="col2" Colnum="2">
<ColSpec Align="Left" Colwidth="2.35*" Colname="col3" Colnum="3">
<THead>
<Row>
<Entry Rowsep="1"><Literal>Option</Literal></Entry>
<Entry Rowsep="1"><Literal>Specifies</Literal></Entry>
<Entry Rowsep="1"><Literal>Additional Information</Literal></Entry>
</Row>
</THead>
<TBody>
<Row>
<Entry Rowsep="1"><Option>server</Option>
</Entry>
<Entry Rowsep="1">The File Server machine on which the aggregate that houses the filesets to be
restored resides
</Entry>
<Entry Rowsep="1">The filesets on the aggregate are restored to this File Server machine unless
the <Option>newserver</Option> option names a different machine.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Option>aggregate</Option>
</Entry>
<Entry Rowsep="1">The aggregate that houses the filesets to be restored
</Entry>
<Entry Rowsep="1">The filesets on the aggregate are restored to an aggregate of this name unless
the <Option>newaggregate</Option> option names a different aggregate.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Option>newserver</Option>
<?sml-break>&ensp;&ensp;&ensp;(Optional)
</Entry>
<Entry Rowsep="1">The File Server machine to which the filesets are to be restored
</Entry>
<Entry Rowsep="1">Use this option only to restore the filesets to a File Server machine different
from the one specified with the <Option>server</Option> option.
</Entry>
</Row>
<Row>
<Entry><Option>newaggregate</Option>
<?sml-break>&ensp;&ensp;&ensp;(Optional)
</Entry>
<Entry>The aggregate to which the filesets are to be restored
</Entry>
<Entry>Use this option only to restore the filesets to an aggregate with a name
different from the one specified with the <Option>aggregate</Option> option.
</Entry>
</Row>
</TBody>
</TGroup>
</Table>
<?sml-indent -.5i>
<?sml-indent +.5i>
<?sml-break>
<?sml-need 30>
<Para>To restore all of the filesets on an aggregate, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists.  If
necessary, issue the <Command>bos lsadmin</Command> command to check.
</Para>
</ListItem>
<ListItem>
<Para><Replaceable>Optional</Replaceable>.  At this point, you can issue the <Command>bak</Command> command at the
system prompt to enter interactive mode. (See Section 10.2.2.3 for the
advantages of interactive mode.)  The command in the following step assumes
that regular command mode is used, not interactive mode.
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak restoredisk</Command> command with the appropriate options:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak restoredisk -server </Command><Symbol Role="Variable">machine</Symbol> <Option>aggregate</Option> <Symbol Role="Variable">name</Symbol> [<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>] \
[<Option>newserver </Option><Symbol Role="Variable">machine</Symbol>] \
[<Option>newaggregate </Option><Symbol Role="Variable">name</Symbol>] [<Option>noaction</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>server</Option> <Symbol Role="Variable">machine</Symbol> option names the File Server machine that
houses the aggregate to be restored.  Specify the File Server machine using the
machine's DCE pathname, the machine's host name, or the machine's IP address.
</Para>
<Para>The <Option>aggregate</Option> <Symbol Role="Variable">name</Symbol> option is the device name or aggregate name
of the aggregate to be restored.
</Para>
<Para>The <Option>newserver</Option> <Symbol Role="Variable">machine</Symbol> option names the File Server machine to
which to restore the data.  Use this option only if the data is to be restored
to a File Server machine other than the one specified with the <Option>server</Option>
option.  Specify the File Server machine using the machine's DCE  pathname, the
machine's host name, or the machine's IP address.
</Para>
<Para>The <Option>newaggregate</Option> <Symbol Role="Variable">name</Symbol> option is the device name or aggregate 
name of the aggregate to which to restore the data.  Use this option only if
the data is to be restored to an aggregate whose name is different from the
name of the aggregate specified with the <Option>aggregate</Option> option.
</Para>
<Para>The <Option>noaction</Option> option directs the command to display the list of tapes
needed to restore the aggregate without performing the actual operation.
</Para>
</ListItem>
</OrderedList>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.29">
<Title>Restoring Many Filesets with the bak restoreftfamily Command</Title>
<IndexTerm Id="DFSAGR.BKR.indx.66">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>restoreftfamily</Command></Secondary>
</IndexTerm>
<Para>Use the <Command>bak restoreftfamily</Command> command to restore filesets that
reside on multiple aggregates or on multiple File Server machines. In
situations in which you need to restore large amounts of data to
multiple sites (for example, when recovering from a catastrophic loss
of data), the <Command>bak restoreftfamily</Command> command offers significant
advantages over the <Command>bak restoreft</Command> and <Command>bak restoredisk</Command>
commands. The <Command>bak restoreftfamily</Command> command provides two ways to
restore filesets:
</Para>
<ItemizedList>
<ListItem>
<Para>You can restore all of the filesets that are included in a fileset family to
the sites at which they currently reside. (See Section 10.5.4.1.)
</Para>
</ListItem>
<ListItem>
<Para>You can restore specific individual filesets to the sites at which they
currently reside or to different sites, and you can restore different filesets
to different sites with a single instance of the command. (See Section
10.5.4.2.)
</Para>
</ListItem>
</ItemizedList>
<Para>You can use only one of the two approaches with a single instance of the
command. Regardless of the method you choose, the command always performs a
full restore of all filesets.
</Para>
<Sect3 Id="DFSAGR.BKR.div.30">
<Title>Restoring a Fileset Family</Title>
<Para>To use the <Command>bak restoreftfamily</Command> command to restore all of the filesets
included in a fileset family, specify the name of the fileset family with the
<Option>family</Option> option. The command restores the filesets to the sites at which
they currently exist.
</Para>
<Para>You can specify the name of an existing fileset family or you can define a
new fileset family and add entries that correspond to the filesets you need
to restore. The command always reads the FLDB to determine all of the filesets
that match the fields of the entries in a specified fileset family, so you can
create a fileset family expressly for use with the command. Use the <Command>bak
addftfamily</Command> and <Command>bak addftentry</Command> commands to define a new fileset
family for use with the <Command>bak restoreftfamily</Command> command. (See Chapter 9
for information about defining a fileset family.)
</Para>
<Para>In fileset families created for use with the <Command>bak restoreftfamily</Command> command,
define entries that match the read/write versions of filesets. The command
automatically appends a <Literal>.backup</Literal> extension to the name of a fileset if
it can find no record in the Backup Database of a backup performed for the
read/write version. You can include a <Literal>.backup</Literal> extension to match the
backup versions of filesets only if the backup versions were dumped to tape
and the backup versions are still valid in the FLDB entries for the filesets.
</Para>
<Para>To restore the filesets included in a fileset family, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists. If
necessary, issue the <Command>bos lsadmin</Command> command to check.
</Para>
</ListItem>
<ListItem>
<Para>At this point, you can issue the <Command>bak</Command> command at the system
prompt to enter interactive mode. This is optional. (See Section
10.2.2.3 for the advantages of interactive mode.)  The command in the
following step assumes that regular command mode is used, not
interactive mode.
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak restoreftfamily</Command> command with the <Option>family</Option>
option, as follows:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak restoreftfamily -family </Command><Symbol Role="Variable">fileset_family_name</Symbol> [<Option>tcid</Option> <Symbol Role="Variable">tc_number</Symbol>] [<Option>noaction</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>noaction</Option> option directs the command to display the list of
filesets that would be restored and the tapes necessary to restore them
without performing the actual operation.
</Para>
</ListItem>
</OrderedList>
</Sect3>
<Sect3 Id="DFSAGR.BKR.div.31">
<Title>Restoring Individual Filesets</Title>
<Para>To use the <Command>bak restoreftfamily</Command> command to restore individual filesets,
specify the name of a file that includes a single entry for each fileset to
be restored. The command restores each fileset to the site specified with the
fileset's entry in the named file. A file to be used with the command must
include entries of the following form:
</Para>
<InformalExample>
<Para><ProgramListing><Symbol Role="Variable">machine</Symbol> <Symbol Role="Variable">aggregate</Symbol> <Symbol Role="Variable">fileset</Symbol> [<Symbol Role="Variable">comments...</Symbol>]
</ProgramListing></Para>
</InformalExample>
<Para>An entry for a fileset must occupy a single line of the file, and each entry
must provide the following information:
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">machine</Symbol></Term>
<ListItem>
<Para>Specifies the File Server machine to which the fileset is to be restored.
Identify the machine by its DCE pathname, its host name, or its IP address.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">aggregate</Symbol></Term>
<ListItem>
<Para>Specifies the aggregate to which the fileset is to be restored. Identify the
aggregate by its device name or by its aggregate name.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">fileset</Symbol></Term>
<ListItem>
<Para>Specifies the fileset to be restored. Specify the name of the read/write
version of the fileset. (Note that you can specify the name of the backup
version of the fileset if that version was dumped to tape.)
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>Any <Symbol Role="Variable">comments</Symbol> in the form of additional text are always optional; the
command treats all remaining text as a comment and ignores it. Do not use
wildcards (<Literal>.*</Literal>, for example) in an entry. Note that if a fileset currently
exists at a site other than the site you specify, you must remove the existing
version of the fileset before issuing the command.
</Para>
<Para>When issued with the <Option>noaction</Option> option, the <Command>bak restoreftfamily</Command>
command generates output that, with slight modification, is suitable for use
as input to the command's <Option>file</Option> option. You can use the <Option>noaction</Option>
option with the command's <Option>family</Option> option to write a list of filesets and
their sites to a file. You can then prune the file to include a single entry
for each fileset that you need to restore. This approach is useful for
restoring only certain filesets from a fileset family or for restoring the
filesets to new sites. Note again that the <Option>family</Option> option provides
information only for filesets that have entries in the FLDB.
</Para>
<Para>To restore individual filesets, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>Create a file that contains an entry for each fileset you want to restore.
Each entry must name the machine to which the fileset is to be restored, the
aggregate to which the fileset is to be restored, and the fileset to be
restored. Use a single line in the file for each entry, and use a single entry
for each fileset (the command ignores subsequent entries for the same fileset).
You can use a text editor to create the file manually, or you can use the
<Option>noaction</Option> to write a list of filesets and their sites to a file, which
you can then modify for use with the command.
</Para>
</ListItem>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists. If
necessary, issue the <Command>bos lsadmin</Command> command to check.
</Para>
</ListItem>
<ListItem>
<Para>At this point, you can issue the <Command>bak</Command> command at the system
prompt to enter interactive mode. This is optional. (See Section
10.2.2.3 for the advantages of interactive mode.)  The command in the
following step assumes that regular command mode is used, not
interactive mode.
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak restoreftfamily</Command> command with the <Option>file</Option>
option, as follows:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak restoreftfamily -file </Command><Symbol Role="Variable">filename</Symbol> \ 
[<Option>tcid</Option> <Symbol Role="Variable">tc_number</Symbol>] [<Option>noaction</Option>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>file</Option> <Symbol Role="Variable">filename</Symbol> option provides the full pathname of a file
that contains an entry for each fileset to be restored.
</Para>
<Para>The <Option>noaction</Option> option directs the command to display the list of
filesets that would be restored and the tapes necessary to restore them
without performing the actual operation.
</Para>
</ListItem>
</OrderedList>
<IndexTerm Id="DFSAGR.BKR.indx.67" SpanEnd="DFSAGR.BKR.indx.65">
<IndexTerm Id="DFSAGR.BKR.indx.68" SpanEnd="DFSAGR.BKR.indx.56">
<IndexTerm Id="DFSAGR.BKR.indx.69" SpanEnd="DFSAGR.BKR.indx.55">
</Sect3>
</Sect2>
</Sect1>
<Sect1 Id="DFSAGR.BKR.div.32">
<Title>Administering the Backup Database</Title>
<IndexTerm Id="DFSAGR.BKR.indx.70">
<Primary>Backup Database</Primary>
<Secondary>administering</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.71">
<Primary>Backup Database</Primary>
<Secondary>checking for damage</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.72">
<Primary>Backup Database</Primary>
<Secondary>backing up</Secondary>
</IndexTerm>
<Para>A copy of the Backup Database can be installed on any server machine in a
cell.  The Backup Database stores two types of records used to track all of
the backups done in the cell: 
</Para>
<ItemizedList>
<ListItem>
<Para>Dump set records, which list the fileset family and the tape used in each dump
set
</Para>
</ListItem>
<ListItem>
<Para>Administrative records, which list the fileset families, dump levels, and tape
hosts
</Para>
</ListItem>
</ItemizedList>
<Para>Because information about dumps is difficult to recreate, it is important 
that you copy the Backup Database with the <Command>bak savedb</Command> command 
periodically, perhaps weekly.  When you issue the <Command>bak savedb</Command> command, 
the entire database is copied to tape.  One tape needs to be designated as 
a Backup Database tape; when the command is issued, the tape is labeled 
with the name <Literal>bak_db_dump.1</Literal>.
</Para>
<Para>If the Backup Database becomes damaged (for instance, if the disk that houses
the database becomes damaged), you must delete the old database and restore an
entirely new version from its backup tape.  You can use the <Command>bak verifydb</Command>
command to determine if the Backup Database is damaged.
</Para>
<Para>Do <Symbol Role="Variable">not</Symbol> attempt to recover information from a corrupted database. 
Instead, use the <Command>bos stop</Command> command to shut down <Replaceable>all</Replaceable> <Command>bakserver</Command>
processes.  Then remove the old Backup Database and its associated files from 
each machine on which it is located; the files for the Backup Database are 
named <Symbol Role="Variable">dcelocal</Symbol><Literal>/var/dfs/backup/bkdb.*</Literal> on each machine on which the 
database resides.
</Para>
<Para>Once the database is removed, use <Command>bos start</Command> to restart <Replaceable>all</Replaceable>
<Command>bakserver</Command> processes on the machines where they were running.  Use
<Command>bak addhost</Command> to add a tape host for the Tape Coordinator from which you
will restore the Backup Database, and use <Command>bak restoredb</Command> to restore the
new version of the database.  Recreate fileset information in the database as
needed, restoring dump set information that you may have lost since the last 
backup of filesets; note that any fileset family, fileset family entry, or 
host information updated since the last backup of the Backup Database must 
be recreated as well.
<?sml-break><?sml-need 20></Para>
<Para>If specific information about a dump set is accidentally deleted from the
Backup Database, you can use the <Command>bak scantape</Command> command with the
<Option>dbadd</Option> option to check the backup tape used for the dump set, recover
the dump set information, and add the information to the Backup Database.  Do
<Symbol Role="Variable">not</Symbol> use the <Command>bak scantape</Command> command to attempt to reconstruct the 
database.
</Para>
<Sect2 Id="DFSAGR.BKR.div.33">
<Title>Backing Up the Backup Database</Title>
<Para>To back up the Backup Database, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists.  If
necessary, issue the <Command>bos lsadmin</Command> command to check.
</Para>
</ListItem>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak savedb</Command> command to save the Backup Database to tape:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak savedb </Command>[<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>Place the Backup Database tape in the drive, and press <Literal>Return</Literal> in the
corresponding Tape Coordinator's monitoring window.
</Para>
</ListItem>
</OrderedList>
<IndexTerm Id="DFSAGR.BKR.indx.73" SpanEnd="DFSAGR.BKR.indx.72">
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.34">
<Title>Restoring the Backup Database</Title>
<IndexTerm Id="DFSAGR.BKR.indx.74">
<Primary>Backup Database</Primary>
<Secondary>restoring</Secondary>
</IndexTerm>
<Para>To restore the Backup Database, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists.  If
necessary, issue the <Command>bos lsadmin</Command> command to check.  In addition to the 
usual lists, you must also be included in the <Filename>admin.bos</Filename> list on each 
machine on which the Backup Database is installed.
</Para>
</ListItem>
<ListItem>
<Para>Verify that you have the <Literal>w</Literal> (write) and <Literal>x</Literal> (execute) permissions on 
the <Symbol Role="Variable">dcelocal</Symbol><Filename>/var/dfs/backup</Filename> directory on each machine on which the
Backup Database is installed.
<?sml-break><?sml-need 20></Para>
</ListItem>
<ListItem>
<Para>Stop all <Command>bakserver</Command> processes with the <Command>bos stop</Command> command.  You must
stop all <Command>bakserver</Command> processes on all machines on which the Backup 
Database is installed.
</Para>
</ListItem>
<ListItem>
<Para>Remove the old Backup Database by deleting the 
<Symbol Role="Variable">dcelocal</Symbol><Literal>/var/dfs/backup/bkdb.*</Literal> files from each machine on which the
database is installed.
</Para>
</ListItem>
<ListItem>
<Para>Start all <Command>bakserver</Command> processes with the <Command>bos start</Command> command.  You must
start <Replaceable>all</Replaceable> <Command>bakserver</Command> processes that you stopped in the earlier 
step; you must restart the processes on the same machines on which they 
were previously running.  When you start a <Command>bakserver</Command> process, an empty 
Backup Database is created if one does not already exist.
</Para>
</ListItem>
<ListItem>
<Para>Enter the <Command>bak addhost</Command> command to create an entry in the Backup Database
for the Tape Coordinator from which you will restore the Backup Database:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak addhost -tapehost </Command><Symbol Role="Variable">machine</Symbol> [<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>tapehost</Option> <Symbol Role="Variable">machine</Symbol> option is the DCE pathname of the 
machine (for example, <Replaceable>/.../abc.com/hosts/bak1</Replaceable>) for which the Tape 
Coordinator is to be added.
</Para>
</ListItem>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Issue the <Command>bak restoredb</Command> command to restore the Backup Database to tape:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak restoredb </Command>[<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>Place the Backup Database tape in the drive, and press <Literal>Return</Literal> in the
corresponding Tape Coordinator's monitoring window.
</Para>
</ListItem>
</OrderedList>
<?sml-break>
<?sml-need 20>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.35">
<Title>Recovering Specific Backup Data</Title>
<IndexTerm Id="DFSAGR.BKR.indx.75">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>scantape</Command></Secondary>
</IndexTerm>
<Para>Use the <Command>bak scantape</Command> command to extract dump set
information from a backup tape and add it to the Backup Database.  When
you issue this command, you must place the backup tapes into the drive
in sequential order.  The system verifies that each tape is undamaged by
checking the end-of-file markers that the Backup System inserts at the
beginning and end of each fileset.  If the markers are missing, the tape is
assumed to be damaged and cannot be used for recovering data.  To add
information to the database, the entire tape must be undamaged, and the
Backup Database must not contain an entry with the same dump ID as an
entry being added.
</Para>
<Para>To add recovered data to the Backup Database, do the following:
</Para>
<OrderedList>
<ListItem>
<Para>Verify that you are included in the appropriate administrative lists.  If
necessary, issue the <Command>bos lsadmin</Command> command to check.
</Para>
</ListItem>
<ListItem>
<Para>If it is not already running, start the Tape Coordinator for the tape drive
that you want to use with the operation. (See Section 10.2.2.1 for information
on using the <Command>butc</Command> command to start a Tape Coordinator.)
</Para>
</ListItem>
<ListItem>
<Para>Insert the first backup tape from the dump sequence into the tape drive, and
issue the <Command>bak scantape</Command> command <Replaceable>without</Replaceable> the <Option>dbadd</Option> option.
Information from the tape is displayed in the Tape Coordinator's monitoring
window.
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak scantape </Command>[<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>If the output indicates that the tape is undamaged, issue the <Command>bak
scantape</Command> command again, <Replaceable>including</Replaceable> the <Option>dbadd</Option> option.  This adds
the information from the tape to the Backup Database.
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>$ <Command>bak scantape </Command>[<Option>dbadd</Option>] [<Option>tcid </Option><Symbol Role="Variable">tc_number</Symbol>]
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Option>dbadd</Option> option indicates that information extracted from the tape 
is to be added to the Backup Database; information is added only if the tape 
is undamaged and the Backup Database does not have an entry with the same 
dump ID as an entry being added.
</Para>
</ListItem>
</OrderedList>
<IndexTerm Id="DFSAGR.BKR.indx.76" SpanEnd="DFSAGR.BKR.indx.74">
<IndexTerm Id="DFSAGR.BKR.indx.77" SpanEnd="DFSAGR.BKR.indx.70">
<?sml-break>
<?sml-need 20>
</Sect2>
</Sect1>
<Sect1 Id="DFSAGR.BKR.div.36">
<Title>Displaying and Canceling Operations in Interactive Mode</Title>
<IndexTerm Id="DFSAGR.BKR.indx.78">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary>interactive mode</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.79">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Literal>jobs</Literal></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.80">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>kill</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.81">
<Primary>backup operations</Primary>
<Secondary>canceling</Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.82">
<Primary>restore operations</Primary>
<Secondary>canceling</Secondary>
</IndexTerm>
<Para>When you issue a command in interactive mode, the resulting operation is
assigned a unique job ID number.  While in interactive mode, you can use
the <Command>bak jobs</Command> command to list job ID numbers and status information about
all of the operations currently executing or pending in the queue on a tape 
drive (operations that do not involve tapes execute immediately and do not 
appear on the list).  You can use the job ID number of an operation (or its 
dump set name if it is a dump) with the <Command>bak kill</Command> command to cancel an 
operation that is executing or that is in the queue.
</Para>
<Para>If you cancel an operation that is in the queue, it is removed from the queue
with no other effects.  Furthermore, if you cancel a tape labeling or tape
scanning operation as it executes, the operation simply terminates with no
further effects.  However, canceling a dump or restore operation while it
executes can produce inconsistencies on a backup tape or in the file system.
</Para>
<Para>If you cancel a backup operation while it is executing, all filesets written
to tape <Replaceable>before</Replaceable> the <Command>kill</Command> signal is received are complete and 
usable on the tape.  However, filesets being written <Replaceable>when</Replaceable> the signal 
is received may be incomplete and <Replaceable>should not be used</Replaceable>.
</Para>
<Para>If you cancel a restore operation while it is executing, all completely
restored filesets are online and usable.  However, because most restore
operations require data from multiple tapes (a full dump tape and one or more
incremental dump tapes), most filesets are usually not completely restored.  If
the <Command>kill</Command> signal occurs before the system accesses all of the necessary 
tapes, most filesets are not restored to the desired date or version 
and <Replaceable>should not be used</Replaceable>.
</Para>
<Para>If the interrupted restore operation is overwriting one or more existing
filesets, the filesets can be lost entirely; however, the data being restored
still exists on tape.  In general, to avoid the inconsistencies that can result
from an interrupted restore operation, reinitiate the restore operation.
<?sml-break><?sml-need 20></Para>
<Sect2 Id="DFSAGR.BKR.div.37">
<Title>Displaying Operations in Interactive Mode</Title>
<IndexTerm Id="DFSAGR.BKR.indx.83">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Literal>jobs</Literal></Secondary>
</IndexTerm>
<Para>Issue the <Command>bak jobs</Command> command to determine the job ID number of an
operation.  For an operation to appear in the output from the <Command>bak jobs</Command>
command, you must have initiated the operation in interactive mode, and you
must still be in interactive mode.  No privileges are required to display an
operation with the <Command>bak jobs</Command> command. (See Section 10.2.2.3 for more
information about interactive mode).
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>bak> <Literal>jobs</Literal>
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>If no operations are pending or executing, the prompt returns immediately.
Otherwise, the output reports the following information for each job.  The
output is very similar to that produced by the <Command>bak status</Command> command.
</Para>
<ItemizedList>
<ListItem>
<Para>The job ID number.
</Para>
</ListItem>
<ListItem>
<Para>A name describing the operation.  One of the following operation names is
displayed for each job: 
</Para>
<ItemizedList>
<ListItem>
<Para><ComputerOutput>Dump (</ComputerOutput><Symbol Role="Variable">dump_set</Symbol><ComputerOutput>)</ComputerOutput>
</Para>
<Para>This is displayed for a backup operation initiated with the <Command>bak
dump</Command> command; <Symbol Role="Variable">dump_set</Symbol> is the name of the dump set in the form
<Symbol Role="Variable">fileset_family_name</Symbol><Literal>.</Literal><Symbol Role="Variable">dump_level</Symbol>.
</Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>Restore</ComputerOutput> 
</Para>
<Para>This is displayed for a restore operation initiated with the <Command>bak
restoreft</Command>, <Command>bak restoredisk</Command>, or <Command>bak restoreftfamily</Command>
command.
</Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>Labeltape (</ComputerOutput><Symbol Role="Variable">tape_label</Symbol><ComputerOutput>)</ComputerOutput>
</Para>
<Para>This is displayed for a tape labeling operation started with
the <Command>bak labeltape</Command> command; <Symbol Role="Variable">tape_label</Symbol> is the tape label specified
with the <Command>bak labeltape</Command> command's options.
</Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>Scantape</ComputerOutput>
</Para>
<Para>This is displayed for a tape scanning operation initiated with the <Command>bak
scantape</Command> or <Command>bak readlabel</Command> command.
<?sml-break><?sml-need 20></Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>SaveDb</ComputerOutput>
</Para>
<Para>This is displayed for a <Command>bak savedb</Command> operation.
</Para>
</ListItem>
<ListItem>
<Para><ComputerOutput>RestoreDb</ComputerOutput>
</Para>
<Para>This is displayed for a <Command>bak restoredb</Command> operation.
</Para>
</ListItem>
</ItemizedList>
</ListItem>
<ListItem>
<Para>The number of kilobytes transferred so far (from the file system to tape for a
dump operation, or from tape to the file system for a restore operation).
</Para>
</ListItem>
<ListItem>
<Para>For a dump operation, the string <ComputerOutput>fileset</ComputerOutput> followed by the name of the
fileset currently being dumped; for a restore operation, the string
<ComputerOutput>fileset</ComputerOutput> followed by the name of the fileset currently being restored.
</Para>
</ListItem>
<ListItem>
<Para>A message indicating the status of the operation.  No message is displayed
if the operation is executing normally.
</Para>
<ItemizedList>
<ListItem>
<Para>The <ComputerOutput>[abort request]</ComputerOutput> message means the <Command>bak kill</Command> command was 
issued but the operation is not yet canceled.
</Para>
</ListItem>
<ListItem>
<Para>The <ComputerOutput>[abort sent]</ComputerOutput> message means the operation is canceled; once the 
system removes it from the queue or stops its execution, the operation no 
longer appears in the listing from the <Command>bak jobs</Command> command.
</Para>
</ListItem>
<ListItem>
<Para>The <ComputerOutput>[butc contact lost]</ComputerOutput> message means the <Command>bak</Command> program 
temporarily lost contact with the Tape Coordinator executing the operation.
</Para>
</ListItem>
<ListItem>
<Para>The <ComputerOutput>[drive wait]</ComputerOutput> message means the operation is waiting for the 
specified tape drive to become free.
</Para>
</ListItem>
<ListItem>
<Para>The <ComputerOutput>[operator wait]</ComputerOutput> message means the Tape Coordinator is waiting for 
the operator monitoring the command's execution to insert a tape in the drive.
</Para>
</ListItem>
</ItemizedList>
</ListItem>
</ItemizedList>
<?sml-break>
<?sml-need 20>
</Sect2>
<Sect2 Id="DFSAGR.BKR.div.38">
<Title>Canceling Operations in Interactive Mode</Title>
<IndexTerm Id="DFSAGR.BKR.indx.84">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Command>kill</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DFSAGR.BKR.indx.85">
<Primary><Command>bak</Command> command suite</Primary>
<Secondary><Literal>jobs</Literal></Secondary>
</IndexTerm>
<Para>Issue the <Command>bak kill</Command> command to cancel an operation.  Use the <Command>bak jobs</Command>
command to determine the job ID number of the operation to be killed.  No
privileges are required to cancel an operation with the <Command>bak kill</Command> command.
The command can be issued only in interactive mode. (See Section 10.2.2.3 for
more information about interactive mode.)
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>bak> <Command>kill</Command> {<Symbol Role="Variable">jobID</Symbol> | <Symbol Role="Variable">dump_set</Symbol>}
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The <Symbol Role="Variable">jobID</Symbol> argument is the unique job ID number of the operation to be
canceled; the <Symbol Role="Variable">dump_set</Symbol> argument is the name of the operation in the form
<Symbol Role="Variable">fileset_family_name</Symbol><Literal>.</Literal><Symbol Role="Variable">dump_level</Symbol> if it is a dump.  Use either argument
to indicate the operation to be canceled.
<IndexTerm Id="DFSAGR.BKR.indx.86" SpanEnd="DFSAGR.BKR.indx.78"></Para>
</Sect2>
</Sect1>
</Chapter>
<!--+ 10/19/96 18:43:16
    | tagMorph:  $Id: backrest.sgm,v 1.1.2.6 1996/12/15 23:01:42 wardr Exp $
    | tagMorph library:  $Id: backrest.sgm,v 1.1.2.6 1996/12/15 23:01:42 wardr Exp $
    | sml-to-docbook:  1.23
    +-->
