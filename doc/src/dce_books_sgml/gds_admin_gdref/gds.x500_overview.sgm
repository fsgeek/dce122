<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: gds.x500_overview.sgm,v $
# Revision 1.1.2.7  1996/12/17  19:30:46  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  19:24:04  damon]
#
# Revision 1.1.2.6  1996/12/16  22:18:35  carrig
# 	{enh,R1.2.2}
# 	JC's Final edits
# 	[1996/12/16  22:15:43  carrig]
# 
# Revision 1.1.2.5  1996/12/15  22:57:32  carrig
# 	{enh,R1.2.2}
# 	Many, many changes
# 	[1996/12/15  22:55:53  carrig]
# 
# Revision 1.1.2.4  1996/10/04  18:25:42  carrig
# 	{enh,R1.2.2}
# 	Fixed Variable Lists
# 	[1996/10/04  18:24:31  carrig]
# 
# Revision 1.1.2.3  1996/10/04  13:56:32  carrig
# 	{enh,R1.2.2}
# 	Fixed Variable Lists
# 	[1996/10/03  18:11:18  carrig]
# 
# Revision 1.1.2.2  1996/09/28  16:01:05  weir
# 	Cleaned up history
# 	[1996/09/28  15:59:58  weir]
# 
# Revision 1.1.2.1  1996/09/24  20:21:52  weir
# 	Initial submission
# 	[1996/09/24  20:20:13  weir]
# 
# $EndLog$
# 
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE BOOK PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
<!ENTITY BEntities SYSTEM "BEntities.sgm">
<!ENTITY OSFGDS.PREF.ent.1 SYSTEM "typo_conv.sgm">
<!ENTITY OSFGDS.PREF.ent.2 SYSTEM "file_paths.sgm">
<!ENTITY OSFGDS.GDSXO.pic.1 SYSTEM "eps/fig1.04.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.2 SYSTEM "eps/fig01.ditentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.3 SYSTEM "eps/fig01.tree.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.4 SYSTEM "eps/fig1.06a.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.5 SYSTEM "eps/fig1.06aa.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.6 SYSTEM "eps/fig1.06aaa.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.7 SYSTEM "eps/fig12.knowleginfo.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.8 SYSTEM "eps/fig12.accesscontrol.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.9 SYSTEM "eps/fig12.addacl3.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.10 SYSTEM "eps/fig12.treeprocess.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.11 SYSTEM "eps/fig1.08.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.12 SYSTEM "eps/fig1.06c.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.13 SYSTEM "eps/fig12.admsrt.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.14 SYSTEM "eps/fig12.srtruledsa.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.15 SYSTEM "eps/fig1.07.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.16 SYSTEM "eps/fig1.15.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.17 SYSTEM "eps/fig1.16.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.18 SYSTEM "eps/fig1.17.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSXO.pic.19 SYSTEM "eps/fig12.multicast2.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSC.pic.1 SYSTEM "eps/GDS_components.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSC.pic.2 SYSTEM "eps/OSI_protocol_layers.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSC.pic.3 SYSTEM "eps/fig13.samptreeinitDSA.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.1 SYSTEM "eps/fig14.cellworksheet.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.2 SYSTEM "eps/fig14.aclsfor3atts.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.3 SYSTEM "eps/fig14.aclschemaworksheet.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.4 SYSTEM "eps/fig14.aclobjectworksheet.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.5 SYSTEM "eps/fig14.shadowworksheet.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.6 SYSTEM "eps/fig14.client.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.7 SYSTEM "eps/fig14.clientserver.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSDCP.pic.8 SYSTEM "eps/fig14.remotedsa.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSIG.pic.1 SYSTEM "eps/fig17.shadowofschema.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSIG.pic.2 SYSTEM "eps/fig17.shadowbranch4.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSIG.pic.3 SYSTEM "eps/fig17.newtreejoe.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.1 SYSTEM "eps/fig20.addobject.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.2 SYSTEM "eps/fig20.removeobject.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.3 SYSTEM "eps/fig20.addattribute.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.4 SYSTEM "eps/fig20.removeattribute.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.5 SYSTEM "eps/fig20.modifyattribute.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.6 SYSTEM "eps/fig20.addalias.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.7 SYSTEM "eps/fig20.modifyrdn.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.8 SYSTEM "eps/fig20.displaydsa.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.9 SYSTEM "eps/fig20.addclientaddress.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.10 SYSTEM "eps/fig20.displayclientaddress.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSOA.pic.11 SYSTEM "eps/fig20.deletedefaultdsa.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.1 SYSTEM "eps/fig21.displaysrt.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.2 SYSTEM "eps/fig21.addsrtentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.3 SYSTEM "eps/fig21.deleteentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.4 SYSTEM "eps/fig21.modifyentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.5 SYSTEM "eps/fig21.displyoct.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.6 SYSTEM "eps/fig21.addoctentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.7 SYSTEM "eps/fig21.deleteoctentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.8 SYSTEM "eps/fig21.modifyoctentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.9 SYSTEM "eps/fig21.displayat.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.10 SYSTEM "eps/fig21.addatentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.11 SYSTEM "eps/fig21.deleteatentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSCA.pic.12 SYSTEM "eps/fig21.modifyatentry.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.1 SYSTEM "eps/fig22.cacheupdate.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.2 SYSTEM "eps/fig22.createshadows.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.3 SYSTEM "eps/fig22.createshadows2.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.4 SYSTEM "eps/fig22.createshadowingjob.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.5 SYSTEM "eps/fig22.removeshadows.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.6 SYSTEM "eps/fig22.removeshadowjob.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.7 SYSTEM "eps/fig22.updateshadows.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.8 SYSTEM "eps/fig22.updateshadows2.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.9 SYSTEM "eps/fig22.displayshadowjobs.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.10 SYSTEM "eps/fig22.displayupdateerror.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSHA.pic.11 SYSTEM "eps/fig22.removeupdateerror.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.1 SYSTEM "eps/fig23.movesubtree.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.2 SYSTEM "eps/fig23.appendsubtree.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.3 SYSTEM "eps/fig23.appendsubtree2.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.4 SYSTEM "eps/fig23.savesubtreeop.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.5 SYSTEM "eps/fig23.beforesaveandappend.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.6 SYSTEM "eps/fig23.aftersaveandappend.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.7 SYSTEM "eps/fig23.beforesaveandappend2.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.8 SYSTEM "eps/fig23.appendsubtreeop.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.9 SYSTEM "eps/fig23.copysubtreeop.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.10 SYSTEM "eps/fig23.copysubtreeop2.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.11 SYSTEM "eps/fig23.beforechangename.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.12 SYSTEM "eps/fig23.afterchangename.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.13 SYSTEM "eps/fig23.chgnamemovesubtreeop.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.14 SYSTEM "eps/fig23.chgnamemovesubtreeop2.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.15 SYSTEM "eps/fig23.deletesubtreeop.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.16 SYSTEM "eps/fig23.beforechangemaster.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.17 SYSTEM "eps/fig23.afterchangemaster.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.18 SYSTEM "eps/fig23.changemasterop.eps" NDATA EPS>
<!ENTITY OSFGDS.GDSSA.pic.19 SYSTEM "eps/fig23.modifysubtreeop.eps" NDATA EPS>
<!ENTITY OSFGDS.HAPP.pic.1 SYSTEM "eps/psap.eps" NDATA EPS>
<!ENTITY OSFGDS.IAPP.pic.1 SYSTEM "eps/fig.eps" NDATA EPS>
<!ENTITY OSFGDS.JAPP.pic.1 SYSTEM "eps/fig14.aclobjectworksheetE.eps" NDATA EPS>
<!ENTITY OSFGDS.JAPP.pic.2 SYSTEM "eps/fig14.aclschemaworksheetE.eps" NDATA EPS>
<!ENTITY OSFGDS.JAPP.pic.3 SYSTEM "eps/fig14.cellworksheetE.eps" NDATA EPS>
<!ENTITY OSFGDS.JAPP.pic.4 SYSTEM "eps/fig14.clientE.eps" NDATA EPS>
<!ENTITY OSFGDS.JAPP.pic.5 SYSTEM "eps/fig14.clientserverE.eps" NDATA EPS>
<!ENTITY OSFGDS.JAPP.pic.6 SYSTEM "eps/fig14.remotedsaE.eps" NDATA EPS>
<!ENTITY OSFGDS.JAPP.pic.7 SYSTEM "eps/fig14.shadowworksheetE.eps" NDATA EPS>
<!ENTITY OSFGDS.LAPP.pic.1 SYSTEM "eps/nds.eps" NDATA EPS>
<!ENTITY BOOKDEFS SYSTEM "BOOKDEFS.sgm">
<!ENTITY MotifMa "<CiteTitle>OSF/Motif Patch Kit Notes</CiteTitle>">
<!ENTITY MotifMb "<CiteTitle>OSF/Motif Porting Guide</CiteTitle>">
<!ENTITY MotifMc "<CiteTitle>OSF/Motif Programmer's Guide</CiteTitle>">
<!ENTITY MotifMd "<CiteTitle>OSF/Motif Programmer's Reference</CiteTitle>">
<!ENTITY MotifMe "<CiteTitle>OSF/Motif Release Notes</CiteTitle>">
<!ENTITY MotifMf "<CiteTitle>OSF/Motif Style Guide</CiteTitle>">
<!ENTITY MotifMg "<CiteTitle>OSF/Motif Technical Bulletins</CiteTitle>">
<!ENTITY MotifMh "<CiteTitle>OSF/Motif Test Suite User's Guide</CiteTitle>">
<!ENTITY MotifMi "<CiteTitle>OSF/Motif User's Guide</CiteTitle>">
<!ENTITY MotifMj "<CiteTitle>OSF/Motif Widget Meta-Language Facility</CiteTitle>">
<!ENTITY MotifMk "<CiteTitle>OSF/Motif Widget Writer's Guide</CiteTitle>">
<!ENTITY AESSi "<CiteTitle>Application Environment Specification (AES) &mdash; Operating System Programming Interfaces Volume</CiteTitle>">
<!ENTITY AESSu "<CiteTitle>Application Environment Specification &mdash; User Environment Volume</CiteTitle>">
<!ENTITY AESSV "<CiteTitle>AES/OS Validation Suite User's Guide</CiteTitle>">
<!ENTITY AESSv "<CiteTitle>AES/UE Validation Suite User's Guide</CiteTitle>">
<!ENTITY OSF1Id "<CiteTitle>Design of the OSF/1 Operating System</CiteTitle>">
<!ENTITY OSF1Ga "<CiteTitle>OSF/1 Applications Programmer's Guide</CiteTitle>">
<!ENTITY OSF1Gc "<CiteTitle>OSF/1 Network and Communications Administrator's Guide</CiteTitle>">
<!ENTITY OSF1Ge "<CiteTitle>OSF/1 System Extension Guide</CiteTitle>">
<!ENTITY OSF1Gm "<CiteTitle>OSF/1 System Administrator's Guide</CiteTitle>">
<!ENTITY OSF1Gn "<CiteTitle>OSF/1 Network Applications Programmer's Guide</CiteTitle>">
<!ENTITY OSF1Gp "<CiteTitle>OSF/1 System Porting Guide</CiteTitle>">
<!ENTITY OSF1Gu "<CiteTitle>OSF/1 User's Guide</CiteTitle>">
<!ENTITY OSF1Ra "<CiteTitle>OSF/1 System and Network Administrator's Reference</CiteTitle>">
<!ENTITY OSF1Rc "<CiteTitle>OSF/1 Command Reference</CiteTitle>">
<!ENTITY OSF1Rp "<CiteTitle>OSF/1 Programmer's Reference</CiteTitle>">
<!ENTITY OSF1Rs "<CiteTitle>OSF/1 System Programmer's Reference Volume 1</CiteTitle>">
<!ENTITY OSF1Ri "<CiteTitle>OSF/1 System Programmer's Reference Volume 2</CiteTitle>">
<!ENTITY OSF1Rx "<CiteTitle>OSF/1 POSIX Conformance Document</CiteTitle>">
<!ENTITY OSF1Rn "<CiteTitle>OSF/1 Release 1.1 Snapshot and Release Notes</CiteTitle>">
<!ENTITY OSF1sU "<CiteTitle>OSF/1 Security Features User's Guide</CiteTitle>">
<!ENTITY OSF1sP "<CiteTitle>OSF/1 Security Features Programmer's Guide</CiteTitle>">
<!ENTITY OSF1sA "<CiteTitle>OSF/1 Security Features Administrator's Guide</CiteTitle>">
<!ENTITY OSF1sD "<CiteTitle>OSF/1 Security Detailed Design Specification</CiteTitle>">
<!ENTITY OSF1sC "<CiteTitle>Conformance Document</CiteTitle>">
<!ENTITY OSF1pM "<CiteTitle>OSF/1 Program Management Architecture Specification</CiteTitle>">
<!ENTITY DCEIn "<CiteTitle>Introduction to OSF DCE</CiteTitle>">
<!ENTITY DCEDg "<CiteTitle>OSF DCE Application Development Guide</CiteTitle>">
<!ENTITY DCEDi "<CiteTitle>OSF DCE Application Development Guide&mdash;Introduction and Style Guide</CiteTitle>">
<!ENTITY DCEDk "<CiteTitle>OSF DCE Application Development Guide&mdash;Core Components</CiteTitle>">
<!ENTITY DCEDd "<CiteTitle>OSF DCE Application Development Guide&mdash;Directory Services</CiteTitle>">
<!ENTITY DCEDr "<CiteTitle>OSF DCE Application Development Reference</CiteTitle>">
<!ENTITY DCEAg "<CiteTitle>OSF DCE Administration Guide</CiteTitle>">
<!ENTITY DCEAi "<CiteTitle>OSF DCE Administration Guide&mdash;Introduction</CiteTitle>">
<!ENTITY DCEAc "<CiteTitle>OSF DCE Administration Guide&mdash;Core Components</CiteTitle>">
<!ENTITY DCEAd "<CiteTitle>OSF DCE DFS Administration Guide and Reference</CiteTitle>">
<!ENTITY DCEAx "<CiteTitle>OSF DCE GDS Administration Guide and Reference</CiteTitle>">
<!ENTITY DCEAe "<CiteTitle>OSF DCE Administration Guide&mdash;Extended Services</CiteTitle>">
<!ENTITY DCEAr "<CiteTitle>OSF DCE Command Reference</CiteTitle>">
<!ENTITY DCEPg "<CiteTitle>OSF DCE Porting and Testing Guide</CiteTitle>">
<!ENTITY DCETs "<CiteTitle>OSF DCE Technical Supplement</CiteTitle>">
<!ENTITY DCETg "<CiteTitle>OSF DCE Problem Determination Guide</CiteTitle>">
<!ENTITY DCEDc "<CiteTitle>Application Environment Specification/Distributed Computing</CiteTitle>">
<!ENTITY DCERe "<CiteTitle>OSF DCE Release Notes</CiteTitle>">
<!ENTITY DCETm "<CiteTitle>OSF DCE Testing Guide</CiteTitle>">
<!ENTITY DCEHa "<CiteTitle>OSF DCE/File-Access Administration Guide and Reference</CiteTitle>">
<!ENTITY DCEHu "<CiteTitle>OSF DCE/File-Access User's Guide</CiteTitle>">
<!ENTITY DCEHt "<CiteTitle>OSF DCE/File-Access FVT User's Guide</CiteTitle>">
<!ENTITY DMED1 "<CiteTitle>Introduction to OSF DME</CiteTitle>">
<!ENTITY DMED2 "<CiteTitle>OSF DME System Administrator's Guide and Reference</CiteTitle>">
<!ENTITY DMED3 "<CiteTitle>OSF DME Application Developer's Guide and Reference</CiteTitle>">
<!ENTITY DMED6 "<CiteTitle>OSF DME Release Notes</CiteTitle>">
<!ENTITY title SYSTEM "title.sgm">
<!ENTITY copyright SYSTEM "copyright.sgm">
<!ENTITY preface SYSTEM "preface.pageset.sgm">
<!ENTITY gdpart SYSTEM "gd_part.sgm">
<!ENTITY gdscomponents SYSTEM "gds.components.sgm">
<!ENTITY gdsdevconfigplan SYSTEM "gds.dev_config_plan.sgm">
<!ENTITY gdsoverviewadmintools SYSTEM "gds.overview_admin_tools.sgm">
<!ENTITY gdsinstalldailyops SYSTEM "gds.install_daily_ops.sgm">
<!ENTITY gdsinitgds SYSTEM "gds.init_gds.sgm">
<!ENTITY gdsloggingondsa SYSTEM "gds.logging_on_dsa.sgm">
<!ENTITY gdsobjadmin SYSTEM "gds.obj_admin.sgm">
<!ENTITY gdsschemaadmin SYSTEM "gds.schema_admin.sgm">
<!ENTITY gdsshadowadmin SYSTEM "gds.shadow_admin.sgm">
<!ENTITY gdssubtreeadmin SYSTEM "gds.subtree_admin.sgm">
<!ENTITY Eappgds SYSTEM "E_app.gds.sgm">
<!ENTITY Fappgds SYSTEM "F_app.gds.sgm">
<!ENTITY Gappgds SYSTEM "G_app.gds.sgm">
<!ENTITY Happgds SYSTEM "H_app.gds.sgm">
<!ENTITY Iappgds SYSTEM "I_app.gds.sgm">
<!ENTITY Jappgds SYSTEM "J_app.gds.sgm">
<!ENTITY Kappgds SYSTEM "K_app.gds.sgm">
<!ENTITY Lappgds SYSTEM "L_app.gds.sgm">
<!ENTITY Mappgds SYSTEM "M_app.gds.sgm">
<!ENTITY Nappgds SYSTEM "N_app.gds.sgm">
<!ENTITY Oappgds SYSTEM "O_app.gds.sgm">
<!ENTITY refpart SYSTEM "ref_part.sgm">
<!ENTITY chapter SYSTEM "chapter.sgm">
<!ENTITY gdsintro SYSTEM "MAN8/gds_intro.8gds">
<!ENTITY gdscacheadm SYSTEM "MAN8A/gdscacheadm.8gds">
<!ENTITY gdscp SYSTEM "MAN8A/gdscp.8gds">
<!ENTITY gdsdirinfo SYSTEM "MAN8A/gdsdirinfo.8gds">
<!ENTITY gdsditadm SYSTEM "MAN8A/gdsditadm.8gds">
<!ENTITY gdsipcinit SYSTEM "MAN8A/gdsipcinit.8gds">
<!ENTITY gdsipcstat SYSTEM "MAN8A/gdsipcstat.8gds">
<!ENTITY gdssetup SYSTEM "MAN8A/gdssetup.8gds">
<!ENTITY gdsstep SYSTEM "MAN8A/gdsstep.8gds">
<!ENTITY gdssysadm SYSTEM "MAN8A/gdssysadm.8gds">
<!ENTITY x500abbr SYSTEM "MAN8B/x500abbr.8gds">
<!ENTITY x500obj SYSTEM "MAN8B/x500obj.8gds">
<!ENTITY x500svc SYSTEM "MAN8B/x500svc.8gds">
]>
-->
<chapter id="OSFGDS.GDSXO.div.1">
<title>Overview of the X.500 Directory Service</title>
<indexterm id="OSFGDS.GDSXO.indx.1"><primary>message handling</primary><see>
masks, MHS</see></indexterm><indexterm id="OSFGDS.GDSXO.indx.2"><primary>
directories</primary><see>also shadows, shadowing jobs</see></indexterm>
<indexterm id="OSFGDS.GDSXO.indx.3"><primary>directories</primary><secondary>
information model (GDS)</secondary></indexterm><para>The Global Directory
Service (GDS) is a distributed, replicated directory service. <FirstTerm>Distributed</FirstTerm>
in this  context means that information is stored in different places in the
network.  Requests for information are routed by GDS to directory servers
throughout the network.  <FirstTerm>Replicated</FirstTerm> in this context  means that information
is stored in more than one location for easier access.</para>
<para>GDS is based on the CCITT X.500/IS 9594 (1988) international standard.
 The aim of this standard, also referred to as the International Organization
for Standardization (ISO)  directory standard, is to provide a global directory
that supports network users and applications with information required for
communication.  The directory plays a significant role in allowing the interconnection
of information processing systems from different manufacturers, under different
managements, of different levels of complexity, and of different ages.</para>
<para>GDS is the DCE implementation of the OSI directory standard. Together
with the Cell Directory Service (CDS), it provides its users with a centralized
place to store information required for communication, which can be retrieved
from anywhere in a distributed system.  GDS maintains information describing
objects such as people, organizations, applications, distribution lists, network
hardware, and other distributed services dispersed over a large geographical
area.</para>
<para>CDS stores names and attributes of resources located in a DCE cell.
 A DCE cell consists of various combinations of DCE machines connected by
a network.  Each DCE cell contains its own CDS Server, which provides access
to local resource information.  CDS is optimized to provide users with access
to local information.</para>
<para>GDS serves as a general-purpose information repository.  It provides
information about resources outside a DCE cell.  GDS links the various cells
by helping to locate remote cells.  </para>
<sect1 id="OSFGDS.GDSXO.div.2">
<title>The Directory Information Model</title>
<indexterm id="OSFGDS.GDSXO.indx.4"><primary>objects</primary><secondary>
about (GDS)</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.5"><primary>
Directory Information Base (DIB)</primary><secondary>about</secondary></indexterm>
<para>A <replaceable>directory</replaceable> is a collection of information
about objects that exist in the world.  Objects are anything with a name,
for example people, organizations, printer servers, and application processes. 
</para>
<para>All types of information can be stored in a directory.  This information
is usually in the form of a description or an address. For example, a typical
directory is a white pages city telephone directory containing information
about people and businesses.  The addressing information stored in the directory
consists of the telephone number and street address of a person or business.
 Descriptive information is the name of the person or business.  Another example
is a yellow pages directory that provides information about an object, such
as a restaurant.  A specific restaurant may include additional information
such as types of food, serving times, credit cards accepted, and so on.</para>
<para>The information stored in a directory is known as the <replaceable>
Directory Information Base</replaceable> (DIB).</para>
<sect2 id="OSFGDS.GDSXO.div.3">
<title>Entries</title>
<indexterm id="OSFGDS.GDSXO.indx.6"><primary>objects</primary><secondary>
entries</secondary></indexterm><para>Information about an object is stored
in an entry in the DIB.  There are two types of entries in the directory.
 An <symbol role="Variable">object</symbol> entry refers to an object and
contains all the information about that object in the DIB. An <replaceable>
alias</replaceable> entry is a special type of entry that provides an alternative
name for an entry. Alias entries are described later in this chapter.</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.4">
<title>Attributes</title>
<indexterm id="OSFGDS.GDSXO.indx.7"><primary>attributes</primary><secondary>
GDS</secondary></indexterm><para>Each entry in the DIB is made up of a set
of attributes.  Each attribute stores information about the object to which
the entry refers. An entry for a person can contain separate attributes for
their last name, full name, postal address, telephone number, and so on. 
</para>
<para>Each attribute, in turn, is made up of an <replaceable>attribute type
</replaceable> and one or more <replaceable>attribute values</replaceable>.
 The attribute type identifies the attribute.  The attribute types for an
entry describing a person, would be <literal>Surname</literal>, <literal>
Common-Name</literal>, <literal>Postal-Address</literal> and <literal>Telephone-Number
</literal>.  Attributes that have more than one value are called <replaceable>
multivalued</replaceable> attributes.  For example, the entry for someone
who has more than one telephone number, would contain one <literal>Telephone-Number
</literal> attribute with two values, one for each number. <indexterm id="OSFGDS.GDSXO.indx.8">
<primary>directory</primary><secondary>structure of the DIB</secondary></indexterm> <!--
Figure 12-1 -->Figure 1-1 shows the structure of the DIB.</para>
<para><indexterm id="OSFGDS.GDSXO.indx.9"><primary>Directory Information Base
(DIB)</primary><secondary>structure (figure)</secondary></indexterm><?sml-need 5.5i></para>
<figure>
<title>Structure of the DIB</title>
<graphic entityref="OSFGDS.GDSXO.pic.1" format="EPS" Scalefit="1" Reprodep="300" Reprowid="300"></graphic>
</figure>
<!-- .so gd/Pics/fig1.04.pic--><para>Each attribute type also has an <replaceable>
attribute syntax</replaceable> which describes the format of the legal values
of that attribute type.  An example is <firstterm>Common-Name</firstterm>,
which is assigned the <literal>Case Ignore String</literal> syntax.  This
allows a <literal>Printable String</literal> or a <literal>Teletex String
</literal> to be entered and specifies that cases are not significant for
matching. <literal>Printable String</literal> or <literal>Teletex String</literal>
defines the permitted character sets. <indexterm spanend="OSFGDS.GDSXO.indx.7"
id="OSFGDS.GDSXO.indx.10"><?sml-break><?sml-need 2.5i></para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.5">
<title>Object Classes</title>
<indexterm id="OSFGDS.GDSXO.indx.11"><primary>object classes</primary><secondary>
about</secondary></indexterm><para>In order to categorize entries in the DIB,
each entry is said to belong to one or more <replaceable>object classes</replaceable>.
 Sample object classes are <literal>Country</literal>, <literal>Person</literal>, <literal>
Organizational-Person</literal>, and <literal>Application-Entity</literal>.
 The object class of an entry restricts the permitted attributes for that
entry.  The mandatory and optional attributes of entries in an object class
are determined by <replaceable>object class rules</replaceable>. (These rules
are part of a schema and are described later in this chapter.)</para>
<para>For example, an entry representing an organization must contain an attribute
called <literal>Organization-Name</literal>, which has the name of the organization
as its value.  It can contain optional attributes that describe the organization,
the state or locality in which the organization resides, the postal address
of the organization, the business category of the organization, and so on.
</para>
<para>As a general rule, <replaceable>all</replaceable> entries must contain
the <literal>Object-Class</literal> attribute, which contains the list of
object classes to which the entry belongs.  This attribute is multivalued.
 If an entry belongs to more than one object class, all object classes must
be listed in this attribute.</para>
<para>For example, there are two object classes defined as <literal>Person
</literal> and <literal>Organizational-Person</literal>.  An entry in the <literal>
Person</literal> object class must contain a  <literal>Common-Name</literal>
attribute and a <literal>Surname</literal> attribute.  It can contain several
other attributes such as <literal>Description</literal>, <literal>Telephone-Number
</literal>, and <literal>User-Password</literal>.  An entry in the object
class <literal>Organizational-Person</literal> is defined as a subclass of <literal>
Person</literal>.  This means that it must contain every mandatory attribute
of <literal>Person</literal> and can contain every optional attribute of <literal>
Person</literal>.  However, it is also defined as an extension of <literal>
Person</literal>. <literal>Organizational-Person</literal> can contain more
attributes than <literal>Person</literal>.  These attributes include <literal>
Organizational-Unit-Name</literal>, <literal>Telex-Number</literal>, and so
on. An entry that describes <literal>Organizational-Person</literal> must
have at least two values in its <literal>Object-Class</literal> attribute,
that is <literal>Person</literal> and <literal>Organizational-Person</literal>.
</para>
<para><!-- Figure 12-2 -->Figure 1-2 shows an example of an entry describing <literal>
Organizational-Person</literal>.</para>
<?sml-need 7.5i>
<figure>
<title>Example of Entry Describing Organizational Person</title>
<graphic entityref="OSFGDS.GDSXO.pic.2" format="EPS" Scalefit="1" Reprodep="350" Reprowid="350"></graphic>
</figure>
<!-- .so gd/Pics/fig01.ditentry.pic--><indexterm spanend="OSFGDS.GDSXO.indx.11"
id="OSFGDS.GDSXO.indx.12"></sect2>
<sect2 id="OSFGDS.GDSXO.div.6">
<title>Object Identifiers</title>
<indexterm id="OSFGDS.GDSXO.indx.13"><primary>object identifiers</primary>
</indexterm><para>As shown in the previous section, attribute types and object
classes have human-language names.  Although all names are meaningful and
unique, they are not used in the protocols; an Object Identifier (OID) is
used instead.  This is a hierarchical number assigned by a registration authority.
 The possible values of OIDs are defined in a tree. The standards bodies ISO
and CCITT control the top of the tree and define portions of this tree.  These
standards bodies  delegate the remaining portions to other organizations,
so that each object class, attribute type, and attribute syntax has a unique
OID.  These OIDs are written in the format <literal>2.5.6.2</literal>; this
is the OID of the <literal>Country</literal> object class.  If more information
is required, the OIDs can be written as follows:</para>
<informalexample><para><programlisting><userinput><literal>joint-iso-ccitt {2}  modules {5} object classes {6} country {2}
</literal></userinput></programlisting></para>
</informalexample>
<para><!-- Figure 12-3 -->Figure 1-3 shows a portion of the tree.</para>
<?sml-need 4.0i>
<figure>
<title>Object Identifiers</title>
<graphic entityref="OSFGDS.GDSXO.pic.3" format="EPS"></graphic>
</figure>
<!-- .so gd/Pics/fig01.tree.pic--><para><?sml-need 10>To enable more efficient
transmission over a communications line, the first two subidentifiers <literal>
2</literal> and <literal>5</literal> are coded together; this results in one
subidentifier, <literal>85</literal>.  The encoded format of the OID for the <literal>
Country</literal> object class is thus <literal>85.6.2</literal>.  This encoded
representation is used in the GDS administration programs and in tables in
this book.  For example, Table 1-5 (shown later in this chapter), which contains
a list of OIDs for selected object classes, uses this format.  Where unencoded
format is used in text, the encoded format is included in parentheses for
clarity. <indexterm spanend="OSFGDS.GDSXO.indx.13" id="OSFGDS.GDSXO.indx.14"><indexterm
spanend="OSFGDS.GDSXO.indx.3" id="OSFGDS.GDSXO.indx.15"><indexterm spanend="OSFGDS.GDSXO.indx.5"
id="OSFGDS.GDSXO.indx.16"></para>
</sect2>
</sect1>
<sect1 id="OSFGDS.GDSXO.div.7">
<title>X.500 Naming Concepts</title>
<indexterm id="OSFGDS.GDSXO.indx.17"><primary>X.500</primary><secondary>naming
concepts</secondary></indexterm><para>Large amounts of information need to
be organized to enable efficient data retrieval and ensure that names are
unique.  Information in the DIB is organized in a hierarchical structure called
the <replaceable>Directory Information Tree</replaceable> (DIT).  The structure
and naming of the nodes in the DIT are specified by registration authorities
for a standardized set of X.500 names, and by implementors of the directory
service (such as OSF) for implementation-specific names.  A schema describes
the DIT hierarchy. Schemas are described in more detail later in Section 1.6.
</para>
<para>Although the X.500 standard does not define a specific schema, it does
make general recommendations.  For example, countries and organizations need
to be named near the root of the DIT, whereas people, applications, and devices
need to be named further down in the hierarchy.  GDS supplies a default schema
that complies with these recommendations.</para>
<sect2 id="OSFGDS.GDSXO.div.8">
<title>Distinguished Names</title>
<indexterm id="OSFGDS.GDSXO.indx.18"><primary>Distinguished Names (DN)</primary>
<secondary>about</secondary></indexterm><para>A hierarchical path exists from
the root of the DIT to any entry in the DIB.  Each entry must have a name
that uniquely describes that entry.  A <replaceable>Relative Distinguished
Name</replaceable> (RDN) distinguishes an entry from other entries with the
same superior node in the DIT.  A sequence of RDNs, starting from the root
of the tree, can identify a unique path down the tree, and thus a unique entry.
 This sequence of RDNs, which identifies a particular entry, is the <replaceable>
Distinguished Name</replaceable> (DN) of that entry.  Each entry in the DIB
can be referenced by its DN.</para>
<para><!-- Figure 12-4 -->Figure 1-4 shows an example of a DN.  The shaded
boxes in the DIT represent the entries that are named in the column labeled
RDN.  According to the schema, countries are named directly below the root,
followed by organizations, organization units, and people.</para>
<?sml-need 5.0i>
<figure>
<title>Distinguished Name in a Directory Information Tree</title>
<graphic entityref="OSFGDS.GDSXO.pic.4" format="EPS" Scalefit="1" Reprodep="325" Reprowid="325"></graphic>
</figure>
<!-- .so gd/Pics/fig1.06a.pic--><para>Every entry in the DIB has a DN, not
just the leaf nodes.  For example, the DN for Acme Enterprises in  <!-- Figure
12-4 -->Figure 1-4 is the concatenation of the DN of the entry above with
its RDN.  <indexterm spanend="OSFGDS.GDSXO.indx.18" id="OSFGDS.GDSXO.indx.19"><?sml-break><?sml-need 2.5i></para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.9">
<title>RDNs and Attribute Value Assertions</title>
<indexterm id="OSFGDS.GDSXO.indx.20"><primary>Relative Distinguished Names
(RDN)</primary><secondary>about</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.21">
<primary>Attribute Value Assertions (AVA)</primary></indexterm><para>An RDN
consists of one or more assertions about the type and value of an attribute.
 A pair consisting of an attribute type and a value of that type is known
as an <replaceable><?Pub _font Weight="bold">Attribute Value Assertion<?Pub /_font></replaceable>
(AVA).  All attribute types in an RDN must be different.  The value of an
attribute in an RDN's AVA is called the distinguished value of that attribute
as opposed to the other possible values of that attribute.</para>
<para>For example, the entry shown in  <!-- Figure 12-4 -->Figure 1-4 contains
the RDN <literal>CN = Alfred Schmidt</literal>.  Although the  <literal>CN
</literal> ( <literal>Common-Name</literal>)  attribute consists of three
values: Alfred Schmidt, A. S.  Schmidt, and Al Schmidt, the AVA <literal>
CN = Alfred Schmidt</literal> contains the value <literal>Alfred Schmidt</literal>,
which has been designated as the distinguished value in the AVA.</para>
<para>An RDN usually contains a single distinguished value, and therefore
is made up of a single AVA.  However, under certain circumstances additional
values (and hence multiple AVAs) are used.</para>
<para><!-- Figure 12-4 -->For example, the RDN of an <literal>Organizational-Person
</literal> entry is usually composed of a single AVA, such as the  <literal>
Common-Name</literal> attribute type with a distinguished value (in  <!--
Figure 12-4, -->Figure 1-4, the AVA is <literal>CN = Alfred Schmidt</literal>).
 Depending on the schema, the RDN of an <literal>Organizational-Person</literal>
entry may contain more than one AVA.  For example, the RDN in  <!-- Figure
12-4 -->Figure 1-4 can contain the AVAs <literal>CN = Alfred Schmidt</literal>
 and <literal>OU = New York Sales</literal>, with <literal>Alfred Schmidt
</literal>  and <literal>New York Sales</literal> as distinguished values.
</para>
<para>To summarize:</para>
<itemizedlist>
<listitem><para>A DIT consists of a collection of DNs</para>
</listitem>
<listitem><para>DNs result from a concatenation of RDNs</para>
</listitem>
<listitem><para>RDNs consist of an unordered collection of attribute type
and value pairs (AVAs)</para>
</listitem>
</itemizedlist>
<indexterm spanend="OSFGDS.GDSXO.indx.20" id="OSFGDS.GDSXO.indx.22"><indexterm
spanend="OSFGDS.GDSXO.indx.21" id="OSFGDS.GDSXO.indx.23"></sect2>
<sect2 id="OSFGDS.GDSXO.div.10">
<title>Aliases</title>
<indexterm id="OSFGDS.GDSXO.indx.24"><primary>aliases</primary><secondary>
for GDS objects</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.25">
<primary>aliases</primary><secondary>about</secondary></indexterm><para>Alternative
names or aliases are supported in the DIT through special pointer entries
called <replaceable>alias entries</replaceable>.  Alias entries do not contain
any attributes other than those attributes belonging to their RDN, the object
class attribute, and the aliased object name attribute (that is, the DN of
the aliased object entry).  Because an alias entry has no subordinate entries,
it is, by definition, a leaf entry of the DIT as shown in  <!-- Figure 12-5.
-->Figure 1-5. Alias entries point to object entries and provide the basis
for alternative names for the corresponding objects.</para>
<para>For example, aliases are used to provide more user-friendly names, to
direct the search for a particular entry, to reduce the scope of a search,
to provide for common alternative abbreviations and spellings, or to provide
continuity after a name change.</para>
<para><!-- Figure 12-5 -->Figure 1-5 demonstrates how an alias name provides
continuity after a name change.  The <literal>ABC</literal> company's branch
office, located originally in Osaka, has moved to Tokyo.  To make the transition
easier for directory users and to guarantee that a search based on the old
information finds its target, an alias for <literal>O=ABC</literal> is added
to the directory beneath <literal>L=Osaka</literal>.  This alias entry points
to the object entry <literal>O=ABC</literal>. A search for <literal>ABC</literal>
under <literal>L=Osaka</literal> in the DIT finds the entry <literal>/C=Japan/L=Tokyo/O=ABC
</literal>.</para>
<?sml-need 3.5i>
<figure>
<title>An Alias in the Directory Information Tree</title>
<graphic entityref="OSFGDS.GDSXO.pic.5" format="EPS"></graphic>
</figure>
<!-- .so gd/Pics/fig1.06aa.pic--><para><indexterm id="OSFGDS.GDSXO.indx.26">
<primary>filtering</primary></indexterm>Alias entries can also be used instead
of <replaceable>filtering</replaceable>. Filtering is a process that uses
assertions about particular attributes to search through the DIT.  Although
filtering does not require any special information in the DIT, a search involving
a large population of entries and attributes can be expensive.  An alternative
approach is to set up special subtrees whose naming structures are designed
to perform searches similar to yellow pages searching.  <!-- Figure 12-6-->Figure
1-6  shows an example of such a subtree, populated by alias entries and segregated
by localities within the organization. Note that the entries within these
special subtrees could also be a mixture of object and alias entries, provided
there is only one object entry for each object stored in the directory.</para>
<?sml-need 3.0i>
<figure>
<title>Subtree Populated by Aliases</title>
<graphic entityref="OSFGDS.GDSXO.pic.6" format="EPS"></graphic>
</figure>
<!-- .so gd/Pics/fig1.06aaa.pic--><para>An object with an entry in the DIT
can have zero or more aliases. Several alias entries can point to the same
object entry.  An alias entry can point to an object that is not a leaf entry.
 Only object entries can have aliases; aliases of aliases are not permitted. <indexterm
spanend="OSFGDS.GDSXO.indx.25" id="OSFGDS.GDSXO.indx.27"><indexterm spanend="OSFGDS.GDSXO.indx.28"
id="OSFGDS.GDSXO.indx.28"><indexterm spanend="OSFGDS.GDSXO.indx.17" id="OSFGDS.GDSXO.indx.29"></para>
</sect2>
</sect1>
<sect1 id="OSFGDS.GDSXO.div.11">
<title>Standardized Operations and Features</title>
<indexterm id="OSFGDS.GDSXO.indx.30"><primary>X.500</primary><secondary>standardized
operations</secondary></indexterm><para>The following table lists and briefly
describes the underlying operations defined by X.500 that are used internally
by GDS to provide the functions available in the GDS administration programs.
 These operations are available to programmers in the library of XDS API function
calls that are included with GDS.  XDS API allows programmers to write applications
that perform operations on the directory. (Refer to the &DCEDg; for more information
on programming with XDS API.)</para>
<table frame="all" orient="Port" remap="center">
<title>Operations Standardized by X.500</title><tgroup cols="2"><colspec align="Left"
colname="col1" colnum="1" colsep="1" colwidth="165*"><colspec align="Left"
colname="col2" colnum="2" colwidth="290*">
<thead><row><entry rowsep="1"><literal>Operation
</literal></entry>
<entry rowsep="1"><literal>Meaning</literal></entry></row>
</thead><tbody><row><entry rowsep="1"><literal>Bind
</literal></entry><entry rowsep="1">Used at the beginning of a directory session
for accessing the directory</entry></row><row><entry rowsep="1"><literal>
Unbind</literal></entry><entry rowsep="1">Used at the end of a directory session
to release the directory association</entry></row><row><entry rowsep="1"><literal>
Read</literal></entry><entry rowsep="1">Reads a particular entry with particular
attributes</entry></row><row><entry rowsep="1"><literal>Compare</literal></entry>
<entry rowsep="1">Checks whether an attribute value supplied matches a value
of that attribute of a particular entry</entry></row><row><entry rowsep="1"><literal>
List</literal></entry><entry rowsep="1">Lists all the immediate subordinates
of a particular entry</entry></row><row><entry rowsep="1"><literal>Search
</literal></entry><entry rowsep="1">Returns information from all the entries
(that satisfy some filter) within a certain section of the DIT</entry></row>
<row><entry rowsep="1"><literal>Abandon</literal></entry><entry rowsep="1">
Cancels an outstanding interrogation request</entry></row><row><entry rowsep="1"><literal>
Add entry</literal></entry><entry rowsep="1">Adds a new leaf entry to the
DIT</entry></row><row><entry rowsep="1"><literal>Remove entry</literal></entry>
<entry rowsep="1">Removes a leaf entry from the DIT</entry></row><row><entry
rowsep="1"><literal>Modify entry</literal></entry><entry rowsep="1">Modifies
attributes of a particular entry</entry></row><row><entry><literal>Modify
RDN</literal></entry><entry>Modifies the last RDN of a leaf entry</entry>
</row></tbody></tgroup></table>
<indexterm id="OSFGDS.GDSXO.indx.31"><primary>Global Directory Service (GDS)
</primary><secondary>features</secondary></indexterm><para><?sml-need 10>Directory
service users are concerned with goal-oriented tasks (such as looking up a
name or a telephone number).  The directory service provides the following
features:</para>
<itemizedlist>
<listitem><para>User-friendly naming</para>
</listitem>
<listitem><para>Lookup</para>
</listitem>
<listitem><para>Searching</para>
</listitem>
<listitem><para>Browsing</para>
</listitem>
<listitem><para>Groups</para>
</listitem>
<listitem><para>User identification (authentication)</para>
</listitem>
<listitem><para>Routing of requests</para>
</listitem>
</itemizedlist>
<sect2 id="OSFGDS.GDSXO.div.12">
<title>User-Friendly Naming</title>
<para>Objects can be referred to with names that are readable. These names
are assigned to ensure, as far as possible, that they can be predicted or
remembered by human users.  When sending a message by means of electronic
mail, it is ill-advised to specify a confusing combination of figures, letters,
and special characters as the receiver because they are open to misinterpretation.
 This information, which is necessary for sending but is of no interest to
the user, is concealed in the directory service.  User-friendly names typically
consist of attributes that are inherent to the object, and not fabricated
to suit the method of transmission.</para>
<para>This user-friendly naming is enhanced by the use of the alias names.
One administrator can use the names <Replaceable>laser printer</Replaceable> and <Replaceable>line printer</Replaceable>
whereas another can call them <Replaceable>high-quality printer</Replaceable> and <Replaceable>high-speed printer</Replaceable>. <?sml-break><?sml-need 2.5i></para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.13">
<title>Lookup</title>
<para>Users can select the DN or alias name of an object together with the
types of attributes required.  The directory service returns all values associated
with these attribute types. This function is similar to the white pages of
the telephone directory. However, it supplies considerably more information
than just addresses and telephone numbers.  For example, an entry for a program
name not only indicates what a program can do, but also where it is installed
and who has access rights.</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.14">
<title>Searching</title>
<para>It is possible to search for objects according to common characteristics
in a similar fashion to using the yellow pages in a telephone directory. 
As a general rule, the search is carried out from a particular entry onwards
and, in extreme cases, from the root onwards. </para>
<para><Replaceable>Filters</Replaceable> are used to specify search criteria; that is, only entries
that satisfy the filter are returned.  Both the search time and the number
of hits in a successful search operation can be specified by the user. The
user could use this function of the directory service to obtain, for example,
a list of all laser printers installed in one particular building.</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.15">
<title>Browsing</title>
<para>A user who does not know the DN or the alias name of the object to be
located can find the necessary information by <Replaceable>browsing</Replaceable>  through the DIT.
 The user selects a specific entry,  and all entries located immediately below
it in the hierarchical structure are then displayed.  The user then selects
a new entry from these entries (this is known as recursive listing).</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.16">
<title>Groups</title>
<para>A <FirstTerm>group</FirstTerm> is an object consisting of a collection of object names.
 Object names within groups can also form groups.  For example, groups can
be used  to make distribution lists.</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.17">
<title>User Identification (Authentication)</title>
<para>The directory service supports simple user authentication using name
and password.  GDS administration programs do not use strong authentication.
 However, XDS application programs may use the Strong Authentication Package
as a security method.  Refer to the &DCEDg; for more information on how the
SAP can be integrated into an XDS application program.</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.18">
<title>Transparent Routing of Requests</title>
<para>The directory service supports distribution transparency in which the
user gets the same consistent view of information irrespective of where the
user is attached to the directory service.  If a DSA cannot find the requested
information, the following mechanisms are available to handle the request:
</para>
<variablelist>
<varlistentry>
<term>Referral</term><listitem><para>The DSA sends the requesting DUA or DSA
a reference indicating a DSA to be addressed as an alternative.  The referral
is handled using the DAP or DSP.</para>
</listitem></varlistentry>
<varlistentry>
<term>Chaining</term><listitem><para>The DSA passes the request directly on
to another DSA using the DSP.</para>
</listitem></varlistentry>
</variablelist>
<para>Refer to section 1.6 for a detailed description of referral and chaining. <indexterm
spanend="OSFGDS.GDSXO.indx.31" id="OSFGDS.GDSXO.indx.32"></para>
</sect2>
</sect1>
<sect1 id="OSFGDS.GDSXO.div.19">
<title>Extensions to the X.500 Directory Service</title>
<indexterm id="OSFGDS.GDSXO.indx.33"><primary>X.500</primary><secondary>GDS
extensions</secondary></indexterm><para>In addition to the functions standardized
by X.500, the following features are also available in GDS:</para>
<itemizedlist>
<listitem><para>Shadow Replication of Information and shadow update</para>
</listitem>
<listitem><para>Access Control</para>
</listitem>
<listitem><para>DCE Authentication</para>
</listitem>
<listitem><para>Directory User Agent Cache</para>
</listitem>
<listitem><para>Remote Administration</para>
</listitem>
<listitem><para>Tree Processing</para>
</listitem>
<listitem><para>Configurable Routing of Requests</para>
</listitem>
</itemizedlist>
<sect2 id="OSFGDS.GDSXO.div.20">
<title>Shadow Information</title>
<para>Frequently used data that is stored on one DSA can be copied and updated
to other DSAs.  This functionality increases the availability of the data
and reduces the network access and costs.  A temporary inconsistency in the
data, which can occur, is tolerated by the directory system.  If this inconsistency
is unacceptable, only master information can be used.  <indexterm id="OSFGDS.GDSXO.indx.34">
<primary>attributes</primary><secondary>Master Knowledge</secondary></indexterm> <indexterm
id="OSFGDS.GDSXO.indx.35"><primary>Master Knowledge attribute</primary></indexterm> <indexterm
id="OSFGDS.GDSXO.indx.36"><primary>shadows</primary><secondary>administration
</secondary></indexterm>The <literal>Master Knowledge</literal> attribute,
which is part of every object, indicates whether the data is master or shadow
information.</para>
<para><replaceable>Shadow administration</replaceable> involves the creation
and manipulation of shadows and shadowing jobs.  A shadowing job is stored
in a local shadowing  job file and contains the following information:</para>
<itemizedlist>
<listitem><para>Name of an object or subtree that has been replicated on a
specific target DSA</para>
</listitem>
<listitem><para>Name of the target DSA that has the replica</para>
</listitem>
<listitem><para>Update frequency for the object or subtree on the target DSA
</para>
</listitem>
</itemizedlist>
<para><?sml-need 10>In the GDS implementation, a daemon process periodically
updates an object or subtree on a target DSA by looking at the information
stored in the shadowing job file.  Note that a shadowing job should not be
confused with a process or system task.  A shadow is a read-only (in most
cases) replica of some object or subtree maintained in a nonlocal DSA that
is updated at specified intervals.</para>
<para>The administrator has the option of activating a shadowing job (if one
does not already exist), setting the update frequency of an existing job,
or deactivating a job.  The administrator selects the update frequency from
one of three values: HIGH, MEDIUM, or LOW.  A series of exact time values,
which can be specified, is associated with each one of these values:</para>
<itemizedlist>
<listitem><para>HIGH &mdash; 5 to 30 minutes</para>
</listitem>
<listitem><para>MEDIUM &mdash; 1 to 12 hours</para>
</listitem>
<listitem><para>LOW &mdash; daily, weekly, twice a week</para>
</listitem>
</itemizedlist>
<para>An administrator should choose the high update frequency if several
objects change over a very short time in the DSA and the entries need to be
updated as soon as possible.  A low update frequency is used when there are
only a few changes over the DSA in a short period of time.</para>
<para>An administrator can perform shadow administration while connected to
the local DSA containing the objects to be administered.  Shadow administration
allows the administrator to create and delete shadows of objects or subtrees
in a DSA, to create and delete shadowing jobs, and to manage shadowing jobs. 
</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.21">
<title>Directory Distribution and Knowledge Information</title>
<para>The DIB is potentially distributed transparently across multiple DSAs,
with each DSA comprising part of the DIB.  Conceptually, DSAs are made up
of two types of information. <firstterm>Directory Information</firstterm>
is the collection of entries over which the administrator of a particular
DSA has administrative authority.  The information required to  locate the
DSA with administrative authority for a particular entry is <symbol role="Variable">
Knowledge Information</symbol>.</para>
<para><?sml-need 12>In the GDS implementation, every object entry has an attribute
called the <literal>Master Knowledge</literal> attribute.  This attribute
contains the DN of the DSA responsible for maintaining the <FirstTerm>master copy</FirstTerm> of
the data.  The entry can be replicated and stored on other DSAs.  The DSA
that maintains the master copy updates the entry periodically in a process
called <FirstTerm>shadowing</FirstTerm>. The frequency of these updates is determined by the
administrator through shadow administration functions (described in Chapter
10).  The updated entries distributed on one or more DSAs are  <FirstTerm>shadow copies</FirstTerm>
of the entry that masters the object.</para>
<para>Each DSA must have an entry containing its own name and a network address.
 Each DSA knows its own name from a configuration file.  By comparing this
name with the <literal>Master Knowledge</literal> attribute of an entry in
the DSA, the DSA determines whether it masters the entry or contains a shadow
copy of the entry.</para>
<para><!-- Figure 12-11, -->Figure 1-7, presented later in this chapter, shows
an example of how master and shadow entries are stored on two DSAs, <literal>
DSA1</literal> and <literal>DSA2</literal>. The figure shows the copy of <literal>
AP2</literal> on <literal>DSA1</literal> with an indication that the <literal>
Master Knowledge</literal> attribute is set to the DN of <literal>DSA2</literal>. <literal>
AP2</literal> is mastered on <literal>DSA2</literal>.</para>
<para>A master entry can be modified only by an administrator with the appropriate
access rights to the entry.</para>

<indexterm id="OSFGDS.GDSXO.indx.37"><primary>shadows</primary><secondary>
creating</secondary></indexterm> <indexterm id="OSFGDS.GDSXO.indx.38"><primary>
Knowledge Information</primary><secondary>modeling</secondary></indexterm> <indexterm
id="OSFGDS.GDSXO.indx.39"><primary>Directory Information Base (DIB)</primary>
<secondary>distributing</secondary></indexterm> <indexterm id="OSFGDS.GDSXO.indx.40">
<primary>Directory Information Tree (DIT)</primary><secondary>distributing
</secondary></indexterm>

<para>GDS models the knowledge information so that each DSA contains an entry
with its own name (<literal>/C=DE/O=Smith Ltd/OU=DI/CN=DSA/CN=DSA1</literal>,
for example) and its Presentation Service Access Point (PSAP) address (which
is its network address) as attributes. </para>
<para>The <literal>Master Knowledge</literal> attribute contains the DN of
the DSA that masters the object.  This is shown in  <!-- Figure 12-11 -->Figure
1-7 with the names of the DSAs and the objects they master.</para>
<itemizedlist>
<listitem><para><literal>/C=DE/O=Smith Ltd/OU=AP2</literal> is mastered by <literal>
DSA2</literal></para>
</listitem>
<listitem><para><literal>/C=DE</literal> is mastered by <literal>DSA1</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd</literal> is mastered by <literal>
DSA1</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd/OU=AP2/CN=M</literal> is mastered
by <literal>DSA1</literal>)</para>
</listitem>
</itemizedlist>
<para>When a master entry is created on one DSA and the entry's superior node
is mastered by another DSA, a <FirstTerm>mandatory shadow</FirstTerm> of that entry is created
automatically on the DSA that masters the superior node.  </para>
<para><?sml-need 12>For example, as shown in  <!-- Figure 12-11, -->Figure
1-7, the entry for <literal>/C=DE/O=Smith Ltd/OU=AP2</literal> is mastered
by <literal>DSA2</literal>.  When the administrator adds the master entry
to <literal>DSA2</literal>, a mandatory shadow of <literal>/C=DE/O=Smith Ltd/OU=AP2
</literal> is created automatically on <literal>DSA1</literal> (as shown by
the triangle indicating a mandatory shadow entry).  Note that the three subordinate
master entries under <literal>/C=DE/O=Smith Ltd/OU=AP2</literal> in the tree
do not appear as shadow entries on <literal>DSA1</literal>.  That is because
their superior node, <literal>/C=DE/O=Smith Ltd/OU=AP2</literal>, is mastered
by the same DSA.</para>
<para><!-- Figure 12-11 -->Figure 1-7 also illustrates how a mandatory shadow
is created on <literal>DSA2</literal>. The entry <literal>/C=DE/O=Smith Ltd/OU=AP2/CN=M
</literal> is added to the tree by the administrator of <literal>DSA1</literal>
beneath its superior node (and shadow entry) <literal>/C=DE/O=Smith Ltd/OU=AP2
</literal>.  A mandatory shadow of <literal>/C=DE/O=Smith Ltd/OU=AP2/CN=M
</literal> is created automatically on <literal>DSA2</literal> under the master
entry <literal>/C=DE/O=Smith Ltd/OU=AP2</literal>.  The mandatory shadow is
created because the superior node of the new master entry is mastered on another
DSA (<literal>DSA2</literal>).</para>
<para>The reverse works with respect to removing entries  from the directory.
 When a master entry is removed, its mandatory shadow entry is removed too.
</para>
<para>Mandatory shadow entries will be modified automatically if their corresponding
master entries are modified.</para>
<para>When the DIT is distributed over several DSAs, each DSA must contain
the following:</para>
<itemizedlist>
<listitem><para>All the entries that it masters.</para>
<para>This is shown for <literal>DSA1</literal> in  <!-- Figure 12-11-->Figure
1-7 by the circles denoting master information for the following objects:
</para>
<itemizedlist>
<listitem><para><literal>/C=DE</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd/OU=AP1</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd/OU=AP2/CN=M</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd/OU=AP1/CN=Huber</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd/OU=AP1/CN=Meter</literal></para>
</listitem>
<listitem><para><literal>/C=DE/O=Smith Ltd/OU=AP1/CN=Laser Printer</literal></para>
</listitem>
</itemizedlist>
</listitem>
<listitem><para>If applicable, all shadow entries necessary to link the master
entries to the root.  </para>
<para>This is shown in  <!-- Figure 12-11 -->Figure 1-7 by the inclusion of
the shadow entry <literal>/C=DE/O=Smith Ltd/OU=AP2</literal> (with the name
of the DSA that masters it, <literal>DSA2</literal>, in parentheses) to specify
the master entry <literal>/C=DE/O=Smith Ltd/OU=AP2/CN=M</literal>.</para>
</listitem>
<listitem><para>All direct children of master entries.  </para>
<para>This is shown in  <!-- Figure 12-13 -->Figure 1-9  in the box containing <literal>
DSA1</literal>.  <literal>/C=DE/O=Smith Ltd/OU=AP1</literal> and <literal>
/C=DE/O=Smith Ltd/OU=AP2</literal> are direct children of <literal>Smith Ltd
</literal>.</para>
</listitem>
<listitem><para>The shadows of the DSA entries that appear as <literal>Master
Knowledge</literal> attributes in the shadows available in this DSA.  </para>
<para>For example, in order to return referrals or to perform chaining, the
DSA must know the appropriate DSAs.  The DSA's name must be kept as master,
and all the other DSAs are stored in this DSA as shadows.</para>
<para>In  <!-- Figure 12-11, -->Figure 1-7, <literal>DSA1</literal> retains
its name as master and the name of <literal>DSA2</literal> as shadow. <literal>
DSA2</literal> holds its name also as master and the name of <literal>DSA1
</literal> as shadow.  If an administrator looks for children of <literal>
/C=DE/O=Smith Ltd/OU=AP2</literal> (on <literal>DSA1</literal>) and does not
restrict the request to <literal> LOCAL SCOPE</literal>, <literal>DSA1</literal>
uses the master knowledge of <literal>/C=DE/O=Smith Ltd/OU=AP2</literal> to
determine which DSA needs to be contacted.  To contact this DSA, it needs
to know that DSA's PSAP address (which is guaranteed by the existence of a
shadow entry of <literal>DSA2</literal>).  This enables a DSA to take part
in navigation through chaining and referrals.</para>
<para>(The DSA can also hold additional shadows for data replication purposes;
see section 1.4.1.)</para>
</listitem>
</itemizedlist>
<?sml-need 4.0i>
<figure>
<title>Storage of Knowledge Information in GDS</title>
<graphic entityref="OSFGDS.GDSXO.pic.7" format="EPS" Scalefit="1" Reprowid="325" Reprodep="325"></graphic>
</figure>
<!-- .so gd/Pics/fig12.knowleginfo.pic--><indexterm spanend="OSFGDS.GDSXO.indx.38"
id="OSFGDS.GDSXO.indx.41"><indexterm spanend="OSFGDS.GDSXO.indx.40" id="OSFGDS.GDSXO.indx.42">
<indexterm spanend="OSFGDS.GDSXO.indx.39" id="OSFGDS.GDSXO.indx.43"><indexterm
spanend="OSFGDS.GDSXO.indx.37" id="OSFGDS.GDSXO.indx.44"></sect2>
<sect2 id="OSFGDS.GDSXO.div.22">
<title>Access Control</title>
<indexterm id="OSFGDS.GDSXO.indx.45"><primary>attributes</primary><secondary>
access control</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.46">
<primary>access control lists (ACLs)</primary><secondary>in GDS</secondary>
</indexterm><para>In addition to authentication (by means of name and password),
access protection is required for each object at attribute level.  A telephone
number, for example, is an attribute that, in general, everybody is allowed
to read.  However, attribute values such as number of children, bank accounts,
or salary groups are restricted to a limited number of people.  In addition,
even for attributes that everyone is allowed to read, it is only acceptable
for a few people to have authorization to change the values.</para>
<para>Because there can be many different attributes in the DIT, it is too
expensive to define a protection mechanism for each individual attribute type.
 Instead, the attributes are divided into three classes:</para>
<itemizedlist>
<listitem><para>Public</para>
</listitem>
<listitem><para>Standard</para>
</listitem>
<listitem><para>Sensitive</para>
</listitem>
</itemizedlist>
<para><?sml-need 10>Read and modify access rights can be defined for each
of the three classes.  The values for the <literal>Access-Control-List</literal>
(<literal>ACL</literal>) attribute for an entry specify which person has which
type of access to the individual attributes.  Each entry has an <literal>
ACL</literal> attribute that has a single value.  This value is composed of
a list of names associated with one of the three access classes <literal>
PUBLIC</literal>, <literal>STANDARD</literal>, and <literal>SENSITIVE</literal>,
and <literal>READ</literal> and <literal>MODIFY</literal> access rights; this
provides a total of five possible lists. (<literal>READ PUBLIC</literal> is
not necessary.) These lists are used to control access to other attributes
in the entry.  For example, to modify the public attribute <literal>Telephone-Number
</literal> you must be on the <literal>MODIFY PUBLIC</literal> list in the
ACL of the specific entry.</para>
<para>The following figure shows the values of the ACL attribute. (The class
of authorization <literal>READ PUBLIC</literal> does not need to be entered
because, by definition, <literal>PUBLIC</literal> attributes can be read by
all users.)</para>
<?sml-need 4.5i>
<figure>
<title>Access Control using the ACL Attribute</title>
<graphic entityref="OSFGDS.GDSXO.pic.8" format="EPS" Scalefit="1" Reprodep="325" Reprowid="325"></graphic>
</figure>
<!-- .so gd/Pics/fig12.accesscontrol.pic--><para><?sml-need 2.0i>The following
specifications apply for assigning access rights:</para>
<itemizedlist>
<listitem><para>The ACL of the default schema does not restrict access rights
when GDS is configured.  Every user, including the anonymous user (one without
a DN and password), has read and write access to all attributes in the schema.
 When an object is created without supplying the ACL attribute, the ACL attribute
is inherited from the superior object.  For first-level objects (directly
under root) the ACL attribute is inherited from the schema object.</para>
<para>The administrator needs to remember that any anonymous user who has
access to the GDS administration programs can log on to a remote DSA. However,
all attributes that are not protected by an ACL can be read and modified.
 It is strongly recommended that administrators protect objects by entering
their DNs in the ACLs of objects requiring some form of restricted access.
 Otherwise, an unauthorized user could change or destroy an object not protected
in this manner.</para>
</listitem>
<listitem><para>A master entry can only be created by the user who has write
access to the naming attribute of the parent node.  The user creates all attributes
of the entry and establishes which objects can access these attributes in
the <literal>ACL</literal> attribute. </para>
<para>In Figure 1-9, <literal>CN=new_object</literal> can only be created
if the administrator logs on as <literal>/C=us/O=osf/OU=sales/CN=admin</literal>.
If no ACL is specified, the new object is assigned the <literal>ACL</literal>
attribute of <literal>/C=us/O=osf/OU=sales</literal>; otherwise, it takes
the ACL that the  administrator specified for the operation.</para>
<?sml-need 2.25i>
<figure>
<title>Assigning ACLs for an Add Operation</title>
<graphic entityref="OSFGDS.GDSXO.pic.9" format="EPS"></graphic>
</figure>
<!-- .so gd/Pics/fig12.addacl3.pic-->
<?sml-point-size 12>
<?sml-break>
<?sml-need 10>
</listitem>
<listitem><para>A master entry can only be deleted by users who have modify
access to the naming attribute of the entry to be deleted.</para>
<para>In Figure 1-9, <literal>CN=new_object</literal> can only be deleted
if the administrator logs on as <literal>/C=us/O=osf/OU=sales/CN=admin</literal>.
</para>
<para>The object can only be modified if the administrator logs on as <literal>
/C=us/O=osf/OU=sales/CN=admin</literal>.</para>
</listitem>
<listitem><para>A shadow entry created by means of shadow handling (see  <!--
the chapter entitled ''Shadow Administration'') -->Chapter 10) has the same <literal>
ACL</literal> attribute as the corresponding master entry.  Therefore, such
an entry can only be modified and deleted by users who are also permitted
to modify and delete the master entry.</para>
</listitem>
</itemizedlist>
<indexterm spanend="OSFGDS.GDSXO.indx.45" id="OSFGDS.GDSXO.indx.47"><indexterm
spanend="OSFGDS.GDSXO.indx.46" id="OSFGDS.GDSXO.indx.48">
<sect3 id="OSFGDS.GDSXO.div.23">
<title>Trusted DSA Tables</title>
<para>The administrator can restrict authenticated access by specific DSAs
by creating and maintaining the Trusted DSA Table (TDT).  These restrictions
apply if a chained operation follows a bind initiated by the intermediate
DSA using the DCE authentication mechanism.  Each table entry contains the
DN of a DSA and permission tags that define the type of access rights permitted
for the DSA.</para>
<para>Refer to section 3.7 in chapter 3, <symbol role="Variable">Developing
a Configuration Plan</symbol> in this manual.</para>
</sect3>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.24">
<title>DCE Authentication</title>
<indexterm id="OSFGDS.GDSXO.indx.49"><primary>Authentication</primary><secondary>
DCE</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.50"><primary>
Global Directory Service</primary><secondary>DCE Authentication</secondary>
</indexterm><indexterm id="OSFGDS.GDSXO.indx.51"><primary>DCE Authentication
in GDS</primary></indexterm><para>In addition to simple authentication, GDS
supports DCE Authentication as a security method for accessing DSAs in the
DCE environment.  DCE authentication requires that users and the DSAs these
users want to access are registered in the DCE registry.  The extended attributes
feature of the DCE Registry is used for this purpose.</para>
<para><?sml-need 10>The DCE rgy schema contains two GDS specific attributes
(by default):</para>
<variablelist>
<varlistentry>
<term><literal>X500_DN</literal></term><listitem>
<?sml-break>
<para>Present for principals representing GDS users and DSAs.  This attribute
has to contain the DN of the principal for using the Directory Service.  The
DN  must be entered in Printable Form syntax  (<literal>/C=de/O=sni/OU=buba,
OU=nm123/CN=meier</literal>, for example).</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>X500_DSA_Admin</literal></term><listitem>
<?sml-break>
<para>Only necessary for the administrators principals.  This attribute has
to contain the list of the names of all DSAs on which the administrator expects
to create shadows.</para>
</listitem></varlistentry>
</variablelist>
<para>Users will have to logon to the DCE (for example, using <literal>dce_login
</literal>) prior to using the DCE authentication in a GDS client program.
</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.25">
<title>The Directory User Agent Cache</title>
<indexterm id="OSFGDS.GDSXO.indx.52"><primary>DUA cache</primary><secondary>
about</secondary></indexterm><para>The Directory User Agent (DUA) cache is
a process that stores a cache of information obtained from DSAs.  One DUA
cache runs on each client machine and is used by all the users on that machine.
 The DUA cache contains copies of recently accessed object entries and information
about DSAs.  The user specifies which information is to be cached.  It is
also possible to bypass the DUA cache by obtaining information directly from
a DSA.  This is desirable, for example, if the user wants to ensure that the
information obtained is up-to-date.</para>
<para>A cache process also runs on a client/server machine. It contains the
client address, the name of the local DSA, and the DSA's PSAP address (PSAP
addresses are described in Chapter 2),  which is required to get GDS running.
</para>
<para>Unlike the DSA, the cache knows nothing about a schema or tree structure.
 Therefore, information without existing superiors can be  added to the cache,
and objects can be deleted while subordinates still exist. </para>
<para>The cache does not handle ACL attributes.  If an application reads data
from a DSA and stores it automatically in the cache, only attributes that
are classified as <literal>Public</literal> are stored in the cache.</para>
<para>The <literal>Cache Update</literal> process updates replicated information
in a DUA cache.  It runs as required and then terminates.  The <literal>Cache
Update</literal> process runs on GDS client and client/server machines.</para>
<para>An administrator (or any user who has access to the GDS administration
tools) controls the information stored in the cache by logging on to the local
machine using the option in Mask 1 <literal>Logon to the DUA cache</literal>.
 (Masks enable a user to enter input interactively in the GDS administration
programs.  Masks are described in detail in Chapters 8-11.) </para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.26">
<title>Remote Administration</title>
<indexterm id="OSFGDS.GDSXO.indx.53"><primary>Directory System Agents (DSAs)
</primary><secondary>administration</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.54">
<primary>masks</primary><secondary>about</secondary></indexterm><para>The
X.500 standard does not cover all aspects of Directory administration. This
means that each DSA must be administered separately.  For maximum flexibility,
GDS provides remote administration.  This enables administrators to log on
to other DSAs and perform directory operations from one workstation.  GDS
enables remote administration of objects, schema, copies, and subtrees.  
</para>
<para>The administrator remotely logs on to a DSA through the User Identification
mask (Mask 1).  The administrator enters a DN that represents the administrator
and a password.  The DN must exist in the directory tree and have modify access
to any object (as defined in the ACL of that object) the administrator wants
to perform object, schema, subtree, or shadow administration functions on.
 (However, modify access is only required if  the administrator wants to change
anything in the DIT.) The next mask that is displayed, the Logon to a Specific
DSA mask (Mask 2), enables administrators to enter the name of a remote DSA
to which they want to be connected.</para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.27">
<title>Tree Processing</title>
<indexterm id="OSFGDS.GDSXO.indx.55"><primary>Directory Information Tree (DIT)
</primary><secondary>structuring</secondary></indexterm><para>The current
standard defines only the insertion, deletion, and renaming of end nodes (leaves).
 In addition, GDS administration includes a series of tree processing functions
that can be used to restructure the DIT.</para>
<para>These tree processing functions allow the user to save, append, move,
copy, and delete subtrees, to change the <literal>Master Knowledge</literal>
attribute of all objects in a subtree, and also to modify a special value
of an existing attribute in a subtree.</para>
<para><!-- Figure 12-16 -->Figure 1-10 illustrates how tree processing functions
could be used to to delete a subtree  from one node and append it to another.
</para>
<?sml-need 4.75i>
<figure>
<title>Moving a Subtree</title>
<graphic entityref="OSFGDS.GDSXO.pic.10" format="EPS"></graphic>
</figure>
<!-- .so gd/Pics/fig12.treeprocess.pic--></sect2>
<sect2 id="OSFGDS.GDSXO.div.28">
<title>Configurable Routing</title>
<para>Configurable routing is an optional feature that does not completely
conform to the distributed operations model described later in section 1.6.
Configurable routing provides a higher level of control of distributed operations
(for example, an administrator can configure a DSA where chaining is not used).
 Configurable routing is an advanced feature of GDS that is generally only
used in large, complex configurations of the Directory Service. </para>
<para>Refer to Appendix J, <symbol role="Variable">The DSA Configuration File
</symbol>, for detailed information on how to configure routing. <indexterm
spanend="OSFGDS.GDSXO.indx.33" id="OSFGDS.GDSXO.indx.56"></para>
</sect2>
</sect1>
<sect1 id="OSFGDS.GDSXO.div.29">
<title>Schema</title>
<indexterm id="OSFGDS.GDSXO.indx.57"><primary>schemas</primary><secondary>
about</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.58"><primary>
schemas</primary><secondary>about</secondary></indexterm><para>The <replaceable>
directory schema</replaceable> governs the structure of the directory tree.
It consists of a set of rules that defines the name structure, the object
classes, and the attribute types and their syntaxes. The directory standard
only describes the schema concept and not the schema structure.  It does,
however, make recommendations on the attributes types and object classes that
need to be present in the directory.</para>
<para>In GDS, the schema is stored as an object in the directory directly
under the root with the following <literal>distinguished name<?Pub Caret>:
/CN=Schema</literal>.  A default schema is supplied to initialize a directory
service system.</para>
<para>The structure of directory information is governed by a set of rules
called a <replaceable>schema</replaceable>.  A schema specifies rules for
the following:</para>
<itemizedlist>
<listitem><para>The structure of the DIT</para>
</listitem>
<listitem><para>The contents of entries in terms of attributes</para>
</listitem>
<listitem><para>The syntax of attribute values and rules for comparing and
matching them</para>
</listitem>
</itemizedlist>
<para>These rules are represented by attribute values of the schema.</para>
<para>Each attribute in the schema is assigned a unique object identifier
and the syntax of its value.  In addition, the schema specifies the mechanism
for comparing attributes of this type with one another.  Each entry in the
DIT belongs to an object class governed by the schema.  Object class definitions
can be used to derive subclasses, supporting the inheritance and refinement
of the attribute types defined for the superclass. <indexterm spanend="OSFGDS.GDSXO.indx.57"
id="OSFGDS.GDSXO.indx.59"><indexterm id="OSFGDS.GDSXO.indx.60"><primary>schemas
</primary><secondary>structure</secondary></indexterm> <indexterm id="OSFGDS.GDSXO.indx.61">
<primary>objects</primary><secondary>defining subclasses</secondary></indexterm> <indexterm
id="OSFGDS.GDSXO.indx.62"><primary>structure rules</primary><secondary>about
</secondary></indexterm></para>
<para>The ability to define subclasses is a powerful feature of the directory
service.  Structure rules determine which object classes are children and
which object classes are parents in the DIT.  Therefore, they define possible
name forms.</para>
<para><!-- Figure 12-17 -->Figure 1-11 shows the relationship between schemas
and the directory information model.</para>
<?sml-need 3.0i>
<figure>
<title>Relationship Between Schemas and the DIT</title>
<graphic entityref="OSFGDS.GDSXO.pic.11" format="EPS"></graphic>
</figure>
<!-- .so gd/Pics/fig1.08.pic-->
<sect2 id="OSFGDS.GDSXO.div.30">
<title>The GDS Standard Schema</title>
<para>DCE includes a default or <FirstTerm>standard</FirstTerm> schema for GDS.  This is the
GDS proprietary interpretation of the X.500 schema.</para>
<para><?sml-need 2.0i>The GDS standard schema includes the following tables
which define the structure of the DIT:</para>
<itemizedlist>
<listitem><para>Structure Rule Table (SRT)  </para>
</listitem>
<listitem><para>Object Class Table (OCT)  </para>
</listitem>
<listitem><para>Attribute Table (AT)  </para>
</listitem>
</itemizedlist>
<para>The directory standard defines a number of standard attribute types
and object classes.  For example, it defines the attribute types <literal>
Common-Name</literal>and <literal>Description</literal>, and the object classes <literal>
Country</literal> and <literal>Organizational-Person</literal>. Based on the
standard rules, GDS applications may enhance the schema with additional attribute
types and object classes. <indexterm id="OSFGDS.GDSXO.indx.63"><primary>Directory
Information Tree (DIT)</primary><secondary>relation to schemas (figure)</secondary>
</indexterm></para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.31">
<title>The Structure Rule Table</title>
<indexterm id="OSFGDS.GDSXO.indx.64"><primary>Structure Rule Table</primary>
<secondary>about</secondary></indexterm><para>The Structure Rule Table (SRT)
defines the hierarchical relationships that are permitted between objects
and their RDNs.  The SRT supplied with the GDS standard schema  contains the
entries shown in Table 1-2.</para>
<table frame="all" orient="Port" remap="center">
<title>SRT Entries (for DSAs)</title><tgroup cols="4"><colspec align="Center"
colname="col1" colnum="1" colsep="1" colwidth="1*"><colspec align="Center"
colname="col2" colnum="2" colsep="1" colwidth="1*"><colspec align="Left" colname="col3"
colnum="3" colsep="1" colwidth="1*"><colspec align="Left" colname="col4" colnum="4"
colwidth="1*">
<thead>
<row rowsep="1"><entry align="Left"><Literal>Rule Number</Literal></entry>
<entry align="Left" rowsep="1"><Literal>Superior Rule Number</literal></entry>
<entry rowsep="1"><literal>Acronyms of Naming Attribute</literal></entry>
<entry rowsep="1"><literal>Acronym of Structural Object Class</literal></entry>
</row>
</thead><tbody>
<row><entry rowsep="1"> 1</entry><entry rowsep="1">0</entry><entry rowsep="1">
CN</entry><entry rowsep="1">SCH</entry></row><row><entry rowsep="1"> 2</entry>
<entry rowsep="1">0</entry><entry rowsep="1">C</entry><entry rowsep="1">C
</entry></row><row><entry rowsep="1"> 3</entry><entry rowsep="1">2</entry>
<entry rowsep="1">O</entry><entry rowsep="1">ORG</entry></row><row><entry
rowsep="1"> 4</entry><entry rowsep="1">3</entry><entry rowsep="1">OU</entry>
<entry rowsep="1">OU</entry></row><row><entry rowsep="1"> 5</entry><entry
rowsep="1">4</entry><entry rowsep="1">CN</entry><entry rowsep="1">ORP</entry>
</row><row><entry rowsep="1"> 6</entry><entry rowsep="1">4</entry><entry rowsep="1">
CN</entry><entry rowsep="1">ORR</entry></row><row><entry rowsep="1"> 7</entry>
<entry rowsep="1">4</entry><entry rowsep="1">CN</entry><entry rowsep="1">
APP</entry></row><row><entry rowsep="1"> 8</entry><entry rowsep="1">4</entry>
<entry rowsep="1">CN</entry><entry rowsep="1">MDL</entry></row><row><entry
rowsep="1"> 9</entry><entry rowsep="1">4</entry><entry rowsep="1">CN, OU</entry>
<entry rowsep="1">ORP</entry></row><row><entry rowsep="1">10</entry><entry
rowsep="1">7</entry><entry rowsep="1">CN</entry><entry rowsep="1">APE</entry>
</row><row><entry rowsep="1">11</entry><entry rowsep="1">7</entry><entry rowsep="1">
CN</entry><entry rowsep="1">DSA</entry></row><row><entry rowsep="1">12</entry>
<entry rowsep="1">7</entry><entry rowsep="1">CN</entry><entry rowsep="1">
MMS</entry></row><row><entry rowsep="1">13</entry><entry rowsep="1">7</entry>
<entry rowsep="1">CN</entry><entry rowsep="1">MTA</entry></row><row><entry
rowsep="1">14</entry><entry rowsep="1">7</entry><entry rowsep="1">CN</entry>
<entry rowsep="1">MUA</entry></row><row><entry rowsep="1">15</entry><entry
rowsep="1">7</entry><entry rowsep="1">CN</entry><entry rowsep="1">DNA</entry>
</row><row><entry rowsep="1">16</entry><entry rowsep="1">2</entry><entry rowsep="1">
L</entry><entry rowsep="1">LOC</entry></row><row><entry rowsep="1">17</entry>
<entry rowsep="1">15</entry><entry rowsep="1">CN</entry><entry rowsep="1">
REP</entry></row><row><entry>18</entry><entry>15</entry><entry>CN, STA</entry>
<entry>REP</entry></row></tbody></tgroup></table>
<para>The SRT determines how the object classes are laid out in the DIT by
assigning rule numbers to each object class.  An object class's Superior Rule
Number specifies the object class directly above it in the DIT. <?sml-break><?sml-need 20></para>
<para>For example, the object class <literal>Organization</literal> (abbreviated
with the acronym <literal>ORG</literal> in the SRT), has a Superior Rule Number
of 2, indicating that it is located in the DIT beneath the object class <literal>
Country</literal> (<literal>C</literal>) which has a Rule Number of 2. <literal>
Organizational Unit</literal> (<literal>OU</literal>) is located beneath <literal>
Organization</literal> because it has a Superior Rule Number of 3, and so
on.</para>
<para>The SRT only contains structural object classes (that is, classes forming
branches in the DIT).  Other object classes (such as abstract and alias classes)
are not included.</para>
<para>The SRT specifies the attribute or attributes used to name entries belonging
to each object class.  These attributes, called <replaceable>naming attributes
</replaceable>, are used to define the RDN and therefore the DN of directory
entries.</para>
<para>There are actually two SRTs defined for GDS, one for DSAs and a slightly
different one for the administration programs.  The SRT for the GDS administration
programs is a compressed version of the DSA version and is updated to reflect
any changes in the DSA schema. Instead of having 17 Structure Rules, one for
each naming attribute, it has only 10.  Where naming attributes share the
same Superior Rule Number, the naming attributes are given the same rule number.
</para>
<para><!-- Figure 12-18 -->Figure 1-12 shows the structure of the Directory
Information Tree as defined by the Structure Rule Tree of the GDS standard
schema for a DSA.  It corresponds to the SRT entries in Table 1-2.  Note that
in Figure 1-12,  the SRT contains two entries for <literal>Organizational-Person
</literal>  that specify different sets of permitted naming attributes.</para>
<?sml-need 6.25i>
<figure>
<title>Structure of the DIT for GDS Administration Programs</title>
<graphic entityref="OSFGDS.GDSXO.pic.12" format="EPS" Scalefit="1" Reprodep="325" Reprowid="325"></graphic>
</figure>
<!-- .so gd/Pics/fig1.06c.pic--><para>The SRT for the standard schema used
by the GDS administration programs is shown in Table 1-3.</para>
<?sml-need 30>
<table frame="all" orient="Port" remap="center">
<title>SRT Entries (for GDS Administration Programs)</title><tgroup cols="4">
<colspec align="Center" colname="col1" colnum="1" colsep="1" colwidth="110*">
<colspec align="Center" colname="col2" colnum="2" colsep="1" colwidth="110*">
<colspec align="Left" colname="col3" colnum="3" colsep="1" colwidth="110*">
<colspec align="Left" colname="col4" colnum="4" colwidth="124*"><thead><row>

<entry align="Left" rowsep="1"><Literal>Rule Number</Literal></entry>
<entry align="Left" rowsep="1"><literal>Superior Rule Number</literal></entry>
<entry rowsep="1"><literal>Acronyms of Naming Attribute</literal></entry>
<entry align="Left" rowsep="1"><literal>Acronym of Structural Object Class</literal></entry>
</row>
</thead>
<tbody><row><entry rowsep="1"> 1
</entry><entry rowsep="1">0</entry><entry rowsep="1">CN</entry><entry rowsep="1">
SCH</entry></row><row><entry rowsep="1"> 2</entry><entry rowsep="1">0</entry>
<entry rowsep="1">C</entry><entry rowsep="1">C</entry></row><row><entry rowsep="1">
 3</entry><entry rowsep="1">2</entry><entry rowsep="1">O</entry><entry rowsep="1">
ORG</entry></row><row><entry rowsep="1"> 4</entry><entry rowsep="1">3</entry>
<entry rowsep="1">OU</entry><entry rowsep="1">OU</entry></row><row><entry
rowsep="1"> 5</entry><entry rowsep="1">4</entry><entry rowsep="1">CN</entry>
<entry rowsep="1">ORP, APP, ORR, MDL</entry></row><row><entry rowsep="1">
 6</entry><entry rowsep="1">4</entry><entry rowsep="1">CN, OU</entry><entry
rowsep="1">ORP</entry></row><row><entry rowsep="1"> 7</entry><entry rowsep="1">
5</entry><entry rowsep="1">CN</entry><entry rowsep="1">DSA, APE, MMS, MTA,
MUA, DNA</entry></row><row><entry rowsep="1"> 8</entry><entry rowsep="1">
2</entry><entry rowsep="1">L</entry><entry rowsep="1">LOC</entry></row><row>
<entry rowsep="1"> 9</entry><entry rowsep="1">8</entry><entry rowsep="1">
CN</entry><entry rowsep="1">REP</entry></row><row><entry>10</entry><entry>
8</entry><entry>CN, STA</entry><entry>REP</entry></row></tbody></tgroup></table>
<para><!-- Figure 12-19 -->Figure 1-13 shows the structure of the DIT as defined
by the SRT of the GDS standard schema for the GDS administration programs.
 It corresponds to the SRT entries in Table 1-3.  Note that in Figure 1-13,
 the SRT contains two entries for  <literal>Organizational-Person</literal>
and <literal>Residential-Person</literal>  that specify different sets of
permitted naming attributes.</para>
<?sml-need 6.25i>
<figure>
<title>Structure of the DIT for Administration Programs</title>
<graphic entityref="OSFGDS.GDSXO.pic.13" format="EPS" Scalefit="1" Reprodep="325" Reprowid="325"></graphic>
</figure>
<!-- .so gd/Pics/fig12.admsrt.pic--><para>An administrator uses the structure
rules to determine the name structure of an object entry so that the DN of
the entry can be entered in administration program masks.  For example, in
 <!-- Figure 12-20, -->Figure 1-14, the name structure of the following DSA
object entry  is 02-03-04-05-07:</para>
<informalexample><para><programlisting><userinput><literal>/C=DE/O=Smith Ltd/OU=AP2/CN=ApplProc-DSA/CN=DSA1
</literal> </userinput></programlisting></para>
</informalexample>
<para>Starting from Structure Rule 7 (the Structure Rule for DSA), it is easier
to work backwards to successive superior rules to determine the correct name
structure.  Chapter 8 describes how an administrator uses these rules in the
administration program to enter object entries into the directory.</para>
<?sml-need 4.25i>
<figure>
<title>Determining the Name Structure of a DSA Object Entry</title>
<graphic entityref="OSFGDS.GDSXO.pic.14" format="EPS" Scalefit="1" Reprodep="325" Reprowid="325"></graphic>
</figure>
<!-- .so gd/Pics/fig12.srtruledsa.pic--><indexterm spanend="OSFGDS.GDSXO.indx.64"
id="OSFGDS.GDSXO.indx.65"></sect2>
<sect2 id="OSFGDS.GDSXO.div.32">
<title>The Object Class Table</title>
<indexterm id="OSFGDS.GDSXO.indx.66"><primary>Object Class Table</primary>
<secondary>about</secondary></indexterm><para>The object classes that make
up the GDS standard schema are defined in the Object Class Table (OCT), which
describes  each object class, including its mandatory and optional attributes
and the inheritance of the attributes from other object classes.  Table 1-4
contains a partial listing of the OCT (refer to  <!-- \*LAppendix F\*O -->Appendix
B for a complete listing of the OCT for the GDS standard schema).  Each column
contains information about an object class entry in the schema.</para>
<?sml-need 30>

<table frame="all" orient="Port" remap="center" role="page-wide">
<?Pub _font TypeSize="8pt">
<title>OCT Entries</title><tgroup cols="9">
<colspec align="Left" colname="col1" colnum="1" colsep="1" colwidth="1*">
<colspec align="Left" colname="col2" colnum="2" colsep="1" colwidth="1.2*">
<colspec align="Left" colname="col3" colnum="3" colsep="1" colwidth="1*">
<colspec align="Center" colname="col4" colnum="4" colsep="1" colwidth=".5*">
<colspec align="Left" colname="col5" colnum="5" colsep="1" colwidth="1*">
<colspec align="Left" colname="col6" colnum="6" colsep="1" colwidth="1*">
<colspec align="Char" char="." colname="col7" colnum="7" colsep="1" colwidth=".5*">
<colspec align="Left" colname="col8" colnum="8" colsep="1" colwidth="1.4*">
<colspec align="Left" colname="col9" colnum="9" colwidth="1.4*"><thead><row>
<entry align="Center" colsep="0" nameend="col3" namest="col1" rowsep="1">
<literal>Object Class</literal></entry>
<entry rowsep="1"></entry>
<entry align="Left"><literal>Super-class</literal></entry>
<entry><Literal>OID</Literal></entry>
<entry><literal>File No.</literal></entry>
<entry align="Left" colsep="1"><literal>Mandatory Attributes</literal></entry>
<entry><literal>Optional Attributes</literal></entry></row>

<row>
<entry></entry>
<entry></entry>
<entry></entry>
</row>

<row>
<entry rowsep="1"><literal>Acronym</literal></entry>
<entry rowsep="1"><literal>Name</literal></entry>
<entry rowsep="1"><literal>Kind</literal></entry>
<entry align="Left" rowsep="1"><Literal>Aux.</Literal></entry>
<entry rowsep="1"></entry>
<entry rowsep="1"></entry>
<entry align="Left" rowsep="1"><literal></literal></entry>
<entry rowsep="1"></entry>
<entry rowsep="1"></entry>
</row>
</thead>
<tbody>

<row><entry rowsep="1">TOP</entry>
<entry rowsep="1">Top</entry><entry rowsep="1">Abstract</entry>
<entry rowsep="1">&mdash;</entry><entry rowsep="1">None</entry><entry rowsep="1">85.6.0</entry><entry
rowsep="1">&minus;1</entry><entry rowsep="1">OCL</entry><entry rowsep="1">None</entry>
</row><row><entry rowsep="1">GTP</entry><entry rowsep="1">GDS-Top</entry>
<entry rowsep="1">Abstract</entry><entry rowsep="1">&mdash;</entry><entry rowsep="1">
TOP</entry><entry rowsep="1">None</entry><entry rowsep="1">&minus;1</entry><entry
rowsep="1">None</entry><entry rowsep="1">ACL MK</entry></row><row><entry rowsep="1">
SCH</entry><entry rowsep="1">Schema</entry><entry rowsep="1">Structural</entry>
<entry rowsep="1">&mdash;</entry><entry rowsep="1">GTP</entry><entry rowsep="1">
43.12.2.\ 1107.1.3.6.0</entry><entry rowsep="1">0</entry><entry rowsep="1">
CN</entry><entry rowsep="1">TST SRT OCT AT</entry></row><row><entry rowsep="1">
ALI</entry><entry rowsep="1">Alias</entry><entry rowsep="1">Alias</entry>
<entry rowsep="1">&mdash;</entry><entry rowsep="1">TOP</entry><entry rowsep="1">
85.6.1</entry><entry rowsep="1">&minus;1</entry><entry rowsep="1">AON</entry><entry
rowsep="1">None</entry></row><row><entry rowsep="1">C</entry><entry rowsep="1">
Country</entry><entry rowsep="1">Structural</entry><entry rowsep="1">&mdash;</entry>
<entry rowsep="1">GTP</entry><entry rowsep="1">85.6.2</entry><entry rowsep="1">
1</entry><entry rowsep="1">C</entry><entry rowsep="1">DSC SG CDC CDR</entry>
</row><row><entry rowsep="1">LOC</entry><entry rowsep="1">Locality</entry>
<entry rowsep="1">Structural</entry><entry rowsep="1">&mdash;</entry><entry rowsep="1">
GTP</entry><entry rowsep="1">85.6.3</entry><entry rowsep="1">4</entry><entry
rowsep="1">None</entry><entry rowsep="1">DSC L SPN STA SEA SG CDC CDR</entry>
</row><row><entry>ORG</entry><entry>Organization</entry><entry>Structural
</entry><entry>&mdash;</entry><entry>GTP</entry><entry>85.6.4</entry><entry>1</entry>
<entry>O</entry><entry>DSC L SPN STA PDO PA PC POB FTN IIN TN TTI TXN X1A
PDM DI RA SEA UP BC SG CDC CDR</entry>
</row>
</tbody>
</tgroup>
<?Pub /_font><?Pub Caret>
</table>


<?sml-point-size 9>
<?sml-indent -.5i>
<?sml-indent>
<?sml-point-size 12>
<note><para>All these object identifiers stem from the root <literal>{joint-iso-ccitt(2)
ds(5) objectClass(6)}</literal>.</para>
</note>
<para>Column 2, Acronyms of Super Classes, provides the class from which an
object class inherits its attributes.  Using the information in Column 2,
it is possible to derive a graphical representation of the inheritance properties
of object classes in the DIT, as shown in  <!-- Figure 12-18.-->Figure 1-12.
</para>
<para>The object class, <literal>Top</literal>, is the root of the tree with <literal>
Alias</literal> and <literal>GDS-Top</literal> as the main branches. <literal>
Top</literal> contains the attribute type <literal>Object-Class</literal>,
 which is inherited by all the other object classes.</para>
<para><indexterm id="OSFGDS.GDSXO.indx.67"><primary>Structure Rule Table</primary>
<secondary>compared to OCT</secondary></indexterm> <indexterm id="OSFGDS.GDSXO.indx.68">
<primary>Object Class Table</primary><secondary>compared to SRT</secondary>
</indexterm>Do not confuse the information in the OCT with that presented
in the SRT.  There is no direct relationship between the relative location
of branches and leaves in the DIT structure and the inheritance properties
of classes with their superclasses and subclasses.</para>
<para><?sml-need 10>For example, when a directory service request such as
a <command>search</command> operation is made by a directory user, the SRT
is used by the directory service to indicate its position in the DIT.  The
directory service uses the information defined in the SRT to traverse the
tree so that the requested object can be located in the directory.   <!--
Figure 12-18 -->Figure 1-12 shows the object class  <literal>Organization
</literal> located beneath <literal>Country</literal> in the DIT.</para>
<para>On the other hand, the OCT defines, among other things, the attributes
of an object class along with its inherited attributes from its superclasses.
 The superclasses, in turn, inherit the attributes from their superclasses,
and so on until the root <literal>Top</literal> is reached (from which all
classes derive their attributes).  <!-- Figure 12-21 -->Figure 1-15 shows
the object class <literal>Organization</literal> as a subclass of <literal>
GDS-Top</literal>.  As such it inherits its attributes from <literal>GDS-TOP
</literal>, which in turn inherits them from its superclass, <literal>Top
</literal>.  <literal>GDS-TOP</literal> is an <replaceable>unregistered object
class</replaceable>  that is proprietary to GDS.  As such it does not have
an object ID and does not  appear in any of the administration masks.   The
``M'' in parenthesis indicates a mandatory attribute.</para>
<?sml-need 4.75i>
<figure>
<title>Partial Representation of the Object Class Table</title>
<graphic entityref="OSFGDS.GDSXO.pic.15" format="EPS"></graphic>
</figure>
<!-- .so gd/Pics/fig1.07.pic--><para><indexterm id="OSFGDS.GDSXO.indx.69">
<primary>object identifier</primary><secondary>Object Class Table</secondary>
</indexterm>The OCT also contains the unique object ID (OID) of each class
in the DIT except <literal>GDS-TOP</literal>, which has none.  OIDs are described
in Section 1.1.4. Table 1-5 shows some examples of OIDs for directory classes
as defined in the  X.500 standard.</para>
<?sml-need 20>
<table frame="all" orient="Port" remap="center">
<title>Object Identifiers for Selected Directory Classes</title><tgroup cols="2">
<colspec align="Left" colname="col1" colnum="1" colsep="1" colwidth="1*">
<colspec align="Left" colname="col2" colnum="2" colwidth="1*">
<thead><row>
<entry rowsep="1"><literal>Object Class Type Alias</literal></entry>
<entry rowsep="1"><literal>Object Identifier</literal></entry>
</row>
</thead><tbody>
<row><entry rowsep="1"><literal>Alias</literal></entry><entry rowsep="1">
85.6.1</entry></row><row><entry rowsep="1"><literal>Application-Entity</literal></entry>
<entry rowsep="1">85.6.12</entry></row><row><entry rowsep="1"><literal>Application-Process
</literal></entry><entry rowsep="1">85.6.11</entry></row><row><entry rowsep="1"><literal>
Country</literal></entry><entry rowsep="1">85.6.2</entry></row><row><entry
rowsep="1"><literal>Device</literal></entry><entry rowsep="1">85.6.14</entry>
</row><row><entry rowsep="1"><literal>DSA</literal></entry><entry rowsep="1">
85.6.13</entry></row><row><entry rowsep="1"><literal>Group-of-Names</literal></entry>
<entry rowsep="1">85.6.9</entry></row><row><entry rowsep="1"><literal>Locality
</literal></entry><entry rowsep="1">85.6.3</entry></row><row><entry rowsep="1"><literal>
Organization</literal></entry><entry rowsep="1">85.6.4</entry></row><row>
<entry rowsep="1"><literal>Organizational-Person</literal></entry><entry rowsep="1">
85.6.7</entry></row><row><entry rowsep="1"><literal>Organizational-Role</literal></entry>
<entry rowsep="1">85.6.8</entry></row><row><entry rowsep="1"><literal>Organizational-Unit
</literal></entry><entry rowsep="1">85.6.5</entry></row><row><entry rowsep="1"><literal>
Person</literal></entry><entry rowsep="1">85.6.6</entry></row><row><entry
rowsep="1"><literal>Residential-Person</literal></entry><entry rowsep="1">
85.6.10</entry></row><row><entry><literal>Top</literal></entry><entry>85.6.0
</entry></row></tbody></tgroup></table>
<note><para>All these object identifiers stem from the root <literal>{joint-iso-ccitt(2)
ds(5) objectClass(6)}</literal>.  To enable more efficient transmission over
a communications line, the first two subidentifiers, <literal>2</literal>
and <literal>5</literal>, are coded together which results in one subidentifier, <literal>
85</literal>.</para>
</note>
<sect3 id="OSFGDS.GDSXO.div.33">
<title>Object Class Types</title>
<para>Object classes in the OCT are divided into four categories:</para>
<itemizedlist>
<listitem><para>An <replaceable>abstract</replaceable> object class provides
basic relationships on subclass object classes, but has no entries itself.
Typical examples of these subclasses are  <literal>Top</literal>, <literal>
GDS-Top</literal>, or <literal>Person</literal>. <?sml-break><?sml-need 10></para>
</listitem>
<listitem><para>An <replaceable>alias</replaceable> object class indicates
that an entry is an alias entry.  In the GDS implementation, there is only
one alias object class, which is the object class <literal>Alias</literal>.
</para>
</listitem>
<listitem><para>A <replaceable>structural</replaceable> object class is defined
to be used in the structural specification of the DIT. </para>
<para>Only a structural object class can be referenced in the SRT.  For example, <literal>
Organization</literal> is a structural object class, while its superclasses <literal>
GDS-Top</literal> and <literal>Top</literal> are not.  The third entry in
Table 1-3 references <literal>Organization</literal> as a structural object
class by the acronym <literal>ORG</literal>, however, the object class <literal>
Top</literal> with the acronym <literal>TOP</literal> is not referenced in
any entry of the table.</para>
</listitem>
<listitem><para>An <replaceable>auxiliary</replaceable> object class provides
attributes that  are not included in a structural object class.</para>
</listitem>
</itemizedlist>
<para>An object entry belongs to exactly one structural object class.  For
example, an object, whose distinguished name is ruled by the fifth entry of
the SRT in Table 1-3 can belong to only one of the structural object classes <literal>
Organizational-Person</literal> (<literal>ORP</literal>), <literal>Application
Process</literal> (<literal>APP</literal>), <literal>Organizational Role</literal>
(<literal>ORR</literal>) or <literal>MHS Distribution List</literal> (<literal>
MDL</literal>). </para>
<para>An object that belongs to an object class also belongs to all its superclasses.
 Therefore, an object of object class <literal>Organization</literal> belongs
at least to the abstract object classes <literal>Organization</literal>, <literal>
GDS-Top</literal> and <literal>Top</literal>.  This is reflected by the values
of its object class attribute, which are the object identifiers <literal>
85.6.4</literal> for <literal>Organization</literal> and <literal>85.6.0</literal>
for <literal>Top</literal>. <literal>GDS-Top</literal> as a proprietary object
class has no object identifier and is not among the values of the object class
attribute.</para>
<para>As described in Section 1.6.4.2, object classes list the attributes
that may be assigned to objects.  Some applications of the directory may need
to specify object attributes for objects that are not listed  in the structural
object class or its superclasses.  These applications can define  auxiliary
object classes, which list these attributes.</para>
<para>For example, message handling systems use the auxiliary class <literal>
MHS-User</literal> to specify a package of message handling attributes for
objects of different object classes.  In Table 1-4, <literal>MHS-User</literal>
is assigned to the structural object class <literal>Organization</literal>
as an auxiliary object class.  It could be assigned to other structural object
classes (such as <literal>Locality</literal>) also.</para>
<para><?sml-need 10>Therefore, in addition to being a member of a structural
object class, an entry can be a member of one or more Auxiliary object classes.
 The acronyms of the Auxiliary object classes permitted for the entries of
a particular structural object class are listed in the OCT entry of the structural
object class.  Hence in our example an <literal>Organization</literal> may
be an <literal>MHS User</literal> or not, as indicated by its object class
attribute.  If the object class attribute has a value <literal>86.5.1.3</literal>
in addition to the values mentioned above, the organization is also an <literal>
MHS User</literal> and the message handling attributes may be assigned to
it.</para>
<para>The file numbers in the OCT entries tell the DSA which objects it has
to store in the same C-ISAM files.  Table 1-4 shows, that <literal>Countries
</literal> and <literal>Organizations</literal> are stored in the same file,
while <literal>Localities</literal> are stored in a different file.  The file
number is ignored for object classes that are not structural.  When object
classes share most of their attributes, they should share the file number
to increase performance.  When many of the attributes differ in the mandatory
and optional attribute sets (described in  Section 1.6.4.2), the object classes
should not share the file number in order to save space on disk.</para>
</sect3>
<sect3 id="OSFGDS.GDSXO.div.34">
<title>Mandatory and Optional Attributes</title>
<indexterm id="OSFGDS.GDSXO.indx.70"><primary>attributes</primary><secondary>
Object Class Table</secondary></indexterm><para>Another important feature
of the OCT is the distinction made between mandatory and optional attributes
for each object class. This distinction is based on definitions in the X.500
standards documents. These documents (Recommendations X.520 and X.521) recommend
selected object classes and associated attribute types using ASN.1 notation.
Each object class has one or more mandatory attributes associated with it,
to be used by the implementors who want to comply with the X.500 standards
recommendations.  Optional attributes are also defined. <?sml-break><?sml-need 20></para>
<para>For example, the class <literal>Country</literal> must contain the mandatory
attribute <literal>Country Name</literal> (or <literal>Country-Name</literal>
as defined in the GDS standard schema), and can contain the optional attributes <literal>
Description</literal> and <literal>Search-Guide</literal>.  The DCE implementation
also adds two more attributes, <firstterm>CDS-Cell</firstterm> and <firstterm>
CDS-Replica</firstterm>, to incorporate other aspects of the DCE environment
that are implementation-specific.</para>
<para><?sml-need 10><literal>Country</literal> is assigned the OID 2.5.6.2
(85.6.2). This number distinguishes it from the other object classes defined
by the standard.  The <literal>Top</literal> superclass is designated as 2.5.6.0
(85.6.0).  The first three numbers, 2.5.6 (85.6), identify the object class
as a member of a discrete set of object classes defined by X.500.  The last
number in the OID distinguishes objects within that discrete set. <literal>
Alias</literal>, a subclass of <literal>Top</literal>, is assigned the number
2.5.6.1 (85.6.1). <literal>Country</literal> is assigned the number 2.5.6.2
(85.6.2), and so on. <literal>GDS-Top</literal> has no OID, because it is
implementation-specific and as such, is not identified by the standard. <indexterm
spanend="OSFGDS.GDSXO.indx.66" id="OSFGDS.GDSXO.indx.71"></para>
</sect3>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.35">
<title>The Attribute Table</title>
<indexterm id="OSFGDS.GDSXO.indx.72"><primary>Attribute Table</primary><secondary>
about</secondary></indexterm><para>The Attribute Table (AT) defines the attributes
that constitute the entries in the GDS standard schema. (Refer to  <!-- the
\*(Ag Module 3 ("Directory Service") -->the &DCEAc; for a complete listing
of the AT.) The OIDs range from 85.4.0 to 85.4.40, as defined by the X.500
standard, 86.5.2.0 to 86.5.2.10, as defined by the X.400 standard, and include
additional OIDs for GDS-specific attributes.</para>
<para>Table 1-6 shows a partial listing of the AT for the GDS Standard Schema.
</para>

<Table Frame="all" Remap="center" Orient="Port" role="page-wide">
<?Pub _font TypeSize="8pt">
<Title>AT Entries</Title>
<TGroup Cols="10">
<ColSpec Colsep="1" Align="Left" Colwidth="1*" Colname="col1" Colnum="1">
<ColSpec Colsep="1" Align="Left" Colwidth="1*" Colname="col2" Colnum="2">
<ColSpec Colsep="1" Align="Left" Colwidth="1*" Colname="col3" Colnum="3">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="1*" Colname="col4" Colnum="4">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="1*" Colname="col5" Colnum="5">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="1*" Colname="col6" Colnum="6">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="1*" Colname="col7" Colnum="7">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="1*" Colname="col8" Colnum="8">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="1*" Colname="col9" Colnum="9">
<ColSpec Char="." Align="Char" Colwidth="1*" Colname="col10" Colnum="10">
<THead>
<Row>
<Entry Rowsep="1" Colsep="1" Align="Center" Namest="col1" Nameend="col2"><Literal>Attribute</Literal></Entry>
<Entry Rowsep="0"><literal>OID</literal></Entry>
<Entry><Literal>Lower Bound</Literal></Entry>
<Entry Align="Left"><Literal>Upper Bound</Literal></Entry>
<Entry Align="Left"><Literal>Max. No. of Val.</Literal></Entry>
<Entry Align="Left"><literal>Syntax</Literal></Entry>
<Entry Align="Left"><literal>Phon. Flag</literal></Entry>
<Entry Align="Left"><literal>Access Class</literal></Entry>
<Entry Align="Left"><literal>Index Level</literal></Entry>
</Row>

<Row>
<Entry rowsep="1"><Literal>Acr.</Literal></Entry>
<Entry rowsep="1"><Literal>Name</Literal></Entry>
<Entry rowsep="1"></Entry>
<Entry Align="Left" rowsep="1"></Entry>
<Entry Align="Left" rowsep="1"></Entry>
<Entry Align="Left" rowsep="1"></Entry>
<Entry Align="Left" rowsep="1"></Entry>
<Entry Align="Left" rowsep="1"></Entry>
<Entry Align="Left" rowsep="1"></Entry>
<Entry Align="Left" rowsep="1"></Entry>
</Row>

</THead>
<TBody>
<Row>
<Entry Rowsep="1">OCL</Entry>
<Entry Rowsep="1">Object-Class</Entry>
<Entry Rowsep="1">85.4.0</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">28</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
</Row>
<Row>
<Entry>AON</Entry>
<Entry>Aliased-</Entry>
</Row>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1">Object-Name</Entry>
<Entry Rowsep="1">85.4.1</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">1024</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
</Row>
<Row>
<Entry>KNI</Entry>
<Entry>Knowledge-</Entry>
</Row>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1">Information</Entry>
<Entry Rowsep="1">85.4.2</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">1024</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">4</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
</Row>
<Row>
<Entry>CN</Entry>
<Entry>Common-</Entry>
</Row>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1">Name</Entry>
<Entry Rowsep="1">85.4.3</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">64</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">4</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">1</Entry>
</Row>
<Row>
<Entry Rowsep="1">SN</Entry>
<Entry Rowsep="1">Surname</Entry>
<Entry Rowsep="1">85.4.4</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">64</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">4</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
</Row>
<Row>
<Entry>SER</Entry>
<Entry>Serial-</Entry>
</Row>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1">Number</Entry>
<Entry Rowsep="1">85.4.5</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">64</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">5</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
</Row>
<Row>
<Entry>C</Entry>
<Entry>Country-</Entry>
</Row>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1">Name</Entry>
<Entry Rowsep="1">85.4.6</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">1010</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">1</Entry>
</Row>
<Row>
<Entry>L</Entry>
<Entry>Locality-</Entry>
</Row>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1">Name</Entry>
<Entry Rowsep="1">85.4.7</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">128</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">4</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">1</Entry>
</Row>
<Row>
<Entry>SPN</Entry>
<Entry>State-or-</Entry>
</Row>
<Row>
<Entry></Entry>
<Entry>Province-</Entry>
</Row>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1">Name</Entry>
<Entry Rowsep="1">85.4.8</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">128</Entry>
<Entry Rowsep="1">2</Entry>
<Entry Rowsep="1">4</Entry>
<Entry Rowsep="1">1</Entry>
<Entry Rowsep="1">0</Entry>
<Entry Rowsep="1">0</Entry>
</Row>
</tbody>
</tgroup>
<?Pub /_font><?Pub Caret>
</table>
<?sml-point-size 9>
<?sml-indent>
<?sml-point-size 12>
<para>The <literal>Lower Bound</literal> and <literal>Upper Bound</literal>
columns specify the maximum or minimum number of bytes (or octets) that the
value of an attribute can contain.  In the <literal>Maximum Number of Values
</literal> column, the schema puts constraints on the number of values that
an attribute can contain.  A 0 (zero) in this column means that there is 
no restriction on the number of values.</para>
<para>The <literal>Syntax</literal> column describes how the data is represented
and how it relates to <literal>ASN.1</literal> syntax definitions for attributes.
 The <literal>Common-Name</literal> attribute is defined as case-insensitive.
 The size of the string ranges from 1 to the upperbound value defined by the
schema in the <literal>Upper Bound</literal> column for the <firstterm>Common-Name
</firstterm> attribute (in this case, 64 bytes or octets).</para>
<note><para>The <firstterm>Common-Name</firstterm> attribute is assigned the
number 3 as standard.  This corresponds to the 3 in the OID 85.4.3.</para>
</note>
<para>As mentioned previously for object classes, OID values specified in
the AT are defined as constants in the GDS header files.</para>
<para>An <literal>Access</literal> class is assigned for each attribute  (<literal>
Public(0)</literal>, <literal>Standard(1)</literal>, <literal>Sensitive(2)
</literal>).  An administrator can change this value for any attribute using
the schema administration  operations described in Chapter 9.</para>
<para>The other columns refer to the maximum number of permitted values, phonetic
matching, and index level, described in Chapter 9. <!-- --><!-- the chapter
entitled ''Schema Administration'' later in this book.--><indexterm spanend="OSFGDS.GDSXO.indx.72"
id="OSFGDS.GDSXO.indx.73"></para>
</sect2>
<sect2 id="OSFGDS.GDSXO.div.36">
<title>Syntaxes</title>
<indexterm id="OSFGDS.GDSXO.indx.74"><primary>attributes</primary><secondary>
syntax</secondary></indexterm><para>An attribute syntax defines the syntactic
rules for the attribute values for each attribute type in the directory. 
This syntax includes the data type in <literal>ASN.1</literal> and, generally,
one or more of the matching rules used to compare values.</para>
<para>As shown previously, the AT has a <literal>Syntax</literal> column.
This column contains a number that corresponds to a particular syntax, which
describes how that data value is represented for a specific attribute type.
 In Table 1-6, for example, the <literal>Syntax</literal> column gives the
value 2 for the <literal>Object-Class</literal> attribute, indicating that
the syntax type is Object Identifier. (Refer to the &DCEDg; for more information
about syntaxes).</para>
<para>Refer to Chapter 9 for a description of the syntaxes that can be applied. <indexterm
spanend="OSFGDS.GDSXO.indx.74" id="OSFGDS.GDSXO.indx.75"><indexterm spanend="OSFGDS.GDSXO.indx.60"
id="OSFGDS.GDSXO.indx.76"><indexterm spanend="OSFGDS.GDSXO.indx.55" id="OSFGDS.GDSXO.indx.77"></para>
</sect2>
</sect1>
<sect1 id="OSFGDS.GDSXO.div.37">
<title>GDS as a Distributed Service</title>
<indexterm id="OSFGDS.GDSXO.indx.78"><primary>replication</primary><secondary>
about (GDS)</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.79"><primary>
Directory System Agents (DSAs)</primary><secondary>about</secondary></indexterm>
<indexterm id="OSFGDS.GDSXO.indx.80"><primary>Directory User Agents (DUA)
</primary></indexterm><indexterm id="OSFGDS.GDSXO.indx.81"><primary>Directory
Access Protocol (DAP)</primary></indexterm><indexterm id="OSFGDS.GDSXO.indx.82">
<primary>Directory System Protocol (DSP)</primary><secondary>about</secondary>
</indexterm><para>GDS has two basic functions in a DCE cell.</para>
<itemizedlist>
<listitem><para>It provides a high-level, worldwide directory service by tying
together independent DCE cells</para>
</listitem>
<listitem><para>It is used as an additional directory service to CDS for storing
object names and attributes in a central place</para>
</listitem>
</itemizedlist>
<para>The GDS database contains information that can be distributed over several
GDS servers.  In addition, copies of information can be stored in multiple
GDS servers, and the information can be cached locally.  The unit of replication
in GDS is the entry (whole subtrees can also be replicated).</para>
<para>The information belonging to the DIB is shared between several <firstterm>
Directory Service Agents</firstterm> (DSAs).  A DSA is a process that runs
on a GDS server machine and manages the GDS database.  DSAs that know only
part of the total directory information (as shown in  <!-- Figure 12-7)-->Figure
1-16) cooperate with each other to perform directory service operations. 
 This cooperation often involves the  navigation of operations through the
network.</para>
<?sml-need 3.25i>
<figure>
<title>DSA/DUA Relationship</title>
<graphic entityref="OSFGDS.GDSXO.pic.16" format="EPS" Scalefit="1" Reprodep="300" Reprowid="300"></graphic>
</figure>
<!-- .so gd/Pics/fig1.15.pic--><para>Users access the directory through <firstterm>
Directory User Agents</firstterm> (DUAs). DUAs issue requests to DSAs on behalf
of users requesting directory service operations.  The manner in which DUAs
talk to DSAs is defined by the X.500 standard. </para>
<para>The <firstterm>Directory Access Protocol</firstterm> (DAP) is defined
for communication between DUAs and DSAs.  <indexterm id="OSFGDS.GDSXO.indx.83">
<primary>Directory Access Protocol (DAP)</primary></indexterm></para>
<para>The directory standard also defines directory functions in the DAP.
 The directory functions can be divided into three general categories:</para>
<itemizedlist>
<listitem><para><replaceable>Read</replaceable> operations involve the retrieval
of information from specific named entries.  This enables name-to-attribute
mapping that is similar to the white pages telephone directory.</para>
</listitem>
<listitem><para><replaceable>Search</replaceable> operations involve general
browsing and relational searching of information.  They support human interaction
with the directory and are similar to the yellow pages telephone directory.
</para>
</listitem>
<listitem><para><replaceable>Modify</replaceable> operations are used to modify
the information in the directory.</para>
</listitem>
</itemizedlist>
<para><indexterm id="OSFGDS.GDSXO.indx.84"><primary>Directory System Protocol
(DSP)</primary><secondary>about</secondary></indexterm>The <firstterm>Directory
System Protocol</firstterm> (DSP) is defined by the directory standard to
allow DSAs to communicate with one another.  DSP offers a convenient way for
a client to download distributed operations to a server which cooperates with
other DSAs to perform user requests.</para>
<para><?sml-need 10>Through DAP and DSP the Directory Service provides transparent
service. Users get the same result from a request irrespective of where in
the Directory system the request originates. </para>
<sect2 id="OSFGDS.GDSXO.div.38">
<title>Referral</title>
<indexterm id="OSFGDS.GDSXO.indx.85"><primary>referral</primary></indexterm>
<para>In some cases, a DSA is unable to provide a service to a DUA because
the required information is held elsewhere in the network.  Using a method
called <replaceable>referral</replaceable>, a DSA informs the DUA (DAP referral)
or the  calling DSA (DSP referral) where the information is located.  The
referral  method may be initiated by the user's preference or the DSA's circumstances.
</para>
<para>Referrals are possible because the DN provided by the DUA identifies
where the requested entry is located in the DIT.  DSAs use their knowledge
of the DIT to inform the DUA of the DSA that holds the requested information
(or a DSA that is closer to the DSA holding the information).</para>
<para><!-- Figure 12-8 -->Figure 1-17 shows an example of referral. <literal>
DSA1</literal> passes a referral to <literal>DSA2</literal> back to <literal>
DUA</literal>. <literal>DUA</literal> then makes a request to <literal>DSA2
</literal>.</para>
<?sml-need 5.25i>
<figure>
<title>Referral</title>
<graphic entityref="OSFGDS.GDSXO.pic.17" format="EPS" Scalefit="1" Reprodep="300" Reprowid="300"></graphic>
</figure>
<!-- .so gd/Pics/fig1.16.pic--><indexterm spanend="OSFGDS.GDSXO.indx.85" id="OSFGDS.GDSXO.indx.86">
</sect2>
<sect2 id="OSFGDS.GDSXO.div.39">
<title>Chaining</title>
<indexterm id="OSFGDS.GDSXO.indx.87"><primary>Global Directory Service (GDS)
</primary><secondary>chaining</secondary></indexterm><indexterm id="OSFGDS.GDSXO.indx.88">
<primary>chaining</primary></indexterm><para>As an alternative to the referral
mechanism, the DSA chains the request over DSP, asking another DSA to perform
the requested function.  That DSA either performs the function or sends back
a referral of its own.  In either case, the first DSA eventually responds
to the originating DUA with the results of the completed operation or a referral.
 This process is called <replaceable>chaining</replaceable>.</para>
<para>Chaining can go deeper than one level. To prevent lengthy searches,
a user needs to specify no chaining or a limit on total elapsed time for an
operation.</para>
<para><!-- Figure 12-9 --><?sml-need 10>Figure 1-18 shows an example of chaining. <literal>
DUA</literal> issues a request to <literal>DSA1</literal>. <literal>DSA1</literal>
is unable to service the request and passes it to <literal>DSA2</literal>. <literal>
DSA2</literal> services the request, passes the result back to  <literal>
DSA1</literal>, and <literal>DSA1</literal> passes the result back to <literal>
DUA</literal>. </para>
<?sml-need 5.25i>
<figure>
<title>Chaining</title>
<graphic entityref="OSFGDS.GDSXO.pic.18" format="EPS" Scalefit="1" Reprodep="300" Reprowid="300"></graphic>
</figure>
<!-- .so gd/Pics/fig1.17.pic--><indexterm spanend="OSFGDS.GDSXO.indx.88" id="OSFGDS.GDSXO.indx.89">
<para>In the evaluation of a search or list operation a DSA may have to decompose
the request in a number of different subrequests and chain them out to other
DSAs.  This is called request decomposition.  Figure 1-19 shows an example
of request decomposition. <literal>DSA1</literal> sends a request out in parallel
and merges the result before returning it to the DSA.</para>
<?sml-need 3.75i>
<figure>
<title>Request Decomposition</title>
<graphic entityref="OSFGDS.GDSXO.pic.19" format="EPS" Scalefit="1" Reprodep="250" Reprowid="250"></graphic>
</figure>
<!-- .so gd/Pics/fig12.multicast2.pic--></sect2>
<sect2 id="OSFGDS.GDSXO.div.40">
<title>Navigation in the GDS</title>
<para>When a service request is generated by a Directory Service user, the
bind DSA (the DSA to which the bind was made) attempts to satisfy the request.
 When a request cannot be satisfied by the bind DSA alone, either the bind
DSA or the DUA (acting on information returned by the bind DSA) distributes
the request to other DSAs.  This distribution is performed by either the DUA
or the bind DSA, depending on how the service control options are set in the
request.  The service control options also determine how the request is handled
during the distribution process.</para>
<sect3 id="OSFGDS.GDSXO.div.41">
<title>Continuation Reference</title>
<para>A continuation reference describes how a service request can be continued
at one or more other DSAs.  It contains access points which consist of a DSA
name and its corresponding PSAP address. A continuation reference is typically
created when a DSA is unable to fulfill the request itself.</para>
<para><?sml-need 10>The continuation references are returned to the DUA either
as a referral or as components of a partial outcome qualifier in the result
of a <literal>list</literal> or <command>search</command> operation.  The
DUA may use the access points, to bind the referenced DSAs and to forward
the request to them. </para>
<para>Refer to Appendix I, ``Navigation in GDS'', for a more detailed  description
of how GDS handles continuation references.</para>
</sect3>
<sect3 id="OSFGDS.GDSXO.div.42">
<title>Service Controls</title>
<para>Service controls are passed from DUA to DSA using DAP protocol.  If
the DSA chains to other DSAs, the service controls are passed unchanged to
these other DSAs.</para>
<para>When service controls are enabled, they affect how a Directory Service
request is distributed as follows:</para>
<variablelist>
<varlistentry role="linebreak">
<term><literal>LOCAL SCOPE</literal></term><listitem>
<?sml-break>
<para>The evaluation of the request is restricted to the bind DSA.  No references
are generated and the distribution of the request is not performed.  If this
service control is disabled, the DSA can generate continuation references. 
</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>CHAINING PROHIBITED</literal></term><listitem>
<?sml-break>
<para>No chaining is done in the DSA.  References are returned to the DUA. 
</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>AUTOMATIC CONTINUATION</literal> (known only in the DUA)</term>
<listitem>
<?sml-break>
<para>If the DUA gets continuation references from the DSA, they are handled
in the DUA.  The DUA will send the request to the referenced DSAs. If this
service control option is not set, the references are returned to the user
or application program that initiated the request.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>PREFER CHAINING</literal></term><listitem>
<?sml-break>
<para>The bind DSA handles the continuation references and forwards a chained
request to the referenced DSA (<literal>LOCAL SCOPE</literal> and <literal>
CHAINING PROHIBITED</literal> service options must be disabled).  </para>
<para><?sml-need 10>In the case of a <literal>LIST</literal> or <literal>
SEARCH</literal> operation, the request may be decomposed and subrequests
are forwarded to the referenced DSAs.  Even if <literal>PREFER CHAINING</literal>
is set, the DSA may still end up with a set of unresolved continuation references
which it has to pass back to the DUA.</para>
</listitem></varlistentry>
</variablelist>
</sect3>
</sect2>
</sect1>
</chapter><!--+ 09/15/96 22:27:15     | tagMorph:  $Id: gds.x500_overview.sgm,v
1.1.2.3 1996/10/01 21:01:02 carrig Exp $     | tagMorph library:  $Id: gds.x500_overview.sgm,v
1.1.2.3 1996/10/01 21:01:02 carrig Exp $     | sml-to-docbook:  1.21     +-->
<?Pub *0000121144 0>
