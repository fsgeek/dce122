<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: utc_mkanytime.3dts,v $
# Revision 1.1.2.6  1996/12/11  18:29:51  carrig
# 	{enh,R1.2.2}
# 	Program Listings
# 	[1996/12/11  18:28:51  carrig]
#
# Revision 1.1.2.5  1996/12/06  20:05:27  carrig
# 	{enh,R1.2.2}
# 	No changes
# 	[1996/12/06  20:04:26  carrig]
# 
# Revision 1.1.2.4  1996/12/04  20:01:38  carrig
# 	{enh,R1.2.2}
# 	Variable Lists
# 	[1996/12/04  20:00:34  carrig]
# 
# Revision 1.1.2.3  1996/12/04  13:21:08  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  13:20:01  wardr]
# 
# Revision 1.1.2.2  1996/12/01  19:17:14  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:16:19  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:39:51  weir
# 	Initial submission
# 	[1996/11/29  16:38:56  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN417.rsml.1">
<RefMeta>
<RefEntryTitle>utc_mkanytime</RefEntryTitle>
<ManVolNum>3dts</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>utc_mkanytime</Literal></RefName>
<RefPurpose>Converts a
<Literal>tm</Literal> structure and TDF (expressing the time in an arbitrary time zone)
to a binary timestamp</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.9.1  1996/11/18  20:57:36  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped section heads-->
<!-- 	[1996/11/18  20:56:34  wardr]-->
<!---->
<!-- Revision 1.1.7.7  1995/06/21  13:20:02  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  15:45:23  buckler]-->
<!-- -->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  15:44:47  buckler]-->
<!-- -->
<!-- Revision 1.1.7.6  1995/05/31  21:01:15  buckler-->
<!-- 	No change-->
<!-- 	[1995/05/31  20:58:03  buckler]-->
<!-- -->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/31  20:46:54  buckler]-->
<!-- -->
<!-- Revision 1.1.7.5  1993/01/26  17:48:46  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:15:51  cjd]-->
<!-- -->
<!-- Revision 1.1.7.4  1993/01/26  17:22:38  d_kenney-->
<!-- 	Changes made: Added text 'If a null pointer is passed, or' to the "inacctm"-->
<!-- 	input parameter description.-->
<!-- 	Filename: utc_mkanytime.3dts-->
<!-- 	Change Request Number: 5493-->
<!-- 	[1993/01/26  17:15:02  d_kenney]-->
<!-- -->
<!-- Revision 1.1.7.3  1992/12/28  21:33:39  d_kenney-->
<!-- 	Changes made: Delete 'const'-->
<!-- 	Filename: app_ref/man3dts/utc_mkanytime.3dts-->
<!-- 	Change Request Number: 3504-->
<!-- 	[1992/12/28  21:33:08  d_kenney]-->
<!-- -->
<!-- Revision 1.1.7.2  1992/10/01  18:52:32  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  18:36:40  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:39:46  oaf]-->
<!-- -->
<!-- Revision 1.1.5.3  1992/09/16  18:26:22  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.5.2  1992/08/04  15:47:13  lmk-->
<!-- 	Made Prentice-Hall editorial changes only-->
<!-- 	[1992/08/04  15:39:54  lmk]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/06/17  16:57:43  h_hoff-->
<!-- 	Affected doc: app_ref/man3dts-->
<!-- -->
<!-- 	CR2183 - pp 4-36, utc_mkanytime(3dts): Changed 'infinite' to 'unspecified.'-->
<!-- 	[1992/06/17  15:55:57  h_hoff]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/06/02  15:36:41  buckler-->
<!-- 	Reinstated change bar codes-->
<!-- 	[1992/06/02  15:26:40  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/20  17:33:06  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/20  17:26:41  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/08  13:38:14  h_hoff-->
<!-- 	<<< CR2839 - PARAMETERS, Input, timetm: Express value for tm_isdt >>>-->
<!-- 	[1992/05/08  13:36:40  h_hoff]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:22:35  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Fri Oct 25, 1991                 Initial File Submission for final-->
<!--                                    integration at IBM-->
<!---->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Mass.                                                     *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  No title to or       *-->
<!-- ownership of the document is hereby transferred.                   *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by Digital      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lutc_mkanytime(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN417.indx.1">
<Primary><Literal>Make Any Time</Literal></Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/utc.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>int </Literal>utc_mkanytime</Function></FuncDef>
<ParamDef>utc_t *<Parameter>utc</Parameter></ParamDef>
<ParamDef>struct tm *<Parameter>timetm</Parameter></ParamDef>
<ParamDef>long <Parameter>tns</Parameter></ParamDef>
<ParamDef>struct tm *<Parameter>inacctm</Parameter></ParamDef>
<ParamDef>long <Parameter>ins</Parameter></ParamDef>
<ParamDef>long <Parameter>tdf</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">timetm</Symbol></Term>
<ListItem>
<Para>A <Literal>tm</Literal> structure that expresses the local time; <Literal>tm_wday</Literal> and
<Literal>tm_yday</Literal> are ignored on input; the value of <Literal>tm_isdt</Literal> should be &minus;1.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">tns</Symbol></Term>
<ListItem>
<Para>Nanoseconds since the time component.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">inacctm</Symbol></Term>
<ListItem>
<Para>A <Literal>tm</Literal> structure that expresses days, hours, minutes, and seconds of
inaccuracy.
If a null pointer is passed, or
if <Literal>tm_yday</Literal> is negative, the inaccuracy is considered to be
unspecified; <Literal>tm_mday</Literal>, <Literal>tm_mon</Literal>, <Literal>tm_wday</Literal>, and <Literal>tm_isdst</Literal>
are ignored on input.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">ins</Symbol></Term>
<ListItem>
<Para>Nanoseconds of the inaccuracy component.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">tdf</Symbol></Term>
<ListItem>
<Para>Time differential factor to use in conversion.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">utc</Symbol></Term>
<ListItem>
<Para>Resulting binary timestamp.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>utc_mkanytime()</Function> routine converts a <Literal>tm</Literal> structure and TDF
(expressing the time in an arbitrary time zone) to a binary timestamp.
Required inputs include nanoseconds since time and nanoseconds of inaccuracy.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<VariableList>
<VarListEntry>
<Term>&numsp;0</Term>
<ListItem>
<Para>Indicates that the routine executed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>&thinsp;&minus;1</Term>
<ListItem>
<Para>Indicates an invalid time argument or invalid results.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<Para>The following example converts a string ISO format time in an arbitrary time
zone to a binary timestamp.  This may be part of an input timestamp routine,
although a real implementation will include range checking.
<?sml-space .5><?sml-point-size 11>
<!--no-op:  13-->
</Para>
<InformalExample>
<Para><ProgramListing>
<?Pub _font TypeSize="8pt">
utc_t       utc;
struct tm   tmtime, tminacc;
float       tsec, isec;
double      tmp;
long        tnsec, insec;
int         i, offset, tzhour, tzmin, year, mon;
char        *string;

/*  Try to convert the string...                               */

if(sscanf(string, "%d-%d-%d-%d:%d:%e+%d:%dI%e",
          &amp;year, &amp;mon, &amp;tmtime.tm_mday, &amp;tmtime.tm_hour,
          &amp;tmtime.tm_min, &amp;tsec, &amp;tzhour, &amp;tzmin, &amp;isec) != 9) {

/*  Try again with a negative TDF...                           */

if (sscanf(string, "%d-%d-%d-%d:%d:%e-%d:%dI%e",
           &amp;year, &amp;mon, &amp;tmtime.tm_mday, &amp;tmtime.tm_hour,
           &amp;tmtime.tm_min, &amp;tsec, &amp;tzhour, &amp;tzmin, &amp;isec) != 9) {

/*  ERROR                                                      */

        exit(1);
    }

<?sml-break><?sml-need 6>/*  TDF is negative                                                */

    tzhour = -tzhour;
    tzmin = -tzmin;

}

/*  Fill in the fields...                                          */

tmtime.tm_year = year - 1900;
tmtime.tm_mon = --mon;
tmtime.tm_sec = tsec;
tnsec = (modf(tsec, &amp;tmp)*1.0E9);
offset = tzhour*3600 + tzmin*60;
tminacc.tm_sec = isec;
insec = (modf(isec, &amp;tmp)*1.0E9);

/* Convert to a binary timestamp...                                */

utc_mkanytime(&amp;utc,       /* Out: Resultant binary timestamp       */
              &amp;tmtime,    /* In:  tm struct that represents input  */
              tnsec,      /* In:  Nanoseconds from input           */
              &amp;tminacc,   /* In:  tm struct that represents inacc  */
              insec,      /* In:  Nanoseconds from input           */
              offset);    /* In:  TDF from input                   */
<?Pub /_font><?Pub Caret>
</ProgramListing></Para>
</InformalExample>
<?sml-point-size 12>
<!--no-op:  14-->
<?sml-break>
<?sml-need 1.0i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: <Filename MoreInfo="RefEntry">utc_anytime(3dts)</Filename>, <Filename MoreInfo="RefEntry">utc_anyzone(3dts)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: utc_mkanytime.3dts,v 1.1.2.6 1996/12/11 18:29:51 carrig Exp $
    | tagMorph library:  $Id: utc_mkanytime.3dts,v 1.1.2.6 1996/12/11 18:29:51 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
