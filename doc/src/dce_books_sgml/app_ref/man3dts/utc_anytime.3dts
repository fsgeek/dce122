<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: utc_anytime.3dts,v $
# Revision 1.1.2.6  1996/12/11  18:29:33  carrig
# 	{enh,R1.2.2}
# 	Program Listings
# 	[1996/12/11  18:28:29  carrig]
#
# Revision 1.1.2.5  1996/12/06  20:05:09  carrig
# 	{enh,R1.2.2}
# 	No changes
# 	[1996/12/06  20:04:04  carrig]
# 
# Revision 1.1.2.4  1996/12/04  20:01:19  carrig
# 	{enh,R1.2.2}
# 	Variable Lists
# 	[1996/12/04  20:00:11  carrig]
# 
# Revision 1.1.2.3  1996/12/04  13:20:49  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  13:19:44  wardr]
# 
# Revision 1.1.2.2  1996/12/01  19:16:57  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:16:03  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:39:33  weir
# 	Initial submission
# 	[1996/11/29  16:38:43  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN400.rsml.1">
<RefMeta>
<RefEntryTitle>utc_anytime</RefEntryTitle>
<ManVolNum>3dts</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>utc_anytime</Literal></RefName>
<RefPurpose>Converts a binary timestamp
to a <Literal>tm</Literal> structure</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.9.1  1996/11/18  20:57:15  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped section heads-->
<!-- 	[1996/11/18  20:56:19  wardr]-->
<!---->
<!-- Revision 1.1.7.6  1995/06/21  13:19:54  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  15:34:04  buckler]-->
<!-- -->
<!-- Revision 1.1.7.5  1995/05/31  21:01:03  buckler-->
<!-- 	No change-->
<!-- 	[1995/05/31  20:57:07  buckler]-->
<!-- -->
<!-- 	1.1 edits-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/31  20:46:34  buckler]-->
<!-- -->
<!-- Revision 1.1.7.4  1993/01/26  17:47:57  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:13:34  cjd]-->
<!-- -->
<!-- Revision 1.1.7.3  1992/12/28  20:46:56  d_kenney-->
<!-- 	Changes made: Delete 'const'-->
<!-- 	app_ref/man3dts/utc_anytime.3dts-->
<!-- 	Change Request Number: 3504-->
<!-- 	[1992/12/28  20:45:48  d_kenney]-->
<!-- -->
<!-- Revision 1.1.7.2  1992/10/01  18:50:50  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  18:35:14  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:37:31  oaf]-->
<!-- -->
<!-- Revision 1.1.5.3  1992/09/16  18:25:05  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.5.2  1992/08/04  15:45:25  lmk-->
<!-- 	Made Prentice-Hall editorial changes only-->
<!-- 	[1992/08/04  15:38:14  lmk]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/06/17  16:57:27  h_hoff-->
<!-- 	Affected doc: app_ref/man3dts-->
<!-- -->
<!-- 	CR2183 - pp 4-10, utc_anytime(3dts): Changed 'infinite' to 'unspecified.'-->
<!-- 	[1992/06/17  15:44:07  h_hoff]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/06/02  15:35:19  buckler-->
<!-- 	Reinstated change bar codes-->
<!-- 	[1992/06/02  15:23:54  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/20  17:32:14  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/20  17:24:19  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/07  20:15:21  h_hoff-->
<!-- 	<< CR2839 - Add sentence about NULL argument >>>-->
<!-- 	[1992/05/07  20:13:53  h_hoff]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:22:09  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Fri Oct 25, 1991                 Initial File Submission for final-->
<!--                                    integration at IBM-->
<!---->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Mass.                                                     *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  No title to or       *-->
<!-- ownership of the document is hereby transferred.                   *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by Digital      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lutc_anytime(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN400.indx.1">
<Primary><Literal>Any Time</Literal></Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/utc.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>int </Literal>utc_anytime</Function></FuncDef>
<ParamDef>struct tm *<Parameter>timetm</Parameter></ParamDef>
<ParamDef>long *<Parameter>tns</Parameter></ParamDef>
<ParamDef>struct tm *<Parameter>inacctm</Parameter></ParamDef>
<ParamDef>long *<Parameter>ins</Parameter></ParamDef>
<ParamDef>long *<Parameter>tdf</Parameter></ParamDef>
<ParamDef>utc_t *<Parameter>utc</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">utc</Symbol></Term>
<ListItem>
<Para>Binary timestamp.  Use NULL if you want this routine to use the current 
time for this parameter.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">timetm</Symbol></Term>
<ListItem>
<Para>Time component of the binary timestamp expressed in the timestamp's local time.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">tns</Symbol></Term>
<ListItem>
<Para>Nanoseconds since the time component of the binary timestamp.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">inacctm</Symbol></Term>
<ListItem>
<Para>Seconds of the 
inaccuracy component of the binary timestamp.  If the inaccuracy is 
finite, then <Literal>tm_mday</Literal> returns a value of &minus;1 and <Literal>tm_mon</Literal> and 
<Literal>tm_year</Literal> return values of 0 (zero).  The field 
<Literal>tm_yday</Literal> contains the 
inaccuracy in days.  If the inaccuracy is unspecified, all <Literal>tm</Literal> structure 
fields return values of &minus;1.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">ins</Symbol></Term>
<ListItem>
<Para>Nanoseconds of the inaccuracy component of the binary timestamp.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">tdf</Symbol></Term>
<ListItem>
<Para>TDF component of the binary timestamp in units of seconds east of GMT.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>utc_anytime()</Function> routine converts a binary timestamp to a <Literal>tm</Literal> 
structure by using the TDF information 
contained in the timestamp to determine the TDF 
returned with the <Literal>tm</Literal> structure.  The TDF information 
contained in the timestamp is returned with the 
time and inaccuracy components; the TDF component determines the offset from 
GMT and the local time value of the <Literal>tm</Literal> structure.  Additional returns 
include nanoseconds since time and nanoseconds of inaccuracy.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<VariableList>
<VarListEntry>
<Term>&numsp;0</Term>
<ListItem>
<Para>Indicates that the routine executed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>&thinsp;&minus;1</Term>
<ListItem>
<Para>Indicates an invalid time argument or invalid results.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<Para>The following example converts a timestamp by using the TDF information in the
timestamp, and then prints the result.
<?sml-space .5><?sml-point-size 11>
<!--no-op:  13-->
</Para>
<InformalExample>
<Para><ProgramListing>
<?Pub _font TypeSize="8pt">
utc_t               evnt;
struct tm           tmevnt;
timespec_t          tevnt, ievnt;
char                tznam[80];

/*   Assume evnt contains the timestamp to convert...
 *
 *   Get time as a tm structure, using the time zone information in
 *   the timestamp...
 */
utc_anytime(&amp;tmevnt,        /* Out: tm struct of time of evnt    */
            (long *)0,          /* Out: nanosec of time of evnt      */
            (struct tm *)0,     /* Out: tm struct of inacc of evnt   */
            (long *)0,          /* Out: nanosec of inacc of evnt     */
            (int *)0,           /* Out: tdf of evnt                  */
            &amp;evnt);         /* In:  binary timestamp of evnt     */

/*   Get the time and inaccuracy as timespec structures...
 */
utc_bintime(&amp;tevnt,         /* Out: timespec of time of evnt     */
            &amp;ievnt,         /* Out: timespec of inacc of evnt    */
            (int *)0,           /* Out: tdf of evnt                  */
            &amp;evnt);         /* In:  Binary timestamp of evnt     */

/*   Construct the time zone name from time zone information in the 
 *   timestamp...
 */
<?sml-break><?sml-need 8>utc_anyzone(tznam,  /* Out: Time zone name               */
            80,                 /* In:  Size of time zone name       */
            (long *)0,          /* Out: tdf of event                 */
            (long *)0,          /* Out: Daylight saving flag         */
            &amp;evnt);         /* In:  Binary timestamp of evnt     */

/*   Print timestamp in the format:
 *
 *           1991-03-05-21:27:50.023I0.140 (GMT-5:00)
 *           1992-04-02-12:37:24.003Iinf (GMT+7:00)
 */

printf("%d-%02d-%02d-%02d:%02d:%02d.%03d",
        tmevnt.tm_year+1900, tmevnt.tm_mon+1, tmevnt.tm_mday,
        tmevnt.tm_hour, tmevnt.tm_min, tmevnt.tm_sec,
        (tevnt.tv_nsec/1000000));

if ((long)ievnt.tv_sec == -1)
    printf("Iinf");
else
    printf("I%d.%03d", ievnt.tv_sec, (ievnt.tv_nsec/1000000));

printf(" (%s)\n", tznam);
<?Pub /_font><?Pub Caret>
</ProgramListing></Para>
</InformalExample>
<?sml-point-size 12>
<!--no-op:  14-->
<?sml-break>
<?sml-need 1.0i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: 
<Filename MoreInfo="RefEntry">utc_anyzone(3dts), 
</Filename><Filename MoreInfo="RefEntry">utc_gettime(3dts), 
</Filename><Filename MoreInfo="RefEntry">utc_getusertime(3dts), 
</Filename><Filename MoreInfo="RefEntry">utc_gmtime(3dts), 
</Filename><Filename MoreInfo="RefEntry">utc_localtime(3dts),
</Filename><Filename MoreInfo="RefEntry">utc_mkanytime(3dts). 
<!--no-op:  b-->
</Filename></Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: utc_anytime.3dts,v 1.1.2.6 1996/12/11 18:29:33 carrig Exp $
    | tagMorph library:  $Id: utc_anytime.3dts,v 1.1.2.6 1996/12/11 18:29:33 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
