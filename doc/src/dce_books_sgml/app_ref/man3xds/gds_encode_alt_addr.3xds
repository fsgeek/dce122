<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: gds_encode_alt_addr.3xds,v $
# Revision 1.1.2.4  1996/12/11  17:33:55  carrig
# 	{enh,R1.2.2}
# 	Fixed Synopses
# 	[1996/12/11  17:33:13  carrig]
#
# Revision 1.1.2.3  1996/12/06  15:58:14  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/06  15:57:21  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:31:49  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:31:15  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:39:51  weir
# 	Initial submission
# 	[1996/11/29  18:39:12  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN369.rsml.1">
<RefMeta>
<RefEntryTitle>gds_encode_alt_addr</RefEntryTitle>
<ManVolNum>3xds</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>gds_encode_alt_addr</Literal></RefName>
<RefPurpose>Converts an alternate address attribute structure into an internal GDS format</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/20  16:51:28  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/20  16:50:40  wardr]-->
<!---->
<!-- Revision 1.1.2.7  1995/06/21  13:23:23  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  16:20:27  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1995/06/07  22:28:14  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/07  19:52:57  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/09/08  17:50:24  rnollman-->
<!-- 	[rnollman] - updated input/output/return code parms from Dublin"n-->
<!-- 	[1994/09/08  17:43:47  rnollman]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/08/05  16:53:51  rnollman-->
<!-- 	[rnollman] - checkin after incorporating osf edits-->
<!-- 	[1994/08/05  16:48:56  rnollman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:11:03  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:50:55  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/13  17:36:33  rnollman-->
<!-- 	final update for beta-->
<!-- 	[1994/05/13  17:36:15  rnollman]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/03/20  12:59:17  rnollman-->
<!-- 	changed name from encode_alt_addr.3xds for R1.1-->
<!-- 	[1994/03/20  12:59:03  rnollman]-->
<!-- -->
<!---->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!-- /*****************************************************************-->
<!-- *                                                                *-->
<!-- * COPYRIGHT   (C)  SIEMENS NIXDORF INFORMATIONSSYSTEME AG 1994   *-->
<!-- *                  ALL RIGHTS RESERVED                           *-->
<!-- *                                                                *-->
<!-- *****************************************************************/-->
<!-- .iX "\*Lgds_encode_alt_addr(\|)\*O"-->
<!-- .iX "calls " "\*Lgds_encode_alt_addr(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;xom.h>#include &lt;xds.h>#include &lt;dce/d2dir.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>d2_ret_val </Literal>gds_encode_alt_addr</Function></FuncDef>
<ParamDef>const D2_alt_addr *<Parameter>in</Parameter></ParamDef>
<ParamDef>D2_str **<Parameter>out</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">in</Symbol></Term>
<ListItem>
<Para>A pointer to an alternate address attribute in a structured format. 
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">out</Symbol></Term>
<ListItem>
<Para>A pointer to the structure <Literal>D2_str</Literal> that stores the alternate address
attribute in an internal GDS format.
</Para>
<Para>The <Symbol Role="Variable">(*out)->d2_size</Symbol> parameter will contain the length of the encoded octet string;
the <Symbol Role="Variable">(*out)->d2_value</Symbol> parameter will be a pointer to the beginning of the encoded octet
string.  This string is not zero-terminated.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>gds_encode_alt_addr()</Function> function converts an alternate address stored in 
a <Literal>D2_alt_addr</Literal> structure into a linearized string that is stored in 
a structure of type <Literal>D2_str</Literal>.  This function is provided for use
by DME applications.  It converts a structured alternate address attribute
into a linear octet string for internal use by GDS.
</Para>
<Para>The <Literal>D2_alt_addr</Literal> structure contains one field of type <Literal>D2_str</Literal> for 
storing the address, followed by a structured field for a set of object 
identifiers.  The structure <Literal>D2_str</Literal> consists of the length of the address 
and a pointer to the start of the address (not zero-terminated).  The second
component of <Literal>D2_alt_addr</Literal> contains the number of object identifiers and 
the address of the first <Literal>D2_obj_id</Literal> structure.  To store additional object 
identifiers, the address of the first <Literal>D2_obj_id</Literal> structure has to be 
increased by <Literal>sizeof(D2_obj_id)</Literal> bytes for each object identifier to be added.
</Para>
<Para>The structure <Literal>D2_obj_id</Literal>  consists of the length of the object identifier
and a pointer to the beginning of the object identifier (not zero-terminated).
Each object identifier is treated as an octet string; that means there
is no BER conversion done by <Function>gds_encode_alt_addr()</Function>.
</Para>
<Para>The <Function>gds_encode_alt_addr()</Function> function will allocate memory for the encoded 
string.  The (*<Symbol Role="Variable">out</Symbol>) parameter contains the address of the memory area that should 
later be freed by the application.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">d2_ret_val</Symbol></Term>
<ListItem>
<Para><Literal>D2_NOERROR</Literal> (that is, 0), if successful.
</Para>
<Para><Literal>D2_ERROR</Literal> (that is, -1), if unsuccessful (<Function>malloc()</Function> failure).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need .8i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: <Filename MoreInfo="RefEntry">gds_decode_alt_addr(3xds)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: gds_encode_alt_addr.3xds,v 1.1.2.4 1996/12/11 17:33:55 carrig Exp $
    | tagMorph library:  $Id: gds_encode_alt_addr.3xds,v 1.1.2.4 1996/12/11 17:33:55 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
