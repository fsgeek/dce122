<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: gss_init_sec_context.3sec,v $
# Revision 1.1.2.6  1996/12/14  23:04:22  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  22:57:45  carrig]
#
# Revision 1.1.2.5  1996/12/10  21:40:45  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:39:53  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:28:00  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:19:41  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:04:17  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:58:14  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:19:29  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:13:03  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:55:18  weir
# 	Initial submission
# 	[1996/11/29  17:47:46  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN487.rsml.1">
<RefMeta>
<RefEntryTitle>gss_init_sec_context</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>gss_init_sec_context</Literal></RefName>
<RefPurpose>Establishes a security context between the
context initiator and a context acceptor</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.2  1996/11/19  18:56:13  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:49:19  wardr]-->
<!---->
<!-- Revision 1.1.4.1  1996/05/13  19:03:00  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:56:37  wardr]-->
<!-- -->
<!-- Revision 1.1.2.7  1995/06/15  19:27:26  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  16:23:51  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/09/16  17:13:01  pfa-->
<!-- 	Changed 3gss to 3sec-->
<!-- 	[1994/09/16  17:12:44  pfa]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/08/26  18:01:48  pfa-->
<!-- 	Added editorial/review comments.-->
<!-- 	[1994/08/26  18:01:25  pfa]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/06/13  17:15:08  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:49:55  devobj]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/05/18  14:55:58  willie-->
<!-- 	{edit, R1.1}-->
<!-- 	Fixed problems that broke SGML conversion.-->
<!-- 	[1994/05/18  14:54:49  willie]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/11  17:38:45  rjohnson-->
<!-- 	Updated to include CR#10577.-->
<!-- 	[1994/05/11  17:38:28  rjohnson]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/09  11:12:45  rjohnson-->
<!-- 	Changes made: New GSSAPI reference page, R1.1-->
<!-- 	File name: app_ref/man3sec/gss_init_sec_context.3sec-->
<!-- 	[1994/05/03  18:45:13  rjohnson]-->
<!-- -->
<IndexTerm Id="DCEADR.MAN487.indx.1">
<Primary>gss_init_sec_context</Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/gssapi.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>OM_uint32  </Literal>gss_init_sec_context</Function></FuncDef>
<ParamDef>OM_uint32 *<Parameter>minor_status</Parameter></ParamDef>
<ParamDef>gss_cred_id_t <Parameter>claimant_cred_handle</Parameter></ParamDef>
<ParamDef>gss_ctx_id_t *<Parameter>context_handle</Parameter></ParamDef>
<ParamDef>gss_name_t <Parameter>target_name</Parameter></ParamDef>
<ParamDef>gss_OID <Parameter>mech_type</Parameter></ParamDef>
<ParamDef>int <Parameter>req_flags</Parameter></ParamDef>
<ParamDef>int <Parameter>time_req</Parameter></ParamDef>
<ParamDef>gss_channel_bindings_t <Parameter>input_channel_bindings</Parameter></ParamDef>
<ParamDef>gss_buffer_t <Parameter>input_token</Parameter></ParamDef>
<ParamDef>gss_OID *<Parameter>actual_mech_types</Parameter></ParamDef>
<ParamDef>gss_buffer_t <Parameter>output_token</Parameter></ParamDef>
<ParamDef>int *<Parameter>ret_flags</Parameter></ParamDef>
<ParamDef>OM_int32 *<Parameter>time_rec</Parameter></ParamDef>
<?sml-break>
<?sml-need 1.5i>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">claimant_cred_handle</Symbol></Term>
<ListItem>
<Para>Specifies an optional handle for the credential.  To use the default
credential, supply <Literal>GSS_C_NO_CREDENTIAL</Literal>.  The credential handle
created refers to the DCE default login context.  The credential must
be either an <Literal>INITIATE</Literal> or <Literal>BOTH</Literal> type credential.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">target_name</Symbol></Term>
<ListItem>
<Para>Specifies the name of the context acceptor.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">mech_type</Symbol></Term>
<ListItem>
<Para>Specifies the security mechanism.  To use DCE
security, specify either of the following:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>GSS_C_OID_DCE_KRBV5_DES</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>GSS_C_NULL_OID</Literal>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>To use Kerberos, specify <Literal>GSS_C_OID_KRBV5_DES</Literal>.
<?sml-break><?sml-need 8></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">req_flags</Symbol></Term>
<ListItem>
<Para>Specifies four independent flags, each of which requests that the
context support a service option.  The following symbolic names are
provided to correspond to each flag.  The symbolic names should be
logically ORed to form a bit-mask value.  
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_DELEG_FLAG</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Credentials were delegated to the context acceptor.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>No credentials were delegated.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_MUTUAL_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>The context acceptor has been asked to authenticate itself.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>The context initiator has not been asked to authenticates itself.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_REPLAY_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Replayed signed or sealed messages will be
detected.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>Replayed messages will not be detected.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_SEQUENCE_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Out-of-sequence signed or sealed messages will be detected.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>Out-of-sequence signed or sealed messages will not be detected.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">time_req</Symbol></Term>
<ListItem>
<Para>Specifies the desired number of seconds for which the context should
remain valid.  To specify the default validity period, use 0 (zero).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">input_chan_bindings</Symbol></Term>
<ListItem>
<Para>Specifies the bindings set by the context initiator.  Allows the
context initiator to bind the channel identification information
securely to the security context.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">input_token</Symbol></Term>
<ListItem>
<Para>Specifies the token received from the context acceptor. 
</Para>
<Para>The first time the application calls the routine, you specify
<Literal>GSS_NO_BUFFER</Literal>.  Subsequent calls require a token from the context
acceptor.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">context_handle</Symbol></Term>
<ListItem>
<Para>Specifies the context handle for the new context.
</Para>
<Para>The first time the application calls the routine, you specify
<Literal>GSS_C_NO_CONTEXT</Literal>.  Subsequent calls use the value returned by the
first call.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">actual_mech_type</Symbol></Term>
<ListItem>
<Para>Returns one of the following values indicating the security mechanism:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>GSS_C_OID_DCE_KRBV5_DES</Literal> for DCE security
</Para>
</ListItem>
<ListItem>
<Para><Literal>GSS_C_OID_KRBV5_DES</Literal> for Kerberos
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">output_token</Symbol></Term>
<ListItem>
<Para>Returns the token to send to the context acceptor.
</Para>
<Para>If the length field of the returned buffer is 0 (zero), no token is
sent.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">ret_flags</Symbol></Term>
<ListItem>
<Para>Returns six independent flags, each of which indicates that the
context supports a service option.  The following symbolic names are
provided to correspond to each flag:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_DELEG_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Credentials were delegated to the context acceptor.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>No credentials were delegated.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_MUTUAL_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>The context acceptor has been asked to authenticate itself.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>The context acceptor has not been asked to authenticate itself.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_REPLAY_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Replayed signed or sealed messages will be detected.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>Replayed messages will not be detected.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_SEQUENCE_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Out-of-sequence signed or sealed messages will be detected.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>Out-of-sequence signed or sealed messages will not be detected.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_CONF_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Confidentiality service can be invoked by calling the
<Function>gss_seal()</Function> routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>No confidentiality service is available.  (Confidentiality can be
provided using the <Function>gss_seal()</Function> routine, which provides only message
encapsulation, data-origin authentication, and integrity services.)
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_C_INTEG_FLAG</Literal></Term>
<ListItem>
<VariableList>
<VarListEntry>
<Term>TRUE</Term>
<ListItem>
<Para>Integrity service can be invoked by calling either the <Function>gss_sign()</Function> or
<Function>gss_seal()</Function> routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>FALSE</Term>
<ListItem>
<Para>Integrity service for individual messages is unavailable.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">time_rec</Symbol></Term>
<ListItem>
<Para>Returns the number of seconds for which the context will be valid.  If
the mechanism does not support credential expiration, the routine
returns the value <Literal>GSS_C_INDEFINITE</Literal>.  If the credential expiration
time is not required, specify NULL.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">minor_status</Symbol></Term>
<ListItem>
<Para>Returns a status code from the security mechanism.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>gss_init_sec_context()</Function> routine is the first step in the
establishment of a security context between the context initiator and
the context acceptor.  To ensure the portability of the application, use
its default credential by supplying <Literal>GSS_C_NO_CREDENTIAL</Literal> to the
<Symbol Role="Variable">claimant_cred_handle</Symbol> parameter.  Specify an explicit credential
when the application needs an additional credential; for example, to use
delegation.
</Para>
<Para><?sml-need 8>The first time the application calls the
<Function>gss_init_sec_context()</Function> routine, specify the <Symbol Role="Variable">input_token</Symbol>
parameter as <Literal>GSS_NO_BUFFER</Literal>.  Calls to the routine can return an
<Symbol Role="Variable">output_token</Symbol> for transfer to the context acceptor.   The context
acceptor presents the token to the <Function>gss_accept_sec_context()</Function>
routine.
</Para>
<Para>If the context initiator does not require a token,
<Function>gss_init_sec_context()</Function> sets the length field of the
<Symbol Role="Variable">output_token</Symbol> argument to 0 (zero).
</Para>
<Para>To complete establishing the context, the calling application can
require one or more reply tokens from the context acceptor.  If
the application requires reply tokens, the <Function>gss_init_sec_context()</Function>
routine returns a status value of <Literal>GSS_S_CONTINUE_NEEDED</Literal>.  The
application calls the routine again when the reply token is
received from the context acceptor and passes the token to the
<Function>gss_init_sec_context()</Function> routine via the <Symbol Role="Variable">input_token</Symbol>
parameter.
</Para>
<Para>The values returned by the <Symbol Role="Variable">ret_flags</Symbol> and <Symbol Role="Variable">time_rec</Symbol>
parameters are not defined unless the routine returns the status
<Literal>GSS_S_COMPLETE</Literal>.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_COMPLETE</Literal></Term>
<ListItem>
<Para>The routine was completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_BAD_BINDINGS</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">input_token</Symbol> parameter contains different channel
bindings from those specified with the <Symbol Role="Variable">input_chan_bindings</Symbol>
parameter.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_BAD_NAMETYPE</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">target_name</Symbol> parameter contains an invalid
or unsupported name type.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_BAD_NAME</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">target_name</Symbol> parameter was incorrectly formed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_BAD_SIG</Literal></Term>
<ListItem>
<Para>Indicates either that the <Symbol Role="Variable">input_token</Symbol> parameter contains an invalid
signature or that the <Symbol Role="Variable">input_token</Symbol> parameter contains a signature
that could not be verified.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_CONTINUE_NEEDED</Literal></Term>
<ListItem>
<Para>To complete the context, the
<Function>gss_init_sec_context()</Function> routine must be called again with a token
required from the context acceptor.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_CREDENTIALS_EXPIRED</Literal></Term>
<ListItem>
<Para>The referenced credentials have expired.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_DEFECTIVE_CREDENTIAL</Literal></Term>
<ListItem>
<Para>Consistency checks performed on the credential failed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_DEFECTIVE_TOKEN</Literal></Term>
<ListItem>
<Para>Consistency checks performed on
the <Symbol Role="Variable">input_token</Symbol> parameter failed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_DUPLICATE_TOKEN</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">input_token</Symbol> parameter was already
processed.  This is a fatal error that occurs during context
establishment.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_FAILURE</Literal></Term>
<ListItem>
<Para>The routine failed.  See the <Symbol Role="Variable">minor_status</Symbol> parameter return
value for more information.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_NO_CONTEXT</Literal></Term>
<ListItem>
<Para>The supplied context handle did not refer to a valid
context.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>GSS_S_OLD_TOKEN</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">input_token</Symbol> parameter was too old.  This is a
fatal error that occurs during context establishment.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">gss_accept_sec_context(3sec)</Filename>, <Filename MoreInfo="RefEntry">gss_delete_sec_context(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: gss_init_sec_context.3sec,v 1.1.2.6 1996/12/14 23:04:22 carrig Exp $
    | tagMorph library:  $Id: gss_init_sec_context.3sec,v 1.1.2.6 1996/12/14 23:04:22 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
