<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: pkc_retrieve_keyinfo.3sec,v $
# Revision 1.1.2.7  1996/12/17  21:06:45  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  21:04:16  damon]
#
# Revision 1.1.2.6  1996/12/12  00:12:31  weir
# 	Editorial corrections
# 	[1996/12/12  00:11:04  weir]
# 
# Revision 1.1.2.5  1996/12/07  22:34:44  weir
# 	Set revision flag
# 	[1996/12/07  22:33:01  weir]
# 
# Revision 1.1.2.4  1996/12/07  20:29:17  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:06  carrig]
# 
# Revision 1.1.2.3  1996/12/06  23:46:45  weir
# 	Updates
# 	[1996/12/06  23:45:02  weir]
# 
# Revision 1.1.2.2  1996/12/01  20:20:23  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:04  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:56:59  weir
# 	Initial submission
# 	[1996/11/29  17:48:41  weir]
# 
# $EndLog$
# 
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry RevisionFlag="changed" Id="DCEADR.MAN553.rsml.1">
<RefMeta>
<RefEntryTitle>pkc_retrieve_keyinfo</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pkc_retrieve_keyinfo</Literal></RefName>
<RefPurpose>Returns information about a key</RefPurpose>
</RefNameDiv>
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.2.3  1996/11/19  18:57:18  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:25  wardr]-->
<!---->
<!-- Revision 1.1.2.2  1996/11/18  19:58:23  weir-->
<!-- 	No change-->
<!-- 	[1996/11/18  19:55:48  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1996/10/15  21:11:20  weir-->
<!-- 	Initial submission-->
<!-- 	[1996/10/15  21:09:43  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;pkc_api.h></FuncSynopsisInfo>
<FuncDef><Function>unsigned32 pkc_retrieve_keyinfo</Function></FuncDef>
<ParamDef>trustbase_t * <Parameter>base</Parameter></ParamDef>
<ParamDef>char * <Parameter>name</Parameter></ParamDef>
<ParamDef>utc_t * <Parameter>key_date</Parameter></ParamDef>
<ParamDef>uuid_t * <Parameter>key_domain</Parameter></ParamDef>
<ParamDef>unsigned long * <Parameter>key_usages</Parameter></ParamDef>
<ParamDef>selection_t * <Parameter>sel</Parameter></ParamDef>
<ParamDef>keyinfo_t ** <Parameter>keyinfobase</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<!-- -->
<RefSect2>
<Title>Input</Title>
<!-- -->
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">base</Symbol></Term>
<ListItem>
<Para>The trust base, returned by <Filename MoreInfo="RefEntry">pkc_init_trustbase(3sec)</Filename>.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">name</Symbol></Term>
<ListItem>
<Para>Principal name.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">key_date</Symbol></Term>
<ListItem>
<Para>Specifies time for which information is to be returned.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- -->
<VarListEntry>
<Term><Symbol Role="Variable">key_domain</Symbol></Term>
<ListItem>
<para>
Allows the user to restrict the key-search operation to keys for a particular
domain. Specify <Literal>sec_pk_domain_unspecified</Literal> or <Literal>NULL</Literal>
to indicate that keys for any domain should be retrieved.</para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- -->
<!-- -->
<VarListEntry>
<Term><Symbol Role="Variable">key_usages</Symbol></Term>
<ListItem>
<para>
Allows the user to restrict the key-search operation to keys intended for
one or more specific usages.</para>
<!-- -->
</ListItem>
</VarListEntry>
<!-- -->
<!-- -->
<!-- -->
<VarListEntry>
<Term><Symbol Role="Variable">sel</Symbol></Term>
<ListItem>
<Para>Must be 0 (currently ignored).
<!-- -->
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
</RefSect2>
<RefSect2>
<Title>Output</Title>
<!-- -->
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">keyinfobase</Symbol></Term>
<ListItem>
<Para>The returned key information.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<?sml-break>
<?sml-need 1.5i>
<!-- -->
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para><Filename MoreInfo="RefEntry">pkc_retrieve_keyinfo(3sec)</Filename>
returns a <StructName Role="typedef">keyinfo_t</StructName> structure
describing the set of trusted keys that are valid for the specified
principal at the specified date, under any additional constraints
specified in <Symbol Role="Variable">sel</Symbol>.
</Para>
<!-- -->
<!-- ==================================================================== -->
<!-- -->
<para>
The <Literal>key_usages</Literal> parameter consists of a bit mask, formed
by AND-ing together one or more of the constants:</para>
<!-- -->
<!-- -->
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_AUTHENTICATION</Literal></Term>
<ListItem><para>
The key can be used to authenticate a user</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_INTEGRITY</Literal></Term>
<ListItem><para>
The key can be used to provide integrity protection</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_KEY_ENCIPHERMENT</Literal></Term>
<ListItem><para>
The key can be used to encrypt user keys</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_DATA_ENCIPHERMENT</Literal></Term>
<ListItem><para>
The key can be used to encrypt user data</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_KEY_AGREEMENT</Literal></Term>
<ListItem><para>
The key can be used for key-exchange</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_NONREPUDIATION</Literal></Term>
<ListItem><para>
The key can be used for non-repudiation</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_CAKEY_USAGE_KEY_CERT_SIGN</Literal></Term>
<ListItem><para>
The key can be used to sign key certificates</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_CAKEY_USAGE_OFFLINE_CRL_SIGN</Literal></Term>
<ListItem><para>
The key can be used to sign CRLs</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_CAKEY_USAGE_TRANSACTION_SIGN</Literal></Term>
<ListItem><para>
The key can be used to sign transactions</para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
<para>
A <Literal>NULL</Literal> can be specified for <Literal>key_usages</Literal>
to indicate that keys for any usage should be retrieved.
</para>
<!-- -->
<!-- -->
<!-- ==================================================================== -->
<!-- -->
<Para>This routine must be called before any of the following routines
can be called:
<!-- -->
</Para>
<ItemizedList>
<ListItem>
<Para><Filename MoreInfo="RefEntry">pkc_get_key_count(3sec)</Filename>
</Para>
</ListItem>
<ListItem>
<Para><Filename MoreInfo="RefEntry">pkc_get_key_data(3sec)</Filename>
</Para>
</ListItem>
<ListItem>
<Para><Filename MoreInfo="RefEntry">pkc_get_key_trust_info(3sec)</Filename>
</Para>
</ListItem>
<ListItem>
<Para><Filename MoreInfo="RefEntry">pkc_get_key_certifier_count(3sec)</Filename>
</Para>
</ListItem>
<ListItem>
<Para><Filename MoreInfo="RefEntry">pkc_get_key_certifier_info(3sec)</Filename>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<Para>Upon successful return, <Symbol Role="Variable">keyinfobase</Symbol> will
contain a <StructName Role="typedef">keyinfo_t</StructName> structure which must
be passed in calls to the above routines, which then extract and return the
requested information.
</Para>
<Para>The <StructName Role="typedef">keyinfo_t</StructName> structure must be
released by a call to <Filename MoreInfo="RefEntry">pkc_free_keyinfo(3sec)</Filename>
when the application has finished with it.
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>pkc_s_success</Literal></Term>
<ListItem>
<Para>Operation successfully completed.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<?sml-break>
<!-- -->
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>Refer to the &DCETg; for
complete descriptions of all error messages.
<!-- -->
<!-- -->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">pkc_intro(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_append_to_trustlist(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_free(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_free_keyinfo(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_free_trustbase(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_free_trustlist(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_get_key_certifier_count(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_get_key_certifier_info(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_get_key_count(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_get_key_data(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_get_key_trust_info(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_get_registered_policies(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_init_trustbase(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_init_trustlist(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_retrieve_keylist(3sec)</Filename>.
<!--no-op:  b-->
<!-- -->
<!-- -->
<!-- -->
<!-- /*-->
<!--  * pkc_retrieve_keyinfo -->
<!--  *-->
<!--  * Returns a keyinfo_t structure describing the set of trusted-->
<!--  * keys that are valid for the specified principal at the specified-->
<!--  * date, under any additional constraints specified in sel.-->
<!--  *-->
<!--  * On successful return, keyinfobase will contain a PKC-allocated structure-->
<!--  * which must be released with pkc_free_keyinfo() when the application-->
<!--  * has finished with it.-->
<!--  */-->
<!-- -->
<!-- -->
<!-- extern unsigned32 pkc_retrieve_keyinfo (trustbase_t *base,  -->
<!--                                         char *name, -->
<!--                                         utc_t *key_date,-->
<!--                                         selection_t *sel, -->
<!--                                         keyinfo_t **keyinfobase);-->
<!-- -->
<!-- -->
<!-- -->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pkc_retrieve_keyinfo.3sec,v 1.1.2.7 1996/12/17 21:06:45 damon Exp $
    | tagMorph library:  $Id: pkc_retrieve_keyinfo.3sec,v 1.1.2.7 1996/12/17 21:06:45 damon Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
