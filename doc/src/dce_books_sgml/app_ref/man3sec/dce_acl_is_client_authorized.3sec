<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_acl_is_client_authorized.3sec,v $
# Revision 1.1.2.6  1996/12/11  16:37:14  carrig
# 	{enh,R1.2.2}
# 	Fixed errors from log
# 	[1996/12/11  16:36:09  carrig]
#
# Revision 1.1.2.5  1996/12/10  21:55:53  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:54:36  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:27:11  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:18:44  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:03:29  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:57:28  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:18:55  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:12:22  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:54:28  weir
# 	Initial submission
# 	[1996/11/29  17:47:10  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN444.rsml.1">
<RefMeta>
<RefEntryTitle>dce_acl_is_client_authorized</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dce_acl_is_client_authorized</Literal></RefName>
<RefPurpose>Checks whether a client's credentials are authenticated</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.3  1996/11/19  18:55:30  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:48:35  wardr]-->
<!---->
<!-- Revision 1.1.4.2  1996/09/18  17:59:52  millett-->
<!-- 	{def,12850,R1.2.2}-->
<!-- 	Add missing parms-->
<!-- 	[1996/09/18  17:59:14  millett]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/05/13  19:02:06  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:55:58  wardr]-->
<!-- -->
<!-- Revision 1.1.2.6  1995/06/15  19:26:46  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  15:40:25  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/06/13  17:14:36  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:30  devobj]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/05/22  03:40:00  neilson-->
<!-- 	Fix wrong-font typo.-->
<!-- 	[1994/05/22  02:20:53  neilson]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/05/12  16:01:14  neilson-->
<!-- 	Engineering changes.-->
<!-- 	[1994/05/12  16:00:33  neilson]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/06  21:39:22  neilson-->
<!-- 	Incorporate changes from first draft review.-->
<!-- 	[1994/05/06  21:37:19  neilson]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/02/22  22:18:46  neilson-->
<!-- 	Initial material.-->
<!-- 	[1994/02/22  19:58:37  neilson]-->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dce.h>
#include &lt;dce/aclif.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_acl_is_client_authorized</Function></FuncDef>
<ParamDef>handle_t <Parameter>handle</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>mgr_type</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>acl_uuid</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>owner_id</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>group_id</Parameter></ParamDef>
<ParamDef>sec_acl_permset_t <Parameter>desired_perms</Parameter></ParamDef>
<ParamDef>boolean32 *<Parameter>authorized</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">handle</Symbol></Term>
<ListItem>
<Para>The client's binding handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">mgr_type</Symbol></Term>
<ListItem>
<Para>A pointer to the UUID identifying the type of the ACL manager in
question.  There may be more than one type of ACL manager protecting
the object whose ACL is bound to the input handle.  Use this parameter
to distinguish them.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">acl_uuid</Symbol></Term>
<ListItem>
<Para RevisionFlag="Changed">A pointer to the UUID of the ACL.
<?og-ChangeStart def,12850,R1.2.2,add missing parms"></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable" RevisionFlag="Changed">owner_id</Symbol></Term>
<ListItem>
<Para RevisionFlag="Changed">Identifies the owner of the object that is protected by the
specified ACL.  If the <Literal>sec_acl_e_type_user_obj</Literal> ACLE (ACL entry)
exists, then the <Replaceable>owner_id</Replaceable> (<StructName Role="typedef">uuid_t</StructName> pointer) can not be
NULL.  If it is, then the error <Literal>sec_acl_expected_user_obj</Literal> is returned.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable" RevisionFlag="Changed">group_id</Symbol></Term>
<ListItem>
<Para RevisionFlag="Changed">Identifies the group to which the object that is protected by the
specified ACL belongs.  If the a <Literal>sec_acl_e_type_group_obj</Literal> ACLE
exists, the <Replaceable>group_id</Replaceable> (<StructName Role="typedef">uuid_t</StructName> pointer) can not be NULL.  If
it is, the error <Literal>sec_acl_expected_group_obj</Literal> is returned.
<?og-ChangeEnd def,12850,R1.2.2,add missing parms"></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">desired_perms</Symbol></Term>
<ListItem>
<Para>A permission set containing the desired
privileges.  This is a 32-bit set of permission flags.  The flags may
represent the conventional file system permissions (read, write, and execute),
the extended AFS permissions (owner, insert, and delete), or some other
permissions supported by the specific application ACL manager.
For example, a bit that is unused for file system permissions may mean
withdrawals are allowed for a bank ACL manager, while it may mean
matrix inversions are allowed for a CPU ACL manager.  The
<Symbol Role="Variable">mgr_type</Symbol> identifies the semantics of the bits.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">authorized</Symbol></Term>
<ListItem>
<Para>A pointer to the TRUE or FALSE return value of the routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion, the
routine returns <Literal>error_status_ok</Literal>.  Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dce_acl_is_client_authorized()</Function> routine returns TRUE in the
<Symbol Role="Variable">authorized</Symbol> parameter if and only if all of the desired
permissions (represented as bits in <Symbol Role="Variable">desired_perms</Symbol>) are included
in the actual permissions corresponding to the <Symbol Role="Variable">handle</Symbol>, the
<Symbol Role="Variable">mgr_type</Symbol>, and the <Symbol Role="Variable">acl_uuid</Symbol> UUID.  Otherwise, the returned
value is FALSE.
</Para>
</RefSect1>
<RefSect1>
<Title>Notes</Title>
<Para>The routine's return value is <Literal>void</Literal>.  The returned <Literal>boolean32</Literal>
value is in the <Symbol Role="Variable">authorized</Symbol> parameter.
<!-- .SH "FILES"-->
<!-- .VL-->
<!-- .LI-->
<!-- .LE-->
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>acl_s_bad_manager_type</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">mgr_type</Symbol> does not match the manager type in the ACL itself.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para>The call was successful.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- .SH "RELATED INFORMATION"-->
<!-- .PP-->
<!-- .ad l-->
<!-- Functions:-->
<!-- .ad b-->
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_acl_is_client_authorized.3sec,v 1.1.2.6 1996/12/11 16:37:14 carrig Exp $
    | tagMorph library:  $Id: dce_acl_is_client_authorized.3sec,v 1.1.2.6 1996/12/11 16:37:14 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
