<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_rgy_attr_lookup_no_expand.3sec,v $
# Revision 1.1.2.7  1996/12/14  23:07:19  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  23:01:01  carrig]
#
# Revision 1.1.2.6  1996/12/10  21:49:22  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:44:47  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:24:59  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:20:29  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:32:13  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:24:24  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:07:14  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  22:01:00  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:23:03  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:16:35  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:00:34  weir
# 	Initial submission
# 	[1996/11/29  17:50:50  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN692.rsml.1">
<RefMeta>
<RefEntryTitle>sec_rgy_attr_lookup_no_expand</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>sec_rgy_attr_lookup_no_expand</Literal></RefName>
<RefPurpose>Reads a specified 
object's attribute(s), without expanding attribute sets into individual 
member attributes</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.3  1996/11/19  18:59:44  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:52:52  wardr]-->
<!---->
<!-- Revision 1.1.4.2  1996/09/30  19:14:35  millett-->
<!-- 	{def,13229,R1.2.2}-->
<!-- 	clarifying uninitialized cursor-->
<!-- 	[1996/09/30  19:14:17  millett]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/05/13  19:06:12  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:58:50  wardr]-->
<!-- -->
<!-- Revision 1.1.2.5  1995/06/21  18:24:28  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/21  18:15:15  buckler]-->
<!-- -->
<!-- Revision 1.1.2.4  1995/06/21  13:22:12  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/19  14:58:55  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/19  20:17:26  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:11:45  neilson]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/10/06  20:41:50  rrizzo-->
<!-- 	expand copyright-->
<!-- 	[1994/10/06  20:08:18  rrizzo]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/08/15  16:25:24  millette-->
<!-- 	(enh,10056R1.1)-->
<!-- 	Created for ERA-->
<!-- 	[1994/08/15  16:25:06  millette]-->
<!-- -->
<!-- .iX "\*Lsec_rgy_attr_lookup_no_expand(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_rgy_attr_lookup_no_expand(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/sec_rgy_attr.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>sec_rgy_attr_lookup_no_expand</Function></FuncDef>
<ParamDef>sec_rgy_handle_t <Parameter>context</Parameter></ParamDef>
<ParamDef>sec_rgy_domain_t <Parameter>name_domain</Parameter></ParamDef>
<ParamDef>sec_rgy_name_t <Parameter>name</Parameter></ParamDef>
<ParamDef>sec_attr_cursor_t *<Parameter>cursor</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>num_attr_keys</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>space_avail</Parameter></ParamDef>
<ParamDef>uuid_t <Parameter>attr_keys[&thinsp;]</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>num_returned</Parameter></ParamDef>
<ParamDef>sec_attr_t <Parameter>attr_sets[&thinsp;]</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>num_left</Parameter></ParamDef>
<ParamDef>error_status_t <Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">context</Symbol></Term>
<ListItem>
<Para>An opaque handle bound to a registry server.  Use
<Function>sec_rgy_site_open()</Function> to acquire a bound handle.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">name_domain</Symbol></Term>
<ListItem>
<Para>A value of type <StructName Role="typedef">sec_rgy_domain_t</StructName> that identifies the domain in 
which the named object resides.  The valid values are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>sec_rgy_domain_principal</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">name</Symbol> identifies a principal.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_rgy_domain_group</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">name</Symbol> identifies a group.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_rgy_domain_org</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">name</Symbol>  identifies an organization.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>This parameter is ignored if <Symbol Role="Variable">name</Symbol> is <Literal>policy</Literal> or <Literal>replist</Literal>.
<?sml-break><?sml-need 8></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">name</Symbol></Term>
<ListItem>
<Para>A pointer to a <StructName Role="typedef">sec_rgy_name_t</StructName> character string
containing the name
of the person, group, or organization to which the attribute is attached.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">num_attr_keys</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer that specifies the number of elements in the 
the <Symbol Role="Variable">attr_keys[&thinsp;]</Symbol> array.  If <Symbol Role="Variable">num_attr_keys</Symbol> is set 
to 0 (zero), all attribute sets that the caller is authorized to see 
are returned.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">space_avail</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer that specifies the size of the <Symbol Role="Variable">attrs_sets</Symbol>[&thinsp;] array.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">attr_keys[&thinsp;]</Symbol></Term>
<ListItem>
<Para>An array of values of type <StructName Role="typedef">uuid_t</StructName> that specify the UUIDs of the 
attribute sets to be returned.  
The size of the <Symbol Role="Variable">attr_keys[&thinsp;]</Symbol> array is determined by the 
<Symbol Role="Variable">num_attr_keys</Symbol> parameter.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">cursor</Symbol></Term>
<ListItem>
<Para>A pointer to a <StructName Role="typedef">sec_attr_cursor_t</StructName>.
As an input parameter, <Symbol Role="Variable">cursor</Symbol> is a pointer to a <StructName Role="typedef">sec_attr_cursor_t</StructName> that 
is initialized by the <Literal>sec_rgy_attr_cursor_init</Literal>.  
As an output parameter, <Symbol Role="Variable">cursor</Symbol> is a pointer to a <StructName Role="typedef">sec_attr_cursor_t</StructName> that 
is positioned past the attribute sets returned in this call.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">num_returned</Symbol></Term>
<ListItem>
<Para>A pointer to a 32-bit integer that specifies the number of attribute sets 
returned in the <Symbol Role="Variable">attrs</Symbol>[&thinsp;] array.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">attr_sets[&thinsp;]</Symbol></Term>
<ListItem>
<Para>An array of values of type <StructName Role="typedef">sec_attr_t</StructName> that 
contains the attribute sets retrieved by UUID.   
The size of the array is determined by 
<Symbol Role="Variable">space_avail</Symbol> and the length by <Symbol Role="Variable">num_returned</Symbol>.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">num_left</Symbol></Term>
<ListItem>
<Para>A pointer to a 32-bit unsigned integer that supplies the number of attribute 
sets that were found but could  
not be returned because of 
space constraints in the <Symbol Role="Variable">attr_sets[&thinsp;]</Symbol> buffer.  To ensure that all the 
attributes will be returned, increase the size of the <Symbol Role="Variable">attr_sets[&thinsp;]</Symbol> 
array by increasing the size of <Symbol Role="Variable">space_avail</Symbol> and <Symbol Role="Variable">num_returned</Symbol>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
the routine returns <Literal>error_status_ok</Literal>.
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_rgy_attr_lookup_no_expand()</Function> routine 
reads attribute sets.  This routine is similar to the 
<Function>sec_rgy_attr_lookup_by_id()</Function> routine with one exception:  
for attribute sets, the <Function>sec_rgy_attr_lookup_by_id()</Function> routine
expands attribute sets and returns a <StructName Role="typedef">sec_attr_t</StructName> 
for each member in the set.   This call does not.  Instead 
it returns a <StructName Role="typedef">sec_attr_t</StructName> 
for the set instance only.
The <Function>sec_rgy_attr_lookup_no_expand()</Function> routine 
is useful for programmatic access.
</Para>
<Para RevisionFlag="Changed"><Symbol Role="Variable">cursor</Symbol> is a cursor of type <StructName Role="typedef">sec_attr_cursor_t</StructName> that 
establishes the point 
in the attribute set list from which the server should start 
processing the query.  Use the <Literal>sec_rgy_attr_cursor_init</Literal> 
function to initialize <Symbol Role="Variable">cursor</Symbol>.  
<?og-ChangeStart def,13229,R1.2.2,clarify uninit. behavior">If <Symbol Role="Variable">cursor</Symbol> 
is uninitialized, the behavior is undefined.
<?og-ChangeEnd def,13229,R1.2.2,clarify uninit. behavior"></Para>
<Para>The <Symbol Role="Variable">num_left</Symbol> parameter contains the number of 
attribute sets that were found but could not be returned 
because of space constraints of the <Symbol Role="Variable">attr_sets[&thinsp;]</Symbol> array. 
(Note that this number may be inaccurate if 
the target server allows updates between successive queries.)
To obtain all of the remaining attribute sets, set the size of the 
<Symbol Role="Variable">attr_sets[&thinsp;]</Symbol> array so that it is large enough to hold the number of 
attributes listed in <Symbol Role="Variable">num_left</Symbol>.
</Para>
<RefSect2>
<Title>Permissions Required</Title>
<Para>The <Function>sec_rgy_attr_lookup_no_expand()</Function> routine requires 
the query permission 
set for each attribute type identified in the <Symbol Role="Variable">attr_keys[&thinsp;]</Symbol> array. 
These permissions are defined as part of the ACL manager set in the 
schema entry of each attribute type. 
</Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/sec_rgy_attr.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/sec_rgy_attr.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!--no-op:   .SH  EXAMPLES"-->
<!--no-op:   .PP-->
<!--no-op:   EXAMPLES????????-->
<!--no-op:   .PP-->
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>invalid/unsupported attribute type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>registry server unavailable</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>unauthorized</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>, 
<Filename MoreInfo="RefEntry">sec_rgy_attr_lookup_by_id(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_rgy_attr_lookup_by_name(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_rgy_attr_lookup_no_expand.3sec,v 1.1.2.7 1996/12/14 23:07:19 carrig Exp $
    | tagMorph library:  $Id: sec_rgy_attr_lookup_no_expand.3sec,v 1.1.2.7 1996/12/14 23:07:19 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
