<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: pkc_trust_list_element.class.3sec,v $
# Revision 1.1.2.8  1996/12/17  21:06:54  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  21:04:23  damon]
#
# Revision 1.1.2.7  1996/12/15  17:14:49  weir
# 	Various updates etc.
# 	[1996/12/15  17:12:46  weir]
# 
# Revision 1.1.2.6  1996/12/12  00:12:38  weir
# 	Editorial corrections
# 	[1996/12/12  00:11:11  weir]
# 
# Revision 1.1.2.5  1996/12/07  22:34:53  weir
# 	Set revision flag
# 	[1996/12/07  22:33:08  weir]
# 
# Revision 1.1.2.4  1996/12/07  20:29:25  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:16  carrig]
# 
# Revision 1.1.2.3  1996/12/06  23:46:53  weir
# 	Updates
# 	[1996/12/06  23:45:09  weir]
# 
# Revision 1.1.2.2  1996/12/01  20:20:29  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:11  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:57:09  weir
# 	Initial submission
# 	[1996/11/29  17:48:47  weir]
# 
# $EndLog$
# 
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry RevisionFlag="changed" Id="DCEADR.MAN560.rsml.1">
<RefMeta>
<RefEntryTitle>pkc_trust_list_element.class</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>pkc_trust_list_element.class</Function></RefName>
<RefPurpose>Public key class</RefPurpose>
</RefNameDiv>
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.2.3  1996/11/19  18:57:25  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:32  wardr]-->
<!---->
<!-- Revision 1.1.2.2  1996/11/18  19:58:34  weir-->
<!-- 	No change-->
<!-- 	[1996/11/18  19:55:55  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1996/10/15  21:11:28  weir-->
<!-- 	Initial submission-->
<!-- 	[1996/10/15  21:09:49  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1>
<Title>Member Data</Title>
<!-- -->
<RefSect2>
<Title>Public</Title>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_trust_list_element_t * next</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_trust_list_element_t * prev</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</RefSect2>
<!-- -->
<!-- -->
<!-- -->
<!-- <RefSect2> -->
<!-- <Title>Private</Title> -->
<!-- <ItemizedList> -->
<!-- <ListItem> -->
<!-- <Para><Literal>pkc_trust_list_t * root</Literal> -->
<!-- </Para> -->
<!-- </ListItem> -->
<!-- </ItemizedList> -->
<!-- </RefSect2> -->
<!-- -->
<!-- -->
<!-- -->
</RefSect1>
<RefSect1>
<Title>Member Functions</Title>
<!-- -->
<RefSect2>
<Title>Public</Title>
<!-- -->
<ItemizedList>
<ListItem>
<Para><Literal>void unlink(void)</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_trust_list_element_t()</Literal>
</Para>
<Para>Takes the following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_trust_list_t &amp;</Literal> <Replaceable>the_root</Replaceable>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<!-- -->
</ListItem>
<ListItem>
<Para><Literal>pkc_trust_list_element_t()</Literal>
</Para>
<Para>Takes the following arguments:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_trust_list_t &amp;</Literal> <Replaceable>the_root</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>utc_t</Literal> <Replaceable>startDate</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>utc_t</Literal> <Replaceable>endDate</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_ca_key_usage_t</Literal> <Replaceable>caUsages</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_key_usage_t</Literal> <Replaceable>userUsages</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_key_policies_t</Literal> <Replaceable>keyPolicies</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_constraints_t</Literal> <Replaceable>keyConstraints</Replaceable>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<!-- -->
</ListItem>
<ListItem>
<Para><Literal>virtual ~pkc_trust_list_element_t()</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Function>unsigned32 apply_revocation()</Function>
</Para>
<Para>Apply a revocation to this key, starting at the specified date.
If revocation_date is NULL, the key is completely revoked:
this key, and all keys dependent on it will be revoked. Takes
the following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>utc_t *</Literal> <Replaceable>revocation_date</Replaceable>
</Para>
</ListItem>
</ItemizedList>
<Para>
<!-- -->
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</RefSect2>
<!-- -->
<!-- -->
<!-- -->
<!-- <RefSect2> -->
<!-- <Title>Private</Title> -->
<!-- -->
<!-- <ItemizedList> -->
<!-- <ListItem> -->
<!-- <Para><Literal>pkc_trust_list_element_t &amp; operator =  -->
<!-- (const pkc_trust_list_element_t &amp; o) {return *this;}</Literal> -->
<!-- -->
<!-- -->
<!-- </Para> -->
<!-- </ListItem> -->
<!-- </ItemizedList> -->
<!-- -->
<!-- <?sml-break> -->
<!-- <?sml-need 1.5i> -->
<!-- -->
<!-- </RefSect2> -->
<!-- -->
<!-- -->
<!-- -->
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para><StructName Role="typedef">pkc_trust_list_element_t</StructName> defines a key.
</Para>
<Para>The certificate manipulation routines are a C++ interface. C++ must be
used to perform direct certificate manipulation.
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<?sml-need 1.5i>
<!-- -->
</Para>
</RefSect1>
<!-- -->
<!-- -->
<!-- -->
<RefSect1>
<Title>Parent Class</Title>
<para>
This class is derived from the <StructName Role="typedef">pkc_trusted_key_t</StructName>
class. It has as <Literal>friend</Literal> class
<StructName Role="typedef">pkc_trust_list_t</StructName> (a list of trusted keys).
</para>
</RefSect1>
<!-- -->
<!-- -->
<!-- -->
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Classes:
<Filename MoreInfo="RefEntry">pkc_ca_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_generic_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_policies.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_policy.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subord_constraint.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subord_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subtree_constraint.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subtree_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_pending_revocation.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_revocation.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_revocation_list.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_trust_list.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_trusted_key.class(3sec)</Filename>.
<!--no-op:  b-->
<!-- -->
<!-- -->
<!-- -->
<!-- class pkc_trust_list_element_t : public pkc_trusted_key_t {-->
<!-- friend class pkc_trust_list_t;-->
<!-- // A list of trusted keys.-->
<!-- private:-->
<!--     pkc_trust_list_element_t & operator = -->
<!--                       (const pkc_trust_list_element_t & o) {return *this;};-->
<!-- private:-->
<!--     pkc_trust_list_t * root;-->
<!-- public:-->
<!--     pkc_trust_list_element_t * next;-->
<!--     pkc_trust_list_element_t * prev;-->
<!--     void unlink(void);-->
<!--     pkc_trust_list_element_t(pkc_trust_list_t & the_root);-->
<!--     pkc_trust_list_element_t(pkc_trust_list_t & the_root, -->
<!--                              utc_t startDate,-->
<!--                              utc_t endDate,-->
<!--                              pkc_ca_key_usage_t caUsages,-->
<!--                              pkc_key_usage_t userUsages,-->
<!--                              pkc_key_policies_t keyPolicies,-->
<!--                              pkc_constraints_t keyConstraints);-->
<!--     virtual ~pkc_trust_list_element_t();-->
<!--     unsigned32 apply_revocation(utc_t * revocation_date);-->
<!-- // Apply a revocation to this key, starting at the specified date.-->
<!-- // If revocation_date is NULL, the key is completely revoked.-->
<!-- // This key, and all keys dependent on it will be revoked.-->
<!-- };-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pkc_trust_list_element.class.3sec,v 1.1.2.8 1996/12/17 21:06:54 damon Exp $
    | tagMorph library:  $Id: pkc_trust_list_element.class.3sec,v 1.1.2.8 1996/12/17 21:06:54 damon Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
