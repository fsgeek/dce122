<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_attr_trig_query.3sec,v $
# Revision 1.1.2.7  1996/12/14  23:05:18  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  22:58:46  carrig]
#
# Revision 1.1.2.6  1996/12/10  21:47:16  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:42:26  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:22:51  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:18:08  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:30:04  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:56  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:05:11  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:59:04  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:20:59  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:38  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:58:06  weir
# 	Initial submission
# 	[1996/11/29  17:49:14  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN588.rsml.1">
<RefMeta>
<RefEntryTitle>sec_attr_trig_query</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><StructName Role="typedef">sec_attr_trig_query</StructName></RefName>
<RefPurpose>Reads attributes coded with an attribute trigger type of query </RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.6.3  1996/11/19  18:57:54  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:51:02  wardr]-->
<!---->
<!-- Revision 1.1.6.2  1996/07/31  18:57:17  millett-->
<!-- 	{def,13151,R1.2.2}-->
<!-- 	remove reference to sec_attr_trig_cursor_init-->
<!-- 	[1996/07/31  18:56:39  millett]-->
<!-- -->
<!-- Revision 1.1.6.1  1996/05/13  19:04:01  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:57:20  wardr]-->
<!-- -->
<!-- Revision 1.1.4.2  1996/03/15  17:03:42  weir-->
<!-- 	CR 12716: implemented function-->
<!-- 	[1996/03/15  17:03:15  weir]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/03/15  16:39:47  weir-->
<!-- 	No change-->
<!-- 	[1996/03/15  16:39:20  weir]-->
<!-- -->
<!-- Revision 1.1.2.6  1995/06/15  19:28:12  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  19:23:47  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/19  20:16:05  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:09:53  neilson]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  20:35:19  millette-->
<!-- 	{enh, 10056, R1.1}-->
<!-- 	HP edits-->
<!-- 	[1994/10/14  20:34:10  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/14  20:13:06  millette-->
<!-- 	{enh, 10056, R1.1}-->
<!-- 	HP edits-->
<!-- 	[1994/10/14  20:11:38  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/13  17:15:26  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:51  devobj]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/03/29  17:45:07  millette-->
<!-- 	(enh, 10056, R1.1)-->
<!-- 	Created for ERA-->
<!-- 	[1994/03/29  17:44:28  millette]-->
<!-- -->
<!-- .iX "\*Lsec_attr_trig_query(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_attr_trig_query(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/sec_attr_trig.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void sec_attr_trig_query </Literal></Function></FuncDef>
<ParamDef>handle_t <Parameter>h</Parameter></ParamDef>
<ParamDef>sec_attr_component_name_t <Parameter>cell_name</Parameter></ParamDef>
<ParamDef>sec_attr_component_name_t <Parameter>component_name</Parameter></ParamDef>
<ParamDef>sec_attr_trig_cursor_t *<Parameter>cursor</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>num_attr_keys</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>space_avail</Parameter></ParamDef>
<ParamDef>sec_attr_t <Parameter>attr_keys[&thinsp;]</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>num_returned</Parameter></ParamDef>
<ParamDef>sec_attr_t <Parameter>attrs[&thinsp;]</Parameter></ParamDef>
<ParamDef>sec_attr_trig_timeval_sec_t <Parameter>time_to_live[&thinsp;]</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>num_left</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">h</Symbol></Term>
<ListItem>
<Para>A handle referring to the trigger server to be accessed 
Use
the trigger binding information specified in the attribute 
encoding to acquire a bound handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">cell_name</Symbol></Term>
<ListItem>
<Para>A value of <StructName Role="typedef">sec_attr_component_name_t</StructName> that identifies the 
cell in which the object whose attribute is to be accessed 
resides.  Supply a NULL <Symbol Role="Variable">cell_name</Symbol> 
to specify the local cell (<Filename>/.:</Filename>).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">component_name</Symbol></Term>
<ListItem>
<Para>A value of <StructName Role="typedef">sec_attr_component_name_t</StructName> that identifies the
name of the object whose attribute is to be accessed.
If <Symbol Role="Variable">cell_name</Symbol> specifies a foreign cell, <Symbol Role="Variable">component_name</Symbol> is 
interpreted as a UUID in string format since the caller of this
interface knows only the 
UUID, not the name, of the foreign principal.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">num_attr_keys</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer that specifies the number of elements in the 
<Symbol Role="Variable">attr_keys[&thinsp;]</Symbol> array.  This integer must be greater than 0 (zero).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">space_avail</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer that specifies the size of the <Symbol Role="Variable">attr_keys[&thinsp;]</Symbol> array.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">attr_keys[&thinsp;]</Symbol></Term>
<ListItem>
<Para>An array of values of type <StructName Role="typedef">sec_attr_t</StructName>.  For each attribute 
instance, the <StructName Role="typedef">sec_attr_t</StructName> array contains an <Replaceable>attr_id</Replaceable> (a UUID of type <StructName Role="typedef">uuid_t</StructName>) 
to identify the attribute to be queried and an 
<Replaceable>attr_value</Replaceable>.  <Replaceable>attr_value</Replaceable> 
can be used to pass in optional information 
required by the attribute trigger query.  If no additional information is 
to be passed, set <Replaceable>attr_value</Replaceable>  to <Literal>sec_attr_enc_void</Literal>.  
This is actually accomplished by setting the 
<StructName Role="typedef">sec_attr_encoding_t</StructName> data type to <Literal>sec_attr_enc_void</Literal>.
</Para>
<Para>The size of the <Symbol Role="Variable">attr_keys[&thinsp;]</Symbol> array is determined by <Symbol Role="Variable">num_attr_keys</Symbol>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">cursor</Symbol></Term>
<ListItem RevisionFlag="Changed">
<?og-ChangeStart def,13151,R1.2.2,remove sec_attr_trig_cursor_init">
<Para>A pointer to a cursor of type <StructName Role="typedef">sec_attr_trig_cursor_t</StructName>.  
As an input parameter, <Symbol Role="Variable">cursor</Symbol> can be initialized (by 
the server) or uninitialized. 
If the cursor is uninitialized, the cursor begins processing the 
query at the first attribute that satisfies the search criteria.
As an output parameter,  <Symbol Role="Variable">cursor</Symbol> is positioned past the 
attributes returned in this call. 
<?og-ChangeEnd def,13151,R1.2.2,remove sec_attr_trig_cursor_init"></Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">num_returned</Symbol></Term>
<ListItem>
<Para>A pointer to an unsigned 32-bit integer that specifies the number of attribute instances 
returned in the <Symbol Role="Variable">attr_keys[&thinsp;]</Symbol> array.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">attrs[&thinsp;]</Symbol></Term>
<ListItem>
<Para>An array of values of type <StructName Role="typedef">sec_attr_t</StructName>.  The size of this array is 
determined by the <Symbol Role="Variable">space_avail</Symbol> parameter and the length by the 
<Symbol Role="Variable">num_returned</Symbol> parameter.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">time_to_live</Symbol>[&thinsp;]</Term>
<ListItem>
<Para>An array of values of type <StructName Role="typedef">sec_attr_trig_timeval_sec_t</StructName>.  
For each attribute in the <Symbol Role="Variable">attrs</Symbol>[&thinsp;] array, 
The <Symbol Role="Variable">time_to_live[&thinsp;]</Symbol> array specifies 
the time in seconds that the 
attribute can be safely cached.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">num_left</Symbol></Term>
<ListItem>
<Para>A pointer to an unsigned 32-bit integer that supplies the number of attributes 
found but not returned because of 
space constraints in the <Symbol Role="Variable">attrs</Symbol>[&thinsp;] buffer.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
the routine returns <Literal>error_status_ok</Literal>.
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_attr_trig_query()</Function> routine 
reads attributes coded with a attribute trigger type of query.  
</Para>
<Para>The <Function>sec_attr_trig_query()</Function> routine is called by the DCE attribute lookup code 
for all schema entries that specify a query attribute trigger 
(<Literal>sec_attr_trig_type_query</Literal> 
specified with the <StructName Role="typedef">sec_attr_trig_type_flags_t</StructName> data type). 
The attribute query code passes the <Function>sec_attr_trig_query()</Function> input parameters 
to a user-written query attribute trigger server and receives the output parameters 
back from the server.  
Although generally this routine is not called directly, 
this reference page is provided for users who are writing the 
attribute trigger servers that will receive <Function>sec_attr_trig_query()</Function> input 
and supply its output.
</Para>
<Para>Multivalued attributes are returned as independent attribute 
instances sharing the same attribute UUID.  
A read of an attribute set returns all instances of members 
of the set; the attribute set instance is not returned. 
</Para>
<Para>For objects in the local cell, set the <Symbol Role="Variable">cell_name</Symbol> parameter to 
<Literal>null</Literal>, and the <Symbol Role="Variable">component_name</Symbol> parameter to specify the object's name.
</Para>
<Para>For objects in a foreign cell, set the <Symbol Role="Variable">cell_name</Symbol> parameter to identify the name of the  
foreign cell, and 
the <Symbol Role="Variable">component_name</Symbol> parameter to the UUID in 
string format that identifies the object in the foreign cell.
</Para>
<Para RevisionFlag="Changed"><?og-ChangeStart def,13151,R1.2.2,remove sec_attr_trig_cursor_init">
<!-- The \*Vcursor\*O parameter specifies a cursor of type \*Lsec_attr_trig_cursor_t\*O -->
<!-- that establishes the point -->
<!-- in the attribute list at which to start -->
<!-- processing the query.  Use the \*Lsec_attr_trig_cursor_init\*O -->
<!-- function to initialize a list cursor.  -->
<!-- If \*Vcursor\*O -->
<!-- is uninitialized, the server begins processing the query at-->
<!-- the first attribute that satisfies the search criteria.  -->
<!-- Note that generally, \*Lsec_attr_trig_cursor_init\*O -->
<!-- function makes a remote call to the specified server. -->
<!-- To initialize the cursor without making this remote call, -->
<!-- set the \*Lsec_attr_trig_cursor_init\*O function \*Vvalid\*O -->
<!-- parameter to 0 (zero). -->
<!-- .PP-->
<?og-ChangeEnd def,13151,R1.2.2,remove sec_attr_trig_cursor_init">The <Symbol Role="Variable">num_left</Symbol> parameter contains the number of 
attributes that were found but could not be returned 
because of space constraints of the <Symbol Role="Variable">attrs[&thinsp;]</Symbol> array. 
(Note that this number may be inaccurate if 
the target server allows updates between successive queries.)
To obtain all of the remaining attributes, set the size of the 
<Symbol Role="Variable">attrs[&thinsp;]</Symbol> array so that it is large enough to hold the number of 
attributes listed in <Symbol Role="Variable">num_left</Symbol>.
<!-- .SS "Permissions Required"-->
<!-- .PP-->
<!-- The \*Lsec_attr_trig_query(\|)\*O routine requires the \*L?\*O (\*Linsert\*O)-->
<!-- permission on the ?????-->
<!-- .PP-->
<!-- .br-->
<!-- .ne 1.5i-->
<!-- .SH "NOTES"-->
<!-- .PP-->
<!-- .br-->
<!-- .ne 1.5i-->
</Para>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/sec_attr_trig.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/sec_attr_trig.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- .PP-->
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
<!-- CAN WE SUPPLY EXAMPLE?????-->
<!-- .PP-->
<!--.PP-->
<!--CK Create an example of adding a user, PGO item, account and everything.-->
<!--?????-->
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>not_all_available</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>unauthorized</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Literal>sec_attr_trig_cursor_init</Literal>,
<Filename MoreInfo="RefEntry">sec_attr_trig_update(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_attr_trig_query.3sec,v 1.1.2.7 1996/12/14 23:05:18 carrig Exp $
    | tagMorph library:  $Id: sec_attr_trig_query.3sec,v 1.1.2.7 1996/12/14 23:05:18 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
