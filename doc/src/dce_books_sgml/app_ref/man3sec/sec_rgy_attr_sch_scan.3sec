<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_rgy_attr_sch_scan.3sec,v $
# Revision 1.1.2.7  1996/12/14  23:07:32  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  23:01:15  carrig]
#
# Revision 1.1.2.6  1996/12/10  21:49:33  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:45:00  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:25:10  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:20:43  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:32:25  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:24:38  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:07:25  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  22:01:11  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:23:14  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:16:46  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:00:46  weir
# 	Initial submission
# 	[1996/11/29  17:51:00  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN703.rsml.1">
<RefMeta>
<RefEntryTitle>sec_rgy_attr_sch_scan</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>sec_rgy_attr_sch_scan</Literal></RefName>
<RefPurpose>Reads a specified number of schema entries </RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.2  1996/11/19  18:59:57  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:53:02  wardr]-->
<!---->
<!-- Revision 1.1.4.1  1996/05/13  19:06:25  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:58:59  wardr]-->
<!-- -->
<!-- Revision 1.1.2.4  1995/06/21  13:22:22  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/19  14:59:07  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/08/12  18:41:48  millette-->
<!-- 	(enh, 10056, R1.1)-->
<!-- 	Updated error messages-->
<!-- 	[1994/08/12  18:41:15  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/13  17:15:58  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:49:08  devobj]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/03/29  19:35:13  millette-->
<!-- 	(enh, 10056, R1.1)-->
<!-- 	Created for ERA-->
<!-- 	[1994/03/29  19:34:31  millette]-->
<!-- -->
<!-- .iX "\*Lsec_rgy_attr_sch_scan(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_rgy_attr_sch_scan(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/sec_rgy_attr_sch.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>sec_rgy_attr_sch_scan</Function></FuncDef>
<ParamDef>sec_rgy_handle_t <Parameter>context</Parameter></ParamDef>
<ParamDef>sec_attr_component_name_t <Parameter>schema_name</Parameter></ParamDef>
<ParamDef>sec_attr_cursor_t *<Parameter>cursor</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>num_to_read</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>num_read</Parameter></ParamDef>
<ParamDef>sec_attr_schema_entry_t <Parameter>schema_entries[&thinsp;]</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">context</Symbol></Term>
<ListItem>
<Para>An opaque handle bound to a registry server.  Use
<Function>sec_rgy_site_open()</Function> to acquire a bound handle.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">schema_name</Symbol></Term>
<ListItem>
<Para>Reserved for future use.
<!--  A value of type \*Lsec_attr_component_name_t\*O that specifies the -->
<!--  name of the target schema.-->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">num_to_read</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer specifying the size of the
<Symbol Role="Variable">schema_entries[&thinsp;]</Symbol> array and the maximum number of 
entries to be returned.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">cursor</Symbol></Term>
<ListItem>
<Para>A pointer to a <StructName Role="typedef">sec_attr_cursor_t</StructName>.
As input <Symbol Role="Variable">cursor</Symbol> must be allocated and can be initialized.  
If <Symbol Role="Variable">cursor</Symbol> is not initialized, <Literal>sec_rgy_attr_sch_scan</Literal> 
will initialized.  As output, <Symbol Role="Variable">cursor</Symbol> 
is positioned at the first schema entry after the 
returned entries.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">num_read</Symbol></Term>
<ListItem>
<Para>A pointer an unsigned 32-bit integer specifying the number 
of entries returned in <Symbol Role="Variable">schema_entries[&thinsp;]</Symbol>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">schema_entries[&thinsp;]</Symbol></Term>
<ListItem>
<Para>A <StructName Role="typedef">sec_attr_schema_entry_t</StructName> that contains an array of 
the returned schema entries. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
the routine returns <Literal>error_status_ok</Literal>.
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_rgy_attr_sch_scan()</Function> routine reads 
schema entries.  The read begins at the entry at which the 
input <Symbol Role="Variable">cursor</Symbol> is positioned and ends after the number of 
entries specified in <Symbol Role="Variable">num_to_read</Symbol>.  
</Para>
<Para>The input <Symbol Role="Variable">cursor</Symbol> must have been allocated by either 
the <Function>sec_rgy_attr_sch_cursor_init()</Function> or 
the <Function>sec_rgy_attr_sch_cursor_alloc()</Function> call.  
If the input <Symbol Role="Variable">cursor</Symbol> is not initialzed, <Function>sec_rgy_attr_sch_scan()</Function> 
initializes it; if cursor is initialized, <Function>sec_rgy_attr_sch_scan()</Function> 
simply advances it.
</Para>
<Para>To read all entries in a schema, make successive <Function>sec_rgy_attr_sch_scan()</Function> calls.  
When all entries have been read, the call returns the message <Literal>no_more_entries</Literal>. 
</Para>
<Para>This routine is useful as 
a browser.
</Para>
<RefSect2>
<Title>Permissions Required</Title>
<Para>The <Function>sec_rgy_attr_sch_scan()</Function> routine requires <Literal>r</Literal> permission 
on the <Literal>attr_schema</Literal> object.  
<!-- .ne 1.5i-->
<!-- .SH "NOTES"-->
<!-- .PP-->
<!-- .br-->
<!-- .ne 1.5i-->
<?sml-break><?sml-need 1.5i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/sec_rgy_attr_sch.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/sec_rgy_attr_sch.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
<!-- EXAMPLES????????-->
<!--.PP-->
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>sec_attr_bad_cursor</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_attr_no_memory</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_attr_svr_unavailable</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_attr_unauthorized</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_rgy_attr_sch_cursor_alloc(3sec)</Filename>, 
<Filename MoreInfo="RefEntry">sec_rgy_attr_sch_cursor_init(3sec)</Filename>, 
<Filename MoreInfo="RefEntry">sec_rgy_attr_sch_cursor_release(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_rgy_attr_sch_scan.3sec,v 1.1.2.7 1996/12/14 23:07:32 carrig Exp $
    | tagMorph library:  $Id: sec_rgy_attr_sch_scan.3sec,v 1.1.2.7 1996/12/14 23:07:32 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
