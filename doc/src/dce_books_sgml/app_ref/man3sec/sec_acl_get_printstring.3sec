<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_acl_get_printstring.3sec,v $
# Revision 1.1.2.7  1996/12/14  23:05:08  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  22:58:36  carrig]
#
# Revision 1.1.2.6  1996/12/10  21:47:08  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:42:17  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:22:42  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:17:58  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:29:52  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:46  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:05:02  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:58:55  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:20:51  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:32  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:57:52  weir
# 	Initial submission
# 	[1996/11/29  17:49:08  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN581.rsml.1">
<RefMeta>
<RefEntryTitle>sec_acl_get_printstring</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>sec_acl_get_printstring</Literal></RefName>
<RefPurpose>Returns printable ACL strings
<!-- .SH "LIBRARY"-->
<!-- \*L/usr/lib/dce/libdcesec.a\*O--></RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY -->
<!-- Revision 1.1.9.2  1996/11/19  18:57:47  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:54  wardr]-->
<!---->
<!-- Revision 1.1.9.1  1996/05/13  19:03:52  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:57:13  wardr]-->
<!-- -->
<!-- Revision 1.1.7.6  1995/06/15  19:28:05  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  19:23:38  buckler]-->
<!-- -->
<!-- Revision 1.1.7.5  1994/10/19  20:15:58  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:09:45  neilson]-->
<!-- -->
<!-- Revision 1.1.7.4  1993/01/27  17:01:12  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:40:02  cjd]-->
<!-- -->
<!-- Revision 1.1.7.3  1993/01/26  19:08:50  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:40:02  cjd]-->
<!-- -->
<!-- Revision 1.1.7.2  1992/10/02  15:46:51  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/02  15:08:57  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  15:00:19  oaf]-->
<!-- -->
<!-- Revision 1.1.5.6  1992/09/16  18:34:36  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.5.5  1992/09/03  19:20:24  lmk-->
<!-- 	Prentice-Hall edits only-->
<!-- 	[1992/09/03  18:46:22  lmk]-->
<!-- -->
<!-- Revision 1.1.5.4  1992/08/31  19:23:14  oaf-->
<!-- 	hand back to lmk-->
<!-- 	[1992/08/31  18:40:54  oaf]-->
<!-- -->
<!-- Revision 1.1.5.3  1992/08/14  17:58:55  lmk-->
<!-- 	Prentice-Hall final edits only-->
<!-- 	[1992/08/14  17:53:17  lmk]-->
<!-- -->
<!-- Revision 1.1.5.2  1992/08/14  14:18:13  lmk-->
<!-- 	Made Prentice-Hall edits only-->
<!-- 	[1992/08/14  14:12:14  lmk]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/07/01  20:58:17  millette-->
<!-- 	Bug 4357: change usr/lib to usr/include in files section-->
<!-- 	[1992/06/30  21:56:20  millette]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/06/02  17:06:50  millette-->
<!-- 	3808 Delete "Library" section to be consistent with other component's calls.-->
<!-- 	No change bars used.-->
<!-- 	[1992/06/02  14:38:53  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/21  21:34:00  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/21  21:29:30  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/06  17:10:56  millette-->
<!-- 	Bug 2945: Change boolean * to boolean32-->
<!-- 	[1992/05/05  19:38:51  millette]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:24:53  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--Copyright Hewlett-Packard Company 1991-->
<!---->
<!--All Rights Reserved.  Reproduction, adaptation,-->
<!--or translation without prior written permission-->
<!--is prohibited, except as allowed under the-->
<!--copyright laws.-->
<!---->
<!-- .iX "\*Lsec_acl_get_printstring(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_acl_get_printstring(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/daclif.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>sec_acl_get_printstring</Function></FuncDef>
<ParamDef>sec_acl_handle_t <Parameter>h</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>manager_type</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>size_avail</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>manager_type_chain</Parameter></ParamDef>
<ParamDef>sec_acl_printstring_t *<Parameter>manager_info</Parameter></ParamDef>
<ParamDef>boolean32 *<Parameter>tokenize</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>total_num_printstrings</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>size_used</Parameter></ParamDef>
<ParamDef>sec_acl_printstring_t <Parameter>printstrings[&thinsp;]</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">h</Symbol></Term>
<ListItem>
<Para>A handle referring to the target object.
Use <Function>sec_acl_bind()</Function> to create this handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">manager_type</Symbol></Term>
<ListItem>
<Para>A pointer to the UUID identifying the type of the ACL manager in
question.  There may be more than one type of ACL manager
protecting the object whose ACL is bound to the input handle.  Use
this parameter to distinguish them.  Use
<Function>sec_acl_get_manager_types()</Function> to acquire a list of the
manager types protecting a given object.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">size_avail</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer containing the allocated length of
the <Symbol Role="Variable">printstrings[&thinsp;]</Symbol> array.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 10>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">manager_type_chain</Symbol></Term>
<ListItem>
<Para>If the target object ACL contains more than 32 permission bits, multiple
manager types are used, one for each 32-bit wide ``slice'' of permissions.
The UUID returned in <Symbol Role="Variable">manager_type_chain</Symbol> refers to the next ACL
manager in the chain.  If there are no more ACL managers for this ACL,
<Literal>uuid_nil</Literal> is returned.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">manager_info</Symbol></Term>
<ListItem>
<Para>Provides a name and help string for the given ACL manager.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">tokenize</Symbol></Term>
<ListItem>
<Para>When FALSE, this variable indicates that the returned permission
printstrings are unambiguous and therefore may be concatenated when
printed without confusion.  When TRUE, however,  this
property does not hold, and the strings need to be separated when
printed or passed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">total_num_printstrings</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer containing the total number of permission
printstrings supported by this ACL manager type.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">size_used</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer containing the number of permission entries
returned in the <Symbol Role="Variable">printstrings[&thinsp;]</Symbol> array.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">printstrings[&thinsp;]</Symbol></Term>
<ListItem>
<Para>An array of permission printstrings of type <StructName Role="typedef">sec_acl_printstring_t</StructName>.
Each entry of the array is a structure containing the following
three components:
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>printstring</Literal></Term>
<ListItem>
<Para>A character string of maximum length <Literal>sec_acl_printstring_len</Literal>
describing the printable representation of a specified permission.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>helpstring</Literal></Term>
<ListItem>
<Para>A character string of maximum length <Literal>sec_acl_printstring_help_len</Literal>
containing some text that can be used to describe the specified
permission.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>permissions</Literal></Term>
<ListItem>
<Para>A <StructName Role="typedef">sec_acl_permset_t</StructName> permission set describing the permissions that
are represented with the companion printstring.
</Para>
<Para>The array consists of one such entry for each permission supported by
the ACL manager identified by <Symbol Role="Variable">manager_type</Symbol>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
the routine returns <Literal>error_status_ok</Literal>.
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_acl_get_printstring()</Function> routine returns an array of printable
representations (called <Symbol Role="Variable">printstrings</Symbol>) for each permission bit or
combination of permission bits the specified ACL manager supports.  The
ACL manager type specified must be one of the types protecting
the object indicated by <Symbol Role="Variable">h</Symbol>.
</Para>
<Para>In addition to returning the printstrings, this routine also returns
instructions about how to print the strings.  When the <Symbol Role="Variable">tokenize</Symbol>
variable is set to FALSE, a printstring might be <Literal>r</Literal> or
<Literal>w</Literal>, which could be concatenated in the display as <Literal>rw</Literal> without
any confusion.  However, when the <Symbol Role="Variable">tokenize</Symbol> variable is TRUE, it
implies the printstrings might be of a form like <Literal>read</Literal> or
<Literal>write</Literal>, which must be displayed separated by spaces or colons or
something.
</Para>
<Para>In any list of permission printstrings, there may appear to be some
redundancy.  ACL managers often define aliases for common permission
combinations.  By convention, however, simple entries should appear at
the beginning of the <Symbol Role="Variable">printstrings[&thinsp;]</Symbol> array, and combinations should
appear at the end.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/daclif.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/daclif.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>sec_acl_unknown_manager_type</Literal></Term>
<ListItem>
<Para>The manager type selected is not among those referenced by the input
handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para>The call was successful.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">sec_acl_bind(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_acl_get_manager_types(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_acl_get_printstring.3sec,v 1.1.2.7 1996/12/14 23:05:08 carrig Exp $
    | tagMorph library:  $Id: sec_acl_get_printstring.3sec,v 1.1.2.7 1996/12/14 23:05:08 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
