<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_rgy_attr_sch_cursor_reset.3sec,v $
# Revision 1.1.2.7  1996/12/14  23:07:26  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  23:01:09  carrig]
#
# Revision 1.1.2.6  1996/12/10  21:49:28  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:44:55  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:25:05  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:20:37  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:32:20  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:24:32  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:07:20  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  22:01:07  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:23:09  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:16:41  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:00:41  weir
# 	Initial submission
# 	[1996/11/29  17:50:55  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN698.rsml.1">
<RefMeta>
<RefEntryTitle>sec_rgy_attr_sch_cursor_reset</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>sec_rgy_attr_sch_cursor_reset</Literal></RefName>
<RefPurpose>Resets a cursor that has 
been allocated</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.2  1996/11/19  18:59:51  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:52:57  wardr]-->
<!---->
<!-- Revision 1.1.4.1  1996/05/13  19:06:19  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:58:55  wardr]-->
<!-- -->
<!-- Revision 1.1.2.2  1995/06/21  13:22:18  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/19  14:59:02  buckler]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/08/12  16:52:31  millette-->
<!-- 	(enh, 10056, R1.1)-->
<!-- 	Created for ERA-->
<!-- 	[1994/08/12  16:52:13  millette]-->
<!-- -->
<!-- .iX "\*Lsec_rgy_attr_sch_cursor_reset(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_rgy_attr_sch_cursor_reset(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/sec_rgy_attr_sch.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_attr_cursor_reset</Function></FuncDef>
<ParamDef>sec_attr_cursor_t *<Parameter>cursor</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">cursor</Symbol></Term>
<ListItem>
<Para>A pointer to a <StructName Role="typedef">sec_attr_cursor_t</StructName>.  
As an input 
parameter, an initialized <Symbol Role="Variable">cursor</Symbol>.  
As an output parameter, <Symbol Role="Variable">cursor</Symbol> is 
reset to the first attribute in the schema. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
the routine returns <Literal>error_status_ok</Literal>.
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_rgy_attr_sch_cursor_reset()</Function> routine resets a 
<StructName Role="typedef">dce_attr_cursor_t</StructName> that has been allocated by either a 
<Function>sec_rgy_attr_sch_cursor_init()</Function> or 
<Function>sec_rgy_attr_sch_cursor_alloc()</Function>.  
The reset cursor can then be used to process a new <Literal>sec_rgy_attr_sch_scan</Literal> query by 
reusing the cursor instead of releasing and reallocating it.  
This is a local operation and 
makes no remote calls.
</Para>
<RefSect2>
<Title>Permissions Required</Title>
<Para>None.
<!-- .ne 1.5i-->
<!-- .SH "NOTES"-->
<!-- .PP-->
<!-- .br-->
<!-- .ne 1.5i-->
</Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/sec_rgy_attr_sch.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/sec_rgy_attr_sch.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
<!-- EXAMPLES????????-->
<!-- .PP-->
<!--?????-->
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>sec_attr_bad_cursor</Literal>		</Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_rgy_attr_sch_cursor_alloc(3sec)</Filename>, 
<Filename MoreInfo="RefEntry">sec_rgy_attr_sch_cursor_init(3sec)</Filename>, 
<Filename MoreInfo="RefEntry">sec_rgy_attr_sch_scan(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_rgy_attr_sch_cursor_reset.3sec,v 1.1.2.7 1996/12/14 23:07:26 carrig Exp $
    | tagMorph library:  $Id: sec_rgy_attr_sch_cursor_reset.3sec,v 1.1.2.7 1996/12/14 23:07:26 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
