<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_login_valid_from_keytable.3sec,v $
# Revision 1.1.2.7  1996/12/14  23:06:37  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  23:00:16  carrig]
#
# Revision 1.1.2.6  1996/12/10  21:48:41  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:44:01  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:24:20  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:19:43  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:31:31  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:23:35  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:06:34  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  22:00:24  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:22:29  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:15:51  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:59:48  weir
# 	Initial submission
# 	[1996/11/29  17:50:18  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN657.rsml.1">
<RefMeta>
<RefEntryTitle>sec_login_valid_from_keytable</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>sec_login_valid_from_keytable</Literal></RefName>
<RefPurpose>Validates a login context's identity using input from a 
specified keytable file
<!-- .SH "LIBRARY"-->
<!-- \*L/usr/lib/dce/libdcesec.a\*O--></RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.3  1996/11/19  18:59:07  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:52:17  wardr]-->
<!---->
<!-- Revision 1.1.4.2  1996/07/31  16:44:29  millett-->
<!-- 	{def,13420,R1.2.2}-->
<!-- 	returns void not boolean32-->
<!-- 	[1996/07/31  16:43:41  millett]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/05/13  19:05:36  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:58:26  wardr]-->
<!-- -->
<!-- Revision 1.1.2.7  1995/06/21  13:21:49  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/16  16:47:19  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1995/05/18  16:37:37  rcb-->
<!-- 	PRENTICE HALL reformat: preliminary fiddling-->
<!-- 	[1995/05/18  16:37:33  rcb]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/19  20:17:08  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:11:26  neilson]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/06/13  17:04:20  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:23  devobj]-->
<!-- -->
<!-- Revision 1.1.2.3  1993/09/01  19:19:09  millette-->
<!-- 	(defect, 8119, R1.0.3)-->
<!-- 	Clarify status parameter and return values.-->
<!-- 	[1993/09/01  19:17:40  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1993/07/09  19:21:59  millette-->
<!-- 	{defect, 7795, R1.0.3}-->
<!-- 	Created for CR9975-->
<!-- 	[1993/07/09  19:21:19  millette]-->
<!-- -->
<!-- .iX "\*Lsec_login_valid_from_keytable(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_login_valid_from_keytable(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/sec_login.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>sec_login_valid_from_keytable</Function></FuncDef>
<ParamDef>sec_login_handle_t <Parameter>login_context</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>authn_service</Parameter></ParamDef>
<ParamDef>void *<Parameter>arg</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>try_kvno</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>used_kvno</Parameter></ParamDef>
<ParamDef>boolean32 *<Parameter>reset_passwd</Parameter></ParamDef>
<ParamDef>sec_login_auth_src_t *<Parameter>auth_src</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">login_context</Symbol></Term>
<ListItem>
<Para>An opaque handle to login context data.  The login context contains, 
among other data, the 
account principal's name 
and UUID, account
restrictions, records of the account principal's group memberships, 
and the account's home
directory.  (See <Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>
for more details about the login context.)
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">authn_service</Symbol></Term>
<ListItem>
<Para>Identifies the authentication protocol using the key.  The possible
authentication protocols are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_secret</Literal></Term>
<ListItem>
<Para>DCE shared-secret key authentication.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_public</Literal></Term>
<ListItem>
<Para>DCE public key authentication (reserved for future use).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">arg</Symbol></Term>
<ListItem>
<Para>This parameter can specify either the local keytab file or an
argument to the <Symbol Role="Variable">get_key_fn</Symbol> key acquisition routine of the
<Literal>rpc_server_register_auth_info</Literal> routine.
</Para>
<Para><?sml-need 8>A value of NULL specifies that the default keytab file
should be used.  A keytab filename specifies that that 
file should be used as the keytab file.  You must prepend the file's 
absolute filename with <Literal>FILE:</Literal> and the file must have 
been created with the <Literal>rgy_edit</Literal> command or the 
<Literal>sec_key_mgmt_set_key</Literal> routine.
</Para>
<Para>Any other value specifies an argument for the <Symbol Role="Variable">get_key_fn</Symbol> 
key acquisition routine.  
See the <Function>rpc_server_register_auth_info()</Function> reference 
page for more information.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">try_kvno</Symbol></Term>
<ListItem>
<Para>The version number of the key in the keytab file to try first.  
Specify NULL 
to try the current version of the key.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">used_kvno</Symbol></Term>
<ListItem>
<Para>A pointer to a 32-bit <Literal>boolean32</Literal> value that specifies the
version number of the
the key from the keytab file that was used to successfully validate 
the login context, if any.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">reset_passwd</Symbol></Term>
<ListItem>
<Para>A pointer to a 32-bit <Literal>boolean32</Literal> value.  The routine returns TRUE
if the account password has expired and should be reset.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">auth_src</Symbol></Term>
<ListItem>
<Para>How the the login context was authorized. 
The <StructName Role="typedef">sec_login_auth_src_t</StructName> data type 
distinguishes the various ways the login context 
was authorized.  There
are three possible values:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>sec_login_auth_src_network</Literal></Term>
<ListItem>
<Para>Authentication accomplished through the normal network authority.  A login
context authenticated this way will have all the network credentials it
ought to have.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_login_auth_src_local</Literal></Term>
<ListItem>
<Para>Authentication accomplished via local data.  Authentication occurs locally
if a principal's account is tailored for the local machine, or if the
network authority is unavailable.  Since a login contexts authenticated
locally has no network credentials, it can not be used for network
operations. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_login_auth_src_overridden</Literal></Term>
<ListItem>
<Para>Authentication accomplished via the override facility.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
<Symbol Role="Variable">status</Symbol> is assigned <Literal>error_status_ok</Literal>. 
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_login_valid_from_keytable ()</Function> routine validates
the login context established with <Function>sec_login_setup_identity()</Function>.  
The <Function>sec_login_valid_from_keytable ()</Function> routine obtains 
the principal's password from     
the specified keytable.    
</Para>
<Para>If <Symbol Role="Variable">try_kvno</Symbol> specifies a key version number, that 
version number key is tried first, otherwise the current key version number
is tried first.  The function
trys all keys in the keytable until it finds one that  
validates the login context.  This operation must be invoked before the
network credentials can be used.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Notes</Title>
<Para RevisionFlag="Changed">A context is not secure and must not be set or exported until the
authentication service is itself authenticated with the
<Function>sec_login_certify_identity()</Function> call.
<?sml-break><?og-ChangeStart def,13420,R1.2.2,del return values">
<!-- .ne 1.5i-->
<!-- .SH "RETURN VALUES"-->
<!-- .PP-->
<!-- The routine returns TRUE if the login context has been successfully-->
<!-- validated.-->
<?og-ChangeEnd def,13420,R1.2.2,del return values"><?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/sec_login.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/sec_login.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>sec_rgy_passwd_invalid</Literal></Term>
<ListItem>
<Para>The input string does not match the account password.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_rgy_server_unavailable</Literal></Term>
<ListItem>
<Para>There is no data with which to compare the input string.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_login_s_acct_invalid</Literal></Term>
<ListItem>
<Para>The account is invalid or has expired.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_login_s_default_use</Literal></Term>
<ListItem>
<Para>The input context was the default context, which cannot be validated.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_login_s_already_valid</Literal></Term>
<ListItem>
<Para>The login context has already been validated.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_login_s_unsupp_passwd_type</Literal></Term>
<ListItem>
<Para>The password type is not supported.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_key_mgmt_e_key_unavailable</Literal></Term>
<ListItem>
<Para>The requested key is not present.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_key_mgmt_e_authn_invalid</Literal></Term>
<ListItem>
<Para>The authentication protocol is not valid.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_key_mgmt_e_unauthorized</Literal></Term>
<ListItem>
<Para>The caller is not authorized to perform the operation. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_s_no_memory</Literal>			</Term>
<ListItem>
<Para>Unable to allocate memory.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para>The call was successful.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<Para>The following example illustrates use of the
<Function>sec_login_valid_from_keytable()</Function> routine
as part of a straightforward login process:
</Para>
<Para><?sml-point-size 9>
<!--no-op:  10-->
</Para>
<InformalExample>
<Para><ProgramListing>if (sec_login_setup_identity(user_name, sec_login_no_flags, 
                          &amp;login_context, &amp;st)) {
   ... get password from local keytable...

   if (sec_login_valid_from_keytable(login_context, authn_service, 
       arg, try_kvno, &amp;used_kvno, &amp;reset_passwd, 
       &amp;auth_src, &amp;st)) {

      sec_login_set_context(login_context, &amp;st);

      if (auth_src != sec_login_auth_src_network)
         printf("no network credentials");

      }

      ... any other application specific login valid actions ...
      }

   } else {
      sec_login_purge_context(&amp;login_context, &amp;st);

      ... application specific login failure actions ...
   }
}
</ProgramListing></Para>
</InformalExample>
<?sml-point-size 12>
<!--no-op:  14-->
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_certify_identity(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_setup_identity(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_valid_and_cert_ident(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_validate_identity(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_login_valid_from_keytable.3sec,v 1.1.2.7 1996/12/14 23:06:37 carrig Exp $
    | tagMorph library:  $Id: sec_login_valid_from_keytable.3sec,v 1.1.2.7 1996/12/14 23:06:37 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
