<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: pkc_name_subord_constraint.class.3sec,v $
# Revision 1.1.2.7  1996/12/17  20:50:50  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  20:47:52  damon]
#
# Revision 1.1.2.6  1996/12/12  00:12:13  weir
# 	Editorial corrections
# 	[1996/12/12  00:10:44  weir]
# 
# Revision 1.1.2.5  1996/12/07  22:34:23  weir
# 	Set revision flag
# 	[1996/12/07  22:32:43  weir]
# 
# Revision 1.1.2.4  1996/12/07  20:28:55  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:20:41  carrig]
# 
# Revision 1.1.2.3  1996/12/06  23:46:24  weir
# 	Updates
# 	[1996/12/06  23:44:46  weir]
# 
# Revision 1.1.2.2  1996/12/01  20:20:08  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:13:47  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:56:39  weir
# 	Initial submission
# 	[1996/11/29  17:48:27  weir]
# 
# $EndLog$
# 
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry RevisionFlag="changed" Id="DCEADR.MAN535.rsml.1">
<RefMeta>
<RefEntryTitle>pkc_name_subord_constraint.class</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>pkc_name_subord_constraint.class</Function></RefName>
<RefPurpose>Constraint rules and operations class</RefPurpose>
</RefNameDiv>
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.2.3  1996/11/19  18:57:01  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:08  wardr]-->
<!---->
<!-- Revision 1.1.2.2  1996/11/18  19:57:54  weir-->
<!-- 	No change-->
<!-- 	[1996/11/18  19:55:29  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1996/10/15  21:10:56  weir-->
<!-- 	Initial submission-->
<!-- 	[1996/10/15  21:09:28  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1>
<Title>Member Data</Title>
<!-- -->
<RefSect2>
<Title>Public</Title>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_name_subord_constraint_t * next</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_name_subord_constraint_t * prev</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>unsigned long constraint</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>unsigned skipCerts</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- </RefSect2> -->
<!-- <RefSect2> -->
<!-- <Title>Private</Title> -->
<!-- <ItemizedList> -->
<!-- <ListItem> -->
<!-- <Para><Literal>pkc_name_subord_constraints_t * root</Literal> -->
<!-- </Para> -->
<!-- </ListItem> -->
<!-- </ItemizedList> -->
<!-- </RefSect2> -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Member Functions</Title>
<!-- -->
<RefSect2>
<Title>Public</Title>
<!-- -->
<ItemizedList>
<ListItem>
<Para><Literal>void unlink(void)</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Literal>~pkc_name_subord_constraint_t()</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_name_subord_constraint_t()</Literal>
</Para>
<Para>Takes the following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_name_subord_constraints_t * theRoot</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</ListItem>
<ListItem>
<Para><Literal>pkc_name_subord_constraint_t(void)</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Function>void set_constraint()</Function>
</Para>
<Para>Takes the following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>unsigned long c</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</ListItem>
<ListItem>
<Para><Function>void set_skipCerts()</Function>
</Para>
<Para>Takes the following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>unsigned c</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</ListItem>
<ListItem>
<Para><Function>void get_next_link_constraint() const</Function>
</Para>
<Para>Generates a new name subordination constraint that will be applicable to a
certificate issued by the subject of this constraint. Takes the following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_name_subord_constraint_t ** new_constraint</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</ListItem>
<ListItem>
<Para><Literal>char is_permitted() const</Literal>
</Para>
<Para>Takes the following arguments:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>const x500name &amp; issuer_name</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>const x500name &amp; subject_name</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<Para>Return values have following meanings:
<!-- -->
</Para>
<VariableList>
<VarListEntry>
<Term>1</Term>
<ListItem>
<Para>Permitted
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>0</Term>
<ListItem>
<Para>Forbidden
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>&minus;1</Term>
<ListItem>
<Para>Not relevant
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>&minus;2</Term>
<ListItem>
<Para>Relevant, but explicit permission is required from
another subordination constraint.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
</ListItem>
</ItemizedList>
<!-- -->
</RefSect2>
<!-- -->
<!-- -->
<!-- -->
<!-- <RefSect2> -->
<!-- <Title>Private</Title> -->
<!-- -->
<!-- <ItemizedList> -->
<!-- <ListItem> -->
<!-- <Para><Literal>pkc_name_subord_constraints_t * root</Literal> -->
<!-- -->
<!-- </Para> -->
<!-- </ListItem> -->
<!-- <ListItem> -->
<!-- <Para><Literal>pkc_name_subord_constraint_t &amp; operator = () {return *this;}</Literal> -->
<!-- </Para> -->
<!-- <Para>Takes the following argument: -->
<!-- </Para> -->
<!-- <ItemizedList> -->
<!-- <ListItem> -->
<!-- <Para><Literal>const pkc_name_subord_constraint_t &amp; o</Literal> -->
<!-- </Para> -->
<!-- </ListItem> -->
<!-- </ItemizedList> -->
<!-- -->
<!-- -->
<!-- </ListItem> -->
<!-- </ItemizedList> -->
<!-- -->
<!-- <?sml-break> -->
<!-- <?sml-need 1.5i> -->
<!-- -->
<!-- </RefSect2> -->
<!-- -->
<!-- -->
<!-- -->
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para><StructName Role="typedef">pkc_name_subord_constraint_t</StructName> contains name-subordinate constraint
rules and operations for a certificate.
</Para>
<Para>The certificate manipulation routines are a C++ interface. C++ must be
used to perform direct certificate manipulation.
<!-- -->
<?sml-need 1.5i>
<!-- -->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Classes:
<Filename MoreInfo="RefEntry">pkc_ca_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_generic_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_policies.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_policy.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subord_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subtree_constraint.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subtree_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_pending_revocation.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_revocation.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_revocation_list.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_trust_list.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_trust_list_element.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_trusted_key.class(3sec)</Filename>.
<!--no-op:  b-->
<!-- -->
<!-- -->
<!-- -->
<!-- class pkc_name_subord_constraint_t {-->
<!-- private:-->
<!--     pkc_name_subord_constraints_t * root;-->
<!-- private:-->
<!--     pkc_name_subord_constraint_t & operator = -->
<!--                       (const pkc_name_subord_constraint_t & o) {return *this;};-->
<!-- public:-->
<!--     pkc_name_subord_constraint_t * next;-->
<!--     pkc_name_subord_constraint_t * prev;-->
<!-- -->
<!--     unsigned long constraint;-->
<!--     unsigned skipCerts;-->
<!-- -->
<!--     void unlink(void);-->
<!-- -->
<!--     ~pkc_name_subord_constraint_t();-->
<!--     pkc_name_subord_constraint_t(pkc_name_subord_constraints_t * theRoot);-->
<!--     pkc_name_subord_constraint_t(void);-->
<!--     void set_constraint(unsigned long c);-->
<!--     void set_skipCerts(unsigned c);-->
<!--     void get_next_link_constraint(-->
<!--                   pkc_name_subord_constraint_t ** new_constraint) const;-->
<!-- // Generate a new name-subord constraint that will be applicable to a -->
<!-- // certificate issued by the subject of this constraint.-->
<!-- -->
<!--     char is_permitted(const x500name & issuer_name, -->
<!--                       const x500name & subject_name) const;-->
<!-- // Return value of 1 means permitted, 0 means forbidden, -1 means not -->
<!-- // relevant, -2 means not relevant, but explicit permission is required from-->
<!-- // another subord constraint.-->
<!-- -->
<!-- -->
<!-- };-->
<!-- -->
<!-- -->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pkc_name_subord_constraint.class.3sec,v 1.1.2.7 1996/12/17 20:50:50 damon Exp $
    | tagMorph library:  $Id: pkc_name_subord_constraint.class.3sec,v 1.1.2.7 1996/12/17 20:50:50 damon Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
