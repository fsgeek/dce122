<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_attr_trig_update.3sec,v $
# Revision 1.1.2.8  1996/12/14  23:31:44  wardr
# 	{edit,R1.2.2}
# 	Fixed coding problem
# 	[1996/12/14  23:31:31  wardr]
#
# Revision 1.1.2.7  1996/12/14  23:05:19  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  22:58:48  carrig]
# 
# Revision 1.1.2.6  1996/12/10  21:47:18  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:42:28  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:22:52  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:18:10  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:30:05  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:57  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:05:12  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:59:05  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:21:00  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:39  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:58:07  weir
# 	Initial submission
# 	[1996/11/29  17:49:15  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN589.rsml.1">
<RefMeta>
<RefEntryTitle>sec_attr_trig_update</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>sec_attr_trig_update</Literal></RefName>
<RefPurpose>For attributes coded with an attribute trigger type of update, 
passes attribute updates to an update attribute trigger server for evaluation</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.6.2  1996/11/19  18:57:55  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:51:03  wardr]-->
<!---->
<!-- Revision 1.1.6.1  1996/05/13  19:04:03  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:57:21  wardr]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/03/15  16:38:42  weir-->
<!-- 	CR 12716: unimplemented function-->
<!-- 	[1996/03/15  16:38:07  weir]-->
<!-- -->
<!-- Revision 1.1.2.5  1995/06/15  19:28:13  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  19:23:48  buckler]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/19  20:16:05  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:09:54  neilson]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/14  20:31:27  millette-->
<!-- 	(enh, 10056, R1.1)-->
<!-- 	HP edits-->
<!-- 	[1994/10/14  20:30:57  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/13  17:15:26  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:52  devobj]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/03/29  17:46:06  millette-->
<!-- 	(enh, 10056, R1.1)-->
<!-- 	Created for ERA-->
<!-- 	[1994/03/29  17:45:43  millette]-->
<!-- -->
<!-- .iX "\*Lsec_attr_trig_update(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_attr_trig_update(\|)\*O"-->

<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/sec_attr_trig.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void sec_attr_trig_update </Literal></Function></FuncDef>
<ParamDef>handle_t <Parameter>h</Parameter></ParamDef>
<ParamDef>sec_attr_component_name_t <Parameter>cell_name</Parameter></ParamDef>
<ParamDef>sec_attr_component_name_t <Parameter>component_name</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>num_to_write</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>space_avail</Parameter></ParamDef>
<ParamDef>sec_attr_t <Parameter>in_attrs[&thinsp;]</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>num_returned</Parameter></ParamDef>
<ParamDef>sec_attr_t <Parameter>out_attrs[&thinsp;]</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>num_left</Parameter></ParamDef>
<ParamDef>signed32 *<Parameter>failure_index</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">h</Symbol></Term>
<ListItem>
<Para>A handle referring to the trigger server to be accessed. 
Use
the trigger binding information specified in the attribute 
encoding to acquire a bound handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">cell_name</Symbol></Term>
<ListItem>
<Para>A value of <StructName Role="typedef">sec_attr_component_name_t</StructName> that identifies the 
cell in which the object whose attribute is to be accessed 
resides.  Supply a NULL <Symbol Role="Variable">cell_name</Symbol> 
to specify the local cell (<Filename>/.:</Filename>).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">component_name</Symbol></Term>
<ListItem>
<Para>A value of <StructName Role="typedef">sec_attr_component_name_t</StructName> that identifies the
name of the object whose attribute is to be accessed.
If <Symbol Role="Variable">cell_name</Symbol> specifies a foreign cell, <Symbol Role="Variable">component_name</Symbol> is 
interpreted as a UUID in string format since the caller of this
interface knows only the 
UUID, not the name, of the foreign principal.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">num_to_write</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer that specifies the number of elements in 
the <Symbol Role="Variable">in_attrs</Symbol> array.  This integer must be greater than 0 (zero).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">space_avail</Symbol></Term>
<ListItem>
<Para>An unsigned 32-bit integer that specifies the size of the <Symbol Role="Variable">out_attrs</Symbol> array.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">in_attrs[&thinsp;]</Symbol></Term>
<ListItem>
<Para>An array of values of type <StructName Role="typedef">sec_attr_t</StructName> that specifies the 
attribute instances to be written.  The size of <Symbol Role="Variable">in_attrs[&thinsp;]</Symbol> 
is determined by <Symbol Role="Variable">num_to_write</Symbol>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">num_returned</Symbol></Term>
<ListItem>
<Para>A pointer to an unsigned 32-bit integer that specifies the number of attribute instances 
returned in the <Symbol Role="Variable">out_attrs[&thinsp;]</Symbol> array.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">out_attrs[&thinsp;]</Symbol></Term>
<ListItem>
<Para>An array of values of type <StructName Role="typedef">sec_attr_t</StructName>.  These 
values, supplied by the update attribute trigger server, are 
in a form suitable for storage in the registry database.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">num_left</Symbol></Term>
<ListItem>
<Para>A pointer to an unsigned 32-bit integer that supplies the number of attributes that 
were found but not returned because of 
space constraints in the <Symbol Role="Variable">out_attrs[&thinsp;]</Symbol> buffer.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">failure_index</Symbol></Term>
<ListItem>
<Para>In the event of an error, <Symbol Role="Variable">failure_index</Symbol> is a pointer to 
the element in the <Symbol Role="Variable">in_attrs[&thinsp;]</Symbol> array that caused the update to 
fail.  If the failure cannot be attributed to 
a specific attribute, the value of <Symbol Role="Variable">failure_index</Symbol> is &minus;1.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
the routine returns <Literal>error_status_ok</Literal>.
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_attr_trig_update()</Function> routine 
passes attributes coded with an attribute trigger type of update 
to a user-written update attribute trigger server for evaluation 
before the updates are made to the registry. 
</Para>
<Para>Although generally this routine it is not called directly, 
this reference page is provided for users who are writing the 
attribute trigger servers that will receive <Function>sec_attr_trig_update()</Function> 
input and supply its output.
</Para>
<Para>The <Function>sec_attr_trig_update()</Function> routine is called by the DCE attribute update code 
for all schema entries that specify an update attribute trigger 
(<Literal>sec_attr_trig_type_update</Literal> 
specified with the <StructName Role="typedef">sec_attr_trig_type_flags_t</StructName> data type).  
The attribute update code passes the <Function>sec_attr_trig_update()</Function> input parameters 
to a user-written update attribute trigger server and receives the output parameters 
back from the server.  
<?sml-break><?sml-need 8>The attribute trigger server is responsible for evaluating the 
semantics of the entry in order 
to reject or accept it, and the attribute trigger server may even make 
changes in the output it sends back to the update code to ensure the entry 
adheres to the semantics.  The output received from the attribute trigger server is in 
a form to be stored in the registry.  (Note that update attribute trigger 
servers do not store attribute values.  Attribute values are stored in 
the registry database.)  
</Para>
<Para>This is an atomic operation:  if the update of any attribute in the array fails 
to pass the evaluation, all updates are aborted.  
The attribute causing the update to fail is identified in 
<Symbol Role="Variable">failure_index</Symbol>.  If the failure cannot be attributed to a given attribute, 
<Symbol Role="Variable">failure_index</Symbol> contains &minus;1.
</Para>
<Para>For objects in the local cell, set the <Symbol Role="Variable">cell_name</Symbol> parameter to 
<Literal>null</Literal>, and the <Symbol Role="Variable">component_name</Symbol> parameter to specify the object's name.
</Para>
<Para>For objects in a foreign cell, set the <Symbol Role="Variable">cell_name</Symbol> parameter the the 
name of the foreign cells, and 
the <Symbol Role="Variable">component_name</Symbol> parameter to specify the UUID in 
string format that identifies the object in the foreign cell.
<!-- .SS "Permissions Required"-->
<!-- .PP-->
<!-- The \*Lsec_attr_trig_update(\|)\*O routine requires the \*L?\*O (\*Linsert\*O)-->
<!-- permission on the ?????-->
<!-- .PP-->
<!-- .br-->
<!-- .ne 1.5i-->
<!-- .SH "NOTES"-->
<!-- .PP-->
<!-- .br-->
<!-- .ne 1.5i-->
</Para>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/sec_attr_trig.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/sec_attr_trig.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- CAN WE SUPPLY EXAMPLE?????-->
<!-- .SH "EXAMPLES"-->
<!--.PP-->
<!--CK Create an example of adding a user, PGO item, account and everything.-->
<!--?????-->
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>database read only</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>server unavailable</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>invalid/unsupported attribute type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>invalid encoding type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>value not unique</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>site read only</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>unauthorized</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">sec_attr_trig_query(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_attr_trig_update.3sec,v 1.1.2.8 1996/12/14 23:31:44 wardr Exp $
    | tagMorph library:  $Id: sec_attr_trig_update.3sec,v 1.1.2.8 1996/12/14 23:31:44 wardr Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
