<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_acl_resolve_by_name.3sec,v $
# Revision 1.1.2.6  1996/12/11  16:37:25  carrig
# 	{enh,R1.2.2}
# 	Fixed errors from log
# 	[1996/12/11  16:36:21  carrig]
#
# Revision 1.1.2.5  1996/12/10  21:56:05  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:54:49  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:27:23  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:18:58  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:03:41  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:57:39  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:19:03  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:12:32  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:54:40  weir
# 	Initial submission
# 	[1996/11/29  17:47:20  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN455.rsml.1">
<RefMeta>
<RefEntryTitle>dce_acl_resolve_by_name</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>dce_acl_resolve_by_name</Function></RefName>
<RefPurpose>Finds an ACL's UUID, given an object's name</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.3  1996/11/19  18:55:40  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:48:46  wardr]-->
<!---->
<!-- Revision 1.1.4.2  1996/07/31  18:52:32  millett-->
<!-- 	{def,13151,R1.2.2}-->
<!-- 	fix incorrect routine name-->
<!-- 	[1996/07/31  18:51:40  millett]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/05/13  19:02:20  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:56:08  wardr]-->
<!-- -->
<!-- Revision 1.1.2.5  1995/06/15  19:26:57  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  15:40:41  buckler]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/06/13  17:14:49  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:49  devobj]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/05/12  16:01:19  neilson-->
<!-- 	Engineering changes.-->
<!-- 	[1994/05/12  16:00:39  neilson]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/06  21:39:38  neilson-->
<!-- 	Incorporate changes from first draft review.-->
<!-- 	[1994/05/06  21:37:31  neilson]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/02/22  22:19:13  neilson-->
<!-- 	Initial material.-->
<!-- 	[1994/02/22  19:59:11  neilson]-->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dce.h>
#include &lt;dce/aclif.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_acl_resolve_by_name</Function></FuncDef>
<ParamDef>handle_t <Parameter>handle</Parameter></ParamDef>
<ParamDef>sec_acl_component_name_t <Parameter>component_name</Parameter></ParamDef>
<ParamDef>sec_acl_type_t <Parameter>sec_acl_type</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>mgr_type</Parameter></ParamDef>
<ParamDef>boolean32 <Parameter>writing</Parameter></ParamDef>
<ParamDef>void *<Parameter>resolver_arg</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>acl_uuid</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">handle</Symbol></Term>
<ListItem>
<Para>A client binding handle passed into the server stub.  Use
<Function>sec_acl_bind()</Function> to create this handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">component_name</Symbol></Term>
<ListItem>
<Para>A character string containing the name of the target object.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">sec_acl_type</Symbol></Term>
<ListItem>
<Para>The type of ACL to be resolved: 
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>sec_acl_type_object</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>sec_acl_type_default_object</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>sec_acl_type_default_container</Literal>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">mgr_type</Symbol></Term>
<ListItem>
<Para>A pointer to the UUID identifying the type of the ACL manager in
question.  There may be more than one type of ACL manager protecting
the object whose ACL is bound to the input handle.  Use this parameter
to distinguish them.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">writing</Symbol></Term>
<ListItem>
<Para>This parameter is ignored in OSF's implementation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">resolver_arg</Symbol></Term>
<ListItem>
<Para>This argument is passed into <Function>dce_acl_register_object_type()</Function>.
It should be a handle for a backing store indexed by name.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">acl_uuid</Symbol></Term>
<ListItem>
<Para>The ACL UUID, as resolved by <Function>dce_acl_resolve_by_name()</Function>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion, the
routine returns <Literal>error_status_ok</Literal>.  Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dce_acl_resolve_by_name()</Function> routine finds an ACL's UUID,
given an object's name, as provided in the <Symbol Role="Variable">component_name</Symbol>
parameter.  The user does not call this function directly.
It is an instance of the kind of function provided to the
<Symbol Role="Variable">resolver</Symbol> argument of <Function>dce_acl_register_object_type()</Function>.
</Para>
<Para>If <Function>dce_acl_resolve_by_name()</Function> and <Function>dce_acl_resolve_by_uuid()</Function>
are inappropriate, the user of <Function>dce_acl_register_object_type()</Function> must
provide some other <Symbol Role="Variable">resolver</Symbol> function.
<!-- .SH "NOTES"-->
<!-- .PP-->
<!-- .SH "FILES"-->
<!-- .VL-->
<!-- .LI-->
<!-- .LE-->
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para>The call was successful.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para RevisionFlag="Changed">Functions:
<Filename MoreInfo="RefEntry">dce_acl_register_object_type(3sec)</Filename>,
<Filename MoreInfo="RefEntry">dce_acl_resolve_by_uuid(3sec)</Filename>,
<Filename MoreInfo="RefEntry">dce_db_open(3dce)</Filename>,
<?og-ChangeStart def,13151,R1.2.2,correct call name"><Filename MoreInfo="RefEntry">dce_db_header_fetch(3dce)</Filename>.
<?og-ChangeEnd def,13151,R1.2.2,correct call name">
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_acl_resolve_by_name.3sec,v 1.1.2.6 1996/12/11 16:37:25 carrig Exp $
    | tagMorph library:  $Id: dce_acl_resolve_by_name.3sec,v 1.1.2.6 1996/12/11 16:37:25 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
