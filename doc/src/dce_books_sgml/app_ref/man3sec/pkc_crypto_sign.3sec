<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: pkc_crypto_sign.3sec,v $
# Revision 1.1.2.7  1996/12/17  20:50:23  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  20:47:30  damon]
#
# Revision 1.1.2.6  1996/12/12  00:11:50  weir
# 	Editorial corrections
# 	[1996/12/12  00:10:21  weir]
# 
# Revision 1.1.2.5  1996/12/07  22:33:56  weir
# 	Set revision flag
# 	[1996/12/07  22:32:21  weir]
# 
# Revision 1.1.2.4  1996/12/07  20:28:32  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:20:18  carrig]
# 
# Revision 1.1.2.3  1996/12/06  23:46:01  weir
# 	Updates
# 	[1996/12/06  23:44:29  weir]
# 
# Revision 1.1.2.2  1996/12/01  20:19:52  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:13:28  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:56:04  weir
# 	Initial submission
# 	[1996/11/29  17:48:11  weir]
# 
# $EndLog$
# 
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry RevisionFlag="changed" Id="DCEADR.MAN515.rsml.1">
<RefMeta>
<RefEntryTitle>pkc_crypto_sign</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pkc_crypto_sign</Literal></RefName>
<RefPurpose>Signs data with private key</RefPurpose>
</RefNameDiv>
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.2.3  1996/11/19  18:56:42  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:49:47  wardr]-->
<!---->
<!-- Revision 1.1.2.2  1996/11/18  19:57:22  weir-->
<!-- 	No change-->
<!-- 	[1996/11/18  19:55:12  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1996/10/15  21:10:34  weir-->
<!-- 	Initial submission-->
<!-- 	[1996/10/15  21:09:13  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- unsigned32 pkc_crypto_sign-->
<!-- -->
<!-- -->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/pkc_base.h>
#include &lt;dce/pkc_crypto_reg.h></FuncSynopsisInfo>
<FuncDef><Function>pkc_crypto_sign</Function></FuncDef>
<ParamDef>gss_OID <Parameter>algorithm</Parameter></ParamDef>
<ParamDef>sec_pk_gen_data_t <Parameter>data</Parameter></ParamDef>
<ParamDef>sec_pk_data_t <Parameter>private_key</Parameter></ParamDef>
<ParamDef>sec_pk_data_t *<Parameter>signature</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">algorithm</Symbol></Term>
<ListItem>
<Para>An OID identifying the cryptographic algorithm to be used in
signing the data.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">data</Symbol></Term>
<ListItem>
<Para>The data to be signed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">private_key</Symbol></Term>
<ListItem>
<Para>The private key (i.e., private member of a public-private key
pair) to be used to sign the data.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">signature</Symbol></Term>
<ListItem>
<Para>The signature generated by the algorithm on the data passed.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<?sml-break>
<!-- -->
<?sml-need 1.5i>
<!-- -->
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para><Filename MoreInfo="RefEntry">pkc_crypto_sign(3sec)</Filename> searches
the list of registered algorithms for an implementation of the specified algorithm.
If found, the implementation is opened, if necessary, and its <Function>(sign)()</Function>
function invoked to sign the <Symbol Role="Variable">data</Symbol>. The
<Symbol Role="Variable">signature</Symbol> is returned to the caller.
</Para>
<Para>Using this routine, an application can get data signed in one simple
call. The alternative is to lookup the desired cryptographic module
by calling <Filename MoreInfo="RefEntry">pkc_crypto_lookup_algorithm(3sec)</Filename>,
then explicitly call the module's <Function>(sign)()</Function> routine.
<!-- -->
<?sml-break>
<!-- -->
<?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<!-- -->
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>pkc_s_success</Literal></Term>
<ListItem>
<Para>Operation successfully completed.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<?sml-break>
<!-- -->
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>Refer to the <Symbol Role="Variable">OSF DCE Problem Determination Guide</Symbol> for
complete descriptions of all error messages.
<!-- -->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">pkc_crypto_generate_keypair(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_crypto_get_registered_algorithms(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_crypto_lookup_algorithm(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_crypto_register_signature_alg(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_crypto_verify_signature(3sec)</Filename>.
<!--no-op:  b-->
<!-- -->
<!-- -->
<!-- -->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pkc_crypto_sign.3sec,v 1.1.2.7 1996/12/17 20:50:23 damon Exp $
    | tagMorph library:  $Id: pkc_crypto_sign.3sec,v 1.1.2.7 1996/12/17 20:50:23 damon Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
