<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_aud_open.3sec,v $
# Revision 1.1.2.6  1996/12/11  16:37:34  carrig
# 	{enh,R1.2.2}
# 	Fixed errors from log
# 	[1996/12/11  16:36:34  carrig]
#
# Revision 1.1.2.5  1996/12/10  21:56:16  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:55:02  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:27:35  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:19:12  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:03:53  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:57:50  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:19:11  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:12:41  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:54:52  weir
# 	Initial submission
# 	[1996/11/29  17:47:29  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN466.rsml.1">
<RefMeta>
<RefEntryTitle>dce_aud_open</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dce_aud_open</Literal></RefName>
<RefPurpose> Opens a specified audit trail file for read or write.  Used by client/server applications and trail analysis and examination tools.
</RefPurpose>
<IndexTerm Id="DCEADR.MAN466.indx.1">
<Primary><Function>dce_aud_open()</Function></Primary>
</IndexTerm>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.2  1996/11/19  18:55:51  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:48:56  wardr]-->
<!---->
<!-- Revision 1.1.4.1  1996/05/13  19:02:33  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:56:17  wardr]-->
<!-- -->
<!-- Revision 1.1.2.10  1995/06/15  19:27:07  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  15:40:54  buckler]-->
<!-- -->
<!-- Revision 1.1.2.9  1994/10/20  03:23:15  cruz-->
<!-- 	final editorial changes, added status codes.-->
<!-- 	[1994/10/20  03:22:55  cruz]-->
<!-- -->
<!-- Revision 1.1.2.8  1994/10/19  15:48:01  cruz-->
<!-- 	Added complete list of status codes, per CR 12299.-->
<!-- 	[1994/10/19  15:47:05  cruz]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/10/18  20:26:41  cruz-->
<!-- 	Added new flag: aud_c_trl_ss_wrap.-->
<!-- 	[1994/10/18  20:26:17  cruz]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/18  18:50:25  cruz-->
<!-- 	Clarified description of this API.-->
<!-- 	[1994/10/18  18:49:57  cruz]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/06/13  17:14:55  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:49:28  devobj]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/05/21  16:36:11  cruz-->
<!-- 	Incorporated technical comments-->
<!-- 	[1994/05/21  16:35:50  cruz]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/05/13  14:28:03  cruz-->
<!-- 	Added index entries-->
<!-- 	[1994/05/13  14:20:20  cruz]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/11  14:19:55  cruz-->
<!-- 	Added revision bars-->
<!-- 	[1994/05/11  14:19:33  cruz]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/09  20:25:32  cruz-->
<!-- 	Renamed file to dce_aud_open.3sec-->
<!-- 	[1994/05/09  20:25:10  cruz]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/03  13:58:13  cruz-->
<!-- 	Audit app ref doc-->
<!-- 	[1994/05/03  13:57:15  cruz]-->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/audit.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_aud_open</Function></FuncDef>
<ParamDef>unsigned32 <Parameter>flags</Parameter></ParamDef>
<ParamDef>char *<Parameter>description</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>first_evt_number</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>num_of_evts</Parameter></ParamDef>
<ParamDef>dce_aud_trail_t *<Parameter>at</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">flags</Symbol></Term>
<ListItem>
<Para>Specifies the mode of opening.  The flags
parameter is set to the bitwise OR of the following values:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>aud_c_trl_open_read</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>aud_c_trl_open_write</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>aud_c_trl_ss_wrap</Literal>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">description</Symbol></Term>
<ListItem>
<Para>A character string specifying an audit trail file to be
opened.  If <Literal>description</Literal> is NULL, the default audit trail file
is opened.  When the audit trail file is opened for write, the
default audit trail is an RPC interface to a local audit daemon.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">first_evt_num</Symbol></Term>
<ListItem>
<Para>The lowest assigned audit event number used by the calling server.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">num_of_evts</Symbol></Term>
<ListItem>
<Para>The number of audit events defined for the calling server.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">at</Symbol></Term>
<ListItem>
<Para>A pointer to an audit trail descriptor.
When the audit trail descriptor is no longer needed, it
must be released by calling the <Function>dce_aud_close()</Function> function.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine was completed successfully or not.
If the routine was not completed successfully, the reason for the failure is
given.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dce_aud_open()</Function> function opens the audit trail file specified
by the <Literal>description</Literal> parameter.  
If <Literal>description</Literal> is NULL, the function
uses the default audit trail which is an RPC interface to the
local audit daemon. 
</Para>
<Para>This function must be invoked after the server has finished registering
with RPC and before calling <Function>rpc_server_listen()</Function>.
</Para>
<Para>If the <Literal>flags</Literal> parameter is set to 
<Literal>aud_c_trl_open_read</Literal>, the
specified file (<Literal>description</Literal> cannot be null in this case) is opened
for reading audit records, using the 
<Function>dce_aud_next()</Function> function.  If <Literal>flags</Literal> is set to
<Literal>aud_c_trl_open_write</Literal>, the specified file or the default
audit trail device is opened
and initialized for appending
audit records using the <Function>dce_aud_commit()</Function> function.  
Only one of the 
<Literal>aud_c_trl_open_read</Literal> and <Literal>aud_c_trl_open_write</Literal>
flags may be specified in any call to <Function>dce_aud_open()</Function>.
If the <Literal>flags</Literal> parameter is set to <Literal>aud_c_trl_ss_wrap</Literal>,
the audit trail operation is set to <Literal>wrap</Literal> mode.
The <Literal>aud_c_trl_ss_wrap</Literal> flag has meaning only if you specify
the <Literal>aud_c_trl_open_write</Literal> flag.
</Para>
<Para>If the audit trail specified is a file and the calling server does
not have the read and write permissions to the file, 
a NULL pointer
is returned in <Literal>at</Literal>, and <Literal>status</Literal> is set
to <Literal>aud_s_cannot_open_trail_file_rc</Literal>.  The same values will be returned if
the default audit trail file is used 
(that is, through an audit daemon) and if the
calling server is not authorized to use the audit daemon to log records.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>aud_s_ok</Literal></Term>
<ListItem>
<Para>The call was successful.                                             
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>aud_s_trl_invalid_open_flags</Literal></Term>
<ListItem>
<Para>The flags argument must include either           
<Literal>aud_c_trl_open_read</Literal> or <Literal>aud_c_trl_open_write</Literal> flag, but not both.              
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>aud_s_cannot_open_dmn_binding_file</Literal></Term>
<ListItem>
<Para>The local audit daemon trail file          
is designated, but the daemon's binding file cannot be opened.               
<?sml-break><?sml-need 7></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term>Status codes passed from <Function>sec_login_get_current_context()</Function></Term>
<ListItem>
<Para>When the local audit daemon trail file is designated, a login context        
is needed for making secure audit logging RPC to the audit daemon.           
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>aud_s_cannot_open_dmn_identity_file</Literal></Term>
<ListItem>
<Para>The local audit daemon trail file         
is designated, but the daemon's identity file cannot be opened.              
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term>Status codes passed from <Function>rpc_binding_set_auth_info()</Function></Term>
<ListItem>
<Para>When the local audit daemon trail file is designated, <Function>dce_aud_open()</Function>
sets authentication information in the RPC binding handle for making         
secure audit logging RPC to the audit daemon.  This is done by calling       
<Function>rpc_binding_set_auth_info()</Function>.                                                 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>aud_s_cannot_open_trail_file_rc</Literal></Term>
<ListItem>
<Para>Cannot open a local trail file.               
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>aud_s_cannot_allocate_memory</Literal> </Term>
<ListItem>
<Para>Memory allocation failed.                        
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>aud_s_cannot_init_trail_mutex</Literal></Term>
<ListItem>
<Para>Audit trail mutex initialization failed.        
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term>Status codes passed from <Function>rpc_server_inq_bindings()</Function></Term>
<ListItem>
<Para>When filtering is turned on, <Function>dce_aud_open()</Function> gets the caller's RPC bindings   
to be used for registering an RPC interface in receiving filter update      
notification from the local audit daemon.  This is done by calling           
<Function>rpc_server_inq_bindings()</Function>.                                                   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term>Status codes passed from <Function>rpc_binding_to_string_binding()</Function></Term>
<ListItem>
<Para>When filtering is turned on, the caller's RPC bindings are converted to      
string bindings before they are stored in a file.  This is done by calling   
<Function>rpc_binding_to_string_binding()</Function>.                                             
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>aud_s_cannot_mkdir</Literal></Term>
<ListItem>
<Para>Cannot create a directory for storing the bindings file   
for the filter update notification interface.                                
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">dce_aud_commit(3sec)</Filename>,
<Filename MoreInfo="RefEntry">dce_aud_next(3sec)</Filename>,
<Filename MoreInfo="RefEntry">dce_aud_start(3sec)</Filename>,
<Filename MoreInfo="RefEntry">dce_aud_start_with_name(3sec)</Filename>,
<Filename MoreInfo="RefEntry">dce_aud_start_with_pac(3sec)</Filename>,
<Filename MoreInfo="RefEntry">dce_aud_start_with_server_binding(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_aud_open.3sec,v 1.1.2.6 1996/12/11 16:37:34 carrig Exp $
    | tagMorph library:  $Id: dce_aud_open.3sec,v 1.1.2.6 1996/12/11 16:37:34 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
