<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: sec_acl_lookup.3sec,v $
# Revision 1.1.2.7  1996/12/14  23:05:10  carrig
# 	{enh,R1.2.2}
# 	Arrays, Variable Lists
# 	[1996/12/14  22:58:38  carrig]
#
# Revision 1.1.2.6  1996/12/10  21:47:09  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/10  21:42:18  carrig]
# 
# Revision 1.1.2.5  1996/12/08  18:22:43  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/08  18:18:00  carrig]
# 
# Revision 1.1.2.4  1996/12/07  20:29:53  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:47  carrig]
# 
# Revision 1.1.2.3  1996/12/05  22:05:04  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  21:58:56  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:20:53  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:33  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:57:54  weir
# 	Initial submission
# 	[1996/11/29  17:49:09  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN582.rsml.1">
<RefMeta>
<RefEntryTitle>sec_acl_lookup</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>sec_acl_lookup</Literal></RefName>
<RefPurpose>Returns the ACL for an object</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY -->
<!-- Revision 1.1.9.2  1996/11/19  18:57:48  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:55  wardr]-->
<!---->
<!-- Revision 1.1.9.1  1996/05/13  19:03:53  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:57:14  wardr]-->
<!-- -->
<!-- Revision 1.1.7.6  1995/06/15  19:28:06  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/15  19:23:39  buckler]-->
<!-- -->
<!-- Revision 1.1.7.5  1994/10/19  20:15:59  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:09:46  neilson]-->
<!-- -->
<!-- Revision 1.1.7.4  1993/01/27  17:01:20  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:40:08  cjd]-->
<!-- -->
<!-- Revision 1.1.7.3  1993/01/26  19:08:54  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:40:08  cjd]-->
<!-- -->
<!-- Revision 1.1.7.2  1992/10/02  15:46:57  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/02  15:09:02  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  15:00:32  oaf]-->
<!-- -->
<!-- Revision 1.1.5.5  1992/09/16  18:34:39  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.5.4  1992/09/03  19:20:27  lmk-->
<!-- 	Prentice-Hall edits only-->
<!-- 	[1992/09/03  18:46:27  lmk]-->
<!-- -->
<!-- Revision 1.1.5.3  1992/08/31  19:23:19  oaf-->
<!-- 	hand back to lmk-->
<!-- 	[1992/08/31  18:41:02  oaf]-->
<!-- -->
<!-- Revision 1.1.5.2  1992/08/14  14:18:19  lmk-->
<!-- 	Made Prentice-Hall edits only-->
<!-- 	[1992/08/14  14:12:25  lmk]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/07/01  20:58:31  millette-->
<!-- 	Bug 4354: Clarify memory release under NOTES-->
<!-- 	Bug 4357: change usr/lib to usr/include in files section-->
<!-- 	[1992/06/30  21:57:02  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/06/02  17:07:02  millette-->
<!-- 	3808 Delete "Library" section to be consistent with other component's calls.-->
<!-- 	No change bars used.-->
<!-- 	[1992/06/02  14:39:23  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/21  21:34:06  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/21  21:29:35  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:24:56  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--Copyright Hewlett-Packard Company 1991-->
<!---->
<!--All Rights Reserved.  Reproduction, adaptation,-->
<!--or translation without prior written permission-->
<!--is prohibited, except as allowed under the-->
<!--copyright laws.-->
<!---->
<!-- .iX "\*Lsec_acl_lookup(\|)\*O"-->
<!-- .iX "calls" "\*Lsec_acl_lookup(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/daclif.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>sec_acl_lookup</Function></FuncDef>
<ParamDef>sec_acl_handle_t <Parameter>h</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>manager_type</Parameter></ParamDef>
<ParamDef>sec_acl_type_t <Parameter>sec_acl_type</Parameter></ParamDef>
<ParamDef>sec_acl_list_t *<Parameter>sec_acl_list</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">h</Symbol></Term>
<ListItem>
<Para>A handle referring to the target object.
Use <Function>sec_acl_bind()</Function> to create this handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">manager_type</Symbol></Term>
<ListItem>
<Para>A pointer to the UUID identifying the type of the ACL manager in
question.  There may be more than one type of ACL manager
protecting the object whose ACL is bound to the input handle.  Use
this parameter to distinguish them.  Use
<Function>sec_acl_get_manager_types()</Function> to acquire a list of the
manager types protecting a given object.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">sec_acl_type</Symbol></Term>
<ListItem>
<Para>The ACL type.  The <StructName Role="typedef">sec_acl_type_t</StructName> data type distinguishes
the various types of ACLs an object can possess for a given
manager type.  The possible values are as follows:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>sec_acl_type_object</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>sec_acl_type_default_object</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>sec_acl_type_default_container</Literal>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 10>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">sec_acl_list</Symbol></Term>
<ListItem>
<Para>A pointer to the <StructName Role="typedef">sec_acl_list_t</StructName> structure to receive the complete
access control list.  An ACL contains a list of ACL entries, the UUID of
the default cell where authentication takes place (foreign entries
in the ACL contain the name of their home cell), and the UUID of the
ACL manager to interpret the list.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion,
the routine returns <Literal>error_status_ok</Literal>.
Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>sec_acl_lookup()</Function> routine loads into memory a copy of an object's
ACL corresponding to the specified manager type.  The routine returns a
pointer to the ACL. This routine is only used by ACL editors and browsers;
an application would use <Function>sec_acl_test_access()</Function> or
<Function>sec_acl_test_access_on_behalf()</Function> to process the contents of an
ACL.
</Para>
<RefSect2>
<Title>Permissions Required</Title>
<Para>The <Function>sec_acl_lookup()</Function> routine requires at least one
permission of any kind on the object for which the ACL is
to be returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Notes</Title>
<Para>The memory containing the <StructName Role="typedef">sec_acl_t</StructName> structure for each ACL is dynamically
allocated.  Use the <Function>sec_acl_release()</Function> routine to return each ACL's memory
block to the pool when an application is finished with the ACLs.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Filename>/usr/include/dce/daclif.idl</Filename></Term>
<ListItem>
<Para>The <Literal>idl</Literal> file from which <Filename>dce/daclif.h</Filename> was derived.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>sec_acl_unknown_manager_type</Literal></Term>
<ListItem>
<Para>The manager type selected is not an available option.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>sec_acl_cant_allocate_memory</Literal></Term>
<ListItem>
<Para>The requested operation requires more memory than is available.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!--.SH "EXAMPLES"-->
<!--.PP-->
<!--?????-->
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">sec_acl_bind(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_acl_test_access(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_acl_test_access_on_behalf(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_intro(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: sec_acl_lookup.3sec,v 1.1.2.7 1996/12/14 23:05:10 carrig Exp $
    | tagMorph library:  $Id: sec_acl_lookup.3sec,v 1.1.2.7 1996/12/14 23:05:10 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
