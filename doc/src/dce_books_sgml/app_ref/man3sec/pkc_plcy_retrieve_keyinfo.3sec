<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: pkc_plcy_retrieve_keyinfo.3sec,v $
# Revision 1.1.2.7  1996/12/17  21:06:43  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  21:04:14  damon]
#
# Revision 1.1.2.6  1996/12/12  00:12:29  weir
# 	Editorial corrections
# 	[1996/12/12  00:11:02  weir]
# 
# Revision 1.1.2.5  1996/12/07  22:34:42  weir
# 	Set revision flag
# 	[1996/12/07  22:32:59  weir]
# 
# Revision 1.1.2.4  1996/12/07  20:29:14  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:03  carrig]
# 
# Revision 1.1.2.3  1996/12/06  23:46:42  weir
# 	Updates
# 	[1996/12/06  23:45:00  weir]
# 
# Revision 1.1.2.2  1996/12/01  20:20:22  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:02  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:56:57  weir
# 	Initial submission
# 	[1996/11/29  17:48:40  weir]
# 
# $EndLog$
# 
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry RevisionFlag="changed" Id="DCEADR.MAN551.rsml.1">
<RefMeta>
<RefEntryTitle>pkc_plcy_retrieve_keyinfo</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pkc_plcy_retrieve_keyinfo</Literal></RefName>
<RefPurpose>Retrieves keys for specified principal
</RefPurpose>
</RefNameDiv>
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.2.3  1996/11/19  18:57:16  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:23  wardr]-->
<!---->
<!-- Revision 1.1.2.2  1996/11/18  19:58:20  weir-->
<!-- 	No change-->
<!-- 	[1996/11/18  19:55:46  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1996/10/15  21:11:18  weir-->
<!-- 	Initial submission-->
<!-- 	[1996/10/15  21:09:41  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;pkc_plcy.h></FuncSynopsisInfo>
<FuncDef><Function>unsigned32 pkc_plcy_retrieve_keyinfo</Function></FuncDef>
<ParamDef>gss_OID <Parameter>policy</Parameter></ParamDef>
<ParamDef>const void * <Parameter>trust_base_handle</Parameter></ParamDef>
<ParamDef>const x500name &amp; <Parameter>subjectName</Parameter></ParamDef>
<ParamDef>const utc_t * <Parameter>date</Parameter></ParamDef>
<ParamDef>const uuid_t &amp; <Parameter>desired_domain</Parameter></ParamDef>
<ParamDef>pkc_key_usage_t &amp; <Parameter>desired_usage</Parameter></ParamDef>
<ParamDef>char <Parameter>initial_explicit_policy_required</Parameter></ParamDef>
<ParamDef>void ** <Parameter>keys_handle</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<!-- -->
<!-- -->
<!-- -->
<!-- ==================================================================== -->
<!-- ==================================================================== -->
<RefSect2>
<Title>Input</Title>
<!-- -->
<VariableList>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry>
<Term><Emphasis>policy</Emphasis></Term>
<ListItem>
<Para>Specifies the policy being interrogated.
</Para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry role="linebreak">
<Term><Emphasis>trust_base_handle</Emphasis></Term>
<ListItem>
<Para>Expresses the caller's initial trust.
</Para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry>
<Term><Emphasis>subjectName</Emphasis></Term>
<ListItem>
<Para>Specifies the desired subject name (principal name).
</Para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry>
<Term><Emphasis>date</Emphasis></Term>
<ListItem>
<Para>
Specifies time for which information is to be returned.
</Para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry role="linebreak">
<Term><Emphasis>desired_domain</Emphasis></Term>
<ListItem>
<Para>Specifies particular domain to which the key-search operation
should be restricted. Specify <Literal>sec_pk_domain_unspecified</Literal>
or <Literal>NULL</Literal> to indicate that keys for any domain should
be retrieved.
</Para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry role="linebreak">
<Term><Emphasis>desired_usage</Emphasis></Term>
<ListItem>
<Para>
Allows the user to restrict the key-search operation to keys intended for
one or more specific usages.
</Para>
</ListItem>
</VarListEntry>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry role="linebreak">
<Term><Emphasis>initial_explicit_policy_required</Emphasis></Term>
<ListItem>
<Para>
Specifies whether the initial certificate must explicitly contain the
active policy in its policies field.
</Para>
</ListItem>
</VarListEntry>
<!-- -->
</VariableList>
<!-- -->
</RefSect2>
<!-- -->
<!-- -->
<!-- -->
<!-- ==================================================================== -->
<!-- ==================================================================== -->
<RefSect2>
<Title>Output</Title>
<!-- -->
<VariableList>
<!-- -->
<!-- ==================================================================== -->
<VarListEntry>
<Term><Emphasis>keys_handle</Emphasis></Term>
<ListItem>
<Para>
The returned key information.
</Para>
</ListItem>
</VarListEntry>
<!-- -->
</VariableList>
<!-- -->
<!-- -->
</RefSect2>
<!-- -->
</RefSect1>
<!-- -->
<!-- -->
<!-- -->
<!-- ==================================================================== -->
<!-- ==================================================================== -->
<RefSect1>
<Title>Description</Title>
<Para><Filename MoreInfo="RefEntry">pkc_plcy_retrieve_keyinfo(3sec)</Filename>
searches the list of registered policies for implementations of the specified
policy. If found, the implementation is opened, if necessary, and its
<Function>(retrieve_key_info)()</Function> function is invoked. Necessary mutex
protection around non-thread safe policy implementations is provided.</para>
<!-- -->
<!-- ==================================================================== -->
<!-- -->
<para>
The <Literal>desired_usage</Literal> parameter consists of a bit mask, formed
by AND-ing together one or more of the constants:</para>
<!-- -->
<!-- -->
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_AUTHENTICATION</Literal></Term>
<ListItem><para>
Specifies keys that can be used to authenticate a user</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_INTEGRITY</Literal></Term>
<ListItem><para>
Specifies keys that can be used to provide integrity protection</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_KEY_ENCIPHERMENT</Literal></Term>
<ListItem><para>
Specifies keys that can be used to encrypt user keys</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_DATA_ENCIPHERMENT</Literal></Term>
<ListItem><para>
Specifies keys that can be used to encrypt user data</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_KEY_AGREEMENT</Literal></Term>
<ListItem><para>
Specifies keys that can be used for key-exchange</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_KEY_USAGE_NONREPUDIATION</Literal></Term>
<ListItem><para>
Specifies keys that can be used for non-repudiation</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_CAKEY_USAGE_KEY_CERT_SIGN</Literal></Term>
<ListItem><para>
Specifies keys that can be used to sign key certificates</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_CAKEY_USAGE_OFFLINE_CRL_SIGN</Literal></Term>
<ListItem><para>
Specifies keys that can be used to sign CRLs</para>
</ListItem>
</VarListEntry>
<!-- -->
<VarListEntry role="linebreak">
<Term><Literal>PKC_CAKEY_USAGE_TRANSACTION_SIGN</Literal></Term>
<ListItem><para>
Specifies keys that can be used to sign transactions</para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
<para>
A <Literal>NULL</Literal> can be specified for <Literal>desired_usage</Literal>
to indicate that keys for any usage should be retrieved.
</para>
<!-- -->
<!-- -->
<!-- ==================================================================== -->
<!-- -->
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>pkc_s_success</Literal></Term>
<ListItem>
<Para>Operation successfully completed.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>Refer to the &DCETg; for
complete descriptions of all error messages.
<!-- -->
<!-- -->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">pkc_plcy_intro(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_delete_keyinfo(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_delete_trustbase(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_establish_trustbase(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_certifier_count(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_certifier_info(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_count(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_data(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_trust(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_registered_policies(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_lookup_policy(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_retrieve_key(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_register_policy(3sec)</Filename>.
<!--no-op:  b-->
<!-- -->
<!-- -->
<!-- -->
<!-- extern "C" unsigned32 pkc_plcy_retrieve_keyinfo(-->
<!--                             gss_OID policy,-->
<!--                             const void *trust_base_handle,  -->
<!--                             const x500name & subjectName,-->
<!--                             const utc_t * date,-->
<!--                             pkc_key_usage_t desired_usage,-->
<!--                             char initial_explicit_policy_required,-->
<!--                             void ** keys_handle);-->
<!-- -->
<!-- -->
<!--     /* The above functions search the list of registered policies   */-->
<!--     /* for implementations of the specified policy. If found, the   */-->
<!--     /* implementation will be opened if necessary and its           */-->
<!--     /* corresponding member function will be invoked.  These        */-->
<!--     /* routines provide the necessary mutex protection around       */-->
<!--     /* non-threadsafe policy implementations.                       */-->
<!-- -->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pkc_plcy_retrieve_keyinfo.3sec,v 1.1.2.7 1996/12/17 21:06:43 damon Exp $
    | tagMorph library:  $Id: pkc_plcy_retrieve_keyinfo.3sec,v 1.1.2.7 1996/12/17 21:06:43 damon Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
