<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: pkc_trust_list.class.3sec,v $
# Revision 1.1.2.8  1996/12/17  21:06:52  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  21:04:22  damon]
#
# Revision 1.1.2.7  1996/12/15  17:14:48  weir
# 	Various updates etc.
# 	[1996/12/15  17:12:45  weir]
# 
# Revision 1.1.2.6  1996/12/12  00:12:36  weir
# 	Editorial corrections
# 	[1996/12/12  00:11:10  weir]
# 
# Revision 1.1.2.5  1996/12/07  22:34:52  weir
# 	Set revision flag
# 	[1996/12/07  22:33:07  weir]
# 
# Revision 1.1.2.4  1996/12/07  20:29:24  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:21:15  carrig]
# 
# Revision 1.1.2.3  1996/12/06  23:46:52  weir
# 	Updates
# 	[1996/12/06  23:45:08  weir]
# 
# Revision 1.1.2.2  1996/12/01  20:20:28  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:14:10  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:57:07  weir
# 	Initial submission
# 	[1996/11/29  17:48:46  weir]
# 
# $EndLog$
# 
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry RevisionFlag="changed" Id="DCEADR.MAN559.rsml.1">
<RefMeta>
<RefEntryTitle>pkc_trust_list.class</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>pkc_trust_list.class</Function></RefName>
<RefPurpose>A class that expresses certificate trust list operations</RefPurpose>
</RefNameDiv>
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.2.3  1996/11/19  18:57:24  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:30  wardr]-->
<!---->
<!-- Revision 1.1.2.2  1996/11/18  19:58:33  weir-->
<!-- 	No change-->
<!-- 	[1996/11/18  19:55:54  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1996/10/15  21:11:27  weir-->
<!-- 	Initial submission-->
<!-- 	[1996/10/15  21:09:48  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1>
<Title>Member Data</Title>
<!-- -->
<RefSect2>
<Title>Public</Title>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_trust_list_element_t * first</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_trust_list_element_t * last</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_revocation_list_t revocation_list</Literal>
</Para>
<Para>List of revocations
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<!-- .SS "Private"-->
<!-- .ML-->
<!-- .LI-->
<!-- \*L\*O-->
<!-- .PP-->
<!-- -->
<!-- .LE-->
<!-- -->
<!-- -->
<!-- -->
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Member Functions</Title>
<!-- -->
<RefSect2>
<Title>Public</Title>
<!-- -->
<ItemizedList>
<ListItem>
<Para><Literal>pkc_trust_list_t(void)</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Literal>void empty(void)</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Literal>virtual ~pkc_trust_list_t()</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_trust_list_t &amp; operator = (const pkc_trust_list_t &amp; o)</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Literal>unsigned32 fixup_links(void)</Literal>
<!-- -->
</Para>
</ListItem>
<ListItem>
<Para><Function>unsigned32 find_certified_key()</Function>
</Para>
<Para>Returns the first key entry that was created from the specified certificate.
Call <Function>find_next_certified_key()</Function> to return the next such key. Takes
the following arguments:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>const x500name &amp;</Literal> <Replaceable>certifier</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>const asn_integer &amp;</Literal> <Replaceable>certifying_serial_no</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_trust_list_element_t **</Literal> <Replaceable>key</Replaceable>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<!-- -->
</ListItem>
<ListItem>
<Para><Function>unsigned32 find_next_certified_key()</Function>
</Para>
<Para>Returns the next key entry that was created from the same certificate as
the current entry. <Symbol Role="Variable">key</Symbol> is both an input and an output. Takes the
following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_trust_list_element_t **</Literal> <Replaceable>key</Replaceable>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</ListItem>
<ListItem>
<Para><Function>unsigned32 find_certified_key_by_id()</Function>
</Para>
<Para>Returns the first key entry that was certified by the specified key id.
Call <Function>find_next_certified_key_by_id()</Function> to return the next such key.
Takes the following arguments:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>unsigned long</Literal> <Replaceable>ca_key_id</Replaceable>
</Para>
</ListItem>
<ListItem>
<Para><Literal>pkc_trust_list_element_t **</Literal> <Replaceable>key</Replaceable>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
<!-- -->
</ListItem>
<ListItem>
<Para><Function>unsigned32 find_next_certified_key_by_id()</Function>
</Para>
<Para>Returns the next key entry that was certified by the same key as
the current entry. <Symbol Role="Variable">key</Symbol> is both an input and an output.
Takes the following argument:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>pkc_trust_list_element_t **</Literal> <Replaceable>key</Replaceable>
</Para>
</ListItem>
</ItemizedList>
<!-- -->
</ListItem>
</ItemizedList>
<!-- -->
<!-- -->
<?sml-break>
<?sml-need 1.5i>
<!-- -->
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para><StructName Role="typedef">pkc_trust_list_t</StructName> embodies rules and
operations for a certificate trust list. This class has the <Literal>friend</Literal>
class <StructName Role="typedef">pkc_trust_list_element_t</StructName>.
</Para>
<Para>The certificate manipulation routines are a C++ interface. C++ must be
used to perform direct certificate manipulation.
<!-- -->
<?sml-need 1.5i>
<!-- -->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Classes:
<Filename MoreInfo="RefEntry">pkc_ca_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_generic_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_policies.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_policy.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_key_usage.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subord_constraint.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subord_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subtree_constraint.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_name_subtree_constraints.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_pending_revocation.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_revocation.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_revocation_list.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_trust_list_element.class(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_trusted_key.class(3sec)</Filename>.
<!--no-op:  b-->
<!-- -->
<!-- -->
<!-- -->
<!-- class pkc_trust_list_t {-->
<!-- friend class pkc_trust_list_element_t;-->
<!-- public:-->
<!-- -->
<!--     pkc_revocation_list_t revocation_list;  // List of revocations-->
<!-- -->
<!--     pkc_trust_list_element_t * first;-->
<!--     pkc_trust_list_element_t * last;-->
<!--     pkc_trust_list_t(void);-->
<!--     void empty(void);-->
<!--     virtual ~pkc_trust_list_t();-->
<!--     pkc_trust_list_t & operator = (const pkc_trust_list_t & o);-->
<!--     unsigned32 fixup_links(void);-->
<!--     unsigned32 find_certified_key(const x500name & certifier,-->
<!--                                   const asn_integer & certifying_serial_no,-->
<!--                                   pkc_trust_list_element_t ** key);-->
<!-- // Returns the first key entry that was created from the specified certificate.-->
<!-- // Call find_next_certified_key() to return the next such key.-->
<!-- -->
<!--     unsigned32 find_next_certified_key(pkc_trust_list_element_t ** key);-->
<!-- // Returns the next key entry that was created from the same certificate as-->
<!-- // the current entry.  "key" is both an input and an output.-->
<!-- -->
<!--     unsigned32 find_certified_key_by_id(unsigned long ca_key_id,-->
<!--                                         pkc_trust_list_element_t ** key);-->
<!-- // Returns the first key entry that was certified by the specified key-id-->
<!-- // Call find_next_certified_key_by_id() to return the next such key.-->
<!-- -->
<!--     unsigned32 find_next_certified_key_by_id(pkc_trust_list_element_t ** key);-->
<!-- // Returns the next key entry that was certified by the same key as-->
<!-- // the current entry.  "key" is both an input and an output.-->
<!-- };-->
<!-- -->
<!-- -->
<!-- -->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pkc_trust_list.class.3sec,v 1.1.2.8 1996/12/17 21:06:52 damon Exp $
    | tagMorph library:  $Id: pkc_trust_list.class.3sec,v 1.1.2.8 1996/12/17 21:06:52 damon Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
