<!--
# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: pkc_plcy_delete_keyinfo.3sec,v $
# Revision 1.1.2.7  1996/12/17  20:50:56  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  20:47:57  damon]
#
# Revision 1.1.2.6  1996/12/12  00:12:17  weir
# 	Editorial corrections
# 	[1996/12/12  00:10:49  weir]
# 
# Revision 1.1.2.5  1996/12/07  22:34:29  weir
# 	Set revision flag
# 	[1996/12/07  22:32:48  weir]
# 
# Revision 1.1.2.4  1996/12/07  20:29:01  carrig
# 	{enh,R1.2.2}
# 	VarLists, Tables
# 	[1996/12/07  20:20:48  carrig]
# 
# Revision 1.1.2.3  1996/12/06  23:46:30  weir
# 	Updates
# 	[1996/12/06  23:44:51  weir]
# 
# Revision 1.1.2.2  1996/12/01  20:20:13  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:13:52  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:56:46  weir
# 	Initial submission
# 	[1996/11/29  17:48:31  weir]
# 
# $EndLog$
# 
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry RevisionFlag="changed" Id="DCEADR.MAN540.rsml.1">
<RefMeta>
<RefEntryTitle>pkc_plcy_delete_keyinfo</RefEntryTitle>
<ManVolNum>3sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pkc_plcy_delete_keyinfo</Literal></RefName>
<RefPurpose>Frees public key storage</RefPurpose>
</RefNameDiv>
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.2.3  1996/11/19  18:57:06  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/19  18:50:13  wardr]-->
<!---->
<!-- Revision 1.1.2.2  1996/11/18  19:58:02  weir-->
<!-- 	No change-->
<!-- 	[1996/11/18  19:55:35  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1996/10/15  21:11:06  weir-->
<!-- 	Initial submission-->
<!-- 	[1996/10/15  21:09:32  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;pkc_plcy.h></FuncSynopsisInfo>
<FuncDef><Function>unsigned32 pkc_plcy_delete_keyinfo</Function></FuncDef>
<ParamDef>gss_OID <Parameter>policy</Parameter></ParamDef>
<ParamDef>void ** <Parameter>keys_handle</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<!-- -->
<RefSect2>
<Title>Input</Title>
<!-- -->
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">policy</Symbol></Term>
<ListItem>
<Para>Specifies policy module.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">keys_handle</Symbol></Term>
<ListItem>
<Para>A policy specific structure, obtained from a call to
<Filename MoreInfo="RefEntry">pkc_plcy_retrieve_keyinfo(3sec)</Filename>.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
<?sml-break>
<?sml-need 1.5i>
<!-- -->
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para><Filename MoreInfo="RefEntry">pkc_plcy_delete_keyinfo(3sec)</Filename> searches the list of registered
policies for implementations of the specified policy. If found, the
implementation is opened, if necessary, and its <Function>(*delete_keyinfo)()</Function>
function is invoked. Necessary mutex protection around non-thread
safe policy implementations is provided.
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>pkc_s_success</Literal></Term>
<ListItem>
<Para>Operation successfully completed.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<?sml-break>
<!-- -->
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>Refer to the &DCETg; for
complete descriptions of all error messages.
<!-- -->
<!-- -->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">pkc_plcy_intro(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_delete_trustbase(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_establish_trustbase(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_certifier_count(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_certifier_info(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_count(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_data(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_key_trust(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_get_registered_policies(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_lookup_policy(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_retrieve_key(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_plcy_retrieve_keyinfo(3sec)</Filename>,
<Filename MoreInfo="RefEntry">pkc_register_policy(3sec)</Filename>.
<!--no-op:  b-->
<!-- -->
<!-- -->
<!-- -->
<!-- extern "C" unsigned32 pkc_plcy_delete_keyinfo(-->
<!--                             gss_OID policy,-->
<!--                             void **keys_handle);-->
<!-- -->
<!-- -->
<!--     /* The above functions search the list of registered policies   */-->
<!--     /* for implementations of the specified policy. If found, the   */-->
<!--     /* implementation will be opened if necessary and its           */-->
<!--     /* corresponding member function will be invoked.  These        */-->
<!--     /* routines provide the necessary mutex protection around       */-->
<!--     /* non-threadsafe policy implementations.                       */-->
<!-- -->
<!-- -->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pkc_plcy_delete_keyinfo.3sec,v 1.1.2.7 1996/12/17 20:50:56 damon Exp $
    | tagMorph library:  $Id: pkc_plcy_delete_keyinfo.3sec,v 1.1.2.7 1996/12/17 20:50:56 damon Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
