<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_cf_dced_entry_from_host.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:52:41  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:15:48  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:12:29  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:08:47  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:13:39  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:58:08  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:12:47  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:09:47  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:22:14  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:19:14  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:24:17  weir
# 	Initial submission
# 	[1996/11/29  16:21:14  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN24.rsml.1">
<RefMeta>
<RefEntryTitle>dce_cf_dced_entry_from_host</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dce_cf_dced_entry_from_host</Literal></RefName>
<RefPurpose>Returns the <Literal>dced</Literal> entry name on a host</RefPurpose>
</RefNameDiv>
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.2  1996/11/18  16:59:12  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:55:59  wardr]-->
<!---->
<!-- Revision 1.1.4.1  1996/09/18  17:09:42  millett-->
<!-- 	{def,13035,R1.2.2}-->
<!-- 	Add include stdio.h statement-->
<!-- 	[1996/09/18  17:09:24  millett]-->
<!-- -->
<!-- Revision 1.1.2.5  1995/05/31  17:04:57  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:41:14  buckler]-->
<!-- -->
<!-- Revision 1.1.2.4  1995/05/18  17:25:13  rcb-->
<!-- 	no change-->
<!-- 	[1995/05/18  17:25:09  rcb]-->
<!-- -->
<!-- Revision 1.1.2.3  1995/05/18  16:24:24  rcb-->
<!-- 	PRENTICE HALL reformat: preliminary fiddling-->
<!-- 	[1995/05/18  16:21:07  rcb]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/08/23  16:27:15  zahn-->
<!-- 	{edt,9784,R1.1}-->
<!-- -->
<!-- 	Added R. Salz's technical corrections.-->
<!-- 	[1994/08/23  16:26:56  zahn]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/08/22  18:15:29  zahn-->
<!-- 	{enh,9784,R1.1}-->
<!-- -->
<!-- 	Created new reference page for new dce_cf routine.-->
<!-- 	[1994/08/22  18:15:11  zahn]-->
<!-- -->
<!---->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>
#include &lt;stdio.h>
#include &lt;dce/dce_cf.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_cf_dced_entry_from_host</Function></FuncDef>
<ParamDef>char *<Parameter>hostname</Parameter></ParamDef>
<ParamDef>char **<Parameter>entry_name</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">hostname</Symbol></Term>
<ListItem>
<Para>Specifies the name of the host.  Note that host names are case sensitive.
If this value is NULL, the value returned by <Function>dce_cf_get_host_name()</Function>
is used.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">entry_name</Symbol></Term>
<ListItem>
<Para>The <Literal>dced</Literal> entry name associated with the specified host.
Storage for this name is dynamically allocated; release it
with <Function>free()</Function> when you no longer need it.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this operation.  The status code is a
value that indicates whether the routine
completed successfully and if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dce_cf_dced_entry_from_host()</Function> routine
returns the name entered into the DCE namespace
for a DCE host daemon (<Literal>dced</Literal>)
on the host specified by the <Symbol Role="Variable">hostname</Symbol> parameter.
If the <Symbol Role="Variable">hostname</Symbol> parameter is NULL, the <Literal>dced</Literal>
name associated with the name returned by <Function>dce_cf_get_host_name()</Function>
is returned.
The string name is of the form <Filename>/.:/hosts/</Filename><Symbol Role="Variable">hostname</Symbol><Filename>/config</Filename>,
and specifies the entry point into the <Literal>dced</Literal> namespace
on the host.  This is the location in the DCE namespace
at which <Literal>dced</Literal> stores the objects associated with
the host services it provides (the <Literal>hostdata</Literal>, <Literal>srvrconf</Literal>, <Literal>srvrexec</Literal>,
<Literal>secval</Literal>, and <Literal>keytab</Literal> services, as well as ACL editing).
It is also an actual name in the DCE namespace that you can import
if you want to create your own RPC binding to <Literal>dced</Literal>.
</Para>
<Para>You can use the <Literal>dced</Literal> entry name returned
by this routine as input to the <Function>dced_binding_create()</Function> routine,
input to <Literal>sec_acl_</Literal><Symbol Role="Variable">*</Symbol> routines, or to
<Literal>rpc_ns_binding_import_</Literal><Symbol Role="Variable">*</Symbol> routines to establish a
binding to a <Literal>dced</Literal> host service.
</Para>
<Para>If using <Function>dced_binding_create()</Function>, you append a service name
to the entry returned by this routine.  If using <Literal>sec_acl_</Literal><Symbol Role="Variable">*</Symbol>
routines, you append the service and the object name.  If using
<Literal>rpc_ns_binding_import_</Literal><Symbol Role="Variable">*</Symbol>, you use only the entry returned
by the routine.
</Para>
<Para>You can also use the returned string to name objects that
<Literal>dced</Literal> maintains, for example, when editing these objects'
ACLs with <Literal>dcecp</Literal>.  For example, the string name
<Filename>/.:/hosts/vineyard/config/srvrconf/dtsd</Filename> names the server
configuration data for the DTS server on the host <Literal>vineyard</Literal>.
</Para>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">dcelocal</Symbol><Filename>/dce_cf.db</Filename></Term>
<ListItem>
<Para>The machine's local DCE configuration file (where <Symbol Role="Variable">dcelocal</Symbol> is
usually something like <Filename>/opt/dcelocal</Filename>).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>dce_cf_st_ok</Literal></Term>
<ListItem>
<Para>Operation completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>dce_cf_e_file_open</Literal></Term>
<ListItem>
<Para>File open error.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>dce_cf_e_no_mem</Literal></Term>
<ListItem>
<Para>No memory available.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>dce_cf_e_no_match</Literal></Term>
<ListItem>
<?sml-break>
<Para>No host name entry in the DCE configuration file.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: <Filename MoreInfo="RefEntry">dce_cf_binding_entry_from_host(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_cf_find_name_by_key(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_cf_get_cell_name(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_cf_get_host_name(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_cf_prin_name_from_host(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>.
<!-- .PP-->
<!-- System calls:  \*Lcall-name1(\|)\*O , \*Lcall-name2(\|)\*O-->
<!-- .PP-->
<!-- Data Types/Data Structures: \*Lname1\*O, \*Lname2\*O-->
<!-- .PP-->
<!-- Commands: \*Lcommand-name1\*O, \*Lcommand-name2\*O-->
</Para>
<Para>Books: &DCEDk;, &DCEAr;.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_cf_dced_entry_from_host.3dce,v 1.1.2.6 1996/12/10 20:52:41 carrig Exp $
    | tagMorph library:  $Id: dce_cf_dced_entry_from_host.3dce,v 1.1.2.6 1996/12/10 20:52:41 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
