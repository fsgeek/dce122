<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_cf_get_csrgy_filename.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:52:47  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:15:58  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:12:34  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:08:53  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:13:45  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:58:13  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:12:52  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:09:52  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:22:19  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:19:19  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:24:23  weir
# 	Initial submission
# 	[1996/11/29  16:21:19  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN29.rsml.1">
<RefMeta>
<RefEntryTitle>dce_cf_get_csrgy_filename</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dce_cf_get_csrgy_filename</Literal></RefName>
<RefPurpose>Returns the pathname of the code set registry
file on a host</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.3  1996/11/18  16:59:17  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:56:04  wardr]-->
<!---->
<!-- Revision 1.1.4.2  1996/10/03  20:25:16  millett-->
<!-- 	{def,13154,R1.2.2}-->
<!-- 	delete incorect references-->
<!-- 	[1996/10/03  20:24:53  millett]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/09/18  17:15:49  millett-->
<!-- 	{def,13035,R1.2.2}-->
<!-- 	Add include stdio.h statement-->
<!-- 	[1996/09/18  17:15:27  millett]-->
<!-- -->
<!-- Revision 1.1.2.5  1995/05/31  17:05:01  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:42:18  buckler]-->
<!-- -->
<!-- Revision 1.1.2.4  1995/05/18  17:26:28  rcb-->
<!-- 	no change-->
<!-- 	[1995/05/18  17:26:24  rcb]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/11/03  23:44:35  neilson-->
<!-- 	Substituted macros for book names in cross refs.-->
<!-- 	[1994/11/03  01:39:22  neilson]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/13  17:01:40  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:46:05  devobj]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/02/17  20:36:36  zahn-->
<!-- 	{enh,9767,R1.1}-->
<!-- -->
<!-- 	Add new dce_cf routine for code set registry filename.-->
<!-- 	[1994/02/17  20:35:44  zahn]-->
<!-- -->
<!-- .iX "\*Ldce_cf_get_get_csrgy_filename(\|)\*O"-->
<!-- .iX "calls " "\*Ldce_cf_get_csrgy_filename(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>
#include &lt;stdio.h>
#include &lt;dce/dce_cf.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_cf_get_csrgy_filename</Function></FuncDef>
<ParamDef>char **<Parameter>csrgy_filename</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<Para>None.
</Para>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">csrgy_filename</Symbol></Term>
<ListItem>
<Para>The address of a string pointer.  This pointer will be set by the function to
point to a buffer that contains the pathname to the code set registry file.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this operation.  The status code is a
value that indicates whether the routine
completed successfully and if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dce_cf_get_csrgy_filename()</Function> routine is a DCE function
that returns the pathname of a code set registry file that
has been created on a given host with the <Literal>csrc</Literal> utility.
DCE RPC routines for code set interoperability use this routine
when they need to locate a host's code set registry file
in order to map between unique code set identifiers and their operating 
system-specific local code set names, or to obtain supported code sets
for a client or server.  User-written code set interoperability routines
can also use the routine.
</Para>
<Para><?sml-need 7>The <Function>dce_cf_get_csrgy_filename()</Function> routine searches the DCE configuration
file for the name of the local host's code set registry file, allocates a buffer for
it (by a call to <Function>malloc()</Function>), copies the name into the buffer,
and returns its address in the <Symbol Role="Variable">csrgy_filename</Symbol> input parameter.
</Para>
</RefSect1>
<RefSect1>
<Title>Cautions</Title>
<Para>The memory for a returned name string is allocated by <Function>malloc()</Function>, and
must be freed by the caller of <Function>dce_cf_get_csrgy_filename()</Function>.
<!-- .PP-->
<!-- The DCE 1.0 verion of this routine is limited to processing lines of text-->
<!-- whose length is less than 1024 characters.-->
</Para>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">dcelocal</Symbol><Filename>/dce_cf.db</Filename></Term>
<ListItem>
<Para>The machine's local DCE configuration file (where <Symbol Role="Variable">dcelocal</Symbol> is usually
something like <Filename>/opt/dcelocal</Filename>).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>dce_cf_st_ok</Literal></Term>
<ListItem>
<Para>Operation successfully completed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>dce_cf_e_file_open</Literal></Term>
<ListItem>
<Para>File open error.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>dce_cf_e_no_mem</Literal></Term>
<ListItem>
<Para>No memory available.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para RevisionFlag="Changed">Functions: 
<Filename MoreInfo="RefEntry">dce_cf_find_name_by_key(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_cf_get_cell_name(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_cf_get_host_name(3dce)</Filename>, 
<Filename MoreInfo="RefEntry">dce_cf_prin_name_from_host(3dce)</Filename>,
<?og-ChangeStart def,13154,del incorrect references"><?og-ChangeEnd def,13154,del incorrect references" ><Filename MoreInfo="RefEntry">rpc_rgy_get_codesets(3rpc)</Filename>.
</Para>
<Para>Commands: <Filename MoreInfo="RefEntry">csrc(8dce)</Filename>.
</Para>
<Para>Books: &DCEAg;.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_cf_get_csrgy_filename.3dce,v 1.1.2.6 1996/12/10 20:52:47 carrig Exp $
    | tagMorph library:  $Id: dce_cf_get_csrgy_filename.3dce,v 1.1.2.6 1996/12/10 20:52:47 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
