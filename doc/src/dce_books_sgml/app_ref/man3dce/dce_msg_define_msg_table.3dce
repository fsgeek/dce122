<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_msg_define_msg_table.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:53:26  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:17:01  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:13:11  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:09:36  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:14:21  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:58:48  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:13:17  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:10:25  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:22:50  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:19:52  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:24:56  weir
# 	Initial submission
# 	[1996/11/29  16:21:45  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN60.rsml.1">
<RefMeta>
<RefEntryTitle>dce_msg_define_msg_table</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dce_msg_define_msg_table</Literal></RefName>
<RefPurpose>Adds a message table to in-memory table</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  16:59:55  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:56:37  wardr]-->
<!---->
<!-- Revision 1.1.2.7  1995/05/31  17:05:31  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:49:03  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/18  22:45:38  buckler-->
<!-- 	{enh, 8440, R1.1}-->
<!-- 	A few last technical comments.-->
<!-- 	[1994/10/18  22:45:21  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/17  20:30:05  buckler-->
<!-- 	{enh, 8441, R1.1}-->
<!-- 	Incorporated technical review.-->
<!-- 	[1994/10/17  20:29:35  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/09/14  14:52:26  weir-->
<!-- 	Updates-->
<!-- 	[1994/09/14  14:51:11  weir]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/09/13  21:30:35  weir-->
<!-- 	Updates-->
<!-- 	[1994/09/13  21:29:05  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/09/08  19:31:37  weir-->
<!-- 	Reorganized reference pages-->
<!-- 	[1994/09/08  19:30:22  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<!-- - -->
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dce_msg.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_msg_define_msg_table</Function></FuncDef>
<ParamDef>dce_msg_table_t *<Parameter>table</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>count</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<!-- - -->
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">table</Symbol></Term>
<ListItem>
<Para>A message table structure (defined in a header file generated by <Literal>sams</Literal>
during compilation (see the <Literal>EXAMPLES</Literal> section).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">count</Symbol></Term>
<ListItem>
<Para>The number of elements contained in the table.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this operation.  The status code is a value that
indicates whether the routine completed successfully and if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<!-- - -->
<!-- -->
<Para>All messages for a given component are stored in a single message catalog
generated by the <Literal>sams</Literal> utility when the component (application) is built.
</Para>
<Para>However, the messages may also be compiled directly into the component code,
thus rendering the successful retrieval of message text independent of whether
or not the message catalogs were correctly installed.  Generation of in-memory
message tables is specified by the <Literal>incatalog</Literal> flag in the <Literal>sams</Literal> file in
which the message text is defined (see <Filename MoreInfo="RefEntry">sams(1dce)</Filename> for more information
on <Literal>sams</Literal> files).  If the messages have been generated at compile time with this
option specified, the <Function>dce_msg_define_msg_table()</Function> routine can be
called by the application to register 
an in-memory table containing the messages.
</Para>
<Para><?sml-need 6>The <Symbol Role="Variable">table</Symbol> parameter to the call should identify a message table structure
defined in a header file generated by <Literal>sams</Literal> during compilation (see
the <Literal>EXAMPLES</Literal> section).  The <Symbol Role="Variable">count</Symbol> 
parameter specifies the number of elements
contained in the table.  If an error is detected during the call, the routine
will return an appropriate error code in the <Symbol Role="Variable">status</Symbol> parameter.
<!-- -->
<!-- -->
<!-- -->
<!-- - -->
</Para>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<!-- - -->
<!-- -->
<Para>The following code fragment shows how an application (whose serviceability
component name is <Symbol Role="Variable">app</Symbol>) would set up an in-memory message table:
<!-- -->
<!-- -->
</Para>
<InformalExample>
<Para><ProgramListing>
#include &lt;dce/dce.h>
#include &lt;dce/dce_msg.h>
#include &lt;dce/dcesvcmsg.h>
#include "dce<Replaceable>app</Replaceable>msg.h"   /* defines <Replaceable>app</Replaceable>_msg_table */

error_status_t status;
</ProgramListing></Para>
</InformalExample>
<!-- -->
<Para>The following call adds the message table to the in-memory table. 
Note that you must include <Filename>&lt;dce/dce_msg.h></Filename>.  You also have to link 
in <Literal>dce</Literal><Symbol Role="Variable">app</Symbol><Literal>msg.o</Literal> and <Literal>dce</Literal><Symbol Role="Variable">app</Symbol><Filename>svc.o</Filename> (object files produced by
compiling <Literal>sams</Literal>-generated <Literal>.c</Literal> files), 
which contain the code for the messages and the table, respectively.
<!-- -->
</Para>
<InformalExample>
<Para><ProgramListing>dce_msg_define_msg_table(<Replaceable>app</Replaceable>_msg_table,
       sizeof(<Replaceable>app</Replaceable>_msg_table) / sizeof(<Replaceable>app</Replaceable>_msg_table[0]),
       &amp;status);
</ProgramListing></Para>
</InformalExample>
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- - -->
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
<!-- - -->
<!-- -->
</Para>
<Para>See <Filename MoreInfo="RefEntry">dce_msg_get(3dce)</Filename>.
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:  <Filename MoreInfo="RefEntry">dce_msg_get(3dce)</Filename>, 
<Filename MoreInfo="RefEntry">dce_msg_get_default_msg(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_msg_get_msg(3dce)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_msg_define_msg_table.3dce,v 1.1.2.6 1996/12/10 20:53:26 carrig Exp $
    | tagMorph library:  $Id: dce_msg_define_msg_table.3dce,v 1.1.2.6 1996/12/10 20:53:26 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
