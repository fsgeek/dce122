<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_keytab_get_next_key.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:54:31  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:18:35  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:14:35  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:10:59  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:24  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:59:50  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:14:04  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:26  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:23:48  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:20:47  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:26:12  weir
# 	Initial submission
# 	[1996/11/29  16:22:33  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN111.rsml.1">
<RefMeta>
<RefEntryTitle>dced_keytab_get_next_key</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_keytab_get_next_key</Literal></RefName>
<RefPurpose>
Returns a key from a cached list and advances the cursor in the list</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:01:10  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:30  wardr]-->
<!---->
<!-- Revision 1.1.2.8  1995/05/31  17:06:19  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:59:22  buckler]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/10/20  18:15:19  hileman-->
<!-- 	Removed TBDs.-->
<!-- 	[1994/10/20  18:15:00  hileman]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:19  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:04:30  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/18  21:50:57  jshirley-->
<!-- 	Updated for final.-->
<!-- 	[1994/10/18  21:50:21  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  18:20:44  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  18:20:22  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:02:49  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:46:53  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/26  13:02:54  jshirley-->
<!-- 	{def,9830,R1.1}-->
<!-- 	Incorporated first draft reviews.-->
<!-- 	[1994/05/26  13:01:57  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  00:34:43  jshirley-->
<!-- 	Created fle.-->
<!-- 	[1994/05/04  00:33:55  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_keytab_get_next_key(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_keytab_get_next_key</Function></FuncDef>
<ParamDef>dced_keytab_cursor_t <Parameter>cursor</Parameter></ParamDef>
<ParamDef>dced_key_t **<Parameter>key</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">cursor</Symbol></Term>
<ListItem>
<Para>Specifies the cursor that points to a key, and returns the cursor
advanced to the next key in the list.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">key</Symbol></Term>
<ListItem>
<Para>Returns the current key to which the <Symbol Role="Variable">cursor</Symbol> points.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_keytab_get_next_key()</Function> routine obtains the current key to
which the key-list cursor points.  This routine is commonly used in
a loop to traverse a key table's keys. 
The keys are returned in an undetermined order.
Prior to using this routine in the loop, the application must call 
<Function>dced_keytab_initialize_cursor()</Function> to obtain the key list and 
establish the beginning of the cursor.  
When the application is finished traversing the key list, 
it should call <Function>dced_keytab_release_cursor()</Function> to release the
resources allocated.
</Para>
<Para>Management applications use <Function>dced_keytab_get_next_key()</Function>  to
remotely access a server's individual keys.
Servers use <Function>sec_key_mgmt_get_next_key()</Function> to access their own
local keys individually.
</Para>
<Para><?sml-need 5>You can also use the <Function>dced_object_read()</Function> routine to read an
entire key table.  
You might use <Function>dced_object_read()</Function> if your application needs to
bind to and read data for other host services (<Literal>srvrconf</Literal>, <Literal>srvrexec</Literal>,
or <Literal>hostdata</Literal>) in addition to data for the <Literal>keytab</Literal> service.
<!--.nL-->
<!--.ne 1.5i-->
<!--.SH "EXAMPLES"-->
<!--.PP-->
<!--<<TO be described>>-->
<!--.oS-->
<!--dced_binding_create("keytab@somehost",...); /* or dced_binding_from_rpc_binding( )*/-->
<!--dced_keytab_initilize_cursor(...);-->
<!--for( ; ; ) {-->
<!--    dced_keytab_get_next_key(...);-->
<!--    if(status != error_status_ok)-->
<!--        break;-->
<!--    <<use key.  TBD>>-->
<!--}-->
<!--dced_keytab_release_cursor(...);-->
<!--dced_binding_free(...);-->
<!--.oE-->
<!--.PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_no_more_entries</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">dced_keytab_initialize_cursor(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_keytab_release_cursor(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_object_read(3dce)</Filename>,
<Filename MoreInfo="RefEntry">sec_key_mgmt_get_next_key(3sec)</Filename>.
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_keytab_get_next_key.3dce,v 1.1.2.6 1996/12/10 20:54:31 carrig Exp $
    | tagMorph library:  $Id: dced_keytab_get_next_key.3dce,v 1.1.2.6 1996/12/10 20:54:31 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
