<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_keytab_change_key.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:54:28  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:18:30  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:14:30  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:10:55  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:20  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:59:46  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:14:01  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:23  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:23:45  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:20:44  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:26:08  weir
# 	Initial submission
# 	[1996/11/29  16:22:30  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN108.rsml.1">
<RefMeta>
<RefEntryTitle>dced_keytab_change_key</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_keytab_change_key</Literal></RefName>
<RefPurpose>
Changes a key (server password) in both a key table and in the security registry</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:01:05  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:27  wardr]-->
<!---->
<!-- Revision 1.1.2.7  1995/05/31  17:06:17  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:58:47  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:16  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:04:18  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/18  21:50:54  jshirley-->
<!-- 	Updated for final.-->
<!-- 	[1994/10/18  21:50:10  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  18:13:20  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  18:13:01  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:02:46  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:46:50  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/26  13:02:49  jshirley-->
<!-- 	{def,9830,R1.1}-->
<!-- 	Incorporated first draft reviews.-->
<!-- 	[1994/05/26  13:01:44  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  00:34:39  jshirley-->
<!-- 	Created fle.-->
<!-- 	[1994/05/04  00:33:46  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_keytab_change_key(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_keytab_change_key</Function></FuncDef>
<ParamDef>dced_binding_handle_t <Parameter>dced_bh</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>keytab_uuid</Parameter></ParamDef>
<ParamDef>dced_key_t *<Parameter>key</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">dced_bh</Symbol></Term>
<ListItem>
<Para>Specifies the <Literal>dced</Literal> binding handle for the <Literal>keytab</Literal> service on a
specific host.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">keytab_uuid</Symbol></Term>
<ListItem>
<Para>Specifies the UUID <Literal>dced</Literal> uses to identify the key table in
which the key is to be changed.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">key</Symbol></Term>
<ListItem>
<Para>Specifies the new key.  Some fields are modified by <Literal>dced</Literal>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_keytab_change_key()</Function> routine updates a key in both
the key table on a specific host and in the security registry.
Management applications change keys remotely with this routine.
(Servers can change their own keys locally with the
<Function>sec_key_mgmt_change_key()</Function> routine.)
</Para>
<Para>The security registry needs a copy of a server's current key, so that during the
authentication process, it can encrypt tickets that only a server with
that key can later decrypt.
When a management application calls <Function>dced_keytab_change_key()</Function>,
<Literal>dced</Literal> first tries to make the modification in the security registry, 
and, if successful, it then modifies the key in the key table.  
The old key is not really replaced, but a new version
and key is established for all new authenticated communication.
The old version is maintained in the key table (and registry too) 
for a time, so that existing clients with valid tickets can still
communicate with the server.
The old key is removed depending on the local cell's change policy and whether
the server calls <Function>sec_key_mgmt_garbage_collect()</Function> to purge its
old keys explicitly, or calls <Function>sec_key_mgmt_manage_key()</Function> to purge them
implicitly.
</Para>
<Para>When more than one server shares the same principal identity, 
the servers use the same key.
If you need to change the same key in more than one key table, 
use <Function>decd_keytab_change_key()</Function> for one change and then use the
<Function>dced_keytab_add_key()</Function> routine for all others.
<!--.nL-->
<!--.ne 1.5i-->
<!--.SH "EXAMPLES"-->
<!--.PP-->
<!--<<Example to be described>>-->
<!--.oS-->
<!--dced_binding_create("keytab@somehost",...); /*or dced_binding_from_rpc_binding() */-->
<!--   /*TBD: find key table? */-->
<!--sec_key_mgmt_gen_rand_key(...);-->
<!--dced_keytab_change_key(...);-->
<!--dced_binding_free(...);-->
<!--.oE-->
<!--.PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_bad_index_type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_key_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_bad_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_key_version_mismatch</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_need_privacy</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_binding_has_no_auth</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_acl_invalid_permission</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_authn_invalid</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_authn_unavailable</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_key_unavailable</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_key_unsupported</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_key_version_exists</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_not_implemented</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_unauthorized</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_rgy_object_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_rgy_server_unavailable</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_binding_from_rpc_binding(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_keytab_add_key(3dce)</Filename>,
<Filename MoreInfo="RefEntry">sec_key_mgmt_change_key(3sec)</Filename>.
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_keytab_change_key.3dce,v 1.1.2.6 1996/12/10 20:54:28 carrig Exp $
    | tagMorph library:  $Id: dced_keytab_change_key.3dce,v 1.1.2.6 1996/12/10 20:54:28 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
