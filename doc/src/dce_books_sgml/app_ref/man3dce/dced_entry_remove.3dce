<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_entry_remove.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:54:14  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:18:15  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:14:14  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:10:37  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:08  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:59:34  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:13:52  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:12  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:23:33  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:20:34  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:25:52  weir
# 	Initial submission
# 	[1996/11/29  16:22:22  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN99.rsml.1">
<RefMeta>
<RefEntryTitle>dced_entry_remove</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_entry_remove</Literal></RefName>
<RefPurpose>
Removes a <Literal>hostdata</Literal> or <Literal>keytab</Literal> data entry from a <Literal>dced</Literal> 
service's list of entries</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:00:52  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:17  wardr]-->
<!---->
<!-- Revision 1.1.2.7  1995/05/31  17:06:08  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:56:58  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:07  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:03:44  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/17  16:30:53  jshirley-->
<!-- 	Did update for final review.-->
<!-- 	[1994/10/17  16:30:05  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  17:23:07  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  17:22:48  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:02:54  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:46:58  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/24  18:16:04  jshirley-->
<!-- 	{def, CR9830, R1.1}-->
<!-- 	Incorporated first review comments.-->
<!-- 	[1994/05/24  18:14:23  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  01:25:12  jshirley-->
<!-- 	Created file.-->
<!-- 	[1994/05/04  01:24:36  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_entry_remove(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_entry_remove</Function></FuncDef>
<ParamDef>dced_binding_handle_t <Parameter>dced_bh</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>entry_uuid</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">dced_bh</Symbol></Term>
<ListItem>
<Para>Specifies the <Literal>dced</Literal> binding handle for a <Literal>dced</Literal> service on a specific host.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">entry_uuid</Symbol></Term>
<ListItem>
<Para>Specifies the UUID of the entry to be removed from the service.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_entry_remove()</Function> routine removes an entry from the
<Literal>hostdata</Literal> or <Literal>keytab</Literal> service entry list of <Literal>dced</Literal>.  
It does not remove the actual data stored in the file,
but makes it inaccessible from a remote host by way of the <Literal>dced</Literal>'s 
user interfaces which include the <Literal>dced</Literal> API and the DCE control program, 
<Literal>dcecp</Literal>.
Each host service that maintains data also maintains a list of data entries.
A data entry contains a name, a UUID, a brief description,
and a storage tag indicating the location of the actual data.
</Para>
<Para>To delete both the data and entry for the <Literal>hostdata</Literal>, <Literal>keytab</Literal>, 
or <Literal>srvrconf</Literal> services, use 
<Function>dced_hostdata_delete()</Function>,
<Function>dced_keytab_delete()</Function>, or
<Function>dced_server_delete()</Function>, respectively.
(The <Literal>srvrexec</Literal> service is maintained only by <Literal>dced</Literal>
and the <Literal>secval</Literal> service does not maintain data, so you cannot
remove data for these services.)
</Para>
<Para>Applications commonly obtain an entry by traversing the entry list using
the <Function>dced_entry_get_next()</Function> routine with its associated cursor routines.
</Para>
<Para>Prior to calling the <Function>dced_entry_remove()</Function> routine, the
application must have established a valid <Literal>dced</Literal> binding handle to the
<Literal>hostdata</Literal> or <Literal>keytab</Literal> service by calling either the
<Function>dced_binding_create()</Function> or
<Function>dced_binding_from_rpc_binding()</Function> routine.
</Para>
<Para><!--.nL-->
<!--.ne 1.5i-->
<!--.SH "EXAMPLES"-->
<!--.PP-->
<!--In the following example, a dced binding is obtained.-->
<!--After establishing an entry-->
<!--list cursor, each entry is obtained and the entry names are compared-->
<!--one at a time with the name desired.  -->
<!--If a match is found, the entry is removed from the entry list.-->
<!--.oS-->
<!--dced_binding_create(, dced_c_binding_syntax_default, &dced_bh, &status);-->
<!---->
<!---->
<!--dced_initialize_cursor(dced_bh, &cursor, &status);-->
<!--for( ; ; ) { /* forever loop */-->
<!--   dced_entry_get_next(cursor, &entry, &status); -->
<!--   if(status != error_status_ok) -->
<!--      break;-->
<!--   if( strcmp(entry->name, desired_name) == 0 )   {-->
<!--      dced_entry_remove(dced_bh, &entry->id, &status);-->
<!--      break;-->
<!--   }-->
<!--}-->
<!--dced_release_cursor(&cursor, &status);-->
<!--dced_binding_free( dced_bh, &status);-->
<!--.oE-->
<!--.PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_del_failed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_key_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_readonly</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_bad_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_no_support</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_acl_invalid_permission</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: 
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>, 
<Filename MoreInfo="RefEntry">dced_binding_from_rpc_binding(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_hostdata_delete(3dce)</Filename>, 
<Filename MoreInfo="RefEntry">dced_initialize_cursor(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_keytab_delete(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_server_delete(3dce)</Filename>. 
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_entry_remove.3dce,v 1.1.2.6 1996/12/10 20:54:14 carrig Exp $
    | tagMorph library:  $Id: dced_entry_remove.3dce,v 1.1.2.6 1996/12/10 20:54:14 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
