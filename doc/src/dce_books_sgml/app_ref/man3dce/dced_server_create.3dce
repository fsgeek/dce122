<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_server_create.3dce,v $
# Revision 1.1.2.7  1996/12/15  17:17:28  carrig
# 	{enh,R1.2.2}
# 	Prog. Listing too wide
# 	[1996/12/15  17:17:14  carrig]
#
# Revision 1.1.2.6  1996/12/10  20:54:47  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:18:55  carrig]
# 
# Revision 1.1.2.5  1996/12/04  17:14:56  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:11:18  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:40  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  21:00:07  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:14:15  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:39  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:24:02  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:21:02  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:26:26  weir
# 	Initial submission
# 	[1996/11/29  16:22:45  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN125.rsml.1">
<RefMeta>
<RefEntryTitle>dced_server_create</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_server_create</Literal></RefName>
<RefPurpose>
Creates a DCE server's configuration data for the host's <Literal>dced</Literal></RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:01:27  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:44  wardr]-->
<!---->
<!-- Revision 1.1.2.8  1995/06/07  22:30:35  buckler-->
<!-- 	A final fix.-->
<!-- 	[1995/06/07  16:12:24  buckler]-->
<!-- -->
<!-- Revision 1.1.2.7  1995/05/31  17:06:31  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  23:04:05  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:31  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:05:16  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/17  22:35:45  jshirley-->
<!-- 	Updated for final.-->
<!-- 	[1994/10/17  22:35:02  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  18:49:09  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  18:48:54  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:02:55  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:47:08  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/01  14:00:26  jshirley-->
<!-- 	{def,CR9830,R1.1}-->
<!-- 	Incorporated first review comments.-->
<!-- 	[1994/06/01  13:59:35  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  01:35:17  jshirley-->
<!-- 	Created file.-->
<!-- 	[1994/05/04  01:08:55  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_server_create(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_server_create</Function></FuncDef>
<ParamDef>dced_binding_handle_t <Parameter>dced_bh</Parameter></ParamDef>
<ParamDef>server_t *<Parameter>conf_data</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">dced_bh</Symbol></Term>
<ListItem>
<Para>Specifies the <Literal>dced</Literal> binding handle for the <Literal>srvrconf</Literal> service on a
specific host.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">conf_data</Symbol></Term>
<ListItem>
<Para>Specifies the configuration data for the server.
The <Filename MoreInfo="RefEntry">dced_intro(3dce)</Filename> reference page describes the <StructName Role="typedef">server_t</StructName>
structure. 
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_server_create()</Function> routine creates a server's
configuration data.
This routine is used by management installation applications to remotely
(or locally) establish the data used to control how a DCE server starts.
However, this routine does not create the program or start it.  
Since this activity is typically part of a server's installation, 
you can also use <Literal>dcecp</Literal>'s <Literal>server create</Literal> operation.
</Para>
<Para>Management applications use the <Function>dced_object_read()</Function> routine
to read the configuration data.
</Para>
<Para><?sml-need 5>Prior to calling <Function>dced_server_create()</Function>, the application must
have established a valid <Literal>dced</Literal> binding handle to the <Literal>srvrconf</Literal>
service by calling either <Function>dced_binding_create()</Function> or 
<Function>dced_binding_from_rpc_binding()</Function>.
</Para>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<Para>The following example shows how to fill in some of the fields of a
<StructName Role="typedef">server_t</StructName> structure and then create the configuration in <Literal>dced</Literal>.
<?sml-point-size 9>
<!--no-op:  13-->
</Para>
<InformalExample>
<Para><ProgramListing>
<?Pub _font TypeSize="8pt">
dced_binding_handle_t dced_bh;
server_t              conf;
error_status_t        status;

dced_binding_create("srvrconf@hosts/katharine", 
                    dced_c_binding_syntax_default, 
                    &amp;dced_bh, 
                    &amp;status);
/* setup a server_t structure */
uuid_create(&amp;conf.id, &amp;status);
conf.name           = (dced_string_t)"application";
conf.entryname      = (dced_string_t)"/.:/development/new_app";
conf.services.count = 1;

/* service_t structure(s) */
conf.services.list = malloc(conf.services.count * sizeof(service_t));
rpc_if_inq_id(application_v1_0_c_ifspec, 
              &amp;(conf.services.list[0].ifspec), &amp;status);
conf.services.list[0].ifname     = (dced_string_t)"application";
conf.services.list[0].annotation = (dced_string_t)"A new application";  
conf.services.list[0].flags      = 0;  

/* server_fixedattr_t structure */
conf.fixed.startupflags = server_c_startup_explicit | 
                          server_c_startup_on_failure;
conf.fixed.flags = 0;
conf.fixed.program = (dced_string_t)"/usr/users/bin/new_app";

dced_server_create(dced_bh, &amp;conf, &amp;status);
 .
 .
 .  
<?Pub /_font><?Pub Caret>
</ProgramListing></Para>
</InformalExample>
<?sml-point-size 12>
<!--no-op:  14-->
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_bad_header_type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_bad_index_type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_iter_not_allowed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_key_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_readonly</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_store_failed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_already_exists</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_bad_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_name_missing</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_acl_invalid_permission</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><Literal>dcecp</Literal> objects:
<Filename MoreInfo="RefEntry">server(8dce)</Filename>.
</Para>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_binding_from_rpc_binding(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_object_read(3dce)</Filename>.
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_server_create.3dce,v 1.1.2.7 1996/12/15 17:17:28 carrig Exp $
    | tagMorph library:  $Id: dced_server_create.3dce,v 1.1.2.7 1996/12/15 17:17:28 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
