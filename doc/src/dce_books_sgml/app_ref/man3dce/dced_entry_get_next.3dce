<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_entry_get_next.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:54:13  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:18:14  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:14:13  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:10:35  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:06  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:59:33  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:13:51  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:11  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:23:33  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:20:33  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:25:50  weir
# 	Initial submission
# 	[1996/11/29  16:22:21  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN98.rsml.1">
<RefMeta>
<RefEntryTitle>dced_entry_get_next</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_entry_get_next</Literal></RefName>
<RefPurpose>
Obtains one data entry from a list of entries of a <Literal>dced</Literal> service</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:00:51  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:16  wardr]-->
<!---->
<!-- Revision 1.1.2.7  1995/05/31  17:06:07  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:56:47  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:06  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:03:41  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/17  16:30:52  jshirley-->
<!-- 	Did update for final review.-->
<!-- 	[1994/10/17  16:30:02  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  17:20:10  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  17:19:53  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:02:53  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:46:57  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/24  18:16:03  jshirley-->
<!-- 	{def, CR9830, R1.1}-->
<!-- 	Incorporated first review comments.-->
<!-- 	[1994/05/24  18:14:20  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  01:25:11  jshirley-->
<!-- 	Created file.-->
<!-- 	[1994/05/04  01:24:33  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_entry_get_next(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_entry_get_next</Function></FuncDef>
<ParamDef>dced_cursor_t <Parameter>cursor</Parameter></ParamDef>
<ParamDef>dced_entry_t **<Parameter>entry</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">cursor</Symbol></Term>
<ListItem>
<Para>Specifies the entry list's cursor that points to an entry, 
and returns the cursor advanced to the next entry in the list.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">entry</Symbol></Term>
<ListItem>
<Para>Returns a pointer to an entry.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_entry_get_next()</Function> routine obtains a pointer to a data entry, 
and advances the cursor to the next entry in the list.  
This routine is commonly used in a loop to traverse a host service's
entry list.
The data is obtained in an undetermined order.
Prior to using this routine, the application must call 
<Function>dced_initialize_cursor()</Function> to obtain a list of entries and to 
establish the beginning of the cursor.
When the application is finished traversing the entry list,
it should call <Function>dced_release_cursor()</Function> to release resources.
</Para>
<Para>A data entry does not contain the actual data, but it contains 
the name, identity, description,  and storage location of the data.
In the cases of <Literal>hostdata</Literal> and <Literal>keytab</Literal> services, 
the data for each entry is stored in a file.
In the cases of  <Literal>srvrconf</Literal> and <Literal>srvrexec</Literal> services, 
data is stored in memory.
The <Literal>dced</Literal> uses this two-level scheme so that it can manipulate different
kinds of data in the same way.
</Para>
<Para>Prior to using the <Function>dced_entry_get_next()</Function> routine, 
the application must have established a valid <Literal>dced</Literal> binding handle by calling 
either the <Function>dced_binding_create()</Function> or 
<Function>dced_binding_from_rpc_binding()</Function> routine.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<Para>In the following example, a <Literal>dced</Literal> binding is obtained from a service
type and an existing rpc binding handle.  After establishing an entry
list cursor, the <Function>dced_entry_get_next()</Function> routine obtains an
entry, one at a time, and the name and description of each entry is
displayed until the entry list is exausted.
<?sml-point-size 9>
<!--no-op:  13-->
</Para>
<InformalExample>
<Para><ProgramListing role="page-wide">dced_binding_from_rpc_binding(service_type, rpc_bh, &amp;dced_bh, &amp;status);
dced_initialize_cursor(dced_bh, &amp;cursor, &amp;status);
for( ; ; ) { /* forever loop */
   dced_entry_get_next(cursor, &amp;entry, &amp;status); 
   if(status != error_status_ok) break;
   display(entry->name, entry->description); /* application specific */
}
dced_release_cursor(&amp;cursor, &amp;status);
dced_binding_free( dced_bh, &amp;status);
</ProgramListing></Para>
</InformalExample>
<?sml-point-size 12>
<!--no-op:  14-->
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_no_more_entries</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: 
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>, 
<Filename MoreInfo="RefEntry">dced_binding_from_rpc_binding(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_initialize_cursor(3dce)</Filename>, 
<Filename MoreInfo="RefEntry">dced_release_cursor(3dce)</Filename>.
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_entry_get_next.3dce,v 1.1.2.6 1996/12/10 20:54:13 carrig Exp $
    | tagMorph library:  $Id: dced_entry_get_next.3dce,v 1.1.2.6 1996/12/10 20:54:13 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
