<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_keytab_remove_key.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:54:35  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:18:39  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:14:39  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:11:03  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:27  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:59:53  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:14:06  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:29  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:23:51  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:20:51  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:26:15  weir
# 	Initial submission
# 	[1996/11/29  16:22:36  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN114.rsml.1">
<RefMeta>
<RefEntryTitle>dced_keytab_remove_key</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_keytab_remove_key</Literal></RefName>
<RefPurpose>
Removes a key (server password) from a specified key table on a specific host</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:01:13  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:33  wardr]-->
<!---->
<!-- Revision 1.1.2.9  1995/06/21  19:16:38  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/21  18:45:49  buckler]-->
<!-- -->
<!-- Revision 1.1.2.8  1995/05/31  17:06:22  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:59:55  buckler]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/10/20  18:30:11  hileman-->
<!-- 	Removed TBDs.-->
<!-- 	[1994/10/20  18:16:42  hileman]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:22  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:04:40  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/18  21:50:59  jshirley-->
<!-- 	Updated for final.-->
<!-- 	[1994/10/18  21:50:31  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  18:27:14  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  18:26:58  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:02:51  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:46:55  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/26  13:02:59  jshirley-->
<!-- 	{def,9830,R1.1}-->
<!-- 	Incorporated first draft reviews.-->
<!-- 	[1994/05/26  13:02:12  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  00:34:46  jshirley-->
<!-- 	Created fle.-->
<!-- 	[1994/05/04  00:34:05  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_keytab_remove_key(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_keytab_remove_key</Function></FuncDef>
<ParamDef>dced_binding_handle_t <Parameter>dced_bh</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>keytab_uuid</Parameter></ParamDef>
<ParamDef>dced_key_t *<Parameter>key</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">dced_bh</Symbol></Term>
<ListItem>
<Para>Specifies the <Literal>dced</Literal> binding handle for the <Literal>keytab</Literal> service on a
specific host.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">keytab_uuid</Symbol></Term>
<ListItem>
<Para>Specifies the UUID <Literal>dced</Literal> maintains to identify the key table
from which the key is to be removed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">key</Symbol></Term>
<ListItem>
<Para>Specifies the key to be removed from the key table.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_keytab_remove_key()</Function> routine removes a key from a key
table (file) on a specific host.  The key table is specified with a
<Literal>keytab</Literal> entry UUID from the host's <Literal>dced</Literal>.
Management applications use <Function>dced_keytab_remove_key()</Function>  to
remotely remove server keys from key tables.
Typically, servers delete their own keys from their local key tables 
implicitly by calling <Function>sec_key_mgmt_manage_key()</Function>, 
or explicitly by calling <Function>sec_key_mgmt_delete_key()</Function>.
Applications can delete an entire key table file using the
<Function>dced_keytab_delete()</Function> routine.
<!--.PP-->
<!--To be sure you do not remove the current key, call-->
<!--the \*Lsec_key_mgmt_get_next_kvno(3sec)\*O routine to obtain the-->
<!--current and next key version numbers for comparison with a key's-->
<!--version number.-->
</Para>
<Para><?sml-need 5>Prior to calling this routine, the application must have established a
valid <Literal>dced</Literal> binding handle to the <Literal>keytab</Literal> service by calling either the 
<Function>dced_binding_create()</Function> or 
<Function>dced_binding_from_rpc_binding()</Function> routine.
<!--.nL-->
<!--.ne 1.5i-->
<!--.SH "EXAMPLES"-->
<!--.PP-->
<!--The following example shows how to delete all but the current key from-->
<!--a remote key table.-->
<!--.oS-->
<!--dced_binding_create("keytab@somehost",...); /*or dced_binding_from_rpc_binding( )*/-->
<!--dced_keytab_initialize_cursor(...);-->
<!--sec_key_mgmt_get_next_kvno(...);-->
<!--for( ; ;) {-->
<!--   dced_keytab_get_next_key(...);-->
<!--   if(status != error_status_ok)-->
<!--      break;-->
<!--   if(current_key_version != key->version) -->
<!--      dced_keytab_remove_key(...);-->
<!--}-->
<!--dced_keytab_release_cursor(...);-->
<!--dced_binding_free(...);-->
<!--.oE-->
<!--.PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_bad_index_type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_key_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_bad_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_need_privacy</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_binding_has_no_auth</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_acl_invalid_permission</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_authn_invalid</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_key_unavailable</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_key_mgmt_e_unauthorized</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_binding_from_rpc_binding(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_keytab_delete(3dce)</Filename>,
<Filename MoreInfo="RefEntry">sec_key_mgmt_delete_key(3sec)</Filename>.
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_keytab_remove_key.3dce,v 1.1.2.6 1996/12/10 20:54:35 carrig Exp $
    | tagMorph library:  $Id: dced_keytab_remove_key.3dce,v 1.1.2.6 1996/12/10 20:54:35 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
