<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_server_disable_if.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:54:50  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:18:58  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:14:59  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:11:20  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:42  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  21:00:09  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:14:16  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:41  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:24:04  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:21:08  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:26:28  weir
# 	Initial submission
# 	[1996/11/29  16:22:46  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN127.rsml.1">
<RefMeta>
<RefEntryTitle>dced_server_disable_if</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_server_disable_if</Literal></RefName>
<RefPurpose>
Disables a service (RPC interface) provided by a specific server on a specific host</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:01:31  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:46  wardr]-->
<!---->
<!-- Revision 1.1.2.7  1995/05/31  17:06:33  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  23:04:26  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:33  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:05:23  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/17  22:35:47  jshirley-->
<!-- 	Updated for final.-->
<!-- 	[1994/10/17  22:35:07  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  18:53:14  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  18:52:58  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:02:57  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:47:10  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/01  14:00:28  jshirley-->
<!-- 	{def,CR9830,R1.1}-->
<!-- 	Incorporated first review comments.-->
<!-- 	[1994/06/01  13:59:43  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  01:35:21  jshirley-->
<!-- 	Created file.-->
<!-- 	[1994/05/04  01:09:02  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_server_disable_if(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_server_disable_if</Function></FuncDef>
<ParamDef>dced_binding_handle_t <Parameter>dced_bh</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>exec_uuid</Parameter></ParamDef>
<ParamDef>rpc_if_id_t *<Parameter>interface</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">dced_bh</Symbol></Term>
<ListItem>
<Para>Specifies the <Literal>dced</Literal> binding handle for the <Literal>srvrexec</Literal> service on a
specific host.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">exec_uuid</Symbol></Term>
<ListItem>
<Para>Specifies the UUID that <Literal>dced</Literal> uses to identify the running server.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">interface</Symbol></Term>
<ListItem>
<Para>Specifies the RPC interface identifier that represents the service to
be disabled.
The interface identifier is generated when <Literal>idl</Literal> compiles an interface
definition file.  The interface identifier is an <Replaceable>rpc_if_id_t</Replaceable>
structure that contains the interface UUID (<Literal>uuid</Literal>) of type <StructName Role="typedef">uuid_t</StructName>, 
and numbers of type <Literal>unsigned16</Literal> representing the major (<Replaceable>vers_major</Replaceable>) 
and minor (<Replaceable>vers_minor</Replaceable>) version numbers for the interface.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_server_disable_if()</Function> routine disables a service provided
by a server on a specific host.  A service is represented by an RPC
interface identifier.
Management applications use this routine to remotely disable an interface
so it is inaccessible by clients, without completely stopping the
entire server.
</Para>
<Para><?sml-need 9>When a server starts and initializes itself, it must call the
<Function>dce_server_register()</Function> routine to enable all of its services.
The server can then disable its own individual services by using
<Function>dce_server_disable_service()</Function>.  This routine unregisters the
service's interface from the RPC runtime and marks the interface as disabled in
the endpoint map.
As an alternative, a management application can use 
<Function>dced_server_disable_if()</Function> to disable individual services.
However, this routine only affects the endpoint map in <Literal>dced</Literal> by
marking the interface as disabled and does not affect the server's runtime.
</Para>
<Para>A management application can reenable a service again by calling the
<Function>dced_server_enable_if()</Function> routine.  (Servers reenable their own
services using the <Function>dce_server_enable_if()</Function> routine.)
</Para>
<Para>Prior to calling <Function>dced_server_disable_if()</Function>, the application must
have established a valid <Literal>dced</Literal> binding handle to the <Literal>srvrexec</Literal>
service by calling either <Function>dced_binding_create()</Function> or 
<Function>dced_binding_from_rpc_binding()</Function>.
<!--.nL-->
<!--.ne 1.5i-->
<!--.SH "EXAMPLES"-->
<!--.PP-->
<!--During shutdown of a server, the order of-->
<!--interface disabling may be significant for the application.-->
<!--The following example-->
<!--.oS-->
<!--#include <INTERFACE.h>-->
<!-- .-->
<!-- .-->
<!-- .-->
<!--dced_binding_create("srvrexec@hosts/somehost",...);-->
<!--dced_server_disable_if(...);-->
<!--dced_server_disable_if(...);-->
<!--dced_server_disable_if(...);-->
<!-- .-->
<!-- .-->
<!-- .-->
<!--dced_binding_free(...);-->
<!--.oE-->
<!--.PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_bad_index_type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_iter_not_allowed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_readonly</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_store_failed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_bad_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_acl_invalid_permission</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><Literal>dcecp</Literal> Objects:
<Filename MoreInfo="RefEntry">server(8dce)</Filename>.
</Para>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">dce_server_disable_if(3dce)</Filename>, 
<Filename MoreInfo="RefEntry">dce_server_enable_if(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_server_register(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_binding_from_rpc_binding(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_server_enable_if(3dce)</Filename>.
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_server_disable_if.3dce,v 1.1.2.6 1996/12/10 20:54:50 carrig Exp $
    | tagMorph library:  $Id: dced_server_disable_if.3dce,v 1.1.2.6 1996/12/10 20:54:50 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
