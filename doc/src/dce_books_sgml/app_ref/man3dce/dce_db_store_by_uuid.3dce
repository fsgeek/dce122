<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_db_store_by_uuid.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:53:17  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:16:49  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:13:04  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:09:27  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:14:14  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:58:41  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:13:12  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:10:18  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:22:44  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:19:45  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:24:49  weir
# 	Initial submission
# 	[1996/11/29  16:21:40  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN54.rsml.1">
<RefMeta>
<RefEntryTitle>dce_db_store_by_uuid</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dce_db_store_by_uuid</Literal></RefName>
<RefPurpose>Stores data into a UUID-indexed backing store</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  16:59:47  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:56:30  wardr]-->
<!---->
<!-- Revision 1.1.2.8  1995/05/31  17:05:24  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:47:41  buckler]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/09/08  20:21:44  neilson-->
<!-- 	CR 12043 - Added db_s_iter_not_allowed error.-->
<!-- 	[1994/09/08  20:12:56  neilson]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/08/30  15:58:44  neilson-->
<!-- 	CR 10886 - improve wording-->
<!-- 	[1994/08/30  15:58:18  neilson]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/08/18  00:09:57  neilson-->
<!-- 	CR 10886 - Note to call rpc_sm_allocate() beforehand.-->
<!-- 	[1994/08/18  00:09:28  neilson]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/06/13  17:01:58  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:46:24  devobj]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/05/13  17:50:19  neilson-->
<!-- 	Engineering change.-->
<!-- 	[1994/05/13  17:49:48  neilson]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/06  13:32:50  neilson-->
<!-- 	Incorporate first review comments-->
<!-- 	[1994/05/06  13:31:38  neilson]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/02/22  22:18:28  neilson-->
<!-- 	Initial material.-->
<!-- 	[1994/02/22  20:00:39  neilson]-->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dce.h>
#include &lt;dce/dbif.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dce_db_store_by_uuid</Function></FuncDef>
<ParamDef>dce_db_handle_t <Parameter>handle</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>key</Parameter></ParamDef>
<ParamDef>void *<Parameter>data</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">handle</Symbol></Term>
<ListItem>
<Para>A handle, returned from <Function>dce_db_open()</Function>, that identifies the
backing store being used.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">key</Symbol></Term>
<ListItem>
<Para>A UUID that is the backing store key.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">data</Symbol></Term>
<ListItem>
<Para>A pointer to the data structure to be stored.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>A pointer to the completion status.  On successful completion, the
routine returns <Literal>error_status_ok</Literal>.  Otherwise, it returns an error.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dce_db_store_by_uuid()</Function> routine  stores the data structure pointed
to by <Symbol Role="Variable">data</Symbol> into the backing store.  The conversion function that
was specified in the call to <Function>dce_db_open()</Function> serializes the
structure so that it can be written to disk.
</Para>
<Para>This routine is specialized for storage into backing stores that are
indexed by UUID, as selected by the <Literal>db_c_index_by_uuid</Literal> bit in
the <Symbol Role="Variable">flags</Symbol> parameter to <Function>dce_db_open()</Function> when the backing
store was created.
</Para>
<Para><?sml-need 7>If the <Symbol Role="Variable">key</Symbol> value is the same as a key already stored, the new
<Symbol Role="Variable">data</Symbol> replaces the previously stored data associated with that key.
</Para>
</RefSect1>
<RefSect1>
<Title>Notes</Title>
<Para>Because the <Function>dce_db_store_by_uuid()</Function> routine uses the encoding services,
and they in turn use <Function>rpc_sm_allocate()</Function>, all programs that call
<Function>dce_db_store_by_uuid()</Function> outside of a server operation (for instance, if
a server does some backing store initialization, or in a standalone
program) must call <Function>rpc_sm_enable_allocate()</Function> first.  Indeed,
every thread that calls <Function>dce_db_store_by_uuid()</Function> must do
<Function>rpc_sm_enable_allocate()</Function>, but in the server side of an RPC,
this is already done.
<!-- .SH "FILES"-->
<!-- .VL-->
<!-- .LI-->
<!-- .LE-->
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>db_s_bad_index_type</Literal></Term>
<ListItem>
<Para>The backing store is not indexed by UUID.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>db_s_readonly</Literal></Term>
<ListItem>
<Para>The backing store was opened with the <Literal>db_c_readonly</Literal> flag, and
cannot be written to.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>db_s_store_failed</Literal></Term>
<ListItem>
<Para>The data could not be stored into the backing store for some reason.
The global variable <Literal>errno</Literal> may contain more information about the
error.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>db_s_iter_not_allowed</Literal></Term>
<ListItem>
<Para>The function was called while an iteration, begun by
<Function>dce_db_iter_start()</Function>, was in progress.  Storing is not allowed
during iteration.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para>The call was successful.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">dce_db_open(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_db_store(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dce_db_store_by_name(3dce)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_db_store_by_uuid.3dce,v 1.1.2.6 1996/12/10 20:53:17 carrig Exp $
    | tagMorph library:  $Id: dce_db_store_by_uuid.3dce,v 1.1.2.6 1996/12/10 20:53:17 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
