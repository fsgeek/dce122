<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dce_server_intro.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:53:41  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:17:34  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:13:32  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:09:55  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:14:36  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:59:04  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:13:29  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:10:37  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:23:05  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:20:06  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:25:10  weir
# 	Initial submission
# 	[1996/11/29  16:21:59  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN5.rsml.1">
<RefMeta>
<RefEntryTitle>dce_server_intro</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dce_server_intro</Literal></RefName>
<RefPurpose>Introduction to the DCE server routines</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:00:19  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:56:50  wardr]-->
<!---->
<!-- Revision 1.1.2.4  1995/05/31  17:05:42  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:51:41  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/19  19:49:46  jshirley-->
<!-- 	Update for final.-->
<!-- 	[1994/10/19  19:48:51  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/10/17  23:14:31  buckler-->
<!-- 	{enh, 8441, R1.1}-->
<!-- 	Added text to DESCRIPTION.-->
<!-- 	[1994/10/17  23:14:12  buckler]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/10/14  20:39:44  buckler-->
<!-- 	{enh, 12204, R1.1}-->
<!-- 	Add new intro page.-->
<!-- 	[1994/10/14  20:39:07  buckler]-->
<!-- -->
<RefSect1>
<Title>Description</Title>
<Para>The routines described on this reference page are used by servers
to register themselves with DCE.  This includes registering with the 
RPC runtime, the local endpoint mapper, and the namespace.  Routines are
also available to set up DCE security so that servers
can receive and invoke authenticated RPCs.
</Para>
<RefSect2>
<Title>The DCE Server Routines</Title>
<Para>The server routines are as follows, listed in alphabetical order:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Function>dce_server_disable_service()</Function></Term>
<ListItem>
<Para>Unregisters an individual interface of a DCE
server from the RPC runtime, 
and marks the server's endpoints as disabled in the <Literal>dced</Literal>'s 
endpoint mapper service.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_enable_service()</Function></Term>
<ListItem>
<Para>Registers an individual interface (application service) of a DCE
server with the RPC runtime, and marks the server's endpoints as
enabled in the <Literal>dced</Literal>'s endpoint mapper service.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_inq_attr()</Function></Term>
<ListItem>
<Para>Obtains application-specific attribute data from the <Literal>dced</Literal>
server configuration data.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_inq_server()</Function></Term>
<ListItem>
<Para>Obtains the server configuration data <Literal>dced</Literal> used to start the server.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_inq_uuids()</Function></Term>
<ListItem>
<Para>Obtains the UUIDs that <Literal>dced</Literal> used in its <Literal>srvrconf</Literal> and <Literal>srvrexec</Literal>
facilities to identify the server's configuration and execution data.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_register()</Function></Term>
<ListItem>
<Para>Registers a DCE server by establishing a server's binding information, 
registering its services (represented by interface IDs) with the 
RPC runtime, and entering its endpoints in the <Literal>dced</Literal>'s 
endpoint mapper service.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_sec_begin()</Function></Term>
<ListItem>
<Para>Prepares a server to receive and generate authenticated RPCs.
<?sml-break><?sml-need 5></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_sec_done()</Function></Term>
<ListItem>
<Para>Releases the resources previously set up by a call to 
<Function>dce_server_sec_begin()</Function>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_unregister()</Function></Term>
<ListItem>
<Para>Unregisters a DCE server by unregistering a servers services (interfaces) from
the RPC runtime, and removing the server's endpoints from the <Literal>dced</Literal>'s 
endpoint mapper service.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>dce_server_use_protseq()</Function></Term>
<ListItem>
<Para>Registers a protocol sequence to use for the server.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Data Types and Structures</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><StructName Role="typedef">dce_server_handle_t</StructName></Term>
<ListItem>
<Para>An opaque data structure containing information the runtime uses
to establish the server with DCE.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><StructName Role="typedef">dce_server_register_data_t</StructName></Term>
<ListItem>
<Para>A structure that contains an interface handle (generated by IDL),
a default EPV, and a count and array of <StructName Role="typedef">dce_server_type_t</StructName>s
for services that use RPC object types.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><StructName Role="typedef">dce_server_type_t</StructName></Term>
<ListItem>
<Para>A structure containing a manager type UUID and an RPC entry-point
vector (EPV) that specified which routines implement the IDL interface
for the specific type.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><StructName Role="typedef">server_t</StructName></Term>
<ListItem>
<Para>See <Filename MoreInfo="RefEntry">dced_intro(3dce)</Filename> for a complete description of <StructName Role="typedef">server_t</StructName>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Files</Title>
<VariableList>
<VarListEntry>
<Term><Filename>dce/dced.h</Filename></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Filename>dce/dced_base.idl</Filename></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para>Books:
&DCEDg;
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dce_server_intro.3dce,v 1.1.2.6 1996/12/10 20:53:41 carrig Exp $
    | tagMorph library:  $Id: dce_server_intro.3dce,v 1.1.2.6 1996/12/10 20:53:41 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
