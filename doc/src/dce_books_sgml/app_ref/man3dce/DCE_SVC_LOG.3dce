<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: DCE_SVC_LOG.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:52:22  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:15:25  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:12:10  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:08:26  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:13:21  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  20:57:50  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:12:33  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:09:31  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:21:57  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:18:58  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:23:50  weir
# 	Initial submission
# 	[1996/11/29  16:20:37  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN136.rsml.1">
<RefMeta>
<RefEntryTitle>DCE_SVC_LOG</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>DCE_SVC_LOG</Literal></RefName>
<RefPurpose>Macro to output a binary form of a serviceability debug message</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- OLD HISTORY-->
<!-- Revision 1.1.6.1  1996/11/18  16:58:54  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:55:43  wardr]-->
<!---->
<!-- Revision 1.1.4.1  1996/03/11  21:16:51  weir-->
<!-- 	Needless checkout-->
<!-- 	[1996/03/11  21:16:28  weir]-->
<!-- -->
<!-- Revision 1.1.2.6  1995/05/31  17:04:43  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  22:37:42  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/17  22:29:10  buckler-->
<!-- 	{enh, 8441, R1.1}-->
<!-- 	Incorporated technical review.-->
<!-- 	[1994/10/17  22:25:12  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/09/14  14:52:21  weir-->
<!-- 	Updates-->
<!-- 	[1994/09/14  14:51:06  weir]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/09/13  21:30:25  weir-->
<!-- 	Updates-->
<!-- 	[1994/09/13  21:29:00  weir]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/09/08  19:31:27  weir-->
<!-- 	Reorganized reference pages-->
<!-- 	[1994/09/08  19:30:17  weir]-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<!-- - -->
<FuncSynopsis Remap="ANSI doubleparens">
<FuncSynopsisInfo>#include &lt;dce/dce.h></FuncSynopsisInfo>
<FuncDef><Function>DCE_SVC_LOG&lpar;</Function></FuncDef>
<ParamDef>dce_svc_handle_t <Parameter>handle</Parameter></ParamDef>
<ParamDef>const unsigned32 <Parameter>table_index</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>debug_level</Parameter></ParamDef>
<ParamDef>const unsigned32 <Parameter>messageid</Parameter></ParamDef>
<ParamDef>char * <Parameter>format</Parameter></ParamDef>
<ParamDef>.&ensp;.&ensp;.&rpar;</ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<!-- - -->
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">handle</Symbol></Term>
<ListItem>
<Para>The caller's serviceability handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">table_index</Symbol></Term>
<ListItem>
<Para>The message's subcomponent name (defined in the <Literal>sams</Literal> file).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">debug_level</Symbol></Term>
<ListItem>
<Para>Serviceability debug level for the message.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">messageid</Symbol></Term>
<ListItem>
<Para>A message ID, defined in the message's <Literal>code</Literal> field in the <Literal>sams</Literal> file.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">format</Symbol></Term>
<ListItem>
<Para>A message format specifier string (used if <Symbol Role="Variable">messageid</Symbol> cannot be found).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>.&ensp;.&ensp;.</Literal></Term>
<ListItem>
<Para>Any format arguments for the message string.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<!-- - -->
<!-- -->
<Para>The <Literal>DCE_SVC_LOG</Literal> macro is used to generate debugging output based on a
message defined in an application's <Literal>sams</Literal> file (in this respect it is unlike
<Literal>DCE_SVC_DEBUG</Literal>, in which the message is specified as a literal string
parameter).  Because it is a macro that takes a variable number of arguments,
the entire parameter list must be enclosed in two sets of parentheses.  The
<Symbol Role="Variable">handle</Symbol> and <Symbol Role="Variable">table_index</Symbol> parameters are as described for
<Function>dce_svc_printf()</Function>.
</Para>
<Para>The message can be specified in either one of two ways: by <Symbol Role="Variable">messageid</Symbol>,
identifying a message defined in the normal way in the application's <Literal>sams</Literal>
file; or as a string literal paramater (<Symbol Role="Variable">format</Symbol>).  The <Symbol Role="Variable">format</Symbol>
string is used only if the specified <Symbol Role="Variable">messageid</Symbol> cannot be found.
</Para>
<Para><?sml-need 8><Literal>DCE_SVC_LOG</Literal> generates a record in the serviceability binary format,
not a conventional serviceability message as such.  The complete message text
is not normally written; instead, only the message ID (the <Symbol Role="Variable">messageid</Symbol>
specified in the macro parameter), and its format arguments (if any) are
written.  When the binary log is read (see <Filename MoreInfo="RefEntry">svcdumplog(8dce)</Filename>), the text
of the message is reconstructed from the application's installed message
catalog.  However, if the original message was generated from the <Symbol Role="Variable">format</Symbol>
argument, then the entire message text is written to the binary record.
<!-- -->
<!-- -->
</Para>
<Para>The <Symbol Role="Variable">debug_level</Symbol> argument indicates the level of detail associated with
the message and must be in the range <Literal>svc_c_debug1</Literal> to <Literal>svc_c_debug9</Literal>.
<!-- -->
</Para>
<Para>Thus the value of <Symbol Role="Variable">debug_level</Symbol> associates the message with one of nine
levels, and whether or not the message is actually generated at run
time will depend on what debugging level has been set for the application.
The level can be set by the application itself by a call to
<Function>dce_svc_debug_set_levels()</Function> or <Function>dce_svc_debug_routing()</Function>.
The level can also be set by
the value of an environment variable or a serviceability routing file.
See <Filename MoreInfo="RefEntry">svcroute(5dce)</Filename> for further information.
<!-- -->
<!-- -->
<!-- 	Explicitly set with dce_svc_routing call, if not then-->
<!-- 	value of SVC_<level> environment variable, if not then-->
<!-- 	file named by DCE_SVC_ROUTING_FILE environment variable.-->
<!-- 	The default value of DCE_SVC_ROUTING_FILE is /opt/dcelocal/svc/routing-->
<!-- 	If that file does not exist, then there are compiled-in defaults:-->
<!-- 		send to stderr.-->
<!-- -->
<!-- -->
</Para>
<Para>The significance of the various levels is application-defined, but in
general the higher levels (numbers) imply more detail in debugging
output.
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para>Functions:  <Filename MoreInfo="RefEntry">DCE_SVC_DEBUG(3dce)</Filename>, <Filename MoreInfo="RefEntry">DCE_SVC_DEBUG_ATLEAST(3dce)</Filename>,
<Filename MoreInfo="RefEntry">DCE_SVC_DEBUG_IS(3dce)</Filename>.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: DCE_SVC_LOG.3dce,v 1.1.2.6 1996/12/10 20:52:22 carrig Exp $
    | tagMorph library:  $Id: DCE_SVC_LOG.3dce,v 1.1.2.6 1996/12/10 20:52:22 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
