<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: dced_server_start.3dce,v $
# Revision 1.1.2.6  1996/12/10  20:54:54  carrig
# 	{enh,R1.2.2}
# 	Synopses, fonts in PgmListing Listing
# 	[1996/12/09  21:19:02  carrig]
#
# Revision 1.1.2.5  1996/12/04  17:15:04  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/04  17:11:25  carrig]
# 
# Revision 1.1.2.4  1996/12/03  21:15:45  wardr
# 	{edit,R1.2.2}
# 	Fixed some Conversion probs
# 	[1996/12/03  21:00:13  wardr]
# 
# Revision 1.1.2.3  1996/12/01  19:14:19  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:11:44  weir]
# 
# Revision 1.1.2.2  1996/11/29  19:24:08  weir
# 	Added fragmentary FPIs
# 	[1996/11/29  19:21:11  weir]
# 
# Revision 1.1.2.1  1996/11/29  16:26:33  weir
# 	Initial submission
# 	[1996/11/29  16:22:50  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN130.rsml.1">
<RefMeta>
<RefEntryTitle>dced_server_start</RefEntryTitle>
<ManVolNum>3dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>dced_server_start</Literal></RefName>
<RefPurpose>
Starts a DCE-configured server on a specified host</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  17:01:36  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  16:57:49  wardr]-->
<!---->
<!-- Revision 1.1.2.7  1995/05/31  17:06:35  buckler-->
<!-- 	1.1 edits.-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/05/30  23:04:57  buckler]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  03:06:36  jshirley-->
<!-- 	Final edits.-->
<!-- 	[1994/10/20  03:05:33  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/18  16:17:33  jshirley-->
<!-- 	Updated for final.-->
<!-- 	[1994/10/18  16:17:09  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/14  18:58:17  hileman-->
<!-- 	Added status codes.-->
<!-- 	[1994/10/14  18:58:02  hileman]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:03:00  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:47:13  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/01  14:00:31  jshirley-->
<!-- 	{def,CR9830,R1.1}-->
<!-- 	Incorporated first review comments.-->
<!-- 	[1994/06/01  13:59:52  jshirley]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/04  01:35:25  jshirley-->
<!-- 	Created file.-->
<!-- 	[1994/05/04  01:09:11  jshirley]-->
<!-- -->
<!--.iX "\*Ldced_server_start(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/dced.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>dced_server_start</Function></FuncDef>
<ParamDef>dced_binding_handle_t <Parameter>dced_bh</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>conf_uuid</Parameter></ParamDef>
<ParamDef>dced_attr_list_t *<Parameter>attributes</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>exec_uuid</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">dced_bh</Symbol></Term>
<ListItem>
<Para>Specifies the <Literal>dced</Literal> binding handle for the <Literal>srvrconf</Literal> service on a
specific host.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">conf_uuid</Symbol></Term>
<ListItem>
<Para>Specifies the UUID that <Literal>dced</Literal> uses to identify the server to start.
If the value input is that of a server that is already running,
<Literal>dced</Literal> starts a new instance.
<!--NOTE: dced_g_uuid_all_servers is not support for DCE 1.1-->
<!--If the value \*Ldced_g_uuid_all_servers\*O is used, -->
<!--then \*Ldced\*O will attempt to start all DCE servers and the-->
<!--server configuration information defined in the \*Vattributes\*O-->
<!--parameter is ignored. -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">attributes</Symbol></Term>
<ListItem>
<Para>Specifies the configuration attributes to use to start the server.
If the value is NULL, the default configuration defined in <Literal>dced</Literal> is used.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">exec_uuid</Symbol></Term>
<ListItem>
<Para>Specifies a new UUID for <Literal>dced</Literal> to use to identify the running server.
If a nil UUID is input, a new UUID is created and returned.
If the value input is that of a server that is already running,
<Literal>dced</Literal> starts a new instance and returns a new value.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not. 
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>dced_server_start()</Function> routine starts DCE-configured servers on
a specific remote host (or the local host).
The configuration data is stored in an object in the <Literal>srvrconf</Literal>
service of <Literal>dced</Literal>.
When the server starts, <Literal>dced</Literal> uses the server configuration
object and creates a server execution object in the <Literal>srvrexec</Literal> service.
A server execution object consists of data that describes the
executing server.
</Para>
<Para>Management applications create the configuration data by using the
<Function>dced_server_create()</Function> and the <Function>dced_object_read()</Function> routine
to read the configuration or execution data.
</Para>
<Para>Prior to calling <Function>dced_server_start()</Function>, the application must
have established a valid <Literal>dced</Literal> binding handle to the <Literal>srvrconf</Literal>
service by calling either <Function>dced_binding_create()</Function> or 
<Function>dced_binding_from_rpc_binding()</Function>.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<Para>The following example starts a configured server using a nil UUID as
input for the executing server.
<?sml-point-size 11>
<!--no-op:  13-->
</Para>
<InformalExample>
<Para><ProgramListing>dced_binding_handle_t conf_bh;
dced_string_t         server_name;
uuid_t                srvrconf_id, srvrexec_id;
error_status_t        status;

dced_binding_create("srvrconf@hosts/patrick",
                    dced_c_binding_syntax_default, 
                    &amp;conf_bh, 
                    &amp;status);
dced_inq_id(conf_bh, server_name, &amp;srvrconf_id, &amp;status);
uuid_create_nil(&amp;srvrexec_id, &amp;status);
dced_server_start(conf_bh, &amp;srvrconf_id, NULL, &amp;srvrexec_id, 
                  &amp;status);
 .
 .
 .
</ProgramListing></Para>
</InformalExample>
<?sml-point-size 12>
<!--no-op:  14-->
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_bad_header_type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_iter_not_allowed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_key_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_readonly</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>db_s_store_failed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_bad_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_no_support</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_not_found</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_sc_cant_fork</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_sc_invalid_attr_type</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>dced_s_sc_open_file_failed</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_acl_invalid_permission</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>uuid_s_bad_version</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para>Commands:
<Filename MoreInfo="RefEntry">server(8dce)</Filename>.
</Para>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">dced_binding_create(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_binding_from_rpc_binding(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_server_create(3dce)</Filename>,
<Filename MoreInfo="RefEntry">dced_server_stop(3dce)</Filename>. 
<!--no-op:  b-->
</Para>
<Para>Books:
&DCEDg;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: dced_server_start.3dce,v 1.1.2.6 1996/12/10 20:54:54 carrig Exp $
    | tagMorph library:  $Id: dced_server_start.3dce,v 1.1.2.6 1996/12/10 20:54:54 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
