<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_binding_inq_auth_info.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:22:33  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:20  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:39:26  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:35:45  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:38:40  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:34:50  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:16  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:05:44  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:39:48  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:35:37  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:06  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:16  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:16  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:09  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:14:46  weir
# 	Initial submission
# 	[1996/11/29  17:11:20  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN218.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_binding_inq_auth_info</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_binding_inq_auth_info</Literal></RefName>
<RefPurpose>Returns authentication and authorization
information from a server binding handle;  used by client applications</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY -->
<!-- Revision 1.1.10.2  1996/11/18  19:56:27  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:33:56  wardr]-->
<!---->
<!-- Revision 1.1.10.1  1996/05/13  18:07:21  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:03:54  wardr]-->
<!-- -->
<!-- Revision 1.1.8.2  1996/02/07  20:17:49  rcb-->
<!-- 	R1.2.1: editorial pass following HP revision-->
<!-- 	[1996/02/07  20:12:29  rcb]-->
<!-- -->
<!-- Revision 1.1.8.1  1996/01/28  22:01:09  weir-->
<!-- 	CR 13293: miscellaneous HP work-->
<!-- 	[1996/01/28  22:00:39  weir]-->
<!-- -->
<!-- Revision 1.1.6.7  1995/06/07  20:10:41  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:05:43  buckler]-->
<!-- -->
<!-- Revision 1.1.6.5  1993/01/26  17:49:52  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:18:05  cjd]-->
<!-- -->
<!-- Revision 1.1.6.4  1992/11/16  23:09:21  millette-->
<!-- 	Bug 6064: Delete references to rpc_if_register_auth_info-->
<!-- 	[1992/11/16  23:07:37  millette]-->
<!-- -->
<!-- Revision 1.1.6.3  1992/11/10  21:22:42  millette-->
<!-- 	Bug 5599: Clarify rpc_authz_none.-->
<!-- 	[1992/11/10  21:20:44  millette]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:43:07  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  19:54:04  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:42:26  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:27:38  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:42:28  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  16:45:07  oaf]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/06/12  16:58:37  millette-->
<!-- 	Bug 4113: Change rpc_c_protect_level_pkt_integrity to rpc_c_protect_level_pkt_integ-->
<!-- 	[1992/06/12  16:56:52  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/06/09  15:56:53  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/06/09  15:55:52  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/06/08  16:03:29  millette-->
<!-- 	Bug 3580: Replaced rpc_ss_register_auth_info by rpc_if_register_auth_info-->
<!-- 	[1992/06/08  16:01:48  millette]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:35:33  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- -->
<!-- -->
<!-- HP History:-->
<!--	HP revision /main/HPDCE02/1  1995/11/14  17:23 UTC  millett-->
<!-- 	07700: clariying status messages-->
<!-- -->
<!--	HP revision /main/1  1995/04/03  22:07 UTC  arh-->
<!-- 	Add OSF doc sources.-->
<!-- -->
<!-- -->
<!-- -->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--no-op:  /"Copyright Hewlett-Packard Company 1991-->
<!---->
<!--All Rights Reserved.  Reproduction, adaptation,-->
<!--or translation without prior written permission-->
<!--is prohibited, except as allowed under the-->
<!--copyright laws.-->
<!---->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1990 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Mass.                                                     *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  This document or any  *-->
<!-- other copies thereof may not be provided or otherwise made         *-->
<!-- available to any other person.  No title to or ownership of the     *-->
<!-- document is hereby transferred.                                    *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by DIGITAL      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_binding_inq_auth_info(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h>
#include &lt;dce/sec_login.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_binding_inq_auth_info</Function></FuncDef>
<ParamDef>rpc_binding_handle_t <Parameter>binding</Parameter></ParamDef>
<ParamDef>unsigned_char_t **<Parameter>server_princ_name</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>protect_level</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>authn_svc</Parameter></ParamDef>
<ParamDef>rpc_auth_identity_handle_t *<Parameter>auth_identity</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>authz_svc</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">binding</Symbol></Term>
<ListItem>
<Para>Specifies the server binding handle from which to return the
authentication and authorization information.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">server_princ_name</Symbol></Term>
<ListItem>
<Para>Returns a pointer to the expected principal name of the
server referenced by <Symbol Role="Variable">binding</Symbol>.
The content of the returned name and its syntax are
defined by the authentication service in use.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.  In this case, the caller does not have to call
the <Function>rpc_string_free()</Function> routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">protect_level</Symbol></Term>
<ListItem>
<Para>Returns the protection level used for remote procedure
calls made with <Symbol Role="Variable">binding</Symbol>.  The protection level
determines the degree to which authenticated communications
between the client and the server are protected.
</Para>
<Para>Note that the returned level may
be different from the level specified for <Symbol Role="Variable">protect_level</Symbol> on
the call to <Function>rpc_binding_set_auth_info()</Function>.
If the RPC runtime or the RPC protocol in the bound protocol sequence
does not support a specified level, the level is
automatically upgraded to the next higher supported level.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.
</Para>
<Para>The possible protection levels are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_default</Literal></Term>
<ListItem>
<Para>Uses the default protection level for the specified
authentication service.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_none</Literal></Term>
<ListItem>
<Para>Performs no protection.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_connect</Literal></Term>
<ListItem>
<Para>Performs protection only when the client establishes a
relationship with the server.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_call</Literal></Term>
<ListItem>
<Para>Performs protection only at the beginning of each remote procedure
call when the server receives the request.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt</Literal></Term>
<ListItem>
<Para>Ensures that all data received is from the expected client.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt_integ</Literal></Term>
<ListItem>
<Para>Ensures and verifies that none of the data transferred between
client and server has been modified.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt_privacy</Literal></Term>
<ListItem>
<Para>Performs protection as specified by all of the previous levels and
also encrypt each remote procedure call parameter value.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">authn_svc</Symbol></Term>
<ListItem>
<Para>Returns the authentication service used for remote procedure
calls made with <Symbol Role="Variable">binding</Symbol>.
</Para>
<Para>Specifying NULL prevents the routine from returning
this argument.
</Para>
<Para>The possible authentication services are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_none</Literal></Term>
<ListItem>
<Para>No authentication.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_secret</Literal></Term>
<ListItem>
<Para>DCE shared-secret key authentication.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_public</Literal></Term>
<ListItem>
<Para>DCE public key authentication (reserved for future use).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_default</Literal></Term>
<ListItem>
<Para>DCE default authentication service.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">auth_identity</Symbol></Term>
<ListItem>
<Para>Returns a handle for the data structure that contains the client's
authentication and authorization credentials.  This parameter must
be cast as appropriate for the authentication and authorization
services established via <Function>rpc_binding_set_auth_info()</Function>.
</Para>
<Para>When using the <Literal>rpc_c_authn_dce_secret</Literal> authentication
service and any authorization service,
this value must be a <StructName Role="typedef">sec_login_handle_t</StructName> obtained
from one of the following routines:
</Para>
<ItemizedList>
<ListItem>
<Para><Function>sec_login_setup_identity()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>sec_login_get_current_context()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>sec_login_newgroups()</Function>
</Para>
</ListItem>
</ItemizedList>
<Para>See the <Filename MoreInfo="RefEntry">sec_login_setup_identity(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_get_current_context(3sec)</Filename>,
and <Filename MoreInfo="RefEntry">sec_login_newgroups(3sec)</Filename> reference pages for more information.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">authz_svc</Symbol></Term>
<ListItem>
<Para>Returns the authorization service used for remote procedure
calls made with <Symbol Role="Variable">binding</Symbol>.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.
</Para>
<Para>The possible authorization services are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_none</Literal></Term>
<ListItem>
<Para>Server performs no authorization.  
This is valid only if
the <Symbol Role="Variable">authn_svc</Symbol> parameter is <Literal>rpc_c_authn_none</Literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_name</Literal></Term>
<ListItem>
<Para>Server performs authorization based on the client principal name.
<?sml-break></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_dce</Literal></Term>
<ListItem>
<Para>Server performs authorization using the client's DCE privilege
attribute certificate (PAC) sent to the server with each
remote procedure call made with <Symbol Role="Variable">binding</Symbol>.  Generally,
access is checked against DCE access control lists
(ACLs).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
<Para>The possible status codes and their meanings are as follows:
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>The routine completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para>The routine did not complete because of an invalid binding handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para>The routine did not complete because of the wrong kind of binding was specified for the operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_binding_has_no_auth</Literal></Term>
<ListItem>
<Para>The routine completed successfully, but the binding has no authentication information.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_binding_inq_auth_info()</Function> routine
returns authentication and authorization information
associated with the specified server binding handle.  The
calling client associates the authentication and authorization
data with the server binding handle by a prior call to the
<Function>rpc_binding_set_auth_info()</Function> routine.
</Para>
<Para>The RPC runtime allocates memory for the returned
<Symbol Role="Variable">server_princ_name</Symbol> parameter.  The caller is responsible for
calling the <Function>rpc_string_free()</Function> routine for the returned
parameter string.
<?sml-break></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<!-- .SH "ERRORS"-->
<!-- .VL-->
<!-- .LI "\*Lrpc_s_ok\*O"-->
<!-- Success.-->
<!-- .LI "\*Lrpc_s_invalid_binding\*O"-->
<!-- Invalid binding handle.-->
<!-- .LI "\*Lrpc_s_wrong_kind_of_binding\*O"-->
<!-- Wrong kind of binding for operation.-->
<!-- .LI "\*Lrpc_s_binding_has_no_auth\*O"-->
<!-- Binding has no authentication information.-->
<!-- .LE-->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">rpc_binding_set_auth_info(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_string_free(3rpc)</Filename>. 
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_binding_inq_auth_info.3rpc,v 1.1.2.8 1996/12/15 16:22:33 carrig Exp $
    | tagMorph library:  $Id: rpc_binding_inq_auth_info.3rpc,v 1.1.2.8 1996/12/15 16:22:33 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
