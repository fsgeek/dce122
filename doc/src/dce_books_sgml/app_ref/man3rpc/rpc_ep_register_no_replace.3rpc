<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_ep_register_no_replace.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:37:21  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:39  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:39:42  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:36:01  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:38:57  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:35:07  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:35  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:06:01  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:40:05  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:35:53  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:20  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:33  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:27  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:22  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:15:09  weir
# 	Initial submission
# 	[1996/11/29  17:11:32  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN232.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_ep_register_no_replace</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_ep_register_no_replace</Literal></RefName>
<RefPurpose>Adds to server address information
in the local endpoint map;  used by server applications</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  19:56:58  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:34:11  wardr]-->
<!---->
<!-- Revision 1.1.6.9  1995/06/21  13:20:24  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  19:49:31  buckler]-->
<!-- -->
<!-- Revision 1.1.6.8  1995/06/07  20:10:53  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:06:01  buckler]-->
<!-- -->
<!-- Revision 1.1.6.6  1994/11/03  23:45:45  neilson-->
<!-- 	Substituted macros for book names in cross refs.-->
<!-- 	[1994/11/03  01:39:30  neilson]-->
<!-- -->
<!-- Revision 1.1.6.5  1994/10/19  20:15:27  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:09:09  neilson]-->
<!-- -->
<!-- Revision 1.1.6.4  1994/07/14  19:04:22  jshirley-->
<!-- 	(def,10220,R1.1}-->
<!-- 	Remove references to rpcd and sec_clientd.-->
<!-- 	[1994/07/14  18:43:52  jshirley]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  17:50:19  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:19:03  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:44:04  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  19:54:51  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:43:33  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:28:09  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:43:49  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  16:46:11  oaf]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/06/04  15:13:00  mcdonald-->
<!-- 	Changes made:            Delete status code rpc_s_invalid_if_handle-->
<!-- 	File name:               src/app_ref/man3rpc/rpc_ep_register_no_replace.3rpc-->
<!-- 	Change Request Number:   3562-->
<!-- 	[1992/06/04  15:11:49  mcdonald]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/15  20:44:17  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/15  20:42:56  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:35:59  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Wed.  Dec 11, 1991                Update file submission for-->
<!--                                    V 1.0 final integration at IBM.-->
<!--                                   -->
<!---->
<!-- ********************************************************************-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *-->
<!-- All rights reserved.                                               *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_ep_register_no_replace(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_ep_register_no_replace</Function></FuncDef>
<ParamDef>rpc_if_handle_t <Parameter>if_handle</Parameter></ParamDef>
<ParamDef>rpc_binding_vector_t *<Parameter>binding_vec</Parameter></ParamDef>
<ParamDef>uuid_vector_t *<Parameter>object_uuid_vec</Parameter></ParamDef>
<ParamDef>unsigned_char_t *<Parameter>annotation</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">if_handle</Symbol></Term>
<ListItem>
<Para>Specifies an interface specification to register with the
local endpoint map.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">binding_vec</Symbol></Term>
<ListItem>
<Para>Specifies a vector of binding handles over which the server can receive
remote procedure calls.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">object_uuid_vec</Symbol></Term>
<ListItem>
<Para>Specifies a vector of object UUIDs that the server offers.  The server
application constructs this vector.
</Para>
<Para>Supply the value NULL to indicate there are no object UUIDs to
register.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">annotation</Symbol></Term>
<ListItem>
<Para>Defines a character string comment applied to each cross-product element added
to the local endpoint map.
The string can be up to 64 characters long, including the
NULL terminating character.
Specify NULL or the string <Literal>\0</Literal>
if there is no annotation string.
</Para>
<Para>The string is used by applications for informational purposes only.
The RPC runtime does not use this string to determine which server
instance a client
communicates with, or for enumerating endpoint map elements.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_ep_register_no_replace()</Function> routine adds elements to the
local host's endpoint map.  The routine does not replace existing elements.
Otherwise, this routine is identical to <Function>rpc_ep_register()</Function>.
</Para>
<Para>Each element in the local endpoint map
logically contains the following:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>Interface ID, consisting of an interface UUID and
versions (major and minor)
</Para>
</ListItem>
<ListItem>
<Para>Binding information
</Para>
</ListItem>
<ListItem>
<Para>Object UUID (optional)
</Para>
</ListItem>
<ListItem>
<Para>Annotation (optional)
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>A server uses this routine, instead of <Function>rpc_ep_register()</Function>,
when multiple instances of the server run on the
same host.  Use this routine if, at any time,
more than one server instance offers the same interface UUID,
object UUID, and protocol sequence.
</Para>
<Para>Since this routine does not replace elements, calling servers must
unregister (that is, remove) themselves before they stop running.
Otherwise, when local endpoint map elements are not replaced, obsolete
elements accumulate each time a server instance stops running without calling
<Function>rpc_ep_unregister()</Function>.  Periodically the DCE host daemon
identifies obsolete elements and removes them from the local endpoint map.
However,
during the time between these removals, the obsolete elements increase the
chance that a client will receive endpoints to nonexistent servers.
The client then
wastes time trying to communicate with these servers before obtaining
another endpoint.
</Para>
<Para>A server program calls this routine
to register endpoints that were specified by calling any of
the following routines:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Function>rpc_server_use_all_protseqs()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>rpc_server_use_protseq()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>rpc_server_use_protseq_ep()</Function>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para><?sml-need 7>A server that calls only the <Function>rpc_server_use_all_protseqs_if()</Function> or
<Function>rpc_server_use_protseq_if()</Function> routine does not need to call this routine.
In such cases, the client's runtime uses an endpoint from the client's
interface specification to fill in a partially bound binding handle.
However, it is recommended that you also register well-known endpoints
that the server specifies (registering endpoints from interface definitions
is unnecessary).
</Para>
<Para>If the server also exports to the
name service database,
the server calls this routine with
the same <Symbol Role="Variable">if_handle</Symbol>, <Symbol Role="Variable">binding_vec</Symbol> and
<Symbol Role="Variable">object_uuid_vec</Symbol> parameters as the server uses when calling the
<Function>rpc_ns_binding_export()</Function> routine.
<!-- .cS-->
<!-- .PP-->
<!-- For automatically started servers running over-->
<!-- the connection-oriented protocol sequence \*Lncacn_ip_tcp\*O,-->
<!-- COMMENT-START (instead of .cS)-->
<!-- DIGITAL_BEGIN-->
<!-- ** To include Digital Equipment Corporation and HP/Apollo protocol sequences,-->
<!-- ** replace the 1 line just before the ".cS" symbol with the following 2 lines.-->
<!-- one of the connection-oriented protocol sequences-->
<!-- (\*Lncacn_ip_tcp\*O, \*Lncacn_dnet_nsp\*O, or \*Lncacn_osi_dns\*O),-->
<!-- DIGITAL_END-->
<!-- COMMENT-END (instead of .cE)-->
<!-- the RPC runtime automatically generates a dynamic endpoint.  In this case, the-->
<!-- server can call the \*Lrpc_server_inq_bindings(\|)\*O routine followed by-->
<!-- the \*Lrpc_ep_register_no_replace(\|)\*O routine in order to make-->
<!-- itself available to multiple clients.  Otherwise, the automatically-->
<!-- started server is known only to the client-->
<!-- for which the server was started.-->
<!-- .cE-->
</Para>
<Para>The <Function>rpc_ep_register_no_replace()</Function> routine
communicates with the DCE host daemon (<Literal>dced</Literal>),
which in turn communicates with the local endpoint map.  The routine
communicates using one of the protocol sequences specified in one of the
binding handles in <Symbol Role="Variable">binding_vec</Symbol>.  Attempting to register
a binding that specifies a protocol sequence that the DCE host daemon is
not listening on results in the failure of
<Function>rpc_ep_register_no_replace()</Function>.
The routine indicates this failure by placing the
value <Literal>rpc_s_comm_failure</Literal> into <Symbol Role="Variable">status</Symbol>.
</Para>
<Para>For information about how the endpoint map service selects an
element for an interface ID and an object UUID, see the RPC information
in the &DCEDk;.
This guide explains how the endpoint map service
searches for the endpoint of a server that is compatible with a client.
If the client supplies a nonnil object UUID that is not in the
endpoint map,
or the client supplies a nil object UUID, the search can
succeed, but only if the server has registered a nil object UUID using
the <Function>rpc_ep_register_no_replace()</Function> or <Function>rpc_ep_register()</Function>
routine.
The <Symbol Role="Variable">object_uuid_vec</Symbol> parameter can contain both nil and
nonnil object UUIDs for the routine to place into endpoint map elements.
</Para>
<Para>For an explanation of how a server can establish a
client/server relationship without using the local endpoint map,
see the explanation of a string binding
in the <Filename MoreInfo="RefEntry">rpc_intro(3rpc)</Filename> reference page.
</Para>
<Para>This routine creates a cross-product from the <Symbol Role="Variable">if_handle</Symbol>,
<Symbol Role="Variable">binding_vec</Symbol> and <Symbol Role="Variable">object_uuid_vec</Symbol> parameters, and adds each
element in the cross-product as a separate registration in
the local endpoint map.
If you supply NULL to <Symbol Role="Variable">object_uuid_vec</Symbol>, the corresponding
elements in the cross-product contain a nil object UUID.
The <Function>rpc_ep_register()</Function> routine's reference page
summarizes the contents of an element in the local endpoint map.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_cant_access</Literal></Term>
<ListItem>
<Para>Error reading endpoint database.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_cant_create</Literal></Term>
<ListItem>
<Para>Error creating endpoint database.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_cant_perform_op</Literal></Term>
<ListItem>
<Para>Cannot perform requested operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_database_invalid</Literal></Term>
<ListItem>
<Para>Endpoint map database invalid.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_invalid_entry</Literal></Term>
<ListItem>
<Para>Invalid database entry.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_update_failed</Literal></Term>
<ListItem>
<Para>Update failed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_comm_failure</Literal></Term>
<ListItem>
<Para>Communications failure.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para>Invalid binding handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_bindings</Literal></Term>
<ListItem>
<Para>No bindings.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para>Wrong kind of binding for operation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_ep_register(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_resolve_binding(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_unregister(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_ep_unregister(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_export(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_inq_bindings(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_all_protseqs(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_all_protseqs_if(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_protseq(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_protseq_ep(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_protseq_if(3rpc)</Filename>.
</Para>
<Para>Books:
&DCEDk;.
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_ep_register_no_replace.3rpc,v 1.1.2.8 1996/12/15 16:37:21 carrig Exp $
    | tagMorph library:  $Id: rpc_ep_register_no_replace.3rpc,v 1.1.2.8 1996/12/15 16:37:21 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
