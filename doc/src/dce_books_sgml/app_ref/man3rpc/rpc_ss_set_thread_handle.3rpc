<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_ss_set_thread_handle.3rpc,v $
# Revision 1.1.2.7  1996/12/11  20:41:50  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:52  wardr]
#
# Revision 1.1.2.6  1996/12/10  22:41:06  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:37:02  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:25:52  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:08:03  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:42:13  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:51  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:02:05  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:50  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:53  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:21:03  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:17:48  weir
# 	Initial submission
# 	[1996/11/29  17:13:03  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN331.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_ss_set_thread_handle</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_ss_set_thread_handle</Literal></RefName>
<RefPurpose>Sets the thread handle for either
a newly created spawned thread
or for a server that was formerly a client and is ready to be a client
again;  used by server or possibly by client applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  20:00:08  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:53  wardr]-->
<!---->
<!-- Revision 1.1.6.8  1995/06/21  15:21:59  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/21  13:46:17  buckler]-->
<!-- -->
<!-- Revision 1.1.6.7  1995/06/07  20:12:31  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:59  buckler]-->
<!-- -->
<!-- Revision 1.1.6.5  1994/11/03  23:47:30  neilson-->
<!-- 	Substituted macros for book names in cross refs.-->
<!-- 	[1994/11/03  01:39:42  neilson]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/01/27  16:57:15  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:36:19  cjd]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  19:06:57  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:36:19  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  21:00:17  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  20:17:23  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:55:50  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:33:04  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:58:16  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  17:04:11  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/19  15:53:14  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/19  15:46:05  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:38:57  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Fri Nov 8, 1991                 Initial file submission to HP-->
<!--                                   for final integration at IBM.-->
<!--                                   -->
<!---->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- HP/DIGITAL CONFIDENTIAL-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp.-->
<!-- All rights reserved.-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<IndexTerm Id="DCEADR.MAN331.indx.1">
<Primary>memory</Primary>
<Secondary>management</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN331.indx.2">
<Primary>server threads</Primary>
<Secondary>memory management</Secondary>
</IndexTerm>
<!-- .iX "memory" "\*Lrpc_ss_set_thread_handle(\|)\*O"-->
<!-- .iX "\*Lrpc_ss_set_thread_handle(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN331.indx.3">
<Primary>threads</Primary>
<Secondary>memory management</Secondary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_ss_set_thread_handle</Function></FuncDef>
<ParamDef>rpc_ss_thread_handle_t <Parameter>id</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">id</Symbol></Term>
<ListItem>
<Para>A thread handle returned by a call to <Function>rpc_ss_get_thread_handle()</Function>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_ss_set_thread_handle()</Function> routine is used by
a thread spawned in the manager code
to associate itself with the main RPC manager thread.
Each spawned thread that uses
<Function>rpc_ss_allocate()</Function> and <Function>rpc_ss_free()</Function> for
memory management must call <Function>rpc_ss_set_thread_handle()</Function>,
using the handle that the main RPC manager thread
obtained through <Function>rpc_ss_get_thread_handle()</Function>.
</Para>
<Para>The <Function>rpc_ss_set_thread_handle()</Function> routine can also be used by
a program that originally was a client, then became a server, and
is now reverting to a client.  The program must re&minus;establish the
client environment by calling the 
<Function>rpc_ss_set_thread_handle()</Function> routine, supplying the handle
it received (through <Function>rpc_ss_get_thread_handle()</Function>)
prior to becoming a server, as a parameter.
<?sml-break><?sml-need 1.1i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>An exception, <Literal>rpc_x_no_memory</Literal>, when there is insufficient memory
available to set up necessary data structures.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<Para>When this function is invoked within a spawned thread, its
argument is the thread handle of the calling thread.  This example assumes
the data passed to the thread consists of only the middle thread.
</Para>
<InformalExample>
<Para><ProgramListing>#include &lt;pthread.h>
#include &lt;dce/idlbase.h>

 int helper_thread (
     pthread_addr_t th
     )
 {
     /*
      * Set the memory management environment to match
      * the parent environment.
      */
      rpc_ss_set_thread_handle(rpc_ss_thread_handle_t)th;
     /*
      * Real work of this thread follows here ...
      */
  }
</ProgramListing></Para>
</InformalExample>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>A representative list of errors that might be returned is not shown
here.  Refer to the &DCETg; for complete descriptions of all error
messages.
<?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">rpc_ss_allocate(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ss_free(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ss_get_thread_handle(3rpc)</Filename>.
</Para>
<Para>Books:
&DCEDk;.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_ss_set_thread_handle.3rpc,v 1.1.2.7 1996/12/11 20:41:50 wardr Exp $
    | tagMorph library:  $Id: rpc_ss_set_thread_handle.3rpc,v 1.1.2.7 1996/12/11 20:41:50 wardr Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
