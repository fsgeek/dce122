<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_tower_vector_from_binding.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:22:05  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:14:41  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:41:59  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:38:00  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:41:15  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:37:10  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:26:03  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:08:11  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:42:21  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:38:01  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:02:12  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:58  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:59  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:21:09  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:17:59  weir
# 	Initial submission
# 	[1996/11/29  17:13:09  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN338.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_tower_vector_from_binding</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_tower_vector_from_binding</Literal></RefName>
<RefPurpose>Creates a tower vector from a binding handle</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  20:00:16  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:36:01  wardr]-->
<!---->
<!-- Revision 1.1.2.4  1995/06/07  20:12:37  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:08:07  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/10/06  20:41:42  rrizzo-->
<!-- 	expand copyright-->
<!-- 	[1994/10/06  20:08:13  rrizzo]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/09/19  18:38:03  neilson-->
<!-- 	CR 10263 - make tower public-->
<!-- 	[1994/09/19  18:37:34  neilson]-->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_tower_vector_from_binding</Function></FuncDef>
<ParamDef>rpc_if_handle_t <Parameter>if_spec</Parameter></ParamDef>
<ParamDef>rpc_binding_handle_t <Parameter>binding</Parameter></ParamDef>
<ParamDef>rpc_tower_vector_p_t *<Parameter>twr_vector</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">if_spec</Symbol></Term>
<ListItem>
<Para>The interface specification that will be combined with a binding
handle to form a tower vector.
<?sml-break></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">binding</Symbol></Term>
<ListItem>
<Para>The binding handle that will be combined with a interface
specification to form a tower vector.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">twr_vector</Symbol></Term>
<ListItem>
<Para>Returns the allocated tower vector.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
<Para>The status code is either <Literal>rpc_s_ok</Literal>, or
<Literal>rpc_s_no_interfaces</Literal>, or a value returned from a called routine.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_tower_vector_from_binding()</Function> routine creates a vector
of towers from a binding handle.  After the caller is
finished with the tower vector, the <Function>rpc_tower_vector_free()</Function>
routine must be called to release the memory used by the vector. 
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:
<Filename MoreInfo="RefEntry">rpc_binding_copy(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_binding_free(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_tower_to_binding(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_tower_vector_free(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_tower_vector_from_binding.3rpc,v 1.1.2.8 1996/12/15 16:22:05 carrig Exp $
    | tagMorph library:  $Id: rpc_tower_vector_from_binding.3rpc,v 1.1.2.8 1996/12/15 16:22:05 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
