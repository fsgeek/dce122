<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: wchar_t_net_size.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:16:34  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:14:54  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:42:12  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:38:12  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:41:28  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:37:21  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:26:17  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:08:23  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:42:34  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:38:13  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:02:22  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:59:10  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:24:08  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:21:21  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:18:12  weir
# 	Initial submission
# 	[1996/11/29  17:13:18  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN349.rsml.1">
<RefMeta>
<RefEntryTitle>wchar_t_net_size</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>wchar_t_net_size</Literal></RefName>
<RefPurpose RevisionFlag="Changed"><?og-ChangeStart defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna">Calculates the necessary buffer size for code set conversion from a local code set to a network code set prior to marshalling;  used by client and server stubs but not directly by applications <?og-ChangeEnd defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.2  1996/11/18  20:00:29  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:36:11  wardr]-->
<!---->
<!-- Revision 1.1.4.1  1996/10/30  12:48:34  wardr-->
<!-- 	{def,CR13630,R1.2.2}-->
<!-- 	misc corrections from developer Mariko Romagna-->
<!-- 	[1996/10/30  12:47:34  wardr]-->
<!-- -->
<!-- Revision 1.1.2.8  1995/06/21  15:22:01  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/21  13:59:49  buckler]-->
<!-- -->
<!-- Revision 1.1.2.7  1995/06/07  20:12:47  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:08:20  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/19  22:34:19  zahn-->
<!-- 	{edt,5284,R1.1}-->
<!-- -->
<!-- 	Added technical review comments.-->
<!-- 	[1994/10/19  22:34:04  zahn]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/05  12:37:08  zahn-->
<!-- 	{edt,5284,R1.1}-->
<!-- -->
<!-- 	Made Mariko R.'s technical corrections to-->
<!-- 	the cs_byte_net_size reference page to this reference page,-->
<!-- 	since the routines are identical in function.-->
<!-- 	[1994/10/05  12:36:55  zahn]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:04:01  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:01  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/04/29  19:40:13  zahn-->
<!-- 	Removed binding handle as pointer from synopsis.-->
<!-- 	[1994/04/29  19:40:00  zahn]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/04/01  21:35:31  zahn-->
<!-- 	{enh,5284,R1.1}-->
<!-- -->
<!-- 	Add documentation for character and code sets interoperability-->
<!-- 	features for DCE 1.1.-->
<!-- 	[1994/04/01  21:34:32  zahn]-->
<!-- -->
<!-- .iX "\*Lwchar_t_net_size(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/codesets_stub.h></FuncSynopsisInfo>
<FuncDef><Function>void wchar_t_net_size</Function></FuncDef>
<ParamDef>rpc_binding_handle_t <Parameter>binding</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>network_code_set_value</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>local_buffer_size</Parameter></ParamDef>
<ParamDef>idl_cs_convert_t *<Parameter>conversion_type</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>network_buffer_size</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">binding</Symbol></Term>
<ListItem>
<Para RevisionFlag="Changed">Specifies the target binding handle from which to obtain
buffer size evaluation information.  When called from the client stub, 
this value is the binding handle of a compatible server returned by the
<Function>rpc_ns_binding_import_next()</Function> or <Function>rpc_ns_binding_select()</Function>
routine.  
<?og-ChangeStart defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"><?og-ChangeEnd defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">network_code_set_value</Symbol></Term>
<ListItem>
<Para RevisionFlag="Changed">The registered hexadecimal integer value that represents the
code set to be used to transmit character data over the network.
In general, the network code set is the code set that the client application's
code sets evaluation routine has determined to be compatible for
this client and server.  When the caller is the client stub, this
value is the sending tag.  When the caller
is the server stub, this value is the receiving tag.
<?og-ChangeStart defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable" RevisionFlag="Changed">local_buffer_size</Symbol></Term>
<ListItem>
<Para RevisionFlag="Changed">The size, in units of <StructName Role="typedef">wchar_t</StructName>, of the buffer that is allocated for the
international character data.
For a conformant or conformant varying array, this value is the local value of
the <Literal>size_is</Literal> variable
for the array; that is, the value is the size of the marshalled
string if no conversion is done.
<?og-ChangeEnd defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 8>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList RevisionFlag="Changed">
<?og-ChangeStart defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna">
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">conversion_type</Symbol></Term>
<ListItem>
<Para>A pointer to the enumerated type defined in <Filename>dce/idlbase.h</Filename>
that indicates whether data conversion
is necessary and whether or not the existing buffer is sufficient for storing
the results of the conversion.  Because <StructName Role="typedef">wchar_t</StructName> to
<Literal>idl_byte</Literal> require different numbers of bytes to encode one character,
and <StructName Role="typedef">wchar_t</StructName> to <Literal>idl_byte</Literal> 
conversion always takes place, 
the conversion type returned is always
<Literal>idl_cs_new_buffer_convert</Literal>.
<?og-ChangeEnd defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">network_buffer_size</Symbol></Term>
<ListItem>
<Para>A pointer to the buffer size that needs to be allocated to contain
the converted data, in units of <Literal>idl_byte</Literal>.  This value is to be
used as the network value of the <Literal>size_is</Literal>
variable for the array, and is non-NULL only if a conformant
or conformant varying array is to be marshalled.
A value of NULL in this parameter indicates that a fixed
or varying array is to be marshalled.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para RevisionFlag="Changed"><?og-ChangeStart defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna">The <Function>wchar_t_net_size()</Function> routine belongs to a set of
DCE RPC routines for use by client and server applications
that are transferring international character data
in a heterogeneous character set and code sets environment.
</Para>
<Para RevisionFlag="Changed">The <Function>wchar_t_net_size()</Function> routine is one of the four DCE RPC
buffer sizing routines that RPC stubs use before they
marshall or unmarshall data to determine whether or not the buffers allocated
for code set conversion need to be enlarged to hold the converted data.
The buffer sizing routines determine the type of conversion required and
calculate the size of the necessary buffer (if a conformant 
or conformant varying array is to be marshalled or unmarshalled); the 
RPC stub then allocates a buffer 
of that size before it calls one of the code set conversion
routines.
</Para>
<Para RevisionFlag="Changed">Client and server stubs call the two <StructName Role="typedef">wchar_t_</StructName><Symbol Role="Variable">*</Symbol><Literal>_size</Literal>
routines when the <StructName Role="typedef">wchar_t</StructName> type has been specified
as the local data type using the <Literal>cs_char</Literal> attribute in the
attribute configuration file for the application.  The
<Function>wchar_t_net_size()</Function> routine
is used to evaluate buffer size requirements
prior to marshalling data to be sent over the network.
</Para>
<Para RevisionFlag="Changed">Applications do not call the <Function>wchar_t_net_size()</Function> routine directly.
Client and server stubs call the routine before they marshall any data.
The stubs pass the routine a binding handle and a code set value that
identifies the code set to be used to transfer international character data
over the network.  The stubs also specify the local storage size of the
data, in units of <StructName Role="typedef">wchar_t</StructName>.
</Para>
<Para RevisionFlag="Changed">Because <StructName Role="typedef">wchar_t</StructName> and <Literal>idl_byte</Literal> require different
numbers of bytes to encode one character, <Function>wchar_t_net_size()</Function> always
sets <Symbol Role="Variable">conversion_type</Symbol> to <Literal>idl_cs_new_buffer_convert</Literal>, regardless of
whether it is called from a client or server stub, or whether client and
server code set tag information has been stored in the binding handle
by a code sets evaluation or tag-setting routine.
If a conformant or conformant varying
array is to be marshalled, the routine then calculates a new buffer size
by multiplying the value of <Replaceable>local_buffer_size</Replaceable>
by the number of bytes required to encode one <StructName Role="typedef">wchar_t</StructName> unit.
The routine returns the new buffer size in the <Symbol Role="Variable">network_buffer_size</Symbol>
argument.  The size is specified in units of <Literal>idl_byte</Literal>, which is the network 
representation used for international character data.
<!---->
<!-- Previous text (below) was redundant as well as erroneous.  conversion_type is-->
<!-- always idl_cs_new_buffer_convert. - rcb-->
<!---->
<!-- When called from a client stub, the \*Lwchar_t_net_size\*O-->
<!-- routine determines the value of \*Vconversion_type\*O from conversion-->
<!-- method and tag information set up in the binding handle-->
<!-- by a code sets evaluation routine or a tag-setting routine.-->
<!-- Since \*Lwchar_t\*O and \*Lidl_byte\*O are completely different-->
<!-- data types, the routine always sets the value to-->
<!-- \*Lidl_cs_new_buffer_convert\*O.-->
<!-- The routine sets the \*Vconversion_type\*O parameter-->
<!-- to this value and, if a conformant or conformant varying-->
<!-- array is to be marshalled, calculates a new buffer size-->
<!-- by multiplying the value of \*Vlocal_buffer_size\*O-->
<!-- by the byte size for \*Lwchar_t\*O.-->
<!-- The routine returns the new buffer size in the \*Vnetwork_buffer_size\*O-->
<!-- parameter.  The size is specified in units of -->
<!-- \*Lidl_byte\*O, which is the network-->
<!-- representation used for international character data.-->
<!-- .PP-->
<!-- In cases where the binding handle does not contain the-->
<!-- results of character and code sets evaluation, or where-->
<!-- it is being called from the server stub, the \*Lwchar_t_net_size\*O routine-->
<!-- determines the value of \*Vconversion_type\*O itself using the local code-->
<!-- set value and the code set value passed in the -->
<!-- \*Vnetwork_code_set_value\*O parameter,-->
<!-- and returns the appropriate \*Vconversion_type\*O value.-->
<!-- If a conformant or conformant varying array is to be marshalled,-->
<!-- and the routine finds that a new buffer is required to hold-->
<!-- the converted data, the routine calculates the size of-->
<!-- this new buffer (by multiplying the value of \*Vlocal_buffer_size\*O by -->
<!-- sizeof(wchar_t); that is, the number of bytes required-->
<!-- to encode one \*Lwchar_t\*O data type,-->
<!-- returns the results, in units of \*Lidl_byte\*O, in \*Vnetwork_buffer_size\*O.-->
</Para>
<Para RevisionFlag="Changed">When a fixed or varying array is being
marshalled, the <Function>wchar_t_net_size()</Function> routine cannot calculate
the required buffer size and does not return a value in the
<Symbol Role="Variable">network_buffer_size</Symbol> argument.
<?og-ChangeEnd defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></Para>
<RefSect2>
<Title>Permissions Required</Title>
<Para>No permissions are required.
<?sml-break><?sml-need 1.5i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para RevisionFlag="Changed">Success.
<?og-ChangeStart defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal RevisionFlag="Changed">rpc_s_ss_incompatible_codesets</Literal></Term>
<ListItem>
<Para RevisionFlag="Changed">The binding handle does not contain the information necessary
to evaluate the code set.
If this error occurs in the server stub, an exception is raised
to the client application.
<?og-ChangeEnd defect, 13630, 1.2.2, misc corrections from developer Mariko Romagna"></Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>When invoked from the server stub, this routine calls the routines
<Function>dcs_cs_loc_to_rgy()</Function> and <Function>rpc_rgy_get_max_bytes()</Function>.
If either of these routines returns an error, the <Function>wchar_t_net_size()</Function>
routine raises an exception to the client application.
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para RevisionFlag="Changed"><!--no-op:  l-->
<?og-ChangeStart defect, 13630, 1.2.2, augmented functions list while I was at it">Functions:
<Filename MoreInfo="RefEntry">cs_byte_local_size(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">cs_byte_net_size(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">dcs_cs_loc_to_rgy(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_rgy_get_max_bytes(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">wchar_t_from_netcs(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">wchar_t_local_size(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">wchar_t_to_netcs(3rpc)</Filename>.
<?og-ChangeEnd defect, 13630, 1.2.2, augmented functions list while I was at it">
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: wchar_t_net_size.3rpc,v 1.1.2.8 1996/12/15 16:16:34 carrig Exp $
    | tagMorph library:  $Id: wchar_t_net_size.3rpc,v 1.1.2.8 1996/12/15 16:16:34 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
