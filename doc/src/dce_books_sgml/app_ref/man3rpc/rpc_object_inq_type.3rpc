<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_object_inq_type.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:34:15  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:13:39  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:41:06  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:12  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:40:19  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:22  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:25:04  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:07:20  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:41:31  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:10  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:01:31  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:04  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:23  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:20:27  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:16:51  weir
# 	Initial submission
# 	[1996/11/29  17:12:30  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN294.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_object_inq_type</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_object_inq_type</Literal></RefName>
<RefPurpose>Returns the type of an object;  used by server applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  19:59:23  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:16  wardr]-->
<!---->
<!-- Revision 1.1.6.7  1995/06/21  13:20:50  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  21:00:11  buckler]-->
<!-- -->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/19  16:48:31  buckler]-->
<!-- -->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/19  16:33:17  buckler]-->
<!-- -->
<!-- Revision 1.1.6.6  1995/06/07  20:11:56  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:18  buckler]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/01/27  16:54:49  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:33:25  cjd]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  19:05:29  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:33:25  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:56:19  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  20:09:03  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:52:12  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:31:38  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:53:28  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  17:01:39  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/18  20:59:34  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/18  20:58:34  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:38:07  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Mon Nov 11, 1991                 Initial file submission to HP-->
<!--                                    for final integration at IBM.-->
<!--                                   -->
<!---->
<!-- ********************************************************************-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *-->
<!-- All rights reserved.                                               *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_object_inq_type(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_object_inq_type</Function></FuncDef>
<ParamDef>uuid_t *<Parameter>obj_uuid</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>type_uuid</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">obj_uuid</Symbol></Term>
<ListItem>
<Para>Specifies the object UUID whose associated type UUID is returned.
Supply NULL to specify a nil UUID for this parameter.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">type_uuid</Symbol></Term>
<ListItem>
<Para>Returns the type UUID corresponding to the object UUID supplied in
the <Symbol Role="Variable">obj_uuid</Symbol> parameter.
</Para>
<Para>Specifying NULL here prevents the return of a type UUID. An
application, by specifying NULL here, can determine from the
value returned in <Symbol Role="Variable">status</Symbol> whether
<Symbol Role="Variable">obj_uuid</Symbol> is registered.  This determination occurs
without the application specifying an output type UUID variable.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>A server application calls the <Function>rpc_object_inq_type()</Function>
routine to obtain the type UUID of an object.
</Para>
<Para>If the object is registered with the RPC runtime using the
<Function>rpc_object_set_type()</Function> routine, the registered type is returned.
</Para>
<Para><?sml-need 6>Optionally, an application can maintain an object/type registration privately.
In this case, if the application provides an object inquiry
function (see the <Filename MoreInfo="RefEntry">rpc_object_set_inq_fn(3rpc)</Filename> reference page),
the RPC runtime uses that function to determine an object's type.
</Para>
<Para>The table below shows how <Function>rpc_object_inq_type()</Function>
obtains the returned type UUID.
</Para>
<Para><?sml-need 4.0i>
<!-- .TB "Rules for Returning an Object's Type"-->
<?sml-indent -1i></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="3">
<ColSpec Colsep="1" Align="Center" Colwidth="1.2*" Colname="col1" Colnum="1">
<ColSpec Colsep="1" Align="Center" Colwidth="1.2*" Colname="col2" Colnum="2">
<ColSpec Align="Left" Colwidth="1*" Colname="col3" Colnum="3">
<TBody>
<Row>
<Entry Rowsep="1" Colsep="0" Namest="col1" Nameend="col3"><Literal>Rules for Returning an Object's Type</Literal></Entry>
</Row>
<Row>
<Entry Align="Left" Rowsep="1"><Literal>Was object UUID registered (using rpc_object_set_type)? </Literal></Entry>
<Entry Align="Left" Rowsep="1"><Literal>Was an object inquiry runction registered (using rpc_object_set_inq_fn)?</Literal></Entry>
<Entry Rowsep="1"><Literal>Return Value</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1">Yes</Entry>
<Entry Rowsep="1">Ignored</Entry>
<Entry Rowsep="1">Returns the object's registered type UUID.
</Entry>
</Row>
<Row>
<Entry Rowsep="1">No</Entry>
<Entry Rowsep="1">Yes</Entry>
<Entry Rowsep="1">Returns the type UUID returned from calling the inquiry function.
</Entry>
</Row>
<Row>
<Entry>No</Entry>
<Entry>No</Entry>
<Entry>Returns the nil UUID.
</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<?sml-indent>
<?sml-break>
<?sml-need .8i>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need .8i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_object_not_found</Literal></Term>
<ListItem>
<Para>Object not found.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>uuid_s_bad_version</Literal></Term>
<ListItem>
<Para>Bad UUID version.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_object_set_inq_fn(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_object_set_type(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_object_inq_type.3rpc,v 1.1.2.8 1996/12/15 16:34:15 carrig Exp $
    | tagMorph library:  $Id: rpc_object_inq_type.3rpc,v 1.1.2.8 1996/12/15 16:34:15 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
