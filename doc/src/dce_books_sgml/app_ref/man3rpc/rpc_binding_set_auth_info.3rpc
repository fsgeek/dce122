<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_binding_set_auth_info.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:22:37  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:26  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:39:30  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:35:49  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:38:45  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:34:55  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:22  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:05:50  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:39:53  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:35:42  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:10  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:21  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:19  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:13  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:14:51  weir
# 	Initial submission
# 	[1996/11/29  17:11:23  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN222.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_binding_set_auth_info</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_binding_set_auth_info</Literal></RefName>
<RefPurpose>Sets authentication and authorization
information for a server binding handle;  used by client applications</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY -->
<!-- Revision 1.1.10.1  1996/11/18  19:56:34  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:34:01  wardr]-->
<!---->
<!-- Revision 1.1.8.7  1995/06/21  13:20:18  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  19:39:27  buckler]-->
<!-- -->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/19  15:48:03  buckler]-->
<!-- -->
<!-- Revision 1.1.8.6  1995/06/07  20:10:44  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:05:48  buckler]-->
<!-- -->
<!-- Revision 1.1.8.4  1994/09/13  18:34:53  buckler-->
<!-- 	{def, 9272, R1.1}-->
<!-- 	Added information about conditions governing the interaction-->
<!-- 	between unauthenticated clients and servers with specified-->
<!-- 	authentication.-->
<!-- 	[1994/09/13  18:34:30  buckler]-->
<!-- -->
<!-- Revision 1.1.8.3  1994/02/01  19:53:55  zahn-->
<!-- 	{def,9533,R1.1}-->
<!-- -->
<!-- 	In synopsis, removed double asterisk from server_princ_name argument-->
<!-- 	[1994/02/01  19:53:19  zahn]-->
<!-- -->
<!-- Revision 1.1.8.2  1993/09/09  20:19:11  millette-->
<!-- 	{defect, 7800, R1.0.3}-->
<!-- 	PACS can be unauthenticated-->
<!-- 	[1993/09/09  20:18:10  millette]-->
<!-- -->
<!-- Revision 1.1.6.5  1993/01/26  17:50:04  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:18:30  cjd]-->
<!-- -->
<!-- Revision 1.1.6.4  1992/12/15  18:34:03  millette-->
<!-- 	Bug 5333: The rpc_c_authz_none and rpc_c_authz_dce authz_svc-->
<!-- 	parameter values cannot be used with protect level of-->
<!-- 	rpc_c_protect_level_none-->
<!-- 	[1992/12/15  18:31:50  millette]-->
<!-- -->
<!-- Revision 1.1.6.3  1992/11/16  23:15:14  millette-->
<!-- 	Bug 6064: Delete references to rpc_if_register_auth_info-->
<!-- 	[1992/11/16  23:12:55  millette]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:43:33  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  19:54:26  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:42:58  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:27:51  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:43:09  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  16:45:34  oaf]-->
<!-- -->
<!-- Revision 1.1.2.6  1992/06/30  16:36:02  millette-->
<!-- 	Bug 3898: Fixed typos introduced when I fixed bug 3898.-->
<!-- 	[1992/06/24  20:06:14  millette]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/06/23  14:47:46  millette-->
<!-- 	Bug 3898: Add new status codes-->
<!-- 	[1992/06/23  14:46:15  millette]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/06/12  17:03:19  millette-->
<!-- 	Bug 4113: Change rpc_c_protect_level_pkt_integrity to rpc_c_protect_level_pkt_integ-->
<!-- 	[1992/06/12  17:01:53  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/06/08  16:07:25  millette-->
<!-- 	Bug 3580: Replaced rpc_ss_register_auth_info by rpc_if_register_auth_info-->
<!-- 	[1992/06/08  16:05:58  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/15  18:39:17  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/15  18:37:19  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:35:45  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--Copyright Hewlett-Packard Company 1991-->
<!---->
<!--All Rights Reserved.  Reproduction, adaptation,-->
<!--or translation without prior written permission-->
<!--is prohibited, except as allowed under the-->
<!--copyright laws.-->
<!---->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1990 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Mass.                                                     *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  This document or any  *-->
<!-- other copies thereof may not be provided or otherwise made         *-->
<!-- available to any other person.  No title to or ownership of the     *-->
<!-- document is hereby transferred.                                    *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by DIGITAL      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_binding_set_auth_info(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h>
#include &lt;dce/sec_login.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_binding_set_auth_info</Function></FuncDef>
<ParamDef>rpc_binding_handle_t <Parameter>binding</Parameter></ParamDef>
<ParamDef>unsigned_char_t *<Parameter>server_princ_name</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>protect_level</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>authn_svc</Parameter></ParamDef>
<ParamDef>rpc_auth_identity_handle_t <Parameter>auth_identity</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>authz_svc</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">binding</Symbol></Term>
<ListItem>
<Para>Specifies the server binding handle for which to set the
authentication and authorization information.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">server_princ_name</Symbol></Term>
<ListItem>
<Para>Specifies the principal name of the server referenced by
<Symbol Role="Variable">binding</Symbol>.  The content of the name and its syntax is
defined by the authentication service in use.
</Para>
<Para>A client that does not know the server principal name can call the
<Function>rpc_mgmt_inq_server_princ_name()</Function> routine to obtain the principal
name of a server that is registered for the required authentication
service.  Using a principal name obtained in this way means that the
client is interested in one-way authentication.  In other words, it
means that the client does not care which server principal received
the remote procedure call request.  The server, though, still verifies
that the client is who the client claims to be.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">protect_level</Symbol></Term>
<ListItem>
<Para>Specifies the protection level for remote procedure
calls made using <Symbol Role="Variable">binding</Symbol>.  The protection level
determines the degree to which authenticated communications
between the client and the server are protected 
by the authentication service specified by <Symbol Role="Variable">authn_svc</Symbol>.
</Para>
<Para><?sml-need 5>If the RPC runtime or the RPC protocol in the bound protocol sequence
does not support a specified level, the level is
automatically upgraded to the next higher supported level.
The possible protection levels are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_default</Literal></Term>
<ListItem>
<Para>Uses the default protection level for the specified
authentication service.
</Para>
<Para><Literal>rpc_c_protect_level_pkt_integ</Literal> is
the default protection level for the 
DCE shared-secret key authentication service. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_none</Literal></Term>
<ListItem>
<Para>Performs no authentication:    
tickets 
are not exchanged, session keys are not established, client 
PACs or names are not certified, 
and transmissions are in the clear.  
Note that although uncertified PACs should not be trusted, 
they may be useful for 
debugging, tracing, and measurement purposes.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_connect</Literal></Term>
<ListItem>
<Para>Performs protection only when the client establishes a
relationship with the server.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_call</Literal></Term>
<ListItem>
<Para>Performs protection only at the beginning of each remote procedure
call when the server receives the request.
</Para>
<Para>This level does not apply to remote procedure calls made over a
connection-based protocol sequence (that is,
<Literal>ncacn_ip_tcp</Literal>).  If this level is specified and the binding
handle uses a connection-based protocol sequence,
the routine uses <Literal>rpc_c_protect_level_pkt</Literal> instead.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt</Literal></Term>
<ListItem>
<Para>Ensures that all data received is from the expected client.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt_integ</Literal></Term>
<ListItem>
<Para>Ensures and verifies that none of the data transferred between
client and server has been modified.
</Para>
<Para>This is the highest protection level that is guaranteed to be
present in the RPC runtime.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt_privacy</Literal></Term>
<ListItem>
<Para>Performs protection as specified by all of the previous levels and
also encrypt each remote procedure call argument value.
</Para>
<Para>This is the highest protection level, but it may not be
available in the RPC runtime.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">authn_svc</Symbol></Term>
<ListItem>
<Para>Specifies the authentication service to use.  
The exact level of protection provided by the 
authentication service is specified by the <Symbol Role="Variable">protect_level</Symbol> 
parameter.
The supported
authentication services are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_none</Literal></Term>
<ListItem>
<Para>No authentication:  no tickets 
are exchanged, no session keys established, client PACs or names 
are not transmitted, and transmissions are in the clear.  
Specify <Literal>rpc_c_authn_none</Literal> to turn authentication off for
remote procedure calls made using <Symbol Role="Variable">binding</Symbol>. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_secret</Literal></Term>
<ListItem>
<Para>DCE shared-secret key authentication.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_default</Literal></Term>
<ListItem>
<Para>DCE default authentication service.
</Para>
<Note>
<Para>The current default authentication service is DCE 
shared-secret key.  Specifying <Literal>rpc_c_authn_default</Literal> is therefore
equivalent to specifying <Literal>rpc_c_authn_dce_secret</Literal>.
</Para>
</Note>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_public</Literal></Term>
<ListItem>
<Para>DCE public key authentication (reserved for future use).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- If \*Lrpc_c_authn_default\*O is specified, the RPC runtime uses-->
<!-- the \*Lrpc_c_authn_dce_secret\*O authentication service for-->
<!-- remote procedure calls made using \*Vbinding\*O.-->
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">auth_identity</Symbol></Term>
<ListItem>
<Para>Specifies a handle for the data structure that contains the client's
authentication and authorization credentials appropriate for the
selected authentication and authorization services.
</Para>
<Para><?sml-need 1.5i>When using the <Literal>rpc_c_authn_dce_secret</Literal> authentication
service and any authorization service,
this value must be a <StructName Role="typedef">sec_login_handle_t</StructName> obtained
from one of the following routines:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Function>sec_login_setup_identity()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>sec_login_get_current_context()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>sec_login_newgroups()</Function>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>Specify NULL to use the default security login context
for the current address space.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">authz_svc</Symbol></Term>
<ListItem>
<Para>Specifies the authorization service implemented by the server for the
interface of interest.  The validity and trustworthiness of
authorization data, like any application data, is dependent on the
authentication service and protection level specified.  The
supported authorization services are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_none</Literal></Term>
<ListItem>
<Para>Server performs no authorization.  This is valid only if
the <Symbol Role="Variable">authn_svc</Symbol> parameter is <Literal>rpc_c_authn_none</Literal>, specifying that 
no authentication is being performed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_name</Literal></Term>
<ListItem>
<Para>Server performs authorization based on the client principal name. 
This value cannot be used if <Symbol Role="Variable">authn_svc</Symbol> is
<Literal>rpc_c_authn_none</Literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_dce</Literal></Term>
<ListItem>
<Para>Server performs authorization using the client's DCE privilege
attribute certificate (PAC) sent to the server with each
remote procedure call made with <Symbol Role="Variable">binding</Symbol>.  Generally,
access is checked against DCE access control lists
(ACLs). 
This value cannot be used if <Symbol Role="Variable">authn_svc</Symbol> is
<Literal>rpc_c_authn_none</Literal>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_binding_set_auth_info()</Function> routine
sets up the specified server binding handle
so that it can be used to make authenticated remote procedure
calls that include authorization information.
</Para>
<Para>Unless a client calls <Function>rpc_binding_set_auth_info()</Function> with the parameters 
to set establish authentication and authorization methods, 
all remote procedure calls made on
the <Symbol Role="Variable">binding</Symbol> binding handle are unauthenticated.  
Some authentication services
(<Symbol Role="Variable">authn_svc</Symbol>) may need to communicate with the security service
to perform this operation.  Otherwise, they may receive the
<Literal>rpc_s_comm_failure</Literal> status. 
</Para>
<Para>The <Symbol Role="Variable">authn_svc</Symbol> parameter specifies the authentication service to use.  
Since currently, there is only one available authentication service 
(DCE shared-secret key), the parameter currently functions to specify whether or not 
rpc calls will be authenticated and client PACs certified.  
If authentication is chosen, the <Symbol Role="Variable">protect_level</Symbol> parameter can specify 
a variety 
of protection levels, ranging from no authentication 
to the highest level of authentication and encryption. 
If the <Symbol Role="Variable">protect_level</Symbol> parameter is set to <Literal>rpc_c_protect_level_none</Literal>, 
no authentication is performed, regardless of the authentication service 
choosen.
</Para>
<Para>The <Symbol Role="Variable">authz_svc</Symbol> parameter specifies the authorization service to use.  
If no authentication has been chosen (<Symbol Role="Variable">authn_svc</Symbol> of <Literal>rpc_c_authn_none</Literal>), 
then no authorization (<Symbol Role="Variable">authz_svc</Symbol> of <Literal>rpc_c_authz_none</Literal>) must be chosen as well.  
If authentication will be performed, you have two choices for authorization: name-based 
authorization and DCE authorization.  The use of name based_authorization, 
which provides a server with a client's principal name, is not 
recommended.  DCE authorization uses PACs, a trusted mechanism for conveying client 
authorization data to authenticated servers.  PACs are designed to be used with the DCE 
ACL facility.  
</Para>
<Para>Whether the call actually wakes up in the server manager code or is
rejected by the runtime depends on following conditions:
</Para>
<ItemizedList>
<ListItem>
<Para>If the client specified no authentication, then none is attempted by
the RPC runtime.  The call wakes up in the manager code whether the
server specified authentication or not.  This permits both
authenticated and unauthenticated clients to call authenticated
servers.  When the manager receives an unauthenticated call, it needs
to make a decision about how to proceed.
</Para>
</ListItem>
<ListItem>
<Para>If the client specified DCE secret key authentication and the server
specified no authentication, then the runtime will fail the call, and
it will never reach the manager routine.
</Para>
</ListItem>
<ListItem>
<Para>If both client and server specified DCE secret key authentication,
then authentication will be carried out by the RPC runtime
transparently.  Whether the call reaches the server manager code or is
rejected by the runtime depends on whether the authentication
succeeded.
</Para>
</ListItem>
</ItemizedList>
<Para>Although the RPC runtime is responsible any authentication that is
carried out, the fact that the runtime will always permit
unauthenticated clients to reach the manager code means that a manager
access function typically does need to make an authentication check.
When the manager access routine calls
<Function>rpc_binding_inq_auth_client()</Function> it needs to check for a
<Symbol Role="Variable">status</Symbol> of <Literal>rpc_s_binding_has_no_auth</Literal>.  In this case, the
client has specified no authentication and the manager access function
needs to make an access decision based on this fact.  Note that in such
a case, no meaningful authentication or authorization information is
returned from <Function>rpc_binding_inq_auth_client()</Function>.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para>Invalid binding handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para>Wrong kind of binding for operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_unknown_authn_service</Literal></Term>
<ListItem>
<Para>Unknown authentication service.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_authn_authz_mismatch</Literal></Term>
<ListItem>
<Para>Requested authorization service is not supported by the requested authentication service.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_unsupported_protect_level</Literal></Term>
<ListItem>
<Para>Requested protection level is not supported.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_binding_inq_auth_client(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_binding_inq_auth_info(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_inq_dflt_protect_level(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_inq_server_princ_name(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_get_current_context(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_newgroups(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_login_setup_identity(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_binding_set_auth_info.3rpc,v 1.1.2.8 1996/12/15 16:22:37 carrig Exp $
    | tagMorph library:  $Id: rpc_binding_set_auth_info.3rpc,v 1.1.2.8 1996/12/15 16:22:37 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
