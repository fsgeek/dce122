<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_rgy_get_codesets.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:27:42  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:13:50  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:41:11  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:16  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:40:24  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:27  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:25:10  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:07:25  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:41:36  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:14  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:01:34  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:09  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:26  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:20:31  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:16:58  weir
# 	Initial submission
# 	[1996/11/29  17:12:34  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN298.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_rgy_get_codesets</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_rgy_get_codesets</Literal></RefName>
<RefPurpose>Gets supported code sets information
from the local host;  used by client and server applications </RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  19:59:28  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:20  wardr]-->
<!---->
<!-- Revision 1.1.2.5  1995/06/07  20:11:59  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:22  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/18  19:04:31  zahn-->
<!-- 	{edt,5284,R1.1}-->
<!-- -->
<!-- 	Added technical review comments.-->
<!-- 	[1994/10/18  19:04:17  zahn]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/13  17:03:57  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:47:48  devobj]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/04/01  19:53:24  zahn-->
<!-- 	{enh,5284,R1.1}-->
<!-- -->
<!-- 	Add documentation for character and code set interoperability.-->
<!-- 	[1994/04/01  19:53:03  zahn]-->
<!-- -->
<!-- .iX "\*Lrpc_rgy_get_codesets(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_rgy_get_codesets</Function></FuncDef>
<ParamDef>rpc_codeset_mgmt_p_t *<Parameter>code_sets_array</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<Para>No input is required.
</Para>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">code_sets_array</Symbol></Term>
<ListItem>
<Para>An integer array that specifies the code sets
that the client's or server's host environment supports.  Each array
element is an integer value that uniquely identifies one code set.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_rgy_get_codesets()</Function> routine belongs to a set of
DCE RPC routines for use by client and server applications
that are transferring international character data
in a heterogeneous character set and code sets environment.
</Para>
<Para>The <Function>rpc_rgy_get_codesets()</Function> routine examines the locale
environment of the host on which the client or server process
is running to determine the local code set currently
in use by the client or server process and the set of supported code set
conversion routines that exist on the host into which the client
or server process can convert if necessary.  It then reads the
code sets registry on the local host to retrieve
the unique identifiers associated with these supported code sets.
</Para>
<Para><?sml-need 6>The routine returns a code sets array.  The set of values returned
in this structure correspond to the process's local code set and
the code sets into which processes that run on this host can convert.
The array also contains, for each code set, the maximum number of
bytes that code set uses to encode one character (<Symbol Role="Variable">c_max_bytes</Symbol>).
</Para>
<Para>Server applications use the <Function>rpc_rgy_get_codesets()</Function> routine in
their initialization code to get their host's supported character
and code sets values in order to export them into the name service
database with <Function>rpc_ns_mgmt_set_attribute()</Function>.
</Para>
<Para>Client applications use the <Function>rpc_rgy_get_codesets()</Function> routine
during the server binding selection process to retrieve the
supported character and code sets at their host in order to
evaluate them against the character and code sets that a server supports.
Client applications that use the evaluation routines
<Function>rpc_cs_eval_with_universal()</Function> and <Function>rpc_cs_eval_without_universal()</Function>
do not need to call this routine explicitly, because these code sets
evaluation routines call it on the client's behalf.  Application developers
who are writing their own character and code set evaluation routines may need
to include <Function>rpc_rgy_get_codesets()</Function> in their user-written evaluation routines.
<?sml-break><?sml-need 1.5i></Para>
<RefSect2>
<Title>Permissions Required</Title>
<Para>No permissions are required.
<?sml-break><?sml-need 1.5i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>dce_cs_c_cannot_open_file</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>dce_cs_c_cannot_read_file</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_memory</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Commands:
<Filename MoreInfo="RefEntry">csrc(8dce)</Filename>.
</Para>
<Para>Functions:
<Filename MoreInfo="RefEntry">rpc_ns_mgmt_read_codesets(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_mgmt_remove_attribute(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_mgmt_set_attribute(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_rgy_get_codesets.3rpc,v 1.1.2.8 1996/12/15 16:27:42 carrig Exp $
    | tagMorph library:  $Id: rpc_rgy_get_codesets.3rpc,v 1.1.2.8 1996/12/15 16:27:42 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
