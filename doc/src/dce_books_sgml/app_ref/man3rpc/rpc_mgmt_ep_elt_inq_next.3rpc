<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_mgmt_ep_elt_inq_next.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:26:14  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:52  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:39:54  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:36:12  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:39:11  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:35:18  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:47  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:06:13  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:40:17  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:36:04  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:32  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:46  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:36  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:33  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:15:25  weir
# 	Initial submission
# 	[1996/11/29  17:11:41  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN239.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_mgmt_ep_elt_inq_next</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_mgmt_ep_elt_inq_next</Literal></RefName>
<RefPurpose>Returns one element from an endpoint map;  used by management applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  19:57:23  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:34:22  wardr]-->
<!---->
<!-- Revision 1.1.6.5  1995/06/07  20:11:08  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:06:12  buckler]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  17:50:39  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:19:51  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:46:18  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  19:56:52  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:44:52  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:28:39  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:45:29  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  16:56:12  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/18  16:48:37  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/18  16:44:34  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:36:16  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Fri.  Dec 6, 1991                 Update file submission for-->
<!--                                    final integration at IBM.-->
<!--                                   -->
<!---->
<!-- ********************************************************************-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *-->
<!-- All rights reserved.                                               *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_mgmt_ep_elt_inq_next(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_mgmt_ep_elt_inq_next</Function></FuncDef>
<ParamDef>rpc_ep_inq_handle_t <Parameter>inquiry_context</Parameter></ParamDef>
<ParamDef>rpc_if_id_t *<Parameter>if_id</Parameter></ParamDef>
<ParamDef>rpc_binding_handle_t *<Parameter>binding</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>object_uuid</Parameter></ParamDef>
<ParamDef>unsigned_char_t **<Parameter>annotation</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">inquiry_context</Symbol></Term>
<ListItem>
<Para>Specifies an inquiry context.  This inquiry context is returned
from the <Function>rpc_mgmt_ep_elt_inq_begin()</Function> routine.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">if_id</Symbol></Term>
<ListItem>
<Para>Returns the interface identifier of the local endpoint map element.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">binding</Symbol></Term>
<ListItem>
<Para>Returns the binding handle from the local endpoint map element.
</Para>
<Para>Specify NULL to prevent the routine from returning this parameter.
In this case the application does not call the
<Function>rpc_binding_free()</Function> routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">object_uuid</Symbol></Term>
<ListItem>
<Para>Returns the object UUID from the local endpoint map element.
</Para>
<Para>Specify NULL to prevent the routine from returning this parameter.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">annotation</Symbol></Term>
<ListItem>
<Para>Returns the annotation string for the local endpoint map element.
If there is no
annotation string in the local endpoint map element, the
string <Literal>\0</Literal> is returned.
</Para>
<Para>Specify NULL to prevent the routine from returning this argument.
In this case the application does not call the
<Function>rpc_string_free()</Function> routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_mgmt_ep_elt_inq_next()</Function> routine returns one element
from the local endpoint map.
Regardless of the selector value specified for
the <Symbol Role="Variable">inquiry_type</Symbol> parameter in
<Function>rpc_mgmt_ep_elt_inq_begin()</Function>, this routine returns all the
components of a selected local endpoint map element.
The <Function>rpc_ep_register()</Function> routine's reference page summarizes
the contents of an element in the local endpoint map.
</Para>
<Para>An application can view all the selected local endpoint map
elements by repeatedly calling
the <Function>rpc_mgmt_ep_elt_inq_next()</Function> routine.  When all the elements have
been viewed, this routine returns an <Literal>rpc_s_no_more_elements</Literal> status.
The returned elements are unordered.
</Para>
<Para>If a remote endpoint map contains elements that include a protocol sequence
that your system does not support, this routine does not return the
elements.
(A protocol sequence is part of the binding information component of an
endpoint map element.)
To receive all possible elements from a remote endpoint map,
your application must run on a system that supports the protocol
sequences included in the elements.
</Para>
<Para>For example, if your system does not support
protocol sequence <Literal>ncacn_ip_tcp</Literal> and a remote endpoint map contains
elements that include this protocol sequence, this routine
does not return these elements to your application.  If your application
ran on a system that supported protocol sequence <Literal>ncacn_ip_tcp</Literal>,
this routine would return the elements.
</Para>
<Para>The RPC runtime allocates memory for the returned <Symbol Role="Variable">binding</Symbol> and
the <Symbol Role="Variable">annotation</Symbol> string on each call to this routine.
The application calls the <Function>rpc_binding_free()</Function>
routine for each returned <Symbol Role="Variable">binding</Symbol> and the <Function>rpc_string_free()</Function>
routine for each returned <Symbol Role="Variable">annotation</Symbol> string.
</Para>
<Para>After viewing the local endpoint map's elements, the application must call
the <Function>rpc_mgmt_ep_elt_inq_done()</Function> routine to delete the
inquiry context.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_cant_perform_op</Literal></Term>
<ListItem>
<Para>Cannot perform the requested operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_comm_failure</Literal></Term>
<ListItem>
<Para>Communications failure.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_database_invalid</Literal></Term>
<ListItem>
<Para>Endpoint map database invalid.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_fault_context_mismatch</Literal></Term>
<ListItem>
<Para>Fault context mismatch.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_invalid_context</Literal></Term>
<ListItem>
<Para>Invalid inquiry type for this context.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_invalid_entry</Literal></Term>
<ListItem>
<Para>Invalid database entry.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_arg</Literal></Term>
<ListItem>
<Para>Invalid argument.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_inquiry_context</Literal></Term>
<ListItem>
<Para>Invalid inquiry context.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_inquiry_type</Literal></Term>
<ListItem>
<Para>Invalid inquiry type.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_more_elements</Literal></Term>
<ListItem>
<Para>No more elements.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_binding_free(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_register(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_register_no_replace(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_ep_elt_begin(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_ep_elt_done(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_string_free(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_mgmt_ep_elt_inq_next.3rpc,v 1.1.2.8 1996/12/15 16:26:14 carrig Exp $
    | tagMorph library:  $Id: rpc_mgmt_ep_elt_inq_next.3rpc,v 1.1.2.8 1996/12/15 16:26:14 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
