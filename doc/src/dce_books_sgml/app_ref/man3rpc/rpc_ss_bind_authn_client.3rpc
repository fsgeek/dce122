<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_ss_bind_authn_client.3rpc,v $
# Revision 1.1.2.9  1996/12/15  16:29:28  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:14:25  carrig]
#
# Revision 1.1.2.8  1996/12/11  20:41:41  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:44  wardr]
# 
# Revision 1.1.2.7  1996/12/10  22:40:57  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:53  wardr]
# 
# Revision 1.1.2.6  1996/12/09  22:25:42  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:07:55  wardr]
# 
# Revision 1.1.2.5  1996/12/06  20:36:44  carrig
# 	{enh,R1.2.2}
# 	Fixed typo
# 	[1996/12/06  20:36:27  carrig]
# 
# Revision 1.1.2.4  1996/12/04  21:42:05  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:42  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:01:58  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:40  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:47  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:20:55  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:17:35  weir
# 	Initial submission
# 	[1996/11/29  17:12:57  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN323.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_ss_bind_authn_client</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_ss_bind_authn_client</Literal></RefName>
<RefPurpose>Authenticates a client's identity to a server
from a client stub;  a pointer to the server binding handle for the remote procedure call
to which the routine will add authentication and authorization context</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!-- src directory for the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  19:59:58  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:45  wardr]-->
<!---->
<!-- Revision 1.1.2.5  1995/06/21  15:21:58  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/21  13:43:52  buckler]-->
<!-- -->
<!-- Revision 1.1.2.4  1995/06/07  20:12:25  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:50  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/07/21  16:37:30  zahn-->
<!-- 	{enh,10505,R1.1}-->
<!-- -->
<!-- 	Made some content edits.-->
<!-- 	[1994/07/21  16:37:12  zahn]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/07/20  21:11:05  zahn-->
<!-- 	{enh,10505,R1.1}-->
<!-- -->
<!-- 	Initial reference documentation for the DCE-supplied-->
<!-- 	binding callout routine rpc_ss_bind_authn_client().-->
<!-- 	[1994/07/20  21:10:43  zahn]-->
<!-- -->

<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;rpc.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_ss_bind_authn_client</Function></FuncDef>
<ParamDef>rpc_binding_handle_t *<Parameter>binding</Parameter></ParamDef>
<ParamDef>if_handle_t <Parameter>if_handle</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">binding</Symbol></Term>
<ListItem>
<Para>A pointer to the server binding handle for the remote procedure call
to which the routine will add authentication and authorization context.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">if_handle</Symbol></Term>
<ListItem>
<Para>A stub-generated data structure that specifies the interface
of interest.  The routine can use this parameter to
resolve a partial binding or to distinguish between interfaces.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_ss_bind_authn_client()</Function> routine is a DCE-supplied
binding callout routine for use with the <Literal>binding_callout</Literal>
ACF interface attribute.
</Para>
<Para>The <Literal>binding_callout</Literal> attribute enables applications to
specify the name of a routine that the client stub will call
automatically to modify a server binding handle with additional
information before it initiates a remote procedure call.
This attribute is especially useful for applications using
the automatic binding method, where it is the client stub
that obtains the binding handle, rather than the application code.
The <Literal>binding_callout</Literal> attribute provides these applications
with a way to gain access to a server binding handle from the client
stub, since the handle is not accessible from the application code.
</Para>
<Para>Applications can specify <Function>rpc_ss_bind_authn_client()</Function> to
the <Literal>binding_callout</Literal> ACF interface attribute in order to
authenticate the client's identity to a server from the client stub
before the remote procedure call to the server is initiated.
This routine performs one-way authentication: the client does
not care which server principal receives the remote procedure
call request, but the server verifies that the client is who
the client claims to be.
</Para>
<Para>The routine sets the protection level used, the authentication identity,
and the authentication service used to their default values.  See the
<Filename MoreInfo="RefEntry">rpc_binding_set_auth_info(3rpc)</Filename> reference page for more
information on these default values.  It sets the authorization service
to perform authorization based on the client's principal name.
</Para>
<Para>Applications can also specify user-written binding callout routines
with the <Literal>binding_callout</Literal> attribute to modify server binding handles
from client stubs with other types of information.  For more 
information on using the <Literal>binding_callout</Literal> ACF attribute,
see the &DCEDk;. 
</Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>None.
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_more_bindings</Literal></Term>
<ListItem>
<Para>Directs the client stub not to look for another server binding.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: 
<Filename MoreInfo="RefEntry">rpc_binding_set_auth_info(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_resolve_binding(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_inq_server_princ_name(3rpc)</Filename>.
</Para>
<Para>Books:
&DCEDi;,
&DCEDk;.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_ss_bind_authn_client.3rpc,v 1.1.2.9 1996/12/15 16:29:28 carrig Exp $
    | tagMorph library:  $Id: rpc_ss_bind_authn_client.3rpc,v 1.1.2.9 1996/12/15 16:29:28 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
