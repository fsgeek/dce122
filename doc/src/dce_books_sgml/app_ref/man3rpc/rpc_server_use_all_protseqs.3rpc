<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_server_use_all_protseqs.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:33:42  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:14:08  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:41:23  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:27  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:40:35  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:36  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:25:21  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:07:36  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:41:46  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:25  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:01:43  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:22  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:34  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:20:40  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:17:12  weir
# 	Initial submission
# 	[1996/11/29  17:12:42  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN307.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_server_use_all_protseqs</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_server_use_all_protseqs</Literal></RefName>
<RefPurpose>Tells the RPC runtime to use
all supported protocol sequences for receiving remote procedure calls;  used by server applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  19:59:39  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:30  wardr]-->
<!---->
<!-- Revision 1.1.6.7  1995/06/07  20:12:12  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:32  buckler]-->
<!-- -->
<!-- Revision 1.1.6.5  1994/10/19  20:15:33  neilson-->
<!-- 	CR 10326 - Automatic fix to name of intro ref page-->
<!-- 	[1994/10/19  20:09:16  neilson]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/01/27  16:55:48  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:34:43  cjd]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  19:06:08  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:34:43  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:57:37  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  20:10:00  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:53:32  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:32:11  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:55:18  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  17:02:38  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/19  15:51:19  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/19  15:43:32  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:38:30  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Fri.  Dec 6, 1991                 Update file submission for-->
<!--                                    final integration at IBM.-->
<!-- -->
<!-- ********************************************************************-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *-->
<!-- All rights reserved.                                               *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_server_use_all_protseqs(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_server_use_all_protseqs</Function></FuncDef>
<ParamDef>unsigned32 <Parameter>max_call_requests</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">max_call_requests</Symbol></Term>
<ListItem>
<Para>Specifies the maximum number of concurrent remote procedure call requests
that the server can accept.
</Para>
<Para>The RPC runtime guarantees that the server can accept at least this
number of concurrent call requests.  The actual number of these requests can
be greater than the value of <Symbol Role="Variable">max_call_requests</Symbol> and can vary
for each protocol sequence.
</Para>
<Para>Use the value <Literal>rpc_c_protseq_max_reqs_default</Literal> to specify the default
parameter value.
</Para>
<Para>Note that in this version of DCE RPC, any number you specify is
replaced by the default value.
</Para>
<Para>Also, the <Function>rpc_server_listen()</Function> routine limits (according to its
<Symbol Role="Variable">max_calls_exec</Symbol> parameter) the amount of concurrent remote
procedure call execution.
See the <Filename MoreInfo="RefEntry">rpc_server_listen(3rpc)</Filename> reference page for more information.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_server_use_all_protseqs()</Function> routine registers all supported
protocol sequences with the RPC runtime.  A server must register at least one
protocol sequence with the RPC runtime to receive remote procedure
call requests.
</Para>
<Para>For each protocol sequence registered by a server, the RPC runtime creates
one or more binding handles.
Each binding handle contains a dynamic endpoint
that the RPC runtime and operating system generated.
</Para>
<Para>The <Symbol Role="Variable">max_call_requests</Symbol> parameter allows you to specify the maximum
number of concurrent remote procedure call requests the server handles.
</Para>
<Para>After registering protocol sequences, a server typically calls the
following routines:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Function>rpc_server_inq_bindings()</Function></Term>
<ListItem>
<Para>Obtains a vector containing
all of the server's binding handles.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>rpc_ep_register()</Function></Term>
<ListItem>
<Para>Registers the
binding handles with the local endpoint map.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>rpc_ep_register_no_replace()</Function></Term>
<ListItem>
<Para>Registers the
binding handles with the local endpoint map.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>rpc_ns_binding_export()</Function></Term>
<ListItem>
<Para>Places the binding handles in the
name service database for access by any client.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>rpc_binding_vector_free()</Function></Term>
<ListItem>
<Para>Frees the vector of server binding handles.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>rpc_server_register_if()</Function></Term>
<ListItem>
<Para>Registers with the RPC runtime
those interfaces that the server offers.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Function>rpc_server_listen()</Function></Term>
<ListItem>
<Para>Enables the reception of remote procedure calls.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>To register protocol sequences selectively, a server calls
one of the following routines:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Function>rpc_server_use_protseq()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>rpc_server_use_all_protseqs_if()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>rpc_server_use_protseq_if()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>rpc_server_use_protseq_ep()</Function>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>For an explanation of how a server can establish a
client/server relationship without using the local endpoint map or
the name service database, see the information on string bindings in 
the <Filename MoreInfo="RefEntry">rpc_intro(3rpc)</Filename> reference page.
<?sml-break><?sml-need .8i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_cant_create_socket</Literal></Term>
<ListItem>
<Para>Cannot create socket.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_max_descs_exceeded</Literal></Term>
<ListItem>
<Para>Exceeded maximum number of network descriptors.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_protseqs</Literal></Term>
<ListItem>
<Para>No supported protocol sequences.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_binding_from_string_binding(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_binding_to_string_binding(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_binding_vector_free(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_register(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_register_no_replace(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_export(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_inq_bindings(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_listen(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_register_if(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_all_protseqs_if(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_protseq(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_protseq_ep(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_server_use_protseq_if(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_server_use_all_protseqs.3rpc,v 1.1.2.8 1996/12/15 16:33:42 carrig Exp $
    | tagMorph library:  $Id: rpc_server_use_all_protseqs.3rpc,v 1.1.2.8 1996/12/15 16:33:42 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
