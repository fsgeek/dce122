<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_binding_inq_auth_caller.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:22:31  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:17  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:39:23  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:35:42  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:38:37  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:34:48  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:12  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:05:42  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:39:45  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:35:35  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:04  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:13  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:14  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:07  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:14:42  weir
# 	Initial submission
# 	[1996/11/29  17:11:18  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN216.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_binding_inq_auth_caller</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_binding_inq_auth_caller</Literal></RefName>
<RefPurpose>Returns authentication and authorization
information from the binding handle for an authenticated client;  used by server applications</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.6.2  1996/11/18  19:56:25  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:33:54  wardr]-->
<!---->
<!-- Revision 1.1.6.1  1996/05/13  18:07:16  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  18:03:52  wardr]-->
<!-- -->
<!-- Revision 1.1.4.2  1996/02/07  20:17:47  rcb-->
<!-- 	R1.2.1: editorial pass following HP revision-->
<!-- 	[1996/02/07  20:12:19  rcb]-->
<!-- -->
<!-- Revision 1.1.4.1  1996/01/28  22:01:06  weir-->
<!-- 	CR 13293: miscellaneous HP work-->
<!-- 	[1996/01/28  22:00:36  weir]-->
<!-- -->
<!-- Revision 1.1.2.5  1995/06/07  20:10:39  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:05:41  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  17:04:13  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:16  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/05/11  20:01:04  jshirley-->
<!-- 	No change.-->
<!-- 	[1994/05/11  20:00:12  jshirley]-->
<!-- -->
<!-- 	Just looked at file.-->
<!-- -->
<!-- Revision 1.1.2.1  1994/05/10  18:35:49  millette-->
<!-- 	(enh, 10515, R1.1)-->
<!-- 	added for delegation-->
<!-- 	[1994/05/10  18:34:14  millette]-->
<!-- -->
<!-- -->
<!-- -->
<!-- HP History:-->
<!--	HP revision /main/HPDCE02/1  1995/11/14  17:05 UTC  millett-->
<!-- 	07700:   clarifying status codes-->
<!-- -->
<!--	HP revision /main/1  1995/04/03  22:07 UTC  arh-->
<!-- 	Add OSF doc sources.-->
<!-- -->
<!-- -->
<!-- -->
<!-- .iX "\*Lrpc_binding_inq_auth_caller(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h>
#include &lt;dce/id_base.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_binding_inq_auth_caller</Function></FuncDef>
<ParamDef>rpc_binding_handle_t <Parameter>binding_handle</Parameter></ParamDef>
<ParamDef>rpc_authz_cred_handle_t *<Parameter>privs</Parameter></ParamDef>
<ParamDef>unsigned_char_p_t *<Parameter>server_princ_name</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>protect_level</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>authn_svc</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>authz_svc</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">binding_handle</Symbol></Term>
<ListItem>
<Para>Specifies the client binding handle from which to return the
authentication and authorization information.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">privs</Symbol></Term>
<ListItem>
<Para>Returns an opaque handle to the authorization information for the client
that made the remote procedure call on <Symbol Role="Variable">binding_handle</Symbol>.  
</Para>
<Para><!-- .PP-->
<!-- The server must cast this handle to the data type specified by-->
<!-- \*Vauthz_svc\*O.  The following table shows how to cast the return value.-->
<!-- .br-->
<!-- .ne 15-->
<!-- .TB "Casts for Authorization Information"-->
<!-- .in -0.4i-->
<!-- .TS-->
<!-- center, box, tab(@);-->
<!-- cb s s-->
<!-- lb | lb | lb-->
<!-- lb | l | lb.-->
<!-- Casts for Authorization Information-->
<!-- _-->
<!-- For \*Vauthz_svc value\*L:\*O@\*Vprivs\*L contains this data:\*O@Use this cast:-->
<!-- _-->
<!-- \*Lrpc_c_authz_none\*O@A \*LNULL\*O value.@\*ONone-->
<!-- rpc_c_authz_name@The calling client's@(unsigned_char_t *)-->
<!-- @principal name.-->
<!-- rpc_c_authz_dce@The calling client's@(sec_id_pac_t *)-->
<!-- @privilege attribute@-->
<!-- @certificate.@-->
<!-- .TE-->
<!-- .in +0.5i -->
<!-- Note that \fBrpc_c_authz_none\fR is valid only if-->
<!-- the \*Vauthn_svc\*O parameter is \*Lrpc_c_authn_none\*O.-->
<!-- .PP-->
The data referenced by this parameter are read-only and should not be
modified by the server.  If the server wants to preserve any
of the returned data, it must copy the data into server-allocated
memory.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">server_princ_name</Symbol></Term>
<ListItem>
<Para>Returns a pointer to the server principal name specified by the
client that made the remote procedure call on <Symbol Role="Variable">binding_handle</Symbol>.
The content of the returned name and its syntax are
defined by the authentication service in use.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.  In this case, the caller does not have to call
the <Function>rpc_string_free()</Function> routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">protect_level</Symbol></Term>
<ListItem>
<Para>Returns the protection level requested by the client that made the
remote procedure call on <Symbol Role="Variable">binding</Symbol>.  The protection level
determines the degree to which authenticated communications
between the client and the server are protected.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.
</Para>
<Para>The possible protection levels are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_default</Literal></Term>
<ListItem>
<Para>Uses the default protection level for the specified
authentication service.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_none</Literal></Term>
<ListItem>
<Para>Performs no protection.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_connect</Literal></Term>
<ListItem>
<Para>Performs protection only when the client establishes a
relationship with the server.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_call</Literal></Term>
<ListItem>
<Para>Performs protection only at the beginning of each remote procedure
call when the server receives the request.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt</Literal></Term>
<ListItem>
<Para>Ensures that all data received is from the expected client.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt_integ</Literal></Term>
<ListItem>
<Para>Ensures and verifies that none of the data transferred between
client and server has been modified.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_protect_level_pkt_privacy</Literal></Term>
<ListItem>
<Para>Performs protection as specified by all of the previous levels and
also encrypt each remote procedure call argument value.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">authn_svc</Symbol></Term>
<ListItem>
<Para>Returns the authentication service requested by the client
that made the remote procedure call on <Symbol Role="Variable">binding</Symbol>.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.
</Para>
<Para>The possible authentication services are as follows:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_none</Literal></Term>
<ListItem>
<Para>No authentication.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_secret</Literal></Term>
<ListItem>
<Para>DCE shared-secret key authentication.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_dce_public</Literal></Term>
<ListItem>
<Para>DCE public key authentication (reserved for future use).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authn_default</Literal></Term>
<ListItem>
<Para>DCE default authentication service.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">authz_svc</Symbol></Term>
<ListItem>
<Para>Returns the authorization service requested by the client
that made the remote procedure call on <Symbol Role="Variable">binding_handle</Symbol>.
</Para>
<Para>Specifying NULL prevents the routine from returning
this parameter.
</Para>
<Para>The possible authorization services are as follows:  
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_c_authz_none</Literal></Term>
<ListItem>
<Para>Server performs no authorization.  
This is valid only if the <Symbol Role="Variable">authn_svc</Symbol> parameter is <Literal>rpc_c_authn_none</Literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_name</Literal></Term>
<ListItem>
<Para>Server performs authorization based on the client principal name.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_c_authz_dce</Literal></Term>
<ListItem>
<Para>Server performs authorization by using the client's DCE privilege
attribute certificate (PAC) sent to the server with each
remote procedure call made with <Symbol Role="Variable">binding_handle</Symbol>.  Generally,
access is checked against DCE access control lists (ACLs).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
<Para><?sml-need 3>The possible status codes and their meanings are as follows:
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>The routine completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para>The routine did not complete because of an invalid binding handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para>The routine did not complete because of the wrong kind of binding was specified for the operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_binding_has_no_auth</Literal></Term>
<ListItem>
<Para>The routine completed successfully, but the binding has no authentication information.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_binding_inq_auth_caller()</Function> routine returns
authentication and authorization information associated with
the client identified by <Symbol Role="Variable">binding_handle</Symbol>.  
The calling server manager routine can use the returned
data for authorization purposes.
</Para>
<Para>If the client is part of a delegation chain, the 
call returns the authentication and authorization information 
for each member of the chain, the initiator and 
all subsequent delegates.  You can use the <Function>sec_cred_get_initiator()</Function> 
or <Function>sec_cred_get_delegate()</Function> calls to obtain the 
authorization information for a specific member of the chain.
</Para>
<Para>The RPC runtime allocates memory for the returned
<Symbol Role="Variable">server_princ_name</Symbol> parameter.  The server is responsible for
calling the <Function>rpc_string_free()</Function> routine for the returned
parameter string.
</Para>
<Para>For applications in which the client side uses the Interface Definition
Language (IDL) <Literal>auto_handle</Literal> or
<Literal>implicit_handle</Literal> attributes, the server side needs to be built
with the IDL <Literal>explicit_handle</Literal> attribute specified in the
attribute configuration file (ACF).  Using
<Literal>explicit_handle</Literal> provides <Symbol Role="Variable">binding_handle</Symbol> as the
first parameter to each server manager routine.
<?sml-break></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>rpc_s_binding_has_no_auth</Literal> </Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_login_s_default_use</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>sec_login_s_context_invalid</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>error_status_ok</Literal></Term>
<ListItem>
<Para></Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_binding_inq_auth_info(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_binding_set_auth_info(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_string_free(3rpc)</Filename>, 
<Filename MoreInfo="RefEntry">sec_cred_get_initiator(3sec)</Filename>,
<Filename MoreInfo="RefEntry">sec_cred_get_delegate(3sec)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_binding_inq_auth_caller.3rpc,v 1.1.2.8 1996/12/15 16:22:31 carrig Exp $
    | tagMorph library:  $Id: rpc_binding_inq_auth_caller.3rpc,v 1.1.2.8 1996/12/15 16:22:31 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
