<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_cs_eval_without_universal.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:42:38  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:35  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:39:38  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:35:57  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:38:53  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:35:03  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:31  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:05:58  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:40:00  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:35:50  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:17  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:29  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:25  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:19  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:15:03  weir
# 	Initial submission
# 	[1996/11/29  17:11:29  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN229.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_cs_eval_without_universal</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_cs_eval_without_universal</Literal></RefName>
<RefPurpose>Evaluates a server's supported
character sets and code sets during the server binding selection process;  used indirectly by client applications</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  19:56:51  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:34:08  wardr]-->
<!---->
<!-- Revision 1.1.2.8  1995/06/21  13:20:22  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  19:47:11  buckler]-->
<!-- -->
<!-- Revision 1.1.2.7  1995/06/07  20:10:50  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:05:58  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/18  21:59:46  zahn-->
<!-- 	{edt,5284,R1.1}-->
<!-- -->
<!-- 	Added technical review comments.-->
<!-- 	[1994/10/18  21:59:24  zahn]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/08/22  17:53:17  zahn-->
<!-- 	{edt,5284,R1.1}-->
<!-- -->
<!-- 	Made a couple of corrections for new functionality.-->
<!-- 	[1994/08/22  17:52:54  zahn]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/08/12  16:54:31  zahn-->
<!-- 	{edt,5284,R1.1}-->
<!-- -->
<!-- 	Removed rpc_cs_eval_with_universal() from-->
<!-- 	related functions list and made a couple of-->
<!-- 	corrections.-->
<!-- 	[1994/08/12  16:54:11  zahn]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/13  17:04:10  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:11  devobj]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/04/13  21:22:21  zahn-->
<!-- 	{enh,5284,R1.1}-->
<!-- -->
<!-- 	Document character/code set interoperability functions.-->
<!-- 	[1994/04/13  21:21:53  zahn]-->
<!-- -->
<!-- .iX "\*Lrpc_cs_eval_without_universal(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_cs_eval_without_universal</Function></FuncDef>
<ParamDef>rpc_ns_handle_t <Parameter>binding_handle</Parameter></ParamDef>
<ParamDef>idl_void_p_t <Parameter>eval_args</Parameter></ParamDef>
<ParamDef>idl_void_p_t *<Parameter>context</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">binding_handle</Symbol></Term>
<ListItem>
<Para>The server binding handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">eval_args</Symbol></Term>
<ListItem>
<Para>An opaque data type that contains matching criteria
that the routine uses to perform code sets
compatibility evaluation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Input/Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">context</Symbol></Term>
<ListItem>
<Para>An opaque data type that contains search context to perform character
and code sets compatibility evaluation.  The routine returns the
result of the evaluation in a field within <Symbol Role="Variable">context</Symbol>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_cs_eval_without_universal()</Function> routine is a DCE RPC character
and code sets evaluation routine that can be added to an import context.
The routine provides a mechanism for a client application that is
passing character data in a heterogeneous character set and code sets
environment to evaluate a server's character and code sets compatibility
before establishing a connection with it.
</Para>
<Para><?sml-need 8>Client applications do not call <Function>rpc_cs_eval_without_universal()</Function> directly.
Instead, they add it to the
import context created by the <Function>rpc_ns_binding_import_begin()</Function> routine
by calling the routine <Function>rpc_ns_import_ctx_add_eval()</Function> and
specifying the routine name and the RPC server entry name to be
evaluated.
When the client application calls the <Function>rpc_ns_binding_import_next()</Function>
routine to import compatible binding handles for servers, this routine
calls <Function>rpc_cs_eval_without_universal()</Function>, which applies client-server code
sets compatibility checking as another criteria for compatible binding selection.
</Para>
<Para>The <Function>rpc_cs_eval_without_universal()</Function> routine directs the routine
<Function>rpc_ns_binding_import_next()</Function> to reject servers
with incompatible character sets. 
The routine also directs the <Function>rpc_ns_binding_import_next()</Function> routine
to reject servers whose supported code sets are incompatible with
the client's supported code sets; that is, it does not resort
to using an intermediate code set as a last resort.
</Para>
<Note>
<Para>Application programmers need not pay attention to
the arguments of this routine.  Programmers only need to
use the routine <Function>rpc_ns_import_ctx_add_eval()</Function>
to set the routine, for example:
</Para>
<InformalExample>
<Para><ProgramListing>rpc_ns_import_ctx_add_eval(
&amp;import_context,
rpc_c_eval_type_codesets,
(void *) nsi_entry_name,
rpc_cs_eval_without_universal,
NULL,
&amp;status);
</ProgramListing></Para>
</InformalExample>
</Note>
<RefSect2>
<Title>Permissions Required</Title>
<Para>No permissions are required.
<?sml-break><?sml-need .8i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_cs_get_tags(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_import_begin(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_import_done(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_import_next(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_import_ctx_add_eval(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_mgmt_handle_set_exp_age(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_cs_eval_without_universal.3rpc,v 1.1.2.8 1996/12/15 16:42:38 carrig Exp $
    | tagMorph library:  $Id: rpc_cs_eval_without_universal.3rpc,v 1.1.2.8 1996/12/15 16:42:38 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
