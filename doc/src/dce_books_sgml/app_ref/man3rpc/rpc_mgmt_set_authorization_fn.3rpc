<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_mgmt_set_authorization_fn.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:26:22  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:12:03  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:40:03  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:36:21  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:39:21  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:35:27  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:58  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:06:23  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:40:26  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:36:15  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:41  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:59  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:43  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:41  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:15:40  weir
# 	Initial submission
# 	[1996/11/29  17:11:48  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN247.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_mgmt_set_authorization_fn</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_mgmt_set_authorization_fn</Literal></RefName>
<RefPurpose>Establishes an authorization function for processing
remote calls to a server's management routines;  used by server applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.10.1  1996/11/18  19:57:40  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:34:30  wardr]-->
<!---->
<!-- Revision 1.1.8.6  1995/06/21  13:20:30  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  20:12:47  buckler]-->
<!-- -->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/19  16:26:40  buckler]-->
<!-- -->
<!-- Revision 1.1.8.5  1995/06/07  20:11:14  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:06:22  buckler]-->
<!-- -->
<!-- Revision 1.1.8.3  1994/07/14  19:04:30  jshirley-->
<!-- 	{def,10220,R1.1}-->
<!-- 	Removed ref. to rpcd and sec_clientd.-->
<!-- 	[1994/07/14  19:02:00  jshirley]-->
<!-- -->
<!-- Revision 1.1.8.2  1993/08/19  18:21:08  buckler-->
<!-- 	{edit, R1.0.3}-->
<!-- 	Fixed a formatting error (font problem).-->
<!-- 	[1993/08/19  18:08:54  buckler]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  17:51:01  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:20:50  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:47:09  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  19:58:48  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:45:47  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:29:13  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:46:47  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  16:57:24  oaf]-->
<!-- -->
<!-- Revision 1.1.2.7  1992/06/23  18:53:37  mcdonald-->
<!-- 	Changes made:           None.  The text between [] symbols in the last-->
<!-- 	                           line of this log message belongs in the same-->
<!-- 	                           place in the log message of a few minutes ago.-->
<!-- 	File name:              src/app_ref/man3rpc/rpc_mgmt_set_authorization_fn.3rpc-->
<!-- 	Change Request Number:  4301 [4301 extends modifications from CR #2532.]-->
<!-- 	[1992/06/23  18:51:42  mcdonald]-->
<!-- -->
<!-- Revision 1.1.2.6  1992/06/23  18:32:38  mcdonald-->
<!-- 	Changes made:            Add explanation of application-defined-->
<!-- 	                             authorization function-->
<!-- 	File name:               src/app_ref/man3rpc/rpc_mgmt_set_authorization_fn.3rpc-->
<!-- 	Change Request Number:   4301-->
<!-- 	[1992/06/23  18:31:00  mcdonald]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/06/05  15:49:21  mcdonald-->
<!-- 	Changes made:            None.  Change Request #3566 indicated replacing-->
<!-- 	                         status code rpc_s_not_authorized with-->
<!-- 	                         rpc_s_mgmt_op_disallowed, but rpc_s_not_authorized-->
<!-- 	                         was deleted by an earlier bco/bci/bsubmit process.-->
<!-- 	File name:               src/app_ref/man3rpc/rpc_mgmt_set_authorization_fn.3rpc-->
<!-- 	Change Request Number:   3566-->
<!-- 	[1992/06/05  15:47:45  mcdonald]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/06/02  13:04:45  buckler-->
<!-- 	Reinstated change bar codes-->
<!-- 	[1992/06/02  13:03:34  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/18  16:49:18  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/18  16:45:20  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/04/17  21:58:20  millette-->
<!-- 	Bug 2532:  Clarified code returned if-->
<!-- 	authorization is denied.-->
<!-- 	[1992/04/17  17:38:31  millette]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:36:34  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--Copyright Hewlett-Packard Company 1991-->
<!---->
<!--All Rights Reserved.  Reproduction, adaptation,-->
<!--or translation without prior written permission-->
<!--is prohibited, except as allowed under the-->
<!--copyright laws.-->
<!---->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1990 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Mass.                                                     *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  This document or any  *-->
<!-- other copies thereof may not be provided or otherwise made         *-->
<!-- available to any other person.  No title to or ownership of the     *-->
<!-- document is hereby transferred.                                    *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by DIGITAL      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_mgmt_set_authorization_fn(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>void </Literal>rpc_mgmt_set_authorization_fn</Function></FuncDef>
<ParamDef>rpc_mgmt_authorization_fn_t <Parameter>authorization_fn</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">authorization_fn</Symbol></Term>
<ListItem>
<Para>Specifies a pointer to an authorization function.  The RPC server
runtime automatically calls this function whenever the server runtime
receives a client request to execute one of the RPC management
routines.
</Para>
<Para>Specify NULL to unregister a previously registered
authorization function.  In this case, the default authorizations
(as described later) are used.
</Para>
<Para>The following C definition for
<StructName Role="typedef">rpc_mgmt_authorization_fn_t</StructName> illustrates the prototype for
the authorization function:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>typedef boolean32 (*rpc_mgmt_authorization_fn_t)
  (
   rpc_binding_handle_t client_binding,	/* in  */
   unsigned32 requested_mgmt_operation,	/* in  */
   unsigned32 *status			/* out */
  );
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>The following table shows the <Symbol Role="Variable">requested_mgmt_operation</Symbol>
values passed by the RPC runtime to the authorization function.
<!-- .TB "Operation Values Passed to Authorization Function"-->
</Para>
<?sml-need 10>
<?sml-indent -6m>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colwidth="1*" Colname="col1" Colnum="1">
<ColSpec Rowsep="1" Align="Left" Colwidth="1*" Colname="col2" Colnum="2">
<TBody>
<Row>
<Entry Rowsep="1" Colsep="0" Align="Center" Namest="col1" Nameend="col2"><Literal>Operation Values Passed to Authorization Function</Literal></Entry>
<Entry Rowsep="1"></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Called Remote Routine</Literal></Entry>
<Entry Rowsep="1"><Symbol Role="Variable">requested_mgmt_operation </Symbol><Literal>Value</Literal></Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_inq_if_ids()</Function></Entry>
<Entry><Literal>rpc_c_mgmt_inq_if_ids</Literal></Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_inq_server_princ_name()</Function></Entry>
<Entry><Literal>rpc_c_mgmt_inq_princ_name</Literal></Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_inq_stats()</Function></Entry>
<Entry><Literal>rpc_c_mgmt_inq_stats</Literal></Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_is_server_listening()</Function></Entry>
<Entry><Literal>rpc_c_mgmt_is_server_listen</Literal></Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_stop_server_listening()</Function></Entry>
<Entry><Literal>rpc_c_mgmt_stop_server_listen</Literal></Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<?sml-indent>
<?sml-space .5>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_mgmt_set_authorization_fn()</Function> routine sets up an
authorization function to control remote access to the calling
server's remote management routines.
</Para>
<Para>If a server does not provide an authorization function, the RPC
runtime controls client application access to the server's remote
management routines as shown in the next table.  In the table, an
<Replaceable>enabled</Replaceable> authorization allows all clients to execute the remote
routine and a <Replaceable>disabled</Replaceable> authorization prevents all clients from
executing the remote routine.
<?sml-need 10>
<!-- .TB "Default Controls for Remote Management Routines"-->
</Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colwidth="1*" Colname="col1" Colnum="1">
<ColSpec Rowsep="1" Align="Center" Colwidth="1*" Colname="col2" Colnum="2">
<TBody>
<Row>
<Entry Rowsep="1" Colsep="0" Align="Center" Namest="col1" Nameend="col2"><Literal>Default Controls for Remote Management Routines</Literal></Entry>
<Entry Rowsep="1"></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Remote Routine</Literal></Entry>
<Entry Rowsep="1" Align="Left"><Literal>Default Authorization</Literal></Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_inq_if_ids()</Function></Entry>
<Entry>Enabled</Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_inq_server_princ_name()</Function></Entry>
<Entry>Enabled</Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_inq_stats()</Function></Entry>
<Entry>Enabled</Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_is_server_listening()</Function></Entry>
<Entry>Enabled</Entry>
</Row>
<Row>
<Entry><Function>rpc_mgmt_stop_server_listening()</Function></Entry>
<Entry>Disabled</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<Para>A server can modify the default authorizations by calling
<Function>rpc_mgmt_set_authorization_fn()</Function> to specify an
authorization function.  When an authorization function is provided,
the RPC runtime automatically calls that function to control the
execution of all remote management routines called by clients.
</Para>
<Para>The specified function must provide access control for
all of the remote management routines.
</Para>
<Para><?sml-need 8>If the authorization function returns TRUE, the management routine is
allowed to execute.  If the authorization function returns FALSE, the
management routine does not execute,
and the called routine returns
to the client the status code returned from the
<StructName Role="typedef">rpc_mgmt_authorization_fn_t</StructName> function.
However, if the status code that the
<StructName Role="typedef">rpc_mgmt_authorization_fn_t</StructName> function returns is 0 (zero)
or <Literal>rpc_s_ok</Literal>,
then the status code <Literal>rpc_s_mgmt_op_disallowed</Literal> is
returned to the client.
</Para>
<Para>The RPC runtime calls the server-provided authorization
function with the following two input arguments:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>The binding handle of the calling client.
</Para>
</ListItem>
<ListItem>
<Para>An integer value denoting which management routine
the client has called.
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>Using these arguments, the authorization function
determines whether the calling client is allowed to
execute the requested management routine.  For example,
the authorization function can call
<Function>rpc_binding_inq_auth_client()</Function>
to obtain authentication and authorization
information about the calling client and determine
if that client is authorized to execute the requested
management routine.
<!-- Note that since the \*Lrpc_mgmt_ep_*\*O routines are-->
<!-- implemented by the RPC Daemon (\*Lrpcd\*O), access to the-->
<!-- \*Lrpc_mgmt_ep_*\*O routines cannot be controlled-->
<!-- using an authorization function.-->
<!-- .PP-->
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_mgmt_ep_unregister(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_inq_if_ids(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_inq_server_princ_name(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_inq_stats(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_is_server_listening(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_stop_server_listening(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_mgmt_set_authorization_fn.3rpc,v 1.1.2.8 1996/12/15 16:26:22 carrig Exp $
    | tagMorph library:  $Id: rpc_mgmt_set_authorization_fn.3rpc,v 1.1.2.8 1996/12/15 16:26:22 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
