<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_ss_free.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:29:32  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:14:31  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:41:46  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:49  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:41:02  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:59  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:25:48  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:08:00  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:42:10  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:48  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:02:03  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:46  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:50  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:21:00  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:17:44  weir
# 	Initial submission
# 	[1996/11/29  17:13:01  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN328.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_ss_free</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_ss_free</Literal></RefName>
<RefPurpose>Frees memory allocated
by the <Function>rpc_ss_allocate()</Function> routine;  used by server or possibly by client applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  20:00:04  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:50  wardr]-->
<!---->
<!-- Revision 1.1.6.7  1995/06/07  20:12:29  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:55  buckler]-->
<!-- -->
<!-- Revision 1.1.6.5  1994/11/03  23:47:11  neilson-->
<!-- 	Substituted macros for book names in cross refs.-->
<!-- 	[1994/11/03  01:39:40  neilson]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/01/27  16:56:58  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:35:57  cjd]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  19:06:47  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:35:57  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:58:37  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  20:17:07  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:55:11  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:32:47  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:57:44  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  17:03:52  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/19  15:52:37  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/19  15:45:29  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:38:14  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Fri Nov 8, 1991                 Initial file submission to HP-->
<!--                                   for final integration at IBM.-->
<!--                                   -->
<!---->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- HP/DIGITAL CONFIDENTIAL-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp.-->
<!-- All rights reserved.-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .wH "<routine_section>"-->
<!-- .iX "\*Lrpc_ss_free(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN328.indx.1">
<Primary>freeing memory</Primary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN328.indx.2">
<Primary>memory</Primary>
<Secondary>freeing</Secondary>
</IndexTerm>
<!-- .iX "memory" "\*Lrpc_ss_free(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN328.indx.3">
<Primary><StructName Role="typedef">idl_void_p_t</StructName> type</Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_ss_free</Function></FuncDef>
<ParamDef>idl_void_p_t <Parameter>node_to_free</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">node_to_free</Symbol></Term>
<ListItem>
<Para>Specifies a pointer to memory allocated by <Function>rpc_ss_allocate()</Function>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>Note that in ANSI standard C environments, <StructName Role="typedef">idl_void_p_t</StructName> is defined
as <Literal>void *</Literal> and in other environments is defined as <Literal>char *</Literal>.
<?sml-break><?sml-need 1.5i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_ss_free()</Function>
routine releases memory allocated by <Function>rpc_ss_allocate()</Function>.
The thread calling <Function>rpc_ss_free()</Function> must have the same thread handle
as the thread that allocated the memory with <Function>rpc_ss_allocate()</Function>.
Use it only in an environment where <Function>rpc_ss_allocate()</Function> is used.
</Para>
<Para>If the manager code allocates memory with <Function>rpc_ss_allocate()</Function> and the
memory is not released by <Function>rpc_ss_free()</Function>
during manager code execution, then
the server stub automatically releases the memory when the manager code
completes execution and returns control to the stub.
</Para>
<Para>Manager code can also use <Function>rpc_ss_free()</Function>
to release memory that is pointed
to by a full pointer in an input parameter.
</Para>
<Para>For information about rules for using memory management routines,
see the &DCEDk;.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>A representative list of errors that might be returned is not shown
here.  Refer to the &DCETg; for complete descriptions of all error
messages.
<?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_ss_allocate(3rpc)</Filename>, <Filename MoreInfo="RefEntry">rpc_ss_get_thread_handle(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ss_set_thread_handle(3rpc)</Filename>.
</Para>
<Para>Books:
&DCEDk;.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_ss_free.3rpc,v 1.1.2.8 1996/12/15 16:29:32 carrig Exp $
    | tagMorph library:  $Id: rpc_ss_free.3rpc,v 1.1.2.8 1996/12/15 16:29:32 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
