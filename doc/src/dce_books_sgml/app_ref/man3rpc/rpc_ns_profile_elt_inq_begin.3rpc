<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_ns_profile_elt_inq_begin.3rpc,v $
# Revision 1.1.2.9  1996/12/15  16:35:27  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:13:29  carrig]
#
# Revision 1.1.2.8  1996/12/11  20:41:01  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:08  wardr]
# 
# Revision 1.1.2.7  1996/12/10  22:40:14  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:17  wardr]
# 
# Revision 1.1.2.6  1996/12/09  22:24:59  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:07:15  wardr]
# 
# Revision 1.1.2.5  1996/12/07  16:57:58  carrig
# 	{enh,R1.2.2}
# 	Var List Entry
# 	[1996/12/07  16:57:20  carrig]
# 
# Revision 1.1.2.4  1996/12/04  21:41:26  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:05  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:01:26  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:57:58  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:19  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:20:23  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:16:46  weir
# 	Initial submission
# 	[1996/11/29  17:12:26  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN290.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_ns_profile_elt_inq_begin</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_ns_profile_elt_inq_begin</Literal></RefName>
<RefPurpose>Creates an inquiry context for viewing
the elements in a profile;  used by client, server, or management applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  19:59:18  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:13  wardr]-->
<!---->
<!-- Revision 1.1.6.8  1995/06/21  15:21:54  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/21  15:04:59  buckler]-->
<!-- -->
<!-- Revision 1.1.6.7  1995/06/21  13:20:48  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/19  16:31:45  buckler]-->
<!-- -->
<!-- Revision 1.1.6.6  1995/06/07  20:11:52  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:13  buckler]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/01/27  16:54:25  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:32:56  cjd]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  19:05:14  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  18:32:56  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:55:33  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  20:08:37  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:51:28  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:31:20  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:52:45  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  17:01:10  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/18  20:06:12  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/18  19:58:41  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:37:59  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Mon Nov 11, 1991                 Initial file submission to HP-->
<!--                                    for final integration at IBM.-->
<!--                                   -->
<!---->
<!-- ********************************************************************-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *-->
<!-- All rights reserved.                                               *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_ns_profile_elt_inq_begin(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_ns_profile_elt_inq_begin</Function></FuncDef>
<ParamDef>unsigned32 <Parameter>profile_name_syntax</Parameter></ParamDef>
<ParamDef>unsigned_char_t *<Parameter>profile_name</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>inquiry_type</Parameter></ParamDef>
<ParamDef>rpc_if_id_t *<Parameter>if_id</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>vers_option</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>member_name_syntax</Parameter></ParamDef>
<ParamDef>unsigned_char_t *<Parameter>member_name</Parameter></ParamDef>
<ParamDef>rpc_ns_handle_t *<Parameter>inquiry_context</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">profile_name_syntax</Symbol></Term>
<ListItem>
<Para>An integer value that specifies the syntax of the <Symbol Role="Variable">profile_name</Symbol> parameter.
To use the syntax that is specified in the <Literal>RPC_DEFAULT_ENTRY_SYNTAX</Literal>
environment variable, provide <Literal>rpc_c_ns_syntax_default</Literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">profile_name</Symbol></Term>
<ListItem>
<Para>Specifies the name of the profile to view.
This can be either the global or cell-relative name.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">inquiry_type</Symbol></Term>
<ListItem>
<Para>An integer value that specifies the type of inquiry to perform on the
profile.  The following table describes the valid inquiry types:
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-need 4.0i>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colwidth="248*" Colname="col1" Colnum="1">
<ColSpec Rowsep="1" Align="Left" Colwidth="207*" Colname="col2" Colnum="2">
<TBody>
<Row>
<Entry Rowsep="1" Colsep="0" Align="Center" Namest="col1" Nameend="col2"><Literal>Valid Values of </Literal><Symbol Role="Variable">inquiry_ type</Symbol></Entry>
<Entry Rowsep="1"></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Value</Literal></Entry>
<Entry Rowsep="1"><Literal>Description</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_profile_default_elt</Literal></Entry>
<Entry Rowsep="1">Searches the profile for the default profile element, if any.
The <Symbol Role="Variable">if_id</Symbol>, <Symbol Role="Variable">vers_option</Symbol>, and <Symbol Role="Variable">member_name</Symbol>
parameters are ignored.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_profile_all_elts</Literal></Entry>
<Entry Rowsep="1">Returns every element from the profile.
The <Symbol Role="Variable">if_id</Symbol>, <Symbol Role="Variable">vers_option</Symbol>, and <Symbol Role="Variable">member_name</Symbol>
parameters are ignored.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_profile_match_by_if</Literal></Entry>
<Entry Rowsep="1">Searches the profile for those
elements that contain the interface identifier specified by the
<Symbol Role="Variable">if_id</Symbol> and <Symbol Role="Variable">vers_option</Symbol> values.
The <Symbol Role="Variable">member_name</Symbol> parameter is ignored.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_profile_match_by_mbr</Literal></Entry>
<Entry Rowsep="1">Searches the profile for those
elements that contain the member name specified by the
<Symbol Role="Variable">member_name</Symbol> parameter.
The <Symbol Role="Variable">if_id</Symbol> and <Symbol Role="Variable">vers_option</Symbol> parameters are ignored.
</Entry>
</Row>
<Row>
<Entry><Literal>rpc_c_profile_match_by_both</Literal></Entry>
<Entry>Searches the profile for those elements that contain the
interface identifier and member name specified by the
<Symbol Role="Variable">if_id</Symbol>, <Symbol Role="Variable">vers_option</Symbol>, and <Symbol Role="Variable">member_name</Symbol> parameters.
</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">if_id</Symbol></Term>
<ListItem>
<Para>Specifies the interface identifier of the profile elements to be
returned by <Function>rpc_ns_profile_elt_inq_next()</Function>.
</Para>
<Para>This parameter is used only when specifying a value of either
<Literal>rpc_c_profile_match_by_if</Literal> or
<Literal>rpc_c_profile_match_by_both</Literal> for the <Symbol Role="Variable">inquiry_type</Symbol>
parameter.  Otherwise, this parameter is ignored and you can specify
the value NULL.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">vers_option</Symbol></Term>
<ListItem>
<Para>Specifies how <Function>rpc_ns_profile_elt_inq_next()</Function> uses the
<Symbol Role="Variable">if_id</Symbol> parameter.
</Para>
<Para>This parameter is used only when specifying a value of either
<Literal>rpc_c_profile_match_by_if</Literal> or
<Literal>rpc_c_profile_match_by_both</Literal> for the <Symbol Role="Variable">inquiry_type</Symbol>
parameter.  Otherwise, this parameter is ignored and you can specify
the value 0 (zero).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The following table describes the valid values for this parameter:
</Para>
<?sml-need 4.0i>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colwidth="223*" Colname="col1" Colnum="1">
<ColSpec Rowsep="1" Align="Left" Colwidth="232*" Colname="col2" Colnum="2">
<TBody>
<Row>
<Entry Rowsep="1" Colsep="0" Align="Center" Namest="col1" Nameend="col2"><Literal>Valid Values of </Literal><Symbol Role="Variable">vers_option</Symbol></Entry>
<Entry Rowsep="1"></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Value</Literal></Entry>
<Entry Rowsep="1"><Literal>Description</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_vers_all</Literal></Entry>
<Entry Rowsep="1">Returns profile elements that offer the
specified interface UUID, regardless of the version numbers.
For this value, specify 0 (zero) for both the major and minor versions
in <Symbol Role="Variable">if_id</Symbol>.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_vers_compatible</Literal></Entry>
<Entry Rowsep="1">Returns profile elements that offer the
same major version of the specified interface UUID and a minor version
greater than or equal to the minor version of the specified interface UUID.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_vers_exact</Literal></Entry>
<Entry Rowsep="1">Returns profile elements that offer the
specified version of the specified interface UUID.
</Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>rpc_c_vers_major_only</Literal></Entry>
<Entry Rowsep="1">Returns profile elements that offer the
same major version of the specified interface UUID (ignores the minor
version).
For this value, specify 0 (zero) for the minor version
in <Symbol Role="Variable">if_id</Symbol>.
</Entry>
</Row>
<Row>
<Entry><Literal>rpc_c_vers_upto</Literal></Entry>
<Entry>Returns profile elements that offer a version
of the specified interface UUID less than or equal to the specified major
and minor version. (For example, if <Symbol Role="Variable">if_id</Symbol> contains V2.0 and
the profile contains elements with the versions V1.3, V2.0, and
V2.1, <Function>rpc_ns_profile_elt_inq_next()</Function> returns the
elements with V1.3 and V2.0.)
</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">member_name_syntax</Symbol></Term>
<ListItem>
<Para>An integer value that specifies the syntax of the <Symbol Role="Variable">member_name</Symbol>
parameter in this routine and the syntax of the <Symbol Role="Variable">member_name</Symbol>
parametr in <Function>rpc_ns_profile_elt_inq_next()</Function>.
To use the syntax that is specified in the <Literal>RPC_DEFAULT_ENTRY_SYNTAX</Literal>
environment variable, provide <Literal>rpc_c_ns_syntax_default</Literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">member_name</Symbol></Term>
<ListItem>
<Para>Specifies the member name that <Function>rpc_ns_profile_elt_inq_next()</Function>
looks for in profile elements.
This can be either the global or cell-relative name.
</Para>
<Para>This parameter is used only when specifying a value of either
<Literal>rpc_c_profile_match_by_mbr</Literal> or
<Literal>rpc_c_profile_match_by_both</Literal> for the <Symbol Role="Variable">inquiry_type</Symbol>
parameter.  Otherwise, this parameter is ignored and you specify
the value NULL.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">inquiry_context</Symbol></Term>
<ListItem>
<Para>Returns a name service handle for use with the
following routines:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Function>rpc_ns_profile_elt_inq_next()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>rpc_ns_profile_elt_inq_done()</Function>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine, indicating
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_ns_profile_elt_inq_begin()</Function> routine creates an inquiry
context for viewing the elements in a profile.
</Para>
<Para>Using the <Symbol Role="Variable">inquiry_type</Symbol> and <Symbol Role="Variable">vers_option</Symbol> parameters,
an application specifies which of the following profile elements
will be returned from calls to <Function>rpc_ns_profile_elt_inq_next()</Function>:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>The default element.
</Para>
</ListItem>
<ListItem>
<Para>All elements.
</Para>
</ListItem>
<ListItem>
<Para>Those elements with the specified interface identifier.
</Para>
</ListItem>
<ListItem>
<Para>Those elements with the specified member name.
</Para>
</ListItem>
<ListItem>
<Para>Those elements with both the specified interface identifier and member name.
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>Before calling <Function>rpc_ns_profile_elt_inq_next()</Function>, the
application must first call this routine to create an inquiry context.
</Para>
<Para>When finished viewing the profile elements, the application calls the
<Function>rpc_ns_profile_elt_inq_done()</Function> routine to delete the inquiry
context.
</Para>
<RefSect2>
<Title>Permissions Required</Title>
<Para>No permissions are required.
<?sml-break><?sml-need .8i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_incomplete_name</Literal></Term>
<ListItem>
<Para>Incomplete name.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_inquiry_type</Literal></Term>
<ListItem>
<Para>Invalid inquiry type.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_name_syntax</Literal></Term>
<ListItem>
<Para>Invalid name syntax.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_vers_option</Literal></Term>
<ListItem>
<Para>Invalid version option.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_unsupported_name_syntax</Literal></Term>
<ListItem>
<Para>Unsupported name syntax.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_if_inq_id(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_mgmt_handle_set_exp_age(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_profile_elt_inq_done(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_profile_elt_inq_next(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_ns_profile_elt_inq_begin.3rpc,v 1.1.2.9 1996/12/15 16:35:27 carrig Exp $
    | tagMorph library:  $Id: rpc_ns_profile_elt_inq_begin.3rpc,v 1.1.2.9 1996/12/15 16:35:27 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
