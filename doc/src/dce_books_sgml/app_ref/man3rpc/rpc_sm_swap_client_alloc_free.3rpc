<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_sm_swap_client_alloc_free.3rpc,v $
# Revision 1.1.2.9  1996/12/15  17:45:41  carrig
# 	{enh,R1.2.2}
# 	Synopsis
# 	[1996/12/15  17:45:16  carrig]
#
# Revision 1.1.2.8  1996/12/14  21:38:47  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/14  21:38:32  carrig]
# 
# Revision 1.1.2.7  1996/12/11  20:41:39  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:37:42  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:40:55  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:51  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:25:39  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:07:53  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:42:03  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:37:40  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:01:56  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:58:37  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:45  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:20:53  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:17:32  weir
# 	Initial submission
# 	[1996/11/29  17:12:55  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE BOOK PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<refentry id="DCEADR.MAN321.rsml.1">
<refmeta><refentrytitle>rpc_sm_swap_client_alloc_free</refentrytitle><manvolnum>
3rpc</manvolnum></refmeta>
<refnamediv>
<refname><literal>rpc_sm_swap_client_alloc_free</literal></refname>
<refpurpose>Exchanges the current memory  allocation and freeing mechanism
used by the client stubs with one supplied by the client</refpurpose>
</refnamediv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!-- src directory for the full copyright text.-->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  19:59:55  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:35:43  wardr]-->
<!---->
<!-- Revision 1.1.2.5  1995/06/07  20:12:23  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:07:48  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1993/02/25  16:34:22  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/02/25  16:28:29  cjd]-->
<!-- -->
<!-- Revision 1.1.2.2  1993/02/10  16:54:31  hodgman-->
<!-- 	File Name: app_ref/man3rpc/rpc_sm_swap_client_alloc_free.3rpc-->
<!-- 	Change Request Number: 7157-->
<!-- 	Changes Made: Added new RPC API routine reference page-->
<!-- 	[1993/02/10  15:42:14  hodgman]-->
<!-- -->
<!-- 	File Name: app_ref/man3rpc/rpc_sm_swap_client_alloc_free.3rpc-->
<!-- 	Change Request Number: 7157-->
<!-- 	Changes Made: Added new RPC API routine reference page-->
<!-- 	[1993/02/09  17:51:26  hodgman]-->
<!-- -->
<!---->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                   COMMENT:-->
<!---->
<!--   7/20/92			Original derived from DCE Prog.  Ref src.-->
<!--     -->
<!--     -->
<!---->
<!-- ********************************************************************-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *-->
<!-- All rights reserved.                                               *-->
<!-- ********************************************************************-->
<refsect1 remap="ANSI">
<title>Synopsis</title>
<para><programlisting><?Pub _font TypeSize="10pt"><literal>#include &lt;rpc.h>
</literal>

<literal>void rpc_sm_swap_client_alloc_free (
      idl_void_p_t (*</literal><Replaceable>p_allocate</Replaceable><literal>
) (
      unsigned long </literal><Replaceable>size</Replaceable><literal>
),
      void (*</literal><Replaceable>p_free</Replaceable><literal>) (
      idl_void_p_t </literal><Replaceable>ptr</Replaceable><literal>
),
      idl_void_p_t (**</literal><Replaceable>p_p_old_allocate</Replaceable><literal>
) (
      unsigned long </literal><Replaceable>size</Replaceable><literal>
),
      void (**</literal><Replaceable>p_p_old_free</Replaceable><literal>
) (
      idl_void_p_t</literal> <Replaceable>ptr</Replaceable><literal>
),
      unsigned32 *</literal><Replaceable>status</Replaceable><literal>
);</literal><?Pub /_font>

</programlisting></para>
<indexterm id="DCEADR.MAN321.indx.1"><primary>client</primary><secondary>
memory</secondary></indexterm><indexterm id="DCEADR.MAN321.indx.2"><primary>
memory</primary><secondary>swapping memory</secondary></indexterm><indexterm
id="DCEADR.MAN321.indx.3"><primary>memory</primary><secondary><literal>rpc_sm_swap_client_alloc_free
</literal> routine</secondary></indexterm><indexterm id="DCEADR.MAN321.indx.4">
<primary>swapping client memory</primary></indexterm><indexterm id="DCEADR.MAN321.indx.5">
<primary><literal>rpc_sm_swap_client_alloc_free</literal> routine</primary>
</indexterm></refsect1>
<refsect1>
<title>Parameters</title>
<refsect2>
<title>Input</title>
<variablelist>
<varlistentry>
<term><symbol role="Variable">p_allocate</symbol></term><listitem><para>Specifies
a new memory allocation routine.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">p_free</symbol></term><listitem><para>Specifies
a new memory free routine.</para>
</listitem></varlistentry>
</variablelist>
</refsect2>
<refsect2>
<title>Output</title>
<variablelist>
<varlistentry role="linebreak">
<term><symbol role="Variable">p_p_old_allocate</symbol></term><listitem><para>
Returns the memory allocation routine in use before the call to this routine.
</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">p_p_old_free</symbol></term><listitem><para>
Returns the memory free routine in use before the call to this routine.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">status</symbol></term><listitem><para>Returns
the status code from this routine.  This status code indicates whether the
routine completed successfully or, if not, why not.</para>
</listitem></varlistentry>
</variablelist>
<?sml-break>
<?sml-need 1.5i>
</refsect2>
</refsect1>
<refsect1>
<title>Description</title>
<para>The <function>rpc_sm_swap_client_alloc_free()</function> routine exchanges
the current allocate and free mechanisms used by the client stubs for routines
supplied by the caller. </para>
</refsect1>
<refsect1>
<title>Return Values</title>
<para>None.</para>
</refsect1>
<refsect1>
<title>Errors</title>
<para>T<?Pub Caret1>he following describes a partial list of errors that might
be returned. Refer to the &DCETg; for complete descriptions of all error messages.
</para>
<variablelist>
<varlistentry>
<term><literal>rpc_s_ok</literal></term><listitem><para>Success.</para>
</listitem></varlistentry>
</variablelist>
</refsect1>
<refsect1>
<title>Related Information</title>
<!--no-op:  l--><para>Functions:  <filename moreinfo="RefEntry">rpc_sm_allocate(3rpc)
</filename>,  <filename moreinfo="RefEntry">rpc_sm_free(3rpc)</filename>, <filename
moreinfo="RefEntry">rpc_sm_set_client_alloc_free(3rpc)</filename>. <!--no-op:
 b--></para>
</refsect1>
<!--+ 11/27/96 19:46:25     | tagMorph:  $Id: rpc_sm_swap_client_alloc_free.3rpc,v
1.1.2.7 1996/12/11 20:41:39 wardr Exp $     | tagMorph library:  $Id: rpc_sm_swap_client_alloc_free.3rpc,v
1.1.2.7 1996/12/11 20:41:39 wardr Exp $     | sml-to-docbook:  1.25     +-->
</refentry>
<?Pub *0000006331 -2>
