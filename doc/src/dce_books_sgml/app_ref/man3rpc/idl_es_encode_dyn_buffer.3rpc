<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: idl_es_encode_dyn_buffer.3rpc,v $
# Revision 1.1.2.9  1996/12/15  16:17:40  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:08  carrig]
#
# Revision 1.1.2.8  1996/12/12  16:16:40  wardr
# 	{edit,R1.2.2}
# 	fixed coding problem
# 	[1996/12/12  16:16:11  wardr]
# 
# Revision 1.1.2.7  1996/12/11  20:39:14  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:35:34  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:38:28  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:34:40  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:02  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:05:33  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:39:38  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:35:26  wardr]
# 
# Revision 1.1.2.3  1996/12/02  20:59:56  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:04  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:08  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:00  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:14:32  weir
# 	Initial submission
# 	[1996/11/29  17:11:11  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN208.rsml.1">
<RefMeta>
<RefEntryTitle>idl_es_encode_dyn_buffer</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>idl_es_encode_dyn_buffer</Literal></RefName>
<RefPurpose>Returns a dynamic buffer encoding handle to the
IDL encoding services; used by client and server applications</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  19:56:15  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:33:46  wardr]-->
<!---->
<!-- Revision 1.1.2.9  1995/06/07  20:10:32  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:05:31  buckler]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/07/25  15:35:22  zahn-->
<!-- 	{review,9601,R1.1}-->
<!-- -->
<!-- 	Added pointer to Application Development Guide - Core,-->
<!-- 	which will explain how to manage memory when using the IDL-->
<!-- 	encoding services.  Pointer is reponse to T. Jordahl review-->
<!-- 	comment.-->
<!-- 	[1994/07/25  15:35:02  zahn]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/06/13  17:03:52  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:47:40  devobj]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/05/05  19:00:48  zahn-->
<!-- 	Removed include line from Synopsis.  Replacing-->
<!-- 	with info about including in rpc_intro.3rpc.-->
<!-- 	[1994/05/05  19:00:30  zahn]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/04/29  18:23:18  zahn-->
<!-- 	Fixed some wording.-->
<!-- 	[1994/04/29  18:22:58  zahn]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/04/27  17:15:46  zahn-->
<!-- 	Miscellaneous edits.-->
<!-- 	[1994/04/27  17:15:25  zahn]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/04/26  20:02:01  zahn-->
<!-- 	{enh,9601,R1.1}-->
<!-- -->
<!-- 	Added include line for idl_es.h to Synopsis,-->
<!-- 	added more information in Description section.-->
<!-- 	[1994/04/26  20:01:43  zahn]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/03/21  16:32:33  rjohnson-->
<!-- 	Changes made: New IDL reference page for Version 1.1.-->
<!-- 	File name: app_ref/man3rpc/idl_es_encode_dyn_buffer.3rpc-->
<!-- 	Change Request: 9601-->
<!-- 	[1994/03/21  16:22:42  rjohnson]-->
<!-- -->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncDef><Function><Literal>void </Literal>idl_es_encode_dyn_buffer</Function></FuncDef>
<ParamDef>idl_byte **<Parameter>encoded_data_buffer</Parameter></ParamDef>
<ParamDef>idl_ulong_int *<Parameter>buffer_size</Parameter></ParamDef>
<ParamDef>idl_es_handle_t *<Parameter>es_handle</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<Para>None.
</Para>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">encoded_data_buffer</Symbol></Term>
<ListItem>
<Para>The address to which the IDL encoding services will write the address of the
buffer that contains the encoded data, when the encoding process
is complete.  When the application no longer needs the buffer,
it should release the memory resource.  See the &DCEDk; for an explanation
of how to manage memory when using the IDL encoding services.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">buffer_size</Symbol></Term>
<ListItem>
<Para>The address to which the IDL encoding services will write
the size of the buffer that contains the encoded data, when
the encoding process is complete.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">es_handle</Symbol></Term>
<ListItem>
<Para>Returns the address of an IDL encoding services handle for use
by a client or server encoding operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code indicates
whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 10>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The IDL encoding services provide client and server
RPC applications with a method for encoding data types
in input parameters into a byte stream and decoding data types
in output parameters from a byte stream without invoking
the RPC runtime.  Encoding and decoding operations are
analogous to marshalling and unmarshalling, except that
the data is stored locally, and is not transmitted over
the network.  Client and server applications can use the
IDL encoding services to create persistent storage for
their data.  Encoding flattens complex data types into
a byte stream for storage on disk, while decoding restores
the flattened data to complex form.
</Para>
<Para>The <Function>idl_es_encode_dyn_buffer()</Function> routine belongs
to a set of routines that return handles to the IDL
encoding services for use by client and server encoding
and decoding operations.  The information in the handle
controls the way in which the IDL encoding services
manage memory when encoding or decoding data.
</Para>
<Para>The <Function>idl_es_encode_dyn_buffer()</Function> routine returns a
dynamic buffer encoding handle, which directs the IDL encoding
services to store the encoded data in a chain of small buffers,
build an additional single buffer that contains the encoded
data, and pass that buffer's address to the application.
Dynamic buffering is the most expensive style of IDL
encoding services buffering, since two copies of the encoded
data exist (one in the chain of buffers, and one in
the single buffer).
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>None.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_ss_bad_buffer</Literal></Term>
<ListItem>
<Para>Bad buffer operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_memory</Literal></Term>
<ListItem>
<Para>Insufficient memory available to complete operation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions: <Filename MoreInfo="RefEntry">idl_es_encode_fixed_buffer(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">idl_es_encode_incremental(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: idl_es_encode_dyn_buffer.3rpc,v 1.1.2.9 1996/12/15 16:17:40 carrig Exp $
    | tagMorph library:  $Id: idl_es_encode_dyn_buffer.3rpc,v 1.1.2.9 1996/12/15 16:17:40 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
