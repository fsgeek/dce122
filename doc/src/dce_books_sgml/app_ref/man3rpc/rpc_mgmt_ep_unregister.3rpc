<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_mgmt_ep_unregister.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:26:15  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:11:53  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:39:55  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:36:13  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:39:12  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:35:20  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:23:48  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:06:15  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:40:18  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:36:06  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:00:33  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:56:48  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:22:37  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:19:34  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:15:27  weir
# 	Initial submission
# 	[1996/11/29  17:11:42  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN240.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_mgmt_ep_unregister</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_mgmt_ep_unregister</Literal></RefName>
<RefPurpose>Removes server address information from an endpoint map;  used by management applications </RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.8.1  1996/11/18  19:57:25  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:34:23  wardr]-->
<!---->
<!-- Revision 1.1.6.5  1995/06/07  20:11:09  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:06:13  buckler]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  17:50:41  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  17:19:57  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/01  20:46:24  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/01  19:56:58  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  14:44:59  oaf]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/09/16  18:28:46  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/14  17:45:38  oaf-->
<!-- 	2nd edits, PURPOSE fix, .ad l on related functions (& restore)-->
<!-- 	[1992/08/14  16:56:21  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/18  16:48:42  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/18  16:44:40  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:36:18  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Mon Nov 11, 1991                 Initial file submission to HP-->
<!--                                    for final integration at IBM.-->
<!--                                   -->
<!---->
<!-- ********************************************************************-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp. *-->
<!-- All rights reserved.                                               *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lrpc_mgmt_ep_unregister(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_mgmt_ep_unregister</Function></FuncDef>
<ParamDef>rpc_binding_handle_t <Parameter>ep_binding</Parameter></ParamDef>
<ParamDef>rpc_if_id_t *<Parameter>if_id</Parameter></ParamDef>
<ParamDef>rpc_binding_handle_t <Parameter>binding</Parameter></ParamDef>
<ParamDef>uuid_t *<Parameter>object_uuid</Parameter></ParamDef>
<ParamDef>unsigned32 *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">ep_binding</Symbol></Term>
<ListItem>
<Para>Specifies the host whose local endpoint map elements you
unregister (that is, remove).
To remove elements from the same host as the calling
application, specify NULL.
</Para>
<Para>To remove local endpoint map elements from another host, specify a
server binding handle for that host.
You can specify the same binding handle you are using to make
other remote procedure calls.
The object UUID associated
with this parameter must be a nil UUID.  If you specify a nonnil UUID,
the routine fails with the status code <Literal>ept_s_cant_perform_op</Literal>.
Other than the host information and object UUID, all information
in this parameter is ignored.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">if_id</Symbol></Term>
<ListItem>
<Para>Specifies the interface identifier to remove from the local endpoint map.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">binding</Symbol></Term>
<ListItem>
<Para>Specifies the binding handle to remove.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">object_uuid</Symbol></Term>
<ListItem>
<Para>Specifies an optional object UUID to remove.
</Para>
<Para>The value NULL indicates there is no object UUID to
consider in the removal.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_mgmt_ep_unregister()</Function>
routine unregisters (that is, removes) an
element from a local endpoint map.
A management program calls this routine to remove addresses of servers that
are no longer available, or to remove addresses of servers that support
objects that are no longer offered.
</Para>
<Para>Use this routine cautiously; removing elements from
the local endpoint map may make
servers unavailable to client applications that do not already have a
fully bound binding handle to the server.
</Para>
<Para>A management application calls the <Function>rpc_mgmt_ep_inq_next()</Function> routine
to view local endpoint map elements.  The application can then
remove the elements using the <Function>rpc_mgmt_ep_unregister()</Function> routine.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_cant_access</Literal></Term>
<ListItem>
<Para>Error reading the endpoint database.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_cant_perform_op</Literal></Term>
<ListItem>
<Para>Cannot perform the requested operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_comm_failure</Literal></Term>
<ListItem>
<Para>Communications failure.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_database_invalid</Literal></Term>
<ListItem>
<Para>Endpoint map database is invalid.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_invalid_entry</Literal></Term>
<ListItem>
<Para>Invalid database entry.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_not_registered</Literal></Term>
<ListItem>
<Para>No entries found.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>ept_s_update_failed</Literal></Term>
<ListItem>
<Para>Update failed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_binding</Literal></Term>
<ListItem>
<Para>Invalid binding handle.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_interfaces</Literal></Term>
<ListItem>
<Para>No interfaces registered.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_wrong_kind_of_binding</Literal></Term>
<ListItem>
<Para>Wrong kind of binding for operation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_ep_register(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ep_register_no_replace(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_ep_elt_inq_begin(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_ep_elt_inq_done(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_mgmt_ep_elt_inq_next(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_unexport(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_mgmt_ep_unregister.3rpc,v 1.1.2.8 1996/12/15 16:26:15 carrig Exp $
    | tagMorph library:  $Id: rpc_mgmt_ep_unregister.3rpc,v 1.1.2.8 1996/12/15 16:26:15 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
