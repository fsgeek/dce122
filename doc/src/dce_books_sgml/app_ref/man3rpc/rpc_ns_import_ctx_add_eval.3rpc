<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpc_ns_import_ctx_add_eval.3rpc,v $
# Revision 1.1.2.8  1996/12/15  16:35:10  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/15  16:12:49  carrig]
#
# Revision 1.1.2.7  1996/12/11  20:40:40  wardr
# 	{edit,R1.2.2}
# 	fixed parsing problems
# 	[1996/12/11  20:36:52  wardr]
# 
# Revision 1.1.2.6  1996/12/10  22:39:56  wardr
# 	{edit,R1.2.2}
# 	Fixing sgml
# 	[1996/12/10  22:36:01  wardr]
# 
# Revision 1.1.2.5  1996/12/09  22:24:39  wardr
# 	{edit,R1.2.2}
# 	Fixed conversion problems
# 	[1996/12/09  22:06:59  wardr]
# 
# Revision 1.1.2.4  1996/12/04  21:41:09  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/04  21:36:48  wardr]
# 
# Revision 1.1.2.3  1996/12/02  21:01:13  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/12/02  20:57:39  carrig]
# 
# Revision 1.1.2.2  1996/12/01  19:23:07  weir
# 	Removed thinsp entities
# 	[1996/12/01  19:20:10  weir]
# 
# Revision 1.1.2.1  1996/11/29  17:16:26  weir
# 	Initial submission
# 	[1996/11/29  17:12:14  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN276.rsml.1">
<RefMeta>
<RefEntryTitle>rpc_ns_import_ctx_add_eval</RefEntryTitle>
<ManVolNum>3rpc</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>rpc_ns_import_ctx_add_eval</Literal></RefName>
<RefPurpose>Adds an evaluation routine to an import context;  used by client applications </RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- OLD HISTORY-->
<!-- Revision 1.1.4.1  1996/11/18  19:58:51  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/18  19:34:59  wardr]-->
<!---->
<!-- Revision 1.1.2.5  1995/06/07  20:11:40  buckler-->
<!-- 	1.1 edits  Prentice Hall reformat-->
<!-- 	[1995/06/07  20:06:55  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/18  18:45:08  zahn-->
<!-- 	{edt,5284,R1.1}-->
<!-- -->
<!-- 	Added M. Romagna's technical review comments.-->
<!-- 	[1994/10/18  18:44:49  zahn]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/06/13  17:04:11  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  16:48:13  devobj]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/04/13  22:17:20  zahn-->
<!-- 	{enh,5284,R1.1}-->
<!-- -->
<!-- 	Document character/code set interoperability functions.-->
<!-- 	[1994/04/13  22:16:58  zahn]-->
<!-- -->
<!-- .iX "\*Lrpc_ns_import_ctx_add_eval(\|)\*O"-->
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;dce/rpc.h></FuncSynopsisInfo>
<FuncDef><Function>void rpc_ns_import_ctx_add_eval</Function></FuncDef>
<ParamDef>rpc_ns_handle_t *<Parameter>import_context</Parameter></ParamDef>
<ParamDef>unsigned32 <Parameter>function_type</Parameter></ParamDef>
<ParamDef>rpc_ns_handle_t *<Parameter>eval_args</Parameter></ParamDef>
<ParamDef>void *<Parameter>eval_func</Parameter></ParamDef>
<ParamDef>void *<Parameter>free_func</Parameter></ParamDef>
<ParamDef>error_status_t *<Parameter>status</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">import_context</Symbol></Term>
<ListItem>
<Para>The name service handle obtained from the <Function>rpc_ns_binding_import_begin()</Function>
routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">func_type</Symbol></Term>
<ListItem>
<Para>The type of evaluation function.  This value currently must
be <Literal>rpc_cs_code_eval_func</Literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">eval_args</Symbol></Term>
<ListItem>
<Para>An opaque data type that data used by the evaluation routine.
</Para>
<Para>Client applications adding a DCE RPC code sets evaluation routine
(that is, the routines 
<Function>rpc_cs_eval_with_universal()</Function> or <Function>rpc_cs_eval_without_universal()</Function>)
specify the server's NSI entry name in this parameter.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">eval_func</Symbol></Term>
<ListItem>
<Para>A function pointer to the evaluation routine to be called from
the <Function>rpc_ns_binding_import_next()</Function> routine.
The <Literal>void</Literal> declaration for <Symbol Role="Variable">eval_func</Symbol> means that the function
does not return a value.
</Para>
<Para>Client applications adding a DCE RPC code sets evaluation routine
(that is, the routines 
<Function>rpc_cs_eval_with_universal()</Function> or <Function>rpc_cs_eval_without_universal()</Function>)
specify the routine name in this parameter.
<?sml-break><?sml-need 6></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">free_func</Symbol></Term>
<ListItem>
<Para>A function pointer to a routine that is invoked from
<Function>rpc_ns_binding_import_done()</Function> and which performs application-specific
cleanup.  Client applications adding a DCE RPC code sets evaluation routine
(that is, <Function>rpc_cs_eval_with_universal()</Function> or <Function>rpc_cs_eval_without_universal()</Function>)
specify NULL in this parameter.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Output</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">import_context</Symbol></Term>
<ListItem>
<Para>Returns the name service handle which contains
the following routines:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Function>rpc_ns_binding_import_next()</Function>
</Para>
</ListItem>
<ListItem>
<Para><Function>rpc_ns_binding_import_done()</Function>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">status</Symbol></Term>
<ListItem>
<Para>Returns the status code from this routine.  This status code
indicates whether the routine completed successfully or, if not, why not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>rpc_ns_import_ctx_add_eval()</Function> routine adds an evaluation
routine to an import context created by the <Function>rpc_ns_binding_import_begin()</Function>
routine.  The evaluation routine adds additional criteria to that used
by <Function>rpc_ns_binding_import_next()</Function> (that is, protocol and
interface information) for importing compatible
server binding handles.  Client applications call
the <Function>rpc_ns_import_ctx_add_eval()</Function> routine once for each evaluation
routine to be added to an import context (if there are multiple
evaluation routines to be set up.)
</Para>
<Para>If the user-specified evaluation routine needs to perform
special cleanup functions, such as deleting a temporary file
from a disk, use the <Symbol Role="Variable">free_func</Symbol> parameter to specify
the cleanup routine to be called from <Function>rpc_ns_binding_import_done()</Function>.
</Para>
<Para>For DCE 1.1, client applications that transfer international
character data in a heterogeneous character set and code set
environment use the <Function>rpc_ns_import_ctx_add_eval()</Function> routine
to add one or more code sets evaluation routines to the import
context returned by the <Function>rpc_ns_binding_import_begin()</Function> routine.
When the client application calls the <Function>rpc_ns_binding_import_next()</Function>
routine to import compatible binding handles for servers, this routine
calls the code sets evaluation routine, which applies client-server
character set and code sets compatibility checking as another criteria
for compatible binding selection.
</Para>
<Para><?sml-need 6>The code sets compatibility evaluation routine specified can be one of the following:
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Literal>rpc_cs_eval_with_universal</Literal></Term>
<ListItem>
<Para>A DCE RPC code sets evaluation routine that evaluates character set and code sets
compatibility between client and server.  If client and server character sets
are compatible, but their supported code sets are not, the routine sets code
set tags that direct the client and/or server stubs to convert character data to
either user-defined intermediate code sets (if they exist) or
the DCE intermediate code set, which is the ISO 10646
(or <Replaceable>universal</Replaceable>) code set.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_cs_eval_without_universal</Literal></Term>
<ListItem>
<Para>A DCE RPC code sets evaluation routine that evaluates character set and code sets
compatibility between client and server.  If client and server character sets
are compatible, but their supported code sets are not, the routine attempts
to return the message <Literal>rpc_s_no_compat_codesets</Literal> to <Function>rpc_ns_binding_import_next()</Function>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term>application-supplied-routine</Term>
<ListItem>
<Para>A user-written code sets evaluation routine.  Application developers writing
internationalized DCE applications can develop their own code sets evaluation
routines for client-server code sets evaluation if the DCE-supplied routines
do not meet their application's needs.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<RefSect2>
<Title>Restrictions</Title>
<Para>Client applications that add evaluation routines to server
binding import context cannot use the automatic binding method to
bind to a server.
</Para>
</RefSect2>
<RefSect2>
<Title>Permissions Required</Title>
<Para>No permissions are required.
<?sml-break><?sml-need .8i></Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>rpc_s_ok</Literal></Term>
<ListItem>
<Para>Success.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_no_memory</Literal></Term>
<ListItem>
<Para>The RPC runtime could not allocate heap storage.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>rpc_s_invalid_ns_handle</Literal></Term>
<ListItem>
<Para>The <Symbol Role="Variable">import_context</Symbol> parameter was not valid.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">rpc_cs_eval_with_universal(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_cs_eval_without_universal(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_import_begin(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_import_done(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_binding_import_next(3rpc)</Filename>,
<Filename MoreInfo="RefEntry">rpc_ns_mgmt_handle_set_exp_age(3rpc)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: rpc_ns_import_ctx_add_eval.3rpc,v 1.1.2.8 1996/12/15 16:35:10 carrig Exp $
    | tagMorph library:  $Id: rpc_ns_import_ctx_add_eval.3rpc,v 1.1.2.8 1996/12/15 16:35:10 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
