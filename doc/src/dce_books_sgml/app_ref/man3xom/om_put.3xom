<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: om_put.3xom,v $
# Revision 1.1.2.4  1996/12/11  18:02:47  carrig
# 	{enh,R1.2.2}
# 	Index entry
# 	[1996/12/11  18:02:07  carrig]
#
# Revision 1.1.2.3  1996/12/06  16:14:02  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/06  16:12:45  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:32:57  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:32:33  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:56:26  weir
# 	Initial submission
# 	[1996/11/29  18:55:51  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN392.rsml.1">
<RefMeta>
<RefEntryTitle>om_put</RefEntryTitle>
<ManVolNum>3xom</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>om_put</Literal></RefName>
<RefPurpose>Places or replaces in one private object copies of the attribute values of
another public or private object</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.10.2  1996/11/22  16:50:53  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Fixed bookdef macro-->
<!-- 	[1996/11/22  16:44:10  wardr]-->
<!---->
<!-- Revision 1.1.10.1  1996/11/20  19:22:37  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads and added PDG pointer-->
<!-- 	[1996/11/20  19:21:57  wardr]-->
<!-- -->
<!-- Revision 1.1.8.5  1995/06/07  22:59:34  buckler-->
<!-- 	1.1 edits and Prentice Hall format-->
<!-- 	[1995/06/07  22:58:54  buckler]-->
<!-- -->
<!-- Revision 1.1.8.4  1994/09/08  18:14:49  rnollman-->
<!-- 	[rnollman] - updated input/output/return code parms from Dubloiin-->
<!-- 	[1994/09/08  18:09:01  rnollman]-->
<!-- -->
<!-- Revision 1.1.8.3  1994/08/05  18:01:15  rnollman-->
<!-- 	[rnollman] - checkin after incorporating OSF edits-->
<!-- 	[1994/08/05  17:59:50  rnollman]-->
<!-- -->
<!-- Revision 1.1.8.2  1994/03/20  13:34:56  rnollman-->
<!-- 	changed for R1.1-->
<!-- 	[1994/03/20  13:34:39  rnollman]-->
<!-- -->
<!-- Revision 1.1.8.1  1993/11/12  14:20:24  rnollman-->
<!-- 	updated SNI copyright-->
<!-- 	[1993/11/12  14:20:13  rnollman]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/01/27  20:29:13  cjd-->
<!-- 	Fixing backing build problem-->
<!-- 	[1993/01/27  19:57:38  cjd]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/01/26  23:22:11  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  22:27:05  cjd]-->
<!-- -->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  20:58:20  cjd]-->
<!-- -->
<!-- Revision 1.1.6.2  1992/10/02  20:48:58  weir-->
<!-- 	Removed change bars; moved into 1.0.2doc tree-->
<!-- 	[1992/10/02  20:45:01  weir]-->
<!-- -->
<!-- Revision 1.1.4.2  1992/09/16  18:48:27  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.3.2  1992/09/16  15:30:49  oaf-->
<!-- 	For P/H, now and forever!-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/20  13:53:06  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/20  13:51:06  buckler]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/13  13:18:34  weir-->
<!-- 	New version for DCE1.0.1.-->
<!-- 	[1992/05/13  13:18:11  weir]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:34:46  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!-- /*****************************************************************-->
<!-- *                                                                *-->
<!-- * COPYRIGHT   (C)  SIEMENS NIXDORF INFORMATIONSSYSTEME AG 1994   *-->
<!-- *                  ALL RIGHTS RESERVED                           *-->
<!-- *                                                                *-->
<!-- *****************************************************************/-->
<IndexTerm Id="DCEADR.MAN392.indx.1">
<Primary>private object</Primary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN392.indx.2">
<Primary>public object</Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;xom.h></FuncSynopsisInfo>
<FuncDef><Function><Literal>OM_return_code </Literal>om_put</Function></FuncDef>
<ParamDef>OM_private_object <Parameter>destination</Parameter></ParamDef>
<ParamDef>OM_modification <Parameter>modification</Parameter></ParamDef>
<ParamDef>OM_object <Parameter>source</Parameter></ParamDef>
<ParamDef>OM_type_list <Parameter>included_types</Parameter></ParamDef>
<ParamDef>OM_value_position <Parameter>initial_value</Parameter></ParamDef>
<ParamDef>OM_value_position <Parameter>limiting_value</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<RefSect2>
<Title>Input</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">destination</Symbol></Term>
<ListItem>
<Para>The destination that remains accessible.  The destination's
<IndexTerm Id="DCEADR.MAN392.indx.3">
<Primary>destination</Primary>
</IndexTerm>class is unaffected.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">modification</Symbol></Term>
<ListItem>
<Para>The nature of the requested modification.
The modification determines how <Function>om_put()</Function> uses the
attribute values in the source to modify the object.  In all
cases, for each attribute present in the source, copies of
its values are placed in the object's destination attribute
of the same type.
The data value is chosen from among the following:
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>OM_INSERT_AT_BEGINNING</Literal>
</Para>
<Para>The source values are inserted before any existing destination values.
(The latter are retained.)
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_INSERT_AT_CERTAIN_POINT</Literal>
</Para>
<Para>The source values are inserted before the value at a specified position
in the destination attribute.  (The latter are
retained.)
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_INSERT_AT_END</Literal>
</Para>
<Para>The source values are
inserted after any existing destination values.
(The latter are retained.)
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_REPLACE_ALL</Literal>
</Para>
<Para>The source values are placed in the
<Symbol Role="Variable">destination</Symbol> attribute.  The existing destination values, if any, are
discarded.
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_REPLACE_CERTAIN_VALUES</Literal>
</Para>
<Para>The source values are
substituted for the values at specified positions
in the destination attribute.  (The latter are
discarded.)
</Para>
</ListItem>
</ItemizedList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">source</Symbol></Term>
<ListItem>
<Para>The source that remains accessible.
The source's class is ignored.
However, the attributes being copied from the
source must be compatible with the destination's
class definition.
<IndexTerm Id="DCEADR.MAN392.indx.4">
<Primary>class definition</Primary>
</IndexTerm></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">included_types</Symbol></Term>
<ListItem>
<Para>If present, this parameter identifies the types of the attributes to be
included in the destination (provided that they are displayed in the
source); otherwise, all attributes are to be included.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">initial_value</Symbol></Term>
<ListItem>
<Para>This parameter is present if and only if the <Symbol Role="Variable">modification</Symbol> parameter is
<Literal>OM_INSERT_AT_CERTAIN_POINT</Literal> or <Literal>OM_REPLACE_CERTAIN_VALUES</Literal>.
It specifies the position within each destination attribute at which source
values are inserted, or of the first value replaced, respectively.
</Para>
<Para>If it is <Literal>OM_ALL_VALUES</Literal>,
or exceeds the number of values present in a destination attribute,
the parameter is taken to be equal to that number.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">limiting_value</Symbol></Term>
<ListItem>
<Para>Present if and only if the <Symbol Role="Variable">modification</Symbol> parameter is
<Literal>OM_REPLACE_CERTAIN_VALUES</Literal>.  It specifies
the position within each destination attribute one beyond that of the
last value replaced.
If this parameter is present, it must be greater than the
<Symbol Role="Variable">initial_value</Symbol> parameter.
</Para>
<Para>If the <Symbol Role="Variable">limiting_value</Symbol> parameter is <Literal>OM_ALL_VALUES</Literal>
or exceeds the number of values present in a destination attribute,
the parameter is taken to be equal to that number.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>om_put()</Function> function places
or replaces in one private object (that is, the destination)
copies of the attribute values of another
public or private object (that is, the source).
The client can specify that the source's values
replace all or particular values in the destination,
or are inserted at a particular position within each attribute.
All string values being copied that are in the local representation
are first converted into the nonlocal representation for that syntax
<IndexTerm Id="DCEADR.MAN392.indx.5">
<Primary>local representation</Primary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN392.indx.6">
<Primary>nonlocal representation</Primary>
</IndexTerm>(which may entail the loss of some information).
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>The following describes a partial list of messages (or errors) that might
be returned.  Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">OM_return_code</Symbol></Term>
<ListItem>
<Para>Indicates whether the function succeeded
and, if not, why not.  If the function is
successful, the value of <Symbol Role="Variable">OM_return_code</Symbol> is set to <Literal>OM_SUCCESS</Literal>;
if the function fails, it has one of the error values listed in this reference page.
</Para>
<Para>The exact constants for
<Symbol Role="Variable">OM_return_code</Symbol> are defined in the <Filename>xom.h</Filename>
header file (see the <Filename MoreInfo="RefEntry">xom.h(4xom)</Filename> reference page).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>The following describes a partial list of errors that might be returned.
Refer to the &DCETg; for complete descriptions of all error messages.
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>OM_FUNCTION_DECLINED</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_FUNCTION_INTERRUPTED</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_MEMORY_INSUFFICIENT</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NETWORK_ERROR</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NO_SUCH_CLASS</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NO_SUCH_MODIFICATION</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NO_SUCH_OBJECT</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NO_SUCH_SYNTAX</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NO_SUCH_TYPE</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NOT_CONCRETE</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NOT_PRESENT</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_NOT_PRIVATE</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_PERMANENT_ERROR</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_POINTER_INVALID</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_SYSTEM_ERROR</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_TEMPORARY_ERROR</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_TOO_MANY_VALUES</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_VALUES_NOT_ADJACENT</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_WRONG_VALUE_LENGTH</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_WRONG_VALUE_MAKEUP</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_WRONG_VALUE_NUMBER</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_WRONG_VALUE_POSITION</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_WRONG_VALUE_SYNTAX</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>OM_WRONG_VALUE_TYPE</Literal>
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: om_put.3xom,v 1.1.2.4 1996/12/11 18:02:47 carrig Exp $
    | tagMorph library:  $Id: om_put.3xom,v 1.1.2.4 1996/12/11 18:02:47 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
