<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: pthread_create.3thr,v $
# Revision 1.1.2.6  1996/12/14  19:04:32  carrig
# 	{enh,R1.2.2}
# 	Synopses font
# 	[1996/12/14  19:02:00  carrig]
#
# Revision 1.1.2.5  1996/12/13  21:13:57  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/13  21:12:15  carrig]
# 
# Revision 1.1.2.4  1996/12/06  18:59:17  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/06  18:50:29  wardr]
# 
# Revision 1.1.2.3  1996/12/05  17:57:45  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  17:50:10  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:29:24  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:28:05  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:28:43  weir
# 	Initial submission
# 	[1996/11/29  18:25:45  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN163.rsml.1">
<RefMeta>
<RefEntryTitle>pthread_create</RefEntryTitle>
<ManVolNum>3thr</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pthread_create</Literal></RefName>
<RefPurpose>Creates a thread object and thread</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.11.1  1996/11/19  20:25:29  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads-->
<!-- 	[1996/11/19  20:23:52  wardr]-->
<!---->
<!-- Revision 1.1.9.5  1995/06/09  16:22:08  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/09  16:17:32  buckler]-->
<!-- -->
<!-- Revision 1.1.9.4  1994/09/30  17:59:11  weir-->
<!-- 	(Defect, 9772, R1.1)-->
<!-- 	Corrected miscellaneous errors-->
<!-- 	[1994/09/30  17:56:48  weir]-->
<!-- -->
<!-- Revision 1.1.9.3  1994/08/16  15:17:05  weir-->
<!-- 	Removed extra .TH line-->
<!-- 	[1994/08/16  15:16:28  weir]-->
<!-- -->
<!-- Revision 1.1.9.2  1993/06/01  18:19:00  buckler-->
<!-- 	{defect, 7564, R1.0.3}-->
<!-- 	Turned off fill mode in RELATED INFORMATION section.-->
<!-- 	[1993/05/28  13:13:23  buckler]-->
<!-- -->
<!-- Revision 1.1.7.6  1993/02/19  17:02:12  lmk-->
<!-- 	Defect7040,R1.0.2, reworded paragraph in RETURN VALUES section; also deleted extraneous RELATED INFORMATION header-->
<!-- 	[1993/02/19  16:29:38  lmk]-->
<!-- -->
<!-- Revision 1.1.7.5  1993/02/18  20:34:27  johnson-->
<!-- 	Changes made:  Reworded return values section.-->
<!-- 	File name:     /src/app_ref/man3thr/pthread_create.3thr-->
<!-- 	CR number:     7003-->
<!-- 	[1993/02/18  20:23:17  johnson]-->
<!-- -->
<!-- 	No changes made.-->
<!-- 	[1993/02/08  18:37:13  johnson]-->
<!-- -->
<!-- 	*** empty log message ***-->
<!-- 	[1992/07/13  17:22:05  johnson]-->
<!-- -->
<!-- 	ed/xxx-->
<!-- 	Fixed.ZZ-->
<!-- 	[1992/07/09  19:02:43  johnson]-->
<!-- -->
<!-- 	Defect:  3930-->
<!-- -->
<!-- 	File: src/app_ref/man3thr/pthread_create.3thr-->
<!-- 	Short description:  Changed value to lowercase.-->
<!-- 	[1992/07/02  19:02:22  johnson]-->
<!-- -->
<!-- Revision 1.1.7.4  1993/01/27  20:26:41  cjd-->
<!-- 	Fixing backing build problem-->
<!-- 	[1993/01/27  19:52:40  cjd]-->
<!-- -->
<!-- Revision 1.1.7.3  1993/01/26  23:19:19  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  22:21:50  cjd]-->
<!-- -->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  20:53:35  cjd]-->
<!-- -->
<!-- Revision 1.1.7.2  1992/10/02  19:44:51  weir-->
<!-- 	Moved into 1.0.2doc tree-->
<!-- 	[1992/10/02  18:52:33  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  15:21:23  oaf]-->
<!-- -->
<!-- Revision 1.1.5.3  1992/09/16  18:43:41  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.5.2  1992/08/03  23:56:00  oaf-->
<!-- 	Final_edits.__Most_files_unchanged.-->
<!-- 	[1992/08/03  23:18:12  oaf]-->
<!-- -->
<!-- 	 For all files,-->
<!-- 	      implemented redline edits:-->
<!-- 	      Removed all .ds-.de macros, replaced with simple,-->
<!-- 	              "primitive" spacing.-->
<!-- 	      Changed all tables to "canonical" form,-->
<!-- 	              with format n | l | lw(...).  for errno returns,-->
<!-- 	              with format c | l | lw(...).  for others.-->
<!-- 	      Changed all text in SYNOPSIS to bold or italic - no roman.-->
<!-- 	      Placed 1.5i space requirement (.ne) before "return value" and-->
<!-- 	              "related information" sections (many of ...).-->
<!-- 	      Changed all instances of (\|) to (\|).-->
<!-- 	  (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.-->
<!-- 	[1992/07/29  04:34:05  oaf]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/05/14  16:47:16  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/14  16:44:25  buckler]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/11  17:42:43  weir-->
<!-- 	Submitted for DEC.-->
<!-- 	[1992/05/11  17:05:50  weir]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/05  19:14:51  johnson-->
<!-- 	Changes made:  Changed value to lowercase.-->
<!-- 	File name:     /app_ref/man3thr/pthread_create.3thr-->
<!-- 	CR number:     2588-->
<!-- 	[1992/05/05  19:14:11  johnson]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:30:07  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED.-->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Massachusetts                                             *-->
<!-- All Rights Reserved.                                               *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  No title to or        *-->
<!-- ownership of the document is hereby transferred.                   *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by Digital      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lpthread_create(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN163.indx.1">
<Primary><Function>pthread_create()</Function></Primary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.2">
<Primary>thread</Primary>
<Secondary>creating</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.3">
<Primary>creating a thread</Primary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.4">
<Primary>thread</Primary>
<Secondary>events that cause termination</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.5">
<Primary>thread</Primary>
<Secondary>normal termination</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.6">
<Primary>thread</Primary>
<Secondary>error termination</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.7">
<Primary>termination of a thread</Primary>
<Secondary>events that cause</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.8">
<Primary>termination of a thread</Primary>
<Secondary>normal</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.9">
<Primary>termination of a thread</Primary>
<Secondary>error</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.10">
<Primary>normal termination of a thread</Primary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN163.indx.11">
<Primary>error termination of a thread</Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;pthread.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>int </Literal>pthread_create</Function></FuncDef>
<ParamDef>pthread_t *<Parameter>thread</Parameter></ParamDef>
<ParamDef>pthread_attr_t <Parameter>attr</Parameter></ParamDef>
<ParamDef>pthread_startroutine_t <Parameter>start_routine</Parameter></ParamDef>
<ParamDef>pthread_addr_t <Parameter>arg</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">thread</Symbol></Term>
<ListItem>
<Para>Handle to the thread object created.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">attr</Symbol></Term>
<ListItem>
<Para>Thread attributes object that defines the characteristics of the
thread being created.  If you specify <Literal>pthread_attr_default</Literal>,
default attributes are used.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">start_routine</Symbol></Term>
<ListItem>
<Para>Function executed as the new thread's start routine.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">arg</Symbol></Term>
<ListItem>
<Para>Address value copied and passed to the thread's start routine.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>pthread_create()</Function> 
routine creates a thread object and a thread.  A <Symbol Role="Variable">thread</Symbol> is a 
<!--.gL "thread"-->
single, sequential flow of control within a program.  It is the active
execution of a designated routine, including any nested routine invocations.
A thread object defines and controls the executing thread.
</Para>
<RefSect2>
<Title>Creating a Thread</Title>
<Para>Calling this routine sets into motion the following actions:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>An internal thread object is created to describe the thread.
</Para>
</ListItem>
<ListItem>
<Para>The associated executable thread is created with attributes specified by
the <Symbol Role="Variable">attr</Symbol> parameter (or with default attributes if
<Literal>pthread_attr_default</Literal> is specified).
</Para>
</ListItem>
<ListItem>
<Para>The <Symbol Role="Variable">thread</Symbol> parameter receives the new thread.
</Para>
</ListItem>
<ListItem>
<Para>The <Symbol Role="Variable">start_routine</Symbol> function is called.  This may occur before this
routine returns successfully.
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</RefSect2>
<RefSect2>
<Title>Thread Execution</Title>
<Para>The thread is created in the ready state and therefore might immediately
begin executing the function specified by the <Symbol Role="Variable">start_routine</Symbol>
parameter.
The newly created thread begins running before <Function>pthread_create()</Function>
completes if the new thread follows the <Literal>SCHED_RR</Literal> or
<Literal>SCHED_FIFO</Literal> scheduling
policy or has a priority higher than the creating thread, or both.
Otherwise, the new thread begins running at its turn, which with sufficient
processors might also be before <Function>pthread_create()</Function> returns.
</Para>
<Para>The <Symbol Role="Variable">start_routine</Symbol> parameter is passed a copy of the <Symbol Role="Variable">arg</Symbol>
parameter.  The value of the <Symbol Role="Variable">arg</Symbol> parameter is unspecified.
</Para>
<Para>The thread object exists until the <Function>pthread_detach()</Function> routine is
called or the thread terminates, whichever occurs last.
</Para>
<Para>The synchronization between the caller of <Function>pthread_create()</Function> and the
newly created thread is through the use of the <Function>pthread_join()</Function> routine
(or any other mutexes or condition variables they agree to use).
</Para>
</RefSect2>
<RefSect2>
<Title>Terminating a Thread</Title>
<Para>A thread terminates when one of the following events occurs:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>The thread returns from its start routine.
</Para>
</ListItem>
<ListItem>
<Para>The thread exits (within a routine) as the result of calling the
<Function>pthread_exit()</Function> routine.
</Para>
</ListItem>
<ListItem>
<Para>The thread is canceled.
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
</RefSect2>
<RefSect2>
<Title>When a Thread Terminates</Title>
<Para>The following actions are performed when a thread terminates:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>If the thread terminates by returning from its start routine or calling
<Function>pthread_exit()</Function>, the return value is copied into the thread object.
If the start routine returns normally and the start routine is a procedure
that does not return a value, then the result obtained by
<Function>pthread_join()</Function> is unpredictable.  If the thread has been cancelled, a
return value of &minus;1 is copied into the thread object.  The return value can
be retrieved by other threads by calling the <Function>pthread_join()</Function>
routine.
</Para>
</ListItem>
<ListItem>
<Para>A destructor for each thread-specific data point is removed from the list of
destructors for this thread and then is called.  This step destroys all the
thread-specific data associated with the current thread.
<?sml-break><?sml-need 7></Para>
</ListItem>
<ListItem>
<Para>Each cleanup handler that has been declared by
<Function>pthread_cleanup_push()</Function> and not yet removed by
<Function>pthread_cleanup_pop()</Function> is called.  The most recently pushed handler
is called first.
</Para>
</ListItem>
<ListItem>
<Para>A flag is set in the thread object indicating that the thread has
terminated.  This flag must be set in order for callers of 
<Function>pthread_join()</Function> to return from the call.
</Para>
</ListItem>
<ListItem>
<Para>A broadcast is made so that all threads currently waiting in a call to
<Function>pthread_join()</Function> can return from the call.
</Para>
</ListItem>
<ListItem>
<Para>The thread object is marked to indicate that it is no longer needed by
the thread itself.  A check is made to determine if the thread object is no
longer needed by other threads; that is, if <Function>pthread_detach()</Function> has
been called.  If that routine is called, then the thread object
is deallocated.
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<?sml-break>
<?sml-need 1.5i>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>Upon successful completion, this routine stores the identifier of the
created thread at <Symbol Role="Variable">thread</Symbol> and returns 0. Otherwise, a value of -1 is
returned and no thread is created, the contents of <Symbol Role="Variable">thread</Symbol> are
undefined, and <Literal>errno</Literal> may be set to one of the following values:
</Para>
<?sml-need 1.5i>
<InformalTable Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="3">
<ColSpec Colsep="1" Align="Left" Colwidth="103*" Colname="col1" Colnum="1">
<ColSpec Colsep="1" Align="Left" Colwidth="103*" Colname="col2" Colnum="2">
<ColSpec Align="Left" Colwidth="248*" Colname="col3" Colnum="3">
<TBody>
<Row>
<Entry Rowsep="1"><Literal>Return</Literal></Entry>
<Entry Rowsep="1"><Literal>Error</Literal></Entry>
<Entry Rowsep="1"><Literal>Description</Literal></Entry>
</Row>
<Row>
<Entry>0</Entry>
<Entry></Entry>
<Entry>Successful completion.</Entry>
</Row>
<Row>
<Entry>&minus;1</Entry>
<Entry>[<Literal>EAGAIN</Literal>]</Entry>
<Entry>The system lacks the necessary resources to create another thread.
</Entry>
</Row>
<Row>
<Entry>&minus;1</Entry>
<Entry>[<Literal>ENOMEM</Literal>]</Entry>
<Entry>Insufficient memory exists to create the thread object.  This is not a temporary condition.
</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<!-- .cS-->
<!-- .nL-->
<!-- .ne 1.5i-->
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
<!-- .oS-->
<!-- int pthread_create (pthread_t *thread, pthread_attr_t attr,-->
<!-- 	pthread_startroutine_t start_routine, pthread_addr_t arg);-->
<!-- .oE-->
<!-- .cE-->
<?sml-break>
<?sml-need 1.2i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:  <Filename MoreInfo="RefEntry">pthread_attr_create(3thr)</Filename>, <Filename MoreInfo="RefEntry">pthread_cancel(3thr)</Filename>, 
<Filename MoreInfo="RefEntry">pthread_detach(3thr)</Filename>, 
<Filename MoreInfo="RefEntry">pthread_exit(3thr)</Filename>, <Filename MoreInfo="RefEntry">pthread_join(3thr)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pthread_create.3thr,v 1.1.2.6 1996/12/14 19:04:32 carrig Exp $
    | tagMorph library:  $Id: pthread_create.3thr,v 1.1.2.6 1996/12/14 19:04:32 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
