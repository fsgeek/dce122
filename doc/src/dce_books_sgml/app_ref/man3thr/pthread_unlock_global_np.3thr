<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: pthread_unlock_global_np.3thr,v $
# Revision 1.1.2.6  1996/12/14  19:05:26  carrig
# 	{enh,R1.2.2}
# 	Synopses font
# 	[1996/12/14  19:02:40  carrig]
#
# Revision 1.1.2.5  1996/12/13  21:14:34  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/13  21:12:56  carrig]
# 
# Revision 1.1.2.4  1996/12/06  18:59:52  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/06  18:51:00  wardr]
# 
# Revision 1.1.2.3  1996/12/05  17:58:20  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  17:50:42  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:29:54  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:28:34  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:29:44  weir
# 	Initial submission
# 	[1996/11/29  18:26:10  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN193.rsml.1">
<RefMeta>
<RefEntryTitle>pthread_unlock_global_np</RefEntryTitle>
<ManVolNum>3thr</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pthread_unlock_global_np</Literal></RefName>
<RefPurpose>Unlocks a global mutex</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.9.1  1996/11/19  20:26:07  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads-->
<!-- 	[1996/11/19  20:24:20  wardr]-->
<!---->
<!-- Revision 1.1.7.6  1995/06/09  16:22:38  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/09  16:18:07  buckler]-->
<!-- -->
<!-- Revision 1.1.7.5  1994/09/30  17:59:38  weir-->
<!-- 	(Defect, 9772, R1.1)-->
<!-- 	Corrected miscellaneous errors-->
<!-- 	[1994/09/30  17:57:21  weir]-->
<!-- -->
<!-- Revision 1.1.7.4  1993/01/27  20:28:07  cjd-->
<!-- 	Fixing backing build problem-->
<!-- 	[1993/01/27  19:55:24  cjd]-->
<!-- -->
<!-- Revision 1.1.7.3  1993/01/26  23:20:58  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  22:24:46  cjd]-->
<!-- -->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  20:56:21  cjd]-->
<!-- -->
<!-- Revision 1.1.7.2  1992/10/02  19:49:20  weir-->
<!-- 	Moved into 1.0.2doc tree-->
<!-- 	[1992/10/02  18:55:41  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  15:26:56  oaf]-->
<!-- -->
<!-- Revision 1.1.5.3  1992/09/16  18:45:36  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.5.2  1992/08/03  23:59:20  oaf-->
<!-- 	Final_edits.__Most_files_unchanged.-->
<!-- 	[1992/08/03  23:21:18  oaf]-->
<!-- -->
<!-- 	 For all files,-->
<!-- 	...\"       implemented redline edits:-->
<!-- 	...\"       Removed all .ds-.de macros, replaced with simple,-->
<!-- 	...\"               "primitive" spacing.-->
<!-- 	...\"       Changed all tables to "canonical" form,-->
<!-- 	...\"               with format n | l | lw(...).  for errno returns,-->
<!-- 	...\"               with format c | l | lw(...).  for others.-->
<!-- 	...\"       Changed all text in SYNOPSIS to bold or italic - no roman.-->
<!-- 	...\"       Placed 1.5i space requirement (.ne) before "return value" and-->
<!-- 	...\"               "related information" sections (many of ...).-->
<!-- 	...\"       Changed all instances of (\|) to (\|).-->
<!-- 	...\"   (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.-->
<!-- 	[1992/07/29  04:47:41  oaf]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/14  19:33:28  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/14  19:31:04  buckler]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:29:59  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED.-->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Massachusetts                                             *-->
<!-- All Rights Reserved.                                               *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  No title to or        *-->
<!-- ownership of the document is hereby transferred.                   *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by Digital      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lpthread_unlock_global_np(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN193.indx.1">
<Primary>global mutex</Primary>
<Secondary>unlocking</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN193.indx.2">
<Primary>unlocking a global mutex</Primary>
</IndexTerm>
<RefSect1>
<Title>Synopsis</Title>
<Para>
<ProgramListing>
<UserInput>
<?Pub _font TypeSize="10pt">
#include &lt;pthread.h>

<Literal>void pthread_unlock_global_np&lpar;&thinsp;&rpar;;</Literal>
<?Pub /_font><?Pub Caret>
</UserInput>
</ProgramListing>
</Para>

</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>pthread_unlock_global_np()</Function>
routine unlocks the global mutex when each call to
<Function>pthread_lock_global_np()</Function> is matched by a call to this
routine.  For example, if you called <Function>pthread_lock_global_np()</Function> three
times, <Function>pthread_unlock_global_np()</Function> unlocks the global mutex when you
call it the third time.
If no threads are waiting for the global mutex, it becomes unlocked
with no current owner.  If one or more threads are waiting to lock the
global mutex, one thread returns from its call to
<Function>pthread_lock_global_np()</Function>.  The scheduling policy is used to
determine which thread acquires the global mutex.  For the policies
<Literal>SCHED_FIFO</Literal> and <Literal>SCHED_RR</Literal>, a blocked thread is
chosen in priority order.
</Para>
<Para>The results of calling this routine are unpredictable if the global mutex is
already unlocked.  The results of calling this routine are also unpredictable
if the global mutex is owned by a thread other than the calling thread.
</Para>
<Para>This routine is a new primitive.
</Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>No value is returned.
<!-- .cS-->
<!-- .SH "EXAMPLES"-->
<!-- .oS-->
<!-- void pthread_unlock_global_np (\|);-->
<!-- .oE-->
<!-- .cE-->
</Para>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<!--no-op:  l-->
<Para>Functions:  <Filename MoreInfo="RefEntry">pthread_lock_global_np(3thr)</Filename>,
<Filename MoreInfo="RefEntry">pthread_mutex_lock(3thr)</Filename>,
<Filename MoreInfo="RefEntry">pthread_mutex_unlock(3thr)</Filename>,
<Filename MoreInfo="RefEntry">pthread_mutexattr_setkind_np(3thr)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pthread_unlock_global_np.3thr,v 1.1.2.6 1996/12/14 19:05:26 carrig Exp $
    | tagMorph library:  $Id: pthread_unlock_global_np.3thr,v 1.1.2.6 1996/12/14 19:05:26 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
