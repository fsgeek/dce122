<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: pthread_cond_init.3thr,v $
# Revision 1.1.2.6  1996/12/14  19:04:24  carrig
# 	{enh,R1.2.2}
# 	Synopses font
# 	[1996/12/14  19:01:52  carrig]
#
# Revision 1.1.2.5  1996/12/13  21:13:50  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/13  21:12:06  carrig]
# 
# Revision 1.1.2.4  1996/12/06  18:59:10  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/06  18:50:20  wardr]
# 
# Revision 1.1.2.3  1996/12/05  17:57:38  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  17:50:03  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:29:18  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:28:00  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:28:30  weir
# 	Initial submission
# 	[1996/11/29  18:25:40  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN157.rsml.1">
<RefMeta>
<RefEntryTitle>pthread_cond_init</RefEntryTitle>
<ManVolNum>3thr</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pthread_cond_init</Literal></RefName>
<RefPurpose>Creates a condition variable</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.9.1  1996/11/19  20:25:22  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads-->
<!-- 	[1996/11/19  20:23:47  wardr]-->
<!---->
<!-- Revision 1.1.7.8  1995/06/09  16:22:02  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/09  16:17:25  buckler]-->
<!-- -->
<!-- Revision 1.1.7.7  1994/09/30  17:59:05  weir-->
<!-- 	(Defect, 9772, R1.1)-->
<!-- 	Corrected miscellaneous errors-->
<!-- 	[1994/09/30  17:56:42  weir]-->
<!-- -->
<!-- Revision 1.1.7.6  1993/02/17  19:16:51  lmk-->
<!-- 	Defect 7040, R1.0.2, Changed paragraph in RETURN VALUES section-->
<!-- 	[1993/02/17  19:15:14  lmk]-->
<!-- -->
<!-- Revision 1.1.7.5  1993/01/27  20:26:23  cjd-->
<!-- 	Fixing backing build problem-->
<!-- 	[1993/01/27  19:51:57  cjd]-->
<!-- -->
<!-- Revision 1.1.7.4  1993/01/26  23:18:58  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  22:21:17  cjd]-->
<!-- -->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  20:53:04  cjd]-->
<!-- -->
<!-- Revision 1.1.7.3  1993/01/08  19:57:46  johnson-->
<!-- 	CR#:     5265-->
<!-- 	File:    /src/app_ref/man3thr/pthread_cond_init.3thr-->
<!-- 	Change:  Added EINVAL return value-->
<!-- 	[1993/01/08  19:57:13  johnson]-->
<!-- -->
<!-- Revision 1.1.7.2  1992/10/02  19:43:05  weir-->
<!-- 	Moved into 1.0.2doc tree-->
<!-- 	[1992/10/02  18:51:40  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  15:20:27  oaf]-->
<!-- -->
<!-- Revision 1.1.5.3  1992/09/16  18:43:18  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.5.2  1992/08/03  23:55:08  oaf-->
<!-- 	Final_edits.__Most_files_unchanged.-->
<!-- 	[1992/08/03  23:17:33  oaf]-->
<!-- -->
<!-- 	 For all files,-->
<!-- 	...\"       implemented redline edits:-->
<!-- 	...\"       Removed all .ds-.de macros, replaced with simple,-->
<!-- 	...\"               "primitive" spacing.-->
<!-- 	...\"       Changed all tables to "canonical" form,-->
<!-- 	...\"               with format n | l | lw(...).  for errno returns,-->
<!-- 	...\"               with format c | l | lw(...).  for others.-->
<!-- 	...\"       Changed all text in SYNOPSIS to bold or italic - no roman.-->
<!-- 	...\"       Placed 1.5i space requirement (.ne) before "return value" and-->
<!-- 	...\"               "related information" sections (many of ...).-->
<!-- 	...\"       Changed all instances of (\|) to (\|).-->
<!-- 	...\"   (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.-->
<!-- 	[1992/07/29  04:28:51  oaf]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/06/11  19:30:50  johnson-->
<!-- 	Defect:  3930-->
<!-- 	File: src/app_ref/man3thr/pthread_cond_init.3thr-->
<!-- 	Short description:  Changed value to lowercase.-->
<!-- 	[1992/06/11  19:29:58  johnson]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:30:04  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED.-->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Massachusetts                                             *-->
<!-- All Rights Reserved.                                               *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  No title to or        *-->
<!-- ownership of the document is hereby transferred.                   *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by Digital      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lpthread_cond_init(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN157.indx.1">
<Primary>creating</Primary>
<Secondary>a condition variable</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN157.indx.2">
<Primary>initializing a condition variable</Primary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN157.indx.3">
<Primary>condition variable</Primary>
<Secondary>creating</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN157.indx.4">
<Primary>condition variable</Primary>
<Secondary>definition of</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN157.indx.5">
<Primary>predicate</Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;pthread.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>int </Literal>pthread_cond_init</Function></FuncDef>
<ParamDef>pthread_cond_t *<Parameter>cond</Parameter></ParamDef>
<ParamDef>pthread_condattr_t <Parameter>attr</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">cond</Symbol></Term>
<ListItem>
<Para>Condition variable that is created.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">attr</Symbol></Term>
<ListItem>
<Para>Condition variable attributes object that defines the characteristics
of the condition variable created.  If you specify
<Literal>pthread_condattr_default</Literal>, default attributes are used.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>pthread_cond_init()</Function>  routine creates and initializes a condition variable.  A condition
variable is a synchronization object used in conjunction with a mutex.  A
mutex controls access to shared data; a condition variable allows threads to
wait for that data to enter a defined state.  The state is defined by a
Boolean expression called a predicate.
<!--.gL "predicate"-->
<IndexTerm Id="DCEADR.MAN157.indx.6">
<Primary>predicate</Primary>
<Secondary>definition of</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN157.indx.7">
<Primary>condition variable</Primary>
<Secondary>definition of predicate</Secondary>
</IndexTerm></Para>
<Para>A condition variable is signaled or broadcast to indicate that a predicate
might have become true.  The broadcast operation indicates that all waiting
threads need to resume and reevaluate the predicate.  The signal operation is
used when any one waiting thread can continue.
</Para>
<Para>If a thread that holds a mutex determines that the shared data is not in the
correct state for it to proceed (the associated predicate is not true), it
waits on a condition variable associated with the desired state.  Waiting on
the condition variable automatically releases the mutex so that other
threads can modify or examine the shared data.  When a thread modifies the
state of the shared data so that a predicate might be true, it signals or
broadcasts on the appropriate condition variable so that threads waiting for
that predicate can continue.
</Para>
<Para><?sml-need 10>It is important that all threads waiting on a particular condition variable
at any time hold the <Replaceable>same</Replaceable> mutex.  If they do not, the behavior of
the wait operation is unpredictable (an implementation can use the mutex to
control internal access to the condition variable object).  However, it is
legal for a client to store condition variables and mutexes and later reuse
them in different combinations.  The client must ensure that no threads use
the condition variable with the old mutex.  At any time, an arbitrary number
of condition variables can be associated with a single mutex, each
representing a different predicate of the shared data protected by that
mutex.
</Para>
<Para>Condition variables are not owned by a particular thread.  Any associated
storage is not automatically deallocated when the creating thread
terminates.
<?sml-break><?sml-need 1.5i></Para>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>If the function fails, <Literal>errno</Literal> may be set to one of the
following values:
</Para>
<InformalTable Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="3">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="103*" Colname="col1" Colnum="1">
<ColSpec Colsep="1" Align="Left" Colwidth="103*" Colname="col2" Colnum="2">
<ColSpec Align="Left" Colwidth="248*" Colname="col3" Colnum="3">
<TBody>
<Row>
<Entry Rowsep="1" Align="Left"><Literal>Return</Literal></Entry>
<Entry Rowsep="1"><Literal>Error</Literal></Entry>
<Entry Rowsep="1"><Literal>Description</Literal></Entry>
</Row>
<Row>
<Entry>0</Entry>
<Entry></Entry>
<Entry>Successful completion.</Entry>
</Row>
<Row>
<Entry>&minus;1</Entry>
<Entry>[<Literal>EAGAIN</Literal>]</Entry>
<Entry>The system lacks the necessary resources to initialize another condition
variable.
</Entry>
</Row>
<Row>
<Entry>&minus;1</Entry>
<Entry>[<Literal>EINVAL</Literal>]</Entry>
<Entry>Invalid attributes object.
</Entry>
</Row>
<Row>
<Entry>&minus;1</Entry>
<Entry>[<Literal>ENOMEM</Literal>]</Entry>
<Entry>Insufficient memory exists to initialize the condition variable.
</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<!-- .cS-->
<!-- .nL-->
<!-- .ne 1.5i-->
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
<!-- .oS-->
<!-- int pthread_cond_init (pthread_cond_t *cond,-->
<!-- 	pthread_condattr_t attr);-->
<!-- .oE-->
<!-- .cE-->
<?sml-break>
<?sml-need 1.2i>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Functions:
<Filename MoreInfo="RefEntry">pthread_cond_broadcast(3thr)</Filename>,
<Filename MoreInfo="RefEntry">pthread_cond_destroy(3thr)</Filename>,
<Filename MoreInfo="RefEntry">pthread_cond_signal(3thr)</Filename>,
<Filename MoreInfo="RefEntry">pthread_cond_timedwait(3thr)</Filename>,
<Filename MoreInfo="RefEntry">pthread_cond_wait(3thr)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pthread_cond_init.3thr,v 1.1.2.6 1996/12/14 19:04:24 carrig Exp $
    | tagMorph library:  $Id: pthread_cond_init.3thr,v 1.1.2.6 1996/12/14 19:04:24 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
