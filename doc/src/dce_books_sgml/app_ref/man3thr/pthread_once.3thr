<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: pthread_once.3thr,v $
# Revision 1.1.2.6  1996/12/14  19:05:14  carrig
# 	{enh,R1.2.2}
# 	Synopses font
# 	[1996/12/14  19:02:28  carrig]
#
# Revision 1.1.2.5  1996/12/13  21:14:24  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/13  21:12:44  carrig]
# 
# Revision 1.1.2.4  1996/12/06  18:59:42  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/06  18:50:51  wardr]
# 
# Revision 1.1.2.3  1996/12/05  17:58:10  wardr
# 	{edit,R1.2.2}
# 	Fixed initial conversion problems
# 	[1996/12/05  17:50:33  wardr]
# 
# Revision 1.1.2.2  1996/12/01  20:29:44  weir
# 	Removed thinsp entities
# 	[1996/12/01  20:28:25  weir]
# 
# Revision 1.1.2.1  1996/11/29  18:29:25  weir
# 	Initial submission
# 	[1996/11/29  18:26:03  weir]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCEADR.MAN184.rsml.1">
<RefMeta>
<RefEntryTitle>pthread_once</RefEntryTitle>
<ManVolNum>3thr</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Literal>pthread_once</Literal></RefName>
<RefPurpose>Calls an
initialization routine executed by one thread, a single time</RefPurpose>
</RefNameDiv>
<!---->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- OLD HISTORY-->
<!-- Revision 1.1.11.1  1996/11/19  20:25:56  wardr-->
<!-- 	{edit,R1.2.2}-->
<!-- 	Init capped heads-->
<!-- 	[1996/11/19  20:24:12  wardr]-->
<!---->
<!-- Revision 1.1.9.8  1995/06/21  13:23:13  buckler-->
<!-- 	More 1.1 edits.-->
<!-- 	[1995/06/20  17:36:06  buckler]-->
<!-- -->
<!-- Revision 1.1.9.7  1995/06/09  16:22:30  buckler-->
<!-- 	1.1 edits and Prentice Hall reformat-->
<!-- 	[1995/06/09  16:17:57  buckler]-->
<!-- -->
<!-- Revision 1.1.9.6  1994/09/30  17:59:30  weir-->
<!-- 	(Defect, 9772, R1.1)-->
<!-- 	Corrected miscellaneous errors-->
<!-- 	[1994/09/30  17:57:12  weir]-->
<!-- -->
<!-- Revision 1.1.9.5  1993/02/18  18:48:42  lmk-->
<!-- 	Defect 7040,R1.0.2, Corrected paragraph in RETURN VALUES section-->
<!-- 	[1993/02/18  18:46:38  lmk]-->
<!-- -->
<!-- Revision 1.1.9.4  1993/01/27  20:27:39  cjd-->
<!-- 	Fixing backing build problem-->
<!-- 	[1993/01/27  19:54:36  cjd]-->
<!-- -->
<!-- Revision 1.1.9.3  1993/01/26  23:20:30  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  22:23:50  cjd]-->
<!-- -->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/26  20:55:26  cjd]-->
<!-- -->
<!-- Revision 1.1.9.2  1992/10/02  19:48:20  weir-->
<!-- 	Moved into 1.0.2doc tree-->
<!-- 	[1992/10/02  18:54:29  weir]-->
<!-- -->
<!-- 	For P/H, now and forever!-->
<!-- 	[1992/09/16  15:25:12  oaf]-->
<!-- -->
<!-- Revision 1.1.7.3  1992/09/16  18:44:52  oaf-->
<!-- 	*** empty log message ***-->
<!-- -->
<!-- Revision 1.1.7.2  1992/08/03  23:58:24  oaf-->
<!-- 	Final_edits.__Most_files_unchanged.-->
<!-- 	[1992/08/03  23:20:24  oaf]-->
<!-- -->
<!-- 	 For all files,-->
<!-- 	...\"       implemented redline edits:-->
<!-- 	...\"       Removed all .ds-.de macros, replaced with simple,-->
<!-- 	...\"               "primitive" spacing.-->
<!-- 	...\"       Changed all tables to "canonical" form,-->
<!-- 	...\"               with format n | l | lw(...).  for errno returns,-->
<!-- 	...\"               with format c | l | lw(...).  for others.-->
<!-- 	...\"       Changed all text in SYNOPSIS to bold or italic - no roman.-->
<!-- 	...\"       Placed 1.5i space requirement (.ne) before "return value" and-->
<!-- 	...\"               "related information" sections (many of ...).-->
<!-- 	...\"       Changed all instances of (\|) to (\|).-->
<!-- 	...\"   (Obviously), placed in /project/dce/build/dce1.0.1PHdoc.-->
<!-- 	[1992/07/29  04:43:22  oaf]-->
<!-- -->
<!-- Revision 1.1.2.6  1992/05/14  19:32:42  buckler-->
<!-- 	Editorial review-->
<!-- 	[1992/05/14  19:29:48  buckler]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/05/11  18:19:35  marty-->
<!-- 	Null delta, node change made.-->
<!-- 	[1992/05/11  18:16:49  marty]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/05/11  17:44:29  weir-->
<!-- 	Submitted for DEC.-->
<!-- 	[1992/05/11  17:44:04  weir]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/05/05  20:11:01  johnson-->
<!-- 	Changes made:  Removed EINVAL return value.-->
<!-- 	File name:     /app_ref/man3thr/pthread_once.3thr-->
<!-- 	CR number:     2618-->
<!-- 	[1992/05/05  20:10:29  johnson]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/05/01  14:42:08  johnson-->
<!-- 	Changes made:  Fixed typo-->
<!-- 	File name:  pthread_once.3thr-->
<!-- 	CR number: 2305-->
<!-- 	[1992/04/30  19:22:55  johnson]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:29:39  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED.-->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *-->
<!-- Maynard, Massachusetts                                             *-->
<!-- All Rights Reserved.                                               *-->
<!--                                                                    *-->
<!-- This document is furnished under a license and may be used and     *-->
<!-- copied only in accordance with the terms of such license and with  *-->
<!-- the inclusion of the above copyright notice.  No title to or        *-->
<!-- ownership of the document is hereby transferred.                   *-->
<!--                                                                    *-->
<!-- The information in this document is subject to change without      *-->
<!-- notice and should not be construed as a commitment by Digital      *-->
<!-- Equipment Corporation.                                             *-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- .iX "\*Lpthread_once(\|)\*O"-->
<IndexTerm Id="DCEADR.MAN184.indx.1">
<Primary>initialization</Primary>
<Secondary>one-time</Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN184.indx.2">
<Primary>data structure</Primary>
<Secondary><StructName Role="typedef">pthread_once_t</StructName></Secondary>
</IndexTerm>
<IndexTerm Id="DCEADR.MAN184.indx.3">
<Primary><StructName Role="typedef">pthread_once_t</StructName> data structure</Primary>
</IndexTerm>
<RefSect1 Remap="ANSI">
<Title>Synopsis</Title>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;pthread.h>
</FuncSynopsisInfo>
<FuncDef><Function><Literal>int </Literal>pthread_once</Function></FuncDef>
<ParamDef>pthread_once_t *<Parameter>once_block</Parameter></ParamDef>
<ParamDef>pthread_initroutine_t <Parameter>init_routine</Parameter></ParamDef>
</FuncSynopsis>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Parameters</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">once_block</Symbol></Term>
<ListItem>
<Para>Address of a record that defines the one-time initialization code.  Each
one-time initialization routine must have its own unique
<StructName Role="typedef">pthread_once_t</StructName> data structure.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">init_routine</Symbol></Term>
<ListItem>
<Para>Address of a procedure that performs the initialization.  This routine is
called only once, regardless of the number of times it and its associated
<Symbol Role="Variable">once_block</Symbol> are passed to <Function>pthread_once()</Function>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Function>pthread_once()</Function>
routine calls an initialization routine executed by one thread, a
single time.  This routine allows you to create your own initialization code
that is guaranteed to be run only once, even if called simultaneously by
multiple threads or
multiple times in the same thread.
</Para>
<Para>For example, a mutex or a thread-specfic data key must be created exactly
once.  Calling <Function>pthread_once()</Function> prevents
the code that creates a mutex
or thread-specific data from being called by multiple threads.  Without this
routine, the execution must be serialized so that only one thread performs
the initialization.  Other threads that reach the same point in the code
are delayed until the first thread is finished.
</Para>
<Para>This routine initializes the control record if it has not been initialized
and then determines if the client one-time initialization routine has
executed once.  If it has not executed, this routine calls the initialization
routine specified in <Symbol Role="Variable">init_routine</Symbol>.  If the client one-time
initialization code has executed once, this routine returns.
</Para>
<Para>The <StructName Role="typedef">pthread_once_t</StructName> data structure is a record that allows client
initialization operations to guarantee mutual exclusion of access to the
initialization routine, and that each initialization routine is executed
exactly once.
<?sml-break><?sml-need 1.0i></Para>
<Para>The client code must declare a variable of type <StructName Role="typedef">pthread_once_t</StructName> to
use the client initialization operations.  This variable must be
initialized using the <Literal>pthread_once_init</Literal> macro, as follows:
</Para>
<InformalExample>
<Para><ProgramListing>static pthread_once_t myOnceBlock = pthread_once_init;
</ProgramListing></Para>
</InformalExample>
<?sml-break>
<?sml-need 1.5i>
</RefSect1>
<RefSect1>
<Title>Return Values</Title>
<Para>If the function fails, <Literal>errno</Literal> may be set to one of the
following values:
</Para>
<InformalTable Remap="center" Orient="Port">
<TGroup Rowsep="0" Colsep="0" Cols="3">
<ColSpec Colsep="1" Char="." Align="Char" Colwidth="103*" Colname="col1" Colnum="1">
<ColSpec Colsep="1" Align="Left" Colwidth="103*" Colname="col2" Colnum="2">
<ColSpec Align="Left" Colwidth="248*" Colname="col3" Colnum="3">
<TBody>
<Row>
<Entry Rowsep="1" Align="Left"><Literal>Return</Literal></Entry>
<Entry Rowsep="1"><Literal>Error</Literal></Entry>
<Entry Rowsep="1"><Literal>Description</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1">&minus;1</Entry>
<Entry Rowsep="1">[<Literal>EINVAL</Literal>]</Entry>
<Entry Rowsep="1">The value specified by a parameter is invalid.</Entry>
</Row>
<Row>
<Entry>0</Entry>
<Entry></Entry>
<Entry>Successful completion.</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<!-- .cS-->
<!-- .nL-->
<!-- .ne 1.5i-->
<!-- .SH "EXAMPLES"-->
<!-- .PP-->
<!-- .oS-->
<!-- #include <pthread.h>-->
<!-- .wH "<tag>"(pthread.h)-->
<!-- static pthread_once_t make_my_mutex = pthread_once_init;-->
<!-- static pthread_mutex_t my_mutex;-->
<!-- void initialize_mutex (\|) {-->
<!--      pthread_mutex_init (&my_mutex, &pthread_mutexattr_default);-->
<!-- }-->
<!-- pthread_once (&make_my_mutex, initialize_mutex);-->
<!-- .oE-->
<!-- .cE-->
</RefSect1>
<!--+ 11/27/96 19:46:25
    | tagMorph:  $Id: pthread_once.3thr,v 1.1.2.6 1996/12/14 19:05:14 carrig Exp $
    | tagMorph library:  $Id: pthread_once.3thr,v 1.1.2.6 1996/12/14 19:05:14 carrig Exp $
    | sml-to-docbook:  1.25
    +-->
</RefEntry>
