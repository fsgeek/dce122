<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: acl.8dce,v $
# Revision 1.1.2.9  1996/12/14  17:29:01  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/14  17:26:46  carrig]
#
# Revision 1.1.2.8  1996/12/13  18:18:13  carrig
# 	{enh,R1.2.2}
# 	Corrections to Synopses
# 	[1996/12/13  18:16:25  carrig]
# 
# Revision 1.1.2.7  1996/12/11  21:41:37  carrig
# 	{enh,R1.2.2}
# 	Commands
# 	[1996/12/11  21:39:55  carrig]
# 
# Revision 1.1.2.6  1996/12/01  20:02:13  carrig
# 	{enh,R1.2.2}
# 	Ward's comments
# 	[1996/12/01  20:00:36  carrig]
# 
# Revision 1.1.2.5  1996/11/22  21:16:54  carrig
# 	{enh,R1.2.2}
# 	Ready for editor
# 	[1996/11/22  21:15:13  carrig]
# 
# Revision 1.1.2.4  1996/11/22  15:16:25  wardr
# 	{edit,R1.2.2}
# 	Init capped heads
# 	[1996/11/22  15:14:39  wardr]
# 
# Revision 1.1.2.3  1996/11/21  20:33:09  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/11/21  20:31:15  carrig]
# 
# Revision 1.1.2.2  1996/11/20  20:12:02  carrig
# 	{enh,R1.2.2}
# 	No changes
# 	[1996/11/20  20:10:14  carrig]
# 
# Revision 1.1.2.1  1996/11/11  23:20:43  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/11/11  23:16:07  wardr]
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCECR.MAN4.rsml.1" RevisionFlag="Changed">
<RefMeta>
<RefEntryTitle>acl</RefEntryTitle>
<ManVolNum>8dce</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Command>acl</Command></RefName>
<RefPurpose>A dcecp object that manages DCE access control lists  
</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- HISTORY-->
<!-- Revision 1.1.7.5  1996/10/28  14:55:53  wardr-->
<!-- 	{def,13588,R1.2.2}-->
<!-- 	Add Pointer to Problem Determination Guide-->
<!-- 	[1996/10/28  14:54:07  wardr]-->
<!---->
<!-- Revision 1.1.7.4  1996/07/19  15:47:39  millett-->
<!-- 	{edt,R1.2.2}-->
<!-- 	 OSF edits-->
<!-- 	[1996/07/19  15:46:52  millett]-->
<!-- -->
<!-- Revision 1.1.7.3  1996/06/07  19:15:12  millett-->
<!-- 	{def, CR13377, R1.2.2}-->
<!-- 	HP review edits-->
<!-- 	[1996/06/07  19:14:49  millett]-->
<!-- -->
<!-- Revision 1.1.7.2  1996/06/03  17:43:49  millett-->
<!-- 	CR13377: HP review edits-->
<!-- 	[1996/06/03  17:43:27  millett]-->
<!-- -->
<!-- Revision 1.1.7.1  1996/05/13  15:47:47  wardr-->
<!-- 	{enh,R1.2.2}-->
<!-- 	Removed changebars-->
<!-- 	[1996/05/13  15:46:21  wardr]-->
<!-- -->
<!-- Revision 1.1.5.5  1996/03/27  19:03:21  weir-->
<!-- 	Updated change markers-->
<!-- 	[1996/03/27  19:01:55  weir]-->
<!-- -->
<!-- Revision 1.1.5.4  1996/02/02  19:57:56  weir-->
<!-- 	checking in for HP-->
<!-- 	[1996/02/02  19:55:48  weir]-->
<!-- -->
<!-- Revision 1.1.5.3  1995/12/29  19:38:46  weir-->
<!-- 	Temporarily checked back in for HP-->
<!-- 	[1995/12/29  19:37:06  weir]-->
<!-- -->
<!-- Revision 1.1.5.2  1995/12/14  17:52:30  weir-->
<!-- 	1.2.1 additions/changes added-->
<!-- 	[1995/12/14  17:51:11  weir]-->
<!-- -->
<!-- Revision 1.1.5.1  1995/12/14  15:05:54  weir-->
<!-- 	Initial check-in to secure dcecp manpages in 1.2. tree-->
<!-- 	[1995/12/14  15:04:18  weir]-->
<!-- -->
<!-- Revision 1.1.2.12  1995/12/12  13:58:52  rcb-->
<!-- 	1.1, 1.2 tech changes by weir; editorial backfill by rcb; ready for 1.2 checkout-->
<!-- 	[1995/12/12  13:54:36  rcb]-->
<!-- -->
<!-- Revision 1.1.2.11  1995/10/06  20:46:16  rcb-->
<!-- 	1.1PH: editorial pass including outstanding 1.1 edits-->
<!-- 	[1995/10/06  20:36:59  rcb]-->
<!-- -->
<!-- Revision 1.1.2.10  1995/09/22  18:38:10  rcb-->
<!-- 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2-->
<!-- 	[1995/09/22  18:25:19  rcb]-->
<!-- -->
<!-- Revision 1.1.2.9  1994/11/03  23:55:28  neilson-->
<!-- 	Substituted macros for book names in cross refs.-->
<!-- 	[1994/11/03  02:42:03  neilson]-->
<!-- -->
<!-- Revision 1.1.2.8  1994/10/19  23:06:00  hileman-->
<!-- 	Incorporated review corrections.-->
<!-- 	[1994/10/19  23:05:42  hileman]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/07/15  20:58:59  wardr-->
<!-- 	{enh, CR10014, R1.1}dcecp changes-->
<!-- 	[1994/07/15  20:56:28  wardr]-->
<!-- -->
<!-- 	{enh, CR10014, R1.1}dcecp changes-->
<!-- -->
<!-- Revision 1.1.2.6  1994/06/13  18:39:44  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  18:37:53  devobj]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/05/18  15:36:20  steto-->
<!-- 	{edt, R1.1}-->
<!-- 	Fixed problems with SGML conversion.-->
<!-- 	[1994/05/18  15:35:43  steto]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/05/06  19:00:41  wardr-->
<!-- 	{enh, CR10014, R1.1}-->
<!-- 	updating reference pages-->
<!-- 	[1994/05/06  18:58:30  wardr]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/03/15  21:00:58  wardr-->
<!-- 	{enh, CR10014, R1.1}-->
<!-- 	initial DCECP ref page work-->
<!-- 	[1994/03/15  20:59:06  wardr]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/03/10  23:24:56  wardr-->
<!-- 	{enh, CR10014, R1.1}-->
<!-- 	DCECP reference page work-->
<!-- 	[1994/03/10  23:00:49  wardr]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/03/09  19:55:53  wardr-->
<!-- 	{enh, CR10014, R1.1}-->
<!-- 	Creating new dcecp reference page-->
<!-- 	[1994/03/09  19:44:01  wardr]-->
<!-- -->
<IndexTerm Id="DCECR.MAN4.indx.1">
<Primary><Command>dcecp</Command> commands</Primary>
<Secondary><Command>acl</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DCECR.MAN4.indx.2">
<Primary>acl</Primary>
<Secondary>administering</Secondary>
</IndexTerm>
<?og-ChangeStart def,13377,R1.2.2,literary edit" >
<RefSynopsisDiv>
<CmdSynopsis>
<Command>acl check</Command>
<Arg Choice="plain"><Replaceable>acl_name_list</Replaceable></Arg>
<Arg Choice="opt"><Option>entry</Option></Arg>
<Arg Choice="opt"><Option>type</Option><Replaceable>manager_type_name</Replaceable></Arg>
</CmdSynopsis>
<CmdSynopsis>
<Command>acl delete</Command>
<Arg Choice="plain"><Replaceable>acl_name_list</Replaceable></Arg>
<Group>
<Arg Choice="plain"><Option>ic</Option></Arg>
<Arg Choice="plain"><Option>io</Option></Arg>
<Arg Choice="plain"><Option>entry</Option></Arg>
</Group>
<Arg Choice="opt"><Option>type</Option><Replaceable>manager_type_name</Replaceable></Arg>
<Arg Choice="opt"><Option>local</Option></Arg>
</CmdSynopsis>
<CmdSynopsis>
<Command>acl help</Command>
<Group>
<Arg Choice="plain"><Replaceable>operation</Replaceable></Arg>
<Arg Choice="plain"><Option>verbose</Option></Arg>
</Group>
</CmdSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>Arguments</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">acl_name_list</Symbol>  </Term>
<ListItem>
<Para>A list of one or more objects whose ACLs are to be acted on.    
You can identify objects by using the object's fully qualified names, for example, 
<Literal>/.:/hosts/gumby</Literal>. 
</Para>
<Para>You can also use a list of string bindings with residual names appended.  
The residual name indicates whether the object is a principal, group, or 
organization by supplying its principal, group, or organization name.  
There are four possible formats you can use to 
specify a string binding. 
</Para>
<Para>In string syntax, you can use
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>{<Symbol Role="Variable">uuid</Symbol><Literal>@</Literal><Symbol Role="Variable">prot_seq</Symbol><Literal>:</Literal><Symbol Role="Variable">net_addr residual_name</Symbol><Literal>}  
</Literal></UserInput></ProgramListing></Para>
</InformalExample>
<Para>Another allowable string syntax is  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>{<Symbol Role="Variable">uuid</Symbol><Literal>@</Literal><Symbol Role="Variable">prot_seq</Symbol><Literal>:</Literal><Symbol Role="Variable">net_addr</Symbol><Literal>[</Literal><Symbol Role="Variable">endpoint</Symbol><Literal>] </Literal><Symbol Role="Variable">residual_name</Symbol><Literal>}  
</Literal></UserInput></ProgramListing></Para>
</InformalExample>
<Para>In Tcl syntax, you can use  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>{<Symbol Role="Variable">uuid prot_seq net_addr</Symbol><Literal> </Literal><Symbol Role="Variable">residual_name</Symbol><Literal>}  
</Literal></UserInput></ProgramListing></Para>
</InformalExample>
<Para>Another allowable Tcl syntax is  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>{<Symbol Role="Variable">uuid prot_seq net_addr endpoint</Symbol><Literal> </Literal><Symbol Role="Variable">residual_name</Symbol><Literal>}  
</Literal></UserInput></ProgramListing></Para>
</InformalExample>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">operation</Symbol></Term>
<ListItem>
<Para>The name of the <Command>acl</Command> operation for which to display help information.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Para>The <Command>acl</Command> object represents an access control list (ACL), which may exist  
on any object such as a server, name service entry, container (directory), or file.   
</Para>
<Para>ACLs consist of ACL entries.  ACL entries are visible only as members  
of ACLs.  There is no object that represents ACL entries, only the  
<Command>acl</Command> object representing an entire ACL.  Most of the <Command>acl</Command>  
operations deal directly with the ACL.  See <Literal>Data Structures</Literal>  
for a description of the syntax of ACLs and ACL entries.  An  
ACL has one attribute, called <Command>cell</Command>, that represents the default  
cell of the ACL.  
</Para>
<Para>In most cases, the name of an object also specifies  
the name of the associated ACL to manipulate.  However, some  
objects have more than one ACL, and some names can refer to  
more than one object.  These ambiguities are resolved by  
using various options on the command line.  
</Para>
<Para>An object can have more than one ACL.  For example, container   
objects&mdash;such as Cell Directory Service (CDS) directories   
and directories in the registry&mdash;have three  
ACLs: one ACL controls access to the container object itself, a second  
ACL specifies the default ACL on new objects added to the container  
(the Initial Object ACL), and a third ACL specifies the default ACL on  
new containers added to the container (the Initial Container ACL).  By  
default, the <Command>acl</Command> commands operate on the ACL of the container  
object.  Use the <Option>ic</Option> option to operate on the Initial Container  
ACL.  Use the <Option>io</Option> option to operate on the Initial Object ACL.  
Simple objects (those that are not container objects) do not have  
Initial Container or Initial Object ACLs.  
</Para>
<Para>Some servers that have ACLs also store their network location  
information in a server entry in CDS.  The  
server entry has the same name as the server itself and may also have  
an attached ACL.  Use the <Option>entry</Option> option to operate on the  
server entry ACL in CDS rather than the server's ACL.  
</Para>
<Para>All <Command>dced</Command> objects have ACLs.  When the <Command>dced</Command>   
on the local machine is  
in partial service mode, you must use the <Option>local</Option> option to access  
<Command>dced</Command> object ACLs.  To access <Command>dced</Command> object ACLs, specify only the  
residual portion of the object name to the <Command>acl</Command> command.  For example,  
use <Command>hostdata</Command>, not <Literal>/.:/hosts/gumby/config/hostdata</Literal>.  
</Para>
<Para>Some DCE objects have more than one purpose.  For instance, a registry  
object can represent a principal and it can also act as a  
directory (a container).  An example is a principal name that  
identifies another cell (for instance,  
<Literal>/.../comp.com</Literal>) with which you want to establish  
authenticated operation.  In this case, the cell maintains a principal  
name <Literal>/.:/comp.com</Literal>.  The registry object for this  
principal name is as follows:  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>/.:/sec/principal/comp.com  
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>Assume the cell also has a hierarchical (subordinate) cell named  
<Literal>/.../comp.com/test_cell</Literal>.  The cell maintains another  
principal name <Literal>/.:/comp.com/test_cell</Literal>.  The registry  
object for this principal name is as follows:  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>/.:/sec/principal/comp.com/test_cell  
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>Consequently, the registry object  
<Literal>/.:/sec/principal/friendly.company.com</Literal> also acts as a directory  
because it contains the hierarchical cell name  
<Literal>/.:/sec/principal/friendly.company.com/test_cell</Literal>.  The ACL  
Manager that operates on registry objects differs from the ACL Manager  
that operates on registry directories.  For instance, the latter ACL  
Manager has an <Literal>i</Literal> (insert) permission bit that controls who can  
add new objects to the directory.  Consequently, most <Command>acl</Command>  
commands provide a <Option>type</Option> option that lets you specify the  
appropriate ACL Manager when operating on registry objects that are  
also directories.  You can list the ACL Managers available for  
registry objects by using the <Literal>acl show -managers</Literal> command.  
</Para>
</RefSect1>
<RefSect1>
<Title>Data Structures</Title>
<RefSect2>
<Title>ACL Entry Syntax</Title>
<Para>An ACL entry has the following syntax:  
</Para>
<Synopsis><Symbol Role="Variable">type</Symbol>[<Literal>:</Literal><Symbol Role="Variable">key</Symbol>]<Literal>:</Literal><Symbol Role="Variable">permissions</Symbol>  
</Synopsis>
<Para>where:  
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">type</Symbol></Term>
<ListItem>
<Para>Identifies the role of the ACL entry.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">key</Symbol></Term>
<ListItem>
<Para>Identifies the specific principal or group to whom the entry  
applies.  For an entry type of <Literal>extended</Literal>, <Symbol Role="Variable">key</Symbol>  
contains the ACL data.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">permissions</Symbol></Term>
<ListItem>
<Para>The ACL permissions.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The syntax of an ACL entry is a list of two or three  
elements.  The first element is the type, the optional second element  
is the key, and the last element is the set of permission bits.  The  
permission bits are represented by a single character if the  
permission is granted and by a <Literal>-</Literal> (dash) if it is not.  An ACL  
is a list of ACL entries.  An example of an ACL is as follows:  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>{unauthenticated -r-----}  
{user_obj crwx---}  
{user britten crwx---}  
{user mahler -rwx---}  
{foreign_user /.../C=US/O=OSF/OU=dce/pro/bach crwxidt}  
{group_obj -rwx---}  
{group dds -rwx---}  
{any_other -r-----},  
{extended c417faf8-8340-11c9-ace3-08001e5559bb.a.b.c.a1.4.0a0b0c0d -rwx---}  
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>On output the above syntax is used, with one addition.  If masking  
produces ineffective bits in an ACL entry, the entry has two  
additional elements.  The first is the identifier   
<Literal>effective</Literal>, and the  
second is the set of effective permissions.  These elements are added  
only for those ACL entries that have ineffective bits, as seen in the  
following example:  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>{mask_obj -r-----}  
{user_obj crwx---}  
{user britten crwx--- effective -r-----}  
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>On input, do not include the identifier <Literal>effective</Literal> or the effective  
permissions.  You can enter permissions in any order, omitting the <Literal>-</Literal>  
(dash) for permissions not granted.  For example, the above ACL could be   
entered as:  
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>{mask_obj r}  
{user_obj crwx}  
{user britten wcrx}  
</UserInput></ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>Defined ACL Entry Types</Title>
<VariableList>
<VarListEntry>
<Term><Literal>user_obj</Literal></Term>
<ListItem>
<Para>Permissions for the object's real or effective owner.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>group_obj</Literal></Term>
<ListItem>
<Para>Permissions for the object's real or effective owning group.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>other_obj</Literal></Term>
<ListItem>
<Para>Permissions for others authenticated in the local cell   
who are not otherwise named by a more specific entry type.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>user</Command></Term>
<ListItem>
<Para>Permissions for a specific authenticated principal user in the  
ACL's cell.  This type of ACL entry must include a key that  
identifies the specific principal.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>group</Command></Term>
<ListItem>
<Para>Permissions for a specific group in the ACL's cell.     
This type of ACL entry must include a key that identifies the  
specific group.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>foreign_user</Literal></Term>
<ListItem>
<Para>Permissions for a specific, authenticated  
user in a foreign cell.  This type of ACL entry must  
include a key that identifies the specific principal and the  
principal's cell.   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_group</Literal></Term>
<ListItem>
<Para>Permissions for a specific  
group in a foreign cell.  This type of ACL entry must  
include a key that identifies the specific group and the group's  
cell.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_other</Literal></Term>
<ListItem>
<Para>Permissions for all authenticated  
principals in a specific foreign cell, unless those principals  
are specifically named in an ACL entry of type <Literal>foreign_user</Literal>  
or are members in a group named in an entry of type <Literal>foreign_group</Literal>.  
This type of ACL entry must include a key that identifies the  
specific foreign cell.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>any_other</Literal></Term>
<ListItem>
<Para>Permissions for all authenticated principals  
unless those principals match a more specific entry in the ACL.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>mask_obj</Literal></Term>
<ListItem>
<Para>Permissions for the object mask that is applied to all entry types  
except <Literal>user_obj</Literal>, <Literal>other_obj</Literal>, and <Literal>unauthenticated</Literal>.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>unauthenticated</Literal></Term>
<ListItem>
<Para>Maximum permissions applied when the accessor  
does not pass authentication procedures.  This entry is used for  
principals that have failed authentication due to bad keys,  
principals who are entirely outside of any authentication cell,  
and principals who choose not to use authenticated access.  
Permissions granted to an unauthenticated principal are masked  
with this entry, if it exists.  If this entry does not exist,  
access to unauthenticated principals is always denied.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>extended</Literal></Term>
<ListItem>
<Para>A special entry that allows client applications  
running at earlier DCE versions to copy ACLs to and from ACL  
Managers running at the current DCE version without losing any data.  
The <Literal>extended</Literal> entry allows the application running at the lower  
version to obtain a printable form of the ACL.  
The <Literal>extended</Literal> ACL entry has the following form:   
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>extended:<Symbol Role="Variable">uuid</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">number_of_bytes</Symbol><Literal>.</Literal><Symbol Role="Variable">data</Symbol>  
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>where:  
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">uuid</Symbol></Term>
<ListItem>
<Para>Identifies the type extended ACL entry. (This UUID can identify  
one of the ACL entry types described here or an as-yet-undefined  
ACL entry type.)   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">ndr.ndr.ndr.ndr</Symbol></Term>
<ListItem>
<Para>Up to three network data representation (NDR) format labels (in  
hexadecimal format and separated by periods) that identify the  
encoding of data.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">number_of_bytes</Symbol>  </Term>
<ListItem>
<Para>A decimal number that specifies the total number of bytes in  
<Symbol Role="Variable">data</Symbol>.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">data</Symbol></Term>
<ListItem>
<Para>The ACL data in hexadecimal form.  (Each byte of ACL data is two  
hexadecimal digits.) The ACL data includes all of the ACL entry  
specifications except the permissions (described later) that are  
entered separately.  The data is not interpreted; it is assumed that  
the ACL Manager to which the data is being passed can understand that  
data.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>user_obj_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for the object's real or effective owner.    
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>group_obj_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for the object's real or effective group.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>other_obj_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for others in the local cell   
who are not otherwise named by a more specific entry type.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>user_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for a specific principal user in the  
ACL's cell.  This type of ACL entry must include a key that  
identifies the specific principal.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>group_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for a specific group in the ACL's cell.     
This type of ACL entry must include a key that identifies the  
specific group.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_user_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for a specific, authenticated  
user in a foreign cell.  This type of ACL entry must  
include a key that identifies the specific principal and the  
principal's cell.   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_group_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for a specific, authenticated  
group in a foreign cell.  This type of ACL entry must  
include a key that identifies the specific group and the group's  
cell.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_other_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for all authenticated principals in a specific  
foreign cell, unless those principals are specifically named in an ACL  
entry of type <Literal>foreign_user</Literal> or <Literal>foreign_user_delegate</Literal> or  
are members in a group named in an entry of type <Literal>foreign_group</Literal> or  
<Literal>foreign_group_delegate</Literal>.  This type of ACL entry must include a key that  
identifies the specific foreign cell.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>any_other_delegate</Literal></Term>
<ListItem>
<Para>Delegated permissions for all authenticated principals  
unless those principals match a more specific entry in the ACL.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Key</Title>
<Para>The <Symbol Role="Variable">key</Symbol> identifier (principal, group name, or cell) specifies the  
principal or group to which the ACL entry applies.  For entries  
of entry type <Literal>extended</Literal>, <Symbol Role="Variable">key</Symbol> is the data passed from  
one ACL Manager to another.  A <Symbol Role="Variable">key</Symbol> is required for the  
following types of ACL entries:  
</Para>
<VariableList>
<VarListEntry>
<Term><Command>user</Command></Term>
<ListItem>
<Para>Requires a principal name only.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>group</Command></Term>
<ListItem>
<Para>Requires a group name only.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>foreign_user</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name in addition to the principal name.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_group</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name in addition to the group name.    
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_other</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_user_delegate</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name, the principal name, and a   
key that identifies the principal and the principal's cell.   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_group_delegate</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name, the group name, and a key   
that identifies the group and the group's cell.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Permissions</Title>
<Para>The <Symbol Role="Variable">permissions</Symbol> argument specifies the set of permissions that  
defines the access rights conferred by the entry.  Since each ACL  
Manager defines the permission tokens and meanings appropriate for the  
objects it controls, the actual tokens and their meanings vary.  For  
example the Distributed File Service (DFS), the Directory Service, and the  
Security Service each implement a separate ACL Manager, and  
each can use a different set of tokens and permissions.  Use the  
<Literal>permissions</Literal> operation to display the currently available tokens  
and their meanings.  See the documentation for the DCE component you  
are using to obtain a more detailed description of its specific  
permissions.  
</Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Attributes</Title>
<VariableList>
<VarListEntry role="linebreak">
<Term><Command>cell </Command><Symbol Role="Variable">default_cellname</Symbol></Term>
<ListItem>
<Para>Represents the default cell of the ACL.  Manipulation of this attribute  
is possible only through the <Literal>modify</Literal> and <Command>show</Command>  
operations.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>See the &DCEAg; for more information about ACL attributes.  
<!-- See the \*VOSF DCE Administration Guide\*O for more information about ACL attributes.  -->
</Para>
</RefSect1>
<RefSect1>
<Title>Errors</Title>
<Para>A representative list of errors that might be returned is not shown
here.  Refer to the &DCETg; for complete descriptions of all error
messages.
</Para>
</RefSect1>
<RefSect1>
<Title>Operations</Title>
<RefSect2>
<Title>acl check</Title>
<Para>Returns the permissions granted by the ACL to the   
principal entering the command.  The syntax is as follows:   
</Para>
<Synopsis><?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ><Command>acl check </Command><Symbol Role="Variable">acl_name_list</Symbol> [<Option>entry</Option>] [<Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol>]  
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"  ></Synopsis>
<Para><Literal>Options</Literal>  
</Para>
<VariableList>
<VarListEntry>
<Term><Option>entry</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the ACL of the namespace entry  
of the named object. 
<?og-ChangeStart Def,13377,R1.2.2,clarify syntax"    ></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol></Term>
<ListItem>
<Para>Specifies that the command uses a particular ACL Manager.  This option  
is needed only for objects that have more than one purpose, such as for   
principal names that also act as directories. 
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"   ></Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The <Literal>check</Literal> operation   
returns the permissions granted in the specified object's ACL to the  
principal that invoked the command.  The argument is a list of names of  
object's whose ACLs are to be operated on.  If you specify no options, the permissions from the   
ACL for the object named by the operation are returned.  
</Para>
<Para><Literal>Privileges Required</Literal>  
</Para>
<Para>The permissions required are defined by the object's ACL Manager.  
Use the <Literal>permissions</Literal> operation to display the currently
available tokens and their meanings.  See the documentation for
the DCE component you are using to obtain a more detailed
description of its specific permissions. 
</Para>
<Para><Literal>Examples</Literal>  
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>acl check {006f859c-ed3d-1d57-a383-0000c0239a70@ncacn_ip_tcp:130.105.5.45 \</Literal>
> <Literal>principal/aaa}</Literal>   
rwdtcia  
dcecp> 

dcecp> <Literal>acl check /.:/hosts </Literal>
rwdtcia 
dcecp>  
</ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>acl delete</Title>
<Para>Deletes all ACL entries from the object, except the <Literal>user_obj</Literal>   
entry, if it exists.  The syntax is as follows:   
</Para>
<Synopsis><?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ><Command>acl delete </Command><Symbol Role="Variable">acl_name_list</Symbol> [<Option>ic</Option> | <Option>io</Option> | <Option>entry</Option>] [<Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol>] [<Option>local</Option>]  
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"  ></Synopsis>
<Para><Literal>Options</Literal>  
</Para>
<VariableList>
<VarListEntry>
<Term><Option>ic</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the Initial Container ACL of  
the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>io</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the Initial Object ACL of  
the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>entry</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the ACL of the namespace entry  
of the object. 
<?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol></Term>
<ListItem>
<Para>Specifies that the command uses a particular ACL Manager.  This option  
is needed only for objects that have more than one purpose, such as   
for principal names that also act as directories.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>local</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the ACL of a <Command>dced</Command> object while the   
<Command>dced</Command> on the local machine is in partial service mode.  
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"  ></Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The <Command>delete</Command> operation removes all ACL entries from the object,  
except the <Literal>user_obj</Literal> entry, if it exists.  Note that if you use   
<Command>delete</Command> on an object whose ACL does not contain a <Literal>user_obj</Literal>   
ACL entry (either because the object's ACL Managers do not support   
<Literal>user_obj</Literal> entries or because the ACL is empty), the command   
displays a ``bad syntax'' error.  
</Para>
<Para>The argument is a list of names of objects whose ACLs  
are to be operated on.  This operation returns an empty string on   
success.  
</Para>
<Para><Literal>Privileges Required</Literal>  
</Para>
<Para>The permissions required are defined by the object's ACL Manager.  
Use the <Literal>permissions</Literal> operation to display the currently
available tokens and their meanings.  See the documentation for
the DCE component you are using to obtain a more detailed
description of its specific permissions. 
</Para>
<Para><Literal>Examples</Literal>  
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>acl delete {/.:/hosts/oddball/gumby /.:/pokey}</Literal>  
dcecp>  
</ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>acl help</Title>
<Para>Returns help information about the <Command>acl</Command> object and its  
operations.  The syntax is as follows:  
</Para>
<Synopsis><Command>acl help </Command>[<Symbol Role="Variable">operation</Symbol> | <Option>verbose</Option>]  
</Synopsis>
<Para><Literal>Options</Literal>  
</Para>
<VariableList>
<VarListEntry>
<Term><Option>verbose</Option></Term>
<ListItem>
<Para>Displays information about the <Command>acl</Command> object.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>Used without an argument or option, the  
<Command>acl help</Command> command returns brief information about each  
<Command>acl</Command> operation.   
The optional <Symbol Role="Variable">operation</Symbol> argument is the name of an operation  
about which you want detailed information.  
Alternatively, you can use the <Option>verbose</Option> option for more detailed  
information about the <Command>acl</Command> object itself.  
</Para>
<Para><Literal>Privileges Required</Literal>  
</Para>
<Para>No special privileges are needed to use the <Command>acl help</Command>  
command.  
</Para>
<Para><Literal>Examples</Literal>  
</Para>
<InformalExample>
<Para><ProgramListing role="page-wide">dcecp> <Literal>acl help</Literal>  
check               Returns ACL permissions of invoker.  
delete              Deletes all ACL entries except 'user_obj' if it exists.  
modify              Adds, removes, or changes ACL entries and attributes.  
permissions         Returns permissions associated with an object.  
replace             Replaces entire ACL with new ACL entries and attributes.  
show                Returns ACL entries or attributes on an object.  
help                Prints a summary of command-line options.  
operations          Returns a list of the valid operations for this command.  
dcecp> 
</ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>acl modify</Title>
<Para>Changes attributes and entries of ACLs.  The syntax is as follows:  
</Para>
<Synopsis><?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ><Command>acl modify </Command><Symbol Role="Variable">acl_name_list</Symbol> [<Option>ic</Option> | <Option>io</Option> | <Option>entry</Option>] [<Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol>]  
<?sml-break>[<Option>cell</Option> <Symbol Role="Variable">new_cell_name</Symbol>] {<Option>add</Option> <Symbol Role="Variable">acl_entry_list_with_permissions</Symbol> [<Option>mask</Option> {<Literal>calc</Literal> |<Literal> nocalc</Literal>}] |   
<Option>change</Option> <Symbol Role="Variable">acl_entry_list_with_permissions</Symbol> [<Option>mask</Option> {<Literal>calc</Literal> |<Literal> nocalc</Literal>}] |  
<Option>remove</Option> <Symbol Role="Variable">acl_entry_list_without_permissions</Symbol> | <Option>purge</Option>} [<Option>local</Option>]</Synopsis>
<Para><Literal>Options</Literal>  
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Option>cell</Option> <Symbol Role="Variable">new_cell_name</Symbol></Term>
<ListItem>
<Para>Changes the value of the <Command>cell</Command> attribute by specifying the new   
default cell.  It must be one value, not a list.    
The <Option>cell</Option> option is always applied before   
the other options.  Note that changing the default cell of an ACL   
that has <Command>user</Command> or <Command>group</Command> ACL entries, or their delegate   
counterparts, can be dangerous.  The principal and groups   
mentioned in these ACL entries must be in the default cell.   
If the default cell changes, these ACL entries must change as  
well. 
<!--  -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>add</Option> <Symbol Role="Variable">acl_entry_list_with_permissions</Symbol></Term>
<ListItem>
<Para>Adds the ACL entries to the ACL.  The value of this option is a list  
of ACL entries with permissions filled in.  You can use the <Option>mask</Option>  
option to force or prevent mask recalculation.  
<!--   -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>change</Option> <Symbol Role="Variable">acl_entry_list_with_permissions</Symbol></Term>
<ListItem>
<Para>Changes existing ACL entries in the ACL.  The value of this option is  
a list of ACL entries with permissions filled in.  The permissions  
are the new permissions placed on the specified ACL entries.  The  
ACL entries must exist in the ACL or an error occurs.  You can use the  
<Option>mask</Option> option to force or prevent mask recalculation. 
<!--  -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>remove</Option> <Symbol Role="Variable">acl_entry_list_without_permissions</Symbol></Term>
<ListItem>
<Para>Removes existing ACL entries from the ACL.  The value of this option  
is a list of ACL entries with no permissions.  The ACL entries must  
exist in the ACL or an error occurs.    
<!--  -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>purge</Option></Term>
<ListItem>
<Para>Purges all masked permissions (before any other modifications are made), in  
all ACL entries except <Literal>user_obj</Literal>, <Literal>other_obj</Literal>,  
<Literal>mask_obj</Literal>, <Literal>user_obj_delegate</Literal>, <Literal>other_obj_delegate</Literal>, and <Literal>unauthenticated</Literal> if they exist.  This  
option is useful only for ACLs that contain an entry of type  
<Literal>mask_obj</Literal>.  
<!-- -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>mask</Option> {<Literal>calc</Literal> |<Literal> nocalc</Literal>}</Term>
<ListItem>
<Para>If a <Literal>modify</Literal> operation causes a mask recalculation that  
unintentionally adds permissions to an existing ACL entry, the <Literal>modify</Literal>  
operation aborts with an error unless you specify the <Option>mask</Option>  
option with a value of either <Literal>calc</Literal> or <Literal>nocalc</Literal>, or a  
unique abbreviation of one of these values.  
</Para>
<Para>Specifying <Literal>calc</Literal> creates or modifies the object's  
<Literal>mask_obj</Literal> type entry with permissions equal to the union of all  
entries other than type <Literal>user_obj</Literal>, <Literal>other_obj</Literal>,  
<Literal>mask_obj</Literal>, and <Literal>unauthenticated</Literal>.  This creation or  
modification is done after all other modifications to the ACL are  
performed.  The new mask is set even if it grants permissions previously  
masked out.  It is recommended that you use this option only if not  
specifying it results in an error.  If you specify the <Literal>calc</Literal>  
option for an ACL Manager that does not support the <Literal>mask_obj</Literal> entry  
type, an error is returned.  
</Para>
<Para>Specifying <Literal>nocalc</Literal> means that a new mask should not be calculated.  
</Para>
<Para>The <Option>mask</Option> option can be used only   
if the <Option>add</Option> or <Option>change</Option> option is also used and   
only if the object's ACL Managers support the  
<Literal>mask_obj</Literal> ACL type.    
In addition, you cannot use the <Option>mask</Option> option if you   
specify a <Literal>mask_obj</Literal> ACL entry in the command (by using   
the <Option>add</Option> or <Option>change</Option> options).  
<!--  -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>ic</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the Initial Container ACL of  
the named object. 
<!--  -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>io</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the Initial Object ACL of  
the named object. 
<!--  -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>entry</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the ACL of the namespace entry  
of the named object.
<!-- -->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>local</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the ACL of a <Command>dced</Command> object while the   
<Command>dced</Command> on the local machine is in partial service mode.  
<!---->
<?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol></Term>
<ListItem>
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"  >
<Para>Specifies that the command uses a particular ACL Manager.  This option  
is needed only for objects that have more than one purpose, such as   
for principal names that also act as directories.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The <Literal>modify</Literal> operation   
changes one or more individual ACL entries.  The  
argument is a list of names of ACLs to be modified.  They are processed in  
the order they are entered.  The specific operation to perform is described  
by using options.  
</Para>
<Para><?og-ChangeStart Def,13377,R1.2.2,add multiple ops"   >Multiple actions can be specified on the command line; they are  
processed in a fixed order to guarantee proper processing of the ACLs.  
See [POSIX.6] for a description of this processing order.    
Either all the changes specified in the operation are made   
or none are. This operation returns an empty string on success.
<?og-ChangeEnd Def,13377,R1.2.2,add multiple ops"   ></Para>
<Para><Literal>Privileges Required</Literal>  
</Para>
<Para>The permissions required are defined by the object's ACL Manager.  
Use the <Literal>permissions</Literal> operation to display the currently
available tokens and their meanings.  See the documentation for
the DCE component you are using to obtain a more detailed
description of its specific permissions. 
</Para>
<Para><Literal>Examples</Literal>  
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>acl modify /.:/hosts -add {user mahler rwcia}</Literal>  
dcecp>   
dcecp> <Literal>acl modify /.:/hosts -change {user mahler rwdtcia}</Literal>  
dcecp>   
dcecp> <Literal>acl modify /.:/hosts -add {group dce rwdtcia} -remove {user mahler} </Literal> 
dcecp>   
</ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>acl operations</Title>
<Para>Returns a list of the operations supported by the  
<Command>acl</Command>  
object. 
The syntax is as follows: 
</Para>
<Synopsis><Command>acl operations</Command> 
</Synopsis>
<Para>The list of available operations is in alphabetical order   
except for <Command>help</Command> and <Literal>operations</Literal>, which are listed last. 
</Para>
<Para><Literal>Privileges Required</Literal> 
</Para>
<Para>No special privileges are needed to use the  
<Command>acl  
operations</Command> 
command. 
</Para>
<Para><Literal>Examples</Literal> 
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Command>acl operations</Command>  
check delete modify permissions replace show help operations 
dcecp>  
</ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>acl permissions</Title>
<Para>Returns a list describing the permissions associated with an object.  
The syntax is as follows:  
</Para>
<Synopsis><?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ><Command>acl permissions </Command><Symbol Role="Variable">acl_name_list</Symbol> [<Option>ic</Option> | <Option>io</Option> | <Option>entry</Option>] [<Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol>]   
<?sml-break>[<Option>local</Option>]  
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"  ></Synopsis>
<Para><Literal>Options</Literal>  
</Para>
<VariableList>
<VarListEntry>
<Term><Option>ic</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the Initial Container ACL of  
the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>io</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the Initial Object ACL of  
the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>entry</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the ACL of the namespace entry  
of the named object.   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol></Term>
<ListItem>
<Para>Specifies that the command uses a particular ACL Manager.  This option  
is needed only for objects that have more than one purpose, such as   
for principal names that also act as directories.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>local</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the ACL of a <Command>dced</Command> object while the   
<Command>dced</Command> on the local machine is in partial service mode.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The <Literal>permissions</Literal> operation   
returns a list of the permissions associated with an object.    
For each permission,    
the operation shows the permission token and a  
description of the permission.   
The <Symbol Role="Variable">manager_type_name</Symbol> argument is a list of   
names of ACL Manager types whose permissions are to   
be returned.  If more than one  
name is entered, the output is concatenated and a blank line   
inserted between each manager type.    
</Para>
<Para><Literal>Privileges Required</Literal>  
</Para>
<Para>The permissions required are defined by the object's ACL Manager.  
Use the <Literal>permissions</Literal> operation to display the currently
available tokens and their meanings.  See the documentation for
the DCE component you are using to obtain a more detailed
description of its specific permissions. 
</Para>
<Para><Literal>Examples</Literal>  
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>acl permissions /.:/hosts  
</Literal>
{r {read entry attributes}}  
{w {update entry attributes}}  
{d {delete entry}}  
{t {test attribute values}}  
{c {change ACL}}  
{i {create new directory entries}}  
{a {administer directory replication}} 
dcecp>  
</ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>acl replace</Title>
<Para>Replaces the entire ACL on the object specified by the argument with the  
supplied value. The syntax is as follows:  
</Para>
<Synopsis><?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ><Command>acl replace </Command><Symbol Role="Variable">acl_name_list</Symbol> [<Option>ic</Option> | <Option>io</Option> | <Option>entry</Option>] [<Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol>]   
<?sml-break><Option>acl</Option> <Symbol Role="Variable">acl_entry_list</Symbol> [<Option>cell</Option> <Symbol Role="Variable">new_default_cellname</Symbol>] [<Option>local</Option>]   
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"  ></Synopsis>
<Para><Literal>Options</Literal>  
</Para>
<VariableList>
<VarListEntry>
<Term><Option>ic</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the Initial Container ACL of  
the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>io</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the Initial Object ACL of  
the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>entry</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the ACL of the namespace entry  
of the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol></Term>
<ListItem>
<Para>Specifies that the command use a particular ACL Manager.  This option  
is needed only for objects that have more than one purpose, such as for  
principal names that also act as directories.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>acl</Option> <Symbol Role="Variable">acl_entry_list</Symbol></Term>
<ListItem>
<Para>Specifies ACL entries and their new values.    
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>cell</Option> <Symbol Role="Variable">new_default_cellname</Symbol></Term>
<ListItem>
<Para>Specifies a new default cell for all of the ACLs named in <Symbol Role="Variable">acl_entry_list</Symbol>.  
The <Option>cell</Option> option is always applied before   
the other options. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>local</Option></Term>
<ListItem>
<Para>Specifies that the operation act on the ACL of a <Command>dced</Command> object while the   
<Command>dced</Command> on the local machine is in partial service mode.  
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The <Literal>replace</Literal> operation   
replaces the entire ACL on the object specified by the argument with the  
supplied value. The argument is a list of  
names of ACLs to be operated on.  The syntax of the value of the  
<Option>acl</Option> option is a list of ACL entries.  The <Option>cell</Option> option 
specifies the new default cell of the ACL.  Its  
value is the name of one cell only (it is not a list).  This operation returns an empty  
string on success.  
</Para>
<Para><Literal>Privileges Required</Literal>  
</Para>
<Para>The permissions required are defined by the object's ACL Manager.  
Use the <Literal>permissions</Literal> operation to display the currently
available tokens and their meanings.  See the documentation for
the DCE component you are using to obtain a more detailed
description of its specific permissions. 
</Para>
<Para><Literal>Examples</Literal>  
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>acl replace /.:/hosts -acl {group dce rwdtcia}</Literal>  
dcecp> 
</ProgramListing></Para>
</InformalExample>
</RefSect2>
<RefSect2>
<Title>acl show</Title>
<Para>Returns a list of the ACL entries for the specified object.  
The syntax is as follows:   
</Para>
<Synopsis><?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  ><Command>acl show </Command><Symbol Role="Variable">acl_name_list</Symbol> [<Option>ic</Option> | <Option>io</Option> <Literal>| -entry</Literal>] [<Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol>]  
<?sml-break>[<Option>cell</Option> | <Option>managers</Option>] [<Option>local</Option>]  
</Synopsis>
<Synopsis><Command>acl show </Command> [<Option>ic</Option> | <Option>io</Option> ] [<Option>type</Option> ] [<Option>cell</Option> | <Option>managers</Option>] [<Option>local</Option>]</Synopsis>
<Para><Literal>Options</Literal>  
</Para>
<VariableList>
<VarListEntry>
<Term><Option>ic</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the Initial Container ACL of  
the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>io</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the Initial Object ACL of  
the named object. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>entry</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the ACL of the namespace entry  
of the named object.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>type</Option> <Symbol Role="Variable">manager_type_name</Symbol></Term>
<ListItem>
<?og-ChangeStart Def,13377,R1.2.2,clarify syntax"  >
<Para>Specifies that the command uses a particular ACL Manager.  This option  
is needed only for objects that have more than one purpose, such as for   
principal names that also act as directories.   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>cell</Option></Term>
<ListItem>
<Para>Returns the default cell name for the ACL.   
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>managers</Option></Term>
<ListItem>
<Para>Returns a list of ACL Managers available for the named ACL.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>local</Option></Term>
<ListItem>
<Para>Specifies that the command is to operate on the ACL of a <Command>dced</Command> object while the   
<Command>dced</Command> on the local machine is in partial service mode.  
<?og-ChangeEnd Def,13377,R1.2.2,clarify syntax"  ></Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The <Command>show</Command> operation   
returns a list of the ACL entries for the specified object.  The argument  
is a list of names of objects whose ACLs are to be operated on.    
If more than one name is given,  
the output is concatenated and a blank line inserted between   
objects.  If they exist, the <Literal>mask_obj</Literal>  
and <Literal>unauthenticated</Literal> ACL entries are displayed first.    
</Para>
<Para>Note that since UUIDs and not names are stored in ACLs, <Command>dcecp</Command>   
may not be able to determine the name associated with an ACL entry.    
In this case, the UUID is returned as the key instead of the   
name.  The <Command>dcecp</Command> program may be unable to determine the name associated 
with an ACL entry if the default cell stored in the ACL is   
incorrect, or if the users and groups specified in the   
<Command>user</Command> and <Command>group</Command> entries are not registered in the   
default cell.  
</Para>
<Para>If a UUID replaces a name of a user and group,   
you can recover by adopting the orphaned UUID.  
To do this, create a new user or group using   
the UUID found in the ACL.  The name of the   
new user or group is then available.
</Para>
<Para><Literal>Privileges Required</Literal>  
</Para>
<Para>The permissions required are defined by the object's ACL Manager.  
Use the <Literal>permissions</Literal> operation to display the currently
available tokens and their meanings.  See the documentation for
the DCE component you are using to obtain a more detailed
description of its specific permissions. 
</Para>
<Para><Literal>Examples</Literal>  
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>acl show /.:/hosts</Literal>  
{unauthenticated r--t---}  
{user cell_admin rwdtcia}  
{user hosts/absolut/cds-server rwdtcia}  
{user hosts/absolut/self rwdtcia}  
{user root rwdtcia}  
{group subsys/dce/cds-admin rwdtcia}  
{group subsys/dce/cds-server rwdtcia}  
{any_other r--t---} 
dcecp>  
</ProgramListing></Para>
</InformalExample>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para>Commands:  
<!--no-op:  l-->
<!-- \*Ldcecp(8dce)\*O,  -->
<!-- \*Ldcecp_account(8dce)\*O,  -->
<!-- \*Ldcecp_group(8dce)\*O,  -->
<!-- \*Ldcecp_organization(8dce)\*O,  -->
<!-- \*Ldcecp_principal(8dce)\*O,  -->
<!-- \*Ldcecp_registry(8dce)\*O,  -->
<!-- \*Ldcecp_xattrschema(8dce)\*O.  -->
<Filename MoreInfo="RefEntry">dcecp(8dce)</Filename>,  
<Filename MoreInfo="RefEntry">account(8dce)</Filename>,  
<Filename MoreInfo="RefEntry">group(8dce)</Filename>,  
<Filename MoreInfo="RefEntry">organization(8dce)</Filename>,  
<Filename MoreInfo="RefEntry">principal(8dce)</Filename>,  
<Filename MoreInfo="RefEntry">registry(8dce)</Filename>,  
<Filename MoreInfo="RefEntry">xattrschema(8dce)</Filename>.  
<!--no-op:   .ad b-->
<?og-ChangeEnd def,13377,R1.2.2,literary edit" ></Para>
</RefSect1>
<!--+ 11/07/96 22:10:27
    | tagMorph:  $Id: acl.8dce,v 1.1.2.9 1996/12/14 17:29:01 carrig Exp $
    | tagMorph library:  $Id: acl.8dce,v 1.1.2.9 1996/12/14 17:29:01 carrig Exp $
    | sml-to-docbook:  1.24
    +-->
</RefEntry>
