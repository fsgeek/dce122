<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: acl_edit.8sec,v $
# Revision 1.1.2.7  1996/12/15  19:50:47  carrig
# 	{enh,R1.2.2}
# 	Minor edits
# 	[1996/12/15  19:50:21  carrig]
#
# Revision 1.1.2.6  1996/12/13  18:13:13  carrig
# 	{enh,R1.2.2}
# 	Corrections to Synopses
# 	[1996/12/13  18:12:20  carrig]
# 
# Revision 1.1.2.5  1996/12/01  20:57:28  carrig
# 	{enh,R1.2.2}
# 	Ward's comments
# 	[1996/12/01  20:56:38  carrig]
# 
# Revision 1.1.2.4  1996/11/22  21:20:30  carrig
# 	{enh,R1.2.2}
# 	Ready for editor
# 	[1996/11/22  21:19:35  carrig]
# 
# Revision 1.1.2.3  1996/11/21  20:43:10  wardr
# 	{edit,R1.2.2}
# 	Init capped heads
# 	[1996/11/21  20:42:11  wardr]
# 
# Revision 1.1.2.2  1996/11/20  20:15:47  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/11/20  20:14:50  carrig]
# 
# Revision 1.1.2.1  1996/11/11  23:23:20  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/11/11  23:17:38  wardr]
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<RefEntry Id="DCECR.MAN154.rsml.1">
<RefMeta>
<RefEntryTitle>acl_edit</RefEntryTitle>
<ManVolNum>8sec</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Command>acl_edit</Command></RefName>
<RefPurpose>Edits or lists an object's ACLs
</RefPurpose>
</RefNameDiv>
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (,,,c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- HISTORY-->
<!-- Revision 1.1.2.12  1995/12/18  17:25:00  rcb-->
<!-- 	PH1.1: final fixes-->
<!-- 	[1995/12/18  13:42:51  rcb]-->
<!---->
<!-- Revision 1.1.2.11  1995/10/18  13:52:12  rcb-->
<!-- 	PH1.1: editorial improvement and Prentice-Hall publish formatting-->
<!-- 	[1995/10/13  21:33:41  rcb]-->
<!-- -->
<!-- Revision 1.1.2.10  1995/10/09  13:41:48  rcb-->
<!-- 	1.1PH: interim edits-->
<!-- 	[1995/10/06  20:45:44  rcb]-->
<!-- -->
<!-- Revision 1.1.2.9  1995/09/22  18:39:28  rcb-->
<!-- 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2-->
<!-- 	[1995/09/22  18:31:18  rcb]-->
<!-- -->
<!-- Revision 1.1.2.8  1994/11/03  23:59:38  neilson-->
<!-- 	Substituted macros for book names in cross refs.-->
<!-- 	[1994/11/03  02:43:57  neilson]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/10/13  14:34:16  willie-->
<!-- 	{def, 11666, R1.1}-->
<!-- 	Changed example path from afs to fs.-->
<!-- 	[1994/10/13  14:34:02  willie]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/08/29  21:26:59  millette-->
<!-- 	(def,9636,R1.1)-->
<!-- 	Clarify -ngui"-->
<!-- 	[1994/08/29  21:26:26  millette]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/08/22  22:15:13  bmoy-->
<!-- 	Moved Caveat into a NOTES section-->
<!-- 	[1994/08/22  22:14:58  bmoy]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/08/22  22:08:41  bmoy-->
<!-- 	{defect, 11818, R1.1}-->
<!-- 	Added caveat and list of commands-->
<!-- 	that do not have dcecp equivs-->
<!-- 	[1994/08/22  22:08:15  bmoy]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/06/13  18:41:24  devobj-->
<!-- 	cr10872 - fix copyright-->
<!-- 	[1994/06/13  18:39:08  devobj]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/03/22  22:08:47  zahn-->
<!-- 	Added HP copyright notice.-->
<!-- 	[1994/03/22  22:08:35  zahn]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/03/17  14:35:24  zahn-->
<!-- 	{enh,5923,R1.1}-->
<!-- 	Moved /users_gdref/man1sec/acl_edit.1sec to-->
<!-- 	/admin_ref/man8sec/acl_edit.8sec as part of-->
<!-- 	User's Guide and Ref deletion.-->
<!-- 	[1994/03/17  14:35:03  zahn]-->
<!-- -->
<!---->
<!--Copyright Hewlett-Packard Company 1992-->
<!---->
<!--All Rights Reserved.  Reproduction, adaptation,-->
<!--or translation without prior written permission-->
<!--is prohibited, except as allowed under the-->
<!--copyright laws.-->
<IndexTerm Id="DCECR.MAN154.indx.1">
<Primary><Command>acl_edit</Command> command</Primary>
</IndexTerm>
<IndexTerm Id="DCECR.MAN154.indx.2">
<Primary>Security Service commands</Primary>
<Secondary><Command>acl_edit</Command></Secondary>
</IndexTerm>
<IndexTerm Id="DCECR.MAN154.indx.3">
<Primary>ACLs</Primary>
<Secondary>viewing</Secondary>
</IndexTerm>
<IndexTerm Id="DCECR.MAN154.indx.4">
<Primary>ACLs</Primary>
<Secondary>editing entries</Secondary>
</IndexTerm>
<RefSynopsisDiv>
<CmdSynopsis>
<Command>acl_edit</Command>
<Group Choice="req">
<Arg Choice="opt"><Option>e</Option><Replaceable>pathname</Replaceable></Arg>
<Arg Choice="opt"><Arg Choice="plain"><Option>addr</Option><Replaceable>string_binding</Replaceable></Arg><Arg Choice="plain"><Replaceable>component_name</Replaceable></Arg></Arg>
</Group>
<Group>
<Arg Choice="plain"><Option>ic</Option></Arg>
<Arg Choice="plain"><Option>io</Option></Arg>
</Group>
<Group>
<Arg Choice="plain"><Option>n</Option></Arg>
<Arg Choice="plain"><Option>c</Option></Arg>
</Group>
<Arg Choice="opt"><Replaceable>subcommands</Replaceable></Arg>
<Arg Choice="opt"><Option>ngui</Option></Arg>
<Arg Choice="opt"><Option>v</Option></Arg>
</CmdSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>Options</Title>
<VariableList>
<VarListEntry>
<Term><Option>e</Option> <Symbol Role="Variable">pathname</Symbol></Term>
<ListItem>
<!-- For those cases in which \*Vpathname\*O resolves to both a leaf-->
<!-- object in the Directory Service and to an object in another DCE-->
<!-- component that supports ACLs, the \%\*L-e\*O option specifies that-->
<!-- the leaf object in the Directory Service should be edited.  The-->
<!-- \%\*L-e\*O option can be used only with the \*Vpathname\*O argument.-->
<!-- added 10.xii.91:-->
<Para>Specifies that the access control list 
(ACL) on the directory service entry is to be edited.
You must specify the <Symbol Role="Variable">pathname</Symbol> argument if you use the <Literal>&minus;e</Literal> option.
</Para>
<Para>The <Literal>&minus;e</Literal> option is especially useful in case of an ambiguous
<Symbol Role="Variable">pathname</Symbol>.  The <Symbol Role="Variable">pathname</Symbol> argument 
can be interpreted in two ways if it is the name of a 
leaf object in the
directory service (that is, if it is not the name of a directory).  It can
be interpreted as the directory service 
entry itself, or as the object (whatever it is) referred to by that
directory service entry.
When such a <Symbol Role="Variable">pathname</Symbol> is specified, the <Literal>&minus;e</Literal> option directs
<Command>acl_edit</Command> to the ACL on the directory service entry. 
<!-- However, the-->
<!-- \%\*L-e\*O option can always be used, provided only that \*Vpathname\*O-->
<!-- specifies a leaf object in the directory service.-->
<!-- ...end of 10.xii.91 addition-->
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>addr</Option> <Symbol Role="Variable">string_binding component_name</Symbol></Term>
<ListItem>
<Para>The <Literal>&minus;addr</Literal> option lets you identify the object whose ACLs you
want to edit by supplying the remote procedure call
(RPC) binding handle of the ACL manager
that controls access to the object (with the <Symbol Role="Variable">string_binding</Symbol>
argument) and the relative pathname of the object (with the
<Symbol Role="Variable">component_name</Symbol> argument).  Because you have identified the
RPC binding handle, you can specify only the object's 
relative pathname for <Symbol Role="Variable">component_name</Symbol>.   
</Para>
<Para>The most common way to identify the object whose ACLs you want
to manipulate is through the <Symbol Role="Variable">pathname</Symbol> argument, described below.
The <Literal>&minus;addr</Literal> option is used primarily by applications that do not 
use the directory service, but do use the generic ACL manager.  It can
also be used if the directory service is unavailable.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>ic</Option></Term>
<ListItem>
<Para>For container objects only, specifies that the object's Initial
Container Creation ACL is to be edited.  The Initial Container
Creation ACL is applied by default to any containers created within
the ACL'd container.  If this option is specified and the object
named in <Symbol Role="Variable">pathname</Symbol> is not a container, an error is returned.
<?sml-break><?sml-need 6></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>io</Option></Term>
<ListItem>
<Para>For container objects only, specifies that the object's 
Initial Object Creation ACL is to be edited.  
The Initial Object Creation ACL is applied by default to any 
simple objects (that is, objects that are not containers) 
created within the ACL'd container.
If this option is specified and the object is not a container, an
error is returned. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>n</Option></Term>
<ListItem>
<Para>Specifies that a new mask should not be calculated.  This 
option is useful only for objects that support the <Literal>mask_obj</Literal>
entry type and that are required to recalculate a new mask after 
they are modified. 
</Para>
<Para>If a modify operation creates a mask that unintentionally 
adds permissions to an 
existing ACL entry, the modify causing 
the mask recalculation will abort with an 
error unless you specify either the <Option>c</Option> or <Option>n</Option> option.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>c</Option></Term>
<ListItem>
<Para>Creates or modifies the object's <Literal>mask_obj</Literal> 
type entry with permissions equal
to the union of all entries other than type <Literal>user_obj</Literal>, <Literal>other_obj</Literal>,
and <Literal>unauthenticated</Literal>.  This creation or 
modification is done after all other 
modifications to the ACL are performed.  The new mask is set even if it
grants permissions previously masked out.  
It is recommended that you use this option only
if not specifying it results in an error.  This 
option is useful only for objects that support the <Literal>mask_obj</Literal>
entry type and are required to recalculate a new mask after they are modified.  
</Para>
<Para>If a modify operation creates a mask that unintentionally adds 
permissions to an 
existing ACL entry, the modify causing the mask 
recalculation will abort with an 
error unless you specify either the <Option>c</Option> or <Option>n</Option> option.
</Para>
<Para>If you specify the <Literal>&minus;c</Literal> option for an ACL that does not support
<Literal>mask_obj</Literal>
entry type, <Command>acl_edit</Command> returns an error when it attempts to save the ACL, 
aborting all subcommands supplied on the command line.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>ngui</Option></Term>
<ListItem>
<Para>Specifies that a 
graphical user interface (GUI) should not be used even if a
GUI is available.  If your version of <Command>acl_edit</Command> supports a 
GUI and your terminal is capable of using it, invoking <Command>acl_edit</Command> 
without this option will bring up the GUI mode.  Use the <Option>ngui</Option> 
option to bring up command-line mode.  However, 
if a GUI is not available, or the terminal is not capable
of using the GUI, <Command>acl_edit</Command> comes up in command-line 
mode regardless of wheter you supply this option or not. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>v</Option></Term>
<ListItem>
<Para>Runs in verbose mode. 
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<?sml-break>
<?sml-need 5>
</RefSect1>
<RefSect1>
<Title>Arguments</Title>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">pathname</Symbol></Term>
<ListItem>
<Para>The full pathname of the object whose ACL is to be viewed or edited.  
If the object is in another cell,<Symbol Role="Variable"> pathname</Symbol> 
must be fully qualified to include the cell identifier.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">subcommands</Symbol></Term>
<ListItem>
<?sml-break>
<Para>The command-line subcommands, which act on the 
object specified by <Symbol Role="Variable">pathname</Symbol>, are entered as part
of the command string that invokes <Command>acl_edit</Command>.  
Only one command-line subcommand can be specified per invocation.
The commands follow.  See the description of the equivalent 
interactive subcommand for a more detailed description of the command 
functions. 
</Para>
<VariableList>
<VarListEntry role="linebreak">
<Term><Option>m</Option> <Symbol Role="Variable">acl_entry</Symbol> ...</Term>
<ListItem>
<Para>Adds a new ACL entry or changes the permissions of an existing entry.  
You can enter multiple entries, separated by spaces. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>p</Option></Term>
<ListItem>
<Para>Purges all masked permissions (before any other modifications are made).  This 
option is useful only for ACLs that contain an entry of type <Literal>mask_obj</Literal>.
Use it to prevent unintentionally 
granting permissions to an existing entry when a new mask 
is calculated as a result of adding or modifying an ACL entry. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>d</Option> <Symbol Role="Variable">acl_entry</Symbol> ...</Term>
<ListItem>
<Para>Deletes an existing entry from the ACL associated with
the specified object. You can enter multiple entries, separated by spaces. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Option>s</Option> <Symbol Role="Variable">acl_entry</Symbol> ...</Term>
<ListItem>
<Para>Replaces (substitutes) the ACL information associated
with this object with <Symbol Role="Variable">acl_entry</Symbol>.  
All existing entries are removed and
replaced by the newly specified entries. 
If you specify the <Literal>&minus;s</Literal> subcommand, you cannot 
specify the <Literal>&minus;f</Literal> or <Literal>&minus;k</Literal> subcommand.
You can enter multiple entries, separated by spaces.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>f</Option> <Symbol Role="Variable">file</Symbol></Term>
<ListItem>
<Para>Assigns the ACL information contained in <Symbol Role="Variable">fil</Symbol>e to the object.
All existing entries are removed and
replaced by the entries in the file. 
If you specify the <Literal>&minus;f</Literal> subcommand, you cannot 
specify the <Literal>&minus;s</Literal> or <Literal>&minus;k</Literal> subcommand. 
<?sml-break><?sml-need 4></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>k</Option></Term>
<ListItem>
<Para>Removes all entries, except entries of 
type <Literal>user_obj</Literal> (if they are present).
If you specify the <Literal>&minus;k</Literal> subcommand, you cannot 
specify the <Literal>&minus;f</Literal> or <Literal>&minus;s</Literal> subcommand. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Option>l</Option></Term>
<ListItem>
<Para>Lists the entries in the object's ACL. 
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The command-line subcommands are evaluated in the following order:
</Para>
<OrderedList>
<ListItem>
<Para><Option>p</Option>
</Para>
</ListItem>
<ListItem>
<Para><Option>s</Option> or <Option>f</Option> or <Option>k</Option>
</Para>
</ListItem>
<ListItem>
<Para><Option>d</Option>
</Para>
</ListItem>
<ListItem>
<Para><Option>m</Option>
</Para>
</ListItem>
<ListItem>
<Para><Option>l</Option>  
</Para>
</ListItem>
</OrderedList>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>Description</Title>
<Note>
<Para>With the exception of the following subcommands, this command is
replaced at DCE Version 1.1 by the <Command>dcecp</Command> command.  This command may
be fully replaced by the <Command>dcecp</Command> command in a future release of
DCE, and may no longer be supported at that time.
</Para>
<ItemizedList>
<ListItem>
<Para><Literal>abort</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Literal>commit</Literal>
</Para>
</ListItem>
<ListItem>
<Para><Command>exit</Command>
</Para>
</ListItem>
<ListItem>
<Para><Command>help</Command>
</Para>
</ListItem>
<ListItem>
<Para><Literal>test access</Literal>
</Para>
</ListItem>
</ItemizedList>
</Note>
<Para>The <Command>acl_edit</Command> command is a client program that, when invoked,
binds to the specified object's access control list (ACL)
manager (which is implemented in the object's server), 
and allows the user to manipulate the
object's ACL through the standard DCE ACL interface.  This
is the <Filename MoreInfo="RefEntry">sec_acl_*(3sec)</Filename> interface documented in the &DCEDr;.
</Para>
<Para>The <Command>acl_edit</Command> command automatically binds to the server of the object
specified, and then communicates (through the standard DCE
ACL interface) with that server's ACL manager in response to
user input.
</Para>
<Para><?sml-need 8>Exactly what the object specified is depends partly on whether or not
the <Literal>&minus;e</Literal> option is specified.  Specifying <Literal>&minus;e</Literal> means that you want to
operate on the directory service ACL&mdash;in other words, you want
<Command>acl_edit</Command> to bind to the Cell Directory Service (CDS)
server and allow you to operate on the
ACL maintained by that server on the object's directory entry.  If, on the
hand, you want to access the ACL on the object to which the directory 
entry refers, then simply omit the <Literal>&minus;e</Literal> option. 
The result will be that <Command>acl_edit</Command> will
bind to that object's server (the server must, of course, implement an
ACL manager), giving you access to the object's ACL.
</Para>
<Para>All <Command>acl_edit</Command> subcommands act on the object specified by
<Symbol Role="Variable">pathname</Symbol> when you invoked <Command>acl_edit</Command>.
You can invoke <Command>acl_edit</Command> in either command-line or interactive mode,
as follows:
<!--no-op:  l-->
</Para>
<ItemizedList>
<ListItem>
<Para>To invoke <Command>acl_edit</Command> in command-line mode, enter the command, the object's
pathname, options, and the command-line subcommand 
on the line that invokes <Command>acl_edit</Command>. 
Only one command-line subcommand can be entered per
<Command>acl_edit</Command> invocation.
</Para>
</ListItem>
<ListItem>
<Para>To invoke <Command>acl_edit</Command> in interactive mode, enter only <Command>acl_edit</Command>,
the object's pathname, and options.  The <Command>acl_edit</Command> prompt
is then displayed.  In
this mode, you enter interactive subcommands that let you
edit and view entries in the object's ACL and view help information
about the <Command>acl_edit</Command> command itself.
</Para>
</ListItem>
</ItemizedList>
<!--no-op:  b-->
<Para>Changes you make in command-line mode are saved when you enter the command.  
In interactive mode, you must explicitly save your changes.  
To do so, use the <Literal>commit</Literal> subcommand to save the changes without exiting 
<Command>acl_edit</Command> or the <Command>exit</Command> subcommand to save the changes and 
exit <Command>acl_edit</Command>.  Use the 
<Literal>abort</Literal> subcommand to exit <Command>acl_edit</Command> and save none of the changes 
you have made.
</Para>
<Note>
<Para>When you invoke <Command>acl_edit</Command> for a specific object's ACL, that ACL is 
not locked.  This means that it is possible for multiple users to 
edit the ACL simultaneously, with each change overwriting 
the previous changes.  For this reason, the number 
of users assigned rights to change a particular ACL should be 
tightly controlled and limited to one user if possible.
</Para>
</Note>
<RefSect2>
<Title>Interactive Subcommands</Title>
<Para>The following subcommands are available when <Command>acl_edit</Command> is
invoked in interactive mode.  All of the commands act on the
ACL associated with the object specified by <Symbol Role="Variable">pathname</Symbol>
when <Command>acl_edit</Command> was invoked.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>?</Literal> </Term>
<ListItem>
<Para>Displays the available <Command>acl_edit</Command> subcommands.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>ab</Literal>[<Literal>ort</Literal>]</Term>
<ListItem>
<Para>Exits <Command>acl_edit</Command> without saving the changes to the object's ACL.  
<?sml-break><?sml-need 4></Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>as</Literal>[<Literal>sign</Literal>] <Symbol Role="Variable">filename</Symbol></Term>
<ListItem>
<Para>Applies the ACL entries in <Symbol Role="Variable">filename</Symbol> to the specified object.
This subcommand removes existing entries and replaces them with the 
entries in the file. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>c</Literal>[<Literal>ell</Literal>] <Symbol Role="Variable">name</Symbol></Term>
<ListItem>
<Para>Sets the cell name to be associated with the ACL.  
This subcommand is used primarily to facilitate copying
ACLs to different cells.  The default cell name stays in place
until you run the subcommand again to change it. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>co</Literal>[<Literal>mmit</Literal>]</Term>
<ListItem>
<Para>Saves all changes to the ACL without exiting. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>d</Literal>[<Literal>elete</Literal>] <Symbol Role="Variable">acl_entry</Symbol></Term>
<ListItem>
<Para>Deletes the specified ACL entry. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>e</Literal>[<Literal>xit</Literal>]</Term>
<ListItem>
<Para>Exits from <Command>acl_edit</Command>, saving any changes to the object's ACL. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>g</Literal>[<Literal>et_access</Literal>]</Term>
<ListItem>
<Para>Displays the permissions granted in the specified object's ACL 
to the principal that invoked <Command>acl_edit</Command>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>h</Literal>[<Literal>elp</Literal>] [<Symbol Role="Variable">command</Symbol> ...]</Term>
<ListItem>
<Para>Initiates the <Command>help</Command> facility.  If you enter only the command <Command>help</Command>, 
<Command>acl_edit</Command> displays a list of all commands and their functions.
If you enter <Command>help</Command> and a command (or commands separated by a space), 
<Command>acl_edit</Command> displays help information on the specified commands.  
Entering <Literal>help sec_acl_entry</Literal> displays information about ACL entries.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>k</Literal>[<Literal>ill_entries</Literal>]</Term>
<ListItem>
<Para>Removes all ACL entries except the <Literal>user_obj</Literal> entry if it exists.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>l</Literal>[<Literal>ist</Literal>]</Term>
<ListItem>
<Para>Lists the entries in the object's ACL.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>m</Literal>[<Literal>odify</Literal>] <Symbol Role="Variable">acl_entry</Symbol> [<Option>n</Option> | <Option>c</Option>]</Term>
<ListItem>
<Para>Adds a new ACL entry or replaces an existing ACL entry.  This
command affects a single ACL entry.  To add or replace all of
an object's ACL entries, see the <Command>su</Command>[<Literal>bstitute</Literal>] subcommand.
</Para>
<Para>For objects that support the <Literal>mask_obj</Literal> entry type and are 
required to calculate a new mask when their ACLs are 
modified, the <Literal>&minus;n</Literal> option specifies 
that a new mask should <Symbol Role="Variable">not</Symbol><Literal> be calculated;  
the </Literal><Literal>&minus;c</Literal> option specifies that the 
object's <Literal>mask_obj</Literal> entry should have permissions equal
to the union of all entries other than <Literal>user_obj</Literal>, <Literal>other_obj</Literal>,
and <Literal>unauthenticated</Literal>.  The mask is calculated after the ACL is modified.   
</Para>
<Para><?sml-need 6>If you use the <Literal>&minus;c</Literal> option, the new mask is set even if it
grants permissions previously masked out.  
It is recommended that you use the <Literal>&minus;c</Literal> option only
if not specifying it results in an error. 
If the new mask 
unintentionally grants permissions to an existing
entry, the modify operation causing the mask recalculation will abort with an error 
unless you specify either the <Literal>&minus;c</Literal> or <Literal>&minus;n</Literal> option. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>p</Literal>[<Literal>ermissions</Literal>]</Term>
<ListItem>
<Para>Lists the available permission tokens and explanations.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>pu</Literal>[<Literal>rge</Literal>]</Term>
<ListItem>
<Para>Purges all masked permissions.  This 
option is useful only for ACLs that contain an entry of type <Literal>mask_obj</Literal>.
Use it to prevent unintentionally 
granting permissions to an existing entry when a new mask 
is calculated as a result of adding or modifying an ACL entry. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Command>su</Command>[<Literal>bstitute</Literal>] <Symbol Role="Variable">acl_entry</Symbol> ...</Term>
<ListItem>
<Para>Replaces all ACL entries with the one or ones specified.  This
subcommand removes all existing entries and adds the ones 
specified by <Symbol Role="Variable">acl_entry</Symbol>.  To replace only a single ACL
entry, see the <Literal>m[odify]</Literal> subcommand. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>t</Literal>[<Literal>est_access</Literal>] [<Symbol Role="Variable">permissions</Symbol> ...]</Term>
<ListItem>
<Para>Tests whether or not the permissions specified in the command
are granted to the principal under whose DCE identity the
<Command>acl_edit</Command> command was invoked.  The option returns
<Literal>Granted</Literal> if the permissions are granted or <Literal>Denied</Literal> if
they are not.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>ACL Entries</Title>
<Para>An ACL entry has the following syntax:
</Para>
<Synopsis><Symbol Role="Variable">type</Symbol>[<Literal>:</Literal><Symbol Role="Variable">key</Symbol>]<Literal>:</Literal><Symbol Role="Variable">permissions</Symbol>
</Synopsis>
<Para>where:
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">type</Symbol></Term>
<ListItem>
<Para>Identifies the role of the ACL entry.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">key</Symbol></Term>
<ListItem>
<Para>Identifies the specific principal or group to whom the entry
applies.  For an entry type of <Literal>extended</Literal>, <Symbol Role="Variable">key</Symbol>
contains the ACL data.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">permissions</Symbol></Term>
<ListItem>
<Para>Specifies the ACL permissions.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>A thorough description of each syntax component follows.
</Para>
<Para><?sml-need 8><Symbol Role="Variable">type</Symbol> <Literal>Component</Literal>
</Para>
<Para>The <Symbol Role="Variable">type</Symbol> tag identifies the role of the ACL entry.
Valid types are the following:
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>user_obj</Literal></Term>
<ListItem>
<Para>Permissions for the object's real or effective user.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>group_obj</Literal></Term>
<ListItem>
<Para>Permissions for the object's real or effective group.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>other_obj</Literal> </Term>
<ListItem>
<Para>Permissions for others in the local cell 
who are not otherwise named by a more specific entry type.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>user</Command> </Term>
<ListItem>
<Para>Permissions for a specific principal user in the
ACL's cell.  This type of ACL entry must include a key that
identifies the specific principal.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>group</Command> </Term>
<ListItem>
<Para>Permissions for a specific group in the ACL's cell.   
This type of ACL entry must include a key that identifies the
specific group.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>foreign_user</Literal> </Term>
<ListItem>
<Para>Permissions for a specific, authenticated
user in a foreign cell.  This type of ACL entry must
include a key that identifies the specific principal and the
principal's cell. 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_group</Literal> </Term>
<ListItem>
<Para>Permissions for a specific, authenticated
group in a foreign cell.  This type of ACL entry must
include a key that identifies the specific group and the group's
cell.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_other</Literal> </Term>
<ListItem>
<Para>Permissions for all authenticated
principals in a specific foreign cell, unless those principals
are specifically named in an ACL entry of type <Literal>foreign_user</Literal>
or members in a group named in an entry of type <Literal>foreign_group</Literal>.
This type of ACL entry must include a key that identifies the
specific foreign cell.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>any_other</Literal> </Term>
<ListItem>
<Para>Permissions for all authenticated principals
unless those principals match a more specific entry in the ACL.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>mask_obj</Literal> </Term>
<ListItem>
<Para>Permissions for the object mask that is applied
to all entry types except <Literal>user_obj</Literal>, <Literal>other_obj</Literal>, and <Literal>unauthenticated</Literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>unauthenticated</Literal></Term>
<ListItem>
<Para>Maximum permissions applied when the accessor
does not pass authentication procedures.  This entry is used for
principals that have failed authentication due to bad keys,
principals who are entirely outside of any authentication cell,
and principals who choose not to use authenticated access.
Permissions granted to an unauthenticated principal are masked
with this entry, if it exists.  If this entry does not exist,
access to unauthenticated principals is always denied.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>extended</Literal></Term>
<ListItem>
<Para>A special entry that allows client applications
running at earlier DCE versions to copy ACLs to and from ACL
Managers running at the current DCE version without losing any data.
The <Literal>extended</Literal> entry allows the application running at the lower
version to obtain a printable form of the ACL.
The <Literal>extended</Literal> ACL entry has the following form: 
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>extended:<Symbol Role="Variable">uuid</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">ndr</Symbol><Literal>.</Literal><Symbol Role="Variable">number_of_byte</Symbol><Literal>.</Literal><Symbol Role="Variable">data</Symbol>
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>where:
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">uuid</Symbol></Term>
<ListItem>
<Para>Identifies the type extended ACL entry. (This Unierversal Unique
Identifier, or UUID, can identify
one of the ACL entry types described here or an as-yet-undefined
ACL entry type.) Up to three Network Data Representation (NDR) format labels
(in hexadecimal format and separated by periods) that identify 
the encoding of data.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Symbol Role="Variable">number_of_bytes</Symbol></Term>
<ListItem>
<Para>A decimal number that specifies the total number of bytes in
<Symbol Role="Variable">data</Symbol>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">data</Symbol></Term>
<ListItem>
<Para>The ACL data in hexadecimal form.  (Each byte of ACL data is
two hexadecimal digits.)  The ACL data includes all of the ACL
entry specifications except the permissions (described later) that are entered
separately.  The data is not interpreted; it is assumed that
the ACL manager to which the data is being passed can understand
that data. 
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</ListItem>
</VarListEntry>
</VariableList>
<Para><Symbol Role="Variable">key</Symbol> <Literal>Component</Literal>
</Para>
<Para>The <Symbol Role="Variable">key</Symbol> identifier (principal or group name) specifies the
principal or group to which the ACL entry applies.  For entries
of entry type <Literal>extended</Literal>, <Symbol Role="Variable">key</Symbol> is the data passed from
one ACL manager to another.  A <Symbol Role="Variable">key</Symbol> is required for the
following types of ACL entries:
</Para>
<VariableList>
<VarListEntry>
<Term><Command>user</Command></Term>
<ListItem>
<Para>Requires a principal name only.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Command>group</Command></Term>
<ListItem>
<Para>Requires a group name only.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>foreign_user</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name in
addition to the principal name.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_group</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name
in addition to the group name.  
</Para>
</ListItem>
</VarListEntry>
<VarListEntry role="linebreak">
<Term><Literal>foreign_other</Literal></Term>
<ListItem>
<Para>Requires a fully qualified cell name.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para><Symbol Role="Variable">permissions</Symbol> <Literal>Component</Literal>
</Para>
<Para>The <Symbol Role="Variable">permissions</Symbol> argument specifies the 
set of permissions that defines the
access rights conferred by the entry.  Since each ACL manager
defines the permission tokens and meanings appropriate for
the objects it controls, the actual tokens and their meanings
vary.  For example, the Distributed File Service (DFS), 
the directory service, and the security registry service
each implement a separate ACL manager,
and each can use a different set of tokens and permissions.
This means that file system objects, objects in the namespace,
and registry objects could each use different permissions.
Use the <Literal>p</Literal>[<Literal>ermissions</Literal>] subcommand to display the currently
available tokens and their meanings.  See the documentation for
the DCE component you are using to obtain a more detailed
description of its specific permissions.
</Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>Examples</Title>
<OrderedList>
<ListItem>
<Para>The following example uses the interactive interface to set
permissions for the <Literal>unauthenticated</Literal> and <Literal>mask_obj</Literal> entry type:
</Para>
<InformalExample>
<Para><ProgramListing>sec_acl_edit> <Literal>m mask_obj:rwx</Literal>
sec_acl_edit> <Literal>m unauthenticated:r
</Literal></ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>The following example uses the interactive interface to set 
permissions for the effective user, group, and others in the
ACL's cell:
</Para>
<InformalExample>
<Para><ProgramListing>sec_acl_edit> <Literal>m user_obj:crwx</Literal>
sec_acl_edit> <Literal>m group_obj:rwx</Literal>
sec_acl_edit> <Literal>m other_obj:rwx
</Literal></ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>The following example uses the command-line interface 
to invoke <Command>acl_edit</Command> and assign  
permissions for the file <Literal>progress_chart</Literal> to the 
authenticated user <Literal>mike</Literal> in the local cell:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>acl_edit /.../dresden.com/fs/walden/progress_chart -m user:mike:crwx
</UserInput></ProgramListing></Para>
</InformalExample>
<Para>Note that because this entry will be filtered through the object mask 
(<Literal>mask_obj</Literal>), which specifies only <Literal>rwx</Literal> permissions, the actual
permissions will be <Literal>rwx</Literal>, not <Literal>crwx</Literal>. 
The <Literal>l</Literal>[<Literal>ist</Literal>] subcommand will show those permissions as follows:
</Para>
<InformalExample>
<Para><ProgramListing>user:mike:crwx  #effective -rwx---
</ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>The following example uses the interactive interface to set 
permissions for the authenticated foreign user named 
<Literal>burati</Literal> in the cell named <Literal>/.../usc-cs.uscal.edu</Literal>:
</Para>
<InformalExample>
<Para><ProgramListing>sec_acl_edit> <Literal>m foreign_user:/.../usc-cs.uscal.edu/sailing/staff/burati:rwx
</Literal></ProgramListing></Para>
</InformalExample>
</ListItem>
<ListItem>
<Para>The following example uses the command-line interface to 
invoke <Command>acl_edit</Command> and set the 
Initial Container Creation permissions for the directory <Literal>walden</Literal>:
</Para>
<InformalExample>
<Para><ProgramListing><UserInput>acl_edit /.../dresden.com/fs/walden  -ic  -m /user:walden:crwxid
</UserInput></ProgramListing></Para>
</InformalExample>
</ListItem>
</OrderedList>
<IndexTerm Id="DCECR.MAN154.indx.5" SpanEnd="DCECR.MAN154.indx.2">
<IndexTerm Id="DCECR.MAN154.indx.6" SpanEnd="DCECR.MAN154.indx.1">
<IndexTerm Id="DCECR.MAN154.indx.7" SpanEnd="DCECR.MAN154.indx.4">
<IndexTerm Id="DCECR.MAN154.indx.8" SpanEnd="DCECR.MAN154.indx.3">
</RefSect1>
<RefSect1>
<Title>Related Information</Title>
<Para><!--no-op:  l-->
Commands:
<Filename MoreInfo="RefEntry">acl(8dce)</Filename>.
<!--no-op:  b-->
</Para>
</RefSect1>
<!--+ 11/07/96 22:10:27
    | tagMorph:  $Id: acl_edit.8sec,v 1.1.2.7 1996/12/15 19:50:47 carrig Exp $
    | tagMorph library:  $Id: acl_edit.8sec,v 1.1.2.7 1996/12/15 19:50:47 carrig Exp $
    | sml-to-docbook:  1.24
    +-->
</RefEntry>
