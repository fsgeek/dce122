<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: rpccp.8rpc,v $
# Revision 1.1.2.9  1996/12/14  19:00:19  wardr
# 	{edit,R1.2.2}
# 	Updated Note
# 	[1996/12/14  18:59:34  wardr]
#
# Revision 1.1.2.8  1996/12/14  17:23:16  carrig
# 	{enh,R1.2.2}
# 	Final edits
# 	[1996/12/14  17:22:26  carrig]
# 
# Revision 1.1.2.7  1996/12/12  15:59:19  carrig
# 	{enh,R1.2.2}
# 	Synopses
# 	[1996/12/12  15:58:28  carrig]
# 
# Revision 1.1.2.6  1996/12/01  20:21:41  carrig
# 	{enh,R1.2.2}
# 	Ward's comments
# 	[1996/12/01  20:20:51  carrig]
# 
# Revision 1.1.2.5  1996/11/26  17:27:26  weir
# 	No change
# 	[1996/11/26  17:26:58  weir]
# 
# Revision 1.1.2.4  1996/11/22  21:19:52  carrig
# 	{enh,R1.2.2}
# 	Ready for editor
# 	[1996/11/22  21:19:01  carrig]
# 
# Revision 1.1.2.3  1996/11/21  20:38:53  wardr
# 	{edit,R1.2.2}
# 	Init capped heads
# 	[1996/11/21  20:38:10  wardr]
# 
# Revision 1.1.2.2  1996/11/20  20:32:41  carrig
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/11/20  20:31:54  carrig]
# 
# 	{enh,R1.2.2}
# 	VarListEntry
# 	[1996/11/20  20:05:47  carrig]
# 
# Revision 1.1.2.1  1996/11/11  23:22:57  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/11/11  23:17:21  wardr]
# 
# $EndLog$
-->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE BOOK PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<refentry id="DCECR.MAN52.rsml.1">
<refmeta><refentrytitle>rpccp</refentrytitle><manvolnum>8rpc</manvolnum></refmeta>
<refnamediv>
<refname><command>rpccp</command></refname>
<refpurpose>Starts the DCE remote procedure call (RPC) control program</refpurpose>
</refnamediv>
<!---->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!-- src directory for the full copyright text.-->
<!---->
<!---->
<!-- HISTORY-->
<!-- Revision 1.1.6.13  1995/12/18  17:24:47  rcb-->
<!-- 	PH1.1: final fixes-->
<!-- 	[1995/12/18  13:42:00  rcb]-->
<!---->
<!-- Revision 1.1.6.12  1995/10/09  21:57:02  rcb-->
<!-- 	PH1.1: editorial improvement and Prentice-Hall publish formatting-->
<!-- 	[1995/10/09  21:56:57  rcb]-->
<!-- -->
<!-- Revision 1.1.6.11  1995/09/22  18:39:10  rcb-->
<!-- 	preliminary editing (including outstanding 1.1 edits) for 1.1PH, 1.2-->
<!-- 	[1995/09/22  18:29:50  rcb]-->
<!-- -->
<!-- Revision 1.1.6.10  1994/11/03  23:59:28  neilson-->
<!-- 	Substituted macros for book names in cross refs.-->
<!-- 	[1994/11/03  02:43:52  neilson]-->
<!-- -->
<!-- Revision 1.1.6.9  1994/10/04  15:14:14  steto-->
<!-- 	{def, CR10401, R1.1, Fixed xrefs to App.  Dev. and Admin. guides.}-->
<!-- 	[1994/10/04  15:13:54  steto]-->
<!-- -->
<!-- Revision 1.1.6.8  1994/09/08  16:37:23  hileman-->
<!-- 	Added caveat and list of subcommands-->
<!-- 	that do not have dcecp equivalents-->
<!-- 	[1994/09/08  16:36:40  hileman]-->
<!-- -->
<!-- Revision 1.1.6.7  1994/07/13  18:03:11  jshirley-->
<!-- 	{def,10220,R1.1} Remove reference to rpcd and sec_clientd-->
<!-- 	[1994/07/13  18:02:34  jshirley]-->
<!-- -->
<!-- Revision 1.1.6.6  1993/08/17  14:53:52  buckler-->
<!-- 	{defect, 8217, R1.0.3}-->
<!-- 	Changed "cell_profile" to "cell-profile".-->
<!-- 	[1993/08/12  21:19:51  buckler]-->
<!-- -->
<!-- Revision 1.1.6.5  1993/07/16  20:12:55  tmw-->
<!-- 	Added index entries for second version of master index.-->
<!-- 	[1993/07/16  17:57:31  tmw]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/06/25  20:10:50  lmk-->
<!-- 	{defect,7587,R1.0.2a}-->
<!-- 	Added information about the add mapping command-->
<!-- 	[1993/06/25  20:10:09  lmk]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/06/17  18:50:16  buckler-->
<!-- 	{defect, 7519, R1.0.3}-->
<!-- 	Changed examples from csh to sh/ksh.-->
<!-- 	[1993/06/03  17:26:43  buckler]-->
<!-- -->
<!-- 	{defect, 7517, R1.0.3}-->
<!-- 	Changed example from add entry to add element, to properly-->
<!-- 	demonstrate the use of options and arguments in the free ordering-->
<!-- 	of a command line.-->
<!-- 	[1993/06/03  16:28:05  buckler]-->
<!-- -->
<!-- Revision 1.1.6.2  1993/06/01  18:18:09  buckler-->
<!-- 	{defect, 7518, R1.0.3}-->
<!-- 	Changed a footnote within a table to a Note: after the table.-->
<!-- 	[1993/05/28  14:19:19  buckler]-->
<!-- -->
<!-- Revision 1.1.4.7  1993/01/28  02:37:02  dbelch-->
<!-- 	Embedding copyright notice-->
<!-- 	[1993/01/28  00:55:34  dbelch]-->
<!-- -->
<!-- Revision 1.1.4.6  1993/01/07  21:54:10  buckler-->
<!-- 	Bug 6742: Made UUIDs lowercase-->
<!-- 	[1993/01/07  21:49:17  buckler]-->
<!-- -->
<!-- Revision 1.1.4.5  1992/12/02  19:07:41  h_hoff-->
<!-- 	defect,5240,R1.0.2, The add_entry routine does not support the -i option-->
<!-- 	[1992/12/02  19:05:17  h_hoff]-->
<!-- -->
<!-- Revision 1.1.4.4  1992/11/27  17:27:25  h_hoff-->
<!-- 	Corrected entry name syntax and wrongly formatted change notices as
follows:-->
<!-- 	"defect,5989,R1.0.2, Correct entry name syntax"-->
<!-- 	[1992/11/27  17:25:33  h_hoff]-->
<!-- -->
<!-- Revision 1.1.4.2  1992/09/10  16:42:33  weir-->
<!-- 	Removed change bar macros; moved into 1.0.2doc tree-->
<!-- 	[1992/09/10  16:28:14  weir]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/09/08  21:46:37  casey-->
<!-- 	Prentice Hall production - index corrections-->
<!-- 	[1992/09/08  17:20:55  casey]-->
<!-- -->
<!-- 	Prentice Hall production-->
<!-- 	[1992/08/14  19:24:38  casey]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:58:17  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!--   HISTORY COMMENTS:-->
<!---->
<!--   DATE:                            COMMENT:-->
<!---->
<!--	Fri Nov 8, 1991                 Initial file submission to HP-->
<!--                                   for final integration at IBM.-->
<!--                                   -->
<!---->
<!---->
<!-- "~/rpc/RPCCP/rpccp_8rpc.rsml"-->
<!-- HP/DIGITAL - DCE RPC Version 1.0 , final draft-->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp.-->
<!-- All rights reserved.-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<indexterm id="DCECR.MAN52.indx.1"><primary>RPC control program</primary>
<secondary>initializing</secondary></indexterm>
<refsynopsisdiv><cmdsynopsis><command>rpccp</command><arg choice="opt"><replaceable>
rpccp-command</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Arguments</title>
<indexterm id="DCECR.MAN52.indx.2"><primary><command>rpccp</command> commands
</primary><secondary>summary</secondary></indexterm>
<variablelist>
<varlistentry role="linebreak">
<term><symbol role="Variable">rpccp-command</symbol></term><listitem><para>
Specifies one of the following control program commands:</para>
<variablelist>
<varlistentry role="linebreak">
<term><literal>add element</literal></term><listitem><para>Adds an element
to a profile in a name service entry; if the specified entry does not exist,
creates the entry.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>add entry</literal></term><listitem><para>Adds an entry to
the name service database.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>add mapping</literal></term><listitem><para>Adds or replaces
server address information in the local endpoint map.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>add member</literal></term><listitem><para>Adds a member to
a group in a name service entry; if the specified entry does not exist, creates
the entry.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>exit</command></term><listitem><para>Leaves the RPC control
program.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>export</command></term><listitem><para>Exports binding information
for an interface identifier, object Universal Unique Identifiers (UUIDs),
or both to a server entry; if the specified entry does not exist, creates
the entry.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>help  </command></term><listitem><para>Displays a list of commands
or the possible options of a specified command.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>import</command></term><listitem><para>Imports binding information
and an object UUID from a server entry.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>quit</command></term><listitem><para>Leaves the RPC control
program.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>remove element</literal></term><listitem><para>Removes selected
elements from a profile.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>remove entry</literal></term><listitem><para>Removes an entry
from the name service database.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>remove group</literal></term><listitem><para>Removes all group
members and the group from the specified entry.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>remove mapping</literal></term><listitem><para>Removes specified
elements from the local endpoint map or from the endpoint map of a specified
remote host.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>remove member</literal></term><listitem><para>Removes a selected
member from a group.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>remove profile</literal></term><listitem><para>Removes all
profile elements and the profile from the specified entry.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>show entry</literal></term><listitem><para>Shows the Name Service
Interface (NSI) attributes of an entry.</para>
</listitem></varlistentry>
<varlistentry><?Pub Caret1>
<term><literal>show group</literal></term><listitem><para>Shows the members
of a group.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>show mapping</literal></term><listitem><para>Shows the elements
of the local endpoint map.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>show profile</literal></term><listitem><para>Shows the elements
of a profile.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>show server</literal></term><listitem><para>Shows the binding
information, interface identifier, and object UUIDs in a server entry.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>unexport</command></term><listitem><para>Removes binding information,
interface identifiers, and object UUIDs from a server entry. <indexterm spanend="DCECR.MAN52.indx.2"
id="DCECR.MAN52.indx.3"></para>
</listitem></varlistentry>
</variablelist>
</listitem></varlistentry>
</variablelist>
<?sml-break>
<?sml-need 10>
</refsect1>
<refsect1>
<title>Description</title>
<note><para>With the exception of the <command>help</command> subcommand,
this facility was superceded by the DCE control program (<command>dcecp</command>)
 in OSF DCE Version 1.1. This command may be fully replaced by the <command>
dcecp</command> command in a future release of DCE, and may no longer be supported
at that time.</para>
</note>
<para><indexterm id="DCECR.MAN52.indx.4"><primary>Name Service Interface (NSI)
</primary><secondary>managing for RPC applications</secondary></indexterm> <indexterm
id="DCECR.MAN52.indx.5"><primary>endpoint maps</primary><secondary>managing
</secondary></indexterm>The RPC control program, <command>rpccp</command>,
provides a set of commands for managing name service use for RPC applications
and for managing the endpoint map.</para>
<para>You can use control program commands from within the control program
or from the system prompt.  To use the control program commands from inside
the control program, Start and enter the control program by using the <command>
rpccp</command> command alone, without any argument.  The control program
then displays the control program prompt, <literal>rpccp></literal>, as follows:
</para>
<informalexample><para><programlisting><userinput>rpccp</userinput>
rpccp>
</programlisting></para>
</informalexample>
<para>You can then enter any control program command, as in the following
example:</para>
<informalexample><para><programlisting>rpccp> <literal>show entry /.:/LandS/anthro/pr_server_node3
</literal></programlisting></para>
</informalexample>
<para>Leave the control program and return to the system prompt by using the <command>
exit</command> or <command>quit</command> command. If you enter invalid input,
the control program displays the valid commands.</para>
<para>To use the control program commands from the system prompt, enter the <command>
rpccp</command> command with an internal command of the control program as
the first argument. You can do this either interactively or in a command procedure.
For example, you can enter the <literal>show entry</literal> command as follows:
</para>
<informalexample><para><programlisting><userinput>rpccp show entry /.:/LandS/anthro/pr_server_node3
</userinput></programlisting></para>
</informalexample>
<refsect2>
<title>Arguments and Options</title>
<para>Except for the <command>exit</command> and <command>quit</command> commands, <command>
rpccp</command> commands have one or more options.  Each option is identified
by a <literal>-</literal> (dash) followed by a letter; for example, <option>
s</option>.  Some options require arguments.</para>
<para><?sml-need 10>Commands that access NSI operations also require the name
of a name service entry as an argument. The order of arguments and the entry-name
option is arbitrary; for example, the following placements of arguments and
options are equivalent:</para>
<informalexample><para><programlisting><?sml-need 6>rpccp> <literal>add element  /.:/LandS/anthro/mis_node_2  \
       -i ec1eeb60-5943-11c9-a309-08002b102989,1.0</literal>

rpccp> <literal>add element -i ec1eeb60-5943-11c9-a309-08002b102989,1.0 \
       /.:/LandS/anthro/mis_node_2</literal></programlisting></para>
</informalexample>
<!-- When an option without an argument precedes another option, separate-->
<!-- them with a dash (-).--></refsect2>
<refsect2>
<title>Environmental Influences on Command Syntax</title>
<para>There are variations in the action of the control program, depending
on whether commands are entered from the system prompt or from within the
control program. For example, entering the annotation field of profile elements
from the  system prompt allows you to include internal spaces in an annotation.
 <?sml-space></para>
<informaltable frame="all" orient="Port" remap="center">
<tgroup cols="5" colsep="0" rowsep="0">
<colspec colwidth="0.01*">
<colspec align="Left" colname="col1" colnum="1" colsep="1" colwidth="1*">
<colspec align="Left" colname="col2" colnum="2" colsep="1" colwidth="1*">
<colspec align="Left" colname="col3" colnum="3" colwidth="1*">
<colspec colsep="1" colwidth="0.01*">
<thead>

<row>
<entry colsep="0" rowsep="0"></entry>
<entry colsep="0" rowsep="1"></entry>
<entry colsep="0" rowsep="1"></entry>
<entry colsep="0" rowsep="1"></entry>
<entry colsep="1" rowsep="0"></entry>
</row>

<row>
<entry></entry>
<entry rowsep="1" colsep="1"><literal>Function</literal></entry>
<entry rowsep="1" colsep="1"><literal>
At System Prompt</literal></entry>
<entry rowsep="1" colsep="1"><literal>Inside rpccp
</literal></entry>
<entry></entry>
</row>
</thead>
<tbody>

<row>
<entry></entry>
<entry rowsep="1" colsep="1">Strings within quotation marks</entry>
<entry rowsep="1" colsep="1">Supported</entry><entry rowsep="1">Not required</entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry colsep="1" rowsep="1">Wildcard substitution</entry>
<entry colsep="1" rowsep="1">Supported</entry>
<entry colsep="1" rowsep="1">Unsupported</entry>
<entry></entry>
</row>
<row>
<entry colsep="0" rowsep="0"></entry>
<entry colsep="0" rowsep="0"></entry>
<entry colsep="0" rowsep="0"></entry>
<entry colsep="0" rowsep="0"></entry>
<entry colsep="0" rowsep="0"></entry>
</row>

</tbody></tgroup>
</informaltable>
<?sml-space>
<note><para>Some UNIX systems require that  you place a <literal>\</literal>
(backslash) before string binding delimiters such as  <literal>[&ensp;]</literal>
(brackets) or that you place the delimiters within <literal>`&ensp;'</literal> or <literal>"&ensp;"</literal> (single or double quotation marks) at the
system prompt.</para>
</note>

<?Pub _newpage>
<para>The following table describes the scope of the RPC control program commands. <indexterm
id="DCECR.MAN52.indx.6"><primary><command>rpccp</command> commands</primary>
<secondary>scope</secondary></indexterm><?sml-space></para>
<informaltable frame="all" orient="Port" remap="center">
<tgroup cols="4" colsep="0"rowsep="0">
<colspec colwidth="0.01*">
<colspec align="Left" colname="col1" colnum="1" colsep="1" colwidth="1*">
<colspec align="Left" colname="col2" colnum="2" colsep="1" colwidth="1*">
<colspec colwidth="0.01*" colsep="1">
<thead>

<row>
<entry colsep="0" rowsep="0"></entry>
<entry colsep="0" rowsep="1"></entry>
<entry colsep="0" rowsep="1"></entry>
<entry colsep="1" rowsep="0"></entry>
</row>

<row>
<entry></entry>
<entry rowsep="1"><literal>Scope</literal></entry>
<entry rowsep="1"><literal>Command</literal></entry>
<entry></entry>
</row>
</thead>
<tbody>
<row>
<entry></entry>
<entry>All entries</entry>
<entry><literal>add entry</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry></entry>
<entry><literal>remove entry</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry rowsep="1"></entry>
<entry rowsep="1"><literal>show entry</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry>Server entry</entry>
<entry><command>export</command></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry></entry>
<entry><command>import</command></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry></entry><entry><literal>show server</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry rowsep="1"></entry>
<entry rowsep="1"><command>unexport</command></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry>Group</entry><entry><literal>add member</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry></entry>
<entry><literal>remove group</literal></entry>
</row>

<row>
<entry></entry>
<entry></entry>
<entry><literal>remove member</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry rowsep="1"></entry>
<entry rowsep="1"><literal>show group</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry>Profile</entry>
<entry><literal>add element</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry></entry>
<entry><literal>remove element</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry></entry><entry><literal>remove profile</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry rowsep="1"></entry>
<entry rowsep="1"><literal>show profile</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry>Endpoint map</entry>
<entry><literal>add mapping</literal></entry>
<entry></entry>
</row>

<row>
<entry></entry>
<entry></entry><entry><literal>remove mapping</literal></entry>
<entry></entry>
</row>

<row>
<entry rowsep="0"></entry>
<entry rowsep="1"></entry>
<entry rowsep="1"><literal>show mapping</literal></entry>
<entry rowsep="0"></entry>
</row>

<row>
<entry colsep="0"></entry>
<entry colsep="0"></entry>
<entry colsep="0"></entry>
<entry colsep="0"></entry>
</row>
</tbody></tgroup>
</informaltable>

<?sml-space>
<indexterm spanend="DCECR.MAN52.indx.6" id="DCECR.MAN52.indx.7">
<!--  the ~/rpc/concepts/*.gpsml header files are shared with the-->
<!--   NSI usage chapter of RPC Part A of the Appl.  Devel.  Gde.--></refsect2>
<refsect2>
<title>Environment Variables</title>
<indexterm id="DCECR.MAN52.indx.8"><primary>RPC control program</primary>
<secondary>enviornment variables</secondary></indexterm><indexterm id="DCECR.MAN52.indx.9">
<primary>variables</primary><secondary>in <command>rpccp</command></secondary>
</indexterm><para>The control program supports environment variables. Using
environment variables facilitates interactive use of the control program.
</para>
<para>To distinguish environment variables, <filename moreinfo="RefEntry">
rpccp*(8rpc)</filename> reference pages follow the convention of using all
uppercase letters for examples of environment variables. Note that UNIX environment
variables are case sensitive.</para>
<variablelist>
<varlistentry role="linebreak">
<term><literal>User-defined environment variables</literal></term><listitem>
<para>You can set an environment variable to represent values to <command>
rpccp</command>. Using an environment variable is helpful for specifying a
long string such as the following: <!--no-op:  l--></para>
<itemizedlist>
<listitem><para>A string representation of binding information (<symbol role="Variable">
binding string</symbol>)</para>
</listitem>
<listitem><para>A string representation of an object or interface UUID (<firstterm>
string UUID</firstterm>)</para>
</listitem>
<listitem><para>An <symbol role="Variable">interface identifier</symbol> (the
interface UUID and version numbers)</para>
</listitem>
<listitem><para>The name of a name service entry</para>
</listitem>
</itemizedlist>
<!--no-op:  b-->
<?sml-break>
<?sml-need 8>
<para>In the following example, the environment variable <literal>JANE_CAL
</literal> represents an object UUID, while  <literal>/.:/LandS/anthro/Cal_host_2
</literal>, the target name service entry,  is in the local cell:</para>
<informalexample><para><programlisting><userinput>JANE_CAL=47f40d10-e2e0-11c9-bb29-08002b0f4528
export JANE_CAL
rpccp
rpccp> <literal>export -o JANE_CAL /.:/LandS/anthro/Cal_host_2</literal></userinput></programlisting></para>
</informalexample>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>DCE RPC environment variables</literal></term><listitem>
<variablelist>
<varlistentry>
<term><literal>NLSPATH</literal></term><listitem><para>The environment variable <literal>
NLSPATH</literal> must point to the location of <filename>dcerpc.cat</filename>
and <filename>dcedcs.cat</filename>.  Otherwise, any run-time status codes
returned by the control program will be hexadecimal, rather than  textual.
form.  The value of this variable must include both the pathname of the directory
where the <literal>.cat</literal> files reside and the string <literal>%N
</literal>.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>RPC_DEFAULT_ENTRY_SYNTAX</literal></term><listitem><indexterm
id="DCECR.MAN52.indx.10"><primary>local names</primary><secondary>overriding
CDS syntax</secondary></indexterm><indexterm id="DCECR.MAN52.indx.11"><primary>
Name Service Interface (NSI)</primary></indexterm><para>The <literal>dce</literal>
name syntax is the only syntax currently supported by the DCE Cell Directory
Service (CDS).  However, NSI is independent of any specific name service and,
in the future, may support name services that use other name syntaxes.  When
alternative name syntaxes are supported, you can override the standard default
with a process-specific default by setting the <literal>RPC_DEFAULT_ENTRY_SYNTAX
</literal> environment variable.  When this variable is set for a process,
the control program uses it to find out the default syntax for the process.
 You can override this default in any NSI command of the control program by
using the <option>s</option> option to specify an alternative entry syntax.
Setting <literal>RPC_DEFAULT_ENTRY_SYNTAX</literal> requires specifying the
integer 3 to indicate the <literal>dce</literal> syntax.  To set <literal>
RPC_DEFAULT_ENTRY_SYNTAX</literal>,  use the <symbol role="Variable">name
</symbol><literal>=</literal><symbol role="Variable">value</symbol> command
to define an environment variable.  The following command specifies  <literal>
dce</literal> as the default name syntax in a login command file:</para>
<informalexample><para><programlisting><userinput># .login command file
# setting dce as default name syntax,
RPC_DEFAULT_ENTRY_SYNTAX=3</userinput></programlisting></para>
</informalexample>
<?sml-break>
<?sml-need 4>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><literal>RPC_DEFAULT_ENTRY</literal></term><listitem><para>For the <command>
import</command> command, you can use this environment variable to indicate
the entry where the search operation starts. Usually, the starting entry is
a profile. <indexterm spanend="DCECR.MAN52.indx.8" id="DCECR.MAN52.indx.12"><indexterm
spanend="DCECR.MAN52.indx.9" id="DCECR.MAN52.indx.13"></para>
</listitem></varlistentry>
</variablelist>
</listitem></varlistentry>
</variablelist>
</refsect2>
<refsect2>
<title>The Name Service Interface</title>
<para><indexterm id="DCECR.MAN52.indx.14"><primary>Name Service Interface
(NSI)</primary><secondary>command syntax</secondary></indexterm>The remainder
of this description contains information to help you use commands that call
NSI to access name service entries.</para>
<para>DCE NSI is independent of any particular name service.  CDS, however,
is the only name service available for  DCE Version 1.0 RPC applications.
 For more details on NSI, see the &DCEDk;.  For a description of CDS, see
the &DCEAc;. </para>
</refsect2>
<refsect2>
<title>Name Service Entries</title>
<!-- "Name Service Entries Defined by the RPC Name Service Interface"-->
<!--no-op:   ~/rpc/concepts/ns-entries-of-NSI.gpsml--><para>To store information
about RPC servers, interfaces, and objects, NSI defines the following name
service entries:</para>
<variablelist>
<!-- .gL "server entry"-->
<varlistentry role="linebreak">
<term><literal>server entry</literal> </term><listitem><para>Stores binding
information, interface identifiers, and object UUIDs for an RPC server  <!--
.LI "o"--><!-- .gL "group"--></para>
</listitem></varlistentry>
<varlistentry>
<term><command>group</command> </term><listitem><para>Corresponds to one or
more RPC servers that offer a common RPC interface, type of RPC object, or
both <!-- .LI "o"--><!-- .gL "profile"--></para>
</listitem></varlistentry>
<varlistentry>
<term><filename>profile</filename> </term><listitem><para>Defines search paths
for looking in a name service database for a server that offers a particular
RPC interface and object</para>
</listitem></varlistentry>
</variablelist>
<para>Note that when NSI is used with CDS, the name service entries are CDS
object entries</para>
</refsect2>
<refsect2>
<title>Structure of Entry Names</title>
<para>Each entry in a name service database is identified by a unique <firstterm>
global name</firstterm> made up of a cell name and a cell-relative name.</para>
<para>A  <command>cell</command> is a group of users, systems, and resources
that share common DCE services.  A cell configuration includes at least one
cell directory server, one security server, and one time server.  A cell's
size can range from one system to thousands of systems.  For information on
cells, see the CDS portion of this book. </para>
<para>The following is an example of a global name: <indexterm id="DCECR.MAN52.indx.15">
<primary>global names</primary><secondary>conventions</secondary></indexterm></para>
<informalexample><para><programlisting><userinput>/.../C=US/O=uw/OU=MadCity/LandS/anthro/Stats_host_2
</userinput></programlisting></para>
</informalexample>
<?sml-break>
<?sml-need 8>
<para>The parts of a global name are as follows:</para>
<itemizedlist><indexterm id="DCECR.MAN52.indx.16"><primary>cell names</primary>
<secondary>conventions</secondary></indexterm><indexterm id="DCECR.MAN52.indx.17">
<primary>local names</primary><secondary>conventions</secondary></indexterm>
<listitem><para>cell name</para>
<para>The cell name must use X.500 name syntax.   The symbol <literal>/...
</literal> begins a cell name. The letters before each <literal>=</literal>
(equal sign) are abbreviations for  country (<literal>C</literal>), organization
(<literal>O</literal>), and organization unit (<literal>OU</literal>). For
example:</para>
<informalexample><para><programlisting><userinput>/.../C=US/O=uw/OU=MadCity
</userinput></programlisting></para>
</informalexample>
<para>For entries in the local cell, the cell name can be represented by a <literal>
/.:</literal> prefix, in place of the actual cell name, as in the following
example:</para>
<informalexample><para><programlisting><userinput>/.:/LandS/anthro/Stats_host_2
</userinput></programlisting></para>
</informalexample>
<para>For NSI operations on entries in the local cell you can omit the cell
name.</para>
</listitem>
<listitem><para>cell-relative name</para>
<para><!-- .gL "cell-relative name"--><indexterm id="DCECR.MAN52.indx.18">
<primary>directory pathnames</primary><secondary>conventions</secondary></indexterm>Each
name service entry requires a cell-relative name, which contains a directory
pathname and a leaf name.</para>
<itemizedlist>
<listitem><para>directory pathname</para>
<para>Follows the cell name and <!-- .gL "directory pathname"-->indicates
the hierarchical relationship of the entry to the cell root.</para>
<para>The directory pathname is the middle portion of the global name. The
cell name precedes the directory pathname, and the leaf name follows it, as
follows:</para>
<informalexample><para><programlisting><userinput><symbol role="Variable">
cell-name</symbol> <literal>+</literal> <symbol role="Variable">directory-pathname
</symbol> <literal>+</literal> <symbol role="Variable">leaf-name</symbol></userinput></programlisting></para>
</informalexample>
<para>The directory pathname contains the names of any subdirectories in the
path; each subdirectory name begins with a <literal>/</literal> (slash), as
follows:</para>
<informalexample><para><programlisting><userinput>/<symbol role="Variable">
sub-dir-a-name</symbol><literal>/</literal><symbol role="Variable">sub-dir-b-name
</symbol><literal>/</literal><symbol role="Variable">sub-dir-c-name</symbol></userinput></programlisting></para>
</informalexample>
<para>Directory paths are created by name service administrators.  If an appropriate
directory path does not exist, ask your name service administrator to extend
an existing path or create a new path.  In a directory path, the name of a
subdirectory should reflect its relationship to its <firstterm>parent directory
</firstterm> (the directory that contains the subdirectory). <!-- .gL "leaf
name"--><indexterm id="DCECR.MAN52.indx.19"><primary>leaf names</primary>
<secondary>conventions</secondary></indexterm></para>
</listitem>
<listitem><para>leaf name</para>
<para>Identifies the specific entry. The leaf name is the right-hand part
of global name beginning with the rightmost slash.</para>
</listitem>
</itemizedlist>
<para><?sml-need 5>In the following example, <literal>/.../C=US/O=uw/OU=MadCity
</literal> is the cell name, <literal>/LandS/anthro</literal> is the directory
pathname, and <literal>/Cal_host_4</literal> is the leaf name:</para>
<informalexample><para><programlisting><userinput>/.../C=US/O=uw/OU=MadCity/LandS/anthro/Cal_host_4
</userinput></programlisting></para>
</informalexample>
<para>If a name service entry is located at the cell root, the leaf name directly
follows the cell name; for example, <literal>/.:/cell-profile</literal>.</para>
</listitem>
</itemizedlist>
<para>Note that when NSI is used with CDS, the cell-relative name is a CDS
name. <indexterm spanend="DCECR.MAN52.indx.19" id="DCECR.MAN52.indx.20"><indexterm
spanend="DCECR.MAN52.indx.15" id="DCECR.MAN52.indx.21"></para>
</refsect2>
<refsect2>
<title>Guidelines for Constructing Names of Name Service Entries</title>
<para><indexterm id="DCECR.MAN52.indx.22"><primary>Name Service Interface
(NSI)</primary><secondary>naming guidelines</secondary></indexterm>A global
name includes both a cell name and a cell-relative name composed of a directory
pathname and a leaf name.  The cell name is assigned to a cell root at its
creation.  When you specify only a cell-relative name to an NSI command, the
NSI automatically expands the name into a global name by inserting the local
cell name.  When returning the name of a name service entry, a group member,
or member in a profile element, NSI operations return global names.</para>
<para>The directory pathname and leaf name uniquely identify a name service
entry.  The leaf name should somehow describe the entry&mdash;by identifying
its owner or its contents, for example.  The remainder of this section contains
 guidelines for choosing leaf names.  Note that directory pathnames and  leaf
names are case sensitive.  </para>
<para><literal>Naming a Server Entry</literal></para>
<para><indexterm id="DCECR.MAN52.indx.23"><primary>servers</primary><secondary>
naming</secondary></indexterm>For a server entry that advertises an RPC interface
or service offered by a server, the leaf name must distinguish the entry from
the equivalent entries of other servers.  When a single server instance runs
on a host, you can ensure a unique name by combining the name of the service,
interface (from the interface definition), or the system name for the server's
host system.</para>
<para>For example, consider two servers, one offering a calendar service on
host JULES and one on host VERNE.</para>
<para>The server on JULES uses the following leaf name:</para>
<informalexample><para><programlisting><userinput>calendar_JULES</userinput></programlisting></para>
</informalexample>
<para>The server on VERNE uses the following leaf name:</para>
<informalexample><para><programlisting><userinput>calendar_VERNE</userinput></programlisting></para>
</informalexample>
<para>For servers that perform tasks on or for a specific system, an alternative
approach is to create server entries in a system-specific host directory within
the name service database.  Each host directory takes the name of the host
to which it corresponds.</para>
<para><?sml-need 4>Because the directory name identifies the system, the leaf
name of the server entry name need not include the host name, as in the following
example:</para>
<informalexample><para><programlisting><userinput>/.:/LandS/host_1/Process_control
</userinput></programlisting></para>
</informalexample>
<para>To construct names for the server entries used by distinctive server
instances on a single host, you can construct unique server entry names by
combining the following information: the name of the server's service, interface,
or object; the system name of the server's host system, and a reusable instance
identifier, such as an integer.</para>
<para>For example, the following leaf names distinguish two instances of a
calendar service on the JULES system:</para>
<informalexample><para><programlisting><userinput>calendar_JULES_01

calendar_JULES_02 </userinput></programlisting></para>
</informalexample>
<para>Avoid automatically generating entry names for the server entries of
server instances&mdash;for example, by using unique data  such as a time stamp
(<literal>calendar_verne_15OCT91_21:25:32</literal>)  or process identifier
(<literal>calendar_jules_208004D6</literal>). When a server incorporates such
unique data into its server entry names, each server instance creates a separate
server entry, causing many server entries. When a server instance stops running,
it leaves an obsolete server entry that is not reused.  The creation of a
new entry whenever a server instance starts may impair performance.</para>
<para>A server can use multiple server entries to advertise different combinations
of interfaces and objects.  For example, a server can create a separate server
entry for a specific object (and the associated interfaces).  The name of
such a server entry should correspond to a well-known name for the object.
 For example, consider a server that offers a horticulture bulletin board
known to users as <literal>horticulture_bb</literal>.  The server exports
the <literal>horticulture_bb</literal> object, binding information, and  
the associated bulletin-board interface to a server entry whose leaf name
identifies the object, as follows:</para>
<informalexample><para><programlisting><userinput>horticulture_bb</userinput></programlisting></para>
</informalexample>
<para>Note that an RPC server that uses RPC  authentication can choose identical
names for its principal name and its server entry.  Use of identical names
permits a client that calls the <function>rpc_binding_set_auth_info</function>
routine to automatically determine a server's principal name (the client will
assume the principal name to be the same as the server's entry name).  If
a server uses different principal and server entry names, users must explicitly
supply the principal name.  For an explanation of principal names, see the &DCEDg;.
</para>
<para><?sml-need 8><literal>Naming a Group</literal></para>
<para><indexterm id="DCECR.MAN52.indx.24"><primary>groups</primary><secondary>
naming</secondary></indexterm>The leaf name of a group should indicate the
interface, service, or object that determines membership in the group.  For
example, for a group whose members are selected because they advertise an
interface named <literal>Statistics</literal>, the following is an  effective
leaf name:</para>
<informalexample><para><programlisting><userinput>Statistics</userinput></programlisting></para>
</informalexample>
<para>For a group whose members advertise laser-printer print queues as objects,
 the following is an effective leaf name:</para>
<informalexample><para><programlisting><userinput>laser-printer</userinput></programlisting></para>
</informalexample>
<para><literal>Naming a Profile</literal></para>
<para><indexterm id="DCECR.MAN52.indx.25"><primary>profiles</primary><secondary>
naming</secondary></indexterm>The leaf name of a profile should indicate the
profile users; for example, for a profile that serves the members of an accounting
department, the following is an effective leaf name:</para>
<informalexample><para><programlisting><userinput>accounting_profile
<indexterm spanend="DCECR.MAN52.indx.22" id="DCECR.MAN52.indx.26"></userinput></programlisting></para>
</informalexample>
</refsect2>
<refsect2>
<title>Privileges Required</title>
<para>To use NSI commands to access entries in a CDS database, you need access
control list (ACL) permissions. Depending on NSI operation, you need ACL permissions
to the parent directory or the CDS object entry (the name service entry) or
both. The ACL permissions are as follows: <!--no-op:  l--></para>
<itemizedlist>
<listitem><para>To create an entry, you need <literal>i</literal> (<literal>
insert</literal>)  permission to the parent directory.</para>
</listitem>
<listitem><para>To read an entry, you need <literal>r</literal> (<literal>
read</literal>) permission to  the CDS object entry.</para>
</listitem>
<listitem><para>To write to an entry, you need <literal>w</literal> (<literal>
write</literal>) permission to the CDS object entry.</para>
</listitem>
<listitem><para>To delete an entry, you need <literal>d</literal> (<command>
delete</command>)  permission either to the CDS object entry or to the parent
directory.</para>
</listitem>
</itemizedlist>
<!--no-op:  b--><para>Note that <literal>write</literal> permission does not
imply <literal>read</literal> permission.</para>
<para>ACL permissions for NSI commands of the control program are described
in the reference pages. <?sml-break><?sml-need 5></para>
</refsect2>
</refsect1>
<refsect1>
<title>Notes</title>
<para>A <literal>server entry</literal> equates to an NSI binding attribute
and, optionally,  an object attribute; a <command>group</command> equates
to an NSI group attribute; and a <filename>profile</filename> equates to an
NSI profile attribute. Typically, each server's entries, groups, and profiles
reside in distinct name service entries. <?sml-break></para>
</refsect1>
<refsect1>
<title>Examples</title>
<orderedlist>
<listitem><para>The following command starts the RPC control program:</para>
<informalexample><para><programlisting><userinput>rpccp</userinput></programlisting></para>
</informalexample>
</listitem>
<listitem><para>The following command, entered at the system prompt rather
than in <command>rpccp</command>, removes the entry <literal>/.:/LandS/anthro/Cal_host_2
</literal>:</para>
<informalexample><para><programlisting><userinput>rpccp remove entry <literal>
/.:/LandS/anthro/Cal_host_2</literal></userinput></programlisting></para>
</informalexample>
</listitem>
</orderedlist>
</refsect1>
<refsect1>
<title>Related Information</title>
<para><!--no-op:  l-->Commands:  <filename moreinfo="RefEntry">rpccp_add_element(8rpc)
</filename>, <filename moreinfo="RefEntry">rpccp_add_entry(8rpc)</filename>, <filename
moreinfo="RefEntry">rpccp_add_mapping(8rpc)</filename>, <filename moreinfo="RefEntry">
rpccp_add_member(8rpc)</filename>, <filename moreinfo="RefEntry">rpccp_export(8rpc)
</filename>, <filename moreinfo="RefEntry">rpccp_import(8rpc)</filename>, <filename
moreinfo="RefEntry">rpccp_remove_element(8rpc)</filename>, <filename moreinfo="RefEntry">
rpccp_remove_entry(8rpc)</filename>, <filename moreinfo="RefEntry">rpccp_remove_group(8rpc)
</filename>, <filename moreinfo="RefEntry">rpccp_remove_mapping(8rpc)</filename>, <filename
moreinfo="RefEntry">rpccp_remove_member(8rpc)</filename>, <filename moreinfo="RefEntry">
rpccp_remove_profile(8rpc)</filename>, <filename moreinfo="RefEntry">rpccp_show_entry(8rpc)
</filename>, <filename moreinfo="RefEntry">rpccp_show_group(8rpc)</filename>, <filename
moreinfo="RefEntry">rpccp_show_mapping(8rpc)</filename>, <filename moreinfo="RefEntry">
rpccp_show_profile(8rpc)</filename>, <filename moreinfo="RefEntry">rpccp_show_server(8rpc)
</filename>, <filename moreinfo="RefEntry">rpccp_unexport(8rpc)</filename>, <filename
moreinfo="RefEntry">dcecp(8dce)</filename>.  <!--no-op:  b--><indexterm spanend="DCECR.MAN52.indx.14"
id="DCECR.MAN52.indx.27"><indexterm spanend="DCECR.MAN52.indx.1" id="DCECR.MAN52.indx.28"></para>
</refsect1>
<!--+ 11/07/96 22:10:27     | tagMorph:  $Id: rpccp.8rpc,v 1.1.2.1 1996/11/11
23:22:55 wardr Exp $     | tagMorph library:  $Id: rpccp.8rpc,v 1.1.2.1 1996/11/11
23:22:55 wardr Exp $     | sml-to-docbook:  1.24     +--></refentry>
<?Pub *0000039368 -3>
