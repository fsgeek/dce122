%!PS-Adobe-2.0 EPSF-2.0
%%Title: ARTLIB:ZK-6661A.EPS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%Version: 4.1 930105
%%CreationDate: Tue Apr 12 13:34:14 1994
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%BoundingBox: 125 324 486 467
%%DocumentData: Clean7Bit
%%EndComments
1.0 dup scale
%%%%-1.5 72 mul -4.5 72 mul translate
%%BeginProlog
%Begin: ColorSep
%%CreationDate: (10/15/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/ColorSepDict 100 dict def
ColorSepDict begin
/bdf{bind def}def
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/setcmykcolor{
	1 exch sub
	3{dup 5 -1 roll sub 0 2 copy lt{exch}if pop exch}repeat
	pop setrgbcolor
}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{
	5
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
}ndf
/setcustomcolor{
	exch aload pop pop
	4{4 index mul 4 1 roll}repeat
	setcmykcolor pop
}ndf
/setseparationgray{systemdict/setgray get exec}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage{
4 ne{(\nUnsupported number of colors for colorimage.\n)print flush quit} if
not{(\nSingle procedure form  colorimage unsupported.\n)print flush quit} if
save 20 dict begin /&saveobj exch def
/&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
{&Cproc &Mproc &Yproc &Kproc
/&K exch def /&Y exch def /&M exch def /&C exch def
0 1 &K length 1 sub{
/&i exch def
&K &i 255
&C &i get 30 mul
&M &i get 59 mul add
&Y &i get 11 mul add
&K &i get 100 mul add
100 idiv
dup 255 gt {pop 255} if
sub put
}for
&K }image
&saveobj end restore
}ndf
/customcolorimage{pop systemdict/image get exec}ndf
/separationimage{systemdict/image get exec}ndf
end
%End: ColorSep

%Begin: Graphics_Editor_Prolog
%%Version: 4.1	0
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
% Tint, C, M, Y, K, Colorname, Overprint
/cmyk	{ 7 copy
	  /cur_overprint ex def
	  /cur_colorname ex def
	  /cur_black ex def
	  /cur_yellow ex def
	  /cur_magenta ex def
	  /cur_cyan ex def
	  /cur_tint ex def
	  setoverprint	
	  findcmykcustomcolor ex setcustomcolor } bind def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs 	{ cur_overprint /sav_overprint ex def
 	  cur_colorname /sav_colorname ex def 
          cur_black /sav_black ex def 
          cur_yellow /sav_yellow ex def 
          cur_magenta /sav_magenta ex def 
          cur_cyan /sav_cyan ex def 
          cur_tint /sav_tint ex def 
	  gsave       
	} def
/gr     { sav_tint sav_cyan sav_magenta sav_yellow 
	  sav_black sav_colorname sav_overprint cmyk
	  grestore
 	  sav_overprint setoverprint	
	} def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
/BeginEPSF
 { /b4_Inc_state save def
   /dict_count countdictstack def
   /op_count count 1 sub def
   userdict begin
   /showpage {} def
   0 setgray 0 setlinecap
   1 setlinewidth 0 setlinejoin
   10 setmiterlimit [] 0 setdash newpath
   false setoverprint
   /languagelevel where
   {pop languagelevel
    1 ne
      {false setstrokeadjust
      } if
   } if
 } bind def
/EndEPSF
 { count op_count sub {pop} repeat
   countdictstack dict_count sub {end} repeat
   b4_Inc_state restore
 } bind def
end
%End: Graphics_Editor_Prolog

%%EndProlog
%%BeginSetup
ColorSepDict begin
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
1.000 0.000 0.000 0.000 1.000 (Black) false cmyk
125.889 467.246 tr
1 -1 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 360.223 142.492 Crop
np 300.713 79.573 mo 
300.713 84.200 li 
306.264 81.424 li 
300.713 79.573 li gs
1.000 0.000 0.000 0.000 1.000 (Black) false cmyk
fi gr
0.925 slw
301.006 84.200 301.006 79.573 Line st
306.557 81.424 301.006 84.200 Line st
301.006 79.573 306.557 81.424 Line st
np 271.104 111.032 mo 
271.104 106.406 li 
266.478 108.257 li 
271.104 111.032 li gs
1.000 0.000 0.000 0.000 1.000 (Black) false cmyk
fi gr
271.397 106.406 271.397 111.032 Line st
266.771 108.257 271.397 106.406 Line st
271.397 111.032 266.771 108.257 Line st
0.925 slw
0 slc
2.606 141.104 2.606 57.829 Line st
36.378 113.346 36.378 57.891 Line st
267.233 141.104 267.233 57.829 Line st
267.233 141.104 2.604 141.104 Line st
267.549 113.346 36.841 113.346 Line st
70.151 85.588 70.151 57.829 Line st
267.233 85.588 70.151 85.588 Line st
2.606 30.071 70.151 30.071 70.151 57.829 2.606 57.829 Box st
306.095 2.313 358.835 2.313 358.835 141.104 306.095 141.104 Box st
199.689 2.313 267.233 2.313 267.233 30.071 199.689 30.071 Box st
2.313 2.313 199.689 2.313 199.689 30.071 2.313 30.071 Box st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
12 0.72977 (Security API) 185.323 47.189 Text
7 0.53772 (RPC API) 170.542 74.947 Text
34 2.01007 (Security and RPC runtime libraries) 78.941 102.705 Text
22 1.35711 (Local operating system) 85.418 130.463 Text
12 0.71697 (Applications) 74.631 19.431 Text
11 0.75537 (Default DCE) 205.703 13.879 Text
14 0.80659 (Security tools) 203.852 24.982 Text
8 0.53772 (Local OS) 16.485 41.637 Text
13 0.76818 (security APIs) 8.158 52.740 Text
6 0.44810 (Remote) 315.810 63.844 Text
9 0.47371 (client or) 314.885 74.947 Text
6 0.37129 (server) 318.586 86.050 Text
305.632 99.929 284.813 99.929 Line st
292.678 108.257 271.860 108.257 Line st
293.141 108.257 284.813 99.929 Line st
301.006 81.424 280.187 81.424 Line st
288.052 89.751 267.233 89.751 Line st
288.514 89.751 280.187 81.424 Line st
3 0.28167 (RPC) 276.255 30.534 Text
2 0.12803 (or) 281.806 41.637 Text
4 0.26886 (Peer) 276.717 52.740 Text
2 0.12803 (to) 281.806 63.844 Text
4 0.26886 (Peer) 276.717 74.947 Text
6 0.49932 (GSSAPI) 73.389 61.068 Text
70.151 30.071 113.638 30.071 113.638 85.588 70.151 85.588 Box st
157.126 30.071 267.187 30.071 267.187 57.829 157.126 57.829 Box st
Applpage
restore
end  % Pop Appl Dict
end  % Pop ColorProcset Dict
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: Black
%%CMYKCustomColor: 0.000 0.000 0.000 1.000 Black
