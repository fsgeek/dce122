<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: 4_integration.sgm,v $
# Revision 1.1.2.8  1996/12/11  15:33:11  carrig
# 	{enh,R1.2.2}
# 	Scaled graphics
# 	[1996/12/11  15:31:58  carrig]
#
# Revision 1.1.2.7  1996/12/09  22:47:38  carrig
# 	{enh,R1.2.2}
# 	Minor changes
# 	[1996/12/09  22:46:33  carrig]
# 
# Revision 1.1.2.6  1996/12/05  21:20:29  willie
# 	Made Security bold in Table 4-1.
# 	[1996/12/05  21:20:19  willie]
# 
# Revision 1.1.2.5  1996/11/29  20:43:47  carrig
# 	{enh,R1.2.2}
# 	No change
# 	[1996/11/29  20:42:30  carrig]
# 
# Revision 1.1.2.4  1996/11/05  20:12:01  weir
# 	Cleaned up history
# 	[1996/11/05  20:11:11  weir]
# 
# Revision 1.1.2.3  1996/10/30  17:51:01  carrig
# 	{enh,R1.2.2}
# 	Ready for editing
# 	[1996/10/30  17:49:40  carrig]
# 
# Revision 1.1.2.2  1996/10/29  19:06:20  carrig
# 	{enh,R1.2.2}
# 	Graphics
# 	[1996/10/29  19:01:50  carrig]
# 
# Revision 1.1.2.1  1996/10/28  19:42:30  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/10/28  19:41:37  wardr]
# 
# Revision 1.1.1.2  1996/10/28  19:41:37  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# Revision 1.1.1.2  1996/10/28  19:41:37  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<!--  COPYRIGHT NOTICE-->
<!--  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!--  ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!--  src directory for the full copyright text.-->
<!---->
<!---->
<!-- HISTORY-->
<!-- Revision 1.1.8.1  1996/10/14  16:39:23  weir-->
<!-- 	No change-->
<!-- 	[1996/10/14  16:38:32  weir]-->
<!---->
<!-- Revision 1.1.6.1  1996/03/21  14:48:39  wardr-->
<!-- 	{edit R1.2.1}-->
<!-- 	Release Edits-->
<!-- 	[1996/03/21  14:47:38  wardr]-->
<!-- -->
<!-- Revision 1.1.4.11  1995/06/02  15:25:07  buckler-->
<!-- 	PRENTICE HALL reformat.-->
<!-- 	[1995/06/01  21:00:44  buckler]-->
<!-- -->
<!-- Revision 1.1.4.10  1995/05/05  22:20:14  buckler-->
<!-- 	Incorporated 1.1 edits.-->
<!-- 	[1995/05/05  22:11:00  buckler]-->
<!-- -->
<!-- Revision 1.1.4.9  1994/10/19  20:23:37  willie-->
<!-- 	{enh, 11783, R1.1}-->
<!-- 	Incorporated selected edits from edit pass.-->
<!-- 	[1994/10/19  20:22:55  willie]-->
<!-- -->
<!-- Revision 1.1.4.8  1994/09/26  19:46:42  zahn-->
<!-- 	{enh,11783,R1.1}-->
<!-- -->
<!-- 	Added a note about Security using itself-->
<!-- 	(it uses the Audit Service) and added that-->
<!-- 	DTS uses Audit Service.-->
<!-- 	[1994/09/26  19:46:24  zahn]-->
<!-- -->
<!-- Revision 1.1.4.7  1994/09/22  20:49:14  willie-->
<!-- 	{enh, 11783, R1.1}-->
<!-- 	Added gdscp, gdssetup, GDS authentication, and GDS ACLs.-->
<!-- 	[1994/09/22  20:48:53  willie]-->
<!-- -->
<!-- Revision 1.1.4.6  1994/04/07  19:57:14  rom-->
<!-- 	{enh, 10306, R1.1}-->
<!-- 	Remove diskless documentation from the DCE doc set.-->
<!-- 	[1994/04/07  18:13:02  rom]-->
<!-- -->
<!-- Revision 1.1.4.5  1993/01/29  17:18:45  cjd-->
<!-- 	Embedded copyright notice-->
<!-- 	[1993/01/29  17:02:25  cjd]-->
<!-- -->
<!-- Revision 1.1.4.4  1992/12/14  17:24:32  steiner-->
<!-- 	CR 6150 remove Release 1.0 reference-->
<!-- 	[1992/12/14  17:07:53  steiner]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/11/24  15:45:29  steiner-->
<!-- 	Fixed coding conventions.-->
<!-- 	[1992/11/24  15:29:03  steiner]-->
<!-- -->
<!-- Revision 1.1.4.2  1992/09/01  16:00:26  weir-->
<!-- 	Moved to 1.0.2 tree-->
<!-- 	[1992/09/01  15:49:06  weir]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/03/23  21:05:09  weir-->
<!-- 	Added format info to .DS to fix right margin of Table 4-1-->
<!-- 	[1992/03/23  20:53:28  weir]-->
<!-- -->
<!-- 	Added a couple of indent commands to position table 4-1 correctly.-->
<!-- 	[1992/03/23  18:36:29  weir]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/03/06  16:32:15  steiner-->
<!-- 	Eddie's edits.-->
<!-- 	[1992/03/06  15:25:39  steiner]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  15:43:26  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<Chapter Id="ITODCE.T4INT.div.1">
<Title>Integration of DCE Technology Components</Title>
<IndexTerm Id="ITODCE.T4INT.indx.1">
<Primary>technology components</Primary>
<Secondary>integration</Secondary>
</IndexTerm>
<Para>One of the advantages of OSF DCE
is the integration of its component technologies with one another.
Wherever appropriate, DCE technologies make use
of other DCE technologies to accomplish their tasks.
For example, CDS uses many of the other DCE
components&mdash;Threads, RPC, DTS, and Security&mdash;in providing
its service.
</Para>
<Para>Because the DCE technologies are well integrated, they also
depend on one another for correct functioning.
For example, CDS needs a running DCE security server in order to
provide its directory service in a secure manner.
These dependencies among technology components
have implications for DCE activities such as porting, planning, and
bringing up a DCE cell.
</Para>
<Para>This chapter describes how DCE components are integrated
and the implications of their resulting interdependencies.
First a matrix shows the
integration of the technology components.
Then a section on each of the components
describes its use of other DCE technologies.
The final section discusses the impact of technology interdependencies on
DCE-related activities.
</Para>
<Sect1 Id="ITODCE.T4INT.div.2">
<Title>Integration Matrix</Title>
<Para>Table 4-1 shows which DCE components are used by each of the
other DCE components.
The components listed in the leftmost column are the technology
consumers.
The components listed in the top row are the technology
providers.
For example, in the box (row RPC, column Threads), the X indicates that
RPC makes use of the Threads technology.
The abbreviation
NA (for Not Applicable)
in a box shows the intersection of a technology with itself.
A blank box indicates that the consuming technology does not use
the providing technology.
The following sections include discussions of technology integration,
including reasons why certain technologies do not make use of other
technologies.
<!-- .in -3-->
<?sml-need 2.25i></Para>
<Table Frame="all" Remap="center" Orient="Port">
<Title>DCE Component Integration</Title>
<TGroup Rowsep="0" Colsep="0" Cols="8">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colwidth="1*" Colname="col1" Colnum="1">
<ColSpec Rowsep="1" Colsep="1" Align="Center" Colwidth="1*" Colname="col2" Colnum="2">
<ColSpec Rowsep="1" Colsep="1" Align="Center" Colwidth="1*" Colname="col3" Colnum="3">
<ColSpec Rowsep="1" Colsep="1" Align="Center" Colwidth="1*" Colname="col4" Colnum="4">
<ColSpec Rowsep="1" Colsep="1" Align="Center" Colwidth="1*" Colname="col5" Colnum="5">
<ColSpec Rowsep="1" Colsep="1" Align="Center" Colwidth="1*" Colname="col6" Colnum="6">
<ColSpec Rowsep="1" Colsep="1" Align="Center" Colwidth="1*" Colname="col7" Colnum="7">
<ColSpec Rowsep="1" Align="Center" Colwidth="1*" Colname="col8" Colnum="8">
<TBody>
<Row>
<Entry Rowsep="1"></Entry>
<Entry Rowsep="1"><Literal>Threads</Literal></Entry>
<Entry Rowsep="1"><Literal>RPC</Literal></Entry>
<Entry Rowsep="1"><Literal>CDS</Literal></Entry>
<Entry Rowsep="1"><Literal>DTS</Literal></Entry>
<Entry Rowsep="1"><Literal>Security</Literal></Entry>
<Entry Rowsep="1"><Literal>GDS</Literal></Entry>
<Entry Rowsep="1"><Literal>DFS</Literal></Entry>
</Row>
<Row>
<Entry><Literal>Threads</Literal></Entry>
<Entry>NA</Entry>
<Entry></Entry>
<Entry></Entry>
<Entry></Entry>
<Entry></Entry>
<Entry></Entry>
<Entry></Entry>
</Row>
<Row>
<Entry><Literal>RPC</Literal></Entry>
<Entry>X</Entry>
<Entry>NA</Entry>
<Entry>X</Entry>
<Entry></Entry>
<Entry>X</Entry>
<Entry></Entry>
<Entry></Entry>
</Row>
<Row>
<Entry><Literal>CDS</Literal></Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>NA</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry></Entry>
</Row>
<Row>
<Entry><Literal>DTS</Literal></Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>NA</Entry>
<Entry>X</Entry>
<Entry></Entry>
<Entry></Entry>
</Row>
<Row>
<Entry><Literal>Security</Literal></Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>NA*</Entry>
<Entry></Entry>
<Entry></Entry>
</Row>
<Row>
<Entry><Literal>GDS</Literal></Entry>
<Entry></Entry>
<Entry></Entry>
<Entry></Entry>
<Entry></Entry>
<Entry></Entry>
<Entry>NA</Entry>
<Entry></Entry>
</Row>
<Row>
<Entry><Literal>DFS</Literal></Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry>X</Entry>
<Entry></Entry>
<Entry>NA</Entry>
</Row>
</TBody>
</TGroup>
</Table>
<!--.so intro/tbl/4_integration_01.tbl-->
<!---->
<?sml-point-size 10>
<!--no-op:  12-->
<?sml-point-size 12>
<!--no-op:  14-->
<?sml-space .5>
<Note>
<Para>The security service is actually a client of itself,
because it uses the audit service to log security service events.
</Para>
</Note>
<!-- .in 3-->
<IndexTerm Id="ITODCE.T4INT.indx.2">
<Primary>technology components</Primary>
<Secondary>integration</Secondary>
<Tertiary>matrix (table)</Tertiary>
</IndexTerm>
<Para>The DCE components support distributed applications, and, in
accomplishing that task, they also use each other's services,
as shown in the
matrix.
The use of a given DCE component by another DCE component can provide
an example for the application programmer.
</Para>
<Para>Note that many of the boxes are filled in, especially those representing
the five most basic components (threads, RPC, CDS, DTS, and security).
As a result,
some pairs of components have mutual dependencies;
for example, the security and CDS components.
The security service uses information from CDS,
while CDS uses the security service to control access to
its information.
The implications of these mutual dependencies are discussed in
Section 4.3.
</Para>
</Sect1>
<Sect1 Id="ITODCE.T4INT.div.3">
<Title>Integration by Technology Component</Title>
<Para>This section takes each of the DCE technology components in
turn and describes its use of other technology components.
</Para>
<ItemizedList>
<ListItem>
<Para>DCE Threads integration
</Para>
<Para>The DCE Threads component does not involve distribution across nodes
and therefore does not use any other DCE component.
</Para>
</ListItem>
<ListItem>
<Para>DCE RPC integration
</Para>
<Para>RPC uses threads, CDS, and the security service.
Threads are used to allow
clients and servers to deal with multiple simultaneous RPCs.
Note that, as a result of the use of threads by RPC, any component
that uses DCE RPC also uses threads.
</Para>
<Para>RPC uses CDS
to look up servers that support a given interface or object
in order to discover
the locations of those servers and the protocols that they use.
GDS can be used indirectly by RPC.
If an RPC server is located in a foreign cell that is registered
in the X.500 namespace, then GDS is accessed via CDS
to find the given RPC server.
</Para>
<Para>RPC uses a notion of time; for example, how long to wait for a reply
to a message.
However, this involves only the time on the local node, such as
comparing the time when a message was sent with the current time
to see if a timeout has expired.
As a result, RPC does not use DTS timestamps directly.
RPC does, however, depend on DTS to help ensure that clocks on
different machines run at approximately the same rate.
</Para>
<Para>The DCE Security Service is used to authenticate the RPC
client and server to one
another, and to pass authorization information about the
client
for the server to check against its ACLs.
</Para>
</ListItem>
<ListItem>
<Para>DCE CDS integration
</Para>
<Para>CDS makes use of several DCE technology components.
It uses DCE Threads to allow the CDS server
and the CDS clerk
to handle
multiple requests concurrently.
It uses RPC in communications between CDS clerks and CDS servers,
as well as in communications between CDS servers, such as for
keeping replicated information consistent.
</Para>
<Para><?sml-need 6>CDS relies on DTS to maintain synchronized clocks in the network
for use in the sequencing of updates to the namespace and for use
in replication.
CDS uses GDS (via the GDA) to find foreign cells registered in GDS.
And finally,
CDS uses DCE security's ACLs
and authenticated RPC
to ensure authorized access to directory data and
administrative functions.
</Para>
</ListItem>
<ListItem>
<Para>DCE DTS integration
</Para>
<Para>DTS uses RPC in the communications between DTS clients and DTS servers.
It also uses RPC in the protocol between a time server and a time-provider.
Since DTS is based on DCE RPC, which uses DCE Threads, DTS also uses
Threads.
</Para>
<Para>DTS depends on CDS
to find time servers and their locations.
GDS may be used
indirectly if a global time server is registered in a foreign cell
that is registered in the X.500 namespace.
DTS uses the DCE Security Service to authenticate its interactions
and to audit security-critical DTS events.
</Para>
</ListItem>
<ListItem>
<Para>DCE Security Service integration
</Para>
<Para>The DCE security server, like all DCE RPC-based applications,
uses DCE Threads.
The security server communicates with its
clients via DCE RPC.
CDS is used to find security servers.
GDS may be used indirectly in accessing a security server that is
in a foreign cell registered in the X.500 namespace.
</Para>
<Para>The security service uses a notion of
time for the expiration of credentials
and for detecting replays of authentication information.
It assumes reasonable synchronization of the clocks in the network,
which is accomplished in DCE by DTS.
The security service does not use DTS timestamps in this version
of DCE.
</Para>
</ListItem>
<ListItem>
<Para>DCE GDS integration
</Para>
<Para>The GDS server does not use DCE Threads;
instead, it uses multiple processes to
handle multiple requests.
Since GDS is based on the X.500 standard, which is specified to
run over ISO protocols, GDS does not use DCE RPC.
</Para>
<Para>GDS does not use CDS; since GDS is at a higher level in the global
namespace hierarchy, CDS refers to GDS but not the other way around.
GDS supports DCE authentication and has a separate security mechanism 
based on its own implementation of ACLs.
Again, this is in order for GDS to comply to the international directory
service standard.
</Para>
</ListItem>
<ListItem>
<Para>DCE DFS integration
</Para>
<Para>The DFS servers that run in user space (for example, the backup,
fileset location, and fileset servers) all use DCE Threads to handle
multiple requests.
Because the DFS file exporter and cache manager run in the kernel,
they do not use DCE Threads; DCE Threads is a user-space, not kernel,
threads implementation.
</Para>
<Para>DFS uses DCE RPC for all remote interaction between the DFS clients (for
example, the cache manager and Scout) and servers (for example, the
file exporter, fileset location server, and backup server).
Because the cache manager and file exporter run in the kernel,
they use a kernel version of RPC.
DFS uses CDS to locate fileset location servers.
DFS may use GDS indirectly (via CDS)
to locate fileset location servers in foreign cells registered
in the X.500 namespace.
DFS uses authenticated RPC and DCE ACLs to protect its resources.
DFS relies on DTS to maintain clock synchronization in the network.
</Para>
</ListItem>
</ItemizedList>
</Sect1>
<Sect1 Id="ITODCE.T4INT.div.4">
<Title>Implications of Mutual Dependencies</Title>
<IndexTerm Id="ITODCE.T4INT.indx.3">
<Primary>technology components</Primary>
<Secondary>integration</Secondary>
<Tertiary>implications</Tertiary>
</IndexTerm>
<Para>Mutual dependencies among DCE technology components
result in restrictions in areas such as the startup
of a cell.
For example, since the security service depends on CDS to find the
location of a security server, and CDS depends on the security service
to verify the authenticity of a CDS server, how can a DCE system
ever get started?
This section identifies the implications of mutual dependencies in the
areas of DCE system startup, porting and testing of DCE, and planning
for DCE configuration.
</Para>
<ItemizedList>
<ListItem>
<Para>Implications for startup
<IndexTerm Id="ITODCE.T4INT.indx.4">
<Primary>initialization, cell</Primary>
</IndexTerm></Para>
<Para>Mutual dependencies in DCE technologies dictate the order in which some
steps must be taken in bringing up a DCE client machine, a DCE server
machine, and a DCE cell.
In particular,
a DCE cell's servers must be started up in a particular order.
The security server is started first, since its dependency on
CDS can be circumvented through the use of a local file to find
security servers.
Then the CDS server is started.
For information on starting up DCE, see the &DCEAi;.
<?sml-break><?sml-need 11></Para>
</ListItem>
<ListItem>
<Para>Implications for porting and testing
<IndexTerm Id="ITODCE.T4INT.indx.5">
<Primary>porting</Primary>
</IndexTerm>
<IndexTerm Id="ITODCE.T4INT.indx.6">
<Primary>testing</Primary>
</IndexTerm></Para>
<Para>The interdependencies among DCE technologies constrain
the order in which technologies can be ported.
DCE Threads can be ported first, since other technologies
use it, and it has no dependencies.
Many of the other technologies have mutual dependencies, however.
To resolve this,
a porting effort can proceed by first porting the libraries of
all the components, and then going on to port and test the servers.
GDS can be ported independently, since it has no dependencies
on other DCE components.
For information on porting DCE technologies, see the
&DCEPg;.
</Para>
</ListItem>
<ListItem>
<Para>Implications for configuration
</Para>
<Para><IndexTerm Id="ITODCE.T4INT.indx.7">
<Primary>configuration</Primary>
<Secondary>cells</Secondary>
</IndexTerm>DCE technology interdependencies also have implications for
configuration.
The servers that other servers depend on are the servers that
are the highest priority for replication, in environments where
high availability is important.
This means that CDS and security servers should be replicated
since other DCE servers depend on them in order to operate.
Among the various DFS servers, the fileset location server is
the highest priority for replication.
For information on DCE configuration, see the &DCEAi;.
</Para>
</ListItem>
<ListItem>
<Para>Implications for application programmers
</Para>
<Para>Since DCE RPC is integrated with DCE Threads, programmers writing RPC-based
applications need to be aware of the implications of using
multiple threads of control.
See the &DCEDi; and &DCEDk;
for information about programming with Threads.
<IndexTerm Id="ITODCE.T4INT.indx.8" SpanEnd="ITODCE.T4INT.indx.1"></Para>
</ListItem>
</ItemizedList>
</Sect1>
</Chapter>
<!--+ 10/25/96 16:59:01
    | tagMorph:  $Id: 4_integration.sgm,v 1.1.2.8 1996/12/11 15:33:11 carrig Exp $
    | tagMorph library:  $Id: 4_integration.sgm,v 1.1.2.8 1996/12/11 15:33:11 carrig Exp $
    | sml-to-docbook:  1.24
    +-->
