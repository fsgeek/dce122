# COPYRIGHT NOTICE
# Copyright (c) 1990-1996 Open Software Foundation, Inc. 
# ALL RIGHTS RESERVED (DCE). See the file named COPYRIGHT.DCE in the 
# src directory for the full copyright text. 
# 
# 
# HISTORY
# $Log: idl.sams,v $
# Revision 1.1.2.2  1996/12/17  21:08:30  damon
# 	Expanded OSF C O P Y R I G H T   N O T I C E
# 	[1996/12/17  21:05:44  damon]
#
# Revision 1.1.2.1  1996/12/04  21:35:06  weir
# 	DCE 1.2.2 versions
# 	[1996/12/04  21:34:32  weir]
# 
# $EndLog$
# 
# 
# 
# Converted from nidlmsg.m and nidlmsg.h 1996-12-04-18:34:57.000
# Copyright 1996 Open Software Foundation, Cambridge, Mass.
component	idl
table	idl_svc_g_table
technology	dce

start
code	NIDL_MESSAGE_VERSION
text	"3077"
action		"None"
explanation	"None"
end

start
code	NIDL_CMDERR
text	"Use %1$s for list of command options"
explanation	"Errors on the command line prevent the IDL compiler from
		executing.
"
action		"Invoke the IDL compiler with the indicated command option to
		get a list of valid command options, then correct the error.
"
end

start
code	NIDL_DEFAUTOHAN
text	"Operation %1$s has no binding handle parameter; [auto_handle] assumed"
explanation	"When an operation uses parametric binding, its first parameter
		is a handle parameter that determines the location of a
		server of the interface.  Operations whose first parameter
		is not of type <kw>(handle_t) and does not have the <kw>([handle])
		attribute are assumed to use nonparametric binding
		known as <kw>(auto_handle), whereby a binding is automatically
		established by the RPC runtime library.
"
action		"See the documentation on the various binding techniques
		to determine the best method for your application.
"
end

start
code	NIDL_FILESOURCE
text	"File %1$s, line %2$lu: %3$s"
explanation	"Identifies the filename, source line number, and source
		text associated with an error.
"
action		"None.  This is an informational message.
"
end

start
code	NIDL_FLOATPROM
text	"Must compile stubs with ANSI C compiler to avoid promotion of float to double in operation %1$s"
explanation	"The operation contains a <kw>(float) parameter passed by value.
		Non-ANSI C compilers that do not support function prototypes,
		automatically promote <kw>(float) to <kw>(double).  Function
		prototypes within generated C stubs are conditional on the
		IDL_PROTOTYPES preprocessor symbol.  When you compile a
		stub with a non-ANSI C compiler, IDL_PROTOTYPES must not be
		defined (causing the non-prototyped definitions to compile)
		and thus causing <kw>(float) to <kw>(double) promotion.  This breaks
		the marshalling logic in the stub, that expects a <kw>(float), not
		a <kw>(double).
"
action		"Problems do not occur
		as long as you compile stubs with an ANSI C compiler.  However,
		to maximize portability, it is highly recommended that you
		modify any <kw>(float) parameter passed
		passed by value or a <kw>(float) passed by reference. This
		message is informational.
"
end

start
code	NIDL_IMPORTIDL
text	"Importing IDL file %1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_INCLCREATE
text	"Creating include file %1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_LEGALVALS
text	"Legal values are:"
explanation	"Identifies a list of legal values for a command option.
"
action		"Re-enter the option using one of the legal values.
"
end

start
code	NIDL_LINEFILE
text	"File %1$s, line %2$lu"
explanation	"Identifies the filename and source line number
		associated with an error.
"
action		"None. This is an informational message.
"
end

start
code	NIDL_NAMEDECLAT
text	"Name %1$s is declared in file %2$s, line %3$lu"
explanation	"Gives the source file and line
		number of source text to help you diagnose the
		previous error.
"
action		"None. This is an informational message.
"
end

start
code	NIDL_NAMEREFAT
text	"Name is referenced in file %1$s, line %2$lu"
explanation	"Gives the source file and line
		number of source text to help you diagnose the
		previous error.
"
action		"None. This is an informational message.
"
end

start
code	NIDL_NEWUUID
text	"%1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_OPTIONSTABLE
text	"Options table:"
explanation	"Caption for options table printed in usage message
"
action		"None. This is an informational message.
"
end

start
code	NIDL_PROCESSACF
text	"Processing attribute configuration file %1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_RUNCPP
text	"Running C preprocessor %1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_STUBCOMPILE
text	"Compiling stub module %1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_STUBCREATE
text	"Creating stub module %1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_STUBDELETE
text	"Deleting stub module %1$s"
action		"None"
explanation	"None"
end

start
code	NIDL_TYPEREPAS
text	"Type %1$s has a represent_as data type %2$s"
explanation	"IDL does not allow a data type that has a <kw>([represent_as]) type
		to itself be used as a <kw>([represent_as]) type in another type
		definition.
"
action		"The message gives
		information to help you locate the problem.
"
end

start
code	NIDL_USAGE
text	"Usage: idl filename [options]"
explanation	"Lists the format of the <kw>(idl) command
		that invokes the IDL compiler.
"
action		"Use the <kw>(-confirm) option to see a list of all
		to determine those you need.
"
end

start
code	NIDL_VERSION
text	"DCE IDL compiler version %1$s"
explanation	"Identifies the current version of the IDL compiler.
"
action		"Use this version number when submitting bug reports.
"
end

start
code	NIDL_DUPPROTOCOL
text	"Warning: Duplicate Protocol specification in endpoint list; \"%1$s\" ignored"
explanation	"Each protocol can be listed at most once in the endpoint list.  The specified
		endpoint specification duplicates another
		endpoint specification and is ignored.
"
action		"Use each protocol at most once in the endpoint list.
"
end

start
code	NIDL_ENDPOINTSYNTAX
text	"Warning: Syntax error in endpoint specification \"%1$s\""
explanation	"The syntax of the string describing the endpoint must be of the
		form <v>(protocol:[endpoint]).
		Although not in the expected format, the string <v>(endpoint)
		is assumed to be the desired endpoint specification
		and is put into the generated stubs.
"
action		"Correct the syntax of the <kw>(endpoint) specification.
"
end

start
code	NIDL_EXTRAPUNCT
text	"Warning: Extraneous punctuation character \"%1$s\" ignored "
explanation	"A punctuation character was found in a location
		where it is not allowed in the IDL language syntax.
"
action		"If it is only an extra puncutation character,
		remove it.  If the character appears correct, then the
		error may be caused by another nearby syntax error.
		Correct the other syntax errors and recompile the interface.
"
end

start
code	NIDL_FPHANATTR
text	"Warning: The [handle] attribute of a parameter in a function pointer declaration is ignored"
action		"None"
explanation	"None"
end

start
code	NIDL_IDTOOLONG
text	"Warning: Identifier: %1$s too long; maximum is %2$lu chars"
explanation	"The length identifier exceeds the maximum number of characters
		allowed by IDL for portability.
"
action		"Shorten the identifier name to within the allowed limit.
		Make sure the shortened identifier name is unique.
"
end

start
code	NIDL_INCLUDEXT
text	"Warning: include filename must not contain a file extension"
explanation	"The filename specified in an <kw>(include) statement in the
		Attribute Configuration File (ACF) must not contain a file
		extension.  In a future IDL version, you will be able to
		specify a programming language, and the IDL compiler will
		automatically append the appropriate extension.
"
action		"Remove the file extension.  The current IDL compiler
		always assumes an <kw>(.h) extension.
"
end

start
code	NIDL_INCLTYPE
text	"Warning: ACF include statement advised for definition of type %1$s"
explanation	"An Attribute Configuration File (ACF) declares a type that is
		not defined in an IDL file.  The type is referenced in the
		generated stub code, thus its definition needs to be included
		into the stub code as well.
"
action		"Place an <kw>(include) statement in the ACF to cause your module
		that defines the type to be included into the generated
		header file.
"
end

start
code	NIDL_INTSIZEREQ
text	"Warning: A size specifier is required; long assumed"
explanation	"A size specifier is required when specifying the <kw>(int) data type.
"
action		"Place a size specifier -- <kw>(short, small, long,)
		or <kw>(hyper) -- before the <kw>(int) keyword.
"
end

start
code	NIDL_LINENONSCAL
text	"Warning: The attributes [in_line] and [out_of_line] apply only to non-scalar types"
explanation	"Scalar data types are always marshalled in-line, since there
		is performance degradation if they are
		marshalled out-of-line.
"
action		"Do not use the <kw>([in_line]) and <kw>([out_of_line]) attributes
		on scalar types.
"
end

start
code	NIDL_MISSPTRCLASS
text	"Warning: Missing pointer class for %1$s; [ptr], [ref], or [unique] required"
explanation	"A pointer declaration does not have pointer class attribute
		and no <kw>([pointer_default]) attribute was  specified on the
		interface.
"
action		"All pointers must have one of the pointer class attributes:
		<kw>([ptr]), <kw>([ref]), or <kw>([unique]).
		Either add one of these attributes
		at the location of the pointer declaration, or add the
		<kw>([pointer_default]) attribute to the interface to specify the
		class to be used as the default for the module.
"
end

start
code	NIDL_MIXEDARRATTR
text	"Warning: The attributes [max_is,length_is] or [size_is,last_is] used together"
explanation	"The <kw>([max_is]) attribute specifies the array's upper bound while
		the <kw>([size_is]) attribute specifies the total number of array
		elements.  Similarly, <kw>([last_is]) specifies the upper data
		limit while <kw>([length_is]) specifies the
		number of valid data elements.
"
action		"Mixing the attributes can be incorrect.
		Make sure the declaration is correct and change if necessary.
"
end

start
code	NIDL_MULATTRDEF
text	"Warning: An attribute is defined multiple times"
explanation	"An attribute is repeated multiple times in an attribute list.
"
action		"Remove all but one occurrence of the offending attribute.
"
end

start
code	NIDL_NAMETOOLONG
text	"Warning: Generated name too long at line %1$lu."
explanation	"The compiler generated an identifier that is too long
		for some standard C compiler implementations.
"
action		"Shorten the name at the specified line.
"
end

start
code	NIDL_NOCODEOPS
text	"Warning: At least one operation must have the [code] attribute"
explanation	"All of the operations in the interface are marked so
		no code is generated for them in the stub modules.
"
action		"If you used the ACF <kw>([nocode]) attribute on the interface,
		be sure to specify <kw>([code]) on at least one operation.
		To disable stub generation entirely use a command line option.
"
end

start
code	NIDL_NOENDPOINT
text	"Warning: No endpoint can be found in the endpoint specification \"%1$s\""
explanation	"The syntax specified in the <kw>(endpoint) specification
		string does not contain
		an <kw>(endpoint) specification.
		The entire string is assumed to be the protocol name
		and the <kw>(endpoint) remains unspecified in the generated stubs.
"
action		"Correct the syntax of the <kw>(endpoint) specification.
"
end

start
code	NIDL_NONPORTCHAR
text	"Warning: Character constant cannot be portable across character sets"
explanation	"You used an integer value to specify a character. This
		cannot be portable across different character sets
		(ASCII and EBCDIC).
"
action		"Consider your portability requirements.
"
end

start
code	NIDL_NOSEMCHECK
text	"Warning: Semantic checking prevented by other reported errors"
explanation	"One or more of the reported errors prevented the compiler from
		completing the semantic checking of the interface.  This
		can cause some semantic errors in the interface to go unreported.
"
action		"Correct the reported errors and compile the interface again.
"
end

start
code	NIDL_OLDUUID
text	"Warning: Old UUID format must be replaced with new format:"
explanation	"The UUID specified in the interface attribute list is in an
		old format.
"
action		"Although the old format is compatible with the new
		format, we recommend that you switch to the new format.
		If the input is an NCS Version 1 NIDL source file, process it with
		the translator utility (the <kw>(nidl_to_idl) command) that
		converts an NCS Version 1 NIDL source file into the
		format expected by the IDL compiler.
		You can also use the <kw>(uuidgen) command to convert the
		old format UUID to the new format.
		When you have the new format for the UUID,
		compile the translated source file.
"
end

start
code	NIDL_OUTDIRIGN
text	"Warning: Object file for %1$s placed in current working directory"
explanation	"A command option specifies a directory other than the current
		working directory in which to place a generated C source and
		object file.
		The IDL compiler does not place the file in the requested
		directory if you use the <kw>(-cc_cmd) argument on the command line.
		Also, the IDL compiler does not place the file in the requested
		directory on systems on which the mechanism it usually uses
		for the placement does not work.
"
action		"IDL provides a command option that allows you to pass
		command options to the C compiler.  Use the appropriate
		C compiler option to assure that the object files are placed
		in the correct directory.
"
end

start
code	NIDL_REFUNIQUE
text	"Warning: The attribute [%1$s] applied on type with [%2$s] set, [%3$s] assumed"
action		"None"
explanation	"None"
end

start
code	NIDL_SRVNOCODE
text	"Warning: The attribute [nocode] does not apply to server stub"
explanation	"A server for an interface must support all of the routines in
		that interface, therefore, the <kw>([nocode]) ACF attribute is not
		valid when you use IDL to generate only server stub code.
"
action		"This is a warning, so no action is required.  If you want to
		remove the warning message, create a new ACF for the
		interface that does not use the <kw>([nocode]) attribute.  Or
		change the command line used so stub generation is not
		limited to the server stub.
"
end

start
code	NIDL_SYSIDLNAME
text	"Warning: File %1$s is a system-defined IDL filename"
explanation	"The file <v>(filename) has the same name as an RPC-supplied
		system IDL file.  This can cause unexpected compilation errors,
		such as missing declarations of IDL predefined types.
"
action		"Rename <v>(filename) so it does not conflict with any
		of the system-defined IDL filenames.
"
end

start
code	NIDL_REQCMDOPT
text	"%1$s requires the %2$s command line option"
explanation	"There are particular options and constructs
		that are extensions to the language, these
		require a particular commandline option.
"
action		"Add the required option to the command line
"
end

start
code	NIDL_ACFINIDL
text	"ACF attributes in the IDL file, require the -app_config command line option"
explanation	"Placing ACF attributes in the IDL file are
		extensions to the language, and require
		the -app_config command line option.
"
action		"Add -app_config to the command line
"
end

start
code	NIDL_ANONPIPE
text	"Pipes must be defined with a typedef"
explanation	"The IDL compiler constructs routine names
		that are referenced by generated stub code
		from the name of any <kw>(pipe) data type.
		Therefore the type cannot be anonymous.
"
action		"Declare the <kw>(pipe) data type with a <kw>(typedef)
		so the <kw>(pipe) has a name associated with it.
"
end

start
code	NIDL_ANONTYPE
text	"Declaration of %1$s cannot contain an anonymous type"
explanation	"The type specification for the parameter, field or <kw>(union) arm
		<v>(name) contains a data type that is an anonymous <kw>(struct) or
		<kw>(union).  Since such a type is unique
		and not compatible with any other type,
		the generated stubs cannot generate code to access the type.
"
action		"Move the <kw>(struct) or <kw>(union) declaration into
		a <kw>(typedef)  and modify the
		declaration of <v>(name) to use the newly created type name.
"
end

start
code	NIDL_ARMREFPTR
text	"An arm of a union cannot be or contain a [ref] pointer"
explanation	"IDL-generated server stub code must allocate storage for
		objects pointed to by <kw>([ref]) pointers.  IDL does not allow
		a <kw>([ref]) pointer within a <kw>(union) because the valid
		arm of the <kw>(union), and therefore the
		object for which storage is allocated, is not
		known at compile time.
"
action		"Change the pointer within the <kw>(union) declaration to a full pointer.
"
end

start
code	NIDL_ARRELEMCFMT
text	"Array elements cannot be conformant arrays or conformant structures"
explanation	"Array elements must be of fixed size.
"
action		"If the element type is an array, make sure that the array has
		fixed bounds.  If the element type is a structure, make sure
		that any arrays in the structure have fixed bounds.
"
end

start
code	NIDL_ARRELEMCTX
text	"Array elements cannot be context handles"
explanation	"Arrays of context handles are not allowed.
"
action		"Change the definition of the array so its elements are
		not context handles.  If you want to declare
		an array of context handles, you must use alternative means.
"
end

start
code	NIDL_ARRELEMPIPE
text	"Array elements cannot be pipes"
explanation	"Array elements cannot be pipes.
"
action		"Change the definition of the array so its elements are
		not of a <kw>(pipe) data type.  If you want to declare
		an array of pipes, you must use alternative means.
"
end

start
code	NIDL_ARRSIZEINFO
text	"Array size information required for %1$s"
explanation	"The IDL code uses an array with bounds that are not fixed
		and does not specify the appropriate size attributes.
"
action		"Modify the array declaration to include the appropriate
		<kw>([max_is]) or <kw>([size_is]) attribute.  
		If the array is a parameter, use an additional parameter to
		specify size information.  If the array is a field
		in a structure, use an additional field to
		specify size information.
		The IDL code uses an array with bounds that are not fixed 
		and does not specify the appropriate size attributes.
		Modify the array declaration to include the appropriate
		<kw>([min_is]), <kw>([max_is]), or <kw>([size_is]) attribute.  
		If the array is a parameter, use an additional parameter to
		specify the missing size information.  If the array is a field
		in a structure, use an additional field to
		specify the missing size information.
"
end

start
code	NIDL_ARRCFMTDIM
text	"Arrays can be conformant in the first dimension only"
explanation	"IDL only allows an array to be conformant in its first dimension.
"
action		"Modify the array declaration so dimensions other than
		the first have fixed bounds.
"
end

start
code	NIDL_ARRPTRPRM
text	"An array with a pointer attribute is valid only as a parameter"
explanation	"An array that is a parameter in an operation can have a pointer
		attribute because arrays are implicitly passed by reference
		pointer.  Otherwise, an array cannot have a pointer attribute.
"
action		"Remove the pointer attribute from the parameter or type
		definition, or define a new type without a pointer attribute.
"
end

start
code	NIDL_ARRSYNTAX
text	"Use array syntax to declare multidimensional arrays"
explanation	"An IDL declaration attempts to use mixed pointer (<kw>(*)) and
		array (<kw>([])) syntax to define a multidimensional array.
		The interpretation that an asterisk (<kw>(*)) is used
		to represent an array
		is due to the presence of one or more of the
		<kw>([max_is]), or <kw>([size_is]) attributes.  It is
		ambiguous whether size attributes apply to the pointer or the
		array, thus IDL does not allow mixing pointer and array syntax
		when size attributes are present.
"
action		"The IDL compiler requires that you make such declarations
		using only array <kw>([]) syntax.  If you do not want to
		declare a multidimensional array, you used the
		<kw>([max_is]), or <kw>([size_is]) attribute incorrectly.  They apply
		only to arrays with bounds that are not fixed, and the declared
		array has fixed bounds.
"
end

start
code	NIDL_ARRVARYDIM
text	"Arrays can be varying in the first dimension only"
explanation	"IDL only allows an array to be varying in its first dimension.
"
action		"Remove the <kw>([first_is]), <kw>([last_is]),
		or <kw>([length_is])
		attributes that refer to dimensions other than the first.
"
end

start
code	NIDL_ARRXMITOPEN
text	"Arrays with [transmit_as] cannot be conformant or varying"
explanation	"IDL does not allow a conformant or varying array with the
		<kw>([transmit_as]) attribute.
"
action		"Change the declaration so the array is of fixed size and
		has no data limit attributes, or remove the <kw>([transmit_as]) attribute.
"
end

start
code	NIDL_ATTRTRANS
text	"The attribute is no longer allowed in this context; use translator"
explanation	"An attribute list is encountered in an invalid context.
		In NCS Version 1 NIDL, attributes are allowed in this position.
		You may be compiling an NCS Version 1 NIDL source file.
"
action		"If the input is an NCS Version 1 NIDL source file, process it with the
		<kw>(nidl_to_idl) translator utility that
		converts an NCS Version 1 NIDL source file into the format expected by
		the IDL compiler.  Then compile the translated source file.
		Otherwise, move the attributes to a valid location.
"
end

start
code	NIDL_ATTRVALIND
text	"An attribute variable cannot be an indirect field reference"
explanation	"An indirect field reference is used in a field attribute;
		indirection is not allowed in this context.
"
action		"Remove the indirection.  For example, if the referenced field was
		<kw>(long *sp;) and the attribute expression was
		<kw>([size_is(*sp)]), then change the field to
		<kw>(long s;) and the attribute expression to
		<kw>([size_is(s)]).
"
end

start
code	NIDL_BADTAGREF
text	"Invalid use of tag %1$s"
explanation	"You used a previously defined tag name in a declaration of a different type.
		Tag names can be used for
		a <kw>(struct) or <kw>(union) declaration, but not both.
"
action		"Either make sure that each use of the tag name specifies the same type, or
		use different tag names with each type.
"
end

start
code	NIDL_BROADPIPE
text	"The attribute [broadcast] is not valid on an operation with pipes"
explanation	"IDL does not allow pipes to be used in <kw>([broadcast])
		operations.
"
action		"Remove the <kw>([broadcast]) attribute from the operation,
		or remove the <kw>(pipe) parameter from the operation.
"
end

start
code	NIDL_CASEDISCTYPE
text	"Case label type does not agree with discriminator type"
explanation	"The value of a <kw>(case) expression in a discriminated <kw>(union)
		is not the same data type as the discriminator variable
		in the <kw>(switch) clause.
"
action		"Change the discriminator declaration or the <kw>(case) expression
		so the data types match.
"
end

start
code	NIDL_CASECONENUM
text	"Case label must be a constant from the enumeration of the discriminant"
explanation	"The value of a <kw>(case) expression in a discriminated <kw>(union)
		is from a different enumeration data type than the enumeration
		data type of the discriminator variable in the <kw>(switch) clause.
"
action		"Change the discriminator declaration or the <kw>(case) expression
		so the enumeration data types match.
"
end

start
code	NIDL_CFMTARRREF
text	"Structures containing conformant arrays must be passed by reference"
explanation	"The size of a structure that contains a conformant array is
		not a compile-time constant.  It is not possible to pass such
		a structure by value.
"
action		"Change the parameter declaration to pass the structure by
		reference by adding an asterisk (<kw>(*)) to the
		left of the parameter name.
"
end

start
code	NIDL_CFMTBASETYP
text	"The base type of a pipe cannot be a conformant type"
explanation	"IDL does not allow pipes of any data type of size that is not fixed.
"
action		"Change your <kw>(pipe) type definition to use a fixed array or
		some other construct of fixed size.
"
end

start
code	NIDL_CFMTFLDLAST
text	"A conformant field must be the last field in the structure"
explanation	"The IDL compiler restricts arrays with bounds that are not fixed
		and that occur in structures to only the last field
		in the structure.
"
action		"If the structure contains more than one
		conformant array, remove all but one of them.
		Move the conformant array so it is the last field in the
		structure definition.
"
end

start
code	NIDL_CFMTUNION
text	"Conformant array or structure is invalid within a union"
explanation	"The IDL compiler does not allow an array with bounds  that are not fixed
		in a discriminated <kw>(union).  Each member of a <kw>(union) must
		be of fixed size.
"
action		"It is possible to have a <kw>(union) case that is a full <kw>([ptr])
		pointer to a conformant array or conformant structure.
		Change the declaration and
		associated code accordingly.
"
end

start
code	NIDL_CONFHANATTR
text	"Interface attributes [auto_handle] and [implicit_handle] cannot occur together"
explanation	"The <kw>([auto_handle]) and <kw>([implicit_handle]) attributes
		are two distinct
		mechanisms for managing the binding between client and server
		at runtime.  You cannot specify both of these attributes.
"
action		"See the documentation to determine which binding mechanism
		to use.  Then remove one of the conflicting attributes
		from the interface attribute list in the Attribute
		Configuration File (ACF).
"
end

start
code	NIDL_CONFLINEATTR
text	"The attributes [in_line] and [out_of_line] cannot occur together"
action		"None"
explanation	"None"
end

start
code	NIDL_CONFLICTATTR
text	"The attributes [%1$s] and [%2$s] cannot occur together"
explanation	"The specified attributes are conflicting and only one or the other
		can be specified.
"
action		"Remove one of the attributes.
"
end

start
code	NIDL_CONFREPRTYPE
text	"The [represent_as] type %1$s conflicts with previously defined %2$s"
explanation	"The attribute configuration file (ACF) contains conflicting
		<kw>([represent_as]) clauses for the same data type.
"
action		"Remove one of the <kw>([represent_as]) clauses for that data type.
"
end

start
code	NIDL_CONSTNOTFND
text	"Constant name: %1$s not found"
explanation	"The named <kw>(constant) is not defined.
"
action		"Modify the interface and specify a known constant.
"
end

start
code	NIDL_CONSTTYPE
text	"Constant type does not agree with constant expression"
explanation	"You used a constant expression that is inappropriate
		for the constant type.
"
action		"Modify the constant definition so the expression
		matches the type.
"
end

start
code	NIDL_HYPERCONST
text	"A hyper constant type is not allowed"
explanation	"<kw>(hyper) constant is not allowed.
"
action		"Modify the <kw>(constant) type to one of the supported types:
		<kw>(long, char, boolean, void *,) or <kw>(char *).
"
end

start
code	NIDL_MISSONINTER
text	"Missing \"}\" on interface declaration"
explanation	"The closing brace on the interface declaration was not found.
		It may have been omitted, the nesting of other braces may be incorrect, or
		some other syntax error may cause IDL to overlook a brace.
"
action		"Add the closing brace if missing, otherwise make sure all other braces
		are specified in pairs, and there are no other syntax errors.
"
end

start
code	NIDL_MISSONATTR
text	"Missing \"]\" on attribute list"
explanation	"The closing bracket on an attribute list was not found.
		It may have been omitted, or
		some other syntax error may cause IDL to overlook the bracket.
"
action		"Add the closing bracket if it is missing, otherwise make sure
		there are no other syntax errors.
"
end

start
code	NIDL_MISSONARR
text	"Missing \"]\" on array bound"
explanation	"The closing bracket on an array bound specification was not found.
		It may have been omitted, or
		some other syntax error may cause IDL to overlook the bracket.
"
action		"Add the closing bracket if it is missing, otherwise make sure
		there are no other syntax errors.
"
end

start
code	NIDL_MISSONOP
text	"Missing result type on operation declaration"
explanation	"No data type was found for the result of an operation
		while processing what appeared to be an
		operation declaration.  All operations must have an explicit result type.
"
action		"If the result type of an operation is omitted, explicitly
		specify it. If no result is returned from the operation,
		specify <kw>(void) as the result type.
		This error can also occur due to a previous syntax error.
"
end

start
code	NIDL_MISSONPARAM
text	"Missing type on parameter declaration"
explanation	"No data type is found for the parameter.
"
action		"If the parameter type is omitted, explicitly specify it.
		This error can also occur due to a previous syntax error.
"
end

start
code	NIDL_CTXBASETYP
text	"The base type of a pipe cannot be a [context_handle] type"
explanation	"A <kw>([context_handle]) type cannot be used as the base type
		of a <kw>(pipe).
"
action		"Remove the invalid declaration, or change it so the
		base type of the <kw>(pipe) is not a <kw>([context_handle]) type.
"
end

start
code	NIDL_CTXPTRVOID
text	"Attribute [context_handle] only applies to void * types"
explanation	"The attribute <kw>([context_handle]) indicates that the data is a
		pointer-sized object that serves as the handle, or method
		of accessing, some object.  To the called operation, the data is often
		an address of a structure in memory, although it need not be.
		A context handle is opaque to, and must never be written by,
		the caller code.  To emphasize this, IDL previously required that
		context handles be defined as type <kw>(void *).
		IDL has since been relaxed to also allow a context handle type
		to be defined as a pointer to a structure type by tag name, e.g.
		<v>(typedef [context_handle] struct opaque_struct * opaque_ch_t).
"
action		"Change the declaration with the <kw>([context_handle]) attribute
		to data type <kw>(void *) or to a <kw>(struct *) data type
		similar to the example above.
"
end

start
code	NIDL_CTXSTRFLD
text	"Context handles are not valid as structure fields"
explanation	"A context handle is not allowed as a field of a structure.
"
action		"Pass a context handle as a separate parameter to an operation,
		rather than embedding it as a field of a structure.
"
end

start
code	NIDL_CTXUNIMEM
text	"Context handle is not valid as a member of a union"
explanation	"A context handle cannot be a member of a <kw>(union).
"
action		"Pass a context handle as a separate parameter to an operation,
		rather than embedding it as a member of a <kw>(union).
"
end

start
code	NIDL_DEFNOTCOMP
text	"Definition of tag %1$s is not yet complete"
explanation	"The tag <v>(name) is forward referenced in a context that requires it to be
		completely defined.  References
		to <kw>(struct) or <kw>(union) types by means of tag
		name before the <kw>(struct) or <kw>(union) is
		completely defined is only allowed in
		contexts in which the size is not needed (a pointer to the type or
		in a <kw>(typedef)).  Although IDL can process
		such references, the resulting
		stub cannot be compiled by most C compilers.
"
action		"Move the declaration of the <kw>(struct) or <kw>(union) prior to this
		reference.
"
end

start
code	NIDL_DUPCASEVAL
text	"Duplicate case label value"
explanation	"A discriminated <kw>(union) contains more than one <kw>(case) label
		with the same value.  Each <kw>(case) label value in a discriminated
		<kw>(union) can be used at most once.
"
action		"Remove one of the conflicting <kw>(case) labels.
"
end

start
code	NIDL_EOF
text	"Unexpected end-of-file"
explanation	"The end of the source file was encountered before
		the end of the interface definition.
		The source file may be incomplete.
"
action		"Complete the interface definition.
		
"
end

start
code	NIDL_EOFNEAR
text	"Unexpected end-of-file near '%2$.*1$s'"
explanation	"The end of the source file was encountered before
		the end of the interface definition.
		The source file may be incomplete.
"
action		"Complete the interface definition.
"
end

start
code	NIDL_ERRINATTR
text	"Syntax error in attribute list"
explanation	"The syntax of the attribute list is not correct.  It must contain a list of
		attributes separated by commas.
"
action		"Make sure the attribute list contains only
		valid attribute names and values, that
		their spellings are correct, and that they form a valid list.
"
end

start
code	NIDL_ERRSTATDEF
text	"Data type %1$s must be defined in %2$s"
explanation	"You used a feature that requires a predefined data type that is
		normally present by default, but the data type was not found.
		An examples is a <kw>([comm_status]) or <kw>([fault_status])
		parameter, which requires the data type <kw>(error_status_t).
"
action		"The compiler expected to find the type in the indicated file
		(usually <kw>(nbase.idl), which is automatically imported by
		IDL).  Check that you are using the proper header files that were
		installed with DCE.
"
end

start
code	NIDL_FILENOTDIR
text	"File is not a directory: %1$s"
explanation	"A file that is not a directory is specified in a context
		where a directory is required; for example, as the command
		line option that specifies an output directory.
"
action		"Specify a filename that is a directory.
"
end

start
code	NIDL_FILENOTFND
text	"File %1$s not found"
explanation	"A file, specified by the user either in the IDL source or
		ACF file, does not exist.
"
action		"Check the filenames you specified.  Determine
		the location of any imported or included files that are needed to
		compile the IDL source file specified. If any are not in the
		directories that the IDL compiler searches by default, you
		must use a command line option to specify additional
		directories to search.
"
end

start
code	NIDL_FIRSTINATTR
text	"The [first_is] parameter must have the [in] attribute"
explanation	"The <kw>([first_is]) attribute specifies a parameter that contains
		the lower data limit of a varying array.  Since the array has the
		<kw>([in]) attribute, the lower data limit
		parameter must also be <kw>([in])
		so the number of array elements to send from client to
		server is known.
"
action		"Change the lower data limit parameter referenced by the
		<kw>([first_is]) clause to have the <kw>([in]) attribute.
"
end

start
code	NIDL_FIRSTYPEINT
text	"A [first_is] variable must be a small, short, or long integer"
explanation	"The <kw>([first_is]) attribute specifies a field
		or parameter that contains
		the lower data limit of a varying array.  Array data limits
		must be integers which are not <kw>(hyper).
"
action		"Change the data limit field or parameter referenced by the
		<kw>([first_is]) clause to integer data type.
"
end

start
code	NIDL_FLOATCONSTNOSUP
text	"Floating point constants not supported"
explanation	"Floating point constants cannot be specified in IDL.
"
action		"Remove the <kw>(float) constant specification.
"
end

start
code	NIDL_FPCFMTARR
text	"Function pointers are not valid as elements of conformant arrays"
action		"None"
explanation	"None"
end

start
code	NIDL_FPLOCINT
text	"Function pointers are allowed only in local interfaces"
action		"None"
explanation	"None"
end

start
code	NIDL_FPHANPRM
text	"Function pointer parameters cannot be of type handle_t"
action		"None"
explanation	"None"
end

start
code	NIDL_FPINPRM
text	"Function pointers in an operation must be [in] parameters"
action		"None"
explanation	"None"
end

start
code	NIDL_FPPIPEBASE
text	"The base type of a pipe cannot be a function pointer"
action		"None"
explanation	"None"
end

start
code	NIDL_FPSTRFLD
text	"Function pointers are not valid as structure fields"
action		"None"
explanation	"None"
end

start
code	NIDL_FPUNIMEM
text	"Function pointers are not valid as members of unions"
action		"None"
explanation	"None"
end

start
code	NIDL_FUNTYPDCL
text	"Function types are allowed only in local interfaces"
action		"None"
explanation	"None"
end

start
code	NIDL_HANARRELEM
text	"Array elements cannot be of type handle_t"
explanation	"Data type <kw>(handle_t) is only meaningful when used as the data
		type of the first parameter in an operation.  It is used to
		establish a binding to a server of the interface.
"
action		"Do not declare arrays of type <kw>(handle_t).
"
end

start
code	NIDL_HANDLEIN
text	"A [handle] binding parameter must be [in] or [in,out]"
explanation	"A parameter of a data type with the <kw>([handle]) attribute
		as the first parameter
		in an operation is used to
		establish a binding to a server of the interface.
		It must be an <kw>([in]) or <kw>([in,out]) parameter.
"
action		"Place the <kw>([in]) attribute on the <kw>([handle]) parameter.
"
end

start
code	NIDL_HANDLEPTR
text	"Pointers to type handle_t are valid only in parameter declarations"
explanation	"Data type <kw>(handle_t) is only meaningful when used as the data
		type of the first parameter in an operation.  It is used to
		establish a binding to a server of the interface.
"
action		"Do not declare a pointer to data type <kw>(handle_t), except
		as a parameter.
"
end

start
code	NIDL_HANFIRSTPRM
text	"A handle_t as other than the first parameter requires a [transmit_as]"
explanation	"Data type <kw>(handle_t) is only meaningful when used as the data
		type of the first parameter in an operation.  A bound handle
		is used to deliver the call to the correct server of the
		interface.  A bound <kw>(handle_t) parameter itself
		is not transmittable.  When the <kw>(handle_t) type is used
		in other than the first parameter, it must have a
		<kw>([transmit_as]) clause to convert it to a transmittable type.
"
action		"Use data type <kw>(handle_t) only as the data
		type of the first parameter in an operation,
		unless the defined data type has a <kw>([transmit_as]) clause.
"
end

start
code	NIDL_HANPIPEBASE
text	"The base type of a pipe cannot be handle_t"
explanation	"Data type <kw>(handle_t) is only meaningful when used as the data
		type of the first parameter in an operation.  It is used to
		establish a binding to a server of the interface.
"
action		"Do not declare pipes whose base type is <kw>(handle_t).
"
end

start
code	NIDL_HANPRMIN
text	"A handle_t binding parameter must be an [in] parameter"
explanation	"A parameter of type <kw>(handle_t) as the first parameter
		in an operation
		establishes a binding to a server of the interface.
		It must be an <kw>([in]) parameter only.
"
action		"Remove the <kw>([out]) attribute from the <kw>(handle_t) parameter.
"
end

start
code	NIDL_HANSTRFLD
text	"Structure fields cannot be of type handle_t"
explanation	"Data type <kw>(handle_t) is only meaningful when used as the data
		type of the first parameter in an operation.  It is used to
		establish a binding to a server of the interface.
"
action		"Do not declare structure fields of data type <kw>(handle_t).
"
end

start
code	NIDL_HANUNIMEM
text	"Members of unions cannot be of type handle_t"
explanation	"Data type <kw>(handle_t) is only meaningful when used as the data
		type of the first parameter in an operation.  It is used to
		establish a binding to a server of the interface.
"
action		"Do not declare <kw>(union) members of data type <kw>(handle_t).
"
end

start
code	NIDL_HANXMITAS
text	"A handle_t first parameter must not have [transmit_as] type"
explanation	"A parameter of type <kw>(handle_t), when used as the data
		type of the first parameter in an operation, is used to
		establish a binding to a server of the interface.
		It is not sent over the wire, therefore it is incorrect
		for it to have a <kw>([transmit_as]) data type.
"
action		"Remove the <kw>([transmit_as]) clause from the type's declaration.
"
end

start
code	NIDL_IDEMPIPE
text	"The attribute [idempotent] is not valid on an operation with pipes"
explanation	"An operation that uses pipes cannot be idempotent, because the
		<kw>(pipe) data stream can break at unpredictable times.
"
action		"Remove the <kw>([idempotent]) attribute from the operation,
		or remove the <kw>(pipe) parameter from the operation.
"
end

start
code	NIDL_IGNARRELEM
text	"The attribute [ignore] on array elements is not allowed"
explanation	"The <kw>([ignore]) attribute is not allowed on array elements
"
action		"Remove the <kw>([ignore]) attribute from the relevant declaration.
"
end

start
code	NIDL_IGNATTRPTR
text	"The attribute [ignore] is valid only for pointers"
explanation	"The <kw>([ignore]) attribute is valid only for pointers.
"
action		"Remove the <kw>([ignore]) attribute from the declaration.
"
end

start
code	NIDL_ILLFIELDATTR
text	"The attribute [%1$s] on a field is not allowed"
explanation	"The specified attribute is not valid on a field.
"
action		"Remove the attribute.
"
end

start
code	NIDL_ILLPARAMATTR
text	"The attribute [%1$s] on a parameter is not allowed"
explanation	"The specified attribute is not valid on a parameter declaration.
"
action		"Remove the attribute.
"
end

start
code	NIDL_ILLTYPEATTR
text	"The attribute [%1$s] on a type is not allowed"
explanation	"The specified attribute is not valid on a type declaration.
"
action		"Remove the attribute.
"
end

start
code	NIDL_ILLOPATTR
text	"The attribute [%1$s] on an operation is not allowed"
explanation	"The specified attribute is not valid on an operation.
"
action		"Remove the attribute.
"
end

start
code	NIDL_ILLINTATTR
text	"The attribute [%1$s] on an interface is not allowed"
explanation	"The specified attribute is not valid on a interface declaration.
"
action		"Remove the attribute.
"
end

start
code	NIDL_ILLMEMATTR
text	"The attribute [%1$s] on a union member is not allowed"
explanation	"The specified attribute is not valid on a <kw>(union) member declaration.
"
action		"Remove the attribute.
"
end

start
code	NIDL_IMPHANVAR
text	"An [implicit_handle] variable must either be of type handle_t or have the handle attribute"
explanation	"The <kw>([implicit_handle]) variable declared in the ACF must be a
		handle, either a primitive handle of data type <kw>(handle_t);
		or a customized handle, a data type with the <kw>([handle]) attribute.
"
action		"Specify a valid handle data type for the <kw>([implicit_handle]).
"
end

start
code	NIDL_IMPORTLOCAL
text	"A nonlocal interface cannot import a local interface"
explanation	"The <kw>([local]) interface attribute implies that the interface
		is not part of an RPC application, but used only to generate
		header files.  This causes IDL to suppress any
		errors specific to RPC that the interface uses as
		part of an RPC application.
"
action		"Remove the <kw>([local]) attribute from the imported interface
		definition.  The imported interface does not need a UUID
		unless the interface defines an operation and you compile it
		independently.
"
end

start
code	NIDL_INCOMPATV1
text	"V1 attributes are incompatible with this type"
explanation	"The version 1 migration attributes are provided for compatibility for
		applications that were originally written with NCS Version 1 NIDL.
		These attributes
		are <kw>([v1_string]), <kw>([v1_array]), <kw>([v1_enum]),
		and <kw>([v1_struct]).  In later versions of IDL, strings,
		conformant and varying arrays, enumerations,
		and structures are enhanced at
		the network representation level.  A data type with any of
		the V1 migration attributes cannot contain one of these data types
		that does not have the corresponding V1 attribute.
"
action		"Change the data type declaration so all relevant
		contained types have the corresponding V1 attribute, or remove
		V1 attributes if compatibility with NCS Version 1 NIDL is unnecessary.
"
end

start
code	NIDL_INTCODEATTR
text	"Interface attributes [code] and [nocode] cannot occur together"
explanation	"The <kw>([code]) or <kw>([nocode]) attribute on an interface
		establishes the default for operations in the interface.
		You can specify only one of these attributes.
"
action		"Remove one of the conflicting attributes.
"
end

start
code	NIDL_INTDIVBY0
text	"Integer division by zero"
explanation	"The evaluation of an integer constant expression resulted
		in an integer divided by zero.
"
action		"Correct the expression so a division by zero does
		not occur.
"
end

start
code	NIDL_INTLINEATTR
text	"Interface attributes [in_line] and [out_of_line] cannot occur together"
explanation	"The <kw>([in_line]) or <kw>([out_of_line]) attribute on an interface
		establishes the default for types in the interface.
		You can specify only one of these attributes.
"
action		"Remove one of the conflicting attributes.
"
end

start
code	NIDL_INTNAMDIF
text	"ACF interface name %1$s differs from IDL interface name %2$s"
explanation	"The interface name in an interface's Attribute Configuration
		File must be identical to the interface name in the IDL source.
"
action		"Change the ACF to use the correct interface name.
"
end

start
code	NIDL_INTOVERFLOW
text	"Integer value overflows %1$s"
explanation	"The integer value specified is too large to be contained in
		the destination of size <v>(size).
"
action		"Either reduce the size of the integer value, or increase the
		size of the destination declaration.
"
end

start
code	NIDL_INTCONSTINVAL
text	"Integer constant %1$s is invalid"
explanation	"The integer contains incorrect characters.
"
action		"Correct the specification of the integer.
"
end

start
code	NIDL_INTUUIDREQ
text	"Interface UUID must be specified"
explanation	"The interface does not have the <kw>([uuid]) attribute required for
		the complete definition of the interface.
"
action		"Either add the <kw>([local]) attribute to the interface, or generate
		a UUID with the <kw>(uuidgen) utility supplied with IDL and specify
		the UUID value in the interface <kw>([uuid]) attribute.
"
end

start
code	NIDL_INVARRIND
text	"Invalid array bound type"
explanation	"Array indices must be integers.
"
action		"Change the array declaration so the fixed bounds are integer
		constants.
"
end

start
code	NIDL_INVCASETYP
text	"Invalid case label type"
explanation	"The values in <kw>(case) clauses in
		discriminated <kw>(union)s must be
		integer, enumeration, boolean, or character values that match
		the data type of the <kw>(union) discriminator.
"
action		"Modify the invalid clause to use a value of the correct
		data type.
"
end

start
code	NIDL_INVCHARLIT
text	"Invalid character literal"
explanation	"The specification of the character literal is invalid.
"
action		"Character literals can be specified as a single printing
		character or one of the following escape sequeces:
		<literal>(\)n, <literal>(\)t, <literal>(\)v, <literal>(\)b,
		<literal>(\)r, <literal>(\)f, <literal>(\)a,
		<literal>(\)<literal>(\), <literal>(\)?, <literal>(\)',
		<literal>(\)\", <literal>(\)<v>(ooo), <literal>(\)x<v>(hh)
		(where <v>(ooo) are octal digits, and
		<v>(hh) are hexadecimal digits).
"
end

start
code	NIDL_INVOCTDIGIT
text	"Invalid octal digit in %1$s"
explanation	"An octal integer contains a digit that is not valid.
		Integer constants with a leading zero are interpreted as
		octal values.  Only the digits 0 through 7 are valid in octal value.
"
action		"If the integer is not intended to be specified in octal, remove
		the leading zeros. Otherwise correct the value to contain only
		octal digits.
"
end

start
code	NIDL_INVOKECPP
text	"Could not invoke the C preprocessor"
explanation	"The IDL compiler is unable to invoke the C preprocessor
		to preprocess the IDL file before compiling it.
"
action		"If you do not need the C preprocessor, you can use a command
		line option to prevent the
		IDL compiler from calling it.  If you specified
		the C preprocessor to invoke with a command line option,
		check to make sure you gave the correct file specification.
		If you do not specify a C preprocessor, the IDL compiler
		looks in a default directory for it.  The C
		preprocessor may not be installed in the expected directory.
"
end

start
code	NIDL_INVOOLPRM
text	"The attribute [out_of_line] is not allowed on parameters"
explanation	"IDL does not allow the <kw>([out_of_line])
		attribute on parameters.
"
action		"Apply the <kw>([out_of_line]) attribute to the type definition
		rather than the parameter.  If you do not want all
		instances of the type <kw>([out_of_line]), define two separate
		types, one of which has the <kw>([out_of_line]) attribute.
"
end

start
code	NIDL_INVOPTION
text	"Command option -%1$s %2$s is not valid"
explanation	"The <v>(option-value) specified is not valid for the option
		with which it is used.
"
action		"See the documentation for the correct command line syntax.
"
end

start
code	NIDL_INVPARAMS
text	"Invalid parameters on command line:"
explanation	"There are extra parameters on the command line.
"
action		"You may have attempted to use a value on a option that does
		not take a value, or attempted to compile more than one
		interface at once.
		See the documentation for the proper command line syntax.
"
end

start
code	NIDL_INVPTRCTX
text	"Pointers to context handles are valid only in parameter declarations"
explanation	"IDL does not allow pointers to context handles,
		except in parameter declarations.
"
action		"Do not declare a pointer to a <kw>(context_handle), except as a parameter.
"
end

start
code	NIDL_INVPTRPIPE
text	"Pointers to pipes are valid only in parameter declarations"
explanation	"IDL does not allow a pointer to a <kw>(pipe),
		except in a parameter declaration.
"
action		"Do not declare a pointer to a <kw>(pipe), except as a parameter.
"
end

start
code	NIDL_LASTINATTR
text	"The [last_is] parameter must have the [in] attribute"
explanation	"The <kw>([last_is]) attribute specifies a parameter that contains
		the upper data limit of a varying array.  Since the array has the
		<kw>([in]) attribute, the upper data
		limit parameter must also be <kw>([in])
		so the number of array elements to send from client to
		server is known.
"
action		"Change the data limit parameter referenced by the
		<kw>([last_is]) clause to have the <kw>([in]) attribute.
"
end

start
code	NIDL_LASTLENCONF
text	"The attributes [last_is] and [length_is] cannot occur together"
explanation	"The <kw>([last_is]) and <kw>([length_is]) attributes both specify a
		field or parameter used to determine the
		data limit of a varying array.
		You cannot use both.
"
action		"The <kw>([last_is]) attribute specifies the
		index of the last valid element.
		The <kw>([length_is]) attribute specifies the
		total number of elements in the
		array. Remove one of these attributes.
"
end

start
code	NIDL_LASTYPEINT
text	"A [last_is] variable must be a small, short, or long integer"
explanation	"The <kw>([last_is]) attribute specifies a field or parameter that contains
		the upper data limit of a varying array.  Array data limits
		must be integers which are not <kw>(hyper).
"
action		"Change the upper data limit field or parameter referenced by the
		<kw>([last_is]) clause to be of integer data type.
"
end

start
code	NIDL_LBLESSUB
text	"The lower bound must not be greater than the upper bound"
explanation	"The syntax of an array requires the lower bound to
		precede the upper bound.
"
action		"Modify the array declaration so the lower bound is first.
"
end

start
code	NIDL_LENINATTR
text	"The [length_is] parameter must have the [in] attribute"
explanation	"The <kw>([length_is]) attribute specifies a parameter used
		to determine the data length of a varying array.
		Since the array has the
		<kw>([in]) attribute, the <kw>(length_is) parameter
		must also be <kw>([in])
		so the number of array elements to send from client to
		server is known.
"
action		"Change the parameter referenced by the
		<kw>([length_is]) clause to have the <kw>([in]) attribute.
"
end

start
code	NIDL_LENTYPEINT
text	"A [length_is] variable must be a small, short, or long integer"
explanation	"The <kw>([length_is]) attribute specifies a field
		or parameter that contains
		the data length of a varying array.  The field or parameter
		must be integers which are not <kw>(hyper).
"
action		"Change the field or parameter referenced by the
		<kw>([length_is]) clause to be of integer data type.
"
end

start
code	NIDL_MAJORTOOLARGE
text	"The major version number is too large; the maximum is %1$lu"
explanation	"The major version number is too large.
"
action		"Replace the major version number (the portion
		to the left of the period) with a value
		less than <v>(number).
"
end

start
code	NIDL_MAXCFMTYPE
text	"The attribute [max_is] cannot be applied to dimension %1$lu; upper bound is not dynamic"
explanation	"A <kw>([max_is]) variable is only valid for array dimensions that
		have an upper bound that is not fixed.
"
action		"If the array is multidimensional, you may have specified the
		<kw>([max_is]) variable for the wrong dimension.  See the
		documentation for the proper syntax.  If the array has only
		one dimension, the <kw>([max_is]) clause is invalid, since the
		array's upper bound is fixed.  You may have meant to use a
		<kw>([last_is]) clause.  See the documentation for the
		distinctions between conformant and varying arrays
		and their attributes.
"
end

start
code	NIDL_MAXIDINTF
text	"Maximum identifier length for interface name is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the interface name.
		Therefore, the number of characters allowed
		in an interface name is
		less than for other identifiers.
"
action		"Shorten the interface name.
"
end

start
code	NIDL_MAXIDTYPTA
text	"Maximum identifier length for type with [transmit_as] is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the names of any <kw>([transmit_as]) data types.
		Therefore, the number of characters allowed
		in such a data type is
		less than for other identifiers.
"
action		"Shorten the data type name.
"
end

start
code	NIDL_MAXIDTYPHAN
text	"Maximum identifier length for [handle] type is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the names of any <kw>([handle]) data types.
		Therefore, the number of characters allowed
		in such a data type is
		less than for other identifiers.
"
action		"Shorten the data type name.
"
end

start
code	NIDL_MAXIDTYPCH
text	"Maximum identifier length for [context_handle] type is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the names of any <kw>([context_handle]) data types.
		Therefore, the number of characters allowed
		in such a data type is
		less than for other identifiers.
"
action		"Shorten the data type name.
"
end

start
code	NIDL_MAXIDTYPPT
text	"Maximum identifier length for pointed-to type is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the names of any pointed-to data types.
		Therefore, the number of characters allowed
		in such a data type is
		less than for other identifiers.
"
action		"Shorten the data type name.
"
end

start
code	NIDL_MAXIDTYPPIPE
text	"Maximum identifier length for pipe type is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the names of any <kw>(pipe) data types.
		Therefore, the number of characters allowed
		in such a data type is
		less than for other identifiers.
"
action		"Shorten the data type name.
"
end

start
code	NIDL_MAXIDTYPRA
text	"Maximum identifier length for [represent_as] type is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the names of any <kw>([represent_as]) data types.
		Therefore, the number of characters allowed
		in such a data type is
		less than for other identifiers.
"
action		"Shorten the data type name.
"
end

start
code	NIDL_MAXIDTYPOOL
text	"Maximum identifier length for [out_of_line] type is %1$lu characters"
explanation	"The IDL compiler constructs new identifier names
		that are referenced by generated stub code
		from the names of any <kw>([out_of_line]) data types.
		Therefore, the number of characters allowed
		in such a data type is
		less than for other identifiers.
"
action		"Shorten the data type name.
"
end

start
code	NIDL_MAXINATTR
text	"A [max_is] parameter must have the [in] attribute"
explanation	"The <kw>([max_is]) attribute specifies a parameter that contains
		the upper bound of a conformant array.  This must be an <kw>([in])
		attribute so the server stub code knows how much
		space to allocate for the array.
"
action		"Change the upper bound parameter referenced by the
		<kw>([max_is]) clause to have the <kw>([in]) attribute.
"
end

start
code	NIDL_MAXSIZEATTR
text	"The attribute [max_is] or [size_is] is required"
explanation	"An array with an upper bound that is not fixed is used as a field of
		a structure or as a parameter of an operation.  You must
		specify a field or parameter that determines
		the allocation of the array at runtime.
"
action		"Use a <kw>([max_is]) or <kw>([size_is]) attribute to specify
		the field or parameter that contains the size information.
"
end

start
code	NIDL_MAXSIZECONF
text	"The attributes [max_is] and [size_is] cannot occur together"
explanation	"The <kw>([max_is]) and <kw>([size_is]) attributes both specify a
		field or parameter used to determine the
		upper bound of a conformant array.
		You cannot use both.
"
action		"The <kw>([max_is]) attribute specifies
		the index of the last possible array element.
		The <kw>([size_is]) attribute specifies
		the total number of possible elements in the
		array. Remove one of the attributes.
"
end

start
code	NIDL_MAXTYPEINT
text	"A [max_is] variable must be a small, short, or long integer"
explanation	"The <kw>([max_is]) attribute specifies a field or parameter that contains
		the upper bound of a conformant array.  Array bounds 
		must be integers which are not <kw>(hyper).
"
action		"Change the upper bound field or parameter referenced by the
		<kw>([max_is]) clause to be of integer data type.
"
end

start
code	NIDL_BFINTTYPE
text	"A bit field specification can be applied only to simple, integral types"
explanation	"A bit field specification indicates the bit width of a simple
		integral type.  This cannot be applied to other types such as
		pointers and structs for obvious reasons.
"
action		"Remove bit field specifications that appear on non-integral 
		simple types.
"
end

start
code	NIDL_MAYBEOUTPRM
text	"A [maybe] operation cannot have [out] parameters or a function result"
explanation	"The <kw>([maybe]) attribute specifies that the operation's caller
		does not require and does not receive a response or fault
		indication.  Do not use an <kw>([out])
		parameter or a function result in a <kw>([maybe]) operation.
"
action		"Remove the <kw>([maybe]) attribute from the operation,
		or remove all <kw>([out]) parameters from the function and
		declare its result type as <kw>(void).
"
end

start
code	NIDL_MINATTREQ
text	"The attribute [min_is] is required"
explanation	"An array with a lower bound that is not fixed is used as a field of
		a structure or as a parameter of an operation.  You must
		specify a field or parameter that determines
		the lower bound of the array at runtime.
"
action		"Use a <kw>([min_is]) attribute to specify
		the field or parameter that contains the lower bound.
"
end

start
code	NIDL_MINCFMTYPE
text	"The attribute [min_is] cannot be applied to dimension %1$lu; lower bound is not dynamic"
explanation	"A <kw>([min_is]) variable is valid only for array dimensions that
		have a lower bound that is not fixed.
"
action		"If the array is multidimensional, you may have specified the
		<kw>([min_is]) variable for the wrong dimension.  See the
		documentation for the proper syntax.  If the array has only
		one dimension, the <kw>([min_is]) clause is invalid, since the
		array's lower bound is fixed.  The
		<kw>([first_is]) clause is valid for single dimension
		arrays.  See the documentation for the
		distinctions between conformant and varying arrays
		and their attributes.
"
end

start
code	NIDL_MININATTR
text	"A [min_is] parameter must have the [in] attribute"
explanation	"The <kw>([min_is]) attribute specifies a parameter that contains
		the lower bound of a conformant array.  This parameter
		must have an <kw>([in])
		attribute so the server stub code will allocate adequate
		space for the array.
"
action		"Change the lower bound parameter referenced by the
		<kw>([min_is]) clause to have the <kw>([in]) attribute.
"
end

start
code	NIDL_MINORTOOLARGE
text	"The minor version number is too large; the maximum is %1$lu"
explanation	"The minor version number is too large.
"
action		"Replace the minor version number (the portion
		to the right of the period) with a value
		less than <v>(number).
"
end

start
code	NIDL_MINTYPEINT
text	"A [min_is] variable must be a small, short, or long integer"
explanation	"The <kw>([min_is]) attribute specifies a field or parameter that contains
		the lower bound of a conformant array.  Array bounds 
		must be integers that are not <kw>(hyper).
"
action		"Change the lower bound field or parameter referenced by the
		<kw>([min_is]) clause so that it is a small, short, or long
		integer.
"
end

start
code	NIDL_NAMEALRDEC
text	"Name already declared: %1$s"
explanation	"The name referenced is already declared.
"
action		"Modify the interface and select a unique name
		for the given item.
"
end

start
code	NIDL_NAMENOTCONST
text	"Name is not a constant: %1$s"
explanation	"The name used to define a new constant is not the name of
		a <kw>(constant).
"
action		"Modify the <kw>(constant) definition to use
		a predefined <kw>(constant) name.
"
end

start
code	NIDL_NAMENOTFIELD
text	"Name is not a field: %1$s"
explanation	"The name referenced in an array attribute is not
		declared as a field in the structure being defined.
"
action		"Declare a field in the structure that can be used
		in the array attribute.
"
end

start
code	NIDL_NAMENOTFND
text	"Name not found: %1$s"
explanation	"The referenced name is not defined.
"
action		"Modify the interface to define an appropriate type for the
		specified name.
"
end

start
code	NIDL_NAMENOTPARAM
text	"Name is not a parameter: %1$s"
explanation	"The name referenced in an array attribute is not
		declared as a parameter in the operation being defined.
"
action		"Declare a parameter in the operation that can be used
		in the array attribute.
"
end

start
code	NIDL_NAMENOTTYPE
text	"Name is not a type: %1$s"
explanation	"The name referenced is not a type definition.
"
action		"Modify the interface to specify a unique type specification
		instead of the name referenced.
"
end

start
code	NIDL_NAMEPREVDECLAT
text	"Name %1$s previously declared in file %2$s, line %3$lu"
explanation	"The name referenced was previously declared at the specified location.
"
action		"Remove this declaration, if it is redundant, or change the spelling
		so it does not conflict with the existing name.
"
end

start
code	NIDL_NLSCATVER
text	"%1$sNLS message catalog version mismatch in \"%2$s\", Expected: \"%3$lu\", Actual: \"%4$s\""
action		"None"
explanation	"None"
end

start
code	NIDL_NLSWRONG
text	"%1$sError messages may be incorrect"
explanation	"The error messages reported by the IDL compiler are stored in an NLS
		message catalog.  The catalog <v>(filename) is not the same version
		as the IDL compiler being invoked.  The error messages reported may
		therefore be incorrect or cause the compiler to terminate abnormally.
"
action		"Check the definition of the NLS environment variable NLSPATH and verify that
		it searches the appropriate directories.  The default location for the IDL
		compiler message catalog is
		<v>(<literal>(<)dceshared>)<kw>(/nls/msg/)<v>(LANG)<kw>(/)
"
end

start
code	NIDL_NONINTEXP
text	"Non-integer values are not allowed in expressions"
explanation	"One of the values in the expression is not
		an integer (or one that can be promoted to integer).
"
action		"Correct the expression to contain only integer values.
"
end

start
code	NIDL_NYSALIGN
text	"The [align] attribute is not yet supported"
action		"None"
explanation	"None"
end

start
code	NIDL_NYSINSHAPE
text	"The attribute [in(shape)] is not yet supported"
action		"None"
explanation	"None"
end

start
code	NIDL_NYSNONZEROLB
text	"Arrays with a nonzero lower bound are not yet supported"
action		"None"
explanation	"None"
end

start
code	NIDL_NYSOUTSHAPE
text	"The attribute [out(shape)] is not yet supported"
action		"None"
explanation	"None"
end

start
code	NIDL_NYSUNIQUE
text	"Attribute [unique] is not yet supported"
action		"None"
explanation	"None"
end

start
code	NIDL_OPCODEATTR
text	"Operation attributes [code] and [nocode] cannot occur together"
explanation	"The <kw>([code]) and <kw>([nocode]) attributes have directly opposite
		meanings.  Do not use both.
"
action		"Remove one of the conflicting attributes.
"
end

start
code	NIDL_OPENREAD
text	"Unable to open %1$s for read access"
explanation	"The IDL compiler is unable to open a file for processing.
"
action		"Make sure the file exists, and that it has the proper access
		protection for the IDL compiler.
"
end

start
code	NIDL_OPENWRITE
text	"Unable to open %1$s for write access"
explanation	"The IDL compiler is unable to create a file.
"
action		"Make sure the directory to contain the file exists,
		and that it has the proper access
		protection for the IDL compiler.
"
end

start
code	NIDL_OPNOTDEF
text	"Operation name %1$s referenced in ACF is not defined"
explanation	"Any operation referenced in an Attribute Configuration File
		(ACF) must be defined in the corresponding IDL file.
"
action		"Check for typographical errors in either file.
"
end

start
code	NIDL_OUTCFMTARR
text	"An [out] conformant array must be a top-level parameter or under a non-[ref] pointer"
explanation	"An array with unspecified lower and/or upper bounds requires
		size information.  If the array is a top-level parameter,
		the size information must be in additional <kw>([in]) parameters.
		If the array is contained within a structure, the size
		information must be in additional fields of the structure,
		and the parameter containing the structure must be <kw>([in]) or
		<kw>([in,out]).  In both cases, the size
		information must be <kw>([in])
		so the server stub knows how much storage to allocate
		for the array.  The exception to this latter case is any <kw>([out])
		conformant array that is pointed to by a full <kw>([ptr]) pointer
		or a <kw>([unique]) pointer
		or that indirectly lies under a <kw>([ptr])
		or <kw>([unique]) pointer.  In this
		case the semantics are that the user-written manager code
		either allocates and/or manages the
		storage for the array and any other data below the <kw>([ptr])
		or <kw>([unique])
		pointer or returns a <kw>(NULL) value for
		the <kw>([ptr]) or <kw>([unique]) pointer.
"
action		"Change the parameter to be <kw>([in,out]), or pass the array as a
		separate <kw>([out]) parameter with <kw>([in]) size information
		parameters, or change the data structure and the code that
		manipulates it so the conformant array is under a
		<kw>([ptr]) or <kw>([unique]) pointer.
"
end

start
code	NIDL_OUTPRMREF
text	"Output parameters must be passed by reference"
explanation	"Parameters with the <kw>([out]) or <kw>([in,out]) attributes must be
		passed by reference, so the changed value of the
		parameter can be reflected back to the caller.
"
action		"Add a <kw>(*) to the parameter declaration to indicate
		pass-by-reference calling mechanism.
"
end

start
code	NIDL_OUTPTRPRM
text	"An [out,ptr] parameter is not valid"
explanation	"The <kw>([ptr]) parameter attribute implies that the value of the
		pointer may be <kw>(NULL).  It is invalid on an <kw>([out]) only
		parameter, since the possible NULL-ness is not shipped
		to the server (for example, in the <kw>([in]) direction).
"
action		"If the pointer cannot be <kw>(NULL)
		remove the <kw>([ptr]) attribute.
		Otherwise, make the parameter an <kw>([in,out,ptr]) parameter.
"
end

start
code	NIDL_OUTUNIQUE
text	"An [out] parameter or operation result cannot contain [unique] pointers"
explanation	"Operation results and parameters that are <kw>([out]) only cannot
		have <kw>([unique]) pointers.  Unique pointers may be <kw>(NULL),
		but there is no way to express the <kw>(NULL) value to the server
		unless the pointer is part of an <kw>([in]) parameter.
"
action		"Change your type declarations so no types contained in
		the parameter have the <kw>([unique]) attribute, or, if the pointer
		is part of a parameter, add the <kw>([in]) attribute to the parameter.
"
end

start
code	NIDL_OPRESPIPE
text	"An operation result cannot be a pipe"
explanation	"Pipes are not allowed as operation results.
"
action		"Change the operation so the <kw>(pipe) is an extra <kw>([out])
		parameter instead of the operation result.
"
end

start
code	NIDL_OUTSTAR
text	"Output parameters require an explicit top-level *"
explanation	"Parameters with the <kw>([out]) or <kw>([in,out]) attributes must be
		passed by reference, so the changed value of the
		parameter can be reflected back to the caller.
		IDL does not allow a <kw>(*) in a type definition to serve as
		a passing mechanism <kw>(*).
"
action		"Change the declaration of the parameter so it
		contains an explicit <kw>(*).
"
end

start
code	NIDL_OUTUNIQPRM
text	"An [out,unique] parameter is not valid"
explanation	"The <kw>([unique]) parameter attribute implies that the value of the
		pointer may be <kw>(NULL).  The <kw>(NULL) value is
		invalid on an <kw>([out]) only
		parameter, since the <kw>(NULL) value was not sent
		to the server as an <kw>([in]) parameter.
"
action		"If the pointer cannot be <kw>(NULL), remove the
		<kw>([unique]) attribute.
		Otherwise, make the parameter an <kw>([in,out,unique]) parameter.
"
end

start
code	NIDL_PIPEBASETYP
text	"The base type of a pipe cannot be a pipe type"
explanation	"A <kw>(pipe) type cannot be used in the definition of
		another <kw>(pipe) type.
"
action		"Remove the invalid declaration, or change it so the
		base type of the <kw>(pipe) is not another <kw>(pipe) type.
"
end

start
code	NIDL_PIPESTRFLD
text	"Pipes are not valid as structure fields"
explanation	"Pipes are not allowed as fields of structures.
"
action		"Pass a <kw>(pipe) as a separate parameter to an operation,
		rather than embedding it as a field of a structure.
"
end

start
code	NIDL_PIPEUNIMEM
text	"Pipes are not valid as members of unions"
explanation	"Pipes are not allowed as members of <kw>(union)s.
"
action		"Pass a <kw>(pipe) as a separate parameter to an operation,
		rather than embedding it as a member of a <kw>(union).
"
end

start
code	NIDL_PIPEXMITAS
text	"A pipe cannot have a [transmit_as] type"
explanation	"A pipe is a specialized object handled by RPC that,
		by itself, is not a transmittable object.
		Thus, a <kw>([transmit_as]) clause is invalid on
		a <kw>(pipe) definition.
"
action		"Remove the <kw>([transmit_as]) attribute.
"
end

start
code	NIDL_PRMBYREF
text	"A parameter with [%1$s] cannot be passed by value"
explanation	"The <v>([attribute-name]) attribute can only be applied
		to a parameter if that parameter has an explicit <kw>(*).
"
action		"Modify the parameter signature to have a top-level <kw>(*).
"
end

start
code	NIDL_PRMINOROUT
text	"A parameter must have either or both the [in] and [out] attributes"
explanation	"The direction of a parameter must be declared.  The
		<kw>([in]) attribute tells IDL that the parameter is passed from
		client to server.  The
		<kw>([out]) attribute tells IDL that the parameter is passed from
		server to client.
"
action		"Add the <kw>([in]), <kw>([out]), or <kw>([in,out]) attribute
		to the parameter.
"
end

start
code	NIDL_PRMLINEATTR
text	"Parameter attributes [in_line] and [out_of_line] cannot occur together"
action		"None"
explanation	"None"
end

start
code	NIDL_PRMNOTDEF
text	"Parameter name %1$s referenced in ACF operation %2$s is not defined"
explanation	"Any parameter referenced within an operation declaration in an
		Attribute Configuration File (ACF) must be defined in the
		corresponding operation definition in the IDL file.
"
action		"Check for typographical errors in either file.
"
end

start
code	NIDL_PTRATTRHAN
text	"The attribute [ptr] is invalid on a binding handle parameter"
explanation	"The first parameter in an operation is a <kw>(handle) parameter,
		either of type <kw>(handle_t) or a type with
		the <kw>([handle]) attribute.
		It cannot have the <kw>([ptr]) attribute, since it
		cannot be <kw>(NULL).
"
action		"Remove the <kw>([ptr]) attribute from the parameter.
"
end

start
code	NIDL_PTRATTRPTR
text	"The attribute [ptr] is valid only for pointer types or array parameter types"
explanation	"The <kw>([ptr]) attribute modifies the default behavior of any
		pointer type or an array parameter data type.
		It is not valid on other data types.
		Note that a <kw>(void *) object is not considered a pointer.
"
action		"There may be a missing <kw>(*) in your declaration.
		If not, remove the <kw>([ptr]) attribute.
"
end

start
code	NIDL_PTRBASETYP
text	"The base type of a pipe cannot be or contain a pointer"
explanation	"IDL does not allow the base type of a <kw>(pipe) to be a pointer
		or any data type that contains pointers.
"
action		"Change your <kw>(pipe) type definition so the base type of
		the <kw>(pipe) is not a pointer and does not contain any pointers.
"
end

start
code	NIDL_PTRCFMTARR
text	"Incorrect syntax for pointer to conformant array"
explanation	"An IDL declaration attempts to use mixed pointer <kw>(*) and
		array <kw>([]) syntax to declare a pointer to an array that has
		bounds that are not fixed.  It is
		ambiguous whether size attributes apply to the pointer or the
		array, thus IDL does not allow mixing pointer and array syntax
		when size attributes are present.
"
action		"If the declaration is a parameter declaration and the
		top-level <kw>(*) is a pointer to an array, that <kw>(*) is
		unnecessary.  This is because arrays are implicitly passed
		by reference, as in C.  Remove the top-level <kw>(*).
		If the declaration is a field of a structure, change the
		declaration to use arrayified pointer syntax.  A field that is
		a pointer to a type and also has a conformant array attribute
		represents a pointer to an array of that type.
		If the declaration is an [out] parameter, see the description
		of the message \"An [out] conformant array must be a top-level
		parameter or under a full pointer.\"
"
end

start
code	NIDL_PTRCTXHAN
text	"Full pointers to context handles are not allowed"
explanation	"IDL does not allow full pointers 
		to context handles.
"
action		"If the declaration has the <kw>([ptr]) attribute, either explicitly
		or by default, change it to a <kw>([ref]) pointer.
		However, if the
		declaration is an operation result, it cannot be a <kw>([ref])
		pointer and an operation resulting in a pointer to a
		context handle is not possible.
"
end

start
code	NIDL_PTRPIPE
text	"The attribute [ptr] is not valid on pipe parameters"
explanation	"IDL does not allow the <kw>([ptr]) attribute
		on <kw>(pipe) parameters.
"
action		"Remove the <kw>([ptr]) attribute from the parameter.
"
end

start
code	NIDL_PTRV1ENUM
text	"Pointers to [v1_enum] types are not allowed"
explanation	"An enumeration type with the <kw>([v1_enum]) attribute follows
		NCS Version 1 NIDL semantics, and does not allow pointers to
		enumerations except as a reference passing mechanism on a
		parameter.
"
action		"If compatibility with NCS Version 1 NIDL is not necessary,
		remove the <kw>([v1_enum]) attribute.
"
end

start
code	NIDL_PTRVARYARR
text	"Pointers to varying arrays are not allowed"
explanation	"An IDL declaration attempts to use mixed pointer <kw>(*) and
		array <kw>([]) syntax to declare a pointer to an array that has
		varying bounds.  Usually, it is
		ambiguous whether size attributes apply to the pointer or the
		array, thus IDL does not allow mixing pointer and array syntax
		when size attributes are present.
"
action		"If the declaration is a parameter declaration and the
		top-level <kw>(*) is a pointer to an array, that <kw>(*) is
		unnecessary.  This is because arrays are implicitly passed
		by reference, as in C.  Remove the top-level <kw>(*).
		If the declaration is more complex,
		investigate alternative ways to achieve
		results, such as using a pointer to a
		structure that has the required information.
"
end

start
code	NIDL_PTRVOIDCTX
text	"void * must be used in conjunction with the [context_handle] attribute"
explanation	"The only valid use of a <kw>(void *) data type in an interface
		definition is on an item with the <kw>([context_handle]) attribute.
"
action		"Change the data type in the declaration, or add the
		<kw>([context_handle]) attribute.
"
end

start
code	NIDL_REFATTRPTR
text	"The attribute [ref] is valid only for pointer types or array parameter types"
explanation	"The <kw>([ref]) attribute modifies the default behavior of any
		pointer type or an array parameter data type.
		It is not valid on other data types.
		Note that a <kw>(void *) object is not considered a pointer.
"
action		"There may be a missing <kw>(*) in your declaration.
		If not, remove the <kw>([ref]) attribute.
"
end

start
code	NIDL_REFFUNRES
text	"A [ref] function result is not valid"
explanation	"Unlike <kw>([out]) parameters, there is never any pre-existing
		storage in the caller for pointer valued function results.
		The pointer always indicates new storage.  This is the
		capability provided by full pointers only, not
		<kw>([ref]) pointers.
"
action		"Remove the <kw>([ref]) attribute from the type definition
		of the data type of the function result.
"
end

start
code	NIDL_RENAMEFAILED
text	"Rename of %1$s to %2$s failed"
explanation	"The call to rename <v>(filename1) to <v>(filename2) returned
		a failing status.
"
action		"Make sure the filenames and paths are valid, you have privilege
		to perform the rename operation, and there is enough free space on the
		destination device.
"
end

start
code	NIDL_REPASNEST
text	"Types with [represent_as] cannot be nested"
explanation	"IDL does not allow a data type that has a <kw>([represent_as]) type
		to itself be used as a <kw>([represent_as]) type in another type
		definition.
"
action		"Do not nest <kw>([represent_as]) types.
"
end

start
code	NIDL_SCOPELVLS
text	"Too many scoping levels"
explanation	"The input source is too complicated to be parsed.  This
		occurs because of deeply
		nested <kw>(struct) or <kw>(union) declarations.
"
action		"Simplify the input source by using <kw>(typedef)s to represent the
		nested <kw>(struct) or <kw>(union) declarations, and
		building the more
		complicated <kw>(struct) or <kw>(union) declarations
		by referencing the
		named types instead of in-line specification of the <kw>(struct)
		or <kw>(union) declaration.
"
end

start
code	NIDL_SIZEARRTYPE
text	"Size attributes can only be applied to array types"
explanation	"Array bound attributes are only valid when used on array types or pointers
		used as an array.
"
action		"Remove the array bound attribute or correct the type to be
		an array.
"
end

start
code	NIDL_SIZECFMTYPE
text	"The attribute [size_is] cannot be applied to dimension %1$lu; upper bound is not dynamic"
explanation	"A <kw>(size_is) variable is only valid for array dimensions that
		have an upper bound that is not fixed.
"
action		"If the array is multidimensional, you may have specified the
		<kw>(size_is) variable for the wrong dimension.  See the
		documentation for the proper syntax.  If the array has only
		one dimension, the <kw>(size_is) clause is invalid, since the
		array's upper data limit is fixed.  You may have meant to use a
		<kw>([length_is]) clause.  See the documentation for the
		distinctions between conformant and varying arrays
		and their attributes.
"
end

start
code	NIDL_SIZEINATTR
text	"A [size_is] parameter must have the [in] attribute"
explanation	"The <kw>([size_is]) attribute specifies a parameter that contains
		size information of a conformant array.  This must be an <kw>([in])
		attribute so the server stub code knows how much
		space to allocate for the array.
"
action		"Change the size parameter referenced by the
		<kw>([size_is]) clause to have the <kw>([in]) attribute.
"
end

start
code	NIDL_SIZEMISMATCH
text	"The size attributes do not match the array dimension"
explanation	"There are too many attribute references for the number of
		dimensions defined for the array.
"
action		"Modify the array bound attribute, specifying one reference
		for each dimension of the array.
"
end

start
code	NIDL_SIZEPRMPTR
text	"The array size attribute variable %1$s cannot have the [ptr] or [unique] attributes"
explanation	"An array size attribute clause in the source IDL specifies
		its value by dereferencing a pointer parameter.
		This is invalid if the pointer variable has either of the
		<kw>([ptr]) or <kw>([unique]) attributes, since both
		allow the pointer
		to be <kw>(NULL).  If the pointer is <kw>(NULL), there is no
		way to determine the size of the array.
"
action		"Either redeclare the size variable as a scalar rather
		than a pointer, or change the size variable to a <kw>([ref])
		pointer.
"
end

start
code	NIDL_SIZETYPEINT
text	"A [size_is] variable must be a small, short, or long integer"
explanation	"The <kw>([size_is]) attribute specifies a field or parameter that contains
		size information of a conformant array.  Array bounds, and
		thus array size,
		must be integers which are not <kw>(hyper).
"
action		"Change the size information field or parameter referenced by the
		<kw>([size_is]) clause to be of integer data type.
"
end

start
code	NIDL_SIZEVARREPAS
text	"A size attribute variable must not have a represent_as type"
explanation	"The parameter or field referenced
		in a <kw>([max_is]),
		<kw>([size_is]), <kw>([first_is]), <kw>([last_is]),
		or <kw>([length_is]) clause must
		not be of a data type that is declared to have a
		<kw>([represent_as]) type.
"
action		"Change either the referenced parameter or field data type,
		or the data type definition itself.
		The parameter or field referenced
		in a <kw>([min_is]), <kw>([max_is]),
		<kw>([size_is]), <kw>([first_is]), <kw>([last_is]),
		or <kw>([length_is]) clause must
		not be of a data type that is declared to have a
		<kw>([represent_as]) type.
		Change either the referenced parameter or field data type,
		or the data type definition itself.
"
end

start
code	NIDL_SIZEVARXMITAS
text	"A size attribute variable must not have a transmit_as type"
explanation	"The parameter or field referenced
		in a <kw>([max_is]),
		<kw>([size_is]), <kw>([first_is]), <kw>([last_is]),
		or <kw>([length_is]) clause must
		not be of a data type that is declared to have a
		<kw>([transmit_as]) type.
"
action		"Change either the referenced parameter or field data type,
		or the data type definition itself.
		The parameter or field referenced
		in a <kw>([min_is]), <kw>([max_is]),
		<kw>([size_is]), <kw>([first_is]), <kw>([last_is]),
		or <kw>([length_is]) clause must
		not be of a data type that is declared to have a
		<kw>([transmit_as]) type.
		Change either the referenced parameter or field data type,
		or the data type definition itself.
"
end

start
code	NIDL_SMALLARRSYN
text	"The attribute [v1_array] must be in array, not pointer, syntax"
explanation	"The <kw>([v1_array]) attribute is for compatibility with
		NCS Version 1 arrays.  NCS Version 1 NIDL did
		not allow pointers to represent arrays.
"
action		"Define the array using array syntax.
"
end

start
code	NIDL_SMALLCFMT
text	"A conformant [v1_array] must also be varying"
explanation	"An array with the <kw>([v1_array]) attribute that has a
		conformant upper bound that is not fixed must also be varying (it must
		have a <kw>([last_is]) or <kw>([length_is]) attribute in
		addition to the <kw>([max_is]) or <kw>([size_is])
		attribute).
"
action		"If compatibility with NCS Version 1 NIDL is not necessary, remove the
		<kw>([v1_array]) attribute.
		Otherwise, add a <kw>([last_is]) or <kw>([length_is])
		attribute to the declaration.
"
end

start
code	NIDL_SMALLINV
text	"The attribute [v1_array] is invalid for an array with more than 65535 elements"
explanation	"An array with the <kw>([v1_array]) attribute is limited to a total
		of 65535 or fewer elements.  The declared array has too many
		elements to be <kw>([v1_array]).
"
action		"Remove the <kw>([v1_array]) attribute from the array declaration.
"
end

start
code	NIDL_SMALLMINFIRST
text	"The attribute [v1_array] cannot occur with the [min_is] or [first_is] attributes"
explanation	"The only valid array attributes for the
		<kw>([v1_array]) attribute are 
		<kw>([max_is]), <kw>([last_is]), and 
		<kw>([length_is]). 
"
action		"If you require compatibility with NCS 
		Version 1 NIDL, the lower bound
		of the array must be fixed; therefore,
		remove the 
		<kw>([first_is]) attribute and change the array declaration.
		Otherwise, remove the <kw>([v1_array]) attribute.
		The only valid array attributes for the
		<kw>([v1_array]) attribute are 
		<kw>([max_is]), <kw>([size_is]), <kw>([last_is]), and 
		<kw>([length_is]). 
		If you require compatibility with NCS 
		Version 1 NIDL, the lower bound
		of the array must be fixed; therefore,
		remove the <kw>([min_is]) or 
		<kw>([first_is]) attribute and change the array declaration.
		Otherwise, remove the <kw>([v1_array]) attribute.
"
end

start
code	NIDL_SMALLMULTID
text	"A [v1_array] can be conformant or varying in first dimension only"
explanation	"An array with the <kw>([v1_array]) attribute is limited to
		a conformant or varying upper data limit
		in the first dimension only.
"
action		"Remove the <kw>([v1_array]) attribute from the array declaration.
"
end

start
code	NIDL_SMALLOPENLB
text	"A [v1_array] cannot have a conformant lower bound"
explanation	"A <kw>([v1_array]) specifies that the array be handled in a
		manner compatible with NCS Version 1 NIDL, which did not
		support non-fixed lower bounds for arrays.
"
action		"If compatibility with NCS Version 1 is required, the array
		must not have a conformant lower bound.  Otherwise, remove
		the <kw>([v1_array]) attribute.
"
end

start
code	NIDL_STRARRAY
text	"Arrays of strings are not allowed"
action		"None"
explanation	"None"
end

start
code	NIDL_STRARRAYV1
text	"The attribute [string] cannot be applied to a [v1_array]"
explanation	"A string that is compatible with the NCS Version 1 NIDL <kw>(string0) data
		type must have the <kw>([v1_array]) and <kw>([v1_string]) attributes.
		The <kw>([string]) attribute only applies
		without the <kw>([v1_array])
		attribute.  A <kw>([v1_array]) is for
		compatibility with NCS Version 1 NIDL.
"
action		"If compatibility with NCS Version 1 NIDL is required,
		place the <kw>([v1_string]) attribute on the declaration.
		Otherwise, remove the <kw>([v1_array]) attribute from the
		array declaration.
"
end

start
code	NIDL_STRCHARBYTE
text	"The attribute [string] is valid only for one-dimensional array of valid base type"
explanation	"The <kw>([string]) attribute flags that an array is a
		string.  Strings must be arrays whose base type is one of the
		following: char, byte, unsigned short, unsigned long,
		or a structure whose fields are all scalar byte fields.
"
action		"Remove the <kw>([string]) attribute, or change the data type
		so it is a valid string.
"
end

start
code	NIDL_STRUCTXMITCFMT
text	"Structures with [transmit_as] or [represent_as] cannot be conformant"
explanation	"IDL does not support a conformant structure with the
		<kw>([transmit_as]) or <kw>([represent_as]) attribute.
"
action		"Either change the declaration so the structure fields are of
		a fixed size and have none of the conformant array attributes
		<kw>([max_is]) or <kw>([size_is]),
		or remove the <kw>([transmit_as]) or <kw>([represent_as]) attribute.
		IDL does not support a conformant structure with the
		<kw>([transmit_as]) or <kw>([represent_as]) attribute.
		Either change the declaration so the structure fields are of
		a fixed size and have none of the conformant array attributes
		<kw>([min_is]), <kw>([max_is]), or <kw>([size_is]),
		or remove the <kw>([transmit_as]) or <kw>([represent_as]) attribute.
"
end

start
code	NIDL_STRUNTERM
text	"Unterminated string literal"
explanation	"There is a missing closing double quote (<kw>(\")) on the string literal.
"
action		"Make sure the the closing quote for the string literal is on
		the same source line as the starting quote.  Also verify that
		any double quote characters internal to the string are
		preceded by the escape character (<literal>(\)).
"
end

start
code	NIDL_STRV1ARRAY
text	"The [v1_string] attribute can only be applied to a [v1_array]"
explanation	"A <kw>([v1_string]) is compatible with
		the NCS Version 1 NIDL <kw>(string0) data
		type.  It can be applied only to an array
		compatible with NCS Version 1. For example,
		an array with the <kw>([v1_array]) attribute.
"
action		"If compatibility with NCS Version 1 NIDL is required,
		place the <kw>([v1_array]) attribute on the array.
		Otherwise, change the <kw>([v1_string]) attribute to <kw>([string]),
		that is a generalization of <kw>([v1_string]).
"
end

start
code	NIDL_STRV1FIXED
text	"A [v1_string] must be an array of char with fixed bounds"
explanation	"A <kw>([v1_string]) is compatible with
		the NCS Version 1 NIDL <kw>(string0) data
		type.  It must be a single dimensioned array of <kw>(char) with
		a zero lower bound and a fixed upper bound.
"
action		"If compatibility with NCS Version 1 NIDL is required,
		change the declaration accordingly.
		Otherwise, see the documentation regarding the <kw>([string])
		attribute.
"
end

start
code	NIDL_STRVARY
text	"A [string] array cannot have varying array attributes"
explanation	"The <kw>([string]) attribute says that the length of a string is
		an intrinsic property of the string itself; for example, C
		strings are zero-terminated.
"
action		"Remove any <kw>([first_is]), <kw>([last_is]),
		or <kw>([length_is]) clauses
		from the string declaration.
"
end

start
code	NIDL_STSATTRONCE
text	"The attribute [%1$s] can occur at most once per operation"
explanation	"A <kw>([comm_status]) or <kw>([fault_status]) parameter or operation
		result is used to return an error code if a certain type of
		error occurs during execution of an operation.  Do not use
		either attribute more than once per operation.
"
action		"Remove the redundant usages of the attribute
		from the interface's Attribute Configuration File (ACF).
"
end

start
code	NIDL_STSPRMOUT
text	"A parameter with [%1$s] must be an [out] parameter"
explanation	"A <kw>([comm_status]) or <kw>([fault_status]) parameter
		is used to return
		an error code if a certain type of error occurs during
		execution of an operation.  Thus, it must be an <kw>([out])
		parameter.
"
action		"Place the <kw>([out]) attribute on the parameter.
"
end

start
code	NIDL_STSRETVAL
text	"An operation with [%1$s] must return a value of type error_status_t"
explanation	"The <kw>([comm_status]) or <kw>([fault_status]) attribute
		on an operation
		signifies that the return value of the operation is used to
		return an error code if a certain type of error occurs during
		execution of an operation.  Thus, the operation must be
		declared to deliver a result of data type <kw>(error_status_t).
"
action		"Declare the operation result to be of data type <kw>(error_status_t).
"
end

start
code	NIDL_STSVARTYPE
text	"A parameter with [%1$s] must be of type error_status_t"
explanation	"A <kw>([comm_status]) or <kw>([fault_status]) parameter
		or function result
		is used to return an error code if a certain type of error
		occurs during execution of an operation.  The data type of the
		variable must be <kw>(error_status_t).
"
action		"Declare the variable to be of data type <kw>(error_status_t).
"
end

start
code	NIDL_SYNTAXERR
text	"Syntax error"
explanation	"The source input is incorrect and no interpretation
		can be made.
"
action		"Examine the source input on and near the source listed
		and correct any errors.
"
end

start
code	NIDL_SYNTAXNEAR
text	"Syntax error near \"%2$.*1$s\""
explanation	"The source input is incorrect and no interpretation
		can be made for <v>(source-text).
"
action		"Examine the source input on and near the source listed
		and correct any errors.
"
end

start
code	NIDL_SYNTAXUUID
text	"Syntax error in UUID format"
explanation	"The UUID specified in the <kw>([uuid]) attribute of an interface
		is not in a valid format.
"
action		"Make sure the UUID is transcribed correctly and
		contains the required punctuation.
"
end

start
code	NIDL_SYSERRMSG
text	"System error message: %1$s"
explanation	"Identifies the cause of the
		previous error.
"
action		"See the system documentation for an explanation
		of the error message.
"
end

start
code	NIDL_TOOMANYELEM
text	"Too many elements in %1$s"
explanation	"The <kw>(enum) <v>(item) contains more than 32767 elements.
"
action		"Reduce the number of elements included in the
		<kw>(enum).
"
end

start
code	NIDL_TOOMANYPORT
text	"Too many endpoint specifications; Maximum is %1$lu"
explanation	"There are more endpoint specifications than IDL can process.
"
action		"Remove some of the endpoint specifications listed
		in the <kw>([endpoint]) attribute.
		Specify at most <v>(number) endpoint specifications for an interface.
"
end

start
code	NIDL_TYPENOTFND
text	"Type name: %1$s not found"
explanation	"The type <v>(name) is not declared at this point in the
		interface declaration.
"
action		"Correct the spelling of <v>(name) if incorrect, and make sure
		that a definition of <v>(name) precedes the reference.
"
end

start
code	NIDL_TYPLINEATTR
text	"Type attributes [in_line] and [out_of_line] cannot occur together"
explanation	"The <kw>([in_line]) and <kw>([out_of_line]) attributes are
		opposite in meaning.
		You can specify at most one of these attributes on a type.
"
action		"Remove one of the conflicting attributes.
"
end

start
code	NIDL_TYPNOTDEF
text	"Type name %1$s referenced in ACF is not defined"
explanation	"The context in which a type name is used in the Attribute
		Configuration File (ACF) requires that the type be defined
		in the corresponding IDL file.
"
action		"See if the referenced type is defined in some other interface.
		If so, the ACF reference belongs in the ACF for that interface.
		Check for typographical errors in both the IDL and ACF files.  Check that
		you have not omitted a type definition in the IDL file.
"
end

start
code	NIDL_UNBALPARENS
text	"Unbalanced parentheses"
explanation	"The number of left parentheses and right parentheses are not equal.
"
action		"Make sure the number of left parentheses equals the number of right
		parentheses and that each parenthesis is in the correct place.
"
end

start
code	NIDL_UNBALBRACKETS
text	"Unbalanced brackets"
explanation	"The number of left brackets and right brackets are not equal.
"
action		"Make sure the number of left brackets equals the number of right
		brackets and that each bracket is in the correct place.
"
end

start
code	NIDL_UNBALBRACES
text	"Unbalanced braces"
explanation	"The number of left braces and right braces are not equal.
"
action		"Make sure the number of left braces equals the number of right
		braces and that each brace is in the correct place.
"
end

start
code	NIDL_UNIDISCTYP
text	"A union discriminator type must be small, short, long, char, boolean, or enum"
explanation	"The discriminator of a <kw>(union), that determines which case of
		the <kw>(union) is used, is restricted to integer, character,
		enumeration, and boolean data types.  Also, <kw>(hyper int)
		discriminators are not allowed.
"
action		"Change the discriminator to one of the valid data types.
		Make sure the data type of the <kw>(constant) values
		in the <kw>(case)
		clauses within the <kw>(union) agree with the discriminator data type.
"
end

start
code	NIDL_UNIQATTRHAN
text	"The attribute [unique] is invalid on a binding handle parameter"
explanation	"The first parameter in an operation is a <kw>(handle) parameter,
		which is either of type <kw>(handle_t) or a type
		with the <kw>([handle]) attribute.
		A binding handle parameter cannot have the <kw>([unique]) 
		attribute because it cannot be <kw>(NULL).
"
action		"Remove the <kw>([unique]) attribute from the parameter.
"
end

start
code	NIDL_UNIQATTRPTR
text	"The attribute [unique] is valid only for pointer types or array parameter types"
explanation	"The <kw>([unique]) attribute modifies the default behavior 
		of any pointer type or an array parameter data type.
		It is not valid on other data types.
		Note that a <kw>(void *) object is not considered a pointer.
"
action		"There may be a missing asterisk (<kw>(*)) in your declaration.
		If not, remove the <kw>([unique]) attribute.
"
end

start
code	NIDL_UNIQCTXHAN
text	"[unique] pointers to context handles are not allowed"
explanation	"IDL does not allow <kw>([unique]) pointers to context handles.
"
action		"If the declaration has the <kw>([unique]) attribute, either
		explicitly or by default, change it to a <kw>([ref]) pointer.
		However, if the
		declaration is an operation result, it cannot be a <kw>([ref])
		pointer and an operation resulting in a pointer to a
		context handle is not valid.
"
end

start
code	NIDL_UNIQFUNRES
text	"A [unique] function result is not valid"
explanation	"Unlike <kw>([out]) parameters, there is never any 
		preexisting storage in the caller for
		pointer-valued function results.
		The pointer always points to new storage.
		This is the
		capability provided only by full pointers, not by
		<kw>([unique]) pointers.
"
action		"Remove the <kw>([unique]) attribute from the type definition
		of the data type for the function result.
"
end

start
code	NIDL_UNKNOWNATTR
text	"Unknown attribute [%1$s]"
explanation	"The attribute specified is not a valid IDL attribute.
"
action		"Check for spelling errors or misplaced syntax.
"
end

start
code	NIDL_USETRANS
text	"Obsolete feature encountered; Use translator"
explanation	"A feature of NCS Version 1 NIDL was encountered that is not supported in
		the IDL compiler.  You may be compiling an NCS Version 1 NIDL source file.
"
action		"If the input is a NCS Version 1 NIDL source file, process it with
		the translator utility (the <kw>(nidl_to_idl) command) that
		converts an NCS Version 1 NIDL source file into the format expected by
		the IDL compiler.  Then compile the translated source file.  Otherwise, remove
		the reference to the obsolete feature.
"
end

start
code	NIDL_UUIDINV
text	"The attribute [uuid] is invalid when the [local] attribute is specified"
explanation	"The <kw>([local]) interface attribute flags that an interface is not
		for RPC use, but is only a local header generation
		mechanism.  The <kw>([uuid]) attribute is only used for
		RPC interfaces.
"
action		"Remove one of the conflicting attributes.
"
end

start
code	NIDL_VARDECLNOSUP
text	"Variable declarations are not supported; declaration of %1$s ignored"
explanation	"IDL does not support the declaration of variables.  The types
		of data that can be declared in IDL are; constants, types, and
		functions.  The declaration of <v>(variable) is not a function
		and is incorrect.
"
action		"If intended as a function declaration,
		correct the declaration so the top-level declaration
		is a function. Otherwise, remove the declaration.
"
end

start
code	NIDL_VOIDOPPTR
text	"void is valid only in an operation or a context handle pointer declaration"
explanation	"The <kw>(void) keyword is only valid as the return value of an
		operation, or as part of a <kw>(void *) declaration.  Note also
		that in RPC interfaces, <kw>(void *) is only valid if the
		<kw>([context_handle]) attribute is also specified on the data item.
"
action		"There may be a missing <kw>(*) in your declaration.
		If not, change the <kw>(void) reference to some valid data type.
"
end

start
code	NIDL_XMITASREP
text	"A type used in a [transmit_as] clause cannot have a [represent_as] type"
explanation	"The type used in a <kw>([transmit_as]) clause specifies an alternative
		type that a base IDL type is translated to or from and before or after
		transmission over the network.
		The type used in a <kw>([represent_as]) clause is an
		alternative type that a base IDL type is translated from or to at
		the application code-to-stub code interface.
		Going from base IDL type to transmittable type and then to
		a <kw>([represent_as]) type (that may not be transmittable) is
		invalid.
"
action		"You may have meant to put a <kw>([represent_as]) clause on the base IDL
		type, not its transmittable type.
"
end

start
code	NIDL_XMITCFMTARR
text	"A [transmit_as] or [represent_as] type cannot be a conformant array"
explanation	"A type specified in a <kw>([transmit_as]) clause or a type with
		the <kw>([transmit_as]) or <kw>([represent_as]) attribute cannot be a
		conformant array, since there is nowhere to attach the size
		information attribute that is needed to transmit the data.
"
action		"Define a structure that contains a conformant array and
		a size information field instead of using a conformant array
		directly.
"
end

start
code	NIDL_XMITPIPEBASE
text	"The base type of a pipe cannot be a [transmit_as] type"
explanation	"IDL does not allow the base type of
		a <kw>(pipe) to have the <kw>([transmit_as]) attribute.
"
action		"Declare the base type of the <kw>(pipe) to be the data type
		in the <kw>([transmit_as]) clause.
"
end

start
code	NIDL_XMITPTR
text	"A translated transmittable type cannot contain [%1$s] pointers"
explanation	"A transmittable type that is derived by calling a translation
		routine, for example, a <kw>(from_local) translation
		of a <kw>([represent_as])
		type or a <kw>(to_xmit) translation of a <kw>([transmit_as]) type,
		cannot contain pointers of the indicated type.
"
action		"Define a transmittable type that does not contain invalid pointers.
		If using <kw>([represent_as]), reconsider using it.
"
end

start
code	NIDL_XMITTYPEATTRS
text	"A type with [transmit_as] cannot have other type attributes"
explanation	"A data type with the <kw>([transmit_as]) attribute
		(the presented type) has an
		associated transmittable type, and you must write routines
		to convert the presented type to or from the transmittable type.
		Only the transmittable type is relevant to the RPC mechanism,
		thus it is incorrect for the presented type
		to have additional RPC-specific attributes.
"
action		"Remove any type attributes other than <kw>([transmit_as]).
"
end

start
code	NIDL_BUGNOBUG
text	"Command option -bug %1$lu conflicts with -no_bug %2$lu"
explanation	"The command line options conflict with each other.
"
action		"Remove one of the conflicting options.
"
end

start
code	NIDL_CONFLICTOPT
text	"Command option %1$s conflicts with %2$s"
explanation	"The command line options conflict with each other.
"
action		"Remove one of the conflicting options.
"
end

start
code	NIDL_COMMENTEOF
text	"Unterminated comment, end-of-file encountered"
explanation	"During the processing of a multiline comment,
		the end of the source
		file was reached before the termination characters for
		the comment.
"
action		"Make sure that all multiline comments are correctly terminated.
"
end

start
code	NIDL_COMPABORT
text	"Compilation aborted"
explanation	"Previous errors caused the compilation to abort.
"
action		"Correct the errors and recompile.
"
end

start
code	NIDL_INTERNAL_ERROR
text	"Internal IDL compiler error: Module %1$s, Line %2$lu"
explanation	"An internal IDL compiler error was found.
"
action		"Submit a Software Performance Report and notify
		your software support representative so the appropriate
		action can be taken.
"
end

start
code	NIDL_INVBUG
text	"Command option -bug %1$lu is not known"
explanation	"The documentation defines all the valid integers that can
		accompany the <kw>(-bug) and <kw>(-no_bug) options.  You have chosen
		an invalid value.
"
action		"See the documentation for the correct number.
"
end

start
code	NIDL_INVNOBUG
text	"Command option -no_bug %1$lu is not known"
explanation	"The documentation defines all the valid integers that can
		accompany the <kw>(-bug) and <kw>(-no_bug) options.  You have chosen
		an invalid value.
"
action		"See the documentation for the correct number.
"
end

start
code	NIDL_MAXWARN
text	"Reached maximum of %1$lu warnings; exiting"
explanation	"The IDL compiler has a predefined maximum number of warnings
		it produces before aborting the compilation.  This feature
		suppresses what may be the same warning
		over and over.
"
action		"Fix the warnings you get, or recompile the IDL file or
		specify the <kw>(-no_warn) option.
"
end

start
code	NIDL_OPTNOVAL
text	"Command option %1$s does not take a value"
explanation	"You specified a value with a command line option that
		does not take a value.
"
action		"If the value is meant to be the source file, it must
		be separated from the command option with a space.
"
end

start
code	NIDL_OUTOFMEM
text	"Out of memory"
explanation	"The system-defined limit of memory available to the compiler was exceeded.
"
action		"Either have the system-defined limit of memory raised, or
		simplify the source file being compiled by breaking it into multiple modules or
		eliminating unnecessary imports.
"
end

start
code	NIDL_SRCFILELEN
text	"Length of source filename and stub suffix exceed 8 chars"
action		"None"
explanation	"None"
end

start
code	NIDL_SRCFILEREQ
text	"A source IDL filename is required"
explanation	"The command line does not contain a source IDL file to compile.
"
action		"You must specify a source IDL file.  You may have erroneously
		specified the source IDL file when
		actually you gave a value to a command option.
"
end

start
code	NIDL_UNKFLAG
text	"Unknown command line option: %1$s"
explanation	"You entered an invalid command line option.
"
action		"Check the command line for typographical errors.
		See the documentation for proper command line syntax.
"
end

start
code	NIDL_NOPORTNEU
text	"Warning: Use of a nonencapsulated union requires %1$s"
explanation	"A nonencapsulated union is not portable to all implementations of DCE V1.0.
"
action		"Use an encapsulated union instead or specify the extended standard
		option on the compiler command.
"
end

start
code	NIDL_NOPORTUNIQUE
text	"Warning: Use of [unique] pointers requires %1$s"
explanation	"A <kw>([unique]) pointer is not portable to all implementations of DCE V1.0.
"
action		"Use a <kw>([ref]) or <kw>([ptr]) pointer instead or specify the extended standard
		option on the compiler command.
"
end

start
code	NIDL_DISCRIMIN
text	"An [in] or [in,out] union must have an [in] discriminator"
explanation	"A nonencapsulated union parameter that has the <kw>([in])
		attribute must have a discriminator, specified in a
		<kw>([switch_is]) clause, that also has the <kw>([in])
		attribute, since the client stub code must know which member
		of the union to send to the server.
"
action		"Modify the parameter referenced in the <kw>([switch_is]) clause
		to have the <kw>([in]) attribute.
"
end

start
code	NIDL_DISCRIMOUT
text	"An [in,out] or [out] union must have an [out] discriminator"
explanation	"A nonencapsulated union parameter that has the <kw>([out])
		attribute must have a discriminator, specified in a
		<kw>([switch_is]) clause, that also has the <kw>([out])
		attribute, since the server stub code must know which member
		of the union to send to the client.
"
action		"Modify the parameter referenced in the <kw>([switch_is]) clause
		to have the <kw>([out]) attribute.
"
end

start
code	NIDL_DISCRIMREPAS
text	"A [switch_is] variable must not have a [represent_as] type"
explanation	"The parameter or field referenced in a <kw>([switch_is]) clause
		must not be of a data type that has been declared to have a
		<kw>([represent_as]) type.
"
action		"Change the referenced parameter or field data type,
		or the data type definition itself.
"
end

start
code	NIDL_DISCRIMXMITAS
text	"A [switch_is] variable must not have a [transmit_as] type"
explanation	"The parameter or field referenced in a <kw>([switch_is]) clause
		must not be of a data type that has been declared to have a
		<kw>([transmit_as]) type.
"
action		"Change the referenced parameter or field data type,
		or the data type definition itself.
"
end

start
code	NIDL_EUMEMATTR
text	"An encapsulated union member cannot have the [%1$s] attribute"
explanation	"The attribute used is valid only on nonencapsulated unions,
		but was used on an encapsulated union.
"
action		"Remove the attribute.  Consult the documentation for the
		differences between encapsulated and nonencapsulated unions.
"
end

start
code	NIDL_NEUARRAY
text	"Arrays of nonencapsulated unions are not allowed"
explanation	"IDL does not allow arrays of nonencapsulated unions since there
		is no way to apply a different discriminator to each element.
"
action		"Use an array of encapsulated unions.
"
end

start
code	NIDL_NEUREPAS
text	"A [represent_as] type cannot be a nonencapsulated union"
explanation	"A type referenced in a <kw>([represent_as]) clause cannot be a
		nonencapsulated union, since there is no defined way to
		communicate the union discriminator to/from <kw>([represent_as])
		data translation routines.
"
action		"Use an encapsulated union for the local representation type.
"
end

start
code	NIDL_NEUREPTYPE
text	"A nonencapsulated union cannot have a [represent_as] type"
explanation	"A nonencapsulated union type cannot be defined to have a
		local representation type, since there is no defined way to
		communicate the union discriminator to/from <kw>([represent_as])
		data translation routines.
"
action		"Use an encapsulated union, or reconsider the need for a
		different local representation type for the union.
"
end

start
code	NIDL_NEUSWATTR
text	"A nonencapsulated union declaration must have a [switch_is] attribute"
explanation	"A <kw>([switch_is]) attribute is required on an instance of a
		nonencapsulated union type to identify the union discriminator
		variable.
"
action		"Provide a <kw>([switch_is]) clause that specifies a field or
		parameter that is the union discriminator, or use an
		encapsulated union, where the union discriminator variable is
		encapsulated as a field within the union type.
"
end

start
code	NIDL_NEUSWPTR
text	"The union switch variable %1$s cannot be a [ptr] or [unique] pointer"
explanation	"A <kw>([switch_is]) attribute clause in the source IDL specifies
		its value by dereferencing a pointer field or parameter.
		This is invalid if the pointer variable has either of the
		<kw>([ptr]) or <kw>([unique]) attributes, since both allow the
		pointer to be <kw>(NULL).  If the pointer were <kw>(NULL), there
		would be no way to determine the union discriminator.
"
action		"Either redeclare the <kw>([switch_is]) variable to be a scalar
		rather than a pointer, or change the <kw>([switch_is]) variable
		to be a <kw>([ref]) pointer.
"
end

start
code	NIDL_NEUSWTYPE
text	"A nonencapsulated union type must have a [switch_type] attribute"
explanation	"A <kw>([switch_type]) attribute is required on a definition of a
		nonencapsulated union type to identify the data type of the
		union discriminator.
"
action		"Provide a <kw>([switch_type]) clause that specifies a valid
		union discriminator data type.
"
end

start
code	NIDL_NEUXMITAS
text	"A [transmit_as] type cannot be a nonencapsulated union"
explanation	"A type referenced in a <kw>([transmit_as]) clause cannot be a
		nonencapsulated union, since there is no defined way to
		communicate the union discriminator to/from <kw>([transmit_as])
		data translation routines.
"
action		"Use an encapsulated union for the transmissible type.
"
end

start
code	NIDL_NEUXMITYPE
text	"A nonencapsulated union cannot have a [transmit_as] type"
explanation	"A nonencapsulated union type cannot be defined to have a
		transmissible type, since there is no defined way to
		communicate the union discriminator to/from <kw>([transmit_as])
		data translation routines.
"
action		"Use an encapsulated union, or reconsider the need for a
		different transmissible type for the union.
"
end

start
code	NIDL_PTRNEUNION
text	"Cannot have more than one level of indirection to a nonencapsulated union"
explanation	"IDL allows only a single level of pointer to a nonencapsulated
		union type.
"
action		"Remove the extra levels of indirection, or use an encapsulated
		union type instead.
"
end

start
code	NIDL_SWATTRNEU
text	"A [switch_is] attribute is only valid on a nonencapsulated union"
explanation	"A <kw>([switch_is]) attribute is used on a union type to
		identify the union discriminator variable.  It is not valid
		on a non-union type.  It is also not valid on an encapsulated
		union type, where the union discriminator variable is
		encapsulated as a field within the union type.
"
action		"Use the <kw>([switch_is]) attribute only on instances of
		nonencapsulated union types.
"
end

start
code	NIDL_SWDATATYPE
text	"Data type of [switch_is] variable %1$s does not agree with [switch_type] %2$s"
explanation	"The data type of the variable referenced in the <kw>([switch_is])
		clause must be the same as the data type referenced in the
		<kw>([switch_type]) clause of the item's type definition.
"
action		"Make sure that all instances of a type that has the
		<kw>([switch_type]) attribute have a <kw>([switch_is]) clause
		whose data type agrees with the <kw>([switch_type]).
"
end

start
code	NIDL_SWTYPENEU
text	"A [switch_type] attribute is only valid on a nonencapsulated union type"
explanation	"A <kw>([switch_type]) attribute is used on a union type to
		identify the union discriminator type.  It is not valid
		on a non-union type.  It is also not valid on an encapsulated
		union type, where the union discriminator type and variable
		must be specified in a <kw>(switch) clause.
"
action		"Use the <kw>([switch_type]) attribute only on definitions of
		nonencapsulated union types.
"
end

start
code	NIDL_FLDXMITCFMT
text	"A structure field cannot be of a presented type for which the transmitted type is conformant"
explanation	"IDL does not allow a structure field whose type has a
		<kw>([transmit_as]) attribute where the transmissible type
		is conformant.
"
action		"Use a valid IDL construct.
"
end

start
code	NIDL_TYPEREPCFMT
text	"A type with the [represent_as] attribute cannot be conformant"
explanation	"IDL does not allow a conformant network type to have a local
		represented type.
"
action		"Use a valid IDL construct.
"
end

start
code	NIDL_ARMUNIQUEPTR
text	"An arm of a union cannot be or contain a [unique] pointer"
explanation	"IDL-generated server stub code must allocate storage for
		objects pointed to by <kw>([unique]) pointers.  IDL does not allow
		a <kw>([unique]) pointer within a <kw>(union) because the valid
		arm of the <kw>(union), and therefore the
		object for which storage is allocated, is not
		known at compile time.
"
action		"Change the pointer within the <kw>(union) declaration to a full pointer.
"
end

start
code	NIDL_LANGCFMTSTRCT
text	"Warning: Conformant structures not supported in target language"
explanation	"An IDL conformant structure does not have a source
		representation in the target language selected.
"
action		"The IDL conformant array will be declared as a one-element array
		in the generated language header file.  Your application code
		might be able to use the address of this array to access other
		array elements, depending on the target language.
		Alternatives are to write application code that uses the
		construct in another programming language, or to change the IDL
		source to use a construct that is supported by the target
		language.
"
end

start
code	NIDL_LANGCFMTSTRNG
text	"Warning: Conformant strings not supported in target language"
explanation	"An IDL conformant string does not have a source
		representation in the target language selected.
"
action		"The IDL conformant array will be declared as a one-element array
		in the generated language header file.  Your application code
		might be able to use the address of this array to access other
		array elements, depending on the target language.
		Alternatives are to write application code that uses the
		construct in another programming language, or to change the IDL
		source to use a construct that is supported by the target
		language.
"
end

start
code	NIDL_LANGMAPCHAR
text	"Warning: Character doesn't map to target language"
explanation	"A character in an IDL character or string constant does not
		have a source representation in the target language selected.
"
action		"The character will be translated to a '?' in the generated
		language header file.  Edit the file manually as necessary.
"
end

start
code	NIDL_LANGPIPESNS
text	"Warning: Pipes not supported for target language"
explanation	"The data structures necessary to manage IDL pipes do not
		have a source representation in the target language selected.
"
action		"Pipe objects will have no corresponding definition in the
		generated language header file.  Application code for operations
		with pipes should be written in another programming language.
"
end

start
code	NIDL_LANGUNSFNRS
text	"Warning: Non-scalar function result converted to trailing [out] parameter"
explanation	"The target language selected does not allow the function result
		argument of a routine to be a non-scalar type.  The IDL compiler
		converts such a construct to a trailing <kw>([out]) parameter.
"
action		"No action is required.  You might want to edit your IDL source
		and change the declaration from a function result to an <kw>([out])
		parameter in order to map naturally to the target language.
"
end

start
code	NIDL_LANGMAXDIM
text	"Target language supports maximum of %1$lu array dimensions"
explanation	"The target language selected does not support arrays with more
		than the indicated number of dimensions.
"
action		"Such arrays will have no corresponding declaration in the
		generated language header file.  Application code using such
		arrays should be written in another programming language.
"
end

start
code	NIDL_LANGMIXCASE
text	"Warning: Name %1$s differs from a previous name only in case"
explanation	"The target language selected is not case-sensitive with respect
		to identifiers; that is, any two identifiers that differ only in
		case are considered to be identical.  The IDL source contains
		two distinct identifiers that differ only in case, but they
		conflict with eachother in the generated language header file.
"
action		"Edit the IDL source code to remove the conflict.
"
end

start
code	NIDL_LANGATTRNS
text	"Warning: Attribute [%1$s] not supported for target language"
explanation	"IDL does not support the indicated attribute for the
		target language selected.
"
action		"In some cases the attribute can be removed.  For example,
		the <kw>(v1_) attributes are only necessary if interoperation
		with NCS Version 1 is required.
"
end

start
code	NIDL_ARRFUNRES
text	"Array function results are not allowed"
explanation	"Because array function results are not supported in the C
		languages, they are not allowed in IDL.
"
action		"Return the required array as an <v>([out]) parameter.
"
end

start
code	NIDL_ATTRPTRVOID
text	"Attribute [%1$s] cannot be applied to a void * type"
explanation	"The indicated attribute is not valid on a <kw>(void *) type.
		The only attribute that is meaningful on a <kw>(void *) type
		is <v>([context_handle]).
"
action		"Edit the IDL source code to remove the conflict.
"
end

start
code	NIDL_HANATTRTRAN
text	"The [handle] attribute is valid only on transmittable types"
explanation	"The <v>([handle]) attribute was used on a type that is not
		transmittable, such as <v>(handle_t).  Types with <v>([handle])
		are sent from client to server and must have a concrete
		definition so that they are transmittable.
"
action		"Remove the <v>([handle]) attribute or change the base type to
		which it is applied.
"
end

start
code	NIDL_FWDTAGREF
text	"Warning: Forward tag reference %1$s in this declaration is not ANSI C compliant"
explanation	"A tag reference, such as <kw>(struct tagname), was used before
		the actual definition of the tag.  Such references are not
		ANSI C compliant when used in certain scopes, such as in a
		parameter declaration.  Thus the C source modules generated by
		the IDL compiler might not compile successfuly.
"
action		"Define the type that is referenced by tag name before
		referencing it in a parameter declaration.
"
end

start
code	NIDL_ATTRUSEMULT
text	"Attribute cannot be used more than once"
explanation	"An attribute is repeated multiple times in an attribute list.
"
action		"Remove all but one occurrence of the offending attribute.
"
end

start
code	NIDL_TYPEATTRUSE
text	"Type with [%1$s] cannot be used in definition of type with [%2$s]"
explanation	"IDL restricts the use of the two attributes such that the base
		type of a type that has the first attribute must not contain
		the second attribute in its definition.
"
action		"Refer to the IDL documentation on the two attributes for more
		information.
"
end

start
code	NIDL_NOPORTNZLB
text	"Warning: Use of nonzero array lower bound requires %1$s"
explanation	"A nonzero array lower bound is not portable to all
		implementations of DCE V1.0.
"
action		"Use an array with lower bound zero instead or specify the
		extended standard option on the compiler command.
"
end

start
code	NIDL_NOPORTCFMT
text	"Warning: Use of conformant minor array dimension requires %1$s"
explanation	"An array that is conformant in a minor dimension, i.e. other than
		the first dimension, is not portable to all
		implementations of DCE V1.0.
"
action		"Use an array that is conformant in only the first dimension,
		or specify the extended standard option on the compiler command.
"
end

start
code	NIDL_NOPORTVARY
text	"Warning: Use of varying minor array dimension requires %1$s"
explanation	"An array that is varying in a minor dimension, i.e. other than
		the first dimension, is not portable to all
		implementations of DCE V1.0.
"
action		"Use an array that is varying in only the first dimension,
		or specify the extended standard option on the compiler command.
"
end

start
code	NIDL_ENCNOPARAMS
text	"Operation with [encode] must have at least one [in] or [in,out] parameter"
explanation	"The client stub for an operation with the <kw>([encode]) ACF
		attribute encodes the operation's <kw>([in]) and <kw>([in,out])
		parameters into a data stream.  The <kw>([encode]) attribute
		is not meaningful on an operation with only <kw>([out])
		parameters (excluding the binding handle parameter).
"
action		"Perhaps you meant to use the <kw>([decode]) attribute on the
		operation.  If not, either remove the <kw>([encode]) attribute
		or add the <kw>([in]) attribute to one or more parameters.
"
end

start
code	NIDL_DECNOPARAMS
text	"Operation with [decode] must have at least one [out] or [in,out] parameter"
explanation	"The client stub for an operation with the <kw>([decode]) ACF
		attribute decodes a data stream into the operation's <kw>([out])
		and <kw>([in,out]) parameters.  The <kw>([decode]) attribute
		is not meaningful on an operation with only <kw>([in])
		parameters.
"
action		"Perhaps you meant to use the <kw>([encode]) attribute on the
		operation.  If not, either remove the <kw>([decode]) attribute
		or add the <kw>([out]) attribute to one or more parameters.
"
end

start
code	NIDL_OPREFDELIN
text	"Warning: Operation with [reflect_deletions] has no [in] or [in,out] full pointers"
explanation	"Reflection of node deletions from server to client is only
		applicable to operations that have <kw>([in]) or <kw>([in,out])
		full (<kw>([ptr])) pointers.  The <kw>([reflect_deletions])
		attribute thus has no effect on the indicated operation.
"
action		"Remove the <kw>([reflect_deletions]) attribute from the
		operation to avoid this warning message.
"
end

start
code	NIDL_ENCOUTONLY
text	"Warning: Operation with [encode] has [out]-only parameter %1$s"
explanation	"The client stub for an operation with the <kw>([encode])
		attribute encodes all of the operation parameters with the
		<kw>([in]) attribute.  Parameters with only the <kw>([out])
		attribute are ignored.
"
action		"If any client will decode the encoded information by
		applying the <kw>([decode]) attribute to the operation, the
		operation must contain all <kw>([in,out]) parameters except for
		the binding handle parameter.
"
end

start
code	NIDL_DECINONLY
text	"Warning: Operation with [decode] has [in]-only parameter %1$s"
explanation	"The client stub for an operation with the <kw>([decode])
		attribute decodes encoded data into operation parameters with the
		<kw>([out]) attribute.  Parameters with only the <kw>([in])
		attribute are ignored.
"
action		"If any client will encode the data by
		applying the <kw>([encode]) attribute to the operation, the
		operation must contain all <kw>([in,out]) parameters except for
		the binding handle parameter.
"
end

start
code	NIDL_ENCDECDIR
text	"Operation with [encode,decode] must have all [in,out] parameters"
explanation	"The client stub for an operation with the <kw>([encode,decode])
		attributes can encode the operation's parameters into a data
		stream and subsequently decode the data back into parameters.
		This only makes sense if the decoded data, i.e. the <kw>([out]
		parameters, agrees with the originally encoded <kw>([in])
		parameters.
"
action		"The operation must contain all <kw>([in,out]) parameters except
		for the binding handle parameter.
"
end

start
code	NIDL_ENCDECPIPE
text	"Operation with [encode] or [decode] may not contain pipe parameters"
explanation	"The IDL encoding services do not support pipes.
"
action		"Use arrays to represent the data, or utilize multiple
		procedure calls to encode or decode the data.
"
end

start
code	NIDL_ENCDECBIND
text	"Operation with [encode] or [decode] must use explicit binding"
explanation	"An operation with either of the <kw>([encode]) or <kw>([decode])
		attributes may not use automatic, customized, or implicit
		binding.
"
action		"Edit the IDL operation definition to have an item of type
		<v>(handle_t) as its first argument, or edit the ACF operation
		declaration to include the <kw>([explicit_handle]) attribute.
"
end

start
code	NIDL_EXCNOTDEF
text	"Exception name %1$s referenced in ACF is not defined"
explanation	"An exception name is referenced in an Attribute Configuration
		File (ACF) but is not defined in the corresponding IDL file.
		Exceptions are not imported, so in order to reference an
		exception name in the ACF for a particular interface it must
		be defined in the IDL file for that same interface.
"
action		"Check for typographical errors in both the IDL and ACF files.
		If necessary, add the exception name to the source IDL file
		using the [exceptions] interface attribute, or move the ACF
		reference to the ACF file corresponding to the interface in which
		the exception name is defined.
"
end

start
code	NIDL_INVFILESPEC
text	"Invalid file specification: %1$s"
explanation	"An invalid file specification was given.
"
action		"Check the files names specified on the command line for
		proper syntax.
"
end

start
code	NIDL_FILESPECREQ
text	"File specification required for %1$s"
explanation	"The indicated IDL command option requires a file specification.
"
action		"Supply a file specification following the option.
"
end

start
code	NIDL_OPNOTAGS
text	"Warning: Operation with [cs_tag_rtn] contains no codeset tag parameters"
explanation	"The <kw>([cs_tag_rtn]) attribute normally appears on an
		operation only if it has least one parameter with a
		<kw>([cs_stag]), <kw>([cs_drtag]), or <kw>([cs_rtag]) attribute.
"
action		"Make sure the ACF declaration for the operation has one or more
		of the above tags applied to parameter(s) in the operation.
"
end

start
code	NIDL_TYPENEST
text	"Types with the [%1$s] attribute cannot be nested"
explanation	"A type with the indicated attribute cannot include
		another type with the same attribute.
"
action		"Do not nest types with the attribute.
"
end

start
code	NIDL_DUPPRMATTR
text	"The [%1$s] attribute cannot be duplicated in the same parameter list"
explanation	"The named attribute cannot be applied twice in the same
		parameter list.
"
action		"Make sure that only one parameter in the operation's parameter
		list has the attribute applied to it.  The attribute is
		specified either in the source IDL or source ACF file.
"
end

start
code	NIDL_OPINCSCHAR
text	"Operation with [in] [cs_char] data requires [cs_stag] parameter"
explanation	"If any <kw>([in]) parameter, or part of an <kw>([in]) parameter,
		has a <kw>([cs_char]) type, there must be a parameter in the
		same operation to which <kw>([cs_stag]) is applied.
"
action		"Make sure the ACF declaration for the operation has the
		<kw>([cs_stag]) attribute applied to one of the parameters in
		the operation.
"
end

start
code	NIDL_OPOUTCSCHAR
text	"Operation with [out] [cs_char] data requires [cs_rtag] parameter"
explanation	"If any <kw>([out]) parameter, or part of an <kw>([out]) parameter,
		has a <kw>([cs_char]) type, there must be a parameter in the
		same operation to which <kw>([cs_rtag]) is applied.
"
action		"Make sure the ACF declaration for the operation has the
		<kw>([cs_rtag]) attribute applied to one of the parameters in
		the operation.
"
end

start
code	NIDL_ARRATTRSHR
text	"Array attribute variable cannot be used for both [cs_char] and non-[cs_char] arrays"
explanation	"In a structure or parameter list, any variable which specifies
		the <kw>([size_is]) or <kw>([length_is]) for a <kw>([cs_char])
		array must not be referenced in any attribute of a
		non-<kw>([cs_char]) array.
"
action		"Use separate structure fields or operation parameters to
		specify array attributes for the non-<kw>([cs_char]) array.
"
end

start
code	NIDL_ATTROUTCFMTCS
text	"An [in,size_is] parameter for an [out,cs_char] array cannot be used for other array attributes"
action		"None"
explanation	"None"
end

start
code	NIDL_CSARRSYN
text	"A [size_is] or [max_is] attribute cannot be applied to a pointer to a [cs_char] type"
explanation	"The <kw>([cs_char]) ACF attribute cannot be applied to a type
		which is the target of a pointer with the <kw>([size_is]) or
		<kw>([max_is]) attribute.
"
action		"Use an array of <kw>([cs_char]) instead of pointer to array
		of <kw>([cs_char]), or use a pointer to a structure which
		contains a conformant array of <kw>([cs_char]).
"
end

start
code	NIDL_ARRPTRUNIQ
text	"An array with [%1$s] base type cannot have the [ptr] or [unique] attributes"
explanation	"If an array parameter has a base type with the indicated
		attribute, it cannot have <kw>([ptr]) or <kw>([unique]) as
		parameter attributes.
"
action		"Remove the <kw>([ptr]) or <kw>([unique]) attribute.  This
		implies that the parameter cannot have the value NULL, i.e.
		it must always point to valid array storage.
"
end

start
code	NIDL_XMITCTYPE
text	"A [transmit_as] transmitted type cannot contain a [%1$s] type"
explanation	"The indicated attribute cannot be applied to any type
		which is used as the transmitted type used in a
		<kw>([transmit_as]) attribute or any type which is
		used in the definition of the transmitted type used in a
		<kw>([transmit_as]) attribute.
"
action		"Do not use the attribute on the transmitted type specified in the
		<v>([transmit_as(transmitted_type)]) attribute or any other type
		that is contained within that transmitted type.
"
end

start
code	NIDL_TAGBEFDATA
text	"A [cs_stag] parameter must precede any [in] [cs_char] data in a parameter list"
explanation	"A <kw>([cs_stag]) parameter must occur in an operation's
		parameter list before any [in] parameters containing types
		with the [cs_char] ACF attribute.
"
action		"Re-order the parameters to meet this requirement.
"
end

start
code	NIDL_TAGAFTDATA
text	"A [cs_rtag] parameter must precede any [out] [cs_char] data in a parameter list"
explanation	"A <kw>([cs_rtag]) parameter must occur in an operation's
		parameter list before any [out] parameters containing types
		with the [cs_char] ACF attribute.
"
action		"Re-order the parameters to meet this requirement.
"
end

start
code	NIDL_HANCTYPE
text	"A [handle] binding parameter cannot contain a [%1$s] type"
explanation	"A customized binding handle (a type with the <kw>([handle])
		attribute used as the first parameter in an operation) cannot
		include types with the indicated attribute.
"
action		"Do not use the indicated attribute with customized binding.
"
end

start
code	NIDL_PIPECTYPE
text	"The base type of a pipe cannot be or contain a [%1$s] type"
explanation	"The indicated attribute cannot be applied to the base type of a
		pipe, or a type used in constructing the base type of a pipe.
"
action		"Do not use the indicated attribute with pipes.
"
end

start
code	NIDL_ARRMULTID
text	"Arrays of [%1$s] type cannot be multidimensional"
explanation	"The indicated attribute cannot be applied to a type if there
		is an array which has this type as base type and the array has
		more than one dimension.
"
action		"Specify a different base type for the array which has more than
		one dimension.
"
end

start
code	NIDL_ARRTYPATTR
text	"Arrays of [%1$s] type can only use the [size_is] and [length_is] array attributes"
explanation	"The indicated attribute cannot be applied to a type if there
		is an array which has this type as base type and any of the
		attributes <kw>([min_is]), <kw>([max_is]), <kw>([first_is]),
		<kw>([last_is]), or <kw>([string]) has been applied to the array.
"
action		"Use only the <kw>([size_is]) and/or <kw>([length_is])
		attributes in relevant array declarations, or
		specify a different base type for the array that has
		the indicated attribute.
"
end

start
code	NIDL_TYPECTYPE
text	"Type with [%1$s] cannot be or contain type with [%2$s]"
explanation	"A type with the first attribute cannot also have the second
		attribute, nor can it contain any type which has the second
		attribute.
"
action		"The two features cannot interact on a single type.
		Consider alternate ways to achieve the desired result.
"
end

start
code	NIDL_TYPEOFBYTES
text	"Type with [%1$s] must resolve to byte or structure containing only byte fields"
explanation	"A type with the indicated attribute must be defined as an IDL
		type that resolves to byte or to a structure type in which all
		of the fields have types which resolve to byte.
"
action		"Change the type definition, or remove the attribute if it is
		not needed.
"
end

start
code	NIDL_TAGPRMTYPE
text	"Tag parameters must have type unsigned long int passed by value or reference"
explanation	"Parameters to which tag attributes (<kw>([cs_stag]),
		<kw>([cs_drtag]), or <kw>([cs_rtag])) are attached must be
		either <v>(unsigned long) integer values or <v>(unsigned long)
		integers passed by reference.
"
action		"Change the parameter types as required.
"
end

start
code	NIDL_MAXIDTYPE
text	"Maximum identifier length for [%1$s] type is %2$lu characters"
explanation	"A type name with the indicated attribute is used to construct
		other names with a prefix and/or suffix concatenated to it.
		This further restricts the length of the name to the indicated
		value, to make sure that the maximum identifier length is not
		exceeded in the generated names.
"
action		"Shorten the type name.
"
end

start
code	NIDL_NOPORTEXCEP
text	"Warning: Use of user-defined exceptions requires %1$s"
explanation	"Use of user-defined exceptions is not interoperable with
		implementations of DCE V1.0.
"
action		"Do not use the feature if interoperability with DCE V1.0
		is required.  Otherwise, specify the extended standard option
		on the compiler command to suppress the warning.
"
end

start
code	NIDL_NOPORTATTR
text	"Warning: Use of [%1$s] attribute requires %2$s"
explanation	"The indicated attribute is not supported by DCE V1.0, and
		thus should not be used if interoperability with
		implementations of DCE V1.0 is required.
"
action		"Do not use the feature if interoperability with DCE V1.0
		is required.  Otherwise, specify the extended standard option
		on the compiler command to suppress the warning.
"
end

start
code	NIDL_PRMDEPATTR
text	"A [%1$s] parameter must have the [%2$s] attribute"
explanation	"A parameter with the first attribute must also have the
		second attribute.
"
action		"Add the second attribute to the parameter declaration.
"
end

start
code	NIDL_CPPCMDOPT
text	"Warning: Use of C preprocessor directive requires %1$s"
explanation	"The IDL compiler detected a C preprocessor directive in a
		source IDL or ACF file.  C preprocessor directives begin in
		the first column of a source line and start with the '#'
		character.  Either you have specified an IDL command option to
		disable C preprocessing, or IDL does not invoke the C
		preprocessor by default on the platform on which you are running.
"
action		"Add the indicated command option to your <kw>(idl) command
		so that the IDL compiler will invoke the C preprocesor
		to preprocess source IDL and ACF files before they are parsed.
"
end

start
code	NIDL_NOPORTANON
text	"Warning: Use of anonymous %1$s may not be portable across C compilers"
explanation	"The source IDL contains an IDL language construct, such as an
		<kw>(enum), declared as an unnamed type within another
		definition.  The generated stub code will compile cleanly under
		some C compilers, but generate errors from others.  The potential
		errors are due to differences in the scoping of identifiers
		across C compilers.
"
action		"Use a <kw>(typedef) statement to define the base <kw>(type)
		as a named type, then use the type name in any subsequent
		declarations in place of an anonymous definition.
"
end

start
code	NIDL_NOFLTPARAM
text	"Warning: A [fault_status] parameter has no utility in this operation"
explanation	"A <kw>([fault_status]) parameter is used in an operation where no
		fault can ever occur.  An example is an encoding services
		operation, i.e. one using <kw>([encode]) or <kw>([decode]) -
		there is no remote entity from which a fault might be received.
"
action		"Perhaps you meant to use a <kw>([comm_status]) attribute.
		If not, the parameter can be removed from the operation or
		the <kw>([fault_status]) attribute can be removed from the
		parameter.
"
end

start
code	NIDL_CONSTRUCTOR
text	"A [cxx_new] operation must return an interface pointer"
explanation	"A <kw>([cxx_new]) operation attribute is used to identify a 
		remote object creator operation. A remote object creator
		operation must return a pointer to an interface.
"
action		"Insure that the return value for the operation is 
		an <interface-name> * type.
"
end

start
code	NIDL_INTREFNOTALO
text	"Interface reference %1$s allowed only as target of a * or & pointer"
explanation	"When an IDL inteface is compiled with <kw>(-lang cxx), the
		interface name also implicitly defines a type, similar to a C++
		class.  Pointers to or references to this interface type
		may be used elsewhere in the interface.  Any other uses of
		this type are not valid.
"
action		"Change the declaration to use a * or &, or change the type
		used in the declaration.
"
end

start
code	NIDL_PTRATTBIGN
text	"Warning: Pointer attributes are ignored on an interface reference"
explanation	"Interface references are not managed in the same way as
		other pointers and references in IDL.  Thus, the pointer
		attributes <kw>([ref]), <kw>([unique]), and <kw>([ptr])
		are not meaningful on an interface reference.
"
action		"No action is required, since the pointer attribute is ignored
		and the IDL compiler continues processing.  To eliminate the
		warning message, remove the pointer attribute from the
		declaration.
"
end

start
code	NIDL_STATICIGN
text	"Warning: Static property or ACF attribute [cxx_static] is ignored except for -lang cxx"
explanation	"The IDL <kw>(static) keyword on an operation, as well as the ACF
		<kw>([cxx_static]) attribute on an operation, only pertain to
		interfaces that are compiled with the <kw>(-lang cxx) IDL
		compiler option.
"
action		"If your application code is written in C++, then you must use
		the <kw>(-lang cxx) option to the IDL compiler in order to
		enable generation of C++ header file and stub files.
		Otherwise, no action is required, since the static property is
		ignored, and the IDL compiler continues processing.  To eliminate
		the warning message, remove the static property from the
		declaration.
"
end

start
code	NIDL_LOOKUPNOTVAL
text	"ACF attribute [cxx_lookup] is only valid for -lang cxx"
explanation	"The ACF <kw>([cxx_lookup]) interface attribute only pertains to
		interfaces that are compiled with the <kw>(-lang cxx) IDL
		compiler option.
"
action		"If your application code is written in C++, then you must use
		the <kw>(-lang cxx) option to the IDL compiler in order to
		enable generation of C++ header file and stub files.
		Otherwise, edit the <v>(interface-name)).acf file,
		and remove the <kw>([cxx_lookup]) attribute.
"
end

start
code	NIDL_NEWNOTVAL
text	"ACF attribute [cxx_new] is only valid for -lang cxx"
explanation	"The ACF <kw>([cxx_new]) operation attribute only pertains to
		interfaces that are compiled with the <kw>(-lang cxx) IDL
		compiler option.
"
action		"If your application code is written in C++, then you must use
		the <kw>(-lang cxx) option to the IDL compiler in order to
		enable generation of C++ header file and stub files.
		Otherwise, edit the <v>(interface-name)).acf file,
		and remove any uses of the <kw>([cxx_new]) attribute.
"
end

start
code	NIDL_INHERITNOTVAL
text	"IDL inheritance operator ':' is only valid for -lang cxx"
explanation	"The Inheritance operator ':' is only valid for
		interfaces that are compiled with the <kw>(-lang cxx) IDL
		compiler option.
"
action		"If your application code is written in C++ and using interface inheritance,
		then you must use the <kw>(-lang cxx) option to the IDL compiler
		in order to enable generation of C++ header file and stub files
		with inheritance.
		Otherwise, edit the <v>(interface-name)).idl file,
		and remove any uses of the inheritance ':' operator.
"
end

start
code	NIDL_INHERITNOTDEF
text	"Inherited interfaces must be imported: %1$s "
explanation	"No definition for the inherited interface identified by the 
		inheritance operator was found.
"
action		"If your application code is using interface inheritance,
		then you must import a definition for the inherited
		interface.
		Otherwise, edit the <v>(interface-name)).idl file,
		and remove any uses of the inheritance ':' operator.
"
end

start
code	NIDL_DELEGATENOTVAL
text	"ACF attribute [cxx_delegate] is only valid for -lang cxx"
explanation	"The ACF <kw>([cxx_delegate]) interface attribute only pertains to
		interfaces that are compiled with the <kw>(-lang cxx) IDL
		compiler option.
"
action		"If your application code is written in C++, then you must use
		the <kw>(-lang cxx) option to the IDL compiler in order to
		enable generation of C++ header file and stub files.
		Otherwise, edit the <v>(interface-name)).acf file,
		and remove the <kw>([cxx_delegate]) attribute.
"
end

