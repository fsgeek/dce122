%!PS-Adobe-3.0 EPSF-3.0
%%Title: ARTLIB:ZK-5697A.EPS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%Version: 4.0 920626
%%CreationDate: Wed Jan 13 13:04:52 1993
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%BoundingBox: 211 325 400 467
%%DocumentData: Clean7Bit
%%EndComments
%%-3.0 72 mul -4.5 72 mul translate            
%%BeginProlog

%Begin: ColorSep
%%CreationDate: (10/15/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/ColorSepDict 100 dict def
ColorSepDict begin
/bdf{bind def}def
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/setcmykcolor{
	1 exch sub
	3{dup 5 -1 roll sub 0 2 copy lt{exch}if pop exch}repeat
	pop setrgbcolor
}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{
	5
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
}ndf
/setcustomcolor{
	exch aload pop pop
	4{4 index mul 4 1 roll}repeat
	setcmykcolor pop
}ndf
/setseparationgray{systemdict/setgray get exec}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage{
4 ne{(\nUnsupported number of colors for colorimage.\n)print flush quit} if
not{(\nSingle procedure form  colorimage unsupported.\n)print flush quit} if
save 20 dict begin /&saveobj exch def
/&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
{&Cproc &Mproc &Yproc &Kproc
/&K exch def /&Y exch def /&M exch def /&C exch def
0 1 &K length 1 sub{
/&i exch def
&K &i 255
&C &i get 30 mul
&M &i get 59 mul add
&Y &i get 11 mul add
&K &i get 100 mul add
100 idiv
dup 255 gt {pop 255} if
sub put
}for
&K }image
&saveobj end restore
}ndf
/customcolorimage{pop systemdict/image get exec}ndf
/separationimage{systemdict/image get exec}ndf
end
%End: ColorSep

%Begin: Graphics_Editor_Prolog
%%Version: 4.0 3
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
% Tint, C, M, Y, K, Colorname, Overprint
/cmyk	{ 7 copy
	  /cur_overprint ex def
	  /cur_colorname ex def
	  /cur_black ex def
	  /cur_yellow ex def
	  /cur_magenta ex def
	  /cur_cyan ex def
	  /cur_tint ex def
	  setoverprint	
	  findcmykcustomcolor ex setcustomcolor } bind def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs 	{ cur_overprint /sav_overprint ex def
 	  cur_colorname /sav_colorname ex def 
          cur_black /sav_black ex def 
          cur_yellow /sav_yellow ex def 
          cur_magenta /sav_magenta ex def 
          cur_cyan /sav_cyan ex def 
          cur_tint /sav_tint ex def 
	  gsave       
	} def
/gr     { sav_tint sav_cyan sav_magenta sav_yellow 
	  sav_black sav_colorname sav_overprint cmyk
	  grestore
 	  sav_overprint setoverprint	
	} def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
/BeginEPSF
 { /b4_Inc_state save def
   /dict_count countdictstack def
   /op_count count 1 sub def
   userdict begin
   /showpage {} def
   0 setgray 0 setlinecap
   1 setlinewidth 0 setlinejoin
   10 setmiterlimit [] 0 setdash newpath
   false setoverprint
   /languagelevel where
   {pop languagelevel
    1 ne
      {false setstrokeadjust
      } if
   } if
 } bind def
/EndEPSF
 { count op_count sub {pop} repeat
   countdictstack dict_count sub {end} repeat
   b4_Inc_state restore
 } bind def
end
%End: Graphics_Editor_Prolog

%%EndProlog
%%BeginSetup
ColorSepDict begin
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
1.000 0.000 0.000 0.000 1.000 (Black) false cmyk
211.688 466.711 tr
1 -1 sc
0.770 0.770 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 244.965 183.666 Crop
0.925 slw
0 slc
124.911 54.591 124.911 28.683 Line st
198.008 80.499 198.008 54.591 Line st
198.008 122.136 198.008 96.228 Line st
233.168 122.136 160.072 122.136 Line st
232.474 136.940 232.474 122.136 Line st
50.890 80.499 50.890 54.591 Line st
50.890 122.136 50.890 96.228 Line st
86.050 122.136 12.954 122.136 Line st
12.954 136.940 12.954 122.136 Line st
86.050 136.940 86.050 122.136 Line st
160.072 136.940 160.072 122.136 Line st
198.008 54.591 50.890 54.591 Line st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
11 0.79378 (ZK-5697A-GE) 185.748 179.965 Text
24.982 12.954 0.000 124.911 15.730 Ellipse gs
0.000 0.000 0.000 0.000 1.000 (Black) false cmyk
fi gr st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.11523 (/.:) 120.285 18.968 Text
24.982 12.954 0.000 50.890 87.901 Ellipse gs
0.000 0.000 0.000 0.000 1.000 (Black) false cmyk
fi gr st
24.982 12.954 0.000 198.008 87.901 Ellipse gs
0.000 0.000 0.000 0.000 1.000 (Black) false cmyk
fi gr st
4 0.24326 (/rnd) 188.755 91.139 Text
4 0.25606 (/eng) 41.175 91.139 Text
6 0.30727 (link2) 220.908 151.282 Text
5 0.29447 (obj2) 148.969 151.282 Text
6 0.30727 (link1) 74.484 151.282 Text
5 0.29447 (obj1) 1.851 151.282 Text
Applpage
restore
end  % Pop Appl Dict
end  % Pop ColorProcset Dict
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: Black
%%CMYKCustomColor: 0.000 0.000 0.000 1.000 Black
