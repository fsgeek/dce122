%!PS-Adobe-3.0 EPSF-1.2
%%Creator: (Interleaf, Inc.)
%%Copyright: (Copyright(c) 1991 Interleaf, Inc.)
%%Version: 5.3 1
%%BoundingBox: 0 0 396 94
%%For: (root)
%%CreationDate: (Sun, Jan  9, 1994 23:44:00)
%%Title: (evt_number)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
1.0 dup scale
%%BeginProlog
userdict /Ileaf_5.3.1 400 dict dup begin put
/MAJOR 5 def/MINOR 3 def/SUB 1 def
/bdf{bind def}bind def
/ldf{load def}bdf
/xdf{exch def}bdf
/msg{ print(\n)print flush}bdf
/imatrix[1 0 0 -1 0 0]def
/MAXCHARS 128 def
/VMHEAD 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charstr 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymBEnc 256 array def
/ILDingbats 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch{72 mul}bdf
/pgstate 0 def/DPIx 0 def/DPIy 0 def
/PSfontobj 1024 dict def
/BinaryMode false def
/rl /rlineto ldf
/rm /rmoveto ldf
/rc /rcurveto ldf
/L /lineto ldf
/M /moveto ldf
/sw /setlinewidth ldf
% User definable macros for custom prologues
/BOJ {} def
/EOJ {} def
/BOS {} def
/EOS {} def
%
/initialize {Ileaf_5.3.1 begin} bdf
/terminate {end} bdf
/hline 0 def
/headerpage{
 	0 begin
	/nl {} def
	/y 11 def/nl{/y y .33 sub def 1 inch y inch M}bdf
	/#copies 1 def
	/Helvetica-Bold/ILhelvb ILEncoding ReEncode
	/ILhelvb findfont 18 scalefont setfont
	nl nl nl

        hline length dup dup
	25 gt{26 sub dup hline exch((  ...))put} {pop 0}ifelse
	exch 1 sub -1 3 -1 roll{hline exch get show nl}for

	/Helvetica findfont 8 scalefont setfont
	1 inch 1 inch M
	emsg1 0 get 0 ne{1 inch .75 inch M emsg1 show}if
	emsg2 0 get 0 ne{1 inch .5 inch M emsg2 show}if
	end
}bdf
/headerpage load 0 6 dict put
%
/vp{
	10 mesg cvrs print(.)print
	10 mesg cvrs print(.)print
	10 mesg cvrs print(\n)print
}bdf
/vs{
	10 mesg cvrs show(.)show
	10 mesg cvrs show(.)show
	10 mesg cvrs show
} bdf
/lline 0 def
/logme{
	(\tInterleaf::pl2ps )print
	SUB MINOR MAJOR vp
	lline length dup dup 
	5 gt{5 sub}{pop 0}ifelse
	exch 1 sub -1 3 -1 roll{(\tInterleaf::)print lline exch get print(\n)print}for
	flush
}bdf
%
/vck{	% stack => major minor sub
	3 copy
	MAJOR ne exch MINOR ne or exch SUB ne or
	{
	 (\tInterleaf:: FATAL ERROR: pspro.ps and pl2ps versions do not agree.)msg
	 (\tInterleaf:: pspro.ps version: \t)print
	 SUB MINOR MAJOR vp
	 (\tInterleaf:: pl2ps version: \t)print
	 3 copy vp flush
	 userdict /lline known
	  {headerpage} {/Helvetica findfont 8 scalefont setfont} ifelse
	 (FATAL ERROR: pspro version )show
	 SUB MINOR MAJOR vs
	 ( does not agree with pl2ps version)show
	 vs showpage
	 quit 
	} {3 {pop} repeat} ifelse
}bdf
%
/vpos 0 def/hpos 0 def
/m {/vpos xdf/hpos xdf} def
/v {/vpos xdf} def
/h {/hpos xdf} def
/el{
 matrix currentmatrix 8 1 roll
 translate rotate scale 0 0 1 5 -2 roll arc setmatrix
}bdf
/addconic{
 matrix currentmatrix 9 1 roll
 translate rotate scale
 0 0 1 6 -3 roll 1 eq{arc}{arcn}ifelse
 setmatrix
}bdf
/dp{1 setlinejoin 1 setlinecap stroke}bdf
/ALIGN_NONE 0 def/ALIGN_OPEN 1 def/ALIGN_CLOSE 2 def
/PPWADJ [0 0 4 8 12 16 20]def
/MINSCALE .1 def
%
/plen{
	0 begin
	flattenpath
	/dist 0 def/yfirst 0 def/xfirst 0 def/ymoveto 0 def
	/xmoveto 0 def/ynext 0 def/xnext 0 def
	{/yfirst xdf/xfirst xdf
	/ymoveto yfirst def/xmoveto xfirst def}
	{/ynext xdf/xnext xdf
	/dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
	/yfirst ynext def/xfirst xnext def}
	{}
	{/ynext ymoveto def/xnext xmoveto def
	/dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
	/yfirst ynext def/xfirst xnext def}
	pathforall dist
	end
}bdf
/plen load 0 7 dict put
%
/setpenpat {0 begin
 /style 0 def/width 0 def/pattern 0 def
 /style xdf/width xdf/pattern xdf/scaleup 0 def
 /indx 0 def/adj 0 def/val 0 def/iszero 0 def
 /scaleup DPIx 300 div def
 /indx width 1 add scaleup div 4 div cvi def
 indx 1 gt indx 7 lt and{
 /adj PPWADJ indx get scaleup mul def
 /indx 0 def
 pattern{/iszero indx 2 mod def iszero
  0 ne{adj add/val xdf}{/val xdf}ifelse
  pattern indx val put /indx indx 1 add def
  }forall
 }if
 %
 /offset 0 def/patternlen 0 def/pathlen plen def
 pattern{patternlen add/patternlen xdf}forall
 style ALIGN_NONE eq{}if
 %
 /n 0 def/extralen 0 def/halfpatlen 0 def
 /scale1 0 def/offset 0 def
 style ALIGN_CLOSE eq{
  /n pathlen patternlen div cvi def
  /extralen pathlen cvi patternlen cvi mod def
  /halfpatlen patternlen 2 div def
  extralen halfpatlen gt{/n n 1 add def}if
  n 0 eq{/n 1 def}if
  /scale1 pathlen n patternlen mul div def
  scale1 MINSCALE gt{
   /indx 0 def
   pattern{
    scale1 mul/val xdf
    val 0 eq{/val 1 def}if
    pattern indx val cvi put
    /indx indx 1 add def
   }forall
  }if
  /offset pattern 0 get 2 div round def
 }if
 %
 /firstdash 0 def/dashpct 0 def/scale2 0 def/x 0 def/y 0 def
 style ALIGN_OPEN eq{
  /firstdash pattern 0 get def
  /dashpct firstdash patternlen div def
  /n pathlen patternlen div dashpct sub cvi def
  /scale1 pathlen n dashpct add patternlen mul div def
  /scale2 pathlen n dashpct add 1 add patternlen mul div def
  /x scale2 1 sub abs def
  /y scale1 1 sub abs def
  x y lt{/scale1 scale2 def}if
  scale1 MINSCALE gt{
   /indx 0 def
   pattern{
    scale1 mul/val xdf
    val 0 eq{/val 1 def}if
    pattern indx val cvi put
    /indx indx 1 add def
   }forall
   /offset 0 def
  }if
 }if
 pattern offset setdash
 end
}bdf
/setpenpat load 0 50 dict put
%
/msp 0 def/stEnd 0 def/nsp 0 def/fstr 0 def
/s{
	/msp xdf/stEnd xdf/nsp xdf/fstr xdf
	hpos vpos M
	msp -1 ne
	{stEnd hpos sub fstr stringwidth pop sub nsp div 0 msp fstr widthshow}
	{fstr show}
	ifelse
	/hpos stEnd def
}bdf
%
%%%%%%%%% Hack for error character %%%%%%%%%%%%%%%%%%%%%%%%
/eu 1000 def
/ew 632 def
/ptsz 0 def
/ec{
 /ptsz xdf
 gsave
 newpath hpos vpos M
 ptsz DPIx 72 div mul eu div dup neg scale
 30 -110 rm 573 0 rl 0 873 rl -573 0 rl 0 -873 rl
 40 833 rm 493 0 rl 0 -793 rl -493 0 rl 0 793 rl
 194 -137 rm 94 0 rl 0 94 rl -94 0 rl 0 -94 rl
 10 -176 rm 0 -83 -162 -95 -162 -257 rc
 0 -119 109 -174 208 -174 rc 116 0 201 69 201 172 rc
 0 34 rl -83 0 rl 4 -63 -6 -148 -119 -148 rc
 -74 0 -128 48 -128 121 rc 0 133 158 136 158 252 rc
 0 45 0 95 0 95 rc -75 0 rl 0 0 0 -52 0 -95 rc
 closepath fill
 grestore
 /hpos hpos ptsz DPIx 72 div mul eu div ew mul add def
 hpos vpos M
}bdf
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/ilr{BinaryMode{readstring}{readhexstring}ifelse}bdf
/s1 1 string def
/ccd[
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}
 {16}{17}{18}{19}{20}{21}{22}{23}{24}{25}{26}{27}{28}{29}{30}{31}
 {32}{33}{34}{35}{36}{37}{38}{39}{40}{41}{42}{43}{44}{45}{46}{47}
 {48}{49}{50}{51}{52}{53}{54}{55}{56}{57}{58}{59}{60}{61}{62}{63}
 {t1_1}{t1_2}{3 t1}{4 t1}{5 t1}{6 t1}{7 t1}{8 t1}
 {9 t1}{10 t1}{11 t1}{12 t1}{13 t1}{14 t1}{15 t1}{16 t1}
 {t2_1}{t2_2}{3 t2}{4 t2}{5 t2}{6 t2}{7 t2}{8 t2}
 {9 t2}{10 t2}{11 t2}{12 t2}{ditto}{rn}{raw}
]def
/t1tab[
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 16#00 16#01 16#02 16#04 16#08 16#10 16#20 16#40
 16#80 16#03 16#06 16#0c 16#18 16#30 16#60 16#c0
 16#07 16#0e 16#1c 16#38 16#70 16#e0 16#0f 16#1e
 16#3c 16#78 16#f0 16#1f 16#3e 16#7c 16#f8 16#3f
 16#7e 16#fc 16#7f 16#fe 16#ff 16#a0 16#90 16#88
 16#84 16#82 16#81 16#50 16#48 16#44 16#42 16#41
 16#28 16#24 16#22 16#21 16#14 16#12 16#11 16#0a
 16#09 16#05 16#00 16#00 16#00 16#00 16#00 16#00 
]def
/str 0 def/sl 0 def/val 0 def
/cls{
 	/sl xdf/val xdf
 	/str sl string def
 	0 1 sl 1 sub {str exch val put}for
 	str def
}bdf
/rn{
 cf read pop 32 sub 6 bitshift cf read pop 32 sub or
}bdf
/t1_1{
 2 copy 2 copy
  get cf read pop t1tab exch get xor put 1
}bdf
/t1_2{
 2 copy 2 copy
 get cf read pop t1tab exch get xor put 1 add
 2 copy 2 copy
 get cf read pop t1tab exch get xor put 1
}bdf
/t1{
 {2 copy 2 copy get cf read pop t1tab exch get xor put 1 add}repeat
 0
}bdf
/t2_1{
 2 copy 2 copy
 get cf s1 readhexstring pop 0 get xor put 1
}bdf
/t2_2{
 2 copy 2 copy
 get cf s1 readhexstring pop 0 get xor put 1 add
 2 copy 2 copy
 get cf s1 readhexstring pop 0 get xor put 1
}bdf
/t2{
 {2 copy 2 copy get cf s1 readhexstring pop 0 get xor put 1 add}repeat
 0
}bdf
/ditto{
 dbsize
}bdf
/raw{
 2 copy pop
 cf exch readhexstring pop pop
 dbsize
}bdf
/dl{
 dline
 0 
 cf es readline pop
 {ccd exch get exec add}forall pop
 0 dbsizetrue getinterval
}bdf
/shiftline{
 0 1 cws 2 sub{
  2 copy 2 copy
  get
  lsh bitshift 16#ff and
  3 1 roll
  1 add get
  rsh bitshift 16#ff and
  or
  crpstr 3 1 roll
  put
 }for
 pop crpstr
}bdf
%
/PL_image{0 begin
 gsave
 % init
 /cw 0 def/ct 0 def/cb 0 def/cl 0 def/cpr 0 def
 /ho 0 def/vo 0 def/hh 0 def/vh 0 def/hv 0 def
 /vv 0 def/nbits 0 def/vpix 0 def/hpix 0 def
 /scfrq 0 def/scang 0 def/ms 0 def/map 0 def
 /ms 0 def/dbsize 0 def
 %
 /cw xdf/ct xdf/cb xdf/cl xdf
 /cpr xdf
 /ho xdf/vo xdf/hh xdf/vh xdf/hv xdf/vv xdf/nbits xdf/vpix xdf/hpix xdf
 /scfrq xdf/scang xdf/ms xdf/map xdf
 /transp true def
 ms 0 ne{
  /ms ms 1 sub def
  {map exch ms mul round cvi get}settransfer
  map ms get 1.0 ne{/transp false def}if
 }if
 scfrq 0 ne{
  scang 0 eq{/scang 45 def}if
  scfrq scang currentscreen 3 1 roll pop pop setscreen
 }if
 %
 /dbsize 0 def/dbsizetrue 0 def/cf 0 def/cli 0 def/cwb 0 def
 /ch 0 def/crpstr 0 def/lsh 0 def/rsh 0 def/cws 0 def/dline 0 def/es 0 def

 /dbsize hpix nbits mul 7 add 8 idiv def

 /dbsizetrue hpix nbits mul 7 add 8 idiv def
 /dline 255 dbsize cls
 /es 0 dbsize cls
 /cf currentfile def
 /cli cl 8 idiv def
 /cwb cw 7 add 8 idiv def
 /ch vpix ct cb add sub def

 ho vo translate
 [hh vh hv vv 0 0]concat
 nbits 1 eq transp and
  {cpr 1 eq	
   {cw ct add cb add cl add 0 ne
    {/crpstr cwb string def
     /lsh cl 8 mod def
     /rsh lsh 8 sub def
     /cws cw lsh add 7 add 8 idiv def
     ct{dl pop}repeat
     cw ch false[cw 0 0 ch 0 0]
     {dl cli cws getinterval lsh 0 ne{shiftline}if}imagemask
     cb{dl pop}repeat
    }
    {hpix vpix false[hpix 0 0 vpix 0 0]{dl}imagemask}
    ifelse
   }
   {hpix vpix false[hpix 0 0 vpix 0 0]{cf dline ilr pop}imagemask}
   ifelse
  }
  {cpr 1 eq
   {cw ct add cb add cl add 0 ne
    {/crpstr cwb string def
     /lsh cl 8 mod def
     /rsh lsh 8 sub def
     /cws cw lsh add 7 add 8 idiv def
     ct{dl pop}repeat
     cw ch nbits[cw 0 0 ch 0 0]
     {dl cli cws getinterval lsh 0 ne{shiftline}if}image
     cb{dl pop}repeat
    }
    {hpix vpix nbits[hpix 0 0 vpix 0 0]{dl}image}
    ifelse
   }
   {hpix vpix nbits[hpix 0 0 vpix 0 0]{cf dline ilr pop}image}
   ifelse
 }  
 ifelse
 grestore
 end
}bdf
/PL_image load 0 35 dict put
/blank_PL_image{
	0 begin gsave
	/ho 0 def/vo 0 def/hh 0 def/vh 0 def/hv 0 def
	/vv 0 def/nbits 0 def/vpix 0 def/hpix 0 def
	/scanlinesize 0 def/scanline 0 def

	pop pop pop pop pop	% => /cw xdf/ct xdf/cb xdf/cl xdf/cpr xdf
	/ho xdf/vo xdf/hh xdf/vh xdf/hv xdf/vv xdf/nbits xdf/vpix xdf/hpix xdf
	pop pop pop pop		% => /scfrq xdf/scang xdf/ms xdf/map xdf

	/scanlinesize hpix nbits mul 15 add 16 idiv 2 mul def
	/scanline 255 scanlinesize cls

	ho vo translate
	[hh vh hv vv 0 0]concat
	hpix vpix nbits[hpix 0 0 vpix 0 0]{scanline}image
	grestore end
}bdf
/blank_PL_image load 0 14 dict put
/reencodesubdict 12 dict def
/ReEncode{
	reencodesubdict begin
	/newencoding 0 def/newfontname 0 def/basefontname 0 def
	/basefontdict 0 def/newfont 0 def
	%
	/newencoding xdf/newfontname xdf/basefontname xdf
	/basefontdict basefontname findfont def
	/newfont basefontdict maxlength 2 add dict def
	basefontdict{exch dup/FID ne{exch newfont 3 1 roll put}{pop pop}ifelse}forall
	newfont/FontName newfontname put
	newencoding -1 ne{newfont/Encoding newencoding put}if
	newfontname newfont definefont pop
	end
}bdf
/insertcharnum{
	0 begin
	/encoding 0 def/i 0 def
	%
	/encoding xdf/i xdf
	(char)charstr copy pop
	i istr cvs pop
	charstr 4 istr putinterval
	encoding i charstr cvn put
	end
}bdf
/insertcharnum load 0 2 dict put
ILEncoding 0[
/Aacute/Acircumflex/Adieresis/Agrave/Aring/Atilde/Ccedilla/Eacute
/Ecircumflex/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Ntilde
/Oacute/Ocircumflex/Odieresis/Ograve/Otilde/Scaron/Uacute/Ucircumflex
/Udieresis/Ugrave/Ydieresis/Zcaron/char28/char29/char30/char31
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/quotedblleft
/aacute/acircumflex/adieresis/agrave/aring/atilde/ccedilla/eacute
/ecircumflex/edieresis/egrave/iacute/icircumflex/idieresis/igrave/ntilde
/oacute/ocircumflex/odieresis/ograve/otilde/scaron/uacute/ucircumflex
/udieresis/ugrave/ydieresis/zcaron/char156/char157/char158/char159
/char160/exclamdown/cent/sterling/fraction/yen/florin/section
/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
/char176/endash/dagger/daggerdbl/periodcentered/char181/paragraph/bullet
/quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/char190/questiondown
/char192/grave/acute/circumflex/tilde/macron/breve/dotaccent
/dieresis/char201/ring/cedilla/char204/hungarumlaut/ogonek/caron
/emdash/char209/char210/char211/char212/char213/char214/char215
/char216/char217/char218/char219/char220/char221/char222/char223
/char224/AE/char226/ordfeminine/char228/char229/char230/char231
/Lslash/Oslash/OE/ordmasculine/char236/char237/char238/char239
/char240/ae/char242/char243/char244/dotlessi/char246/char247
/lslash/oslash/oe/germandbls/char252/char253/char254/char255
]putinterval
ILSymBEnc 32[
/space/logicalor/arrowright/arrowdblleft/arrowdblup
/arrowdblright/lozenge/arrowhorizex/angleleft/registersans
/Upsilon1/plusminus/second/angle/greaterequal
/radical/ellipsis/Ifraktur/spade/lessequal
/minute/degree/fraction/florin/infinity
/approxequal/integral/propersuperset/parenrightbt/arrowup
/bracketrighttp/aleph/arrowdblboth/bracerightbt/integralbt
/notsubset/bracketleftbt/trademarksans/bracelefttp/braceleftmid
/braceleftbt/bracketlefttp/braceex/apple/angleright
/parenrightex/parenrighttp/arrowdown/divide/element
/summation/bracketleftex/parenlefttp/parenleftbt/dotmath
/copyrightsans/integralex/parenleftex/integraltp/registerserif
/intersection/trademarkserif/arrowdbldown/gradient/logicalnot
/reflexsubset/equivalence/propersubset/partialdiff/arrowboth
/circlemultiply/heart/bracketrightex/bracerightmid/emptyset
/bracketrightbt/Rfraktur/proportional/reflexsuperset/carriagereturn
/notequal/notelement/diamond/club/bracerighttp
/arrowleft/weierstrass/bullet/circleplus/multiply
/arrowvertex/copyrightserif/union/product/logicaland
]putinterval
0 1 32{ILSymBEnc insertcharnum}for
127 1 255{ILSymBEnc insertcharnum}for
ILDingbats 0[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/a1/a2/a202/a3/a4/a5/a119
/a118/a117/a11/a12/a13/a14/a15/a16
/a105/a17/a18/a19/a20/a21/a22/a23
/a24/a25/a26/a27/a28/a6/a7/a8
/a9/a10/a29/a30/a31/a32/a33/a34
/a35/a36/a37/a38/a39/a40/a41/a42
/a43/a44/a45/a46/a47/a48/a49/a50
/a51/a52/a53/a54/a55/a56/a57/a58
/a59/a60/a61/a62/a63/a64/a65/a66
/a67/a68/a69/a70/a71/a72/a73/a74
/a203/a75/a204/a76/a77/a78/a79/a81
/a82/a83/a84/a97/a98/a99/a100/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/a205/a206/a85/a86/a87
/a88/a89/a90/a91/a92/a93/a94/a95
/a96/a101/a102/a103/a104/a106/a107/a108
/a112/a111/a110/a109/a120/a121/a122/a123
/a124/a125/a126/a127/a128/a129/a130/a131
/a132/a133/a134/a135/a136/a137/a138/a139
/a140/a141/a142/a143/a144/a145/a146/a147
/a148/a149/a150/a151/a152/a153/a154/a155
/a156/a157/a158/a159/a160/a161/a163/a164
/a196/a165/a192/a166/a167/a168/a169/a170
/a171/a172/a173/a162/a174/a175/a176/a177
/a178/a179/a193/a180/a199/a181/a200/a182
/.notdef/a201/a183/a184/a197/a185/a194/a198
/a186/a195/a187/a188/a189/a190/a191/.notdef]putinterval
%
/encoding 0 def/ILfont 0 def/PSfont 0 def/ptsize 0 def
/newFont
{
	findfont imatrix makefont
	exch DPIx 72 div mul scalefont
} bdf
/declareNFont{
	/encoding xdf/ILfont xdf/PSfont xdf/ptsize xdf
	FontDirectory ILfont known false eq{PSfont ILfont encoding ReEncode}if
	ptsize ILfont newFont
}bdf
/declareRFont{0 begin
 /PLname xdf
 PSfontobj PLname
 10 dict dup begin
 /FontType 3 def
 /FontMatrix[DPIx 300 div 0 0 DPIy 300 div 0 0]def
 /FontBBox[0 0 0 0]def
 /Encoding ILEncoding def
 /BuildChar{0 begin
  /char xdf
  /fontdict xdf
  /charname fontdict/Encoding get char get def
  /charinfo fontdict/CharData get charname get def
  /wx charinfo 0 get def
  charinfo 0 get BOGUSWIDTH eq
   {puterrchar}
   {/charbbox charinfo 1 4 getinterval def
    wx 0 charbbox aload pop setcachedevice	
    charinfo 5 get charinfo 6 get true
    fontdict/imagemaskmatrix get
    dup 5 charinfo 8 get put
    dup 4 charinfo 7 get put
    charinfo 9 get
    imagemask}
  ifelse
  end
 }def
 /BuildChar load 0 7 dict put
 /imagemaskmatrix[1 0 0 1 0 0]def
 /CharData MAXCHARS dict def
 end
 PLname exch definefont put
 PSfontobj PLname get/CharData get/space[16 0 0 1 1 16 1 0 0[<00>]cvx]put
 end
}def
/declareRFont load 0 3 dict put
/numLoadEmptyGlyph{
	0 begin
	/chnum 0 def/font 0 def/w 0 def
	/chnum xdf/font xdf/w xdf
	w font PSfontobj font get/Encoding get chnum get
	LoadEmptyGlyph
	end
}bdf
/numLoadEmptyGlyph load 0 3 dict put
/puterrchar{
 PSfontobj errfontname get dup
 /BuildChar get errcharno exch exec
 (\tInterleaf::out of VM loading bitmap(?). Try breaking up document\n)
 dup print flush
 emsg1 copy pop
}def
/QUIT{
 (\tInterleaf::completely out of memory. \n\tTry breaking up the document \n)
 dup print flush
 emsg2 copy pop stop
}def
/LoadGlyph{
	0 begin
	/charno 0 def/fontname 0 def/height 0 def/width 0 def
	/hsize 0 def/nbytes 0 def/glyph 0 def/tx 0 def/ty 0 def/lly 0 def
	/llx 0 def/urx 0 def/lsb 0 def/glyph 0 def/NoVMHead 0 def
	%
	/charno xdf/fontname xdf/height xdf/vadj xdf/width xdf/hsize xdf/lsb xdf
	/NoVMHead vmstatus exch sub exch pop dup
	 VMHEAD 2 idiv lt{QUIT}if
	 VMHEAD lt{true}{false}ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	NoVMHead not{/glyph nbytes string def}if
	currentfile NoVMHead {trashheap 0 nbytes getinterval}{glyph}ifelse
	readhexstring pop pop
	/hsize hsize 15 add 16 idiv 16 mul def
	/lly height vadj add def
	/urx hsize lsb add def
	/tx lsb neg def
	/ty vadj neg def
	PSfontobj fontname get dup /Encoding get charno get
	exch /CharData get exch
	NoVMHead {[BOGUSWIDTH]}
	{[width lsb lly urx vadj hsize height tx ty[glyph]cvx]}ifelse
	put end
}bdf
/LoadGlyph load 0 15 dict put
%
/scfrq 0 def/scang 0 def
/solidfill{
 /scfrq xdf/scang xdf
 gsave
 scfrq 0 ne{
  scang 0 eq{/scang 45 def}if
  scfrq scang currentscreen 3 1 roll pop pop setscreen
 }if
 eofill
 grestore
}bdf
/patstr 1 string def/patchar 0 def/pffontname 0 def
/fillpatset{/patchar xdf/pffontname xdf}bdf
/fp{
 /scfrq xdf/scang xdf
 gsave 
 scfrq 0 ne{
  scang 0 eq{/scang 45 def}if
  scfrq scang currentscreen 3 1 roll pop pop setscreen
 }if
 currentfont PSfontobj pffontname get setfont pfill
 dup null ne{setfont}{pop}ifelse grestore
}bdf
/pfill{
 gsave 1 1 1 setrgbcolor eofill grestore
 setupfactors setupregion blastchars
 newpath
}bdf
%
/paty 0 def/patx 0 def
/setupfactors{
 patstr 0 patchar put
 patstr stringwidth pop/paty exch def/patx paty def
}bdf
/ry 0 def/rx 0 def/ly 0 def/lx 0 def
/setupregion{
 eoclip	
 pathbbox
 /ry exch floor def
 /rx exch floor def
 /ly exch ceiling cvi
 dup 0 lt{paty sub}if cvi
 dup paty ceiling cvi mod sub def
 /lx exch ceiling cvi
 dup 0 lt{patx sub}if cvi
 dup patx ceiling cvi mod sub def
 /ry ry paty add def
 /ly ly paty sub def
 newpath
}bdf
/blastchars{
 /#chars rx lx sub patx div ceiling cvi def
 ly paty ry{lx exch M #chars{patstr show}repeat}for
}bdf
%
/clp{initclip newpath M L L L closepath clip}bdf
%
/cm 0 def/pgw 0 def/pgl 0 def/cn 0 def/pw 0 def/pw2 0 def/lnx 0 def/lny 0 def
/cropdefs[
{} % 0
{ % 1
 0 0 M lnx neg 0 L
 0 0 M 0 lny neg L
}
{ % 2
 0 0 M lnx 0 L
 0 0 M 0 lny L
}
{ % 3
 lnx .25 mul neg 0 M lnx neg 0 L
 0 lny .25 mul neg M 0 lny neg L
}
{ % 4
 lnx .25 mul 0 M lnx 0 L
 0 lny .25 mul M 0 lny L
}
{ % 5
 lnx neg 0 M lnx 0 L
 0 lny neg M 0 lny L
}
{  % 6
 [lnx .75 mul lnx .50 mul]0 setdash
 lnx neg 0 M lnx 0 L 0 lny neg M 0 lny L
}
{ % 7
 cn 1 eq cn 3 eq or {90 rotate}if
 0 0 M lnx neg 0 L
 0 lny M 0 lny neg L
 cn 1 eq cn 3 eq or {90 neg rotate}if
 /cn cn 1 add def
}
]def
/cutmarks{	%stack: pglen pgwid cmtype => ---  
	gsave 0 setgray [] 0 setdash
	/cm xdf/pgwid xdf/pglen xdf
	/pw DPIx 80 div def/pw2 pw 2 div def
	/lnx DPIx 4 div def/lny DPIy 4 div def
	initclip pw sw
	/cn 0 def newpath
	% upper left corner
	pw2 neg pw2 neg translate
	cropdefs cm get exec
	% upper right corner
	pgwid pw add 0 translate
	90 rotate cropdefs cm get exec 90 neg rotate
	% lower right corner
	0 pglen pw add translate
	180 rotate cropdefs cm get exec 180 neg rotate
	% lower left corner
	pgwid pw add neg 0 translate
	270 rotate cropdefs cm get exec 270 neg rotate
	dp grestore
}bdf
/bop {/pgstate save def} bdf
/eop {pgstate restore showpage} bdf
end 
%%EndProlog
%%BeginSetup
Ileaf_5.3.1 /initialize get exec
/hline 5 array def
hline 4 (For: root ) put
hline 3 (Printed on: Sun, Jan  9, 1994 23:44:00 ) put
hline 2 ( ) put
hline 1 (Document: evt_number ) put
hline 0 (Last saved on: Sun, Jan  9, 1994 23:24:52 ) put
/lline 5 array def
lline 4 (For: root ) put
lline 3 (Printed on: Sun, Jan  9, 1994 23:44:00 ) put
lline 2 ( ) put
lline 1 (Document: evt_number ) put
lline 0 (Last saved on: Sun, Jan  9, 1994 23:24:52 ) put
logme
% >> pl2ps version 5.3.1
1 3 5 vck
%%EndSetup
%%Page: () 1
%%BeginPageSetup
bop
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
0 13977 neg translate
%%EndPageSetup
0 13978 10801 13978 10801 0 0 0 clp
/wst:timsps10 10.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps10 setfont
8251.0 558.0 m
4126.0 h
0.0 h
1429.0 v
/wst:timsps12 12.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps12 setfont
305.0 12696.0 m
0.0000 setgray
<466f726d61742041>
 1 1124 32 s
305.0 12931.0 m
<466f726d61742042>
 1 1112 32 s
305.0 13166.0 m
<466f726d61742043>
 1 1112 32 s
305.0 13401.0 m
<466f726d61742044>
 1 1124 32 s
305.0 13636.0 m
<466f726d61742045>
 1 1101 32 s
1576.0 12442.0 m
<3020312032203320342020202020202020202038202020202020202020202020202020202020202020313620202020202020202020202020202020202020323420202020202020202020202020202020203331>
 71 6611 32 s
1576.0 12677.0 m
<302020202020202020736574b16964202020202020202020202020202020202020202020202020206576656e74b16964>
 33 4667 32 s
1576.0 12912.0 m
<3120302020202020202020202020202020202020736574b169642020202020202020202020202020202020202020202020202020202020206576656e74b16964>
 48 5568 32 s
1576.0 13147.0 m
<3120312030202020202020202020202020202020202020202020202020202020202020736574b169642020202020202020202020202020202020202020202020202020206576656e74b16964>
 59 6257 32 s
1576.0 13382.0 m
<312031203120302020202020202020202020202020202020202020202020202020202020202020202020206576656e74b16964>
 39 4797 32 s
1576.0 13618.0 m
<3120312031203120202020202020202020202020202020202020202020202020202020202020202020202020207265736572766564>
 41 4891 32 s
0.0 0.0 m
17.0 sw
newpath
169 12453 M
6777 12453 L
6777 12453 L
6777 13724 L
169 13724 L
closepath
[] 0 setdash
dp
newpath
1355 12453 M
1355 13724 L
dp
newpath
169 12707 M
6777 12707 L
dp
newpath
169 12961 M
6777 12961 L
dp
newpath
169 13199 M
6777 13199 L
dp
newpath
169 13470 M
6777 13470 L
dp
newpath
2796 12453 M
2796 12707 L
dp
newpath
4066 12707 M
4066 12961 L
dp
newpath
5422 12961 M
5422 13199 L
dp
%13978 10801 1 cutmarks
eop
%%Trailer
Ileaf_5.3.1 /terminate get exec
%%Pages: 1
%%DocumentFonts: Times-Roman
%%EOF
