<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE BOOK PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: 4_accts.sgm,v $
# Revision 1.1.2.10  1996/12/04  22:49:06  carrig
# 	{enh,R1.2.2}
# 	JC's edits
# 	[1996/12/04  22:46:52  carrig]
#
# Revision 1.1.2.9  1996/11/29  20:20:44  carrig
# 	{enh,R1.2.2}
# 	Finished edit changes; must scale graphics
# 	[1996/11/29  20:17:12  carrig]
# 
# Revision 1.1.2.8  1996/11/27  21:43:28  carrig
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:41:31  carrig]
# 
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:28:15  carrig]
# 
# Revision 1.1.2.8  1996/11/26  21:45:00  carrig
# 	{enh,R1.2.2}
# 	Putting in editor's comments
# 	[1996/11/26  21:40:40  carrig]
# 
# Revision 1.1.2.7  1996/11/25  21:51:09  carrig
# 	{enh,R1.2.2}
# 	Started to put in editor's comments
# 	[1996/11/25  21:49:08  carrig]
# 
# Revision 1.1.2.6  1996/11/07  20:43:19  weir
# 	Cleaned up history
# 	[1996/11/07  20:41:27  weir]
# 
# Revision 1.1.2.5  1996/11/07  16:15:39  weir
# 	Removed empty paragraph with revflag setting
# 	[1996/11/07  16:15:19  weir]
# 
# Revision 1.1.2.4  1996/11/06  20:40:28  carrig
# 	{enh,R1.2.2}
# 	OK for editing
# 	[1996/11/06  20:37:54  carrig]
# 
# Revision 1.1.2.3  1996/11/05  18:58:40  carrig
# 	{enh,R1.2.2}
# 	Second pass
# 	[1996/11/05  18:55:23  carrig]
# 
# Revision 1.1.2.2  1996/11/04  22:03:34  carrig
# 	{enh,R1.2.2}
# 	First pass at corrections
# 	[1996/11/04  22:00:04  carrig]
# 
# Revision 1.1.2.1  1996/11/01  18:20:14  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/11/01  18:17:48  wardr]
# 
# Revision 1.1.1.2  1996/11/01  18:17:48  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- Revision 1.1.6.1  1996/09/19  17:08:45  sherman-->
<!-- 	{def,13330,R1.2.2}-->
<!-- 	Fixed xattrschema create example-->
<!-- 	{def,13339,R1.2.2}-->
<!-- 	Fixed xattrschema rename example-->
<!-- 	{def,13575,R1.2.2}-->
<!-- 	Fixed various dcecp problems-->
<!-- 	[1996/09/19  17:08:05  sherman]-->
<!---->
<!-- Revision 1.1.4.1  1996/03/12  19:52:26  wardr-->
<!-- 	{edit R1.2.1}-->
<!-- 	Release Edits-->
<!-- 	[1996/03/12  19:52:05  wardr]-->
<!-- -->
<!-- Revision 1.1.2.8  1995/05/25  19:07:52  rcb-->
<!-- 	PRENTICE HALL reformat: final changes-->
<!-- 	[1995/05/25  13:24:40  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat - index entries, odds and ends-->
<!-- 	[1995/03/27  19:51:00  rcb]-->
<!-- -->
<!-- 	minor edit fix-->
<!-- 	[1995/03/16  17:30:21  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat-->
<!-- 	[1995/03/09  19:59:43  rcb]-->
<!-- -->
<!-- 	incorporated 1.1 edits-->
<!-- 	[1995/03/09  19:15:54  rcb]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/10/21  17:26:26  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final GA release edits-->
<!-- 	[1994/10/21  17:26:11  wardr]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  20:40:33  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final GA release edits-->
<!-- 	[1994/10/20  20:40:00  wardr]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/20  16:08:25  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final GA release edits-->
<!-- 	[1994/10/20  16:08:05  wardr]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/18  21:12:34  millette-->
<!-- 	(enh,10056,R1.1)-->
<!-- 	HP dcecp edits-->
<!-- 	[1994/10/18  21:12:10  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/18  19:18:26  millette-->
<!-- 	(enh,10056,R1.1)-->
<!-- 	HP dcecp edits-->
<!-- 	[1994/10/18  19:17:49  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/10/06  20:40:25  rrizzo-->
<!-- 	expand copyright-->
<!-- 	[1994/10/06  20:07:32  rrizzo]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/09/16  21:13:35  millette-->
<!-- 	(enh,10056,R1.1)-->
<!-- 	Created for ERA-->
<!-- 	[1994/09/16  21:12:34  millette]-->
<!-- -->
]>
-->
<chapter id="AGCC.SECACT.div.1">
<title>Creating and Maintaining Accounts</title>
<para><indexterm id="AGCC.SECACT.indx.1"><primary>principals</primary><secondary>
network and local identities</secondary></indexterm> <indexterm id="AGCC.SECACT.indx.2">
<primary>network identity</primary></indexterm> <indexterm id="AGCC.SECACT.indx.3">
<primary>local</primary><secondary>identity</secondary></indexterm> <indexterm
id="AGCC.SECACT.indx.4"><primary>accounts</primary><secondary>about</secondary>
</indexterm>All principals have two identities: a network identity that provides
the ability to access DCE objects on machines across the network, and a local
identity that provides the ability to access objects on the local machine.
 The two identities exist in tandem, but independently of each other.  A principal's
network identity is defined by an account in the network registry.  A principal's
local identity is defined by local data, such as entries in the <filename>
/etc/passwd</filename> and <filename>/etc/group</filename> files that are
stored on the local machine.  If the <command>passwd_export</command> command
is used to update the <filename>/etc/passwd</filename> and <filename>/etc/group
</filename> files with data that is stored in the local registry, local identity
data is derived from information that is stored in the network registry.</para>
<para>Registry accounts define a network identity by associating a principal
with a group, an organization, and  related account information, such as the
password that is used to authenticate a principal's identity.  You must create
a registry account for any principal that engages in communications across
the network, regardless of whether the communications are authenticated. 
The principals for which you must create registry accounts  are as follows:
</para>
<itemizedlist>
<listitem><para>Each human user who accesses objects across the network; this
probably includes all human users unless you are specifically restricting
a user to the local machine.</para>
</listitem>
<listitem><para>Each server that accesses objects across the network and runs
under its own identity, not the identity of the principal who started it.
</para>
</listitem>
<listitem><para>Each machine in the network.</para>
</listitem>
<listitem><para>Any cell with which you engage in authenticated cross-cell
communications.  (Accounts for cross-cell authentication are special types
of accounts that are described in Chapter 33. <!-- the chapter titled "Administering
a Multi-Cell Environment.")--></para>
</listitem>
</itemizedlist>
<para>This chapter describes</para>
<itemizedlist>
<listitem><para>Each type of account and how to create and maintain it</para>
</listitem>
<listitem><para>How accounts are authenticated and how to display privilege
attributes and tickets</para>
</listitem>
<listitem><para>How to create and maintain the keytab file that stores keys
for server principals</para>
</listitem>
<listitem><para>How to maintain the local registry</para>
</listitem>
</itemizedlist>
<!---->
<sect1 id="AGCC.SECACT.div.2">
<title>User Accounts</title>
<para><indexterm id="AGCC.SECACT.indx.5"><primary>accounts</primary><secondary>
user</secondary></indexterm>User accounts are associated with the user's password
and information that is used when the user logs into DCE.  Account information
includes such things as the principal's home directory and login shell, and
authentication policy, which defines parameters that help control a principal's
access to DCE.  Use the <command>dcecp account create</command> command to
create accounts for human users, the <command>dcecp account modify</command>
command to modify them, and the <command>dcecp account delete</command> command
to delete them.</para>
</sect1>
<sect1 id="AGCC.SECACT.div.3">
<title>Server Accounts</title>
<para><indexterm id="AGCC.SECACT.indx.6"><primary>accounts</primary><secondary>
server</secondary></indexterm>Servers, which can also be called <replaceable>
applications</replaceable>,  that engage in communications across the network
can run under their own network identity or the network identity of the principal
who started them.  To run under their own identity, servers must be programmed
to perform a login and authenticate that identity.  Therefore, you must use
 the <command>dcecp account create</command> command to create registry accounts
for these servers.</para>
<sect2 id="AGCC.SECACT.div.4">
<title>Passwords for Server Accounts</title>
<para><!-- .iX "-[" "keys" "server accounts"-->During login, all principals
(human, server, and machine) must pass their password to the DCE Authentication
Service, which uses these passwords  to generate authentication keys.  The
most common method for human users is to simply enter their password.  A different
method must be provided for server principals.  The recommended method, which
is based on APIs  that are supplied with DCE, is to store server keys in a
locally protected key table.  The default implementation of the DCE-supplied
API stores the key table in a keytab file on the server's local  machine and
protects the file so that only a principal's local identity can read or write
the file.  </para>
<para>You can access the keytab files remotely.  On the local machine, store
 the keytab files in a partition of the machine's disk that is not exported
 by any file system.</para>
<para>Except for servers running as root or under the identity of the local
machine, a separate keytab file needs to be used for each server.  During
login, the server can access this file to obtain its key, pass its key to
the authentication service, log in, and be authenticated. </para>
<para>Use the <command>dcecp keytab add</command> command to add keys for
servers to the keytab file and the <command>dcecp keytab remove</command>
command to delete server keys.   </para>
</sect2>
<sect2 id="AGCC.SECACT.div.5">
<title>Steps for Creating Server Accounts</title>
<para>To create an account for a server, first run the  <command>dcecp account
create</command> command to create the account and then run the <command>
dcecp keytab add</command> command to add an entry to the keytab file.   The
server's password in the registry and the server's key in the keytab file
must match.  You can ensure that these passwords are the same by manually
entering the same passwords in both commands, or you can specify that the <command>
keytab add</command> command should reset the server's registry password at
the same time that it sets the server's password in the keytab file. <!--
.iX "-]" "passwords" "server accounts"--><indexterm spanend="AGCC.SECACT.indx.6"
id="AGCC.SECACT.indx.7"></para>
</sect2>
</sect1>
<sect1 id="AGCC.SECACT.div.6">
<title>Machine Accounts</title>
<para><indexterm id="AGCC.SECACT.indx.8"><primary>accounts</primary><secondary>
machine</secondary></indexterm>All machines must also have accounts in the
registry.  Machine accounts, like server accounts, are created by first running
the  <command>account create</command> command to create the account and then
running the <command>keytab add</command> command to add the server's password
to the keytab file.  Like server accounts, the  password for a machine account
in the registry and in the keytab file must  match.  Principal names in machine
accounts must be  the same as the machine's name in the cell namespace.  (See
 <!-- the Module titled "Planning, Configuring, and Starting Up DCE" -->t<?Pub Caret1>he &DCEAi;
for more information on names in the cell namespace.)</para>
</sect1>
<sect1 id="AGCC.SECACT.div.7">
<title>How Identities Represented by Accounts Are Authenticated</title>
<para><indexterm id="AGCC.SECACT.indx.9"><primary>principals</primary><secondary>
authenticating</secondary></indexterm> <indexterm id="AGCC.SECACT.indx.10">
<primary>authentication service</primary><secondary>how it works</secondary>
</indexterm>When principals log into the DCE, the security client uses the
password they supply (or that is supplied for them in the  case of a server
or machine principal) to derive the principal's  authentication key.  A copy
of the principal's authentication key exists also in the registry database,
having been stored there when the principal's account was created (or when
the password was changed.) It is thus available to the authentication service.
</para>
<para>This key is used by the authentication service to  authenticate the
principal (that is, to guarantee the principal's identity) as follows:  </para>
<orderedlist>
<listitem><para>The security client does the following:</para>
<orderedlist>
<listitem><para>Queries the user for the password and uses it to derive the
principal's authentication key</para>
</listitem>
<listitem><para>Prepares a  login request, part of which is encrypted using
the authentication key</para>
</listitem>
<listitem><para>Forwards the request to the authentication service</para>
</listitem>
</orderedlist>
</listitem>
<listitem>
<?sml-need 8>
<para>The authentication service does the following:</para>
<orderedlist>
<listitem><para>Receives the login request</para>
</listitem>
<listitem><para>Obtains the registry's copy of the principal's authentication
key</para>
</listitem>
<listitem><para>Attempts to decrypt the login request with this key</para>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<para>If the decryption succeeds, the keys are the same; the principal is
therefore authenticated and the login is successful. </para>
<para>If the decryption fails, then the password supplied by the principal
and used by the security client to derive its version of the principal's authentication
key is invalid (that is, different from the password used to derive the registry's
copy of the principal's  authentication key), and login is denied.</para>
<para><!----><!-- To accomplish this, the authentication service, upon receiving
a login--><!-- request for the principal encrypted using the principal's authentication--><!--
key,  attempts to decrypt the request--><!-- using the principal's derived
key as it exists in the registry database.--><!-- If the decryption succeeds,
the keys are the same, and the principal--><!-- is authenticated and the login
is successful.  If the decryption fails, --><!-- then the password supplied
by--><!-- the principal, and used by the security client to derive its version--><!--
of the principal's authentication key, is invalid (that is, different from--><!--
the password used to derive the registry's copy of the principal's --><!--
authentication key), and login is denied.--><!---->This is a very general
introductory description; see the &DCEDk; for a detailed discussion of principal
authentication.</para>
<sect2 id="AGCC.SECACT.div.8">
<title>Privilege Attributes</title>
<para><indexterm id="AGCC.SECACT.indx.11"><primary>privilege attributes</primary>
<secondary>about</secondary></indexterm>After a principal is authenticated,
the DCE Security Service  helps obtain the principal's privilege attributes.
  Privilege attributes consist of UUIDs that represent the principal's network
identity, the groups in which the principal is a member, and  any extended
attributes associated with the principal.   They are used when principals
request access to objects to determine their rights to those objects.  Privilege
attributes that are provided by the DCE Security Service are authenticated.
 Authenticated privileges are accepted by network services.  Unauthenticated
privilege attributes may not be accepted.  This means that the kinds of access
to DCE objects  that principals are allowed can differ, depending on whether
or not a principal's privilege attributes are authenticated.  (DCE ACLs, which
are used to control access to DCE objects based on a principal's privilege
attributes, are described in Chapter 28.) <?sml-break><?sml-need 6></para>
</sect2>
<sect2 id="AGCC.SECACT.div.9">
<title>Ticket-Granting Tickets and Tickets to Services</title>
<para><indexterm id="AGCC.SECACT.indx.12"><primary>tickets</primary><secondary>
about</secondary></indexterm> <indexterm id="AGCC.SECACT.indx.13"><primary>
authentication policies</primary></indexterm>A ticket-granting ticket allows
a principal to request and receive tickets to DCE services, such as to a Distributed
File System server, to read a file.  The tickets that let principals access
DCE services are  called <replaceable>service tickets</replaceable>.</para>
<para>Both ticket-granting tickets and service tickets have lifetimes that
are determined by the settings for individual accounts and registry policies
and properties.  When a principal's ticket-granting ticket expires, the principal
is no longer considered an authenticated user.  An  unauthenticated principal's
access to objects other than those on the local machine is severely curtailed,
and the principal's ability to use DCE services becomes extremely limited.
 To remedy this, the principal must reauthenticate by running the <command>
kinit</command> command (see the <command>kinit(8sec)</command> reference
page) or by logging out and logging in again to DCE.  </para>
<para>The principal's service tickets are renewed automatically by the authentication
service, requiring no action on the principal's part.  Note, however, that
the lifetime allocated to a service ticket can never exceed the time remaining
on the principal's <symbol role="Variable">ticket-granting ticket</symbol>
(TGT).</para>
</sect2>
<sect2 id="AGCC.SECACT.div.10">
<title>Displaying Privilege Attributes and Tickets</title>
<para><indexterm id="AGCC.SECACT.indx.14"><primary>security</primary><secondary>
commands</secondary><tertiary><command>klist</command></tertiary></indexterm> <indexterm
id="AGCC.SECACT.indx.15"><primary><command>klist</command> command</primary>
</indexterm></para>
<para>DCE cell administrators can use the <command>klist</command> command
 to display a principal's current tickets and privilege attributes.  The <command>
klist</command> command displays three types of information:  privilege attributes,
expiration information, and service ticket information.  DCE users can also
run <command>klist</command> to display their current and expired tickets.
 The <command>klist</command> command is described on the <command>klist(8sec)
</command> reference page.</para>
<sect3 id="AGCC.SECACT.div.11">
<title>The First Part of the <command>klist</command> Display&mdash;Privilege
Attributes</title>
<para><indexterm id="AGCC.SECACT.indx.16"><primary>privilege attributes</primary>
<secondary>viewing</secondary></indexterm>The <command>klist</command> command
displays a principal's privilege attributes.  This display first lists the
fully qualified principal name, followed by the UUIDs and names of the cell,
the principal name (without the cell name and DCE global identifier), and
all the groups of which the principals is a member.  A sample of this section
of  the <command>klist</command> display follows:</para>
<informalexample><para><programlisting><?sml-point-size 10><!--no-op:  12-->DCE Identity Information:
   Global Principal: /.../dresden.com/music/mozart
   Cell:	5ad96550-80c4-11ca-b26c-08001e039431 /.../dresden.com
   Principal:	00000066-80c5-11ca-b600-08001e039431 music/mozart
   Group:	00000003-80c4-11ca-b201-08001e039431 composers
<?sml-point-size 12><!--no-op:  14--></programlisting></para>
</informalexample>
</sect3>
<sect3 id="AGCC.SECACT.div.12">
<title>The Second Part of the klist Display&mdash;Expiration Dates and Times
</title>
<para><indexterm id="AGCC.SECACT.indx.17"><primary>tickets</primary><secondary>
expiration and renewal</secondary></indexterm> <indexterm id="AGCC.SECACT.indx.18">
<primary>accounts</primary><secondary>expiration information</secondary></indexterm> <indexterm
id="AGCC.SECACT.indx.19"><primary>password</primary><secondary>expiration
information</secondary></indexterm> <indexterm id="AGCC.SECACT.indx.20"><primary>
security</primary><secondary>commands</secondary><tertiary><command>klist
</command></tertiary></indexterm> <indexterm id="AGCC.SECACT.indx.21"><primary><command>
klist</command> command</primary></indexterm>The second part of the <command>
klist</command> display shows the dates and time that the principal's ticket-granting
ticket, account, and password expire:</para>
<itemizedlist>
<listitem><para>The first line shows the date and time the ticket-granting
ticket expires.  Before this happens, the principal should reinitialize it
by running <command>kinit</command> or logging in again to DCE. </para>
</listitem>
<listitem><para>The second line shows when the principal's account expires.
 If the account expires, the principal will be unable to log into DCE. To
remedy this, DCE administrators must change the principal's account expiration
date in the registry. </para>
</listitem>
<listitem><para>The third line shows the date the principal's password expires.
 Before this happens, the principal should change the password by using <command>
dcecp</command>. If the password expires, the principal will be unable to
log into DCE. To remedy this, DCE administrators must change the principal's
 password in the registry.  <!--When it expires, the principal must enter
a new password before logging into DCE. --></para>
</listitem>
</itemizedlist>
<para>A sample of the second part of the <command>klist</command> display
follows:</para>
<informalexample><para><programlisting>Identity Info Expires:	91/10/03:12:07:18
Account Expires:	91/12/31:12:00:00
Passwd Expires:		91/10/31:12:00:00</programlisting></para>
</informalexample>
</sect3>
<sect3 id="AGCC.SECACT.div.13">
<title>The Third Part of the <command>klist</command> Display&mdash;Tickets
</title>
<indexterm id="AGCC.SECACT.indx.22"><primary>tickets</primary><secondary>
viewing information</secondary></indexterm><indexterm id="AGCC.SECACT.indx.23">
<primary>ticket cache name</primary></indexterm><para>The third and final
part of the <command>klist</command> display shows the principal's ticket
information and the name of the principal's ticket cache.  The first  three
tickets labeled <literal>Server</literal> in the following display are the
tickets used after the principal logged in and obtained privilege attributes.
 The display for all principals has these entries. </para>
<para>The remaining tickets labeled <literal>Client</literal> show the principal's
ticket-granting ticket and service tickets.  In the listing for each ticket
after the word <literal>Client</literal>, the display shows the name of the
privilege server, a server that grants privilege attributes after the principal's
identity has been authenticated by the DCE Security Service.  The name of
the server to which the principal has tickets is shown after the <literal>
Server</literal> entry, and the dates and times these tickets are valid are
shown on the following line.  For example, in the following sample display,
the last line shows that the principal has a ticket to the server  named <literal>
file_server</literal>.  The lifetime of this  ticket is from 1:24 and 2 seconds
p.m.  on 10/2/91 to 12:07 and 18 seconds p.m.  on 10/3/91.   (The time is
shown in 24-hour format.) <?sml-point-size 11><!--no-op:  13--></para>
<informalexample><para><programlisting>Kerberos Ticket Information:
Ticket cache: /tmp/dcecred_17a80000
Default principal: music/mozart@dresden.com
Server: krbtgt/dresden@dresden.com
   valid 91/10/02:12:07:18 to 91/10/03:12:07:18
Server:dce/rgy@dresden.com
   valid 91/10/02:12:07:20 to 91/10/03:12:07:18
Server:dce/ptgt@dresden.com
   valid 91/10/02:12:07:49 to 91/10/03:12:07:18
Client:dce/ptgt@dresden       Server:krbtgt/dresden@dresden.com
   valid 91/10/02:12:07:50 to 91/10/03:12:07:18
Client:dce/ptgt@dresden.com   Server:dce/rgy@dresden.com
   valid 91/10/02:12:07:53 to 91/10/03:12:07:18
Client:dce/ptgt@dresden.com   Server:file_server@dresden.com
   valid 91/10/02:13:24:02 to 91/10/03:12:07:18</programlisting></para>
</informalexample>
<?sml-point-size 12>
<!--no-op:  14--></sect3>
</sect2>
<sect2 id="AGCC.SECACT.div.14">
<title>Destroying a Principal's Tickets</title>
<indexterm id="AGCC.SECACT.indx.24"><primary>tickets</primary><secondary>
destroying</secondary></indexterm><indexterm id="AGCC.SECACT.indx.25"><primary>
tickets</primary><secondary>status when process halts</secondary></indexterm>
<indexterm id="AGCC.SECACT.indx.26"><primary><command>kdestroy</command> command
</primary></indexterm><indexterm id="AGCC.SECACT.indx.27"><primary>security
</primary><secondary>commands</secondary><tertiary><command>kdestroy</command></tertiary>
</indexterm><para>Use the <command>kdestroy</command> command to invalidate
the tickets that a principal has acquired.  When the principal logs out, the
principal's tickets are not destroyed; they remain valid until they expire.
 DCE users may want to use <command>kdestroy</command> just before they log
out to ensure that no valid tickets remain. However, if the principal has
the kernel-resident ticket cache,  the principal's tickets are destroyed when
the principal's last process terminates.  This means that it is generally
not necessary to run <command>kdestroy</command> at logout.</para>
<para>The <command>kdestroy</command> command is described on the <command>
kdestroy(8sec)</command> reference page. <indexterm spanend="AGCC.SECACT.indx.9"
id="AGCC.SECACT.indx.28"><indexterm spanend="AGCC.SECACT.indx.10" id="AGCC.SECACT.indx.29"><!----></para>
</sect2>
</sect1>
<sect1 id="AGCC.SECACT.div.15" revisionflag="Changed">
<title>Adding Accounts</title>
<!----><para><indexterm id="AGCC.SECACT.indx.30"><primary>accounts</primary>
<secondary>creating</secondary></indexterm>Use the <command>dcecp account
create</command> command to add accounts to the registry.  Information that
is associated with accounts falls roughly into the following two categories: 
</para>
<itemizedlist>
<listitem><para>User information similar to that typically found in the <filename>
/etc/passwd</filename> file. </para>
</listitem>
<listitem><para>Authentication policy that lets you control the account's
access to the network.  Authentication policy establishes account and password
validity, account expiration policy, and ticket expiration policy.  The tighter
you control authentication policy, the more secure your cell is, but the more
processing overhead you can accrue. </para>
</listitem>
</itemizedlist>
<para>Both types of information are supplied as attributes in standard  <command>
dcecp</command> attribute lists or as attribute options.</para>
<para>Note that authentication policy can also be set for the registry.  If
the registry policy differs from the policy that you enter for an account,
the stricter policy applies.  (See Chapter 35 <!-- the chapter titled "Maintaining--><!--
Policies and Properties" -->for more information on contradictory policy.)
</para>
<para>Table 31-1 <!--  titled "Account Information Summary" -->lists the attribute
options used to create accounts.  Note that the options described  in this
table can also be supplied without the dashes in attribute lists. <!-- .iX
"-[" "accounts" "summary of information"--></para>
<?sml-need 2i>
<?og-ChangeStart def,13498,R1.2.2,maxtktrenew not used in DCE">
<?og-ChangeStart enh,13561,R1.2.2,adding -usertouser option">
<table frame="all" orient="Port" remap="center">
<title>Attribute Options to Create Accounts</title>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec align="Left" colname="col1"
colnum="1" colsep="1" colwidth="1*" rowsep="1">
<colspec align="Left" colname="col2"
colnum="2" colsep="1" colwidth="1.5*" rowsep="1">
<thead>
<row><entry rowsep="1"><literal>
Option</literal></entry><entry rowsep="1"><literal>Meaning</literal></entry>
</row></thead><tbody><row><entry><literal>-acctvalid {yes|no}</literal></entry>
<entry>A flag that determines account validity.  If you set this flag to  <literal>
no</literal>, the account is invalid and the account principal cannot log
 into the account.   The default is <literal>yes</literal>.</entry></row>
<row><entry><literal>-client {yes|no}</literal></entry><entry>A flag that
indicates whether or not the account is  for a principal that can act as a
client.  If you set this flag to  <literal>yes</literal>, the principal is
able to log into the account and acquire tickets for authentication.  The
default is <literal>yes</literal>.</entry>
</row>
<row>
<entry>
<option>description</option> <symbol role="Variable">string</symbol></entry>
<entry>
A text string in portable character set (PCS) format that is typically used
to describe the use of the account.  No default.</entry></row><row><entry><literal>
-dupkey {yes|no}</literal></entry><entry>A flag that determines if tickets
issued to the account's  principal can have duplicate keys.  The default is <literal>
no</literal>.</entry>
</row>

<row><entry><option>expdate</option></entry>
<entry>The date (in ISO timestamp format <symbol role="Variable">YY-MM-DD-hh:mm:ss
</symbol>) on  which the account expires.  To renew a account after it expires,
change  the date.  The default is <literal>none</literal>, meaning the account
never expires.</entry></row><row><entry><literal>-forwardabletkt {yes|no}
</literal></entry><entry>A flag determining whether a new ticket-granting
ticket with a network address that differs from the present TGT's network
address can be issued to the account's principal.   (The <option>proxiabletkt
</option> attribute performs the same function for service tickets.)  The
default is <literal>yes</literal>.</entry></row><row><entry><option>goodsince
</option> <symbol role="Variable">date</symbol></entry><entry>The date and
time (in ISO timestamp format <symbol role="Variable">YY-MM-DD-hh:mm:ss</symbol>)
 that the account was last known to be in an uncompromised state.   Any tickets
granted before this date are invalid.   Control over this date is especially
useful if you know that  an account's password was compromised.  Changing
the password can prevent the unauthorized  principal from accessing the system
again by using that password, but does not prevent the principal from accessing
the system components for which tickets were obtained fraudulently before
the password was changed.  To eliminate the principal's access to the system,
 the tickets must be canceled.  Set the <option>goodsince</option> attribute
 to the date and time the compromised password was changed to invalidate all
tickets issued before that time and eliminate the unauthorized  principal's
system access.  When the account is created,  the <option>goodsince</option>
attribute is set to the current date.</entry></row><row><entry><option>group
</option> <symbol role="Variable">group_name</symbol></entry><entry>The name
of the group that is associated with the account.  This attribute  must be
supplied to create an account; there is no default.</entry></row><row><entry><option>
home</option> <symbol role="Variable">dir_name</symbol></entry><entry>The
directory in which the principal is placed at login.  No default.</entry>
</row><row><entry><option>organization</option> <symbol role="Variable">org_name
</symbol></entry><entry>The name of the organization that is associated with
the account.  This attribute  must be supplied to create an account; there
is no default. <indexterm id="AGCC.SECACT.indx.31"><primary>organization name
</primary></indexterm></entry><entry rowsep="1"></entry></row><row><entry><option>
password</option> <symbol role="Variable">password</symbol></entry><entry>
The required password for the account in plaintext. The system  encrypts the
password you supply.  No default.</entry></row><row><entry><literal>-postdatedtkt
{yes|no}</literal></entry><entry>A flag that determines whether or not tickets
with a start time in the future can be issued to the account's principal.
 The default is <literal>no</literal>.</entry></row><row><entry><literal>
-proxiabletkt {yes|no}</literal></entry><entry>A flag determines whether or
not a new ticket with a different  network address than the present ticket
can be issued to the account's  principal.  (The <option>forwardabletkt</option>
attribute option performs the same function for  ticket-granting tickets.)
The default is <literal>no</literal>.</entry></row><row><entry><literal>-pwdvalid
{yes|no}</literal></entry><entry>A flag that determines whether the current
password is valid.   If this flag is set to <literal>no</literal>, the account
password has expired and the principal will be prompted to change it the next
time that the principal  logs into the account.  The default is <literal>
yes</literal>.   </entry></row><row><entry><literal>-renewabletkt {yes|no}
</literal></entry><entry>The Kerberos V5 renewable ticket feature is not 
currently used by DCE; any use of the renewable  ticket attribute is unsupported
at the present time. <!-- A flag that determines if the --><!-- ticket-granting
ticket issued to the account's principal can be--><!-- renewed.  If this flag
is set to \*Lyes\*O, --><!-- the authentication service renews the --><!--
ticket-granting ticket if its lifetime is valid.  The default is \*Lyes\*O.-->
</entry></row><row><entry><literal>-server {yes|no}</literal></entry><entry>
A flag that indicates whether or not the account is for a principal that can
act as a server.  If the account is  for a server that engages in authenticated
communications, set this  flag to <literal>yes</literal>.  The default is <literal>
yes</literal>.</entry>
</row>

<row><entry><option>shell</option> <symbol
role="Variable">path_to_shell</symbol></entry><entry>The shell that is executed
when a principal logs in.</entry></row><row><entry><literal>-stdtgtauth {yes|no}
</literal></entry><entry>A flag that determines whether or not tickets issued
to the  account's principal can use the ticket-granting-ticket  authentication
mechanism.  The default is <literal>yes</literal>.
</entry>
</row>

<row><entry><literal>
-usertouser {yes|no}</literal></entry><entry>For server principals, a flag
that determines whether or not the server must use user-to-user authentication.
The value is either <literal>yes</literal> (must use authentication based
on user-to-user protocol) or <literal>no</literal> (uses authentication based
on  server-key ticket protocol). The default is <literal>no</literal>.</entry>
</row><row><entry><option>maxtktlife</option> <symbol role="Variable">hours
</symbol></entry>
<entry>
The maximum ticket lifetime.  This is the maximum
amount of time in hours  that a ticket can be valid.   When a client requests
a ticket to a server, the lifetime granted to the  ticket takes into account
the <literal>maxtktlife</literal> attribute value for both  the server and
the client.  In other words, the lifetime cannot exceed  the shorter of the
server's or client's maximum ticket lifetime.  
</entry>
</row>

<row>
<entry rowsep="0"></entry>
<entry rowsep="0">If you do not specify a <literal>maxtktlifetime</literal> attribute value for
an account, the <literal>maxtktlifetime</literal> attribute value defined
for the registry authorization policy is used.  (See Chapter 35.) 
</entry>
</row>

<?sml-need 30>
<row>
<entry><option>maxtktrenew</option> <symbol role="Variable">hours</symbol>
</entry>
<entry>The maximum ticket renewable.  This is the amount of time in hours
before a  principal's ticket-granting ticket  expires and that principal must
log into the system again to reauthenticate  and obtain another ticket-granting
ticket.  
</entry>
</row>

<row>
<entry></entry>
<entry>
The lifetime of the principal's service tickets can never exceed
the lifetime of the principal's  ticket-granting ticket.  The shorter you
make maximum certificate renewable,  the greater the security of the system.
 However, since principals must log in again to renew their ticket-granting
ticket, the time should take into consideration user convenience and the
level of security required.  
</entry>
</row>

<row>
<entry rowsep="0"></entry>
<?sml-space .3>
<entry>
If you do not specify a <literal>
maxtktrenew</literal> attribute value for an account,  the <literal>maxtktrenew
</literal> attribute value defined for the registry authorization  policy
is used.  (See Chapter 35.) Renewable ticket functionality is not currently
used by DCE RPC  when refreshing service tickets. However, it is supported
by the DCE Security Server and is useful for Kerberos V5 applications that
use the DCE Security Server as a KDC.</entry></row></tbody></tgroup></table>
<?og-ChangeEnd enh,13561,R1.2.2,adding -usertouser option">
<?og-ChangeEnd def,13498,R1.2.2,maxtktrenew not used in DCE">
<note><para>The maximum ticket lifetime and maximum ticket renewable can be
set as  registry properties for the registry as a whole with the <literal>
dcecp registry  modify</literal>  command.  When they are set with the <command>
dcecp account create</command> or <literal>account  modify</literal>  commands,
they apply only to a specific account.</para>
</note>
<!-- .iX "-]" "accounts" "summary of information"-->
<!-- .iX "-]" "accounts" "summary of information"-->
<sect2 id="AGCC.SECACT.div.16">
<title>Setting Ticket Lifetimes</title>
<para><indexterm id="AGCC.SECACT.indx.32"><primary>tickets</primary><secondary>
setting lifetimes</secondary></indexterm>You should be aware of two other
options set by the  <command>dcecp registry modify</command> command: default
ticket  lifetimes and minimum ticket lifetime.</para>
<itemizedlist>
<listitem>
<?sml-need 3>
<para>Minimum Ticket Lifetime&mdash;The shortest possible  lifetime that can
be assigned to a ticket.   Note that the actual effective value of minimum
ticket lifetime is  affected by default certificate lifetime.  </para>
</listitem>
<listitem><para>Default Ticket Lifetime&mdash;The lifetime granted for tickets,
unless the principal specifically requests a different lifetime.  Although
a principal can request a  specific lifetime for a ticket,  the majority accept
the default lifetime. (If a principal requests a ticket lifetime of 0 (zero),
the default lifetime is  assigned to the ticket.)  </para>
<para>Note that the actual effective value of the default ticket lifetime
is  affected by the maximum certificate lifetime.  </para>
</listitem>
</itemizedlist>
<para>The actual lifetimes assigned to tickets depends on rules enforced by
the  DCE Security Service regarding the settings of the maximum ticket lifetime,
 default ticket lifetime, and minimum ticket lifetime.  These rules are  as
follows:</para>
<itemizedlist>
<listitem><para>The maximum ticket lifetime can never be larger than the renewable
ticket lifetime (in other words,  <literal>max_life = min (max_life, renewable_life)
</literal>)  or less than 60 seconds.   If the maximum ticket lifetime is
 larger than the renewable ticket lifetime, then the   renewable ticket lifetime
is used as the maximum ticket lifetime.   For example, suppose an account
 is set to 15 hours.  If you set the renewable ticket lifetime to 20 hours,
the effective maximum ticket lifetime is not 20, but 15 hours.  </para>
</listitem>
<listitem><para>The default ticket lifetime can never be larger than the maximum
 ticket lifetime (in other words, <literal>default_life = min (default_life,
max_life)</literal>) or less than 60 seconds.  If the  default ticket lifetime
is larger than the maximum ticket lifetime, then the maximum ticket lifetime
is used as the default ticket lifetime.  For example, suppose registry policy
specifies a default ticket lifetime of 25 hours.  If you set the registry's
 maximum ticket lifetime to 15 hours,  the registry's effective default certificate
lifetime is not 25, but 15 hours.</para>
</listitem>
<listitem><para>The minimum ticket lifetime can never be larger than the default
certificate lifetime (in other words,  <literal>min_life = min (min_life,
default_life)</literal>)  or less than 60 seconds.  If the minimum ticket
lifetime is larger than the default certificate lifetime, then the default
ticket lifetime is used as the minimum ticket lifetime.  For example, suppose
registry policy specifies a default ticket lifetime of 10 hours.  If you set
an account's minimum ticket lifetime to 15 hours,  the account's effective
minimum ticket lifetime is not 15, but 10 hours.</para>
</listitem>
</itemizedlist>
<para><?sml-need 4>Although <command>dcecp</command> lets you enter values
contrary to the  rules and displays these values when you view the account's
policies (with the <command>account show</command> command), the values used
are the ones described in the rules, not the ones you entered. </para>
<note><para>To be exact, clocks in the network must be synchronized for the
times  that are associated with registry data.</para>
</note>
</sect2>
<sect2 id="AGCC.SECACT.div.17">
<title>Ticket-Granting Ticket Lifetimes and Service Ticket Lifetimes</title>
<para>The authentication service never grants a principal a service ticket
with a lifetime that exceeds the time remaining in the principal's ticket-granting
ticket lifetime.  For example, if 2 hours remain in the life of a principal's
ticket-granting ticket and the principal requests or accepts a default of
4 hours for a service ticket's lifetime, only the 2-hour lifetime is granted.
</para>
<para>If the renewable ticket flag (the <literal>renewabletkt</literal> attribute)
is set on for a principal's account, the lifetime of the principal's ticket-granting
ticket also affects the renewal of service tickets.  No service ticket is
renewed with a lifetime that exceeds the remaining lifetime of the principal's
ticket-granting ticket.  Service tickets are normally renewed for the lifetime
that is allocated to the original ticket.  If the original time exceeds the
lifetime of the ticket-granting ticket, the ticket is renewed only for the
time remaining to the ticket-granting ticket. <indexterm spanend="AGCC.SECACT.indx.32"
id="AGCC.SECACT.indx.33"><!----></para>
</sect2>
<sect2 id="AGCC.SECACT.div.18">
<title>Adding Accounts Example</title>
<!----><indexterm id="AGCC.SECACT.indx.34"><primary><command>dcecp</command>
commands</primary><secondary><command>account create</command></secondary>
</indexterm><para>Use the <command>dcecp account create</command> command
to create accounts.   When you use the <command>account create</command> command,
you must supply the name  of the principal for which the account is being
created and the group and  organization with which the account is associated.
 In addition, you must  supply your password with the <option>mypwd</option>
option to verify your  identity.  If you do not enter your password, <command>
dcecp</command> will prompt you.   All other attributes can be allowed to
default.   Note that if you are prompted for the password,  the password you
type is not displayed on the screen.  </para>
<para><?sml-need 3>Because you are required to enter your password, you must
run the  <command>account create</command>  command in interactive mode. 
You cannot run it in command-line mode where your  password cannot be prevented
from displaying on the screen.</para>
<para>The following example shows the <command>dcecp account create</command>
command used to create an account for the principal <literal>mahler</literal>,
which is associated with the group <literal>symphonists</literal> and the
organization <literal>classic</literal>.  All other account attributes are
allowed to default.</para>
<informalexample><para><programlisting>dcecp> <literal>account create mahler -group symphonists -organization classic \</literal>  
> <literal>-password passwd -mypwd cellpwd</literal>
dcecp></programlisting></para>
</informalexample>
<para>Note that you may create multiple accounts with one   <command>account
create</command> command.  To do so, enclose the names of the  principals
for whom the accounts are being created in braces,  separated by spaces. 
 For example, to create accounts for the principals <literal>bach</literal>,
 <literal>britten</literal>, and <literal>mahler</literal>, you could enter
the following:</para>
<informalexample><para><programlisting>dcecp> <literal>account create {bach britten mahler} -group symphonists \
</literal>
> <literal>-organization classic -password music -mypwd cellpwd</literal>
dcecp></programlisting></para>
</informalexample>
<para>When you create multiple accounts each account is assigned the same
 attributes.  This means that, in the example, the accounts for <literal>
bach</literal>,  <literal>britten</literal>, and <literal>mahler</literal>
are all associated with the  <literal>symphonists</literal> group and <literal>
classic</literal> organization, and they are  all assigned the password <literal>
music</literal>.  You may find it useful to create  multiple accounts this
way for principals that all belong to the same group  and organization.  Notify
users whose accounts were created this way to  change their passwords immediately. <indexterm
spanend="AGCC.SECACT.indx.34" id="AGCC.SECACT.indx.35"><!----></para>
</sect2>
<sect2 id="AGCC.SECACT.div.19">
<title>Modifying Accounts</title>
<!----><indexterm id="AGCC.SECACT.indx.36"><primary>accounts</primary><secondary>
changing</secondary></indexterm><indexterm id="AGCC.SECACT.indx.37"><primary><command>
dcecp</command> commands</primary><secondary><command>account modify</command></secondary>
</indexterm><para>The <command>dcecp account modify</command> command with
the  allows you to modify accounts.  You can modify any of the account attributes. 
</para>
<para>When you modify accounts, you must supply your password with the  <option>
mypwd</option> option to verify your identity.  Note that if prompted for
 the password, the  password you type is not displayed on the screen.  If
you do not  enter a password, you are prompted for it.  Because you are required
to enter your password, you must run the  <command>account modify</command>
 command in interactive mode.  You cannot run it in command-line mode where
your  password cannot be prevented from displaying on the screen.</para>
<para>The following example shows how to use the <command>account modify</command>
command to specify a new home directory for <literal>mahler</literal>'s account:
</para>
<informalexample><para><programlisting>dcecp> <literal>account modify mahler -home /.../music/fs/users/mahler/concert \
</literal>
> <literal>-mypwd cellpwd</literal>
dcecp></programlisting></para>
</informalexample>
<para>Note that you can also use the <option>change</option> option with  <command>
account modify</command>  to supply the changes in an attribute list.   The <option>
add</option> and <option>remove</option> options are not supported with the <command>
account modify</command> command  because each account attribute must be present
and must have a value.</para>
<para><indexterm spanend="AGCC.SECACT.indx.36" id="AGCC.SECACT.indx.38"><indexterm
spanend="AGCC.SECACT.indx.37" id="AGCC.SECACT.indx.39"><!----></para>
</sect2>
<sect2 id="AGCC.SECACT.div.20">
<title>Deleting Accounts</title>
<!----><indexterm id="AGCC.SECACT.indx.40"><primary>accounts</primary><secondary>
deleting</secondary></indexterm><indexterm id="AGCC.SECACT.indx.41"><primary><command>
dcecp</command> commands</primary><secondary><command>account delete</command></secondary>
</indexterm><para>The following example illustrates the use of the <command>
dcecp account delete</command>  command to delete the account for the principal <literal>
mahler</literal>:</para>
<informalexample><para><programlisting>dcecp> <literal>account delete  mahler
</literal>
dcecp></programlisting></para>
</informalexample>
<para>If you delete a group or organization, you will also automatically delete
any accounts  that are associated with that group or organization.</para>
<para>You can delete multiple accounts with one <command>account delete</command>
 command.  To do so enclose the names of the account principals in braces,
 separated by spaces.  For example, to delete accounts for <literal>bach</literal>,
 <literal>britten</literal>, and <literal>mahler</literal>, you would enter
</para>
<informalexample><para><programlisting>dcecp> <literal>account delete {bach britten mahler}
</literal>
dcecp></programlisting></para>
</informalexample>
<para><!----></para>
</sect2>
</sect1>
<sect1 id="AGCC.SECACT.div.21">
<title>Creating, Maintaining, and Deleting Keytab Files</title>
<!---->
<!-- .iX "-[" "keys" "machine and server accounts"--><indexterm id="AGCC.SECACT.indx.42">
<primary>accounts</primary><secondary>server</secondary></indexterm><indexterm
id="AGCC.SECACT.indx.43"><primary>accounts</primary><secondary>machine</secondary>
</indexterm><para>The following <command>dcecp</command> commands allow you
to create, maintain, and delete keytab files:</para>
<variablelist>
<varlistentry role="linebreak">
<term><command>keytab create</command></term><listitem><para>Creates keytab
files and all their key entries.  </para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><command>keytab delete</command></term><listitem><para>Deletes keytab
files and all their key entries.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>keytab add</command></term><listitem><para>Adds key entries
to keytab files.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><command>keytab remove</command></term><listitem><para>Removes key entries
from keytab files.</para>
</listitem></varlistentry>
</variablelist>
<para>The following subsections describe how to manage keytab files.</para>
<sect2 id="AGCC.SECACT.div.22">
<title>The Keytab File</title>
<para><indexterm id="AGCC.SECACT.indx.44"><primary>keytab file</primary><secondary>
dced object</secondary></indexterm>Keytab files are stored on the same machine
as the servers  whose keys they contain.  You can access them remotely and
locally using  <command>dcecp</command>.  For remote access, <command>dcecp
</command> uses  <filename>dced</filename> interfaces.  The <option>local
</option> option to the  <command>dcecp keytab</command> command allows  you
to access the local keytab files without using <filename>dced</filename>.
</para>
<para>Because <filename>dced</filename> provides remote access to the keytab
files, the  files are defined as <filename>dced</filename> objects, and those
objects are stored in  the <filename>dced</filename>-controlled portion of
the namespace under the <command>keytab</command> directory.  The <filename>
dced</filename> keytab object consists of a UUID to identify  the object,
an optional annotation, and the name of the file  that actually stores the
server keys on the local machine.   This object is usually a file.</para>
<para>Note that actual server keys are not stored in the keytab object, but
 in the file stored on the local machine.</para>
<para>The pathname of the <filename>dced</filename> keytab object is</para>
<informalexample><para><programlisting><userinput>/.:/hosts/<symbol role="Variable">
hostname</symbol>/<literal>config/keytab/</literal><symbol role="Variable">
keytab_name</symbol></userinput></programlisting></para>
</informalexample>
<para>where:</para>
<variablelist>
<varlistentry>
<term><symbol role="Variable">hostname</symbol></term><listitem><para>Is the
name of the host on which the <filename>dced</filename> process resides.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">keytab_name</symbol></term><listitem><para>
Is the name of the keytab file.</para>
</listitem></varlistentry>
</variablelist>
<para>The pathname to the local keytab file is</para>
<informalexample><para><programlisting><userinput>/opt/<symbol role="Variable">
dcelocal/</symbol><symbol role="Variable">keytab_path_name</symbol></userinput></programlisting></para>
</informalexample>
<para>where:</para>
<variablelist>
<varlistentry role="linebreak">
<term><symbol role="Variable">keytab_path_name</symbol></term><listitem><para>
Is the path name to the keytab file on the local node. <indexterm id="AGCC.SECACT.indx.45">
<primary>keytab file</primary><secondary>protecting</secondary></indexterm></para>
</listitem></varlistentry>
</variablelist>
<sect3 id="AGCC.SECACT.div.23">
<title>Protecting Keytab Files</title>
<para>The local keytab files must be adequately protected, and they must not
be available on the network.  As they are used in the default DCE implementation,
the keytab files contain principal keys, which are the basis of DCE security.
 If these keys are compromised, network security can also be compromised.
The calls that access the keytab file use <literal>rpc_c_protect_level_pkt_privacy
</literal>. This protection level performs a Data Encryption Standard (DES)
encryption on the data being passed.  The  <literal>dcecp keytab -noprivacy
</literal> option allows you to specify that your  site's default protection
level should be used instead.</para>
<para>Create a separate individual keytab file for each server principal that
runs on each local node.  Servers that share the same keytab file can access
each other's keys and thus impersonate each other. <!-- As described previously,
the name of the default keytab file is \*L/krb5/v5srvtab\*O.  -->Protect the
keytab files so that they are readable only by root.  If you do this, the
servers must be started by root in order to read their keytab files and obtain
their key during login. </para>
<para>When you create or change server keys, you can name a different keytab
file for each server that runs on the local node.  Protect the file  so that
it is readable only by the server whose key it contains.  Then set the <command>
setuid</command> bit for the server file to the server's identity so that
the server can access the keytab file and obtain its key. <!-- --></para>
</sect3>
<sect3 id="AGCC.SECACT.div.24">
<title>Server and Machine Key Version Numbers</title>
<!-- --><indexterm id="AGCC.SECACT.indx.46"><primary>keys</primary><secondary>
version numbers</secondary></indexterm><para>When keys are added to the keytab
file, each  is assigned a version number that ranges from 1 to 255.  Whenever
server or machine keys change (automatically or explicitly), the key's version
number is incremented.  Version numbers allow two or more keys to exist for
any given server or machine.  When keys are changed, any servers or machines
that are still using tickets granted under the older unchanged version of
the key run without interruption until the ticket expires naturally.  When
the ticket expires, the server or machine reauthenticates and obtains the
new key. </para>
<para>If you use the <option>registry</option> option to the <command>keytab
add</command> command, old keys are automatically deleted, if possible.  If
you do not use this option, you should occasionally list  the contents of
the keytab file by using the <command>keytab list</command> command, and use
the <command>keytab delete</command> command to delete any old versions that
are obsolete.  </para>
<note><indexterm id="AGCC.SECACT.indx.47"><primary>keys</primary><secondary>
deleting from keytab file</secondary></indexterm><indexterm id="AGCC.SECACT.indx.48">
<primary>tickets</primary><secondary>deleted passwords</secondary></indexterm>
<para>Take care when you are deleting keys from the keytab file.  When principal
keys are changed,  tickets can exist that are based on the key that you deleted.
   If you delete a key from the keytab file,   any active tickets that are
based on the deleted key will not be accepted by  servers, and clients holding
those tickets will get authentication failures.</para>
</note>
<!----></sect3>
</sect2>
<sect2 id="AGCC.SECACT.div.25" revisionflag="Changed">
<title>Creating and Maintaining Keys and Keytab Files</title>
<para><indexterm id="AGCC.SECACT.indx.49"><primary>keytab file</primary><secondary>
adding keys</secondary></indexterm></para>
<para>Two commands allow you to create key entries:</para>
<variablelist>
<varlistentry role="linebreak">
<term><command>keytab create</command></term><listitem><para>Creates&ensp;&ensp;keytab&ensp;&ensp;files,
the keytab file entries,  and the <filename>dced</filename> keytab object.
 </para>
</listitem></varlistentry>
<varlistentry>
<term><command>keytab add</command></term><listitem><para>Adds key entries
to existing keytab files.</para>
</listitem></varlistentry>
</variablelist>
<para>When you run both commands, you supply the name of the keytab file to
either  create or modify.   <!-- If you do not specify --><!-- a keytab file
name, the default \*L/krb5/v5srvtab\*O is used.--></para>
<para>Table 31-2 lists the other options you can supply to  the <command>
keytab create</command> and <literal>add</literal> commands.</para>
<?sml-need 5i>
<?og-ChangeStart def,13467,R1.2.2,added -entry option">
<table frame="all" orient="Port" remap="center" role="page-wide">
<title>The keytab create and keytab add Options</title>

<tgroup cols="2" colsep="1" rowsep="1">
<colspec align="Left" colname="col1" colnum="1" rowsep="1" colsep="1" colwidth="111*" rowsep="1">
<colspec align="Left" colname="col2" colnum="2" colsep="1" rowsep="1" colwidth="232*" rowsep="1">
<thead>
<row>
<entry rowsep="1"><literal>Option</literal></entry>
<entry rowsep="1"><literal>Meaning</literal></entry></row>
</thead>

<tbody>
<!-- _--><row><entry><option>local</option></entry><entry>Accesses the keytab
file without using <filename>dced</filename>. </entry></row><row><entry><option>
entry</option></entry><entry>Creates only the <filename>dced</filename> configuration
information, not the actual key table.</entry></row><row><entry><option>noprivacy
</option></entry><entry>Specifies that the protection level used should be
 the default protection level for your site instead of <literal>rpc_c_protect_level_pkt_privacy
</literal>. </entry></row><row><entry><option>member</option> <symbol role="Variable">
name</symbol></entry><entry>The name of the principal (server or machine)
whose key you are creating or changing.  You can supply multiple names in
a list.  If you supply a list, all principals  named in the list are assigned
the same key.</entry></row><row><entry><option>key</option> <symbol role="Variable">
key</symbol></entry><entry>The plain text key to the account.  This option
cannot be used with  the <option>random</option> option.</entry></row><row>
<entry><option>random</option></entry><entry>Generates a random key. If you
use this option, you must also use the <option>registry</option> option to
add the randomly generated key to the server's or machine's account in the
registry.  This option cannot be used with the  <option>key</option> option.
 </entry></row><row><entry><option>registry</option></entry><entry>Updates
the principal's key in the registry to  match the key you enter (or generate
automatically) for the key in the keytab file.  Use it to ensure that the
principal's key in the registry and the keytab file are synchronized when
you change a principal's key in the keytab file. </entry></row>
<?sml-need 6>
<!--	_--><row><entry>
</entry>
<entry>This option is required when you use the <option>
random</option> option.  Using this option may require you  to run the <command>
dcecp login</command> command to ensure your network identity is  appropriate
for modifying the registry database. </entry>
</row>

<row><entry><option>
version</option> <symbol role="Variable">number</symbol></entry><entry>Specifies
a version number for the key.  It is required  if you do not use the <option>
registry</option> option.</entry></row><row><entry><option>storage</option> <symbol
role="Variable">local_file_name</symbol></entry><entry>The pathname of the
local file to be created.  This option is used only  for the <command>keytab
create</command> command.  When you add entries to an  existing keytab file,
you identify the file by its <filename>dced</filename> object name. </entry>
</row><row><entry><option>data</option> <symbol role="Variable">keys</symbol></entry>
<entry><para>The server principal name and keys in the format  </para><?sml-point-size 11><para><programlisting><userinput><symbol
role="Variable">principal_name key_type </symbol>{<symbol role="Variable">
 version</symbol>} {<symbol role="Variable">key_value}</symbol><?sml-point-size 12>

</userinput></programlisting></para></entry></row></tbody></tgroup></table>
<?og-ChangeEnd def,13467,R1.2.2,added -entry option">
<sect3 id="AGCC.SECACT.div.26">
<title>Creating a Keytab File</title>
<!----><para>Use the <command>keytab create</command> command to create keytab
files, entries in the  files, and the corresponding <filename>dced</filename>
object.  When you use this command,  you must supply the pathname of the <filename>
dced</filename> object to be created as an argument,  the <literal>storage
</literal> option to specify the keytab's local, the  <literal>data</literal>
option to specify the name of the  server principal and the keys, and any
of the appropriate options listed in  Table 31-2.</para>
<para>This <literal>data</literal> option is in the form</para>
<informalexample><para><programlisting><userinput><symbol role="Variable">
principal_name</symbol> <symbol role="Variable">key_type</symbol> {<symbol
role="Variable">version</symbol>} {<symbol role="Variable">key_value</symbol>}
</userinput></programlisting></para>
</informalexample>
<para><?sml-need 5>where:</para>
<variablelist>
<varlistentry role="linebreak">
<term><symbol role="Variable">principal_name</symbol></term><listitem><para>
Is the name of the server principal for which the keytab file is being created.
</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">key_type</symbol></term><listitem><para>Is a
code that specifies whether the key is stored in plain text or in  DES encrypted
format:</para>
<itemizedlist>
<listitem><para><literal>des</literal> indicates DES encryption.</para>
</listitem>
<listitem><para><literal>plain</literal> indicates plain text.</para>
</listitem>
</itemizedlist>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">version</symbol></term><listitem><para>Is the
key's version number.  If you supply no version number, the key  is assigned
a number of <literal>1</literal>.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">key_value</symbol></term><listitem><para>Unless
you specified the <option>random</option> option to randomly generate keys,
you  must supply a key value.  If <symbol role="Variable">key_type</symbol>
is <literal>plain</literal>, you   supply the key in plain text.  If <symbol
role="Variable">key_type</symbol> is <literal>des</literal>, you  must supply
a DES encrypted key.</para>
</listitem></varlistentry>
</variablelist>
<para>The following sample command performs these tasks:</para>
<itemizedlist>
<listitem><para>Creates the <filename>dced</filename> keytab object  <filename>
/.:/hosts/music/config/keytab/svr4_key</filename> </para>
</listitem>
<listitem><para>Creates the keytab file named  <filename>/opt/dcelocal/keys/svr4_key
</filename> in the <literal>keys</literal> directory  on the local machine
named <literal>music</literal> </para>
</listitem>
<listitem><para>Creates an plain text key entry in the file for principal <literal>
mahler</literal>  and assigns it a version number of <literal>3</literal>.
</para>
<informalexample><para><programlisting>dcecp> <literal>keytab create /.:/hosts/music/config/keytab/svr4_key -attr \</literal> 
> <literal>{{storage /opt/dcelocal/keys/svr4_key} \</literal> 
> <literal>{data {mahler plain 3 mon#Repos}}} </literal>
dcecp></programlisting></para>
</informalexample>
</listitem>
</itemizedlist>
</sect3>
<sect3 id="AGCC.SECACT.div.27">
<title>Adding Entries to a Keytab File</title>
<!----><para>Use the <command>keytab add</command> command to add entries
to an existing keytab file.   When you use this command, you must supply the
name of the keytab file's  <filename>dced</filename> object and any of the
options described in Table 31-2.</para>
<para>The following command adds a key to the keytab file named <literal>
kfile_3</literal>  for the server principal <literal>svr_3</literal>.  The
key is generated  automatically, and the registry is updated to be synchronized
with the keytab file.</para>
<informalexample><para><programlisting><?sml-need 2>dcecp> <literal>keytab add /.:/hosts/foo/config/keytab/kfile_3 \
</literal>
> <literal>-member svr_3 -random -registry</literal>
dcecp></programlisting></para>
</informalexample>
<!--no-op:  --></sect3>
<sect3 id="AGCC.SECACT.div.28">
<title>Removing Entries from Keytab Files</title>
<!--no-op:  --><indexterm id="AGCC.SECACT.indx.50"><primary><command>dcecp
</command> commands</primary><secondary><command>keytab remove</command></secondary>
</indexterm><indexterm id="AGCC.SECACT.indx.51"><primary>key entries</primary>
<secondary>deleting from keytab file</secondary></indexterm><para>You can
remove entries from a keytab file by using the <command>dcecp keytab remove
</command> command.   When you use this command, you must supply the name
of the keytab file's  <filename>dced</filename> object.</para>
<para>When you use the <command>keytab remove</command> command, you must
supply  the name of the keytab file and the name of the principal (or a list
 of principals) for which to delete keys.</para>
<para>You can also supply the <option>version</option> option to specify the
 version number of the key or keys to be deleted and the  <option>type</option>
option to specify the type of keys to be deleted  (<literal>plain</literal>
for plain text keys or <literal>des</literal> for DES encrypted keys). If
you use the <option>version</option> or <option>type</option> options, only
keys  of the specified version or type will be deleted.</para>
<para>The following command removes all DES keys for the principal <literal>
svr_2</literal> in the keytab file <filename>/.:/hosts/foo/config/keytab/kfile_3
</filename>:</para>
<informalexample><para><programlisting>dcecp> <literal>keytab remove /.:/hosts/foo/config/keytab/kfile_3 \
</literal>
> <literal>-members svr_2 -type des</literal>
dcecp></programlisting></para>
</informalexample>
</sect3>
</sect2>
<sect2 id="AGCC.SECACT.div.29">
<title>Removing Keytab Files</title>
<!--no-op:  --><indexterm id="AGCC.SECACT.indx.52"><primary><command>dcecp
</command> commands</primary><secondary><command>keytab delete</command></secondary>
</indexterm><indexterm id="AGCC.SECACT.indx.53"><primary>keytab file</primary>
<secondary>deleting</secondary></indexterm><para>You can remove local and
keytab files and their associated <filename>dced</filename> objects by using
the <command>dcecp keytab delete</command> command.</para>
<para>To delete the local keytab file and the <filename>dced</filename> object,
 supply the local filename  to the command.  You can delete multiple keytab
files with one command by  enclosing the names in braces and separating them
with spaces.   For example, the following deletes the keytab files and  the <filename>
dced</filename> objects  <filename>/.:/hosts/foo/config/keytab/kfile_2</filename>
and  <filename>/.:/hosts/foo/config/keytab/kfile_3</filename>.</para>
<informalexample><para><programlisting>dcecp> <literal>keytab delete {/.:/hosts/foo/config/keytab/kfile_2 \
</literal>
> <filename>/.:/hosts/foo/config/keytab/kfile_3}</filename>
dcecp></programlisting></para>
</informalexample>
<para>To delete only the <filename>dced</filename> object, use the <option>
entry</option> option. </para>
<para>For example, the following command removes the <filename>dced</filename>
object named <filename>/.:/hosts/foo/config/keytab/kfile_3</filename>, but
leaves the local  file <filename>/opt/</filename><symbol role="Variable">
dcelocal</symbol>/<filename>keys/kfile_3</filename> untouched.</para>
<informalexample><para><programlisting>dcecp> <literal>keytab delete -entry /.:/hosts/foo/config/keytab/kfile_3 
</literal>
dcecp></programlisting></para>
</informalexample>
<!----></sect2>
<sect2 id="AGCC.SECACT.div.30">
<title>Changing Server and Machine Passwords in the Keytab File</title>
<!----><para>Passwords for all principals must be changed when they expire.
  Human principals can use their platform's <literal>chpass</literal> command
to change their password.  The <filename>dced</filename> security validation
service automatically changes the machine's password as necessary by assigning
a randomly generated password.  This daemon is supplied with DCE and runs
on each local machine that engages in network access.  Generally, you can
assume that servers or applications created by other vendors also automatically
change their password as required by randomly generating passwords.  However,
if a server that runs under its own identity does not automatically update
its password, you must do it manually by using the <command>dcecp</command> <command>
keytab add</command> command, as described in Section 31.6.2.2. </para>
<note><para>Servers that run under the identity of a human principal should
not  automatically update their own passwords.  When such a server  updates
its password, it also updates the password of the human principal  under whose
identity it runs.  The human principal must then supply this  randomly generated
password to log into the system and to reauthenticate.   Since the human principal
can never know the randomly generated password,  the principal cannot log
into the system and cannot reauthenticate.</para>
</note>
</sect2>
<sect2 id="AGCC.SECACT.div.31">
<title>Handling Compromised Server or Machine Passwords in the Keytab File
</title>
<para>If a server's or machine's password is compromised, you must change
it in the registry and in the server's local keytab file by performing the
following steps:</para>
<orderedlist revisionflag="Changed">
<!-- .LI-->
<!-- If necessary, use-->
<!-- the \*Lrgy_edit ktlist\*O command to list the contents of the-->
<!-- keytab file on the server's local machine and find the compromised-->
<!-- password.-->
<?og-ChangeStart def,13435,R1.2.2,change registry modify to account modify">
<listitem><para>Use the <command>keytab remove</command> command to delete
the compromised password.</para>
</listitem>
<listitem><para>Use the <command>keytab add</command> command to create a
new password for the server or machine.</para>
</listitem>
<listitem>
<?sml-need 5>
<para>If you do not use the <command>registry</command> option of the <command>
keytab add</command> command to update the server's or machine's registry
account simultaneously with the server's or machine's keytab file, run the <command>
account modify</command> command to change the server's or machine's password
in the registry to the match the one in the keytab file.</para>
</listitem>
</orderedlist>
<?og-ChangeEnd def,13435,R1.2.2,change registry modify to account modify">
<indexterm spanend="AGCC.SECACT.indx.42" id="AGCC.SECACT.indx.54"><indexterm
spanend="AGCC.SECACT.indx.43" id="AGCC.SECACT.indx.55"><indexterm id="AGCC.SECACT.indx.56">
<primary>keys</primary><secondary>machine and server accounts</secondary>
</indexterm>
<!-- --></sect2>
</sect1>
<sect1 id="AGCC.SECACT.div.32">
<title>Maintaining the Local Registry</title>
<!----><indexterm id="AGCC.SECACT.indx.57"><primary>registry</primary><secondary>
maintaining local</secondary></indexterm><indexterm id="AGCC.SECACT.indx.58">
<primary>registry</primary><secondary>local</secondary></indexterm><para>
The local registry  allows login from that machine if a network registry is
not available.    The local registry is created automatically the first time
that a human or nonhuman user performs a DCE login from the local machine
if the network registry server is running.  As users log into the machine,
their account information is automatically added to the local registry.  
</para>
<para><indexterm id="AGCC.SECACT.indx.59"><primary>local</primary><secondary>
registry</secondary><tertiary>files</tertiary></indexterm></para>
<para>The following files make up the local registry database: </para>
<variablelist>
<varlistentry role="linebreak">
<term><symbol role="Variable">dcelocal</symbol><filename>/var/security/lrgy_data
</filename></term><listitem>
<?sml-break>
<para>Contains account information entries.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><symbol role="Variable">dcelocal</symbol><filename>/var/security/lrgy_tgts
</filename> </term><listitem>
<?sml-break>
<para>Contains ticket-granting ticket entries.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><symbol role="Variable">dcelocal</symbol><filename>/var/security/lrgy_lock
</filename></term><listitem>
<?sml-break>
<para>Used by the security server to  lock the registry for read/write operations.
</para>
</listitem></varlistentry>
</variablelist>
<para>You must use the security command <command>rgy_edit</command> to maintain
the  local registry.  The following subcommands are available:</para>
<variablelist>
<varlistentry>
<term><literal>view</literal></term><listitem><para>To view all entries in
the local registry.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><command>delete </command><symbol role="Variable">principal_name</symbol></term>
<listitem>
<?sml-break>
<para>To delete the principal specified by <symbol role="Variable">principal_name
</symbol>  from the registry.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>properties</literal></term><listitem><para>To set and view
properties for the local registry.</para>
</listitem></varlistentry>
<varlistentry>
<term><command>help</command></term><listitem><para>To obtain help information
on the local registry.</para>
</listitem></varlistentry>
</variablelist>
<para>In addition to the subcommands in the preceding list, the <command>
rgy_edit</command> command  provides one additional subcommand, <command>
purge</command>, and an additional registry  property, called the <symbol
role="Variable">registry capacity</symbol>, to restrict the number of entries
that are  in the local registry.</para>
<para><?sml-need 3>The remainder of this section describes the <command>purge
</command> subcommand and  the registry capacity  property.  See the <command>
rgy_edit(8sec)</command> reference page information on  the use of the other
subcommands. <!----></para>
<sect2 id="AGCC.SECACT.div.33">
<title>The Registry Capacity Property</title>
<!---->
<!-- .iX "-[" "\*Lrgy_edit\*O commands" "\*Lproperties\*O"--><para>The <command>
rgy_edit properties</command> command  lets you set a limit on the number
of entries that the local registry can contain.   For example, assume that
the registry capacity is set to  <literal>10</literal> and that the registry
contains 10 entries.   If a new user logs in from the local machine, an entry
is   created for that user.   This new entry overwrites the oldest of the
original 10 entries.  As users log in from the machine for the first time,
 their newly created registry entry overwrites the oldest entry.</para>
</sect2>
<sect2 id="AGCC.SECACT.div.34">
<title>Setting the Capacity and Lifespan Properties</title>
<para><indexterm id="AGCC.SECACT.indx.60"><primary>local</primary><secondary>
registry</secondary><tertiary> setting properties</tertiary></indexterm> <indexterm
id="AGCC.SECACT.indx.61"><primary><command>rgy_edit</command></primary><secondary>
commands</secondary><tertiary><literal>properties</literal></tertiary></indexterm>You
can set a limit on the number of entries that the local registry can contain.
 This limit is defined by the <literal>Capacity</literal> attribute of the
local registry object.  Setting the value of this attribute to a moderate
number of entries can keep the local registry from growing too large.</para>
<para>For example, assume that the <literal>Capacity</literal> attribute value
for the local registry on a machine is set to <literal>10</literal> and that
the local registry contains 10 entries.  If a new user logs in from the local
machine, an entry is created for that user.  This new entry overwrites the
oldest of the 10 entries currently existing in the local registry.  As users
log in from the machine for the first time, their newly created registry entry
overwrites the oldest entry.</para>
<para>To set the <literal>Capacity</literal> attribute value for the local
registry, use the <command>rgy_edt properties</command> command.</para>
<para>Note that, when  you first enter the command, it displays the current
registry capacity and  lifespan.  In addition, it shows the number of account
entries  that are in the local registry and the number of TGT entries.   There
is one TGT entry, which contains the account's credentials, for each account
entry.</para>
<informalexample><para><programlisting><?sml-need 10>$ 
<Literal>rgy_edit -l</Literal>
rgy_edit=> <literal>properties</literal>
Local Registry Properties:
  Capacity:   25 entries
  Contains:   6 account entries
  Contains:   6 tgt entries
  Lifespan:   3w
Do you wish to make changes [y/n]? (n) <literal>y</literal>
Enter local registry capacity: (25) <literal>50</literal>
Enter acct lifespan in days or 'forever': (3w) <literal>12w</literal>
</programlisting></para>
</informalexample>
<para>In the preceding example, <literal>12w</literal> specifies a 12-week
lifespan.  When you enter the lifespan, you can enter:</para>
<itemizedlist>
<listitem><para><literal>forever</literal>&mdash;To designate that the entry
will never expire.  The entry can be overwritten if it exceeds the registry
capacity, however.  Entering  <literal>0</literal> (zero) at the <literal>
Enter acct lifespan in days  or 'forever': (3w)</literal> prompt has the same
effect as entering <literal>forever</literal>.</para>
</listitem>
<listitem><para>a decimal number&mdash;To specify the number of measurement
units (weeks, days, hours, minutes, seconds).  This number is generally accompanied
by a measurement unit, as described next.  If you enter only a number without
an accompanying measurement unit, the measurement unit defaults to  days.
</para>
</listitem>
<listitem><para><literal>w, d, h, m, or s</literal>&mdash;To specify the measurement
units:</para>
<itemizedlist>
<listitem><para><literal>w</literal> for weeks</para>
</listitem>
<listitem><para><literal>d</literal> for days</para>
</listitem>
<listitem><para><literal>h</literal> for hours</para>
</listitem>
<listitem><para><literal>m</literal> for minutes</para>
</listitem>
<listitem><para><literal>s</literal> for seconds</para>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<para>You can use any combination of the measurement units with their accompanying
numbers.  For example, to set the lifespan to 12 weeks, 8 hours, and 30 seconds,
enter the following command:</para>
<informalexample><para><programlisting><userinput>Enter acct lifespan in days or 'forever': (3w) <literal>
12w8h30s</literal></userinput></programlisting></para>
</informalexample>
<para><?sml-need 8>If you end a string of numbers and measurement units with
a number only, the  number with no measurement unit defaults to seconds. 
For example, if you enter the following, the lifespan is assumed to be 12
weeks and 30 seconds:</para>
<informalexample><para><programlisting><userinput>Enter acct lifespan in days or 'forever': (3w) <literal>
12w30</literal></userinput></programlisting></para>
</informalexample>
<indexterm spanend="AGCC.SECACT.indx.60" id="AGCC.SECACT.indx.62">
<!----></sect2>
<sect2 id="AGCC.SECACT.div.35">
<title>Purging Expired Entries</title>
<!----><para><indexterm id="AGCC.SECACT.indx.63"><primary>local</primary>
<secondary>registry</secondary><tertiary> purging expired entries</tertiary>
</indexterm> <indexterm id="AGCC.SECACT.indx.64"><primary><command>rgy_edit
</command></primary><secondary>commands</secondary><tertiary><command>purge
</command></tertiary></indexterm></para>
<para>The <command>rgy_edit purge</command> subcommand deletes expired entries
from the local registry.  When the <command>rgy_edt purge</command> command
is run,  the command deletes all entries whose lifespan attribute value indicates
are are expired.  </para>
<para>In the preceding example, we reset the local registry's lifespan attribute
value to <literal>12w</literal>.   <indexterm id="AGCC.SECACT.indx.65"><primary><command>
rgy_edit</command></primary><secondary>commands</secondary><tertiary><command>
purge</command></tertiary></indexterm>With the lifespan set to <literal>12w
</literal>, the following <command>rgy_edt purge</command> command deletes
all local registry entries (account and TGT) that are older than 12 weeks.
</para>
<informalexample><para><programlisting>rgy_edit=> <literal>purge
</literal>
1 account entries purged
1 TGT entries purged
</programlisting></para>
</informalexample>
<indexterm spanend="AGCC.SECACT.indx.63" id="AGCC.SECACT.indx.66"><indexterm
spanend="AGCC.SECACT.indx.57" id="AGCC.SECACT.indx.67"></sect2>
</sect1>
</chapter><!--+ 10/31/96 16:05:54     | tagMorph:  $Id: 4_accts.sgm,v 1.1.3.1
1996/11/27 15:06:57 carrig Exp $     | tagMorph library:  $Id: 4_accts.sgm,v
1.1.3.1 1996/11/27 15:06:57 carrig Exp $     | sml-to-docbook:  1.24     +-->
<?Pub *0000077206 -3>
