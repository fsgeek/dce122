<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: 3_pgo.sgm,v $
# Revision 1.1.2.10  1996/12/04  22:49:02  carrig
# 	{enh,R1.2.2}
# 	JC's edits
# 	[1996/12/04  22:46:47  carrig]
#
# Revision 1.1.2.9  1996/11/29  20:20:39  carrig
# 	{enh,R1.2.2}
# 	Finished edit changes; must scale graphics
# 	[1996/11/29  20:17:07  carrig]
# 
# Revision 1.1.2.8  1996/11/27  21:43:25  carrig
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:41:26  carrig]
# 
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:28:15  carrig]
# 
# Revision 1.1.2.8  1996/11/26  21:45:00  carrig
# 	{enh,R1.2.2}
# 	Putting in editor's comments
# 	[1996/11/26  21:40:40  carrig]
# 
# Revision 1.1.2.7  1996/11/25  21:51:09  carrig
# 	{enh,R1.2.2}
# 	Started to put in editor's comments
# 	[1996/11/25  21:49:08  carrig]
# 
# Revision 1.1.2.6  1996/11/07  20:43:19  weir
# 	Cleaned up history
# 	[1996/11/07  20:41:27  weir]
# 
# Revision 1.1.2.5  1996/11/07  16:15:39  weir
# 	Removed empty paragraph with revflag setting
# 	[1996/11/07  16:15:19  weir]
# 
# Revision 1.1.2.4  1996/11/06  20:40:28  carrig
# 	{enh,R1.2.2}
# 	OK for editing
# 	[1996/11/06  20:37:54  carrig]
# 
# Revision 1.1.2.3  1996/11/05  18:58:40  carrig
# 	{enh,R1.2.2}
# 	Second pass
# 	[1996/11/05  18:55:23  carrig]
# 
# Revision 1.1.2.2  1996/11/04  22:03:34  carrig
# 	{enh,R1.2.2}
# 	First pass at corrections
# 	[1996/11/04  22:00:04  carrig]
# 
# Revision 1.1.2.1  1996/11/01  18:20:14  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/11/01  18:17:48  wardr]
# 
# Revision 1.1.1.2  1996/11/01  18:17:48  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- Revision 1.1.6.1  1996/09/19  17:08:45  sherman-->
<!-- 	{def,13330,R1.2.2}-->
<!-- 	Fixed xattrschema create example-->
<!-- 	{def,13339,R1.2.2}-->
<!-- 	Fixed xattrschema rename example-->
<!-- 	{def,13575,R1.2.2}-->
<!-- 	Fixed various dcecp problems-->
<!-- 	[1996/09/19  17:08:05  sherman]-->
<!---->
<!-- Revision 1.1.4.1  1996/03/12  19:52:26  wardr-->
<!-- 	{edit R1.2.1}-->
<!-- 	Release Edits-->
<!-- 	[1996/03/12  19:52:05  wardr]-->
<!-- -->
<!-- Revision 1.1.2.8  1995/05/25  19:07:52  rcb-->
<!-- 	PRENTICE HALL reformat: final changes-->
<!-- 	[1995/05/25  13:24:40  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat - index entries, odds and ends-->
<!-- 	[1995/03/27  19:51:00  rcb]-->
<!-- -->
<!-- 	minor edit fix-->
<!-- 	[1995/03/16  17:30:21  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat-->
<!-- 	[1995/03/09  19:59:43  rcb]-->
<!-- -->
<!-- 	incorporated 1.1 edits-->
<!-- 	[1995/03/09  19:15:54  rcb]-->
<!-- -->
<!-- Revision 1.1.2.7  1994/10/21  17:26:26  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final GA release edits-->
<!-- 	[1994/10/21  17:26:11  wardr]-->
<!-- -->
<!-- Revision 1.1.2.6  1994/10/20  20:40:33  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final GA release edits-->
<!-- 	[1994/10/20  20:40:00  wardr]-->
<!-- -->
<!-- Revision 1.1.2.5  1994/10/20  16:08:25  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final GA release edits-->
<!-- 	[1994/10/20  16:08:05  wardr]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/18  21:12:34  millette-->
<!-- 	(enh,10056,R1.1)-->
<!-- 	HP dcecp edits-->
<!-- 	[1994/10/18  21:12:10  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/18  19:18:26  millette-->
<!-- 	(enh,10056,R1.1)-->
<!-- 	HP dcecp edits-->
<!-- 	[1994/10/18  19:17:49  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/10/06  20:40:25  rrizzo-->
<!-- 	expand copyright-->
<!-- 	[1994/10/06  20:07:32  rrizzo]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/09/16  21:13:35  millette-->
<!-- 	(enh,10056,R1.1)-->
<!-- 	Created for ERA-->
<!-- 	[1994/09/16  21:12:34  millette]-->
<!-- -->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE BOOK PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<chapter id="AGCC.SECPGO.div.1">
<title>Creating and Maintaining Principals, Groups, and Organizations</title>
<para>This chapter explains how to use <command>dcecp</command> to create
and maintain principals, groups, and organizations.   <!-- The formal definition
of a principal is the following: --><!-- an entity that is capable of believing
that it can--><!-- communicate securely with another entity.  In other words,
a principal--><!-- is an entity that is able to be authenticated by the Security
Service--><!-- when it is associated with account information; that is, when
the DCE--><!-- control program (or Registry Editor) is used to create an account
for--><!-- the principal.  In actual practice,--><!-- of the network, servers
and machines in the network, and cells in--><!-- you can create principals
to represent human users--><!-- of the network, servers and machines in the
network, and cells in--><!-- the network with which you engage in cross-cell
authentication.  -->It begins with a discussion of the names that are assigned
to principals, groups, and organizations and of the Universal Unique Identifiers
(UUIDs) used internally by the DCE Security Service to identify registry objects. 
</para>
<sect1 id="AGCC.SECPGO.div.2">
<title>Principal, Group, and Organization Names</title>
<para>You <indexterm id="AGCC.SECPGO.indx.1"><primary>principals</primary>
<secondary>naming restrictions</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.2">
<primary>groups</primary><secondary>naming restrictions</secondary></indexterm> <indexterm
id="AGCC.SECPGO.indx.3"><primary>organizations</primary><secondary>naming
restrictions</secondary></indexterm>must assign a name to each principal,
group, and organization in the registry.  Although a principal, a group, and
an organization can have the same name, no two principals, groups, or organizations
can have the same name.  For example, two principals cannot be named <literal>
smith</literal>, but a principal can be named <literal>smith</literal>, a
group can be named <literal>smith</literal>, and an organization can be named <literal>
smith</literal>.</para>
<para>You can assign up to three types of names: primary, full, and aliases.
</para>
<sect2 id="AGCC.SECPGO.div.3">
<title>Primary Names</title>
<para>Primary names are assigned to principals, groups, and organizations.
 A registry object's primary <indexterm id="AGCC.SECPGO.indx.4"><primary>
primary names</primary><secondary>about</secondary></indexterm>name is the
name that is used by most system utilities when a human-readable string is
needed.  When you add a principal, group, or organization to the registry
database, you must supply a primary name.  The primary name is a key field
that you can use as input to the <command>principal show</command> command
to query the registry database.   <!-- --></para>
</sect2>
<sect2 id="AGCC.SECPGO.div.4">
<title>Full Names </title>
<!-- --><para><indexterm id="AGCC.SECPGO.indx.5"><primary>full names</primary>
</indexterm>Full names can be assigned optionally to principals, groups, and
organizations.  An object's full name is for information purposes.  It typically
describes or expands a primary name to allow easy recognition by users.  For
example, a principal could have a primary name of <literal>jsbach</literal>
and a full name of <literal>Johann S.  Bach</literal>.  An organization could
have the primary name <literal>moco </literal>and the full name <literal>
Motet Composers.</literal></para>
<para>A full name is a data field only.  You cannot use it to query the registry
database.  You can create the principal's, group's, or organization's  full
name when you create the principal, group, and organization itself. </para>
</sect2>
<sect2 id="AGCC.SECPGO.div.5">
<title>Aliases</title>
<para><indexterm id="AGCC.SECPGO.indx.6"><primary>aliases</primary><secondary>
rights accrued</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.7">
<primary>groups</primary><secondary>aliases</secondary></indexterm>An alias
is an optional alternate name for a primary name.  Aliases can be assigned
to principals and groups, but not to organizations.   Aliases and the primary
name for which they are an alternate share the same UUID and UNIX ID.  (UUIDs
and UNIX IDs are described in  <!-- the section later in this chapter --><!--
titled "Universal Unique Identifiers and UNIX IDs." -->Section 30.4.) An alias
is a key field that you can use to query the registry database. </para>
<para>Because you can create one account for each primary name and each alias,
aliases give you the flexibility to establish several accounts for the same
principal.  For example, assume that for the primary name <literal>mahler
</literal> you create three aliases: <literal>gustav</literal>, <literal>
gus</literal>, and <literal>gm</literal>.  You can then create four accounts
for the principal  <literal>mahler</literal>: one for the primary name and
one for each of the name's aliases.  The accounts can use different home directories
and passwords and can be associated with different groups and organizations.
</para>
<para>Because principals accrue only the rights that are associated with the
primary name or the alias that they log in with, these multiple accounts for
the same person accommodate different access patterns.  For example,  <literal>
mahler</literal> may be a member of the <literal>composers</literal> group
and <literal>gustav</literal> can be a member of the <literal>music_admin
</literal> group, which is a group of system administrators.  The principal <literal>
mahler</literal> logs in as <literal>mahler</literal> to perform day-to-day
tasks and as <literal>gustav</literal> to perform administrative duties. 
To help prevent accidental damage to the system, it is a good idea to set
up accounts so that users can log into an account with the least privileges
necessary to perform their tasks. </para>
<para>For groups, aliases are useful if you want to associate two group names
 with the same UNIX number. </para>
<para>See Section 30.9 for information on creating aliases.</para>
</sect2>
<sect2 id="AGCC.SECPGO.div.6">
<title>Name Formats</title>
<para><indexterm id="AGCC.SECPGO.indx.8"><primary>principals</primary><secondary>
name format</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.9"><primary>
primary names</primary><secondary>format</secondary></indexterm>Names in the
registry can contain any characters or digits,  except the @ (at sign) and
the  <literal>:</literal> (colon) character.  Avoid using spaces, {} (curly
braces), or "" (quotes) in a name, <command>dcecp</command> might not parse
the name correctly. </para>
<para>The maximum number of characters allowed in a name is 1024.</para>
</sect2>
</sect1>
<sect1 id="AGCC.SECPGO.div.7">
<title>Reserved Principals and Accounts</title>
<para><indexterm id="AGCC.SECPGO.indx.10"><primary>principals</primary><secondary>
reserved</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.11"><primary>
accounts</primary><secondary>reserved</secondary></indexterm>Some principals
and accounts are reserved for use by various system operations.  You cannot
delete reserved principals.  You can modify, but not directly delete reserved
accounts.   Note, however, that you may  delete reserved accounts indirectly
by deleting the group or organization that is specified in the account.  (See
Chapter 31 for details.)</para>
<para>A list of reserved principals and accounts  follows.  In the list <symbol
role="Variable">cell_name</symbol> is the name of your cell.</para>
<itemizedlist>
<listitem>
<?sml-need 5>
<para>Reserved Principals:</para>
<itemizedlist>
<listitem><para><literal>dce-ptgt</literal></para>
</listitem>
<listitem><para><filename>krbtgt/</filename><symbol role="Variable">cell_name
</symbol></para>
</listitem>
<listitem><para><literal>dce-rgy</literal></para>
</listitem>
</itemizedlist>
<?sml-break>
</listitem>
<listitem><para>Reserved Accounts:</para>
<itemizedlist>
<listitem><para><literal>dce-ptgt none none</literal> </para>
</listitem>
<listitem><para><filename>krbtgt/</filename><symbol role="Variable">cell_name
</symbol> <literal>none none</literal> </para>
</listitem>
<listitem><para><literal>dce-rgy none none</literal> </para>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<indexterm spanend="AGCC.SECPGO.indx.10" id="AGCC.SECPGO.indx.12"><indexterm
spanend="AGCC.SECPGO.indx.11" id="AGCC.SECPGO.indx.13"></sect1>
<sect1 id="AGCC.SECPGO.div.8">
<title>Object Creation Quotas</title>
<indexterm id="AGCC.SECPGO.indx.14"><primary>quotas</primary><secondary>for
creating registry objects</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.15">
<primary>objects</primary><secondary>quotas for creating</secondary></indexterm>
<indexterm id="AGCC.SECPGO.indx.16"><primary>principals</primary><secondary>
object creation quotas</secondary></indexterm><para>You can assign an object
creation quota to each principal.  This assignment allows you to control the
number of registry objects that can be created by the principal.  If you allow
users to create their own groups, for example, you can use this quota to limit
the total number of groups they can create.  The default for the object creation
quota is <literal>unlimited</literal>, meaning that no limits are placed on
the number of objects the principal can create.  A value of 0 (zero) prohibits
the principal from creating any registry objects.</para>
<para>Each time a principal creates a registry object, the principal's object
creation quota is decremented by 1.  When the object creation  quota reaches
0, the principal is prohibited from creating registry objects  unless you
reset the object creation quota to a number other than 0 by  using the <command>
dcecp principal modify</command> command.  Note that, when an object that
is created by a principal is deleted, the principal's object  creation quota
is <symbol role="Variable">not</symbol> incremented.</para>
<para>Use the <command>dcecp principal show</command> command to  view principals'
current object creation quotas.  This command displays the  total number of
objects that the principal is allowed to create at the current time; that
is, the original quota minus the number of objects created by the principal.
</para>
</sect1>
<sect1 id="AGCC.SECPGO.div.9">
<title>Universal Unique Identifiers and UNIX IDs</title>
<para><indexterm id="AGCC.SECPGO.indx.17"><primary>principals</primary><secondary>
deleting</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.18"><primary>
unique universal identifiers</primary><see>UUID</see></indexterm> <indexterm
id="AGCC.SECPGO.indx.19"><primary>UUID</primary><secondary>and deleted principals
</secondary></indexterm>The DCE Security Service automatically associates
a principal's, group's, or organization's primary name with a UUID.   UUIDs
identify objects, which is a function performed by UNIX numbers (UNIX IDs)
in UNIX systems.  (The registry database also contains UNIX numbers, but they
are used solely for compatibility with UNIX programs.)</para>
<para>Normally, you do not have to be aware of UUIDs.  They are created and
maintained automatically.  However, be aware that, although the DCE Security
Service prints names and you can access objects by name, it identifies all
objects internally by UUID.  If you delete a principal from the registry,
you also delete the principal's UUID.  Any objects (files, programs) that
are owned by the principal are associated with an orphaned UUID; that is,
a UUID with no corresponding name.  This means that the object is now owned
by a deleted principal.  If no other principals were previously given access
to the object, the object cannot be accessed.</para>
<para><indexterm id="AGCC.SECPGO.indx.20"><primary>orphans</primary><secondary>
adopting</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.21"><primary>
registry</primary><secondary>objects</secondary><tertiary>adopting</tertiary>
</indexterm>To solve this problem, use the <command>dcecp principal create
</command> command with the <option>uuid</option> option to associate the
UUID with a name and thus adopt the orphaned object.  UUIDs are assigned automatically
when the object is created by using the DCE control program's <command>principal
create</command> command.  Therefore, you cannot simply add a new user and
acquire a previously used UUID.  You must execute the <command>dcecp principal
create</command> command with the <option>uuid</option> option for this purpose. 
</para>
<para><indexterm id="AGCC.SECPGO.indx.22"><primary>number formats in registry
</primary></indexterm> <indexterm id="AGCC.SECPGO.indx.23"><primary>registry
</primary><secondary>database</secondary><tertiary>range for UNIX numbers
</tertiary></indexterm>UNIX numbers in the registry must fall within the range
of numbers you set as a registry property.  When you supply a UNIX number
in the command line for creating or modifying an account, you should avoid
numbers under 100 since these are generally reserved for system accounts.
</para>
</sect1>
<sect1 id="AGCC.SECPGO.div.10">
<title>Adding and Maintaining Principals </title>
<para>Use the <command>dcecp principal create</command>  command to create
principals. A <indexterm id="AGCC.SECPGO.indx.24"><primary>principals</primary>
<secondary>adding to registry</secondary></indexterm>principal must exist
before you can create an account for the principal.   When you use the <command>
dcecp principal create</command>  command, you must supply the principal's
primary name as an argument.   In addition, you can supply the attribute options
 summarized in Table 30-1.  <?sml-break></para>
<table frame="all" orient="Port" remap="center">
<title>Attribute Options to Create Principals</title>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec align="Left" colname="col1"
colnum="1" colsep="1" colwidth="1*" rowsep="1"><colspec align="Left" colname="col2"
colnum="2" colsep="1" colwidth="2*" rowsep="1"><thead><row><entry rowsep="1"><literal>
Option</literal></entry><entry rowsep="1"><literal>Meaning</literal></entry>
</row></thead><tbody><row><entry><option>fullname</option> <symbol role="Variable">
namestring</symbol></entry><entry>An optional name that is used to more fully
describe a primary name.   To include spaces, enclose the full name in braces.
 The default is blank.</entry></row><row><entry><option>uid</option> <symbol
role="Variable">integer</symbol></entry><entry>The required UNIX ID that is
associated with the principal.  You can enter this number  explicitly or allow
it to be generated automatically.   If you enter it, the number you enter
cannot exceed the maximum allowable UNIX number (the <literal>maxuid</literal>
attribute) set with the  <command>registry modify</command> command; however,
you can enter a number lower than the low UNIX number (the <literal>minuid
</literal> attribute) set for principals  with the <command>registry modify
</command> command.  If you allow the number to be assigned automatically,
it falls in the range defined by the low UNIX number and maximum UNIX number.
</entry></row><row><entry><option>quota</option> <symbol role="Variable">
quota</symbol></entry><entry>The number of registry objects that can be created
by the principal, known as the principal's object <symbol role="Variable">
creation quota</symbol>.   To allow a principal to create an unlimited number
of  registry objects, enter the text string <literal>unlimited</literal> to
set no quota.   To prevent a principal from creating any registry objects,
enter a 0.   The <symbol role="Variable">quota</symbol> argument defaults
to <literal>unlimited</literal>.</entry></row></tbody></tgroup></table>
<note>
<?sml-need 6>
<para>In addition to these standard principal attributes, you can also attach
ERA instances to principals to control  such aspects of DCE security as  preauthentication,
password strength and password generation, and handling of invalid logins.
 See Section 30.6 for information on these well-known ERAs.  See Chapter 32
for information on ERAs in general.</para>
</note>
<sect2 id="AGCC.SECPGO.div.11">
<title>Adding Principals</title>
<para>To add principals to the registry,  <indexterm id="AGCC.SECPGO.indx.25">
<primary><command>dcecp</command> commands</primary><secondary><command>principal
create</command></secondary></indexterm>use the <command>principal create
</command> command.   For example, the  following sample command creates a
principal with a primary name of  <literal>mahler</literal> and a full name
of <literal>gustav mahler</literal>:</para>
<informalexample><para><programlisting>dcecp> <literal>principal create mahler -fullname {gustav mahler} -quota 5 
</literal>
dcecp></programlisting></para>
</informalexample>
<para>In the example, the UNIX number defaults to one that is generated automatically.
 Notice that, because the full name  (<literal>gustav mahler</literal>) assigned
to the principal contains a space,  it is enclosed in braces.</para>
<para>Note that you can create multiple principals with one  <command>principal
create</command> command.  To do so, enclose  the principal names in braces,
 separated by spaces.  For example, to create the principals <literal>bach
</literal>,  <literal>britten</literal>, <literal>mahler</literal>,  and <literal>
satie</literal>, you could enter the following:</para>
<informalexample><para><programlisting>dcecp> <literal>principal create {bach britten mahler satie}
</literal>
dcecp></programlisting></para>
</informalexample>
<para>If you create multiple principals, you must allow the principal's  UNIX
ID to default to the system assigned ID.  This is because, if  you include
an attribute option in the command line, that attribute  value is assigned
to each principal.  For example, the following sample command  creates the
principals <literal>bach</literal>, <literal>britten</literal>, <literal>
mahler</literal> and assigns each  an object creation quota of 5.</para>
<informalexample><para><programlisting>dcecp> <literal>principal create {bach britten mahler satie} -quota 5
</literal>
dcecp></programlisting></para>
</informalexample>
<indexterm id="AGCC.SECPGO.indx.26"><primary><command>dcecp</command> commands
</primary><secondary><command>principal create</command></secondary></indexterm>
<indexterm spanend="AGCC.SECPGO.indx.24" id="AGCC.SECPGO.indx.27"></sect2>
<sect2 id="AGCC.SECPGO.div.12">
<title>Changing Principals</title>
<para><indexterm id="AGCC.SECPGO.indx.28"><primary><command>dcecp</command>
commands</primary><secondary><command>principal modify</command></secondary>
</indexterm> <indexterm id="AGCC.SECPGO.indx.29"><primary>principals</primary>
<secondary>changing registry information</secondary></indexterm>You can change
a principal's primary name  and other information related to the principal.
 Additionally, you can change a primary name to an alias and an alias to a
primary name.  If you change a primary name to an alias and do not make an
alias the primary name, operations that return names choose one of the aliases
at random.</para>
<sect3 id="AGCC.SECPGO.div.13">
<title>Changing Primary Names</title>
<para>Use the <command>dcecp principal rename</command> command  to change
a primary name.  Enter the  command in the  following form:</para>
<para><command>principal rename </command><symbol role="Variable">old_name
</symbol> <option>to</option> <symbol role="Variable">new_name</symbol></para>
<para>where:</para>
<variablelist>
<varlistentry>
<term><symbol role="Variable">old_name</symbol></term><listitem><para>Is the
primary name of the principal to be changed.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">new_name</symbol></term><listitem><para>Is the
new primary name of the principal.</para>
</listitem></varlistentry>
</variablelist>
<para>The following example shows the <command>principal rename</command>
command  used to change a full name from <literal>mahlar</literal> to <literal>
mahler</literal>: </para>
<informalexample><para><programlisting>dcecp> <literal>principal rename mahlar -to mahler
</literal>
dcecp></programlisting></para>
</informalexample>
<para>Note that, if you change a primary name, that change is reflected in
the membership lists of all the groups and organizations in which the principal
is a member.</para>
<para>In the unusual case where you are changing a host's principal name while
the host is logged into a DCE cell, the existing host credentials will become
invalid unless you perform extra steps to update the host credentials with
the new principal name. </para>
<para>Host credentials are managed by the <command>secval</command> process,
which performs security client functions on a DCE host.  Normally, just after
the host starts, the <command>secval</command> process logs the host into
the DCE cell, getting the host credentials and storing them on the host. Deactivate
and reactivate the <command>secval</command> process to update these credentials
after changing the principal name. The following illustrates these operations
on remote host <literal>persephone</literal>:</para>
<informalexample><para><programlisting><?sml-need 2>dcecp> <literal>secval deactivate /.:/hosts/persephone/config/secval
</literal>
dcecp> <literal>secval activate /.:/hosts/persephone/config/secval</literal>
dcecp></programlisting></para>
</informalexample>
</sect3>
<sect3 id="AGCC.SECPGO.div.14">
<title>Changing Principal Information</title>
<para>Use the <command>dcecp principal modify</command> command  to change
 any principal information except the UNIX ID and user ID.   The following
example shows the <command>principal modify</command> command  used to change
principal <literal>mahler</literal>'s object creation quota to 10.</para>
<informalexample><para><programlisting>dcecp> <literal>principal modify mahlar -quota 10
</literal>
dcecp></programlisting></para>
</informalexample>
</sect3>
</sect2>
<sect2 id="AGCC.SECPGO.div.15">
<title>Deleting Principals and Aliases</title>
<para><indexterm id="AGCC.SECPGO.indx.30"><primary>principals</primary><secondary>
deleting</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.31"><primary>
aliases</primary><secondary>deleting</secondary></indexterm>If you delete
a principal or an alias, the system automatically deletes any accounts for
that principal or alias.  For example, if you delete the principal <literal>
mahler</literal>, the <literal>mahler composers classic</literal>  account
is also deleted.  If you delete the principal alias <literal>gustav</literal>,
you also delete the <literal>gustav music_admin classic</literal> account.
 If you delete the group alias <literal>music_admin</literal>, you also delete
the <literal>gustav music_admin classic</literal> account.  Be aware that
deleting a principal or a principal's alias could orphan the objects that
are owned by the principal/UUID.</para>
<para>The following example shows the <command>principal delete</command>
command used to  delete the principal named <literal>mahler</literal>:  </para>
<informalexample><para><programlisting>dcecp> <literal>principal delete mahler
</literal>
dcecp></programlisting></para>
</informalexample>
<para>You can delete multiple principals or aliases with one <command>principal
delete</command>  command.  To do so, enclose the principal names in braces,
 separated by spaces.  For example, to delete the principals <literal>bach
</literal>,  <literal>britten</literal>, and <literal>mahler</literal>, you
would enter the following:</para>
<informalexample><para><programlisting>dcecp> <literal>principal delete {bach britten mahler}
</literal>
dcecp></programlisting></para>
</informalexample>
<para><!----></para>
</sect2>
</sect1>
<sect1 id="AGCC.SECPGO.div.16">
<title>Extended Security Attributes for Principals</title>
<indexterm id="AGCC.SECPGO.indx.32"><primary>ERA</primary><secondary>security
</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.33"><primary>ERA</primary>
<secondary>preauthentication</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.34">
<primary>ERA</primary><secondary>password management</secondary></indexterm>
<indexterm id="AGCC.SECPGO.indx.35"><primary>ERA</primary><secondary>invalid
login handling</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.36">
<primary>security</primary><secondary>ERAs</secondary></indexterm><indexterm
id="AGCC.SECPGO.indx.37"><primary>security</primary><secondary>passwords</secondary>
</indexterm><indexterm id="AGCC.SECPGO.indx.38"><primary>password</primary>
</indexterm><indexterm id="AGCC.SECPGO.indx.39"><primary>login</primary></indexterm>
<!----><para>You can attach ERA instances to principals to manage several
aspects of DCE login and password security.  ERAs are available to control
</para>
<itemizedlist>
<listitem><para>The level of authentication security required for principal
login requests</para>
</listitem>
<listitem><para>Handling of invalid logins </para>
</listitem>
<listitem><para>Strength of principals' passwords as well as generation of
passwords for principals</para>
</listitem>
<listitem><para>Handling of login attempts by principals with expired passwords
</para>
</listitem>
</itemizedlist>
<para revisionflag="Changed">These ERAs are introduced and explained in the
following sections.  See Chapter 32 for information on how to use <command>
dcecp</command> to attach these ERAs to principals. <?og-ChangeStart enh,13622,R1.2.2,Added public key authentication"></para>
<sect2 id="AGCC.SECPGO.div.17">
<title revisionflag="Changed">DCE Authentication</title>
<indexterm id="AGCC.SECPGO.indx.40"><primary revisionflag="Changed">authentication
</primary><secondary revisionflag="Changed">preauthentication</secondary>
</indexterm><indexterm id="AGCC.SECPGO.indx.41"><primary revisionflag="Changed">
preauthentication</primary></indexterm><indexterm id="AGCC.SECPGO.indx.42">
<primary revisionflag="Changed">preauthentication</primary><secondary revisionflag="Changed">
timestamps</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.43"><primary
revisionflag="Changed">preauthentication</primary><secondary revisionflag="Changed">
third-party</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.44"><primary
revisionflag="Changed">preauthentication</primary><secondary revisionflag="Changed">
public key</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.45"><primary
revisionflag="Changed">authentication</primary><secondary revisionflag="Changed">
timestamps protocol</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.46">
<primary revisionflag="Changed">authentication</primary><secondary revisionflag="Changed">
third-party protocol</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.47">
<primary revisionflag="Changed">authentication</primary><secondary revisionflag="Changed">
public key protocol</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.48">
<primary revisionflag="Changed">ERA</primary><secondary revisionflag="Changed">
timestamps protocol</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.49">
<primary revisionflag="Changed">ERA</primary><secondary revisionflag="Changed">
third-party protocol</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.50">
<primary revisionflag="Changed">ERA</primary><secondary revisionflag="Changed">
public key protocol</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.51">
<primary revisionflag="Changed">timestamps authentication protocol</primary>
</indexterm><indexterm id="AGCC.SECPGO.indx.52"><primary revisionflag="Changed">
third-party authentication protocol</primary></indexterm><indexterm id="AGCC.SECPGO.indx.53">
<primary revisionflag="Changed">public key authentication protocol</primary>
</indexterm><para revisionflag="Changed">Authentication addresses certain
security deficiencies  in the Kerberos V5 authentication protocols, used as
the basis for  the DCE authentication protocol in versions previous to DCE
Version 1.1. These  deficiencies result from </para>
<itemizedlist>
<listitem><para revisionflag="Changed">The security server responding to client
login requests  without verifying that the user knows the password</para>
</listitem>
<listitem><para revisionflag="Changed">The use of user passwords, which are
notoriously weak, to encrypt plaintext data that is then sent across the network 
</para>
</listitem>
</itemizedlist>
<para revisionflag="Changed">These practices are subject to attacks in which
the attacker  obtains network transmissions and proceeds to attack them offline
to elicit user's passwords. These kinds of attacks, if successful, can compromise
the security of a  DCE cell (and of all other cells in a trust relationship
with that cell).</para>
<para revisionflag="Changed">DCE authentication reduces the likelihood of
such attacks succeeding by  providing for</para>
<itemizedlist>
<listitem><para revisionflag="Changed">Preauthentication of principals making
login requests (that is, by having the DCE Security Service verify the identity
of the requestor  before responding to the request)</para>
</listitem>
<listitem><para revisionflag="Changed">The use of strong keys to  encrypt
all network transmissions involving validation between security clients  and
servers</para>
</listitem>
</itemizedlist>
<para revisionflag="Changed">Four levels of authentication are available,
ranging from most to least secure, and representing decreasingly strict preauthentication
 protocols.  By attaching an instance of the  <symbol role="Variable">pre_auth_req
</symbol> ERA (described in the following section) to the principal, administrators
can control the minimum level of preauthentication  that the security server
will accept when authenticating the principal.</para>
<para revisionflag="Changed">The preauthentication protocols are</para>
<itemizedlist>
<listitem><para revisionflag="Changed">The <symbol role="Variable">public
key</symbol> protocol, which provides the highest level of security. A principal
that does not have this level of security at login may not be able to use
certain applications that do use public key authentication.</para>
<para revisionflag="Changed">By default, public key login is disabled. To
enable public key authentication, see the next section of this chapter. <?og-ChangeEnd enh,13622,R1.2.2,Added public key authentication"></para>
</listitem>
<listitem><para>The <symbol role="Variable">third-party</symbol> protocol,
which provides a high level of security.  No lesser level of preauthentication
should be specified for any principal unless a reason is compelling enough
to do so.   (See the comment on <literal>cell_admin</literal> in the next
bulleted item.)   DCE Version 1.1 clients always construct authentication
requests  with this protocol, except in cases where they are unable to because
the machine session key, which is required to construct third-party requests,
 is unavailable (for example, at cell startup or when the <command>secval
</command> process  is down).</para>
</listitem>
<listitem><para>The <symbol role="Variable">timestamps</symbol> protocol,
which provides an intermediate level of security.  Timestamps preauthentication
should be specified only for principals (such as  cell administrators and
noninteractive principals) who must be able to operate  when the client is
unable to construct a third-party authentication request as  previously described.
</para>
<para>In these cases, the client constructs and forwards a timestamps login
request.</para>
<para>In particular, the cell administrator <symbol role="Variable">must</symbol>
have timestamps  login capability, since <literal>cell_admin</literal> must
be able to log in to set up the initial machine key during initial configuration
of the cell.</para>
</listitem>
<listitem><para>The DCE Version 1.0 (Kerberos V5) protocol, which is used
to authenticate pre-DCE Version 1.1 clients only, and provides no preauthentication
security.</para>
</listitem>
</itemizedlist>
<?og-ChangeStart enh,13622,R1.2.2,Added public key authentication">
<sect3 id="AGCC.SECPGO.div.18">
<title revisionflag="Changed">Enabling the Public Key Authentication Protocol
</title>
<indexterm id="AGCC.SECPGO.indx.54"><primary revisionflag="Changed">public
key authentication</primary><secondary revisionflag="Changed">enabling and
configuring</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.55"><primary
revisionflag="Changed">enabling public key authentication</primary></indexterm>
<indexterm id="AGCC.SECPGO.indx.56"><primary revisionflag="Changed">configuring
public key authentication</primary></indexterm><indexterm id="AGCC.SECPGO.indx.57">
<primary revisionflag="Changed">configuration</primary><secondary revisionflag="Changed">
of public key authentication</secondary></indexterm><para revisionflag="Changed">
By default, the public key login authentication is disabled. To enable it
and to configure it for users, follow these steps:</para>
<orderedlist>
<listitem><para revisionflag="Changed">Make sure the public key software is
installed on the master DCE Security server and on the replica servers. Public
key software is available for DCE Versions 1.2.2 and later.</para>
</listitem>
<listitem><para revisionflag="Changed">Initialize the cell's public key environment.
If the cell is migrating from DCE 1.1 to DCE 1.2.2, follow steps <symbol role="Variable">
a</symbol> and <symbol role="Variable">b</symbol>. Otherwise, follow  step <symbol
role="Variable">b</symbol>.</para>
<orderedlist>
<listitem><para revisionflag="Changed">Enable the public key on the master:
</para>
<informalexample><para><programlisting revisionflag="Changed">dcecp> <literal>
registry modify -version secd.dce.1.2.2</literal>
dcecp></programlisting></para>
</informalexample>
<para revisionflag="Changed">The master will propagate the version information
to each replica that has the public key software installed. Any replica that
does not have the public key software installed will be shut down automatically.
</para>
</listitem>
<listitem><para revisionflag="Changed">As the <literal>cell_admin</literal>,
request that an initial key-pair (public and private keys) be  generated for
the account of the local cell's <filename>krbtgt</filename> principal:</para>
<informalexample><para>
<programlisting revisionflag="Changed">dcecp> <literal>account modify krbtgt/</literal><Replaceable>cell-name</Replaceable> <Literal>pkgenprivkey</Literal> <Replaceable>value</Replaceable><literal> \</literal> 
> <Literal>mypwd</Literal> <Replaceable>pwd</Replaceable>
dcecp></programlisting></para>
</informalexample>
<para revisionflag="Changed">The registry will generate a key-pair and store
them. The public key portion of  the pair will be stored in the <literal>
DCEPKAuthentication</literal> ERA attached to the <filename>krbtgt</filename>
principal for the  cell.  The private key portion will be stored in the registry
under existing  password-protection encryption.</para>
<para revisionflag="Changed">Note that you can also use this command to modify
an existing key-pair of the  local cell's <filename>krbtgt</filename> principal.
</para>
</listitem>
</orderedlist>
</listitem>
<listitem><para revisionflag="Changed">On the cell administrator workstation,
configure the user's public key account: </para>
<informalexample>
<para><programlisting revisionflag="Changed">dcecp> <literal>account create name \</literal>> <literal>-group none \</literal>  
> <Literal>mypwd</Literal> <symbol role="Variable">cell-admin-password</symbol>
> <literal>-organization none \</literal> 
> <Literal>password</Literal> <Replaceable>user-password</Replaceable><literal> \</literal> 
> <literal>-pkmechanism file \</literal> 
> <literal>-pkkeycipherusage {{generatekey default} {newpassphrase </literal><Replaceable>string</Replaceable><literal>}} \</literal> 
> <literal>-pksignatureusage {{generatekey default} {newpassphrase </literal><Replaceable>string</Replaceable><literal>}}</literal>
</programlisting></para>
</informalexample>
<para revisionflag="Changed">The command does the following to the public
key account:</para>
<itemizedlist>
<listitem><para revisionflag="Changed">Indicates that the private key information
should be stored in a file.</para>
</listitem>
<listitem><para revisionflag="Changed">Randomly generates a new public key-pair,
which has an attached new password phrase that you supply for encryption purposes.
The public key  portion  of the key-pair is stored in the ERA, and the private
key portion is stored in a file.</para>
</listitem>
<listitem><para revisionflag="Changed">Randomly generates a new signed key-pair,
which has an attached new password phrase that you supply. Again, the public
key portion is stored in  the ERA and the private key is stored in a file.
</para>
</listitem>
</itemizedlist>
</listitem>
<listitem><para revisionflag="Changed">Move the public key mechanism file
from the cell administrator workstation to the user's  workstation and change
the ownership to the user. Provide the new password phrase to the user but
strongly encourage the user to change the password phrase so no one else knows
it. To change a password phrase, the user can invoke the <command>dcecp account
modify</command> command. </para>
</listitem>
</orderedlist>
<para revisionflag="Changed">By default, only the cell administrator can create
or modify a public key account. However, a cell administrator can modify the
ACL managers for the public key ERAs,  thereby allowing users to change their
own key-pairs. To modify the ACL managers:</para>
<informalexample><para><programlisting revisionflag="Changed">dcecp> <literal>
xattrschema modify /.:/sec/xattrschema/DCEPKAuthentication \</literal>  
> <literal>-aclmgr {principal {query r} {update u} {test r} {delete m}}</literal>
dcecp> <literal>xattrschema modify /.:/sec/xattrschema/DCEPKKeyEncipherment \ </literal>
> <literal>-aclmgr {principal {query r} {update u} {test r} {delete m}}</literal></programlisting></para>
</informalexample>
</sect3>
<sect3 id="AGCC.SECPGO.div.19">
<title revisionflag="Changed">Managing User Authentication</title>
<indexterm id="AGCC.SECPGO.indx.58"><primary revisionflag="Changed">authentication
</primary><secondary revisionflag="Changed">managing</secondary></indexterm>
<indexterm id="AGCC.SECPGO.indx.59"><primary revisionflag="Changed">preauthentication
</primary><secondary revisionflag="Changed">pre_auth_req ERA</secondary></indexterm>
<indexterm id="AGCC.SECPGO.indx.60"><primary revisionflag="Changed">ERA</primary>
<secondary revisionflag="Changed">pre_auth_req</secondary></indexterm><indexterm
id="AGCC.SECPGO.indx.61"><primary revisionflag="Changed">pre_auth_req ERA
</primary></indexterm><para revisionflag="Changed">You manage preauthentication
for a given principal by  attaching an instance of the <symbol role="Variable">
pre_auth_req</symbol> ERA to the principal and specifying a value to indicate <symbol
role="Variable">the lowest level protocol</symbol> the DCE Security Service
should accept for the principal, as follows:</para>
<variablelist>
<varlistentry>
<term><literal revisionflag="Changed">0</literal></term><listitem><para><literal
revisionflag="Changed">(NONE)</literal> Specifies that the DCE Security Service
should accept, from this principal, login requests that use any of the four
protocols  (including the pre-DCE Version 1.1 protocol.)  This is the least
secure level and is provided only to enable  DCE Version 1.1 servers to accept
login requests from pre-DCE Version  1.1 clients.  It is most vulnerable to
the type of attack previously described.</para>
<para revisionflag="Changed"><literal>Warning:&nbsp;</literal>Failing to attach
an instance of the <symbol role="Variable">pre_auth_req</symbol> ERA to a
 principal is equivalent to specifying <literal>0 (NONE)</literal>.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal revisionflag="Changed">1</literal></term><listitem><para><literal
revisionflag="Changed">(PADATA-ENC-TIMESTAMPS)</literal>  Specifies that the
DCE Security Service should accept, from this principal, login requests using
 the timestamp, third-party, or public key protocol.  The timestamp  protocol
protects against attackers masquerading as security clients and attacking
replies from the DCE Authentication  Service. The protocol is still vulnerable
 to attacks by processes capable of monitoring the network.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal revisionflag="Changed">2</literal></term><listitem><para><literal
revisionflag="Changed">(PADATA-ENC-THIRD-PARTY)</literal> Specifies that the
only login requests the DCE Security Service will accept from this principal
are those using the third-party or public key protocol. This protocol offers
a high level of DCE preauthentication and provides protection against the
attacks  previously described.  With third-party preauthentication, all authentication
data sent over the network is encrypted with a strong random key known only
to the local machine principal and the DCE Security Service.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal revisionflag="Changed">3</literal></term><listitem><para><literal
revisionflag="Changed">(PADATA-ENC-PUBLIC-KEY)</literal> Specifies that the
only login requests the DCE Security Service will accept from this principal
are those using the public key protocol. This is the highest level of DCE
preauthentication. </para>
</listitem></varlistentry>
</variablelist>
<?og-ChangeEnd enh,13622,R1.2.2,Added public key authentication">
<para>When the authentication service receives a login request for a principal,
it always attempts to respond using the same protocol as the request, unless
the <symbol role="Variable">pre_auth_req</symbol> ERA value for that principal
forbids it to do so.  Table 30-2 provides a matrix describing the actions
taken by the authentication service under the various combinations of login
(authentication)  request type and <symbol role="Variable">pre_auth_req</symbol>
ERA value.</para>
<para>
For complete information on the details of DCE authentication
(including the operation of the preauthentication protocols), see the &DCEDk;.
</para>
<para>The following is an example of a <command>dcecp</command> command to
modify a principal and attach a <symbol role="Variable">pre_auth_req</symbol>
ERA specifying third-party preauthentication:</para>
<informalexample><para><programlisting>dcecp> <literal>principal modify smitty -attribute {pre_auth_req 2} 
</literal>
dcecp></programlisting></para>
</informalexample>
<para revisionflag="Changed">For further information on how to use <command>
dcecp</command> to attach ERAs to principals, see Chapter 32. <?og-ChangeStart enh,13622,R1.2.2,Added public key authentication"></para>
</sect3>
<sect3 id="AGCC.SECPGO.div.20">
<title revisionflag="Changed">Public Key Interoperability Between DCE Versions
</title>
<indexterm id="AGCC.SECPGO.indx.62"><primary revisionflag="Changed">preauthentication
</primary><secondary revisionflag="Changed">interoperability</secondary></indexterm>
<para revisionflag="Changed">Table 30-2 describes how login requests are 
handled between different versions of DCE that are in a single cell.</para>
<?sml-need 6i>
<table frame="all" orient="Port" remap="center">
<title revisionflag="Changed">DCE Version 1.1/Pre-DCE Version 1.1 Authentication
Interoperation</title>
<tgroup cols="3" colsep="0" rowsep="0"><colspec align="Left" colname="col1"
colnum="1" colsep="1" colwidth="1.25*"><colspec align="Left" colname="col2"
colnum="2" colsep="1" colwidth="1.5*"><colspec align="Left" colname="col3"
colnum="3" colwidth="2.5*"><thead><row><entry rowsep="1"><literal revisionflag="Changed">
Login Request Type</literal></entry><entry rowsep="1"><literal revisionflag="Changed">
Pre-1.1 Server Response</literal></entry><entry rowsep="1"><literal revisionflag="Changed">
Versions 1.1 and 1.2 Server Response</literal></entry></row></thead><tbody>
<row><entry><literal revisionflag="Changed">DCE Version 1.0</literal></entry>
<entry></entry><entry></entry></row><row><entry rowsep="1" revisionflag="Changed">
From any client.</entry><entry rowsep="1" revisionflag="Changed">No preauthentication.
  <?sml-break>Returns DCE Version 1.0 (unpreauthenticated) response.</entry>
<entry rowsep="1" revisionflag="Changed">Preauthentication.   <?sml-break>Checks
for <symbol role="Variable">pre_auth_req</symbol> ERA instance: <?sml-space .3>If
no ERA exists, or existing ERA has <symbol role="Variable">value</symbol>=<literal>
0</literal> (<literal>NONE</literal>), returns DCE Version 1.0 (unpreauthenticated)
response.   <?sml-break>Otherwise, rejects login request.</entry></row><row>
<entry><literal revisionflag="Changed">TIMESTAMPS</literal></entry><entry></entry>
<entry></entry>
</row>
<row><entry rowsep="1" revisionflag="Changed">From DCE Version 1.1 and greater clients.</entry>
<entry rowsep="1" revisionflag="Changed">No preauthentication.     
<?sml-break>
<?Pub _newline>
Ignores preauthentication data in request
and returns <?sml-break>pre-DCE Version 1.1 (unpreauthenticated) response.
</entry><entry rowsep="1" revisionflag="Changed">Preauthentication.     <?sml-break>Checks
for <symbol role="Variable">pre_auth_req</symbol> ERA instance: <?sml-space .3>If
no ERA exists, or existing ERA has <symbol role="Variable">value</symbol>=<literal>
0</literal> (<literal>NONE</literal>)  or <symbol role="Variable">value</symbol>=<literal>
1</literal> (<literal>PADATA-ENC-TIMESTAMPS</literal>), returns DCE Version
1.1 <literal>TIMESTAMPS</literal> response.  If existing ERA has  <symbol
role="Variable">value</symbol>=<literal>2</literal> (<literal>PADATA-ENC-THIRD-PARTY
</literal>), rejects login request.</entry></row><row><entry><literal revisionflag="Changed">
THIRD-PARTY</literal></entry><entry></entry><entry></entry></row><row><entry
rowsep="1" revisionflag="Changed">From DCE Version 1.1 and greater clients.
</entry><entry rowsep="1" revisionflag="Changed">No preauthentication.   
 <?sml-break>
<?Pub _newline>
Ignores preauthentication data in request and returns pre-DCE
Version 1.1 (unpreauthenticated) response.</entry><entry rowsep="1" revisionflag="Changed">
Preauthentication.     
<?sml-break>
<?Pub _newline>
Returns DCE Version 1.1 <literal>THIRD-PARTY
</literal> response.</entry>
</row>
<row><entry><literal revisionflag="Changed">
PUBLIC KEY</literal></entry><entry></entry><entry></entry></row><row><entry
revisionflag="Changed">From DCE Version 1.2 clients.</entry><entry revisionflag="Changed">
No preauthentication.   <?sml-break>
<?Pub _newline>
Ignores preauthentication data in request
and returns pre-DCE Version 1.1 (unpreauthenticated) response.</entry>
<entry revisionflag="Changed">1.1 Server Response: No preauthentication. 
<?sml-break>
<?Pub _newline>
Ignores
preauthentication data in request and returns pre-DCE Version 1.1 (unpreauthenticated)
response.
<?sml-space .3>
<?Pub _newline>
1.2 Server Response: Preauthentication. 
<?sml-break> 
<?Pub _newline>
Returns DCE Version 1.2 <literal>PUBLIC-KEY</literal>
response.</entry>
</row>
</tbody>
</tgroup>
</table>
<?sml-point-size 10>
<!--no-op:  12-->
<?sml-point-size 12>
<!--no-op:  14-->
<!---->
<?og-ChangeEnd enh,13622,R1.2.2,Added public key authentication">
</sect3>
</sect2>
<sect2 id="AGCC.SECPGO.div.21">
<title>Managing Invalid Login Handling</title>
<indexterm id="AGCC.SECPGO.indx.63"><primary>login</primary><secondary>invalid
</secondary><tertiary>handling</tertiary></indexterm><indexterm id="AGCC.SECPGO.indx.64">
<primary>ERA</primary><secondary>max_invalid_attempts</secondary></indexterm>
<indexterm id="AGCC.SECPGO.indx.65"><primary>ERA</primary><secondary>disable_time_interval
</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.66"><primary>max_invalid_attempts
ERA</primary></indexterm><indexterm id="AGCC.SECPGO.indx.67"><primary>disable_time_interval
ERA</primary></indexterm><para>When you specify a preauthentication level
of  <literal>2</literal> (<literal>PADATA-ENC-THIRD-PARTY</literal>) for a
principal, the security server is able to detect and track invalid login attempts
for that principal.  This makes it possible for administrators to limit the
possible  impact of password guessing attacks by</para>
<itemizedlist>
<listitem><para>Setting a limit to the number of successive invalid login
attempts before the principal's account is disabled. (A successful login resets
the counter.)</para>
</listitem>
<listitem><para>Specifying the period of time the principal's account will
be disabled once  that limit is reached.</para>
</listitem>
</itemizedlist>
<para>You do this by attaching instances of two ERAs (<symbol role="Variable">
max_invalid_attempts</symbol> and  <symbol role="Variable">disable_time_interval
</symbol>) to the principal.   Specify values for these ERAs as follows:</para>
<variablelist>
<varlistentry role="linebreak">
<term><symbol role="Variable">max_invalid_attempts</symbol></term><listitem>
<para>Specifies an integer indicating the number of successive invalid  login
attempts the security server should accept before marking the principal's
account as  disabled.</para>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><symbol role="Variable">disable_time_interval</symbol></term><listitem>
<para>Specifies an integer indicating the number of seconds the  principal's
account should  be disabled from login attempts. </para>
</listitem></varlistentry>
</variablelist>
<para>The following is an example of a <command>dcecp</command> command to
create a principal and attach <symbol role="Variable">max_invalid_attempts
</symbol> and <symbol role="Variable">disable_time_interval</symbol> ERAs:
</para>
<informalexample><para><programlisting>dcecp> <literal>principal create smitty -attribute {{max_invalid_attempts 7} \
</literal> 
> <literal>{disable_time_interval 60}}</literal>
dcecp></programlisting></para>
</informalexample>
<note><para>At DCE Version 1.1, the invalid login handling functionality accurately
 tracks login activity  in a cell with one master and no replicas, but does
not keep accurate counts in replicated cells.  This is because</para>
<itemizedlist>
<listitem><para>Login attempts in a replicated cell are randomly assigned
to either a master or replica.</para>
</listitem>
<listitem><para>There is at present no mechanism for replicas to communicate
to the the master and, therefore, no way for the master to maintain an accurate
count.</para>
</listitem>
</itemizedlist>
</note>
<para>For further information on how to use <command>dcecp</command> to attach
ERAs to principals, see Chapter 32. <!----></para>
</sect2>
<sect2 id="AGCC.SECPGO.div.22">
<title>Managing Password Strength and Password Generation</title>
<indexterm id="AGCC.SECPGO.indx.68"><primary>password</primary><secondary>
managing strength of</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.69">
<primary>password</primary><secondary>managing generation of</secondary></indexterm>
<indexterm id="AGCC.SECPGO.indx.70"><primary>password</primary><secondary>
managing strength of</secondary><tertiary>pwd_strengthd</tertiary></indexterm>
<indexterm id="AGCC.SECPGO.indx.71"><primary>password</primary><secondary>
managing generation of</secondary><tertiary>pwd_strengthd</tertiary></indexterm>
<indexterm id="AGCC.SECPGO.indx.72"><primary>ERA</primary><secondary>pwd_val_type
</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.73"><primary>ERA</primary>
<secondary>pwd_mgmt_binding</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.74">
<primary>pwd_mgmt_binding ERA</primary></indexterm><indexterm id="AGCC.SECPGO.indx.75">
<primary>pwd_val_type ERA</primary></indexterm>
<!----><para>The DCE password format policy described in Chapter 35 enables
you to control the following characteristics of user passwords:</para>
<itemizedlist>
<listitem><para>Minimum password length</para>
</listitem>
<listitem><para>Whether a password can be all spaces</para>
</listitem>
<listitem><para>Whether a password can consist of alphanumeric characters
only</para>
</listitem>
</itemizedlist>
<para>You can extend these password strength policies in your cell by creating
a  password management server to perform customized password checking and
generation.  DCE provides an example  password validation/generation server, <filename>
pwd_strengthd(8sec)</filename>, which you  can use as the basis for a password
management  server that suits your cell's requirements. DCE also provides
a Password Management API that application developers can use to acquire information
about the principal's password management policy, and to request generated
passwords from the password management server. See the &DCEDk; for information
on the Password Management API.</para>
<para>Having created this server, you can then constrain a principal's password
to be validated by this server when it is created and whenever it is changed.
 You do this by  attaching instances of the <symbol role="Variable">pwd_val_type
</symbol> and <symbol role="Variable">pwd_mgmt_binding</symbol>  ERAs to the
principal as follows:</para>
<variablelist>
<varlistentry>
<term><symbol role="Variable" role="linebreak">pwd_val_type</symbol></term>
<listitem><para>Specifies password creation options for the principal as follows:
</para>
<variablelist>
<varlistentry>
<term><literal>0</literal></term><listitem><para><literal>(NONE)</literal>
Specifies that the principal's password is subject only to DCE standard policy.
(See Chapter 35 for a description of DCE standard policy.) Specifying <literal>
0</literal> (<literal>NONE</literal>) is equivalent to  not attaching an ERA
instance to the principal.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>1</literal></term><listitem><para><literal>(USER_SELECT)</literal>
Specifies that the principal must supply password text as input to the password
management server specified in the <symbol role="Variable">pwd_mgmt_binding
</symbol> ERA.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>2</literal></term><listitem>
<?sml-need 5>
<para><literal>(USER_CAN_SELECT)</literal> Specifies that the principal can
either supply password text or  specify that the password management server
specified in the  <symbol role="Variable">pwd_mgmt_binding</symbol> ERA generate
a password.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>3</literal></term><listitem><para><literal>(GENERATION_REQUIRED)
</literal> Specifies that the password management server specified in the
 <symbol role="Variable">pwd_mgmt_binding</symbol> ERA should generate a password
for the principal.</para>
</listitem></varlistentry>
</variablelist>
</listitem></varlistentry>
<varlistentry role="linebreak">
<term><symbol role="Variable">pwd_mgmt_binding</symbol></term><listitem><para>
Specifies a binding to your cell's password management server. </para>
</listitem></varlistentry>
</variablelist>
<para>The following is an example of a <command>dcecp</command> command to
create a principal and attach <symbol role="Variable">pwd_val_type</symbol>
and <symbol role="Variable">pwd_mgmt_binding</symbol> ERAs:</para>
<informalexample><para><programlisting>dcecp> <literal>principal create smitty -attribute {{pwd_val_type 2} \ </literal> 
> <literal>{pwd_mgmt_binding \</literal>  
> <literal>{dce /.:/pwd_strength pktprivacy secret name} \</literal> 
> <literal>{/.:/pwd_mgmt/pwd_strength}}}</literal>
dcecp></programlisting></para>
</informalexample>
<para>For further information on how to use <command>dcecp</command> to attach
ERAs to principals, see Chapter 32.  For information on requesting generated
passwords when changing a password, see Section 30.6.3.2.</para>
<para>For information on configuring a password management server, see the
following section and the &DCEAi;.</para>
<sect3 id="AGCC.SECPGO.div.23">
<title>Managing a Password Management Server</title>
<indexterm id="AGCC.SECPGO.indx.76"><primary>password</primary><secondary>
management server</secondary><tertiary>configuring</tertiary></indexterm>
<indexterm id="AGCC.SECPGO.indx.77"><primary>server</primary><secondary>password
management</secondary><tertiary>configuring</tertiary></indexterm><indexterm
id="AGCC.SECPGO.indx.78"><primary>configuration</primary><secondary>password
management server</secondary></indexterm><para>Part 2 of the &DCEAi; explains
how to use <literal>dce_config</literal> to  configure a password management
server.  This section provides additional notes on password management server
management.</para>
<itemizedlist>
<listitem><para>To protect password security, and to optimize performance,
the  password management  server should run on the same machine as the master
DCE security server.</para>
</listitem>
<listitem><para>The default pathname for the password management server is
 <filename>$DCELOCAL/bin/pwd_strengthd</filename>.  You can change this pathname
by using the <literal>PWD_MGMT_SVR</literal> environment variable in <literal>
config.env</literal>.</para>
</listitem>
<listitem>
<?sml-need 4>
<para>While <literal>dce_config</literal> supports configuration of only one
password management server in a cell, it is possible to manually configure
additional servers. Principal <symbol role="Variable">pwd_mgmt_binding</symbol>
ERAs can then be set to point to the  appropriate server for each principal.
</para>
</listitem>
<listitem><para>To replace the sample password management server with another
version, follow this procedure:</para>
<orderedlist>
<listitem><para>Kill <filename>pwd_strengthd</filename>.</para>
</listitem>
<listitem><para>Rename <filename>$DCELOCAL/bin/pwd_strengthd</filename>.</para>
</listitem>
<listitem><para>Copy the new server into <filename>$DCELOCAL/bin/pwd_strengthd
</filename>.</para>
</listitem>
<listitem><para>Start <filename>pwd_strengthd</filename>.</para>
</listitem>
</orderedlist>
<para><symbol role="Variable">Do not</symbol> unconfigure and reconfigure <filename>
pwd_strengthd</filename>.  If you do so,  <command>secd</command> will be
unable to communicate with it until <command>secd</command> is restarted or
the previous server's keys expire.</para>
</listitem>
<listitem><para>The log file for the sample password management server resides
in <filename>$DCELOCAL/var/security/pwd_strengthd.log</filename>.  This location
is built into the server code and is not configurable.</para>
</listitem>
</itemizedlist>
<!----></sect3>
<sect3 id="AGCC.SECPGO.div.24" revisionflag="Changed">
<title>Generating Passwords by Using <command>dcecp</command></title>
<para>If a <symbol role="Variable">pwd_val_type</symbol> ERA having the values <literal>
2</literal> (<literal>USER_CAN_SELECT</literal>) or  <literal>3</literal>
(<literal>GENERATION_REQUIRED</literal>) exists for a principal, that principal
can (or will be required to) request a generated password  when he changes
passwords.  If you are the principal <literal>smitty</literal>,  the following
sequence of <command>dcecp</command> commands can be used to do this:</para>
<informalexample><para><programlisting>dcecp> <literal>set p [account generate smitty]
</literal>
newgenpwd
dcecp></programlisting></para>
</informalexample>
<para>This command requests a generated password from the password management
server, places the new password in the <symbol role="Variable">p</symbol>
variable, and prints it to the screen (<symbol role="Variable">newgenpwd</symbol>).
(Be sure to remember the new password.) Next, pass the value stored in <symbol
role="Variable">p</symbol> as the value of new password in an <command>account
modify</command> or <command>account create</command> command:</para>
<informalexample><para><programlisting>dcecp> <literal>account modify smitty -password $p -mypwd -dce-
</literal>
dcecp></programlisting></para>
</informalexample>
<?og-ChangeStart def, 13340,R1.2.2,Fixed dcecp account modify example">
<para><literal>Warning:&nbsp;</literal> Never execute the following <command>
dcecp</command> command, since the password will be changed in the account,
but the user will not see the new password:</para>
<informalexample><para><programlisting>dcecp> <literal>account modify smitty -password [account gen smitty] \
</literal>
> <literal>-mypwd -dce-</literal>
dcecp></programlisting></para>
</informalexample>
<?og-ChangeEnd def, 13340,R1.2.2,Fixed dcecp account modify example">
</sect3>
</sect2>
<sect2 id="AGCC.SECPGO.div.25">
<title>Managing Password Expiration</title>
<indexterm id="AGCC.SECPGO.indx.79"><primary>password</primary><secondary>
managing expiration of</secondary></indexterm><indexterm id="AGCC.SECPGO.indx.80">
<primary>ERA</primary><secondary>passwd_override</secondary></indexterm><indexterm
id="AGCC.SECPGO.indx.81"><primary>passwd_override ERA</primary></indexterm>
<para>By default, the DCE Security Service disables logins for principals
whose passwords have expired.  There may be cases where you would prefer this
not to happen; for instance, you probably don't want <literal>cell_admin</literal>
to be locked out of the cell because of an expired password.</para>
<para>You can manage password expiration checking for a given principal by
attaching an instance of the <symbol role="Variable">passwd_override</symbol>
ERA to the principal and specifying one of the following values:</para>
<variablelist>
<varlistentry>
<term><literal>0</literal></term><listitem><para>(<literal>NONE</literal>)
Specifies that password expiration checking for the principal  should not
be overridden (that is, the principal should not be permitted to log in with
an expired password.) Specifying <literal>0</literal> (<literal>NONE</literal>)
is equivalent to not attaching an ERA  instance to the principal.</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>1</literal></term><listitem><para>(<literal>OVERRIDE</literal>)
Specifies that password expiration checking for the principal  should be overridden
(that is, the principal should be permitted to log in with an expired password.)
</para>
</listitem></varlistentry>
</variablelist>
<para>The following is an example of a <command>dcecp</command> command to
create a principal and attach the <symbol role="Variable">passwd_override
</symbol> ERA:</para>
<informalexample><para><programlisting>dcecp> <literal>principal create smitty -attribute {passwd_override 1} 
</literal>
dcecp></programlisting></para>
</informalexample>
<para>For further information on how to use <command>dcecp</command> to attach
ERAs to principals, see Chapter 32. <!----><!----></para>
</sect2>
</sect1>
<sect1 id="AGCC.SECPGO.div.26">
<title>Adding and Maintaining Groups and Organizations</title>
<!----><para><indexterm id="AGCC.SECPGO.indx.82"><primary>project lists</primary>
<secondary>about</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.83">
<primary>groups</primary><secondary>project lists</secondary></indexterm>A
group or organization must have been added to the registry before it can be
used in an account.  When you add groups by using the <command>dcecp group
create</command>  command, you can set a project list inclusion property that
controls whether individual groups are included in project lists.  (Project
lists do not apply to organizations.)</para>
<sect2 id="AGCC.SECPGO.div.27">
<title>Project Lists </title>
<para><indexterm id="AGCC.SECPGO.indx.84"><primary>permissions</primary><secondary>
accrual</secondary></indexterm>A principal's project list is a list of all
the groups in which a principal or alias is a member.  When a principal tries
to access an object, the principal has the access rights that accrue from
membership in every group that is named in  the object's ACL.  (See Chapter
28 for a description of ACLs.)  For example, assume the ACL for file X contains
two entries: one permits group A write access and one permits group B read
access.  Then, any principal who is a member of both groups A and B can read
and write to file X.</para>
<sect3 id="AGCC.SECPGO.div.28">
<title>Project Lists and Rights</title>
<para>Principals <indexterm id="AGCC.SECPGO.indx.85"><primary>aliases</primary>
<secondary>on project lists</secondary></indexterm>accrue project list access
rights only from the groups that are associated with the name or alias with
which they log in.  They do not accrue rights from their names and all of
their aliases.  For example, assume that a principal named <literal>gustav
</literal> is a member of groups A and B.  Under the alias <literal>gus</literal>, <literal>
gustav</literal> is also a member of groups C and D.   When the principal
logs in as <literal>gustav</literal>,  the principal accrues access rights
from groups A and B only.  When the principal logs in with the alias <literal>
gus</literal>, the principal accrues access rights from groups C and D only. 
</para>
<para>To display the groups in which a principal (or its alias) is a member,
use  the <command>principal show</command> command described in Chapter 34.
</para>
</sect3>
<sect3 id="AGCC.SECPGO.div.29">
<title>Prohibiting Inclusion on Project Lists</title>
<para>If a group is prohibited from inclusion in a project list, its rights
are not accrued.  For example, assume again that file X's ACL includes two
entries: one that permits group A read access to file X and one that permits
group B write access to file X.  Assume that the project list inclusion property
is set to disallow group B from project lists.  A principal who is a member
of both groups A and B who tries to access file X is allowed only read permissions,
not write permissions.  If the project list inclusion property allows group
B to be on project lists, a member of groups A and B receives both read and
write access.</para>
<para>You may decide to prohibit some groups from inclusion on the list. 
You  may, for example, want to prohibit any reserved groups with access rights
similar to root from inclusion on any project lists.  <indexterm spanend="AGCC.SECPGO.indx.82"
id="AGCC.SECPGO.indx.86"><indexterm spanend="AGCC.SECPGO.indx.83" id="AGCC.SECPGO.indx.87"></para>
</sect3>
</sect2>
<sect2 id="AGCC.SECPGO.div.30">
<title>Adding Groups and Organizations </title>
<para><indexterm id="AGCC.SECPGO.indx.88"><primary>groups</primary><secondary>
adding to organization</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.89">
<primary>organizations</primary><secondary>adding to registry</secondary>
</indexterm>Use the <command>dcecp group create</command> command to add groups
and the  <command>dcecp organization create</command> command to add organizations.
  When you add a group or organization, you must specify the group's or  organization's
primary name.   In addition, you can supply the attribute options listed in
Table 30-3.</para>
<para>Note that, when you use the <command>dcecp group create</command> command
and   <command>dcecp organization create</command> command, you can create
multiple groups or  organizations with one command in the same way that you
can create multiple  principals.  See Section 30.5.1 for details.</para>
<?sml-need 4i>
<table frame="all" orient="Port" remap="center">
<title>Attribute Options to Create Groups and Organizations</title>
<tgroup cols="2" colsep="0" rowsep="0"><colspec align="Left" colname="col1"
colnum="1" colsep="1" colwidth="1*" rowsep="1"><colspec align="Left" colname="col2"
colnum="2" colsep="1" colwidth="2.5*" rowsep="1"><thead><row><entry rowsep="1"><literal>
Information</literal></entry><entry rowsep="1"><literal>Meaning</literal></entry>
</row></thead><tbody><row><entry><option>gid</option></entry><entry>The required
UNIX ID that is associated with the group or organization.  You can enter
this number  explicitly or allow it to be generated automatically.  The number
that is entered cannot exceed the maximum allowable UNIX number (the <literal>
maxuid</literal> attribute) set with the <command>dcecp registry modify</command>
command; however, you can enter a number lower than the low UNIX number (the <literal>
minuid</literal> attribute) set for groups or organizations with the <command>
registry modify</command> command. If you allow the number to be assigned
automatically, it falls in the range defined by the low UNIX number and the
maximum UNIX number.</entry></row><row><entry><option>fullname</option> <symbol
role="Variable">string</symbol></entry><entry>An optional name that is  used
to more fully describe a primary name.  To include spaces, enclose the full
name in braces.  The default is blank.</entry></row><row><entry><option>inprojlist
</option> <symbol role="Variable">value</symbol></entry><entry>For groups
only, whether the group can be on project lists.  The default is <literal>
yes</literal>.</entry></row></tbody></tgroup></table>
<sect3 id="AGCC.SECPGO.div.31">
<title>Adding a Group</title>
<para>The following example shows how to add a group named <literal>symphonists
</literal> to the <command>registry</command>:</para>
<informalexample><para><programlisting>dcecp> <literal>group create symphonists
</literal>
dcecp></programlisting></para>
</informalexample>
<para>In the example, the group UNIX ID is generated automatically, no  full
name is supplied, and the group is included on project lists.</para>
</sect3>
<sect3 id="AGCC.SECPGO.div.32">
<title>Adding an Organization</title>
<para>The following example shows how to add an organization named <literal>
classic</literal> to the registry:</para>
<informalexample><para><programlisting>dcecp> <literal>organization create classic
</literal>
dcecp></programlisting></para>
</informalexample>
<para>In the example, the organization UNIX ID is generated automatically
 and no full name is supplied. <!----></para>
</sect3>
</sect2>
<sect2 id="AGCC.SECPGO.div.33">
<title>Changing Groups and Organizations</title>
<!----><para>For <indexterm id="AGCC.SECPGO.indx.90"><primary>groups</primary>
<secondary>project lists</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.91">
<primary>groups</primary><secondary>changing registry information</secondary>
</indexterm> <indexterm id="AGCC.SECPGO.indx.92"><primary>organizations</primary>
<secondary>changing registry information</secondary></indexterm>groups and
organizations, you can change the primary name and full name.  In addition,
for groups you can change whether or not the group can appear in project lists,
and for organizations you can change policy.  (See Chapter 35 for details
on changing organization policy.)</para>
<para>Use the <command>dcecp group modify</command> command to modify  change
groups.   The following example shows the use of this command with the <option>
inprojlist</option> option to change the group <literal>symphonist</literal>'s
 project list inclusion  property from <literal>yes</literal> (include on
project lists) to <literal>no</literal> (prohibit from  project lists).</para>
<informalexample><para><programlisting>dcecp> <literal>group modify symphonists -inprojlist no
</literal>
dcecp></programlisting></para>
</informalexample>
<para>Use the <command>dcecp group rename</command> command  to change a group's
primary name or the <command>dcecp organization rename</command> command 
to change an organization's primary name.  These commands have the  following
form:</para>
<informalexample><para><programlisting><Literal>group rename </Literal><Replaceable>old_name</Replaceable> <Literal>to</Literal> <Replaceable>new_name </Replaceable><literal> organization rename</literal> <Replaceable>old_name</Replaceable> \
<Literal>to</Literal> <Replaceable>new_name</Replaceable></programlisting></para>
</informalexample>
<para>where:</para>
<variablelist>
<varlistentry>
<term><symbol role="Variable">old_name</symbol></term><listitem><para>Is the
primary name of the group or organization to be changed.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">new_name</symbol></term><listitem><para>Is the
new primary name of the group or organization.</para>
</listitem></varlistentry>
</variablelist>
<para><?sml-need 4>The following example shows the <command>group rename</command>
command  used to change a primary name from <literal>symphonists</literal>
to <literal>symphonists7</literal>: </para>
<informalexample><para><programlisting>dcecp> <literal>group rename symphonists -to symphonists7
</literal>
dcecp></programlisting></para>
</informalexample>
<para>Note that, if you change a primary name, that change is reflected in
the membership lists of all the groups and organizations in which the group
or organization is listed as a member. <!-- --></para>
</sect2>
<sect2 id="AGCC.SECPGO.div.34">
<title>Deleting Groups and Organizations</title>
<!-- --><para><indexterm id="AGCC.SECPGO.indx.93"><primary>groups</primary>
<secondary>deleting</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.94">
<primary>organizations</primary><secondary>deleting</secondary></indexterm>If
you delete a group or organization, you  also automatically delete any accounts
that use the group or organization.  For example, if you delete the group <literal>
symphonists</literal>, you also automatically delete the accounts <literal>
vivaldi symphonists baroque</literal> and <literal>mozart symphonists classic
</literal>.  </para>
<para>Use the <command>dcecp group delete</command> to delete groups  and
the <command>dcecp organization delete</command> command to delete  organizations.
  The following example shows the <command>group delete</command>  command
being used to delete the group <literal>symphonists</literal>:</para>
<informalexample><para><programlisting>dcecp> <literal>group delete symphonists
</literal>
dcecp></programlisting></para>
</informalexample>
<para>The next example shows the <command>organization delete</command> command
being used to delete the organization <literal>classic</literal>:</para>
<informalexample><para><programlisting>dcecp> <literal>organization delete classic
</literal>
dcecp></programlisting></para>
</informalexample>
<para>Note that you can delete multiple groups or organizations with a single
 <command>group delete</command> or <command>organization delete</command>
command by including the  names to delete in braces and separated by spaces
just as you would to  delete multiple principals. <indexterm spanend="AGCC.SECPGO.indx.93"
id="AGCC.SECPGO.indx.95"><indexterm spanend="AGCC.SECPGO.indx.94" id="AGCC.SECPGO.indx.96"></para>
</sect2>
</sect1>
<sect1 id="AGCC.SECPGO.div.35">
<title>Maintaining Membership Lists</title>
<para revisionflag="Changed"><indexterm id="AGCC.SECPGO.indx.97"><primary>
membership lists</primary></indexterm> <indexterm id="AGCC.SECPGO.indx.98">
<primary>groups</primary><secondary>membership lists</secondary></indexterm> <indexterm
id="AGCC.SECPGO.indx.99"><primary>organizations</primary><secondary>membership
lists</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.100"><primary>
accounts</primary><secondary>membership lists</secondary></indexterm> <indexterm
id="AGCC.SECPGO.indx.101"><primary>principals</primary><secondary>add from
foreign cells</secondary></indexterm>Each group or organization has a membership
list, which lists  the principals that are members of the group or organization.
   <?og-ChangeStart enh,13504,R1.2.2,foreign global group">Members of a group
can be principals from the local or foreign cells. Members of an organization
must be from the local cell only. <?og-ChangeEnd enh,13504,R1.2.2,foreign global group">Use
the <command>dcecp group add</command> command to add members to the membership
list and the <command>dcecp group remove</command> command to  remove members
from the list.</para>
<para>If you delete a member from a group or organization, any accounts for
the  deleted member that are associated with the group or organization are
also deleted.  For example, if you delete the principal <literal>mahler</literal>
from the group <literal>symphonists</literal>, the account <literal>mahler
symphonists classic</literal> is also deleted. </para>
<para>Note that the deleting of a principal from a group or organization can
affect the principal's rights to objects.  This change takes effect only when
the principal's ticket-granting ticket is renewed.  See Chapter 31 for more
information on ticket renewals.</para>
<sect2 id="AGCC.SECPGO.div.36">
<title>Effects of Account Creation on Membership Lists </title>
<para revisionflag="Changed">When you create accounts, the principal for whom
the account is created must be a member of the group or organization that
is named in the account.  For example, if you create the account <literal>
mahler symphonists classic</literal>, the principal <literal>mahler</literal>
must be a member of the <literal>symphonists</literal> group and the <literal>
classic</literal> organization. <?og-ChangeStart def, 13575,R1.2.2,Remove incorrect dcecp information"><!----><!--
.P--><!-- The \*Ldcecp\*O command recognizes this requirement and, if--><!--
you have the permissions to add to the group or organization, tries--><!--
to add the principal to the group and organization.  For example,--><!-- assume
that the principal \*Lmahler\*O is not a member of either the--><!-- group
\*Lsymphonists\*O or the organization \*Lclassic\*O.  If--><!-- you have the
proper permissions when you create the account \*Lmahler--><!-- symphonists
classic\*O, the \*Laccount create\*O command--><!-- automatically adds \*Lmahler\*O--><!--
to the \*Lsymphonists\*O and \*Lclassic\*O membership lists--><!-- so that
you can create the account in one step. --><!-- .P--><!-- However, if you
do not have the required permissions, the command--><!-- fails and displays
a message like the following:--><!-- .oS--><!-- Not authorized to perform
operation\*O--><!-- .oE--><!----><?og-ChangeEnd def, 13575,R1.2.2,Remove incorrect dcecp information"></para>
</sect2>
<sect2 id="AGCC.SECPGO.div.37" revisionflag="Changed">
<title>Adding and Deleting Group Members</title>
<!----><para>The following example shows the use of the <command>dcecp group
add</command>  command with the <option>member</option> option to add <literal>
mahler</literal>  to the group <literal>symphonists</literal> and delete <literal>
strauss</literal> from the group <literal>symphonists</literal>:</para>
<informalexample><para><programlisting>dcecp> <literal>group add symphonists -member mahler
</literal>
dcecp> <literal>group remove symphonists -member strauss</literal>
dcecp></programlisting></para>
</informalexample>
<?og-ChangeStart enh,13504,R1.2.2,foreign global group">
<para>Note that you can add a member of a foreign cell to a local group by
supplying the principal's fully qualified name.  Members  of an organization
must be from the local cell only. <?og-ChangeEnd enh,13504,R1.2.2,foreign global group"></para>
<para>You can add and remove mutiple members with one <command>group add</command>
or  <command>group remove</command> command.  To do so, enclose the member
names in quotes, separated  by spaces.  For example, to add the principals <literal>
bach</literal>, <literal>britten</literal>,  and <literal>mahler</literal>
to the  group <literal>symphonists</literal>, you would enter the following:
</para>
<informalexample><para><programlisting>dcecp> <literal>group add symphonists -member {bach britten mahler}
</literal>
dcecp></programlisting></para>
</informalexample>
<indexterm spanend="AGCC.SECPGO.indx.97" id="AGCC.SECPGO.indx.102"><indexterm
spanend="AGCC.SECPGO.indx.98" id="AGCC.SECPGO.indx.103"><indexterm spanend="AGCC.SECPGO.indx.100"
id="AGCC.SECPGO.indx.104"><indexterm spanend="AGCC.SECPGO.indx.99" id="AGCC.SECPGO.indx.105">
<para>In the unusual case where you are changing a host's group name information
while the host is logged into a DCE cell, the existing host credentials will
become invalid unless you perform extra steps to update the host credentials
with the new group name information.</para>
<para>Host credentials are managed by the <command>secval</command> process,
which performs security client functions on a DCE host.  Normally, just after
the host starts, the <command>secval</command> process logs the host into
the DCE cell, getting the host credentials and storing them on the host. Deactivate
and reactivate the <command>secval</command> process to update these credentials
after changing the group name information.  The following example illustrates
these operations on remote host <literal>persephone</literal>:</para>
<informalexample><para><programlisting>dcecp> <literal>secval deactivate /.:/hosts/persephone/config/secval
</literal>
dcecp> <literal>secval activate /.:/hosts/persephone/config/secval</literal>
dcecp></programlisting></para>
</informalexample>
<!-- --></sect2>
</sect1>
<sect1 id="AGCC.SECPGO.div.38">
<title>Creating and Maintaining Aliases for Principals or Groups</title>
<para>Use the <command>dcecp principal create</command> command to create
an maintain aliases  for principals and groups.  Organizations cannot be given
aliases. <!----></para>
<sect2 id="AGCC.SECPGO.div.39">
<title>Creating Aliases</title>
<!----><para><indexterm id="AGCC.SECPGO.indx.106"><primary>aliases</primary>
<secondary>creating</secondary></indexterm>To create an alias for a principal,
enter the <command>dcecp principal create</command> command in the following
form:</para>
<para><command>principal create</command> <symbol role="Variable">name</symbol> <option>
uid</option> <symbol role="Variable">unix_ID</symbol> <literal>-alias yes
</literal></para>
<para>where:</para>
<variablelist>
<varlistentry>
<term><symbol role="Variable">name</symbol></term><listitem><para>Is the alias
name for the principal or group.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">unix_ID</symbol></term><listitem><para>Is the
UNIX ID that is associated with the principal for which you are creating the
alias. </para>
</listitem></varlistentry>
<varlistentry>
<term><literal>-alias</literal></term><listitem><para>Indicates that <symbol
role="Variable">name</symbol> is an alias.</para>
</listitem></varlistentry>
</variablelist>
<para>To create an alias for a group, enter the <command>dcecp group create
</command> command in the following form:</para>
<para><command>group create</command> <symbol role="Variable">name</symbol> <option>
gid</option> <symbol role="Variable">group_ID</symbol> <literal>-alias yes
</literal></para>
<para>where:</para>
<variablelist>
<varlistentry>
<term><symbol role="Variable">name</symbol></term><listitem><para>Is the alias
name for the principal or group.</para>
</listitem></varlistentry>
<varlistentry>
<term><symbol role="Variable">group_ID</symbol></term><listitem><para>Is the
UNIX ID that is associated with the group for which you are creating the alias. 
</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>-alias</literal></term><listitem><para>Indicates that <symbol
role="Variable">name</symbol> is an alias.</para>
</listitem></varlistentry>
</variablelist>
<indexterm id="AGCC.SECPGO.indx.107"><primary>aliases</primary><secondary>
creating</secondary></indexterm>
<!-- --></sect2>
<sect2 id="AGCC.SECPGO.div.40">
<title>Changing Primary Names to Aliases and Vice Versa</title>
<!-- --><para><indexterm id="AGCC.SECPGO.indx.108"><primary>aliases</primary>
<secondary>changing</secondary></indexterm> <indexterm id="AGCC.SECPGO.indx.109">
<primary>primary names</primary><secondary>changing</secondary></indexterm> <indexterm
id="AGCC.SECPGO.indx.110"><primary>primary names</primary><secondary>about
</secondary></indexterm>To change an alias to a primary name or a primary
name to an alias, use the <command>dcecp principal modify</command> command
for a principal or the  <command>dcecp group modify</command> command for
a group.  These commands have the following form: </para>
<para><command>principal modify </command><symbol role="Variable">name</symbol>
 <option>alias</option> <literal>{yes|no}</literal></para>
<para><?sml-break><command>group modify </command><symbol role="Variable">
name</symbol>  <option>alias</option> <literal>{yes|no}</literal></para>
<para>where:</para>
<variablelist>
<varlistentry>
<term><symbol role="Variable">name</symbol></term><listitem><para>Is the primary
name to be changed to an alias or the alias to be changed to a primary name.
</para>
</listitem></varlistentry>
<varlistentry>
<term><literal>-alias</literal></term><listitem><para>Specifying <literal>
-alias yes</literal> changes the primary name identified by  <symbol role="Variable">
name</symbol> to an alias; specifying <literal>-alias no</literal> changes
the alias  identified by <symbol role="Variable">name</symbol> to the primary
name.</para>
</listitem></varlistentry>
</variablelist>
<para>A principal or group can have only one primary name at a time.   Before
you change  an alias to a primary name, first change the primary name to an
alias. <indexterm spanend="AGCC.SECPGO.indx.108" id="AGCC.SECPGO.indx.111"></para>
</sect2>
</sect1>
</chapter><!--+ 10/31/96 16:05:54     | tagMorph:  $Id: 3_pgo.sgm,v 1.1.3.1
1996/11/27 15:06:42 carrig Exp $     | tagMorph library:  $Id: 3_pgo.sgm,v
1.1.3.1 1996/11/27 15:06:42 carrig Exp $     | sml-to-docbook:  1.24     +-->
