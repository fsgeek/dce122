<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: task_user.sgm,v $
# Revision 1.1.2.10  1996/12/04  22:50:00  carrig
# 	{enh,R1.2.2}
# 	JC's edits
# 	[1996/12/04  22:48:00  carrig]
#
# Revision 1.1.2.9  1996/11/29  20:21:30  carrig
# 	{enh,R1.2.2}
# 	Finished edit changes; must scale graphics
# 	[1996/11/29  20:18:27  carrig]
# 
# Revision 1.1.2.8  1996/11/27  21:44:14  carrig
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:42:29  carrig]
# 
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:29:21  carrig]
# 
# Revision 1.1.2.7  1996/11/26  21:45:49  carrig
# 	{enh,R1.2.2}
# 	Putting in editor's comments
# 	[1996/11/26  21:41:48  carrig]
# 
# Revision 1.1.2.6  1996/11/25  21:51:52  carrig
# 	{enh,R1.2.2}
# 	Started to put in editor's comments
# 	[1996/11/25  21:50:15  carrig]
# 
# Revision 1.1.2.5  1996/11/07  20:44:06  weir
# 	Cleaned up history
# 	[1996/11/07  20:42:19  weir]
# 
# Revision 1.1.2.4  1996/11/06  20:41:20  carrig
# 	{enh,R1.2.2}
# 	OK for editing
# 	[1996/11/06  20:38:56  carrig]
# 
# Revision 1.1.2.3  1996/11/05  18:59:28  carrig
# 	{enh,R1.2.2}
# 	Second pass
# 	[1996/11/05  18:56:26  carrig]
# 
# Revision 1.1.2.2  1996/11/04  22:04:21  carrig
# 	{enh,R1.2.2}
# 	First pass at corrections
# 	[1996/11/04  22:01:09  carrig]
# 
# Revision 1.1.2.1  1996/11/01  18:21:22  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/11/01  18:18:35  wardr]
# 
# Revision 1.1.1.2  1996/11/01  18:18:35  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
]>
-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for-->
<!-- the full copyright text.-->
<!-- -->
<!-- -->
<!-- HISTORY-->
<!-- Revision 1.1.4.1  1996/09/19  14:12:42  sherman-->
<!-- 	{def,13575,R1.2.2}-->
<!-- 	Miscellaneous dcecp fixes-->
<!-- 	[1996/09/19  14:12:12  sherman]-->
<!---->
<!-- Revision 1.1.2.5  1995/05/25  19:12:24  rcb-->
<!-- 	PRENTICE HALL reformat: *really* last change-->
<!-- 	[1995/05/25  14:28:32  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat - index entries, odds and ends-->
<!-- 	[1995/03/27  19:48:58  rcb]-->
<!-- -->
<!-- 	prevented hyphenation of option names-->
<!-- 	[1995/03/09  14:59:51  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat-->
<!-- 	[1995/03/02  16:27:48  rcb]-->
<!-- -->
<!-- 	incoroporated 1.1 edits-->
<!-- 	[1995/03/02  15:59:27  rcb]-->
<!-- -->
<!-- Revision 1.1.2.4  1994/10/28  14:39:00  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	added index hits-->
<!-- 	[1994/10/28  14:38:31  wardr]-->
<!-- -->
<!-- Revision 1.1.2.3  1994/10/18  20:36:17  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final fixes for the GA release-->
<!-- 	[1994/10/18  20:35:56  wardr]-->
<!-- -->
<!-- Revision 1.1.2.2  1994/10/07  18:00:06  wardr-->
<!-- 	{enh, CR10014, R1.1}-->
<!-- 	Prepare for final draft review-->
<!-- 	[1994/10/07  17:58:35  wardr]-->
<!-- -->
<!-- Revision 1.1.2.1  1994/08/05  19:01:46  wardr-->
<!-- 	{enh, CR10014 R1.1}initial drafts of task scripts-->
<!-- 	[1994/08/05  19:01:18  wardr]-->
<!-- -->
<Chapter Id="AGCC.TSKUSR.div.1">
<Title>Managing DCE Users</Title>
<Para><IndexTerm Id="AGCC.TSKUSR.indx.1">
<Primary>task objects</Primary>
<Secondary><Literal>user</Literal></Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.TSKUSR.indx.2">
<Primary>users</Primary>
<Secondary>managing with the <Literal>user</Literal> task object</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.TSKUSR.indx.3">
<Primary>principals</Primary>
<SeeAlso>users</SeeAlso>
</IndexTerm>One of the most frequent DCE administration tasks is likely to
be managing users in your DCE environment.  Corporate reorganizations,
changing business needs, and fluctuating economics all exert pressures
causing users to come and go or to move between various groups or
organizations. 
</Para>
<Para>DCE users represent a big part of what DCE is designed to support; the
DCE services authenticate and admit some while denying access to those
who are unauthorized.  Indeed, users have complex management
requirements; their information is spread among multiple services that
help validate and control their activities.  User information includes
principal names, group and organization information, account
information, and information in CDS.
</Para>
<Para>The DCE control program includes separate administration objects for
managing each piece of user information in a DCE cell.  While these
separate objects might be very useful for making minor adjustments to
certain user information, their constant use for repetitive tasks such
as adding and removing users from a cell would prove quite tedious.  A
simpler method relies on the <Literal>user</Literal> task object that you can use
to more easily create, delete, and show user information in a DCE
cell.  Online help for this object is available using the <Literal>user
help</Literal> and <Command>user operations</Command> commands in <Command>dcecp</Command>.
</Para>
<Sect1 Id="AGCC.TSKUSR.div.2">
<Title>Creating a New User</Title>
<Para><IndexTerm Id="AGCC.TSKUSR.indx.4">
<Primary>users</Primary>
<Secondary>creating</Secondary>
</IndexTerm>Each <Literal>user</Literal> in a DCE environment is a person with a unique
identity (principal name). Each principal is a member of at least one
security group and organization and has an account in the DCE Security
Service registry database.  Although it is not required, each principal
can also have a directory in CDS.
</Para>
<Para>When you create a user with the <Literal>user</Literal> task object, you perform
several lower-level operations: 
</Para>
<OrderedList>
<ListItem>
<Para>The <Command>user create</Command> operation creates a new principal name and adds
the principal to a security group and organization.  If the security
group or organization does not exist when you invoke the operation,
you can force their creation by using the <Option>force</Option> option.  The
principal attributes assume default values, but you can specify other
attributes if necessary.  All of the attributes are listed in the
<Command>user(8dce)</Command> reference page.
</Para>
<Para>Typically, a security group's name is included in access
control lists (ACLs) that regulate user access to various server and data
objects in the DCE environment.  A security organization maintains
policies that are applied to all the principals that are members of
that organization.  Policies control things like the lifespan of
accounts, whether or when account passwords expire, or whether
passwords can contain nonalphanumeric characters.  You can read more
about administering principals, groups, and organizations in Chapter 30.
</Para>
</ListItem>
<ListItem>
<Para>The <Command>user create</Command> operation creates an account for the
principal and creates the user's password.  The account attributes
assume default values but you can specify other attributes if
necessary.  All of the attributes are listed in the <Command>user(8dce)</Command>
reference page. 
</Para>
<Para>A principal's account contains information about the principal such as
group and organization names, account creation and expiration
information, and information about tickets (which identify
principals to resources in a DCE environment).  You can read more
about administering accounts in Chapter 31.
</Para>
</ListItem>
<ListItem>
<?sml-need 11>
<Para>Finally, the <Command>user create</Command> operation adds a directory called
<Filename>/.:/users/</Filename><Symbol Role="Variable">principalname</Symbol> to CDS.  This directory can store 
user-specific application location information.  The operation also
adds an ACL entry to the default ACL which gives the user <Literal>rwtci</Literal>
permissions on the directory.  
These permissions allow users to insert objects and
links, but they cannot delete the directory or administer
replication on the directory.  Furthermore, users cannot create
additional directories unless you give them <Literal>w</Literal> (write) access to
the clearinghouse.  
You can read more about the purpose and use of CDS
directories in Chapter 18. 
You can read more about ACLs and CDS directories in
Chapter 16.
</Para>
</ListItem>
</OrderedList>
<!--   When you create a user with the \*Luser\*O task object, you are-->
<!--   creating a new principal name, adding the principal to a security-->
<!--   group and organization, creating an account for the principal and-->
<!--   creating the user's password.  The principal and account attributes-->
<!--   assume default values but you can specify other attributes if-->
<!--   necessary.  All of the attributes are listed in the \*Luser\*O task-->
<!--   object reference page. -->
<!--   .P-->
<!--   In general, a security group's name is included in ACLs (access-->
<!--   control lists) which regulate user access to various server and data-->
<!--   objects in the DCE environment.  A security organization establishes-->
<!--   policies that are applied to all the principals that are members of-->
<!--   that organization.  Policies control things like the lifespan of-->
<!--   accounts, whether or when account passwords expire, or whether-->
<!--   passwords can contain nonalphanumeric characters.  You can read more-->
<!--   about principal names, group names and organization names in Chapter-->
<!--   26 of the \*(Ac, entitled "\*VCreating and Maintaining Principals,-->
<!--   Groups, and Organizations\*O". -->
<!--   .P-->
<!--   A principal's account contains information about the principal such as-->
<!--   group and organization names, account creation and expiration-->
<!--   information, and information about tickets (tickets identify-->
<!--   principals to resources in a DCE environment).  You can read more-->
<!--   about accounts in Chapter 27 of the \*(Ac, entitled "\*VCreating and-->
<!--   Maintaining Accounts\*O".-->
<!--   .P-->
<!--   The \*Luser create\*O operation automatically adds a directory called-->
<!--   \*L/.:/users/\*Vprincipalname\*O to CDS and adds an ACL entry to the-->
<!--   default ACL which gives the user \*Lrwtci\*O permissions on the-->
<!--   directory.  This allows all access except for deleting the directory-->
<!--   and admninistering replication on the directory.  You can read more-->
<!--   about the purpose and use of CDS directories in Chapter 14 of the-->
<!--   \*(Ac, entitled "\*VManaging CDS Directories\*O". You can read more-->
<!--   about ACLs and CDS directories in Chapter 12 of the-->
<!--   \*(Ac, entitled "\*VControlling Access to CDS Names\*O".-->
<Para>You generally need numerous permissions to create new users in your
DCE cell, so you should log into the cell administrator's account (or
a similar privileged account). The <Command>user(8dce)</Command> reference page lists the
required permissions. 
</Para>
<Para>To create a new user in a DCE cell, invoke a <Command>user create</Command>
operation.  The following example creates a principal name <Literal>P_Pestana</Literal>
and an account with the same name.  The <Literal>create</Literal> operation requires
your password to prevent someone else from using an unattended session
to create an unauthorized account.  You must also provide the
<Option>password</Option> option to specify a password for the user.  The required
<Option>group</Option> and <Option>organization</Option> options add principal <Literal>P_Pestana</Literal>
to the named group and organization.  The optional <Option>fullname</Option>
option creates a fullname to help other human users recognize the
principal.  
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>user create P_Pestana -fullname {Patricia Pestana} \ </Literal>
> <Literal>-mypwd mxyzptlk -password change.me -group users \ </Literal>
> <Literal>-organization managers </Literal>
dcecp>
</ProgramListing></Para>
</InformalExample>
<Para RevisionFlag="Changed"><?og-ChangeStart def,13575,R1.2.2,Removed reference to fullname attribute">You can create multiple users by specifying a list of user names as an
argument to the <Command>user create</Command> operation.  This method poses some
limitations, however.  All created users will have the same initial
password, group name, and organization name.  Furthermore, you cannot
specify the <Literal>uid</Literal> attribute since this is
unique for each user.  The following example creates several users with
a password <Literal>change.me</Literal>, a group name of <Literal>users</Literal>, and an
organization named <Literal>staff</Literal>:
<?og-ChangeEnd def,13575,R1.2.2,Removed reference to fullname attribute"></Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>user create {R_Lee B_Joy N_Lynn D_Dee} -mypwd mxyzptlk \ </Literal>
> <Literal>-password change.me -group users -organization staff</Literal>
dcecp>
</ProgramListing></Para>
</InformalExample>
</Sect1>
<Sect1 Id="AGCC.TSKUSR.div.3">
<Title>Showing User Information</Title>
<Para><IndexTerm Id="AGCC.TSKUSR.indx.5">
<Primary>users</Primary>
<Secondary>showing information about</Secondary>
</IndexTerm>Sometimes you might want to view the attributes for a user.  For
instance, you might want to see the expiration date for one or more
accounts or view the fullname of a principal. 
</Para>
<Para>The <Command>user show</Command> command returns the attributes associated with
users that are included as arguments to the command.  The attributes
include principal attributes and ERAs, and account attributes and
policies.  The information is returned as if the following commands
were run in the following order:
</Para>
<ItemizedList>
<ListItem>
<Para><Command>principal show</Command>
</Para>
</ListItem>
<ListItem>
<Para><Literal>account show -all</Literal>
</Para>
</ListItem>
</ItemizedList>
<!-- Although you can easily see the value of creating or deleting multiple-->
<!-- users, the value of invoking \*Luser show\*O for multiple users is not-->
<!-- as clear-cut.  Instead, you may find the \*Lprincipal\*O and-->
<!-- \*Laccount\*O object's \*Lcatalog\*O and \*Lshow\*O operations to be-->
<!-- more convenient.  Although we don't show how to invoke user show for-->
<!-- multiple users, you can-->
<Para>The following command displays the principal and account attributes
associated with user <Literal>P_Pestana</Literal>:
</Para>
<InformalExample>
<Para><ProgramListing><?sml-point-size 10>
<!--no-op:  12-->
dcecp> <Literal>user show P_Pestana</Literal>
{fullname {Pat Pestana}}
{uid 5139}
{uuid 00001413-ad4f-21cd-8c00-0000c08adf56}
{alias no}
{quota unlimited}
{groups users}
{acctvalid yes}
{client yes}
{created /.../my_cell.goodco.com/cell_admin \
    1994-08-01-16:41:32.000+00:00I-----}
{description {}}
{dupkey no}
{expdate none}
{forwardabletkt yes}
{goodsince 1994-08-01-16:41:32.000+00:00I-----}
{group users}
{home /}
{lastchange /.../my_cell.goodco.com/cell_admin \
    1994-08-01-16:41:32.000+00:00I-----}
{organization managers}
{postdatedtkt no}
{proxiabletkt no}
{pwdvalid yes}
{renewabletkt yes}
{server yes}
{shell {}}
{stdtgtauth yes}
nopolicy
dcecp>
<?sml-point-size 12>
<!--no-op:  14-->
</ProgramListing></Para>
</InformalExample>
<Para>You can show information about multiple users by specifying a list of
user names as an argument to the <Command>user create</Command> operation.  
</Para>
</Sect1>
<Sect1 Id="AGCC.TSKUSR.div.4">
<Title>Deleting a User</Title>
<Para><IndexTerm Id="AGCC.TSKUSR.indx.6">
<Primary>users</Primary>
<Secondary>removing from a cell</Secondary>
</IndexTerm>When users leave your organization, you might need to delete the user
from the cell.  Use the <Command>user delete</Command> command to do this.  This
operation removes the principal name from the registry which, in turn,
deletes the account and removes the principal from any groups and
organizations.  The operation also deletes the
<Filename>/.:/users/</Filename><Symbol Role="Variable">principalname</Symbol> directory and any contents from CDS.
</Para>
<Para>You need numerous permissions, such as those generally associated with
cell administrator, to delete a user.  See the <Command>user(8dce)</Command> 
reference page.
</Para>
<Para>The following example operation removes user <Literal>P_Pestana</Literal> from the
cell:
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>user delete P_Pestana</Literal>                                     
dcecp>
</ProgramListing></Para>
</InformalExample>
<Para>You can remove multiple users from your cell by specifying a list of
user names as an argument to the <Command>user delete</Command> operation, as
follows:
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>user delete {W_Rosenberry J_Hunter P_Pestana}</Literal>
dcecp>
</ProgramListing></Para>
</InformalExample>
<Para>If you have permissions in a foreign cell, you can remove one or more
users from that cell by specifying the global principal name of the
users to be deleted.  For example:
</Para>
<InformalExample>
<Para><ProgramListing>dcecp> <Literal>user delete /.../their_cell.goodco.com/J_Jones</Literal>
dcecp>
</ProgramListing></Para>
</InformalExample>
</Sect1>
<Sect1 Id="AGCC.TSKUSR.div.5">
<Title>Modifying or Extending the User Object</Title>
<Para><IndexTerm Id="AGCC.TSKUSR.indx.7">
<Primary>users</Primary>
<Secondary>extending the <Literal>user</Literal> task object</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.TSKUSR.indx.8">
<Primary><Literal>user</Literal> object</Primary>
<Secondary>extending</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.TSKUSR.indx.9">
<Primary>extending</Primary>
<Secondary>the <Literal>user</Literal> task object</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.TSKUSR.indx.10">
<Primary>task objects</Primary>
<Secondary><Literal>user</Literal></Secondary>
<Tertiary>extending</Tertiary>
</IndexTerm>The <Literal>user</Literal> task object is implemented as a script so that
administrators can modify or extend it on a per-site basis.  For
example, administrators might want to add GDS and DFS information to
the object.  Other possible modifications include the following:
</Para>
<ItemizedList>
<ListItem>
<Para>Changing the location of the CDS directory created for users,
or removing it completely.
</Para>
</ListItem>
<ListItem>
<Para>Changing the default ACLs placed on the various objects. 
</Para>
</ListItem>
<ListItem>
<Para>Adding an option to give users write access to the clearinghouse where
the master replica of the <Filename>/.:/users/</Filename><Symbol Role="Variable">username</Symbol> directory
resides.  This allows users to create their own subdirectories.  The
option could add individual principal names to the clearinghouse ACL.
An easier method could add principals to a group that has write access
to the clearinghouse.
</Para>
</ListItem>
<ListItem>
<Para>Setting certain attributes or policies on all newly created principals
and accounts to match the site's policies.  For example, you could set
principals to have a <Literal>pwd_val_type</Literal> ERA and set accounts to
generate random passwords.
</Para>
</ListItem>
<ListItem>
<Para>Setting up site-specific defaults for passwords (to be changed
by the user later), groups, organizations, principal
directories, and so on.
</Para>
</ListItem>
<ListItem>
<Para>Supporting a <Command>user modify</Command> command.  Such a command could change
group or organization information or some other attributes associated
with users.
</Para>
</ListItem>
</ItemizedList>
<Para>Part 1 of this guide discusses ways to create new <Command>dcecp</Command> objects
or modify existing objects written with the <Command>dcecp</Command> language.
</Para>
</Sect1>
</Chapter>
<!--+ 10/31/96 16:05:54
    | tagMorph:  $Id: task_user.sgm,v 1.1.2.10 1996/12/04 22:50:00 carrig Exp $
    | tagMorph library:  $Id: task_user.sgm,v 1.1.2.10 1996/12/04 22:50:00 carrig Exp $
    | sml-to-docbook:  1.24
    +-->
