<!--
# @OSF_COPYRIGHT@
# 
# 
# HISTORY
# $Log: 1_over.sgm,v $
# Revision 1.1.2.12  1996/12/04  22:48:52  carrig
# 	{enh,R1.2.2}
# 	JC's edits
# 	[1996/12/04  22:46:34  carrig]
#
# Revision 1.1.2.11  1996/12/03  22:04:47  carrig
# 	{enh,R1.2.2}
# 	Scaled graphics
# 	[1996/12/03  22:02:24  carrig]
# 
# Revision 1.1.2.10  1996/11/29  20:20:25  carrig
# 	{enh,R1.2.2}
# 	Finished edit changes; must scale graphics
# 	[1996/11/29  20:16:52  carrig]
# 
# Revision 1.1.2.9  1996/11/27  21:43:16  carrig
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:41:15  carrig]
# 
# 	{enh,R1.2.2}
# 	More editor's comments
# 	[1996/11/27  21:28:02  carrig]
# 
# Revision 1.1.2.8  1996/11/26  21:44:51  carrig
# 	{enh,R1.2.2}
# 	Putting in editor's comments
# 	[1996/11/26  21:40:27  carrig]
# 
# Revision 1.1.2.7  1996/11/25  21:51:00  carrig
# 	{enh,R1.2.2}
# 	Started to put in editor's comments
# 	[1996/11/25  21:48:55  carrig]
# 
# Revision 1.1.2.6  1996/11/07  20:43:08  weir
# 	Cleaned up history
# 	[1996/11/07  20:41:15  weir]
# 
# Revision 1.1.2.5  1996/11/06  21:09:56  carrig
# 	{enh,R1.2.2}
# 	[1996/11/06  21:09:43  carrig]
# 
# Revision 1.1.2.4  1996/11/06  20:40:18  carrig
# 	{enh,R1.2.2}
# 	OK for editing
# 	[1996/11/06  20:37:41  carrig]
# 
# Revision 1.1.2.3  1996/11/05  18:58:31  carrig
# 	{enh,R1.2.2}
# 	Second pass
# 	[1996/11/05  18:55:10  carrig]
# 
# Revision 1.1.2.2  1996/11/04  22:03:25  carrig
# 	{enh,R1.2.2}
# 	First pass at corrections
# 	[1996/11/04  21:59:52  carrig]
# 
# Revision 1.1.2.1  1996/11/01  18:19:57  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 	[1996/11/01  18:17:38  wardr]
# 
# Revision 1.1.1.2  1996/11/01  18:17:38  wardr
# 	{edit,R1.2.2}
# 	Initial checkin after sgml conversion
# 
# $EndLog$
-->
<!---->
<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1993, v.4001
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V2.4//EN" [
<!ENTITY AGCC.SECOVR.ent.1 SYSTEM "eps/1_over_10.ps" NDATA eps>
<!ENTITY AGCC.SECOVR.ent.2 SYSTEM "eps/1_over_20.ps" NDATA eps>
<!ENTITY AGCC.SECOVR.ent.3 SYSTEM "eps/1_over_30.ps" NDATA eps>
<!ENTITY AGCC.SECOVR.ent.4 SYSTEM "eps/1_over_40.ps" NDATA eps>
]>
-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the-->
<!-- src directory for the full copyright text.-->
<!---->
<!--         -->
<!-- HISTORY-->
<!-- Revision 1.1.9.1  1996/09/19  15:31:12  sherman-->
<!-- 	{def,13575,R1.2.2}-->
<!-- 	Fixed dcecp index entries-->
<!-- 	[1996/09/19  15:30:51  sherman]-->
<!---->
<!-- Revision 1.1.6.21  1995/05/25  19:07:21  rcb-->
<!-- 	PRENTICE HALL reformat: *really* last change-->
<!-- 	[1995/05/25  14:11:09  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat: final changes-->
<!-- 	[1995/05/25  13:24:26  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat - index entries, odds and ends-->
<!-- 	[1995/03/27  19:50:33  rcb]-->
<!-- -->
<!-- 	fixes to header capitalization-->
<!-- 	[1995/03/08  16:21:03  rcb]-->
<!-- -->
<!-- 	PRENTICE HALL reformat-->
<!-- 	[1995/03/06  20:50:58  rcb]-->
<!-- -->
<!-- 	incorporated 1.1 edits-->
<!-- 	[1995/03/06  20:24:53  rcb]-->
<!-- -->
<!-- Revision 1.1.6.20  1994/10/20  16:06:51  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Final GA release edits-->
<!-- 	[1994/10/20  16:01:53  wardr]-->
<!-- -->
<!-- Revision 1.1.6.19  1994/08/30  21:27:21  millette-->
<!-- 	Checked out to remove sec_salvage_db references, but all-->
<!-- 	such refrences were commented out.-->
<!-- 	No changes made.-->
<!-- 	[1994/08/30  21:26:47  millette]-->
<!-- -->
<!-- Revision 1.1.6.18  1994/08/24  13:13:47  wardr-->
<!-- 	{edit R1.1}-->
<!-- 	Fixed figure pathnames-->
<!-- 	[1994/08/24  13:12:48  wardr]-->
<!-- -->
<!-- Revision 1.1.6.17  1994/08/23  19:03:42  millette-->
<!-- 	(def,10014, R1.1)-->
<!-- 	dcecp edits-->
<!-- 	[1994/08/23  19:03:17  millette]-->
<!-- -->
<!-- Revision 1.1.6.16  1994/08/23  18:59:24  millette-->
<!-- 	(def,10014, R1.1)-->
<!-- 	dcecp edits-->
<!-- 	(def,10056, R1.1)-->
<!-- 	add era-->
<!-- 	[1994/08/23  18:58:50  millette]-->
<!-- -->
<!-- Revision 1.1.6.15  1994/08/22  15:55:09  norb-->
<!-- 	<<<checked out by mistake.>>>-->
<!-- 	[1994/08/22  12:33:31  norb]-->
<!-- -->
<!-- 	<<<checked out by mistake>>>-->
<!-- -->
<!-- Revision 1.1.6.14  1994/07/12  23:20:38  jshirley-->
<!-- 	No change.-->
<!-- 	[1994/07/12  23:20:19  jshirley]-->
<!-- -->
<!-- Revision 1.1.6.13  1994/06/21  19:36:58  millette-->
<!-- 	(def, 9512, R1.1)-->
<!-- 	Remove non-implemented auto replica initialization-->
<!-- 	(def, 9404, R1.1)-->
<!-- 	clarify that local rgy created after dce_login-->
<!-- 	[1994/06/21  19:36:30  millette]-->
<!-- -->
<!-- Revision 1.1.6.12  1994/05/05  21:26:44  steto-->
<!-- 	{enh, 10014, R1.1}-->
<!-- 	Made a few more cchanges to clarify what dcecp and rgy_edit do differently.-->
<!-- 	[1994/05/05  21:23:12  steto]-->
<!-- -->
<!-- Revision 1.1.6.11  1994/05/05  20:26:42  steto-->
<!-- 	{enh, 10014, R1.1}-->
<!-- 	Updated text according to engineering feedback.-->
<!-- 	[1994/05/05  19:17:46  steto]-->
<!-- -->
<!-- Revision 1.1.6.10  1994/05/04  21:19:11  steto-->
<!-- 	{enh, 10014, edt}-->
<!-- 	Added general information about the DCE control program (dcecp) to the chapter.-->
<!-- 	[1994/05/04  21:18:37  steto]-->
<!-- -->
<!-- Revision 1.1.6.9  1994/03/22  22:04:18  zahn-->
<!-- 	{enh,5923,R1.1}-->
<!-- -->
<!-- 	Revised to introduce ACL facility, which-->
<!-- 	was moved here from User's Guide and Ref.-->
<!-- 	[1994/03/22  22:04:02  zahn]-->
<!-- -->
<!-- Revision 1.1.6.8  1994/03/02  20:54:31  millette-->
<!-- 	(def,9218,R1.1)-->
<!-- 	Clarified Security name discussion.-->
<!-- 	[1994/03/02  20:54:06  millette]-->
<!-- -->
<!-- Revision 1.1.6.7  1994/03/01  21:57:36  rom-->
<!-- 	Fix typo (missing backslash).-->
<!-- 	[1994/03/01  21:56:39  rom]-->
<!-- -->
<!-- Revision 1.1.6.6  1993/11/18  20:35:10  millette-->
<!-- 	(def, R1.0.3, 9512)-->
<!-- 	Changing 1.0.2 to 1.0.3-->
<!-- 	[1993/11/18  20:34:38  millette]-->
<!-- -->
<!-- Revision 1.1.6.5  1993/09/01  17:03:40  tmw-->
<!-- 	Index correction.-->
<!-- 	[1993/09/01  17:01:48  tmw]-->
<!-- -->
<!-- Revision 1.1.6.4  1993/08/27  18:39:55  tmw-->
<!-- 	Added index entries for second version of master index.-->
<!-- 	[1993/08/27  18:36:51  tmw]-->
<!-- -->
<!-- Revision 1.1.6.3  1993/07/06  18:37:33  buckler-->
<!-- 	{edit, R1.0.2}-->
<!-- 	Prentice-Hall editorial changes.-->
<!-- 	[1993/07/06  18:17:15  buckler]-->
<!-- -->
<!-- Revision 1.1.6.2  1993/06/01  17:56:50  millette-->
<!-- 	Prentice Hall edits-->
<!-- 	[1993/06/01  17:55:47  millette]-->
<!-- -->
<!-- Revision 1.1.4.11  1993/03/02  22:17:32  buckler-->
<!-- 	Fixed mismatching .zA and .zZ codes-->
<!-- 	[1993/03/02  22:16:29  buckler]-->
<!-- -->
<!-- Revision 1.1.4.10  1993/02/22  22:35:50  buckler-->
<!-- 	Changed .P! to .pI and added Postscript boundary boxes-->
<!-- 	[1993/02/22  22:35:24  buckler]-->
<!-- -->
<!-- Revision 1.1.4.9  1993/02/19  23:47:53  millette-->
<!-- 	Bug 7215: 1.0.2 review corrections-->
<!-- 	[1993/02/19  23:00:01  millette]-->
<!-- -->
<!-- 	Bug 7215: Corrections from 1.0.2 review-->
<!-- 	[1993/02/19  22:29:53  millette]-->
<!-- -->
<!-- Revision 1.1.4.8  1993/01/28  20:09:54  dbelch-->
<!-- 	Embedding copyright notice-->
<!-- 	[1993/01/28  18:46:03  dbelch]-->
<!-- -->
<!-- Revision 1.1.4.7  1993/01/27  17:04:52  buckler-->
<!-- 	Fixed cross-refs and figure calls for new book org-->
<!-- 	[1993/01/27  16:57:34  buckler]-->
<!-- -->
<!-- Revision 1.1.4.6  1993/01/14  19:02:07  millette-->
<!-- 	Bug 6807: Fix to PostScript embed for Figure 1-3.  No change bars used.-->
<!-- 	[1993/01/14  18:59:02  millette]-->
<!-- -->
<!-- Revision 1.1.4.5  1993/01/08  19:29:04  millette-->
<!-- 	Bug 6469: Update for 1.0.2 replication.  Also did an editorial pass-->
<!-- 	to ensure consistent replication terminology use and correct terminology and-->
<!-- 	capitalization of Security Server and Security Service (e.g., not security server-->
<!-- 	and not Security component)-->
<!-- 	[1993/01/08  18:53:26  millette]-->
<!-- -->
<!-- Revision 1.1.4.4  1992/09/25  15:49:53  millette-->
<!-- 	Bug 5044: Removed passwd_override.private from-->
<!-- 	Table 1-1. Changed /.../cellname/subsys/dce/security to /.../cellname/subsys/dce/sec-->
<!-- 	[1992/09/25  15:48:27  millette]-->
<!-- -->
<!-- Revision 1.1.4.3  1992/08/26  13:12:49  weir-->
<!-- 	Test-->
<!-- 	[1992/08/26  13:08:23  weir]-->
<!-- -->
<!-- 	Removed change bars-->
<!-- 	[1992/08/26  12:25:53  weir]-->
<!-- -->
<!-- Revision 1.1.4.2  1992/08/25  21:23:43  weir-->
<!-- 	Moved to dce1.0.2doc-->
<!-- 	[1992/08/25  21:04:51  weir]-->
<!-- -->
<!-- Revision 1.1.2.6  1992/06/30  20:31:28  millette-->
<!-- 	Bug 4181: Stress that /etc/passwd and/etc/group files not used for local login-->
<!-- 	[1992/06/30  20:29:44  millette]-->
<!-- -->
<!-- Revision 1.1.2.5  1992/06/04  21:54:09  millette-->
<!-- 	Bug 3792: Miscellaneous editorial and technical corrections-->
<!-- 	[1992/06/04  21:33:48  millette]-->
<!-- -->
<!-- Revision 1.1.2.4  1992/05/20  15:02:59  millette-->
<!-- 	Bug 3436 and 3023: Misc editoral and format corrections.-->
<!-- 	[1992/05/20  14:44:45  millette]-->
<!-- -->
<!-- Revision 1.1.2.3  1992/04/29  22:39:52  millette-->
<!-- 	Bug 2771: Miscellaneous editoral corrections.  Change bars not used.-->
<!-- 	[1992/04/29  22:37:56  millette]-->
<!-- -->
<!-- Revision 1.1.2.2  1992/04/24  16:11:29  millette-->
<!-- 	For bug 2498:  add local registry info (sections 1.8 and 1.9)-->
<!-- 	[1992/04/24  15:44:58  millette]-->
<!-- -->
<!-- Revision 1.1  1992/01/29  16:24:10  damon-->
<!-- 	Initial revision-->
<!-- -->
<!---->
<!-- (c) Copyright 1991, Open Software Foundation, Inc.  ALL RIGHTS RESERVED-->
<!-- -->
<!-- ********************************************************************-->
<!--                                                                    *-->
<!-- HP/DIGITAL CONFIDENTIAL-->
<!-- Copyright (c) 1991 Hewlett-Packard Co. and Digital Equipment Corp.  -->
<!-- All rights reserved.-->
<!--                                                                    *-->
<!-- ********************************************************************-->
<!-- -->
<Chapter Id="AGCC.SECOVR.div.1">
<Title>Overview of DCE Security</Title>
<Para>This chapter provides a brief introduction to the DCE Security Service.  
The DCE Security Service consists of the following services:
</Para>
<ItemizedList>
<ListItem>
<IndexTerm Id="AGCC.SECOVR.indx.1">
<Primary>registry</Primary>
<Secondary>service</Secondary>
</IndexTerm>
<Para>Registry service&mdash;Maintains the registry database, which is a
replicated database of principals, groups, organizations, accounts, and
administrative policies.
</Para>
</ListItem>
<ListItem>
<IndexTerm Id="AGCC.SECOVR.indx.2">
<Primary>authentication service</Primary>
</IndexTerm>
<Para>Authentication service&mdash;Handles user authentication or the process 
of verifying that principals are correctly identified.  The authentication 
service also issues tickets that a principal uses to access remote services.  
The ticket contains data that is presented by the principal requesting the 
service to the principal providing the service.  
</Para>
</ListItem>
<ListItem>
<IndexTerm Id="AGCC.SECOVR.indx.3">
<Primary>privilege service</Primary>
</IndexTerm>
<Para>Privilege service&mdash;Supplies the user's privilege attributes, which are used  
to ensure that a principal has the rights to perform requested operations.  
</Para>
</ListItem>
</ItemizedList>
<Para>In addition, the DCE Security Service provides the following:
</Para>
<ItemizedList>
<ListItem>
<IndexTerm Id="AGCC.SECOVR.indx.4">
<Primary>ACL facility</Primary>
</IndexTerm>
<Para>Access control list (ACL) facility&mdash;Establishes and grants access rights to an
object based on the object's access permissions.
</Para>
</ListItem>
<ListItem>
<IndexTerm Id="AGCC.SECOVR.indx.5">
<Primary>ERA</Primary>
<Secondary>facility</Secondary>
</IndexTerm>
<Para>Extended registry attribute (ERA) facility&mdash;Provides tools to extend 
the  registry database schema to define additional attributes and tools to 
attach those attributes to registry objects. 
</Para>
</ListItem>
</ItemizedList>
<Para>The DCE host daemon (<Filename>dced</Filename>) acts as the security client.
</Para>
<Para>The DCE Registry, Authentication, and Privilege Services are implemented 
as a single daemon: the security server (<Command>secd</Command>).
</Para>
<Sect1 Id="AGCC.SECOVR.div.2">
<Title>DCE Authentication Service Servers and Clients</Title>
<Para>The authentication service
<IndexTerm Id="AGCC.SECOVR.indx.6">
<Primary>authentication service</Primary>
<Secondary>about</Secondary>
</IndexTerm>consists of the registry database, security servers,
and security clients.    A security client communicates with a security
server (<Symbol Role="Variable">dcelocal</Symbol><Filename>/bin/secd</Filename>) to request information and
operations.  The security servers access the registry database to perform
queries and updates and to validate user logins.  To gain access to the
registry database, the authentication service must talk to the registry
service.  Figure 27-1 is a simplified representation of the relationship
between security clients, servers, and the registry database.
</Para>
<Figure>
<Title>Machines, Servers, and the Database</Title>
<Graphic Entityref="AGCC.SECOVR.ent.1" Scalefit="1" Reprodep="300" Reprowid="300"></Graphic>
</Figure>
<!--Norb - replaced pathname to figures so I can build-->
<!--.pI figures/1_over_10.ps 0 0 1-->
<IndexTerm Id="AGCC.SECOVR.indx.7" SpanEnd="AGCC.SECOVR.indx.6">
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.3">
<Title>The Registry Database</Title>
<Para><IndexTerm Id="AGCC.SECOVR.indx.8">
<Primary>registry</Primary>
<Secondary>database</Secondary>
<Tertiary>about</Tertiary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.9">
<Primary>principals</Primary>
<Secondary>about</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.10">
<Primary>groups</Primary>
<Secondary>about</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.11">
<Primary>organizations</Primary>
<Secondary>about</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.12">
<Primary>accounts</Primary>
<Secondary>about</Secondary>
</IndexTerm>The registry database contains the following information: 
</Para>
<ItemizedList>
<ListItem>
<Para>Principals&mdash;Principals are the  
users of the system.  Principals can be interactive principals (human users) or
noninteractive (servers, machines, and cells).  Principals
can be associated with access permissions. 
</Para>
</ListItem>
<ListItem>
<Para>Groups&mdash;Groups are collections 
of principals that are identified by a group name.  Groups
can be associated with access permissions. 
</Para>
</ListItem>
<ListItem>
<Para>Organizations&mdash;Organizations are collections 
of principals; these principals are identified
by an organization name.  Organizations define the policies associated with
the principals in the registry.  Organizations cannot be associated with
access permissions. 
</Para>
</ListItem>
<ListItem>
<Para>Accounts&mdash;Accounts contain 
the passwords and accounting information that allow principals authenticated
access to objects within the cell.  (Authenticated
access can also occur between principals in different cells, as
described in the following text.) 
</Para>
</ListItem>
<ListItem>
<Para>Policies and Properties&mdash;Policies
and properties regulate such things as password length and format
and certain authentication requirements. 
</Para>
</ListItem>
<ListItem>
<Para>The <Literal>replist</Literal> object&mdash;This object is used to manage 
replicas of the registry database.
</Para>
</ListItem>
<ListItem>
<Para>The <Command>xattrschema</Command> object&mdash;This object is the extended registry 
schema created with the ERA facility.
</Para>
</ListItem>
</ItemizedList>
<!-- The chapter titled "Accessing Registry Objects" -->
<Para>(See Chapter 41 for a detailed description of 
the structure of the registry database
and the types of information it contains.) 
<IndexTerm Id="AGCC.SECOVR.indx.13">
<Primary>cells</Primary>
<Secondary>about</Secondary>
</IndexTerm></Para>
<Para>The collection of objects
controlled by a registry database is an entity known as a <Symbol Role="Variable">cell</Symbol>.  
Authenticated communications are possible between cells
only if those cells have special accounts in the registry database
at the cell they wish to communicate with.  These special accounts
set up cross-cell authentication, which gives principals from one
cell authenticated access to another cell.  (See 
<!-- the chapter titled "Administering a Multi-Cell Environment" -->
Chapter 33
for information about establishing accounts for cross-cell authentication.)
</Para>
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.4">
<Title>Physical Security of the Database</Title>
<IndexTerm Id="AGCC.SECOVR.indx.14">
<Primary>registry</Primary>
<Secondary>database</Secondary>
<Tertiary>physical security</Tertiary>
</IndexTerm>
<Para>The DCE Security Service provides safeguards for network security,
protecting information that is transmitted across the network
by guaranteeing the identities of principals who engage in cross-machine
communications.  The security server and the database 
that it serves, however,
reside on a local machine.  The registry database is only as secure
as the security provided by the machine on which it resides.  In addition
to ensuring that sensitive data can be accessed on the local machine
only by root, you need to provide physical security for the machine
on which the security server resides.  This can include situating
the machine in a locked room, keeping a log of when
and by whom the machine is accessed, and any other methods
that may be appropriate to your needs. 
</Para>
<Para>(See the &DCEDk; for a more detailed discussion of authentication.)
</Para>
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.5">
<Title>How the Registry Database is Stored</Title>
<Para><IndexTerm Id="AGCC.SECOVR.indx.15">
<Primary>registry</Primary>
<Secondary>database</Secondary>
<Tertiary>how stored</Tertiary>
</IndexTerm>Each
security server maintains a working
copy of the registry database in virtual memory and a permanent
copy on disk.  All reads and updates operate on the copy 
that is in virtual
memory.  The servers use the copy that is on disk to initialize the copy in
virtual memory when they start up.  An atomic update log is used to
guarantee the database state in the event of server failure. 
</Para>
<Para>Figure 27-2 shows the server and the disk and virtual
memory copies of the registry database.
</Para>
<?sml-need 3.75i>
<Figure>
<Title>Disk Memory and Virtual Memory Copies of the Registry Database </Title>
<Graphic Entityref="AGCC.SECOVR.ent.2" Scalefit="1" Reprodep="350" Reprowid="350"></Graphic>
</Figure>
<!--Norb - replaced pathname to figures so I can build-->
<?sml-space .5>
<!--.pI figures/1_over_20.ps 0 0 1-->
<Para>Each security server periodically saves its entire database
from virtual memory to disk.  The database is stored in
<Symbol Role="Variable">dcelocal</Symbol><Filename>/var/security/rgy_data</Filename>.
</Para>
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.6">
<Title>Replicated Databases</Title>
<Para><IndexTerm Id="AGCC.SECOVR.indx.16">
<Primary>replica</Primary>
<Secondary>about (security)</Secondary>
</IndexTerm>The
registry database can be replicated within its cell.  
Each instance of a security server in a cell maintains a working copy of
the database.  Throughout this guide, the combination of a security server
and its data (the registry database) is referred to as a <Symbol Role="Variable">replica</Symbol>.   
Typically, you create several replicas in a cell to enhance performance
and reliability.  
</Para>
<Para>The task of keeping the cell's replicas consistent is handled automatically
by the security servers.  Any changes that you make are automatically reflected
in all replicas, as described in the following section.
</Para>
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.7">
<Title>How Updates Are Handled</Title>
<Para><IndexTerm Id="AGCC.SECOVR.indx.17">
<Primary>registry</Primary>
<Secondary>database</Secondary>
<Tertiary>updating</Tertiary>
</IndexTerm>Updates are made to only one database,
and the changes are propagated to all others.  
While propagations
are pending, all replicas are accessible even if they are not completely
up-to-date.  In other words, even replicas to which the
changes were not yet applied are available.  This replication mechanism
ensures that all replicas remain available for login validation and
for read operations even when changes are in the process of being
propagated. 
</Para>
<Sect2 Id="AGCC.SECOVR.div.8">
<Title>Master and Slave Replicas</Title>
<Para>Only one replica in a cell, the <Replaceable>master
replica</Replaceable>, accepts updates to its database from clients.  Other
replicas, called <Replaceable>slave replicas</Replaceable>, accept only reads from clients.  
The master replica propagates 
any updates to the slave replicas.  
For example, either a master or a slave replica can
provide account information to a client program such as <Filename>/bin/login</Filename>. 
However, if you are adding an account or changing password information,
those updates can be handled only by the master replica.  
</Para>
<Para>The process of updating the database differs slightly between the master replica 
and slave replicas.  
Figures 27-3 and 27-4 illustrate the master and slave update processes.  
The processes are described in the sections that
follow the figures.  
</Para>
<?sml-need 5.25i>
<Figure>
<Title>The Master Replica Update Process</Title>
<Graphic Entityref="AGCC.SECOVR.ent.3" Scalefit="1" Reprodep="300" Reprowid="300"></Graphic>
</Figure>
<!--Norb - replaced pathname to figures so I can build-->
<?sml-space .5>
<!--.pI figures/1_over_30.ps 0 0 1-->
<?sml-need 5.25i>
<Figure>
<Title>Slave Replica Update Process</Title>
<Graphic Entityref="AGCC.SECOVR.ent.4" Scalefit="1" Reprodep="300" Reprowid="300"></Graphic>
</Figure>
<!--Norb - replaced pathname to figures so I can build-->
<!--.pI figures/1_over_40.ps 0 0 1-->
<IndexTerm Id="AGCC.SECOVR.indx.18" SpanEnd="AGCC.SECOVR.indx.16">
</Sect2>
<Sect2 Id="AGCC.SECOVR.div.9">
<Title>Handling Database Updates</Title>
<Para>When a master or slave replica receives updates, it applies the updates to its database in virtual memory, 
and saves a copy of each update in a log file
that is stored on disk.  Updates accumulate in the
log file in sequenced numerical order.  If a server 
restarts unexpectedly, the log file ensures that no updates 
are lost. 
</Para>
<Para><IndexTerm Id="AGCC.SECOVR.indx.19">
<Primary>propagation queues</Primary>
</IndexTerm><?sml-need 6>Periodically, the replica writes the database in virtual
memory to disk, thus bringing the disk copy up-to-date.  
Then, if the replica is a slave, it clears the log file 
of all updates.  If the replica is the master, it clears the log file of all 
updates that have been propagated to the slave replicas.  
Updates that have not been propagated to the slaves are retained 
and used to reconstruct the propagation queue, if necessary.
</Para>
<Para>Only the master replica maintains a propagation queue, which is used to 
hold changes to be propagated to the 
slave replicas, as described in 
<!-- the section titled "Propagating Database Changes").   -->
Section 27.6.3.
When the master replica receives an update, it adds it to 
the propagation queue in addition to its virtual memory database 
and its log file.  
Each update in a propagation queue is identified by a sequence number and a timestamp.  
The sequence number is used internally to track the propagation of 
updates to slave replicas.  The timestamp is provided to 
show users the date and time of updates.
</Para>
<Para><IndexTerm Id="AGCC.SECOVR.indx.20">
<Primary>replica</Primary>
<Secondary>restarting master (security)</Secondary>
</IndexTerm>When a master or slave replica restarts, it initializes its database in virtual memory
and then applies any outstanding updates in the log file to its database.
If the replica is the master replica, 
it also recreates the propagation queue from the log 
file so that any outstanding slave updates can be propagated.  
This mechanism
ensures that no updates are lost when a server is shut down. 
</Para>
</Sect2>
<Sect2 Id="AGCC.SECOVR.div.10">
<Title>Propagating Database Changes</Title>
<Para>To
<IndexTerm Id="AGCC.SECOVR.indx.21">
<Primary>replica</Primary>
<Secondary>updating (security)</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.22">
<Primary>replica</Primary>
<Secondary>lists</Secondary>
</IndexTerm>propagate updates to the slave replicas,
the master replica first updates its copy of the database 
by using the process described
<!-- in "Handling Database Updates." -->
in Section 27.6.2. 
Then, the master replica attempts to propagate the update to each slave replica
on its replica list.  The replica list 
contains each slave replica's ID and network address.  
It also contains the sequence number of the last update 
that was made to the slave.  
The master replica always propagates in sequenced numerical order.    
By examining the sequence number that is
associated with a replica in its replica list, 
and the sequence numbers of the updates that are in its propagation queue, 
the master can determine which of the updates on its propagation 
queue must be propagated to which slave.  
This mechanism helps ensure that the unavailability of a single slave replica does not interfere
with updates to the rest of the slave replicas.
</Para>
<Para><?sml-need 6>If the propagation of an update does not succeed on the first attempt, 
the master replica tries periodically until it succeeds.  
When the update succeeds, the master updates the sequence number 
that is associated with the updated replica on its replica list.  
When an update is propagated to all the slave replicas, the master 
removes the update from its propagation queue.
<!-- .P-->
<!-- If the master replica loses communications with a slave replica for a-->
<!-- protracted period of time, the master reinitializes the-->
<!-- slave automatically by giving it a fresh copy of the entire database when-->
<!-- communications are restored.   -->
<!-- You can explicitly initialize a slave replica's database by using the \*Lsec_admin -->
<!-- initrep\*O subcommand to reinitialize the slave.  (See the -->
<!-- \*Lsec_admin\*O reference page in the \*VOSF DCE Administration Reference\*O manual for -->
<!-- details on using the \*Lsec_admin initrep\*O subcommand.)-->
<!-- .zA "def,9512,R1.0.3,change 1.0.2 to 1.0.3"-->
<!-- .nS note-->
<!-- Automatic reinitialization is not available in DCE Version -->
<!-- 1.0 Release 1.0.3.  If the -->
<!-- master replica loses communications with a slave replica for a-->
<!-- protracted period of time, you must explicitly run the -->
<!-- \*Lsec_admin initrep\*O subcommand. -->
<!-- .nE-->
<!-- .zZ "def,9512,R1.0.3,change 1.0.2 to 1.0.3"-->
</Para>
</Sect2>
<Sect2 Id="AGCC.SECOVR.div.11">
<Title>Master/Slave Authentication</Title>
<Para>Like all DCE objects, the master and slave replicas must authenticate to each 
other.  To do this, the master carries the identity of <Literal>dce-rgy</Literal>, one of 
the principals that is 
created when the database is created.  
Slaves carry the identity of the host machine on which they exist.  Note that 
this identity must have the rights to the <Filename>/.:/sec/replist</Filename> 
object described in Chapter 41.
<IndexTerm Id="AGCC.SECOVR.indx.23" SpanEnd="AGCC.SECOVR.indx.21"><IndexTerm Id="AGCC.SECOVR.indx.24" SpanEnd="AGCC.SECOVR.indx.17"></Para>
</Sect2>
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.12">
<Title>The /etc/passwd and /etc/group Files and the Registry</Title>
<IndexTerm Id="AGCC.SECOVR.indx.25">
<Primary><Filename>/etc/passwd</Filename> file</Primary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.26">
<Primary><Filename>/etc/group</Filename> file</Primary>
</IndexTerm>
<Para>You should maintain standard versions of the <Filename>/etc/passwd</Filename> and <Filename>/etc/group</Filename> 
files on local machines to ensure compatibility with UNIX programs. 
To keep the <Filename>/etc/passwd</Filename> and <Filename>/etc/group</Filename> files
consistent with the registry database, use the <Command>passwd_export </Command>command. 
It is advisable to run <Command>passwd_export</Command> on a regular basis, preferably using <Command>cron</Command>.  
(See Chapter 36 for details on <Command>passwd_export</Command>.)
</Para>
<Note>
<Para>Unlike standard UNIX behavior, the <Filename>/etc/passwd</Filename> and <Filename>/etc/group</Filename> files 
are not used for local login if a security server is unavailable.  
Instead, the local registry (described in the following section) is used.  
The <Filename>/etc/passwd</Filename> and <Filename>/etc/group</Filename> file are maintained <Symbol Role="Variable">only</Symbol> 
for compatibility with UNIX programs that require their existence. 
</Para>
</Note>
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.13">
<Title>The Local Registry</Title>
<IndexTerm Id="AGCC.SECOVR.indx.27">
<Primary>registry</Primary>
<Secondary>local</Secondary>
</IndexTerm>
<Para>The local registry, which resides in the 
<Symbol Role="Variable">dcelocal</Symbol><Filename>/var/security</Filename> directory 
on each local machine, contains information about the 
machine's most recent users and the date and time that
they last logged in.  If a security 
server is not available for network login, 
the authentication service attempts to obtain 
the information that is required for a local login from the local registry.
</Para>
<Para>When a security server is running on the network, the authentication
service 
automatically creates a local registry the 
first time anyone logs into DCE from the machine. 
Thereafter, it updates the local registry each time anyone 
logs into DCE from the machine.  
You can edit the local registry by using the
<Command>rgy_edit</Command> command with the <Option>l</Option> flag. 
Note that <Command>dcecp</Command> does not access the local registry.
<!-- .H 2 "Commands and Files for Administering the Registry "-->
<!-- .P-->
<!-- .iX "registry" "administration commands (table)"-->
<!-- Table 27-1 lists commands and files for administering the registry.-->
<!-- .br -->
<!-- .ne 32 -->
<!-- .zA "enh,6469,R1.0.2,Update sec_admin and sec_salvage_db"-->
<!-- .zA "defect 5044,R1.0.2,Remove passwd_override.private" -->
<!-- .TB "Tools and Files for Administering the Registry"-->
<!-- .TS H-->
<!-- center,box,tab(@);-->
<!-- lB | lB-->
<!-- lB | lw(4.0i).-->
<!-- Use the tool...@To...-->
<!-- _-->
<!-- .TH-->
<!-- dcecp@T{-->
<!-- Create, maintain, and view information in the registry. -->
<!-- T}-->
<!-- _-->
<!-- rgy_edit@T{-->
<!-- Peform the same operations on the network registry as \*Ldcecp\*O.  Also-->
<!-- manages the local registry.-->
<!-- T}-->
<!-- _-->
<!-- passwd_import@T{-->
<!-- Create registry entries based on the group and password files from -->
<!-- machines that do not implement DCE Security.  Use this command if -->
<!-- your systems coexist with other UNIX systems that are not controlled -->
<!-- by the registry, or as a first step to create registry entries when you -->
<!-- bring a machine that does not run DCE Security into an existing DCE -->
<!-- network that does.-->
<!-- T}-->
<!-- _-->
<!-- passwd_export@T{-->
<!-- Update the UNIX \*L/etc/passwd\*O and \*L/etc/group\*O files with current user -->
<!-- information that is obtained from the registry.-->
<!-- T}-->
<!-- _-->
<!-- sec_admin@T{-->
<!-- Perform registry replica administration tasks.-->
<!-- T}-->
<!-- _-->
<!-- sec_create_db@T{-->
<!-- Create the master and slave replicas.-->
<!-- T}-->
<!-- _-->
<!-- secd@T{-->
<!-- Start a security server.-->
<!-- T}-->
<!-- _-->
<!-- sec_salvage_db@T{-->
<!-- Salvage the registry database. -->
<!-- T}-->
<!-- _-->
<!-- passwd_override@T{-->
<!-- Override GECOS, home directory, and shell entries in the registry -->
<!-- database for a local machine.-->
<!-- T}-->
<!-- .TE -->
<!-- .zZ "enh,6469,R1.0.2,Update sec_admin and sec_salvage_db"-->
<!-- .zZ "defect 5044,R1.0.2,Remove passwd_override.private"-->
</Para>
</Sect1>
<Sect1 Id="AGCC.SECOVR.div.14">
<Title>Names for Security Objects</Title>
<IndexTerm Id="AGCC.SECOVR.indx.28">
<Primary>pathnames</Primary>
<Secondary>for security objects</Secondary>
</IndexTerm>
<Para>Because the security namespace is rooted in the Cell Directory Service (CDS) 
namespace, security objects 
have CDS pathnames, which take the following form:
</Para>
<Para><Symbol Role="Variable">/.../</Symbol><Replaceable>cellname</Replaceable><Filename>/</Filename><Replaceable>mount_point</Replaceable>/<Replaceable>object_name</Replaceable>
</Para>
<Para>where:
</Para>
<VariableList>
<VarListEntry>
<Term><Replaceable>cellname</Replaceable> </Term>
<ListItem>
<Para>Is the name of the cell in which the object
resides.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Replaceable>mount_point</Replaceable></Term>
<ListItem>
<Para>Is the name under which
the DCE Security Service is registered in CDS.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Replaceable>object_name</Replaceable></Term>
<ListItem>
<Para>Is the name of the registry object assigned when the object is created.  
If the object resides in a directory, <Replaceable>object_name</Replaceable> consists of the names of
the object itself and any directories that must be traversed to access 
the object.  Note that registry objects generally reside 
in the principal, group, or organization directory in the 
registry database.  See Chapter 41 for 
a more complete description of the registry database structure.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<IndexTerm Id="AGCC.SECOVR.indx.29">
<Primary>pathnames</Primary>
<Secondary>for registry objects</Secondary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.30">
<Primary>registry</Primary>
<Secondary>objects</Secondary>
<Tertiary>pathnames</Tertiary>
</IndexTerm>
<Para>For example, the full pathname for the principal <Literal>bach</Literal>, which
resides in the cell <Filename>dresden.com</Filename>, uses the <Literal>sec</Literal>
(security) mount point and is in the <Command>principal</Command> directory as follows:
</Para>
<Para><Filename>/.../dresden.com/sec/principal/bach</Filename>
</Para>
<Para>As another example, assume the group <Literal>east-west</Literal> resides in <Literal>sales</Literal>, 
which is a subdirectory of the <Command>group</Command> directory in the registry
database in the <Filename>dresden.com</Filename> cell.  The full pathname for <Literal>east-west </Literal>is 
as follows:
<IndexTerm Id="AGCC.SECOVR.indx.31">
<Primary RevisionFlag="Changed">security</Primary>
<Secondary RevisionFlag="Changed">commands</Secondary>
<Tertiary RevisionFlag="Changed">pathnames</Tertiary>
</IndexTerm>
<IndexTerm Id="AGCC.SECOVR.indx.32">
<Primary RevisionFlag="Changed">pathnames</Primary>
<Secondary RevisionFlag="Changed">in commands</Secondary>
</IndexTerm><?og-ChangeEnd def, 13575,R1.2.2,Removed acl_edit &amp; rgy_edit index entry">
</Para>
<Para RevisionFlag="Changed"><Filename>/.../dresden.com/sec/group/sales/east-west</Filename>
<?og-ChangeStart def, 13575,R1.2.2,Removed acl_edit &amp; rgy_edit index entry">
</Para>
<Sect2 Id="AGCC.SECOVR.div.15">
<Title>Using Names with dcecp Security Commands</Title>
<IndexTerm Id="AGCC.SECOVR.indx.33">
<Primary>principals</Primary>
<Secondary>logical identity</Secondary>
</IndexTerm>
<Para>For all the <Command>dcecp</Command> 
commands that are used to manage the DCE Security Service, except
<Command>dcecp acl</Command>, you supply only an object name to identify the object you
want to manipulate.  The object names are stored in 
the registry database.  You are not required to enter a cell name (the local 
cell is assumed) or mount point (the name registered for the DCE
Security Service is assumed).
</Para>
</Sect2>
<Sect2 Id="AGCC.SECOVR.div.16">
<Title>Using Names with the dcecp acl Command</Title>
<Para>Unlike other <Command>dcecp</Command> security commands, the <Command>dcecp acl</Command> command 
works with ACLs that can be maintained by DCE services other
than security.  Like any generic tool that operates on
objects that can exist in different namespaces, <Command>dcecp acl</Command>
requires the object's fully qualified CDS pathname  
instead of just <Replaceable>object_name</Replaceable>.
</Para>
<Para>For example, 
to use the <Command>dcecp acl</Command> command to change the ACL that is associated
with principal <Literal>bach</Literal>'s registry account,
you must enter the following fully qualified name:
</Para>

<Para><Literal>/.../dresden.com/sec/principal/bach</Literal>
</Para>

<Para>or</Para>

<Para><Literal>/.:/sec/principal/bach</Literal></Para>

<Para>Note also that, to use <Command>dcecp acl</Command> to manipulate the ACL that is on the
principal directory of the registry database, and thus control
who can add or delete principals, you must enter the following fully 
qualified name:
</Para>

<Para><Literal>/.../dresden.com/sec/principal</Literal></Para>

<Para>In a hierarchical cell, one name can represent a directory and a principal.  
For example assume that a principal name is stored in Cell A's registry to 
represent a cell with which Cell A engages in cross-cell authentication.  
The name for the cell in the registry is
</Para>

<Para><Literal>/.:/sec/principal/vienna.com</Literal>
</Para>

<Para>This cell name can also represent the name of a directory, such as
</Para>

<Para><Literal>/.:/sec/principal/vienna.com/violinists_cell</Literal>
</Para>

<Para RevisionFlag="Changed">For these cases, the <Command>dcecp acl</Command> command provides an option that identifies 
whether you are entering a directory name or a principal name.
<?og-ChangeStart def, 13575,R1.2.2,Removed acl_edit &amp; rgy_edit index entry"><IndexTerm Id="AGCC.SECOVR.indx.34" SpanEnd="AGCC.SECOVR.indx.32"><IndexTerm Id="AGCC.SECOVR.indx.35" SpanEnd="AGCC.SECOVR.indx.31"><?og-ChangeEnd def, 13575,R1.2.2,Removed acl_edit &amp; rgy_edit index entry"></Para>
</Sect2>
</Sect1>
</Chapter>
<!--+ 10/31/96 16:05:54
    | tagMorph:  $Id: 1_over.sgm,v 1.1.2.12 1996/12/04 22:48:52 carrig Exp $
    | tagMorph library:  $Id: 1_over.sgm,v 1.1.2.12 1996/12/04 22:48:52 carrig Exp $
    | sml-to-docbook:  1.24
    +-->


