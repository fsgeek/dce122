%!PS-Adobe-2.0
%%Title: PubTeX output 1996.12.18:0053
%%Creator: Pubps,       ArborText, Inc.
%%BoundingBox: (atend)
%%Pages: 30 0
%%DocumentFonts: (atend)
%%DocumentMedia: Plain 611 791 75 white ()
%%EndComments

%! 
%  Pubps.pro - included prolog for DviLaser-generated PostScript files.
% 
%  Copyright (c) 1986-93, ArborText, Inc.
%
%  Permission to copy is granted so long as the PostScript code
%  is not resold or used in a commercial product.
%
%  $Id: pubps.pro,v 22.1 1993/07/15 20:55:41 bsd Exp $
%
systemdict /setpacking known  % use array packing mode if its available
  {/savepackingmode currentpacking def 
   true setpacking}
  if
 
/$DviLaser 400 dict def
 
% Begin document
/BeginDviLaserDoc {
  0 0 moveto
  vmstatus pop pop 0 eq 
    { $DviLaser begin }
    { /DviLaserJob save def
      $DviLaser begin
      /Xpos 0.0 def
      /Ypos 0.0 def
      /InitialMatrix matrix currentmatrix def }
    ifelse
} bind def
 
% End document
/EndDviLaserDoc {
  vmstatus pop pop 0 eq 
    { end }
    { DviLaserFonts restore
      end
      DviLaserJob restore }
    ifelse
} bind def
 
$DviLaser begin

/tempstr 64 string def
/tempint 0 def
/tempmatrix matrix def
 
%
%  Debugging routines
%
/DebugMode false def

/PrintInt {
  tempstr cvs print
} bind def

/PrintLn {
  (\n) print flush
} bind def
 
/PrintVMStats {
  print
  PrintLn
  (VM status - ) print
  vmstatus
  3 copy
  PrintInt (\(total\), ) print
  PrintInt (\(used\), ) print
  pop
  exch sub 
  PrintInt (\(remaining\), ) print
  PrintInt (\(level\)) print
  PrintLn
} bind def
 
/VMS /PrintVMStats load def 
 
/VMSDebug {
  DebugMode
    {PrintVMStats}
    {pop}
    ifelse
} bind def
 
(beginning of common prolog) VMSDebug 

% Make it easy to bind definitions.
/bdef { bind def } bind def
/xdef { exch def } bdef

% Bind some procedures that do restores and such to avoid InvalRestore problems.
/RestoreDviLaserPage {
  /DviLaserPage where {pop DviLaserPage restore} if
} bdef

/RestoreDviLaserFonts {
  DocumentType 0 eq 
    {/DviLaserFonts where 
      {pop DviLaserFonts restore} 
      if
    }
    if
} bdef

/SaveDviLaserFonts {
  DocumentType 0 eq 
   {/DviLaserFonts save def}
   if
} bdef

/SetCurrentPoint {
  /currentpoint cvx stopped {0 0 moveto currentpoint} if
} bdef

% Begin page
/BP {
  DocumentType 0 ne
   {/DviLaserPageWrapper save def}
   if
  /Magnification xdef
  /Xpos 0.0 def
  /Ypos 0.0 def
  /InitialMatrix matrix currentmatrix def
  /DviLaserPage save def
  (beginning of page) VMSDebug
} bdef

% End page
/EP {
  DviLaserPage restore
  DocumentType 0 ne
    {/DviLaserPageWrapper where
      {pop DviLaserPageWrapper restore}
      if
    }
    if
} bdef

% Exit page (temporarily) to add fonts/characters.
/XP {
  % Save current point information so it can be reset later. 
  /Xpos where {pop Xpos} {0} ifelse
  /Ypos where {pop Ypos} {0} ifelse
  SetCurrentPoint
  RestoreDviLaserPage
  moveto
  /Ypos xdef
  /Xpos xdef
} bdef
 
% Resume page
/RP {
  /DviLaserPage save def
} bdef
 
% Purge all fonts to reclaim memory space. 
/PF {
  GlobalMode
  LocalMode
} bdef
 
% Switch to base save/restore level, saving state information. 
/GlobalMode {
  /UserSave where {pop UserSave} if  % invoke "UserSave" if available
  PortraitMode 
  PaperWidth 
  PaperHeight 
  PxlResolution 
  Resolution 
  Magnification
  Ymax
  RasterScaleFactor
  SetCurrentPoint
  RestoreDviLaserPage
  RestoreDviLaserFonts
  RecoverState
} bdef
 
% Preserve state at the base level.
/RecoverState {
  10 copy
  /Ypos xdef
  /Xpos xdef
  /RasterScaleFactor xdef
  /Ymax xdef
  /Magnification xdef
  /Resolution xdef
  /PxlResolution xdef
  /PaperHeight xdef
  /PaperWidth xdef
  /PortraitMode xdef
  DoInitialPageScaling
  PortraitMode not {PaperWidth 0 SetupLandscape} if
  Xpos Ypos moveto
} bdef

% Switch from base save/restore level, restoring state information. 
/LocalMode {
  /Ypos xdef
  /Xpos xdef
  /RasterScaleFactor xdef
  /Ymax xdef
  /Magnification xdef
  /Resolution xdef
  /PxlResolution xdef
  /PaperHeight xdef
  /PaperWidth xdef
  /PortraitMode xdef
  DoInitialPageScaling
  PortraitMode not {PaperWidth 0 SetupLandscape} if
  Xpos Ypos moveto
  /UserRestore where {pop UserRestore} if  % invoke "UserRestore" if available
  SaveDviLaserFonts 
  /DviLaserPage save def
} bdef
 
% Abbreviations 
/S /show load def
/SV /save load def
/RST /restore load def
 
/Yadjust {Ymax exch sub} bdef
 
% (x,y) position absolute, just set Xpos & Ypos, don't move.
/SXY {
  Yadjust 
  /Ypos xdef /Xpos xdef
} bdef
 
% (x,y) position absolute
/XY {
  Yadjust 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (x,0) position absolute
/X {
  currentpoint exch pop 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (0,y) position absolute
/Y {
  currentpoint pop exch Yadjust 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (x,y) position relative
/xy {
  neg rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef
 
% (x,0) position relative
/x {
  0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef
 
% (0,y) position relative
/y {
  0.0 exch neg rmoveto
  currentpoint /Ypos xdef /Xpos xdef
  } bdef
 
%
% Print a rule.  Normally this is done with a filled area defined by rlineto.
% Unfortunately, doing it this way introduces a 1 pixel error on some
% PostScript printer implementations.  In order to get exactly correct
% pixel size and positioning, an alternate approach is implemented under
% control of boolean "PreciseRulePositioning".  With this approach,
% we create a temporary font in which the rule is the only character.
% Since the alternate mechanism causes documents with lots of rules to
% print much more slowly, and since the 1 pixel maximum difference is
% rarely noticed, it is not used by default.  Enable it by setting
% "PreciseRulePositioning" true.
%
/PreciseRulePositioning false def

/R {
  /ht xdef
  /wd xdef
  PreciseRulePositioning ht 1950 le wd 1950 le and PxlResolution 400 le and and
    {save
    /tfd 6 dict def
    tfd begin
      /FontType 3 def
      /FontMatrix [1 0 0 1 0 0] def
      /FontBBox [0 0 wd ht] def
      /Encoding 256 array dup 97 /a put def
      /BuildChar {
        pop   % ignore character code
        pop   % ignore font dict, too
        wd 0 0 0 wd ht setcachedevice
        wd ht true
        [1 0 0 -1 0 ht] {<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>} imagemask
        } def
      end % tfd
    /tf tfd definefont setfont
    (a) show
    restore
    }
    {gsave
    0 setgray
    currentpoint
    newpath
      moveto
      0.0 ht rlineto
      wd 0.0 rlineto
      0.0 ht neg rlineto
      wd neg 0.0 rlineto
    closepath fill
    grestore
    }
  ifelse
  wd 0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef

/SHADE {
  /percent xdef
  /ht xdef
  /wd xdef
  /Red xdef
  /Green xdef
  /Blue xdef
  gsave
  0.01 percent mul setgray
  currentpoint
  newpath
    moveto
    0.0 ht rlineto
    wd 0.0 rlineto
    0.0 ht neg rlineto
    wd neg 0.0 rlineto
  closepath fill
  grestore
  wd 0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef

%
%  <PXL-file resolution(pix/inch)> <resolution(pix/inch)> RES
%
/RES {
  /Resolution xdef
  /PxlResolution xdef
  /RasterScaleFactor PxlResolution Resolution div def
} bdef

% Document type: 0-document; 1-page; 2-EPS
/DT {
  /DocumentType xdef
  /DviLaserFonts save def  
} bdef

%
% Return to the initial page scaling parameters.
%
/DoInitialPageScaling {
  InitialMatrix setmatrix
  72.0 Resolution div dup scale   
} bdef
 
%
%  <paper-height(pix)> <paper-width(pix)> PM 
%
/PM { 
  XP
  /PaperWidth xdef 
  /PaperHeight xdef
  /Ymax PaperHeight def
  /PortraitMode true def
  DoInitialPageScaling
  RP
} bdef  
 
%
%  <paper-height(pix)> <paper-width(pix)> LM 
%
/LM {
  XP
  /PaperWidth xdef 
  /PaperHeight xdef
  /Ymax PaperWidth def
  /PortraitMode false def
  DoInitialPageScaling
  PaperWidth 0 SetupLandscape
  RP
} bdef  
  
% Change magnification setting
/MAG {
  XP
  /Magnification xdef
  RP
} bdef
 
%
%  Switch to landscape mode
%
/SetupLandscape {
  translate
  90.0 rotate
} bdef
 
%
%  <mode> SPB - begin "\special" mode
%
%  This is the PostScript procedure used to transfer from the internal
%  environment used for the DVI translation code emitted by DVIPS to
%  a standard PostScript environment.
%
%  Parameters: 0 - Local
%              1 - Global
%              2 - Inline
%
/SPB {
  /spc_mode xdef
  spc_mode 0 eq spc_mode 2 eq or
    {XP}
    {spc_mode 1 eq {GlobalMode} if} 
    ifelse
  Resolution 72.0 div dup scale        % Restore default scaling...
  Magnification 1000.0 div dup scale   % Adjust for any magnification...
  /Xpos Xpos 72.0 Resolution div mul 1000.0 Magnification div mul def
  /Ypos Ypos 72.0 Resolution div mul 1000.0 Magnification div mul def
} bdef
 
%
%  <mode> SPE - end "\special" mode
%
%  This is the PostScript procedure used to reenter the internal
%  environment used for the DVI translation code emitted by DVIPS from 
%  the standard PostScript environment provided for processing user-supplied
%  PostScript code.
%
%  Parameters: 0 - Local
%              1 - Global
%              2 - Inline
%
/SPE {
  /spc_mode xdef
  1000.0 Magnification div dup scale   % Un-adjust for any magnification...
  72.0 Resolution div dup scale        % Restore default internal scaling...
  spc_mode 0 eq spc_mode 2 eq or
    {RP}
    {spc_mode 1 eq {LocalMode} if} 
    ifelse
} bdef
 
%
%  <num-copies> PP
%
/PP {
  /#copies xdef
  showpage
  /#copies 1 def
} bdef
 
%
%  /font-name <point-size(pix)> DMF
%
/DMF {
  /psz xdef
  /nam xdef
  nam findfont psz scalefont setfont
} bdef
 
%
%  /abcd (xxx) str-concat  ==> /abcdxxx
%
/str-concatstr 64 string def

/str-concat {
  /xxx xdef
  /nam xdef
  /namstr nam str-concatstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
} bdef
 
%
%  /abcdef 2 str-strip ==> /cdef
%
/str-strip {
  /num xdef
  /nam xdef
  /namstr nam tempstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval
  cvn
} bdef
 
%
%  <old-dict> copydict ==> new-dict on stack
%
/copydict {
  dup length 1 add dict /newdict xdef
    {1 index /FID ne
      {newdict 3 1 roll put}
      {pop pop}
     ifelse
    } forall 
  newdict
} bdef
 
%
%  <font-type> DefineCMEncoding
%
/DefineCMEncoding {
  /EncodeType xdef
 
  /CMEncoding 256 array def
  /Times-Roman findfont /Encoding get aload pop CMEncoding astore pop
 
  EncodeType 11 eq {Do-CM-rm-encoding} if
  EncodeType 12 eq {Do-CM-it-encoding} if
  EncodeType 13 eq {Do-CM-tt-encoding} if
} bdef
 
%
%  Do special mappings for the various CM-font types.  Characters that
%  get "covered up" are repositioned in the range (128,128+32).  The 
%  range (256-64,255) is filled with the standard ISO Latin/1 mappings.
%
/Do-standard-CM-encodings {
  CMEncoding
  dup 0 /.notdef put
  dup 1 /.notdef put
  dup 2 /.notdef put
  dup 3 /.notdef put
  dup 4 /.notdef put
  dup 5 /.notdef put
  dup 6 /.notdef put
  dup 7 /.notdef put
 
  dup 8 /.notdef put
  dup 9 /.notdef put
  dup 10 /.notdef put
  dup 11 /.notdef put
  dup 12 /fi put
  dup 13 /fl put
  dup 14 /.notdef put
  dup 15 /.notdef put
 
  dup 16 /dotlessi put
  dup 17 /ogonek put
  dup 18 /grave put
  dup 19 /acute put
  dup 20 /caron put
  dup 21 /breve put
  dup 22 /macron put
  dup 23 /ring put
 
  dup 24 /cedilla put
  dup 25 /germandbls put
  dup 26 /ae put
  dup 27 /oe put
  dup 28 /oslash put
  dup 29 /AE put
  dup 30 /OE put
  dup 31 /Oslash put

  dup 127 /dieresis put

  dup 128 /space put
  dup 129 /quotedbl put
  dup 130 /sterling put
  dup 131 /dollar put
  dup 132 /less put
  dup 133 /greater put
  dup 134 /backslash put
  dup 135 /asciicircum put

  dup 136 /underscore put
  dup 137 /braceleft put
  dup 138 /bar put
  dup 139 /braceright put
  dup 140 /asciitilde put

  dup 141 /brokenbar put
  dup 142 /copyright put
  dup 143 /logicalnot put
  dup 144 /registered put
  dup 145 /plusminus put
  dup 146 /twosuperior put
  dup 147 /threesuperior put
  dup 148 /mu put
  dup 149 /onesuperior put
  dup 150 /onequarter put
  dup 151 /onehalf put
  dup 152 /threequarters put
  dup 153 /Eth put
  dup 154 /multiply put
  dup 155 /Thorn put
  dup 156 /eth put
  dup 157 /divide put
  dup 158 /thorn put
  dup 159 /ordfeminine put
  dup 160 /ordmasculine put
  dup 176 /Lslash put
  dup 181 /lslash put
  pop
  Do-ISO-Latin1-Encoding 
} bdef

% Fill the last 64 positions with ISOLatin1 composite character definitions.
/Do-ISO-Latin1-Encoding {
  CMEncoding
  dup 192 /Agrave put
  dup 193 /Aacute put
  dup 194 /Acircumflex put
  dup 195 /Atilde put
  dup 196 /Adieresis put
  dup 197 /Aring put
  dup 198 /AE put
  dup 199 /Ccedilla put

  dup 200 /Egrave put
  dup 201 /Eacute put
  dup 202 /Ecircumflex put
  dup 203 /Edieresis put
  dup 204 /Igrave put
  dup 205 /Iacute put
  dup 206 /Icircumflex put
  dup 207 /Idieresis put

  dup 208 /Eth put
  dup 209 /Ntilde put
  dup 210 /Ograve put
  dup 211 /Oacute put
  dup 212 /Ocircumflex put
  dup 213 /Otilde put
  dup 214 /Odieresis put
  dup 215 /multiply put

  dup 216 /Oslash put
  dup 217 /Ugrave put
  dup 218 /Uacute put
  dup 219 /Ucircumflex put
  dup 220 /Udieresis put
  dup 221 /Yacute put
  dup 222 /Thorn put
  dup 223 /germandbls put

  dup 224 /agrave put
  dup 225 /aacute put
  dup 226 /acircumflex put
  dup 227 /atilde put
  dup 228 /adieresis put
  dup 229 /aring put
  dup 230 /ae put
  dup 231 /ccedilla put

  dup 232 /egrave put
  dup 233 /eacute put
  dup 234 /ecircumflex put
  dup 235 /edieresis put
  dup 236 /igrave put
  dup 237 /iacute put
  dup 238 /icircumflex put
  dup 239 /idieresis put

  dup 240 /eth put
  dup 241 /ntilde put
  dup 242 /ograve put
  dup 243 /oacute put
  dup 244 /ocircumflex put
  dup 245 /otilde put
  dup 246 /odieresis put
  dup 247 /divide put

  dup 248 /oslash put
  dup 249 /ugrave put
  dup 250 /uacute put
  dup 251 /ucircumflex put
  dup 252 /udieresis put
  dup 253 /yacute put
  dup 254 /thorn put
  dup 255 /ydieresis put
  pop
} bdef
 
/Do-CM-rm-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 32 /.notdef put
  dup 34 /quotedblright put
  dup 60 /exclamdown put
  dup 62 /questiondown put
  dup 92 /quotedblleft put
  dup 94 /circumflex put
  dup 95 /dotaccent put
  dup 123 /endash put
  dup 124 /emdash put
  dup 125 /hungarumlaut put
  dup 126 /tilde put
  pop
} bdef
 
/Do-CM-it-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 32 /.notdef put
  dup 34 /quotedblright put
  dup 36 /sterling put
  dup 60 /exclamdown put
  dup 62 /questiondown put
  dup 92 /quotedblleft put
  dup 94 /circumflex put
  dup 95 /dotaccent put
  dup 123 /endash put
  dup 124 /emdash put
  dup 125 /hungarumlaut put
  dup 126 /tilde put
  pop
} bdef
 
/Do-CM-tt-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 12 /.notdef put
  dup 13 /quotesingle put
  dup 14 /exclamdown put
  dup 15 /questiondown put
  dup 94 /circumflex put
  dup 126 /tilde put
  pop
} bdef

%
% Routines to handle packing/unpacking numbers.
%
%  <target> <pos> <num> PackHW --> <new target>
%
/PackHW {
  /num xdef
  /pos xdef
  /target xdef
  num 16#0000FFFF and 1 pos sub 16 mul bitshift
    target or
} bdef

%
%  <target> <pos> <num> PackByte --> <new target>
%
/PackByte {
  /num xdef
  /pos xdef
  /target xdef
  num 16#000000FF and 3 pos sub 8 mul bitshift
    target or
} bdef

%
%  <pos> <num> UnpkHW --> <unpacked value>
%
/UnpkHW {
  /num xdef
  /pos xdef
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
} bdef

%
%  <pos> <num> UnpkByte --> <unpacked value>
%
/UnpkByte {
  /num xdef
  /pos xdef
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
} bdef

%
%  <int-font-name> <ext-font-name> <pt-sz(pix)> <type> <loaded-fg> DefineCMFont
%
%    type 10: "as-is" PostScript font
%    type 11: CM-mapped PostScript font - roman
%    type 12: CM-mapped PostScript font - text italic 
%    type 13: CM-mapped PostScript font - typewriter type 
%
/int-dict-name {int (-dict) str-concat} bdef
/int-dict {int (-dict) str-concat cvx load} bdef

/DF {
  true  % signal that the font is already loaded
  DefineCMFont
} bdef
 
/DNF {
  false  % signal that the font is not already loaded
  DefineCMFont
} bdef

/DefineCMFont {
  /loaded xdef
  /typ xdef
  /psz xdef
  /ext xdef
  /int xdef
 
  typ 10 ne 
    { % font_type = 11, 12, 13
    loaded not
      { /fnam ext 3 str-strip def
        fnam findfont copydict /newdict xdef 
        typ DefineCMEncoding
        newdict /Encoding CMEncoding put
        ext newdict definefont pop
      } if
    int-dict-name ext findfont psz scalefont def
    currentdict int [int-dict /setfont cvx] cvx put
    }
    { % font_type = 10
    /fnam ext def
    int-dict-name fnam findfont psz scalefont def
    currentdict int [int-dict /setfont cvx] cvx put
    }
  ifelse
} bdef 
 
%
%  <int-font-name> <ext-font-name> <pt-sz(pix)> <PXL mag> <num-chars>
%      [llx lly urx ury] <newfont-fg> DefinePXLFont
%

/PXLF {
  true  % signal that the font is already loaded
  DefinePXLFont
} bdef
 
/PXLNF {
  false  % signal that the font is not already loaded
  DefinePXLFont
} bdef

/PXLBuildCharDict 17 dict def
 
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup tempstr cvs cvn put} for

/RasterConvert {RasterScaleFactor div} bdef
 
/TransformBBox {
  aload pop
 
  /BB-ury xdef
  /BB-urx xdef
  /BB-lly xdef
  /BB-llx xdef
 
  [BB-llx RasterConvert BB-lly RasterConvert 
   BB-urx RasterConvert BB-ury RasterConvert]
} bdef

/DefinePXLFont {
  /newfont xdef
  /bb xdef
  /num xdef
  /psz xdef
  /dsz xdef
  /pxlmag xdef
  /ext xdef
  /int xdef
 
  /fnam ext (-) str-concat pxlmag tempstr cvs str-concat def
 
  newfont not {
    int-dict-name 13 dict def
   
    int-dict begin
      /FontType 3 def
      /FontMatrix [1 dsz div 0 0 1 dsz div 0 0] def
      /FontBBox bb TransformBBox def
      /Encoding CMEncodingArray def
      /CharDict 1 dict def
      CharDict begin
        /Char-Info num array def
        end
  
      /BuildChar
        { 
          PXLBuildCharDict begin
            /char xdef
            /fontdict xdef
   
            fontdict /CharDict get /Char-Info get char get aload pop
   
            /rasters xdef
            /PackedWord1 xdef
   
            0 PackedWord1 UnpkHW 16#7FFF ne
              { /PackedWord2 xdef
                /wx 0 PackedWord1 UnpkHW def
                /rows 2 PackedWord1 UnpkByte def
                /cols 3 PackedWord1 UnpkByte def
                /llx 0 PackedWord2 UnpkByte def
                /lly 1 PackedWord2 UnpkByte def
                /urx 2 PackedWord2 UnpkByte def
                /ury 3 PackedWord2 UnpkByte def }
              { /PackedWord2 xdef
                /PackedWord3 xdef
                /PackedWord4 xdef
                /wx 1 PackedWord1 UnpkHW def
                /rows 0 PackedWord2 UnpkHW def
                /cols 1 PackedWord2 UnpkHW def
                /llx 0 PackedWord3 UnpkHW def
                /lly 1 PackedWord3 UnpkHW def
                /urx 0 PackedWord4 UnpkHW def
                /ury 1 PackedWord4 UnpkHW def }
               ifelse

            rows 0 lt
              { /rows rows neg def
                /runlength 1 def }
              { /runlength 0 def }
             ifelse
 
            wx 0 
            llx RasterConvert lly RasterConvert 
            urx RasterConvert ury RasterConvert setcachedevice
            rows 0 ne
              {
              gsave
                cols rows true 
		RasterScaleFactor 0 0 RasterScaleFactor neg llx neg .5 add ury .5 add

                  tempmatrix astore
                {GenerateRasters} imagemask
              grestore
              } if
            end
        } def
      end
   
      fnam int-dict definefont pop 
    } if 
 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [int-dict /setfont cvx] cvx put
} bdef 
 
%
%  <int-font-name> <code> <wx> <llx> <lly> <urx> <ury> <rows> <cols> <runlength> <rasters> PXLC
%
/PXLC {
 
  /rasters xdef
  /runlength xdef
  /cols xdef
  /rows xdef
  /ury xdef
  /urx xdef
  /lly xdef
  /llx xdef
  /wx xdef
  /code xdef
  /int xdef
 
  % See if the long or short format is required
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
    TackRunLengthToRows
    { int-dict /CharDict get /Char-Info get code 
        [0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
         0 0 wx PackHW 2 rows PackByte 3 cols PackByte
         rasters] put}
    { int-dict /CharDict get /Char-Info get code 
        [0 0 urx PackHW 1 ury PackHW
         0 0 llx PackHW 1 lly PackHW
         0 0 rows PackHW 1 cols PackHW
         0 0 16#7FFF PackHW 1 wx PackHW
         rasters] put} 
    ifelse
} bdef
 
/CKSZ {abs 127 le and} bdef
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if} bdef
 
%
%  <wx> <dsz> <psz> <llx> <lly> <urx> <ury> <rows> <cols> <runlength> <rasters> PLOTC
%
/PLOTC {
  /rasters xdef
  /runlength xdef
  /cols xdef
  /rows xdef
  /ury xdef
  /urx xdef
  /lly xdef
  /llx xdef
  /psz xdef
  /dsz xdef
  /wx xdef
 
  % "Plot" a character's raster pattern.
  rows 0 ne
    {
    gsave
      currentpoint translate
      psz dsz div dup scale
      cols rows true 
      RasterScaleFactor 0 0 RasterScaleFactor neg llx neg ury 
        tempmatrix astore
      {GenerateRasters} imagemask
    grestore
    } if
  wx x
} bdef
 
% Routine to generate rasters for "imagemask".
/GenerateRasters {
  rasters
  runlength 1 eq {RunLengthToRasters} if
} bdef
 
% Routine to convert from runlength encoding back to rasters.
/RunLengthToRasters {
  % ...not done yet...
} bdef
 
%
%  These procedures handle bitmap processing.
%
%  <bitmap columns> <bitmap rows> <bitmap pix/inch> <magnification> BMbeg
%
/BMbeg {
  /BMmagnification xdef
  /BMresolution xdef
  /BMrows xdef
  /BMcols xdef

  /BMcurrentrow 0 def
  gsave
    0.0 setgray
    Resolution BMresolution div dup scale
    currentpoint translate
    BMmagnification 1000.0 div dup scale
    0.0 BMrows moveto
    BMrows dup scale
    currentpoint translate
    /BMCheckpoint save def
  } bdef

/BMend {
  BMCheckpoint restore
  grestore
  } bdef

%
%  <hex raster bitmap> <rows> BMswath 
%
/BMswath {
  /rows xdef
  /rasters xdef

  BMcols rows true
  [BMrows 0 0 BMrows neg 0 BMcurrentrow neg]
  {rasters}
  imagemask

  /BMcurrentrow BMcurrentrow rows add def
  BMcurrentrow % save this on the stack around a restore...
  BMCheckpoint restore
  /BMcurrentrow xdef
  /BMCheckpoint save def
  } bdef

%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

/ROTB {
  XP
  gsave
  Xpos Ypos translate
  rotate % using <theta> from the stack
  Xpos neg Ypos neg translate
  RP
  } bdef

/ROTE {XP grestore RP} bdef

%
%  Procedures for implementing the "epsfile <filename> [<mag>]" special:
%  <llx> <lly> <mag> EPSB -
%  - EPSE -

/EPSB {
  0 SPB
  save
  4 1 roll % push the savelevel below the parameters
  /showpage {} def
  Xpos Ypos translate
  1000 div dup scale % using <mag> from the stack
  neg exch neg exch translate % using <llx> <lly> from the stack
  } bdef

/EPSE {restore 0 SPE} bdef

%
%  Procedure for implementing revision bars:
%  <bary1> <bary2> <barx> <barw> REVB -
%  The bar is a line of width barw drawn from (barx,bary1) to (barx,bary2).

/REVB {
  /barw xdef
  /barx xdef
  /bary2 xdef
  /bary1 xdef
  gsave
    barw setlinewidth
    barx bary1 Yadjust moveto
    barx bary2 Yadjust lineto
    stroke
  grestore
  } bdef

%  
%  A small array and two procedures to facilitate The Publisher's
%  implementation of gray table cells:
%                               <ptnum> GRSP -
%  <ultpnum> <lrptnum> <graylev> <freq> GRFB -
%  
%  GRSP saves the current DVI location so that it can be retrieved later
%  by the index <ptnum>.  GRFB fills a box whose corners are given by the
%  indexes <ultpnum> and <lrptnum> with a halftone gray with the given
%  level and frequency.  The array GRPM holds the coordinates of points
%  marking the corners of gray table cells. <freq> is currently ignored
%  since modifying it via setscreen is prohibited by Adobe's PostScript
%  coding conventions.
%  

/GRPM 40 dict def

/GRSP {GRPM exch [Xpos Ypos] put} bdef

/GRFB {
  /GRfreq xdef
  /GRgraylev xdef
  GRPM exch get aload pop /GRlry xdef /GRlrx xdef
  GRPM exch get aload pop /GRuly xdef /GRulx xdef
  gsave
    % % set the screen frequency if it isn't zero
    % % (disabled currently...)
    % GRfreq 0 ne
    %   {currentscreen
    %   3 -1 roll pop GRfreq 3 1 roll
    %   setscreen}
    % if
    % set the gray level
    GRgraylev setgray
    % draw and fill the path
    GRulx GRuly moveto
    GRlrx GRuly lineto
    GRlrx GRlry lineto
    GRulx GRlry lineto
    closepath
    fill
  grestore
  } bdef


%
%  Procedures for implementing the "paper <source>" option:
%  <name> <eop> SPS          -
%         <eop> paper-manual -
%  etc.  The boolean <eop> is passed so that a paper source procedure
%  knows if it is being called at the beginning (false) or end
%  (true) of a page.

/SPS {
  /eop xdef
  /name xdef
  name where {pop eop name cvx exec} if
  } bdef

/paper-manual {
    {statusdict /manualfeed known
      {statusdict /manualfeed true put}
    if}
  if
  } bdef

/paper-automatic {
    {statusdict /manualfeed known
      {statusdict /manualfeed false put}
    if}
  if
  } bdef

/paper-top-tray {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 0 setpapertray grestore end}
    if}
  ifelse
  } bdef

/paper-bottom-tray {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 1 setpapertray grestore end}
    if}
  ifelse
  } bdef

/paper-both-trays {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 2 setpapertray grestore end}
    if}
  ifelse
  } bdef

/clipping_path {
    /x1 xdef
    /y1 xdef
    /x2 xdef
    /y2 xdef
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
  }bdef


(end of common prolog) VMSDebug 

end
 
systemdict /setpacking known 
  {savepackingmode setpacking}
  if

% 
% End of prolog section.
%


%%EndProlog
%%BeginSetup
BeginDviLaserDoc
300 300 RES
1 DT
%%EndSetup


%%Page: 421 1
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1412 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1412 215 XY F5(Managing)S 1608 X(the)S 1679 X(DCE)S 1781 X(DTS)S 
195 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 419 XY F0(the)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
481 419 XY F11(clock)S 590 X(set)S 655 X F0(command's)S 865 X F11
(-epoch)S 999 X F0(option)S 1122 X(along)S 1231 X(with)S 1321 X
(the)S 1388 X F11(-abruptly)S 1573 X F0(option)S 1696 X(to)S 1745 X
(set)S 1808 X(the)S 50 y 413 X(new)S 499 X(time)S 590 X(to)S 639 X
(isolate)S 764 X(it)S 804 X(from)S 902 X(the)S 969 X(other)S 1071 X
(systems.)S 1255 X(You)S 1343 X(can)S 1418 X(then)S 1506 X(change)S
1640 X(the)S 1708 X(time)S 1798 X(and)S 50 y 413 X(epoch)S 529 X
(for)S 594 X(the)S 661 X(other)S 762 X(systems)S 910 X(until)S 1003 X
(all)S 1060 X(the)S 1127 X(systems)S 1275 X(once)S 1370 X(again)S 
1476 X(share)S 1580 X(the)S 1647 X(same)S 1749 X(epoch.)S 50 y 413 X
(This)S 499 X(process)S 636 X(is)S 676 X(useful)S 790 X(in)S 834 X
(the)S 897 X(rare)S 974 X(case)S 1057 X(when)S 1160 X(the)S 1223 X
(majority)S 1375 X(of)S 1422 X(servers)S 1552 X(in)S 1596 X(the)S 
1659 X(network)S 1808 X(are)S 50 y 413 X(faulty.)S 718 Y 413 X(In)S
463 X(order)S 565 X(to)S 613 X(use)S 683 X(the)S 749 X F11(clock)S
856 X(set)S 919 X F0(command)S 1098 X(effectively,)S 1301 X(you)S 
1378 X(must)S 1473 X(have)S 1567 X(temporary)S 1752 X(access)S 50 y 
413 X(to)S 465 X(an)S 523 X(accurate)S 681 X(time)S 774 X
(reference.)S 988 X(Such)S 1090 X(references)S 1280 X(can)S 1357 X
(include)S 1498 X(the)S 1568 X(time)S 1661 X(signals)S 1796 X(that)S
50 y 413 X(many)S 518 X(standards)S 688 X(organizations)S 924 X
(disseminate)S 1133 X(by)S 1188 X(radio)S 1286 X(or)S 1333 X
(telephone.)S 1537 X(You)S 1622 X(can)S 1692 X(also)S 1772 X(use)S
1840 X(a)S 50 y 413 X(clock)S 516 X(that)S 592 X(you)S 667 X(have)S
759 X(recently)S 906 X(veri\014ed)S 1046 X(as)S 1094 X(accurate.)S
1275 X(\(See)S 1362 X(Appendix)S 1539 X(C)S 1580 X(for)S 1641 X(a)S
1673 X(list)S 1737 X(of)S 1785 X(time)S 50 y 413 X(reference)S 582 X
(sources.\))S 1017 Y 413 X(Because)S 567 X(it)S 606 X(is)S 649 X(a)S
683 X(manually)S 853 X(entered)S 991 X(command)S 1170 X(that)S 1248 X
(is)S 1291 X(used)S 1382 X(to)S 1430 X(modify)S 1566 X(an)S 1620 X
(absolute)S 1774 X(time,)S 50 y 413 X(the)S 481 X F11(clock)S 590 X
(set)S 655 X F0(command)S 836 X(is)S 880 X(not)S 950 X(useful)S 
1068 X(for)S 1133 X(small)S 1240 X(inaccuracy)S 1437 X(settings.)S
1616 X(The)S 1697 X(minimum)S 50 y 413 X(reliable)S 549 X
(inaccuracy)S 739 X(that)S 812 X(you)S 885 X(can)S 954 X(achieve)S
1091 X(with)S 1176 X(the)S 1238 X(command)S 1412 X(is)S 1451 X
(approximately)S 1701 X(1)S 1733 X(second.)S 50 y 413 X(Human)S 
550 X(error)S 645 X(and)S 719 X(processing)S 911 X(delays)S 1032 X
(combine)S 1189 X(to)S 1235 X(make)S 1340 X(lower)S 1449 X
(settings)S 1590 X(unreliable.)S 1801 X(For)S 49 y 413 X(example,)S
587 X(you)S 672 X(enter)S 778 X(the)S 851 X(command)S 1038 X(and)S
1120 X(new)S 1212 X(time)S 1309 X(and)S 1391 X(then)S 1485 X(begin)S
1600 X(monitoring)S 1808 X(the)S 50 y 413 X(reference.)S 616 X
(When)S 731 X(you)S 809 X(perceive)S 965 X(that)S 1043 X(the)S 1109 X
(reference)S 1279 X(has)S 1350 X(reached)S 1495 X(the)S 1561 X
(desired)S 1696 X(time,)S 1796 X(you)S 50 y 413 X(press)S 511 X F11
(\204Return\205)S 697 X F0(to)S 742 X(initiate)S 870 X(the)S 933 X
(command.)S 1139 X(Your)S 1237 X(perception)S 1424 X(of)S 1471 X
(the)S 1534 X(reference)S 1701 X(mark)S 1798 X(and)S 50 y 413 X
(your)S 501 X(pressing)S 651 X(of)S 696 X F11(\204Return\205)S 882 X 
F0(do)S 935 X(not)S 999 X(exactly)S 1130 X(coincide.)S 1314 X
(Furthermore,)S 1543 X(once)S 1633 X(the)S 1695 X(command)S 50 y 
413 X(is)S 455 X(initiated,)S 615 X(DTS)S 707 X(takes)S 807 X(time)S
894 X(to)S 940 X(interpret)S 1095 X(and)S 1169 X(execute)S 1309 X
(the)S 1374 X(command.)S 1515 Y 413 X(The)S 492 X(following)S 667 X
(example)S 822 X(shows)S 939 X(how)S 1024 X(to)S 1071 X(change)S 
1202 X(both)S 1290 X(the)S 1354 X(time)S 1442 X(and)S 1516 X(epoch)S
1629 X(for)S 1691 X(a)S 1723 X(system:)S
XP /F14 /CM-Courier 37.360 13 DNF RP
413 1615 XY F14(dcecp\205)S
XP /F15 /CM-Times-Bold 37.360 11 DF RP
570 1615 XY F15(clock)S 666 X(set)S 722 X
(1993-10-07-09:30:15.0000I01.0000)S 1278 X(-abruptly)S 1442 X
(-epoch)S 1560 X(1)S 50 y 413 X F14(dcecp\205)S
XP /F16 /CM-Times-Bold 53.964 11 DF RP
177 1837 XY F16(25.7.3)S 413 X(Forcing)S 611 X(System)S 794 X
(Synchronization)S 1958 Y 413 X F0(Once)S 517 X(you)S 596 X(create)S
711 X(and)S 788 X(enable)S 912 X(DTS)S 1007 X(on)S 1065 X(all)S 
1123 X(the)S 1190 X(systems)S 1337 X(that)S 1416 X(are)S 1483 X(in)S
1532 X(your)S 1624 X(network,)S 1787 X(they)S 49 y 413 X
(synchronize)S 631 X(without)S 774 X(any)S 850 X(further)S 980 X
(intervention.)S 1232 X(There)S 1345 X(are)S 1412 X(situations,)S 
1599 X(however,)S 1768 X(when)S 50 y 413 X(you)S 486 X(may)S 568 X
(want)S 659 X(to)S 702 X(force)S 798 X(a)S 827 X(system)S 953 X(to)S
995 X(synchronize)S 1206 X(immediately)S 1424 X(rather)S 1532 X
(than)S 1614 X(waiting)S 1749 X(for)S 1808 X(the)S 50 y 413 X
(amount)S 553 X(of)S 604 X(time)S 693 X(that)S 771 X(is)S 814 X
(speci)S
(\014ed)S 977 X(by)S 1034 X(the)S 1100 X F11(syncinterval)S 1333 X 
F0(and)S 1408 X F11(maxinaccuracy)S 1693 X F0(attributes.)S 50 y 
413 X(As)S 477 X(an)S 533 X(example,)S 702 X(you)S 782 X(may)S 870 X
(want)S 969 X(to)S 1018 X(synchronize)S 1236 X(a)S 1272 X(system)S
1405 X(with)S 1496 X(a)S 1532 X(TP)S 1598 X(server)S 1716 X(that)S
1796 X(you)S 50 y 413 X(have)S 506 X(just)S 579 X(added)S 692 X(to)S
739 X(the)S 803 X(network.)S 2306 Y 413 X(To)S 470 X(forcibly)S 
611 X(synchronize)S 822 X(the)S 883 X(clock)S 983 X(on)S 1035 X(a)S
1064 X(system,)S 1200 X(you)S 1272 X(use)S 1338 X(the)S 1399 X F11
(dts)S 1462 X(synchronize)S 1684 X F0(command.)S 50 y 413 X(If)S 
455 X(you)S 531 X(enter)S 627 X(the)S 692 X F11(dts)S 758 X
(synchronize)S 984 X F0(command)S 1162 X(without)S 1302 X(the)S 
1367 X F11(-abruptly)S 1549 X F0(option,)S 1679 X(the)S 1743 X
(time)S 1831 X(is)S 378 634 1908 8 REVB 683 933 1908 8 REVB 
982 1431 1908 8 REVB 1480 1530 1908 8 REVB 
1580 1680 1908 8 REVB 1799 1853 1908 8 REVB 
2072 2122 1908 8 REVB 2072 2122 1908 8 REVB 
2271 2356 1908 8 REVB 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1748 X
(25{27)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 422 2
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Distributed)S 550 X(Time)S 656 X(Service)S
236 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(adjusted)S 626 X(gradually.)S 832 X(If)S 875 X(you)S
953 X(enter)S 1051 X(the)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
1118 419 XY F11(dts)S 1186 X(synchronize)S 1414 X F0(command)S 1593 X
(with)S 1683 X(the)S 1749 X F11(-abruptly)S 50 y 472 X F0(option,)S
602 X(the)S 665 X(time)S 751 X(is)S 792 X(immediately)S 1012 X
(adjusted.)S 1193 X(In)S 1241 X(the)S 1304 X(situation)S 1460 X
(posed)S 1569 X(by)S 1623 X(our)S 1691 X(example,)S 1855 X(you)S 
50 y 472 X(might)S 585 X(want)S 681 X(to)S 728 X(use)S 799 X(the)S
865 X(command)S 1044 X(with)S 1133 X(the)S 1199 X F11(-abruptly)S 
1382 X F0(option)S 1504 X(to)S 1551 X(have)S 1645 X(the)S 1711 X
(narrow)S 1844 X(time)S 50 y 472 X(interval)S 612 X(contributed)S 
815 X(by)S 870 X(the)S 933 X(time-provider)S 1175 X(quickly)S 1313 X
(propagated)S 1510 X(throughout)S 1706 X(the)S 1770 X(network:)S
XP /F14 /CM-Courier 37.360 13 DNF RP
472 669 XY F14(dcecp\205)S
XP /F15 /CM-Times-Bold 37.360 11 DF RP
629 669 XY F15(dts)S 690 X(synchronize)S 893 X(-abruptly)S 49 y 
472 X F14(dcecp\205)S
XP /F1 /CM-Times-Bold 66.418 11 DF RP
236 903 XY F1(25.8)S 460 X(Controlling)S 811 X(Access)S 1021 X(to)S
1099 X(DTS)S 1024 Y 472 X F0(You)S 571 X(can)S 655 X(assign)S 785 X
(privileges)S 976 X(that)S 1064 X(control)S 1209 X(access)S 1341 X
(to)S 1400 X(DTS)S 1505 X(objects)S 1650 X(by)S 1718 X(using)S 1834 X
(DCE)S 49 y 472 X(Authorization)S 717 X(Service)S 855 X(access)S 
975 X(control)S 1106 X(lists)S 1187 X(\(ACLs\).)S 1173 Y 472 X(The)S
550 X(DTS)S 642 X(principal)S 803 X(that)S 879 X(represents)S 1061 X
(the)S 1125 X(server)S 1240 X(on)S 1295 X(a)S 1327 X(given)S 1432 X
(system)S 1561 X(is)S 1602 X(the)S 1666 X(primary)S 1811 X(access)S
50 y 472 X(control)S 602 X(object)S 715 X(for)S 776 X(DTS.)S 876 X
(This)S 962 X(principal)S 1122 X(has)S 1189 X(controlled)S 1369 X
(access)S 1487 X(by)S 1540 X(human)S 1665 X(users)S 1763 X(and)S 
1834 X(clerk)S 50 y 472 X(or)S 523 X(server)S 640 X(processes.)S 
849 X(The)S 929 X(default)S 1060 X(name)S 1166 X(that)S 1244 X(you)S
1322 X(can)S 1396 X(use)S 1467 X(for)S 1531 X(the)S 1598 X(DTS)S 
1692 X(object)S 1809 X(in)S 1857 X(any)S 49 y 472 X F11(dcecp)S 
588 X F0(command)S 765 X(is)S 807 X F11(/.:hosts/)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
944 1322 XY F8(hostname)S F11(/dts-entity)S F0(.)S 1422 Y 472 X
(The)S 553 X(ACL)S 651 X(for)S 715 X(the)S 781 X(DTS)S 875 X
(server)S 992 X(can)S 1065 X(contain)S 1203 X(any)S 1279 X(type)S 
1366 X(of)S 1416 X(ACL)S 1514 X(entry)S 1615 X(that)S 1693 X(is)S 
1736 X(valid)S 1835 X(for)S 1899 X(a)S 50 y 472 X(principal)S 635 X
(\(human)S 777 X(or)S 827 X(process\))S 980 X(or)S 1030 X
(authorization)S 1264 X(group)S 1376 X(to)S 1423 X(which)S 1540 X
(this)S 1615 X(principal)S 1778 X(belongs.)S 50 y 472 X(See)S 542 X
(Chapter)S 682 X(28)S 733 X(of)S 777 X(this)S 846 X(guide)S 948 X
(for)S 1006 X(a)S 1034 X(discussion)S 1216 X(of)S 1260 X(the)S 1320 X
(DCE)S 1412 X(ACLs)S 1521 X(facility)S 1647 X(and)S 1717 X
(descriptions)S 49 y 472 X(of)S 521 X(ACL)S 618 X(types)S 719 X
(and)S 793 X(their)S 883 X(entries.)S 1671 Y 472 X(To)S 530 X
(display)S 662 X(the)S 724 X(ACL)S 818 X(entries)S 941 X(in)S 985 X
(the)S 1047 X(DTS)S 1137 X(server)S 1250 X(principal's)S 1439 X
(ACL,)S 1544 X(you)S 1618 X(can)S 1687 X(use)S 1754 X(the)S 1816 X 
F11(dcecp)S 50 y 472 X(acl)S 537 X(show)S 641 X F0(command.)S 848 X
(For)S 919 X(example:)S 1821 Y 472 X F14(dcecp\205)S 629 X F15(acl)S
687 X(show)S 793 X(/.:/hosts/Detroit2/dts-entity)S 49 y 472 X F14
(\211unauthenticated)S 854 X(r--\213)S 50 y 472 X(\211user)S 607 X
(hosts/Detroit2/self)S 1055 X(rwc\213)S 50 y 472 X(\211group)S 629 X
(subsys/dce/dts-admin)S 1100 X(rwc\213)S 50 y 472 X
(\211any\210other)S 719 X(r--\213)S 50 y 472 X(dcecp\205)S 2169 Y 
472 X F0(To)S 532 X(modify)S 665 X(any)S 738 X(of)S 786 X(the)S 
850 X(entries)S 974 X(in)S 1020 X(the)S 1084 X(DTS)S 1175 X(server)S
1290 X(principal's)S 1481 X(ACL,)S 1588 X(you)S 1663 X(can)S 1734 X
(use)S 1803 X(the)S 1867 X F11(acl)S 50 y 472 X(modify)S 611 X F0
(command.)S 818 X(Instructions)S 1028 X(for)S 1090 X(using)S 1194 X
(this)S 1268 X(command)S 1445 X(appear)S 1570 X(in)S 1616 X
(Chapter)S 1761 X(28.)S 378 584 1967 8 REVB 
634 733 1967 8 REVB 856 923 1967 8 REVB 1138 1337 1967 8 REVB 
1387 1586 1967 8 REVB 1636 1736 1967 8 REVB 
1786 2085 1967 8 REVB 2134 2219 1967 8 REVB 2503 Y 236 X F5(25{28)S
905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 423 3
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 413 0 XY
%%EndPageSetup
XP /F7 /CM-Times-Bold 99.626 11 DNF RP
1371 916 XY F7(Chapter)S 1759 X(26)S 177 949 XY 1682 5 R 1048 Y 
177 X(Interoperation)S 836 X(with)S 1057 X(Network)S 1461 X(Time)S
1148 Y 177 X(Protocol)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 1552 XY F0(Network)S 580 X(Time)S 689 X(Protocol)S 851 X
(\(NTP\))S 978 X(is)S 1027 X(an)S 1088 X(Internet-recommended)S 
1487 X(standard.)S 1694 X(The)S 1780 X(NTP)S 50 y 413 X
(synchronization)S 701 X(subnetwork)S 917 X(is)S 967 X(represented)S
1180 X(by)S 1244 X(a)S 1284 X(tree-structured)S 1549 X(graph)S 1665 X
(with)S 1761 X(nodes)S 50 y 413 X(representing)S 629 X(time)S 714 X
(servers)S 843 X(and)S 913 X(edges)S 1019 X(representing)S 1235 X
(the)S 1296 X(transmission)S 1517 X(paths)S 1616 X(between)S 1765 X
(them.)S 50 y 413 X(The)S 492 X(root)S 572 X(nodes)S 683 X(of)S 
731 X(the)S 796 X(tree)S 872 X(are)S 936 X(designated)S 1128 X
(primary)S 1273 X(servers)S 1404 X(that)S 1480 X(synchronize)S 1695 X
(to)S 1741 X(a)S 1773 X(radio)S 49 y 413 X(broadcast)S 591 X(or)S 
645 X(calibrated)S 827 X(atomic)S 959 X(clock.)S 1107 X(Remaining)S
1308 X(nodes)S 1424 X(are)S 1494 X(designated)S 1690 X(secondary)S
50 y 413 X(servers)S 545 X(that)S 621 X(synchronize)S 835 X(to)S 
881 X(other)S 981 X(servers)S 1112 X(\(primary)S 1271 X(and)S 1345 X
(secondary\).)S 1901 Y 413 X(The)S 496 X(number)S 641 X(of)S 694 X
(subnetwork)S 906 X(hops)S 1002 X(between)S 1159 X(a)S 1196 X
(particular)S 1373 X(server)S 1492 X(and)S 1571 X(a)S 1607 X
(primary)S 1757 X(server)S 50 y 413 X(determines)S 614 X(the)S 682 X
(stratum)S 825 X(of)S 878 X(that)S 958 X(server;)S 1089 X(that)S 
1169 X(is,)S 1225 X(the)S 1294 X(smaller)S 1434 X(the)S 1503 X
(number)S 1648 X(of)S 1701 X(hops,)S 1808 X(the)S 49 y 413 X(lower)S
531 X(the)S 604 X(stratum.)S 798 X(A)S 851 X(lower-stratum)S 1107 X
(server)S 1231 X(always)S 1369 X(has)S 1447 X(a)S 1488 X(higher)S 
1617 X(accuracy)S 1787 X(than)S 50 y 413 X(a)S 451 X
(higher-stratum)S 715 X(server.)S 877 X(All)S 950 X(servers)S 1087 X
(have)S 1185 X(identical)S 1348 X(functionality)S 1579 X(and)S 1659 X
(can)S 1736 X(operate)S 50 y 413 X(simultaneously)S 682 X(as)S 733 X
(clients)S 859 X(of)S 910 X(the)S 978 X(next)S 1066 X(lower)S 1178 X
(stratum)S 1319 X(and)S 1396 X(servers)S 1531 X(for)S 1596 X(the)S
1664 X(next)S 1752 X(higher)S 50 y 413 X(stratum.)S 2250 Y 413 X
(Servers,)S 562 X(both)S 649 X(primary)S 794 X(and)S 868 X
(secondary,)S 1060 X(typically)S 1219 X(run)S 1288 X(NTP)S 1380 X
(with)S 1467 X(several)S 1598 X(other)S 1697 X(servers)S 1828 X(at)S
49 y 413 X(the)S 475 X(same)S 572 X(or)S 618 X(lower)S 724 X
(stratum.)S 891 X(A)S 932 X(selection)S 1091 X(algorithm)S 1264 X
(attempts)S 1416 X(to)S 1460 X(select)S 1566 X(the)S 1628 X(most)S
1720 X(accurate)S 50 y 413 X(and)S 484 X(reliable)S 619 X(server)S
731 X(or)S 776 X(set)S 833 X(of)S 878 X(servers)S 1006 X(from)S 
1097 X(which)S 1209 X(to)S 1252 X(actually)S 1394 X(synchronize)S 
1605 X(the)S 1667 X(local)S 1758 X(clock.)S
XP /F5 /CM-Helvetica 41.511 11 DNF RP
177 2503 XY F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(26{1)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 580

%%Page: 424 4
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Distributed)S 550 X(Time)S 656 X(Service)S
236 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(NTP)S 563 X(and)S 634 X(DTS)S 725 X(both)S 810 X(can)S
880 X(be)S 931 X(used)S 1019 X(in)S 1063 X(large)S 1157 X(computer)S
1326 X(networks)S 1490 X(that)S 1564 X(have)S 1654 X(embedded)S 
1837 X(local)S 50 y 472 X(nets)S 549 X(\(that)S 636 X(is,)S 684 X
(those)S 782 X(connected)S 960 X(by)S 1012 X(routers,)S 1148 X
(gateways,)S 1323 X(and)S 1393 X(bridges\))S 1539 X(and)S 1609 X
(use)S 1674 X(both)S 1758 X(broadcast)S 50 y 472 X(and)S 545 X
(point-to-point)S 788 X(transmission)S 1011 X(media.)S 1155 X(DTS)S
1246 X(and)S 1319 X(NTP)S 1410 X(can)S 1480 X(run)S 1548 X
(simultaneously)S 1812 X(on)S 1867 X(the)S 50 y 472 X(same)S 572 X
(LAN.)S 669 Y 472 X(The)S 556 X(following)S 736 X(sections)S 888 X
(describe)S 1045 X(how)S 1135 X(to)S 1186 X(give)S 1276 X(time)S 
1368 X(to)S 1419 X(and)S 1497 X(get)S 1567 X(time)S 1659 X(from)S 
1758 X(local)S 1857 X(and)S 49 y 472 X(remote)S 602 X(NTP)S 694 X
(time)S 781 X(sources,)S 930 X(and)S 1004 X(how)S 1089 X(to)S 1135 X
(prevent)S 1274 X(loops.)S
XP /F1 /CM-Times-Bold 66.418 11 DNF RP
236 903 XY F1(26.1)S 461 X(Getting)S 697 X(the)S 807 X(Time)S 977 X
(from)S 1139 X(NTP)S 1294 X(Time)S 1464 X(Sources)S 1024 Y 472 X F0
(DTS)S 565 X(provides)S 721 X(two)S 798 X(sample)S 929 X
(time-provider)S 1171 X(programs:)S 74 y 508 X(\267)S
XP /F11 /CM-Times-Bold 41.511 11 DF RP
543 1098 XY F11(dts\210ntp\210provider.c)S F0(|Takes)S 1032 X(the)S
1093 X(time)S 1178 X(from)S 1269 X(an)S 1318 X(NTP)S 1407 X(server)S
1519 X(as)S 1564 X(it)S 1598 X(would)S 1712 X(from)S 1803 X(a)S 
1832 X(radio)S 50 y 543 X(receiver.)S 720 X(The)S 799 X(user)S 882 X
(speci)S
(\014es)S 1038 X(the)S 1103 X(name)S 1207 X(of)S 1255 X(the)S 1320 X
(NTP)S 1412 X(server)S 1527 X(and)S 1601 X(the)S 1666 X
(inaccuracy.)S 75 y 508 X(\267)S 543 X F11
(dts\210null\210provider.c)S F0(|Used)S 1028 X(on)S 1079 X(a)S 1108 X
(DTS)S 1197 X(server)S 1309 X(whose)S 1425 X(clock)S 1525 X(is)S 
1564 X(already)S 1696 X(synchronized)S 50 y 543 X(by)S 602 X(an)S 
658 X(external)S 808 X(agent,)S 925 X(such)S 1018 X(as)S 1070 X
(NTP.)S 1176 X(It)S 1218 X(sets)S 1297 X(the)S 1365 X(inaccuracy,)S
1572 X(but)S 1641 X(it)S 1681 X(prevents)S 1839 X(DTS)S 49 y 543 X
(from)S 641 X(setting)S 768 X(the)S 835 X(time.)S 961 X(The)S 1042 X
(user)S 1128 X(sets)S 1207 X(the)S 1274 X(inaccuracy)S 1471 X
(based)S 1582 X(on)S 1640 X(local)S 1738 X(experience)S 50 y 543 X
(with)S 634 X(NTP.)S 740 X(The)S 822 X(null)S 904 X(provider)S 1062 X
(may)S 1150 X(be)S 1207 X(useful)S 1325 X(for)S 1391 X(sites)S 1482 X
(that)S 1561 X(already)S 1701 X(have)S 1796 X(a)S 1832 X(radio)S 
50 y 543 X(clock)S 646 X(that)S 721 X(is)S 761 X(managed)S 924 X
(by)S 978 X(NTP.)S 1079 X(Make)S 1187 X(the)S 1250 X(node)S 1343 X
(with)S 1430 X(the)S 1493 X(radio)S 1591 X(clock)S 1694 X(a)S 1725 X
(DTS)S 1816 X(server)S 50 y 543 X(and)S 617 X(use)S 686 X(the)S 
751 X(null)S 829 X(time-provider.)S
XP /F16 /CM-Times-Bold 53.964 11 DF RP
236 1644 XY F16(26.1.1)S 472 X(Getting)S 664 X(the)S 754 X(Time)S 
892 X(from)S 1024 X(Local)S 1171 X(NTP)S 1297 X(Time)S 1435 X
(Sources)S 1765 Y 472 X F0(Run)S 556 X(the)S 620 X(DTS)S 713 X
(server)S 828 X(on)S 883 X(a)S 916 X(node)S 1010 X(that)S 1086 X
(is)S 1128 X(running)S 1271 X(an)S 1324 X(NTP)S 1417 X(clock)S 1520 X
(driver)S 1634 X(with)S 1721 X(a)S 1754 X(clock)S 1857 X(and)S 49 y 
472 X(the)S 535 X(null)S 612 X(time-provider.)S 883 X(Specify)S 
1022 X(the)S 1085 X(inaccuracy)S 1277 X(in)S 1321 X(a)S 1352 X
(manner)S 1488 X(that)S 1563 X(is)S 1603 X(consistent)S 1781 X
(with)S 1867 X(the)S 50 y 472 X(time)S 561 X(source;)S 695 X(for)S
758 X(instance,)S 919 X(a)S 952 X(radio)S 1051 X(clock.)S 1187 X
(Other)S 1296 X(DTS)S 1388 X(servers)S 1521 X(will)S 1600 X(take)S
1683 X(the)S 1748 X(time)S 1837 X(from)S 50 y 472 X(this)S 545 X
(source.)S 696 X(In)S 743 X(this)S 815 X(case,)S 910 X(since)S 1007 X
(the)S 1070 X(system)S 1198 X(is)S 1238 X(connected)S 1419 X(to)S 
1464 X(a)S 1494 X(time)S 1581 X(source,)S 1712 X(it)S 1747 X(is)S 
1787 X(an)S 1839 X(NTP)S 50 y 472 X(Stratum)S 618 X(1)S 652 X
(server.)S 2064 Y 472 X(Observe)S 625 X(the)S 689 X(rules)S 784 X
(and)S 857 X(advisories)S 1040 X(that)S 1116 X(follow:)S 74 y 508 X
(\267)S 543 X(Rule|If)S 703 X(this)S 774 X(is)S 814 X(the)S 876 X
(only)S 962 X(local)S 1054 X(time)S 1140 X(source)S 1260 X(\(radio)S
1371 X(clock\))S 1487 X(in)S 1531 X(the)S 1593 X(subnetwork,)S 1809 X
(ensure)S 50 y 543 X(that)S 619 X(no)S 674 X(other)S 773 X(DTS)S 
865 X(node)S 959 X(gives)S 1060 X(the)S 1124 X(time)S 1211 X(to)S 
1257 X(NTP.)S 1359 X(If,)S 1411 X(however,)S 1577 X(there)S 1674 X
(are)S 1738 X(other)S 1837 X(local)S 50 y 543 X(time)S 631 X
(sources,)S 780 X(this)S 853 X(restriction)S 1036 X(does)S 1126 X
(not)S 1192 X(apply.)S 75 y 508 X(\267)S 543 X(Rule|Do)S 728 X(not)S
795 X(run)S 864 X(the)S 928 X(null)S 1007 X(time-provider)S 1249 X
(if)S 1288 X(there)S 1385 X(is)S 1426 X(no)S 1482 X(local)S 1576 X
(time)S 1664 X(source.)S 2503 Y 236 X F5(26{2)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 425 5
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1082 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1082 215 XY F5(Interoperation)S 1352 X(with)S 1439 X(Network)S 1605 X
(Time)S 1712 X(Protocol)S 195 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
449 419 XY F0(\267)S 484 X(Advisory|Use)S 759 X(a)S 791 X(very)S 
879 X(small)S 982 X(poll)S 1061 X(rate,)S 1147 X(about)S 1253 X(1)S
1288 X(second.)S 75 y 449 X(\267)S 484 X(Advisory|Since)S 787 X
(NTP)S 880 X(makes)S 1001 X(the)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
1067 494 XY F11(adjtime\()S 1224 X(\))S 1252 X F0(system)S 1382 X
(call,)S 1467 X(be)S 1521 X(aware)S 1635 X(that)S 1712 X(the)S 1778 X
(local)S 50 y 484 X(node)S 579 X(will)S 657 X(occasionally)S 879 X
(have)S 971 X(an)S 1024 X(unspeci\014ed)S 1227 X(inaccuracy.)S 644 Y 
413 X(Figure)S 535 X(26-1)S 625 X(shows)S 742 X(how)S 827 X(a)S 
859 X(DTS)S 951 X(server/client)S 1169 X(with)S 1257 X(a)S 1288 X
(local)S 1383 X(time)S 1470 X(source)S 1592 X(takes)S 1690 X(time)S
1778 X(from)S 49 y 413 X(an)S 466 X(NTP)S 559 X(Stratum)S 704 X(1)S
739 X(server.)S 793 Y 177 X F5(Figure)S 309 X(26{1.)S 461 X(Local)S
574 X(Time)S 680 X(Source)S 600 1392 XY 0.000000 0.000000 1000 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/4_ntp_dts_10.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 258.00 132.00
-18.00 -18.00 translate
% original bounding box was  18 18 276 150
%%Title: ARTLIB:ZK-3858A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Wed Oct 23 09:49:44 1991
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
%% ********************************************************************
%%                                                                    *
%% COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
%% Maynard, Massachusetts                                             *
%% All Rights Reserved.                                               *
%%                                                                    *
%% This document is furnished under a license and may be used and     *
%% copied only in accordance with the terms of such license and with  *
%% the inclusion of the above copyright notice. No title to or        *
%% ownership of the document is hereby transferred.                   *
%%                                                                    *
%% The information in this document is subject to change without      *
%% notice and should not be construed as a commitment by Digital      *
%% Equipment Corporation.                                             *
%%                                                                    *
%% ********************************************************************
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 150.129 tr
1 -1 sc
0.700 0.700 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 368.258 188.755 Crop
1.851 slw
0 slc
30.534 119.360 30.534 95.303 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
309.040 120.748 309.040 100.392 Line st
[] 0 sd
%%RGBCustomColor: 0.500 0.500 0.500  0.500_0.500_0.500
0.500 0.500 0.500 rgb
110.107 121.673 110.107 100.392 Line st
1.851 slw
0 slc
0.000 0.000 0.000 rgb
115.659 119.360 115.659 95.303 Line st
248.898 119.360 248.898 95.303 Line st
330.322 119.360 330.322 95.303 Line st
2.776 slw
2 slc
0.500 0.500 0.500 rgb
179.502 87.438 179.502 67.082 Line st
129.538 87.438 179.502 87.438 Line st
129.538 112.420 129.538 87.438 Line st
[ 2 2 2 2 ] 0 sd
0.000 0.000 0.000 rgb
235.944 87.438 193.382 87.438 Line st
235.944 112.420 235.944 87.438 Line st
200.784 80.036 200.784 75.410 Line st
316.442 80.036 200.784 80.036 Line st
1.851 slw
[] 0 sd
0 slc
359.930 94.378 7.402 94.378 Line st
0.925 slw
6.477 92.064 2.776 92.064 2.776 96.691 6.477 96.691 Box gs
0.000 0.000 0.000 rgb
fi gr st
11.103 92.064 7.402 92.064 7.402 96.691 11.103 96.691 Box gs
%%RGBCustomColor: 1.000 1.000 1.000  1.000_1.000_1.000
1.000 1.000 1.000 rgb
fi gr st
178.577 92.064 195.232 92.064 195.232 96.691 178.577 96.691 Box gs
1.000 1.000 1.000 rgb
fi gr st
361.781 92.064 366.407 92.064 366.407 96.691 361.781 96.691 Box gs
0.000 0.000 0.000 rgb
fi gr st
357.154 92.064 361.781 92.064 361.781 96.691 357.154 96.691 Box gs
1.000 1.000 1.000 rgb
fi gr st
0.925 slw
86.050 119.823 143.417 119.823 143.417 137.403 86.050 137.403 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 86.975 120.285 mo 
144.342 120.285 li 
151.744 129.538 li 
151.744 174.876 li 
96.228 174.876 li 
86.050 165.623 li 
86.050 120.285 li gs
0.500 0.500 0.500 rgb
fi gr
144.342 119.823 86.975 119.823 Line st
151.744 129.075 144.342 119.823 Line st
151.744 174.413 151.744 129.075 Line st
96.228 174.413 151.744 174.413 Line st
86.050 165.161 96.228 174.413 Line st
86.050 119.823 86.050 165.161 Line st
86.050 119.823 143.417 119.823 143.417 165.161 86.050 165.161 Box gs
1.000 1.000 1.000 rgb
fi gr st
86.050 119.823 143.417 119.823 143.417 143.880 86.050 143.880 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (NTP) 105.481 132.314 Text
6 0.37129 (server) 101.780 141.566 Text
219.289 119.823 276.656 119.823 276.656 137.403 219.289 137.403 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 220.214 120.285 mo 
277.581 120.285 li 
284.983 129.538 li 
284.983 174.876 li 
229.467 174.876 li 
219.289 165.623 li 
219.289 120.285 li gs
0.500 0.500 0.500 rgb
fi gr
277.581 119.823 220.214 119.823 Line st
284.983 129.075 277.581 119.823 Line st
284.983 174.413 284.983 129.075 Line st
229.467 174.413 284.983 174.413 Line st
219.289 165.161 229.467 174.413 Line st
219.289 119.823 219.289 165.161 Line st
219.289 119.823 276.656 119.823 276.656 165.161 219.289 165.161 Box gs
1.000 1.000 1.000 rgb
fi gr st
219.289 119.823 276.656 119.823 276.656 143.880 219.289 143.880 Box gs
1.000 1.000 1.000 rgb
fi gr st
6 0.30727 (client) 236.869 141.566 Text
300.713 119.823 358.080 119.823 358.080 137.403 300.713 137.403 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 301.638 120.285 mo 
359.005 120.285 li 
366.407 129.538 li 
366.407 174.876 li 
310.891 174.876 li 
300.713 165.623 li 
300.713 120.285 li gs
0.500 0.500 0.500 rgb
fi gr
359.005 119.823 301.638 119.823 Line st
366.407 129.075 359.005 119.823 Line st
366.407 174.413 366.407 129.075 Line st
310.891 174.413 366.407 174.413 Line st
300.713 165.161 310.891 174.413 Line st
300.713 119.823 300.713 165.161 Line st
300.713 119.823 358.080 119.823 358.080 165.161 300.713 165.161 Box gs
1.000 1.000 1.000 rgb
fi gr st
300.713 119.823 358.080 119.823 358.080 143.880 300.713 143.880 Box gs
1.000 1.000 1.000 rgb
fi gr st
6 0.37129 (server) 315.517 141.566 Text
0.925 slw
107.331 92.064 123.986 92.064 123.986 96.691 107.331 96.691 Box gs
1.000 1.000 1.000 rgb
fi gr st
240.570 92.064 257.225 92.064 257.225 96.691 240.570 96.691 Box gs
1.000 1.000 1.000 rgb
fi gr st
321.994 92.064 338.649 92.064 338.649 96.691 321.994 96.691 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 slw
186.905 91.602 186.905 67.545 Line st
0.925 slw
1.851 119.823 59.217 119.823 59.217 137.403 1.851 137.403 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 2.776 120.285 mo 
60.143 120.285 li 
67.545 129.538 li 
67.545 174.876 li 
12.029 174.876 li 
1.851 165.623 li 
1.851 120.285 li gs
0.500 0.500 0.500 rgb
fi gr
60.143 119.823 2.776 119.823 Line st
67.545 129.075 60.143 119.823 Line st
67.545 174.413 67.545 129.075 Line st
12.029 174.413 67.545 174.413 Line st
1.851 165.161 12.029 174.413 Line st
1.851 119.823 1.851 165.161 Line st
1.851 119.823 59.217 119.823 59.217 165.161 1.851 165.161 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 119.823 59.217 119.823 59.217 143.880 1.851 143.880 Box gs
1.000 1.000 1.000 rgb
fi gr st
3 0.25606 (NTP) 21.281 132.314 Text
6 0.30727 (client) 19.431 141.566 Text
0.925 slw
22.206 92.064 38.861 92.064 38.861 96.691 22.206 96.691 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 3) 19.431 185.054 Text
9 0.43530 (stratum 2) 103.630 185.054 Text
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
253.524 113.346 253.524 100.392 Line st
309.040 100.392 253.524 100.392 Line st
np 253.524 120.285 mo 
251.674 112.883 li 
256.300 112.883 li 
253.524 119.360 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
[] 0 sd
251.674 112.420 253.524 119.823 Line st
256.300 112.420 251.674 112.420 Line st
253.524 118.897 256.300 112.420 Line st
np 235.944 120.285 mo 
233.168 112.883 li 
237.794 112.883 li 
235.944 119.360 li gs
0.000 0.000 0.000 rgb
fi gr
233.168 112.420 235.944 119.823 Line st
237.794 112.420 233.168 112.420 Line st
235.944 118.897 237.794 112.420 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
316.442 113.346 316.442 80.036 Line st
np 315.517 120.285 mo 
313.667 112.883 li 
318.293 112.883 li 
315.517 119.360 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
[] 0 sd
313.667 112.420 315.517 119.823 Line st
318.293 112.420 313.667 112.420 Line st
315.517 118.897 318.293 112.420 Line st
2.776 slw
0.500 0.500 0.500 rgb
36.086 100.392 110.107 100.392 Line st
35.160 112.420 35.160 100.392 Line st
np 129.538 120.285 mo 
131.388 112.883 li 
126.762 112.883 li 
129.538 119.360 li gs
0.500 0.500 0.500 rgb
fi gr
0.925 slw
131.388 112.420 129.538 119.823 Line st
126.762 112.420 131.388 112.420 Line st
129.538 118.897 126.762 112.420 Line st
np 35.160 120.285 mo 
37.936 112.883 li 
33.310 112.883 li 
35.160 119.360 li gs
0.500 0.500 0.500 rgb
fi gr
37.936 112.420 35.160 119.823 Line st
33.310 112.420 37.936 112.420 Line st
35.160 118.897 33.310 112.420 Line st
0 slc
0.000 0.000 0.000 rgb
66.619 173.488 58.292 165.161 Line st
150.819 173.488 142.492 165.161 Line st
284.058 173.488 275.731 165.161 Line st
365.482 173.488 357.154 165.161 Line st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (DTS) 238.720 131.388 Text
3 0.25606 (DTS) 318.293 132.314 Text
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
193.382 87.438 193.382 66.157 Line st
1.851 slw
[] 0 sd
225.766 28.683 219.289 28.683 Line st
0.925 slw
8.327 10.178 0.000 232.243 29.146 Ellipse gs
0.000 0.000 0.000 rgb
fi gr st
232.243 29.146 8.327 Circle gs
1.000 1.000 1.000 rgb
fi gr st
0 slc
232.243 29.146 232.243 21.744 Line st
228.542 30.997 232.243 29.146 Line st
232.243 29.146 0.925 Circle gs
0.000 0.000 0.000 rgb
fi gr st
153.595 13.416 210.962 13.416 210.962 30.997 153.595 30.997 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 154.520 13.879 mo 
211.887 13.879 li 
219.289 23.132 li 
219.289 68.470 li 
163.773 68.470 li 
153.595 59.217 li 
153.595 13.879 li gs
0.500 0.500 0.500 rgb
fi gr
211.887 13.416 154.520 13.416 Line st
219.289 22.669 211.887 13.416 Line st
219.289 68.007 219.289 22.669 Line st
163.773 68.007 219.289 68.007 Line st
153.595 58.755 163.773 68.007 Line st
153.595 13.416 153.595 58.755 Line st
153.595 13.416 210.962 13.416 210.962 58.755 153.595 58.755 Box gs
1.000 1.000 1.000 rgb
fi gr st
153.595 13.416 210.962 13.416 210.962 37.473 153.595 37.473 Box gs
1.000 1.000 1.000 rgb
fi gr st
218.364 67.082 210.036 58.755 Line st
6 0.37129 (server) 168.399 34.235 Text
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 1) 166.549 9.253 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (NTP) 173.026 48.114 Text
6 0.37129 (server) 168.399 55.516 Text
np 200.784 69.395 mo 
198.008 75.872 li 
202.634 75.872 li 
200.784 69.395 li gs
0.000 0.000 0.000 rgb
fi gr
2 slc
198.008 75.410 200.784 68.933 Line st
202.634 75.410 198.008 75.410 Line st
200.784 68.933 202.634 75.410 Line st
3 0.25606 (DTS) 171.175 24.982 Text
1.851 slw
0 slc
140.641 28.683 153.595 28.683 Line st
0.925 slw
67.545 24.982 np mo
67.545 22.206 143.417 22.206 3.271 Bxr
146.193 22.206 146.193 33.310 3.271 Bxr
146.193 36.086 70.321 36.086 3.271 Bxr
67.545 36.086 67.545 33.310 3.271 Bxr cl gs
0.500 0.500 0.500 rgb
fi gr st
65.694 22.206 np mo
65.694 19.431 141.566 19.431 3.271 Bxr
144.342 19.431 144.342 30.534 3.271 Bxr
144.342 33.310 68.470 33.310 3.271 Bxr
65.694 33.310 65.694 30.534 3.271 Bxr cl gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
19 0.93462 (dts_null_provider.c) 69.395 28.683 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000 0.500_0.500_0.500
%%+ 1.000_1.000_1.000

%%EndDocument 
EPSE
XP /F16 /CM-Times-Bold 53.964 11 DF RP
177 1564 XY F16(26.1.2)S 413 X(Getting)S 605 X(the)S 695 X(Time)S 
833 X(from)S 965 X(Remote)S 1160 X(NTP)S 1286 X(Time)S 1423 X
(Sources)S 1684 Y 413 X F0(Run)S 494 X(the)S 556 X(DTS)S 645 X
(server)S 758 X(with)S 843 X(the)S 905 X(NTP)S 994 X(time-provider)S
1234 X(\()S F11(dts\210ntp\210provider.c)S F0(\))S 1610 X(on)S 1663 X
(a)S 1693 X(node)S 1785 X(with)S 50 y 413 X(access)S 533 X(to)S 
580 X(an)S 633 X(NTP)S 725 X(server.)S 870 X(Specify)S 1011 X(the)S
1076 X(inaccuracy)S 1269 X(in)S 1316 X(a)S 1348 X(manner)S 1487 X
(that)S 1563 X(is)S 1605 X(consistent)S 1785 X(with)S 50 y 413 X
(local)S 508 X(NTP)S 600 X(experience.)S 1884 Y 413 X(Observe)S 
566 X(the)S 630 X(following)S 805 X(advisories:)S 74 y 449 X(\267)S
484 X(Advisory|If)S 729 X(links)S 830 X(to)S 883 X(remote)S 1019 X
(sources)S 1164 X(are)S 1235 X(distant,)S 1377 X(consider)S 1538 X
(having)S 1672 X(one)S 1752 X(of)S 1808 X(the)S 50 y 484 X
(subnetwork)S 692 X(nodes)S 802 X(run)S 872 X(the)S 936 X(NTP)S 
1028 X(locally.)S 75 y 449 X(\267)S 484 X(Advisory|Note)S 776 X
(that)S 854 X(the)S 920 X(NTP)S 1014 X(time-provider)S 1258 X(does)S
1350 X(not)S 1418 X(accept)S 1540 X(time)S 1629 X(from)S 1725 X(an)S
1780 X(NTP)S 50 y 484 X(node)S 579 X(at)S 623 X(Stratum)S 768 X(8)S
802 X(or)S 851 X(higher.)S 74 y 449 X(\267)S 484 X(Advisory|The)S 
759 X(NTP)S 851 X(node)S 945 X(needs)S 1054 X(to)S 1100 X(be)S 1153 X
(as)S 1201 X(close)S 1301 X(to)S 1347 X(Stratum)S 1492 X(1)S 1527 X
(as)S 1575 X(possible.)S 2307 Y 413 X(Figures)S 552 X(26-2)S 643 X
(and)S 717 X(26-3)S 808 X(both)S 896 X(show)S 998 X(a)S 1031 X(DTS)S
1123 X(server)S 1239 X(getting)S 1369 X(the)S 1434 X(time)S 1522 X
(from)S 1617 X(a)S 1650 X(remote)S 1780 X(NTP)S 50 y 413 X(time)S 
501 X(source,)S 634 X(which)S 749 X(is)S 791 X(a)S 824 X(Stratum)S
969 X(3)S 1004 X(server.)S 1149 X(However,)S 1326 X(in)S 1372 X
(Figure)S 1495 X(26-2)S 1585 X(\(Scenario)S 1758 X(1\),)S 1817 X
(all)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(26{3)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 426 6
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Distributed)S 550 X(Time)S 656 X(Service)S
236 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(of)S 524 X(the)S 591 X(advisories)S 777 X(in)S 826 X
(this)S 902 X(section)S 1037 X(are)S 1104 X(followed;)S 1280 X(in)S
1329 X(Figure)S 1455 X(26-3)S 1548 X(\(Scenario)S 1723 X(2\),)S 
1785 X(the)S 1853 X(\014rst)S 50 y 472 X(advisory,)S 638 X(running)S
780 X(NTP)S 871 X(locally)S 996 X(on)S 1050 X(one)S 1123 X(of)S 
1170 X(the)S 1233 X(subnetwork)S 1439 X(nodes)S 1548 X(if)S 1586 X
(the)S 1649 X(link)S 1726 X(to)S 1771 X(a)S 1802 X(remote)S 50 y 
472 X(source)S 595 X(is)S 636 X(distant,)S 771 X(is)S 813 X
(ignored.)S 619 Y 236 X F5(Figure)S 368 X(26{2.)S 520 X(Getting)S 
667 X(the)S 739 X(Time)S 845 X(from)S 942 X(a)S 979 X(Remote)S 1138 X
(NTP)S 1235 X(Time)S 1341 X(Source)S 1486 X(\(Scenario)S 1678 X
(1\))S 715 1491 XY 0.000000 0.000000 1000 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/4_ntp_dts_20.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 231.00 196.00
-18.00 -18.00 translate
% original bounding box was  18 18 249 214
%%Title: ARTLIB:ZK-3859A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Wed Oct 23 09:57:58 1991
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
%% ********************************************************************
%%                                                                    *
%% COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
%% Maynard, Massachusetts                                             *
%% All Rights Reserved.                                               *
%%                                                                    *
%% This document is furnished under a license and may be used and     *
%% copied only in accordance with the terms of such license and with  *
%% the inclusion of the above copyright notice. No title to or        *
%% ownership of the document is hereby transferred.                   *
%%                                                                    *
%% The information in this document is subject to change without      *
%% notice and should not be construed as a commitment by Digital      *
%% Equipment Corporation.                                             *
%%                                                                    *
%% ********************************************************************
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 213.602 tr
1 -1 sc
0.700 0.700 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 329.396 279.432 Crop
1.851 slw
0 slc
35.160 194.307 35.160 169.324 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
%%RGBCustomColor: 0.500 0.500 0.500  0.500_0.500_0.500
0.500 0.500 0.500 rgb
41.637 189.218 41.637 168.862 Line st
[] 0 sd
0 slc
138.426 119.134 89.440 -171.519 -110.978 1 Arc st
0.925 slw
0.000 0.000 0.000 rgb
79.573 100.392 62.918 122.598 Line st
81.424 91.139 79.573 100.392 Line st
83.274 110.570 81.424 91.139 Line st
86.050 79.111 83.274 110.570 Line st
86.975 97.616 86.050 79.111 Line st
89.751 88.363 86.975 97.616 Line st
111.958 60.605 89.751 88.363 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
0.500 0.500 0.500 rgb
41.637 188.293 41.637 167.937 Line st
120.285 189.218 41.637 189.218 Line st
2.405 slw
[] 0 sd
0.000 0.000 0.000 rgb
140.641 170.527 140.641 183.481 Line st
304.414 183.481 140.641 183.481 Line st
304.414 215.865 304.414 184.406 Line st
0.925 slw
1.851 115.196 59.217 115.196 59.217 132.776 1.851 132.776 Box gs
%%RGBCustomColor: 1.000 1.000 1.000  1.000_1.000_1.000
1.000 1.000 1.000 rgb
fi gr st
np 2.776 115.659 mo 
60.143 115.659 li 
67.545 124.911 li 
67.545 170.250 li 
12.029 170.250 li 
1.851 160.997 li 
1.851 115.659 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
60.143 115.196 2.776 115.196 Line st
67.545 124.449 60.143 115.196 Line st
67.545 169.787 67.545 124.449 Line st
12.029 169.787 67.545 169.787 Line st
1.851 160.534 12.029 169.787 Line st
1.851 115.196 1.851 160.534 Line st
1.851 115.196 59.217 115.196 59.217 160.534 1.851 160.534 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 115.196 59.217 115.196 59.217 139.253 1.851 139.253 Box gs
1.000 1.000 1.000 rgb
fi gr st
66.619 168.862 58.292 160.534 Line st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
5 0.25606 (local) 21.281 126.762 Text
1.851 slw
320.144 196.157 11.103 196.157 Line st
0.925 slw
26.833 193.844 43.488 193.844 43.488 198.470 26.833 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
323.845 193.844 327.546 193.844 327.546 198.470 323.845 198.470 Box gs
0.000 0.000 0.000 rgb
fi gr st
319.218 193.844 322.919 193.844 322.919 198.470 319.218 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
117.509 193.844 134.164 193.844 134.164 198.470 117.509 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
206.335 193.844 222.990 193.844 222.990 198.470 206.335 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
281.282 193.844 297.937 193.844 297.937 198.470 281.282 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 slw
125.837 194.307 125.837 169.324 Line st
289.610 222.990 289.610 198.008 Line st
214.663 222.990 214.663 198.008 Line st
0.925 slw
186.905 223.453 244.271 223.453 244.271 241.033 186.905 241.033 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 187.830 223.915 mo 
245.197 223.915 li 
252.599 233.168 li 
252.599 278.506 li 
197.083 278.506 li 
186.905 269.254 li 
186.905 223.915 li gs
0.500 0.500 0.500 rgb
fi gr
245.197 223.453 187.830 223.453 Line st
252.599 232.705 245.197 223.453 Line st
252.599 278.044 252.599 232.705 Line st
197.083 278.044 252.599 278.044 Line st
186.905 268.791 197.083 278.044 Line st
186.905 223.453 186.905 268.791 Line st
261.852 223.453 319.218 223.453 319.218 241.033 261.852 241.033 Box gs
1.000 1.000 1.000 rgb
fi gr st
251.674 277.118 243.346 268.791 Line st
np 262.777 223.915 mo 
320.144 223.915 li 
327.546 233.168 li 
327.546 278.506 li 
272.029 278.506 li 
261.852 269.254 li 
261.852 223.915 li gs
0.500 0.500 0.500 rgb
fi gr
320.144 223.453 262.777 223.453 Line st
327.546 232.705 320.144 223.453 Line st
327.546 278.044 327.546 232.705 Line st
272.029 278.044 327.546 278.044 Line st
261.852 268.791 272.029 278.044 Line st
261.852 223.453 261.852 268.791 Line st
186.905 223.453 244.271 223.453 244.271 268.791 186.905 268.791 Box gs
1.000 1.000 1.000 rgb
fi gr st
326.620 277.118 318.293 268.791 Line st
261.852 223.453 319.218 223.453 319.218 268.791 261.852 268.791 Box gs
1.000 1.000 1.000 rgb
fi gr st
186.905 223.453 244.271 223.453 244.271 247.510 186.905 247.510 Box gs
1.000 1.000 1.000 rgb
fi gr st
261.852 223.453 319.218 223.453 319.218 247.510 261.852 247.510 Box gs
1.000 1.000 1.000 rgb
fi gr st
6 0.48651 (DECdts) 198.008 235.944 Text
6 0.48651 (DECdts) 272.955 235.944 Text
6 0.30727 (client) 279.432 245.197 Text
np 304.414 222.990 mo 
302.563 215.588 li 
307.190 215.588 li 
304.414 222.990 li gs
0.000 0.000 0.000 rgb
fi gr
2 slc
302.563 215.125 304.414 222.528 Line st
307.190 215.125 302.563 215.125 Line st
304.414 222.528 307.190 215.125 Line st
np 199.858 222.990 mo 
198.008 215.588 li 
202.634 215.588 li 
199.858 222.990 li gs
0.000 0.000 0.000 rgb
fi gr
198.008 215.125 199.858 222.528 Line st
202.634 215.125 198.008 215.125 Line st
199.858 222.528 202.634 215.125 Line st
10 0.66575 (NTP server) 6.477 136.940 Text
np 283.133 222.990 mo 
281.282 215.588 li 
285.909 215.588 li 
283.133 222.990 li gs
0.000 0.000 0.000 rgb
fi gr
281.282 215.125 283.133 222.528 Line st
285.909 215.125 281.282 215.125 Line st
283.133 222.528 285.909 215.125 Line st
6 0.37129 (server) 202.634 245.197 Text
2.776 slw
[ 2 2 2 2 ] 0 sd
0.500 0.500 0.500 rgb
120.285 189.218 41.637 189.218 Line st
120.285 189.218 120.285 176.264 Line st
2.405 slw
[] 0 sd
0.000 0.000 0.000 rgb
221.140 201.986 221.140 223.268 Line st
283.133 201.986 221.140 201.986 Line st
283.133 215.865 283.133 201.986 Line st
0.925 slw
1.851 115.196 59.217 115.196 59.217 132.776 1.851 132.776 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 2.776 115.659 mo 
60.143 115.659 li 
67.545 124.911 li 
67.545 170.250 li 
12.029 170.250 li 
1.851 160.997 li 
1.851 115.659 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
60.143 115.196 2.776 115.196 Line st
67.545 124.449 60.143 115.196 Line st
67.545 169.787 67.545 124.449 Line st
12.029 169.787 67.545 169.787 Line st
1.851 160.534 12.029 169.787 Line st
1.851 115.196 1.851 160.534 Line st
1.851 115.196 59.217 115.196 59.217 160.534 1.851 160.534 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 115.196 59.217 115.196 59.217 139.253 1.851 139.253 Box gs
1.000 1.000 1.000 rgb
fi gr st
66.619 168.862 58.292 160.534 Line st
5 0.25606 (local) 21.281 126.762 Text
0.925 slw
6.477 193.844 2.776 193.844 2.776 198.470 6.477 198.470 Box gs
0.000 0.000 0.000 rgb
fi gr st
11.103 193.844 7.402 193.844 7.402 198.470 11.103 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
26.833 193.844 43.488 193.844 43.488 198.470 26.833 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
117.509 193.844 134.164 193.844 134.164 198.470 117.509 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 4) 11.103 111.958 Text
206.335 193.844 222.990 193.844 222.990 198.470 206.335 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
281.282 193.844 297.937 193.844 297.937 198.470 281.282 198.470 Box gs
1.000 1.000 1.000 rgb
fi gr st
0.925 slw
186.905 223.453 244.271 223.453 244.271 241.033 186.905 241.033 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 187.830 223.915 mo 
245.197 223.915 li 
252.599 233.168 li 
252.599 278.506 li 
197.083 278.506 li 
186.905 269.254 li 
186.905 223.915 li gs
0.500 0.500 0.500 rgb
fi gr
245.197 223.453 187.830 223.453 Line st
252.599 232.705 245.197 223.453 Line st
252.599 278.044 252.599 232.705 Line st
197.083 278.044 252.599 278.044 Line st
186.905 268.791 197.083 278.044 Line st
186.905 223.453 186.905 268.791 Line st
261.852 223.453 319.218 223.453 319.218 241.033 261.852 241.033 Box gs
1.000 1.000 1.000 rgb
fi gr st
251.674 277.118 243.346 268.791 Line st
np 262.777 223.915 mo 
320.144 223.915 li 
327.546 233.168 li 
327.546 278.506 li 
272.029 278.506 li 
261.852 269.254 li 
261.852 223.915 li gs
0.500 0.500 0.500 rgb
fi gr
320.144 223.453 262.777 223.453 Line st
327.546 232.705 320.144 223.453 Line st
327.546 278.044 327.546 232.705 Line st
272.029 278.044 327.546 278.044 Line st
261.852 268.791 272.029 278.044 Line st
261.852 223.453 261.852 268.791 Line st
186.905 223.453 244.271 223.453 244.271 268.791 186.905 268.791 Box gs
1.000 1.000 1.000 rgb
fi gr st
326.620 277.118 318.293 268.791 Line st
261.852 223.453 319.218 223.453 319.218 268.791 261.852 268.791 Box gs
1.000 1.000 1.000 rgb
fi gr st
186.905 223.453 244.271 223.453 244.271 247.510 186.905 247.510 Box gs
1.000 1.000 1.000 rgb
fi gr st
261.852 223.453 319.218 223.453 319.218 247.510 261.852 247.510 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
6 0.30727 (client) 279.432 245.197 Text
10 0.66575 (NTP server) 6.477 136.940 Text
6 0.37129 (server) 202.634 245.197 Text
2.405 slw
2 slc
132.314 176.079 132.314 189.033 Line st
199.858 189.033 132.314 189.033 Line st
199.858 215.865 199.858 189.033 Line st
np 107.331 12.029 mo 
164.698 12.029 li 
172.100 21.281 li 
172.100 66.619 li 
116.584 66.619 li 
106.406 57.367 li 
106.406 12.029 li gs
0.500 0.500 0.500 rgb
fi gr
0.925 slw
0 slc
164.698 11.566 107.331 11.566 Line st
172.100 20.819 164.698 11.566 Line st
172.100 66.157 172.100 20.819 Line st
116.584 66.157 172.100 66.157 Line st
106.406 56.904 116.584 66.157 Line st
106.406 11.566 106.406 56.904 Line st
106.406 11.566 163.773 11.566 163.773 56.904 106.406 56.904 Box gs
1.000 1.000 1.000 rgb
fi gr st
106.406 11.566 163.773 11.566 163.773 35.623 106.406 35.623 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 3) 119.360 9.253 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
6 0.40969 (remote) 120.285 23.132 Text
10 0.66575 (NTP server) 111.032 32.384 Text
172.100 65.232 163.773 56.904 Line st
np 49.965 113.808 mo 
52.740 106.406 li 
48.114 106.406 li 
49.965 113.808 li gs
0.500 0.500 0.500 rgb
fi gr
2 slc
0.500 0.500 0.500 rgb
52.740 105.943 49.965 113.346 Line st
48.114 105.943 52.740 105.943 Line st
49.965 113.346 48.114 105.943 Line st
np 120.285 172.100 mo 
122.136 179.502 li 
117.509 179.502 li 
120.285 172.100 li gs
0.500 0.500 0.500 rgb
fi gr
122.136 179.040 120.285 171.638 Line st
117.509 179.040 122.136 179.040 Line st
120.285 171.638 117.509 179.040 Line st
0.000 0.000 0.000 rgb
98.079 116.121 155.445 116.121 155.445 133.702 98.079 133.702 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 99.004 116.584 mo 
156.371 116.584 li 
163.773 125.837 li 
163.773 171.175 li 
108.257 171.175 li 
98.079 161.922 li 
98.079 116.584 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
156.371 116.121 99.004 116.121 Line st
163.773 125.374 156.371 116.121 Line st
163.773 170.712 163.773 125.374 Line st
108.257 170.712 163.773 170.712 Line st
98.079 161.460 108.257 170.712 Line st
98.079 116.121 98.079 161.460 Line st
162.848 169.787 154.520 161.460 Line st
98.079 116.121 155.445 116.121 155.445 161.460 98.079 161.460 Box gs
1.000 1.000 1.000 rgb
fi gr st
98.079 116.121 155.445 116.121 155.445 140.178 98.079 140.178 Box gs
1.000 1.000 1.000 rgb
fi gr st
6 0.37129 (server) 113.808 137.865 Text
np 132.314 173.026 mo 
134.164 179.502 li 
129.538 179.502 li 
132.314 173.026 li gs
0.000 0.000 0.000 rgb
fi gr
2 slc
134.164 179.040 132.314 172.563 Line st
129.538 179.040 134.164 179.040 Line st
132.314 172.563 129.538 179.040 Line st
1.851 slw
0 slc
162.848 151.744 175.801 151.744 Line st
0.925 slw
98.079 116.121 155.445 116.121 155.445 133.702 98.079 133.702 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 99.004 116.584 mo 
156.371 116.584 li 
163.773 125.837 li 
163.773 171.175 li 
108.257 171.175 li 
98.079 161.922 li 
98.079 116.584 li gs
0.500 0.500 0.500 rgb
fi gr
156.371 116.121 99.004 116.121 Line st
163.773 125.374 156.371 116.121 Line st
163.773 170.712 163.773 125.374 Line st
108.257 170.712 163.773 170.712 Line st
98.079 161.460 108.257 170.712 Line st
98.079 116.121 98.079 161.460 Line st
162.848 169.787 154.520 161.460 Line st
98.079 116.121 155.445 116.121 155.445 161.460 98.079 161.460 Box gs
1.000 1.000 1.000 rgb
fi gr st
98.079 116.121 155.445 116.121 155.445 140.178 98.079 140.178 Box gs
1.000 1.000 1.000 rgb
fi gr st
6 0.37129 (server) 113.808 137.865 Text
173.026 150.819 np mo
173.026 148.043 248.898 148.043 3.271 Bxr
251.674 148.043 251.674 159.146 3.271 Bxr
251.674 161.922 175.801 161.922 3.271 Bxr
173.026 161.922 173.026 159.146 3.271 Bxr cl gs
0.500 0.500 0.500 rgb
fi gr st
171.175 148.043 np mo
171.175 145.267 247.047 145.267 3.271 Bxr
249.823 145.267 249.823 156.371 3.271 Bxr
249.823 159.146 173.951 159.146 3.271 Bxr
171.175 159.146 171.175 156.371 3.271 Bxr cl gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
18 0.93462 (dts_ntp_provider.c) 176.727 154.520 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (DTS) 116.584 128.613 Text
3 0.25606 (DTS) 204.485 235.944 Text
3 0.25606 (DTS) 279.432 235.944 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000 0.500_0.500_0.500
%%+ 1.000_1.000_1.000

%%EndDocument 
EPSE 2503 Y 236 X F5(26{4)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 427 7
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1082 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1082 215 XY F5(Interoperation)S 1352 X(with)S 1439 X(Network)S 1605 X
(Time)S 1712 X(Protocol)S 195 232 XY 1669 5 R 419 Y 177 X(Figure)S
309 X(26{3.)S 461 X(Getting)S 608 X(the)S 680 X(Time)S 786 X(from)S
883 X(a)S 920 X(Remote)S 1079 X(NTP)S 1176 X(Time)S 1282 X(Source)S
1427 X(\(Scenario)S 1619 X(2\))S 798 1288 XY 0.000000 0.000000 1000 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/4_ntp_dts_30.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 163.00 195.00
-18.00 -18.00 translate
% original bounding box was  18 18 181 213
%%Title: ARTLIB:ZK-3860A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Wed Oct 23 09:58:54 1991
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
%% ********************************************************************
%%                                                                    *
%% COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
%% Maynard, Massachusetts                                             *
%% All Rights Reserved.                                               *
%%                                                                    *
%% This document is furnished under a license and may be used and     *
%% copied only in accordance with the terms of such license and with  *
%% the inclusion of the above copyright notice. No title to or        *
%% ownership of the document is hereby transferred.                   *
%%                                                                    *
%% The information in this document is subject to change without      *
%% notice and should not be construed as a commitment by Digital      *
%% Equipment Corporation.                                             *
%%                                                                    *
%% ********************************************************************
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 212.954 tr
1 -1 sc
0.700 0.700 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 233.168 278.506 Crop
2.405 slw
2 slc
186.905 214.940 186.905 201.061 Line st
123.986 201.061 123.986 222.342 Line st
1.851 slw
0 slc
193.382 222.065 193.382 197.083 Line st
30.534 193.382 30.534 167.474 Line st
0.925 slw
78.648 100.392 61.993 122.598 Line st
80.499 91.139 78.648 100.392 Line st
82.349 110.570 80.499 91.139 Line st
85.125 79.111 82.349 110.570 Line st
86.050 97.616 85.125 79.111 Line st
88.826 88.363 86.050 97.616 Line st
111.032 60.605 88.826 88.363 Line st
2.405 slw
2 slc
46.264 169.602 46.264 182.556 Line st
207.261 182.556 47.189 182.556 Line st
207.261 214.940 207.261 183.481 Line st
1.851 slw
0 slc
224.841 195.232 10.178 195.232 Line st
0.925 slw
6.477 192.919 2.776 192.919 2.776 197.545 6.477 197.545 Box gs
0.000 0.000 0.000 rgb
fi gr st
11.103 192.919 7.402 192.919 7.402 197.545 11.103 197.545 Box gs
%%RGBCustomColor: 1.000 1.000 1.000  1.000_1.000_1.000
1.000 1.000 1.000 rgb
fi gr st
227.617 192.919 231.318 192.919 231.318 197.545 227.617 197.545 Box gs
0.000 0.000 0.000 rgb
fi gr st
222.990 192.919 226.691 192.919 226.691 197.545 222.990 197.545 Box gs
1.000 1.000 1.000 rgb
fi gr st
21.281 192.919 37.936 192.919 37.936 197.545 21.281 197.545 Box gs
1.000 1.000 1.000 rgb
fi gr st
110.107 192.919 126.762 192.919 126.762 197.545 110.107 197.545 Box gs
1.000 1.000 1.000 rgb
fi gr st
185.054 192.919 201.709 192.919 201.709 197.545 185.054 197.545 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 slw
118.435 222.065 118.435 197.083 Line st
0.925 slw
1.851 115.196 59.217 115.196 59.217 132.776 1.851 132.776 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 2.776 115.659 mo 
60.143 115.659 li 
67.545 124.911 li 
67.545 170.250 li 
12.029 170.250 li 
1.851 160.997 li 
1.851 115.659 li gs
%%RGBCustomColor: 0.500 0.500 0.500  0.500_0.500_0.500
0.500 0.500 0.500 rgb
fi gr
60.143 115.196 2.776 115.196 Line st
67.545 124.449 60.143 115.196 Line st
67.545 169.787 67.545 124.449 Line st
12.029 169.787 67.545 169.787 Line st
1.851 160.534 12.029 169.787 Line st
1.851 115.196 1.851 160.534 Line st
1.851 115.196 59.217 115.196 59.217 160.534 1.851 160.534 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 115.196 59.217 115.196 59.217 139.253 1.851 139.253 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
6 0.37129 (server) 17.580 136.940 Text
90.676 222.528 148.043 222.528 148.043 240.108 90.676 240.108 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 91.602 222.990 mo 
148.969 222.990 li 
156.371 232.243 li 
156.371 277.581 li 
100.854 277.581 li 
90.676 268.328 li 
90.676 222.990 li gs
0.500 0.500 0.500 rgb
fi gr
148.969 222.528 91.602 222.528 Line st
156.371 231.780 148.969 222.528 Line st
156.371 277.118 156.371 231.780 Line st
100.854 277.118 156.371 277.118 Line st
90.676 267.866 100.854 277.118 Line st
90.676 222.528 90.676 267.866 Line st
165.623 222.528 222.990 222.528 222.990 240.108 165.623 240.108 Box gs
1.000 1.000 1.000 rgb
fi gr st
156.371 277.118 148.043 267.866 Line st
np 166.549 222.990 mo 
223.915 222.990 li 
231.318 232.243 li 
231.318 277.581 li 
175.801 277.581 li 
165.623 268.328 li 
165.623 222.990 li gs
0.500 0.500 0.500 rgb
fi gr
223.915 222.528 166.549 222.528 Line st
231.318 231.780 223.915 222.528 Line st
231.318 277.118 231.318 231.780 Line st
175.801 277.118 231.318 277.118 Line st
165.623 267.866 175.801 277.118 Line st
165.623 222.528 165.623 267.866 Line st
90.676 222.528 148.043 222.528 148.043 267.866 90.676 267.866 Box gs
1.000 1.000 1.000 rgb
fi gr st
231.318 277.118 222.990 267.866 Line st
165.623 222.528 222.990 222.528 222.990 267.866 165.623 267.866 Box gs
1.000 1.000 1.000 rgb
fi gr st
90.676 222.528 148.043 222.528 148.043 246.585 90.676 246.585 Box gs
1.000 1.000 1.000 rgb
fi gr st
165.623 222.528 222.990 222.528 222.990 246.585 165.623 246.585 Box gs
1.000 1.000 1.000 rgb
fi gr st
6 0.30727 (client) 183.204 244.271 Text
2.405 slw
2 slc
37.936 175.153 37.936 188.107 Line st
102.705 188.107 37.936 188.107 Line st
103.630 214.015 103.630 188.107 Line st
np 207.261 222.065 mo 
204.485 214.663 li 
209.111 214.663 li 
207.261 222.065 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
204.485 214.200 207.261 221.602 Line st
209.111 214.200 204.485 214.200 Line st
207.261 221.602 209.111 214.200 Line st
np 103.630 222.065 mo 
100.854 214.663 li 
105.481 214.663 li 
103.630 222.065 li gs
0.000 0.000 0.000 rgb
fi gr
100.854 214.200 103.630 221.602 Line st
105.481 214.200 100.854 214.200 Line st
103.630 221.602 105.481 214.200 Line st
np 186.905 222.065 mo 
185.054 214.663 li 
189.680 214.663 li 
186.905 222.065 li gs
0.000 0.000 0.000 rgb
fi gr
185.054 214.200 186.905 221.602 Line st
189.680 214.200 185.054 214.200 Line st
186.905 221.602 189.680 214.200 Line st
6 0.37129 (server) 106.406 244.271 Text
74.947 11.566 132.314 11.566 132.314 29.146 74.947 29.146 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 75.872 12.029 mo 
133.239 12.029 li 
140.641 21.281 li 
140.641 66.619 li 
85.125 66.619 li 
74.947 57.367 li 
74.947 12.029 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
133.239 11.566 75.872 11.566 Line st
140.641 20.819 133.239 11.566 Line st
140.641 66.157 140.641 20.819 Line st
85.125 66.157 140.641 66.157 Line st
74.947 56.904 85.125 66.157 Line st
74.947 11.566 74.947 56.904 Line st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 3) 87.901 9.253 Text
2.776 slw
0.500 0.500 0.500 rgb
99.686 101.294 70.177 -110.642 -183.042 -1 Arc st
np 29.609 112.883 mo 
27.758 105.481 li 
32.384 105.481 li 
29.609 112.883 li gs
0.500 0.500 0.500 rgb
fi gr
0.925 slw
2 slc
27.758 105.018 29.609 112.420 Line st
32.384 105.018 27.758 105.018 Line st
29.609 112.420 32.384 105.018 Line st
0 slc
0.000 0.000 0.000 rgb
140.641 65.232 132.314 56.904 Line st
74.947 11.566 132.314 11.566 132.314 56.904 74.947 56.904 Box gs
1.000 1.000 1.000 rgb
fi gr st
74.947 11.566 132.314 11.566 132.314 35.623 74.947 35.623 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
8 0.58894 (NTP node) 82.349 32.384 Text
6 0.40969 (remote) 88.826 23.132 Text
2.405 slw
2 slc
186.905 201.061 123.986 201.061 Line st
1.851 slw
0 slc
66.619 150.819 79.573 150.819 Line st
0.925 slw
79.573 149.894 np mo
79.573 147.118 159.146 147.118 3.271 Bxr
161.922 147.118 161.922 158.221 3.271 Bxr
161.922 160.997 82.349 160.997 3.271 Bxr
79.573 160.997 79.573 158.221 3.271 Bxr cl gs
0.500 0.500 0.500 rgb
fi gr st
77.723 147.118 np mo
77.723 144.342 157.296 144.342 3.271 Bxr
160.072 144.342 160.072 155.445 3.271 Bxr
160.072 158.221 80.499 158.221 3.271 Bxr
77.723 158.221 77.723 155.445 3.271 Bxr cl gs
1.000 1.000 1.000 rgb
fi gr st
67.545 169.787 59.217 160.534 Line st
np 37.936 172.100 mo 
39.787 179.502 li 
35.160 179.502 li 
37.936 172.100 li gs
0.000 0.000 0.000 rgb
fi gr
2 slc
39.787 179.040 37.936 171.638 Line st
35.160 179.040 39.787 179.040 Line st
37.936 171.638 35.160 179.040 Line st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
18 0.93462 (dts_ntp_provider.c) 84.200 153.595 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (DTS) 20.356 127.687 Text
3 0.25606 (DTS) 108.257 235.019 Text
3 0.25606 (DTS) 184.129 235.019 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000 1.000_1.000_1.000
%%+ 0.500_0.500_0.500

%%EndDocument 
EPSE
XP /F1 /CM-Times-Bold 66.418 11 DNF RP
177 1472 XY F1(26.2)S 402 X(Giving)S 616 X(the)S 726 X(Time)S 896 X
(to)S 974 X(NTP)S 1128 X(Nodes)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 1593 XY F0(Any)S 497 X(DTS)S 589 X(server)S 703 X(or)S 750 X
(clerk)S 845 X(that)S 920 X(runs)S 1004 X(the)S
XP /F11 /CM-Times-Bold 41.511 11 DF RP
1068 1593 XY F11(ntpd)S 1163 X F0(daemon)S 1307 X(or)S 1355 X(the)S
1418 X F11(xntpd)S 1535 X F0(daemon)S 1679 X(with)S 1765 X(the)S 
1828 X F11(-s)S 50 y 413 X F0(option)S 532 X(and)S 604 X(a)S 634 X
(special)S 762 X(con\014guration)S 995 X(\014le)S 1061 X(\()S F11
(ntp.conf)S F0(\))S 1247 X(can)S 1317 X(be)S 1368 X(con\014gured)S
1558 X(as)S 1605 X(an)S 1656 X(NTP)S 1747 X(server.)S 1743 Y 413 X
(For)S 487 X(systems)S 635 X(running)S 780 X(the)S 847 X F11(ntpd)S
946 X F0(daemon,)S 1104 X(the)S 1170 X F11(ntp.conf)S 1333 X F0
(con)S
(\014guration)S 1570 X(\014le)S 1639 X(must)S 1736 X(contain)S 49 y 
413 X(the)S 478 X(following)S 653 X(line:)S
XP /F14 /CM-Courier 37.360 13 DNF RP
413 1892 XY F14(peer)S 525 X(/dev/null)S 750 X(DTSS)S 862 X(8)S 
907 X(-5)S 974 X(local)S 1992 Y 413 X F0(In)S 461 X(addition,)S 
621 X(add)S 695 X F11(-s)S 738 X F0(to)S 784 X(the)S 849 X F11
(ntpd)S 945 X F0(entry)S 1044 X(in)S 1090 X(the)S 1154 X(\014le)S 
1221 X F11(/sbin/init.d/ntpd)S 1519 X F0(or,)S 1578 X(for)S 1640 X
(systems)S 1785 X(with)S 49 y 413 X F11(rc.local)S F0(,)S 568 X
(modify)S 702 X(the)S 766 X(line)S 842 X(that)S 918 X(starts)S 1020 X 
F11(ntpd)S 1117 X F0(accordingly.)S 2141 Y 413 X(For)S 485 X
(systems)S 631 X(running)S 774 X(the)S 839 X F11(xntpd)S 957 X F0
(daemon,)S 1113 X(the)S 1178 X F11(ntp.conf)S 1338 X F0
(con\014guration)S 1574 X(\014le)S 1641 X(must)S 1736 X(contain)S 
50 y 413 X(the)S 478 X(following)S 653 X(line:)S 2290 Y 413 X F14
(peer)S 525 X(127.127.1.8)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(26{5)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 428 8
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Distributed)S 550 X(Time)S 656 X(Service)S
236 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(In)S 524 X(addition,)S 687 X(add)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
764 419 XY F11(-s)S 811 X F0(to)S 860 X(the)S 927 X F11(xntpd)S 
1048 X F0(entry)S 1150 X(in)S 1199 X(the)S 1267 X(\014le)S 1336 X 
F11(/sbin/init.d/xntpd)S 1659 X F0(or,)S 1721 X(for)S 1786 X
(systems)S 50 y 472 X(with)S 560 X F11(rc.local)S F0(,)S 715 X
(modify)S 848 X(the)S 913 X(line)S 989 X(that)S 1065 X(starts)S 
1167 X F11(xntpd)S 1284 X F0(accordingly.)S 569 Y 472 X(In)S 524 X
(this)S 600 X(con\014guration,)S 848 X(NTP)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
943 569 XY F8(never)S 1052 X F0(sets)S 1131 X(the)S 1198 X(clock.)S
1339 X(NTP)S 1434 X(can,)S 1519 X(however,)S 1688 X(give)S 1776 X
(the)S 1844 X(time)S 50 y 472 X(to)S 519 X(other)S 619 X(NTP)S 712 X
(clients.)S 866 X(Do)S 931 X F8(not)S 999 X F0(allow)S 1106 X
(loops)S 1210 X(between)S 1363 X(DTS)S 1456 X(and)S 1531 X(NTP)S 
1624 X(to)S 1671 X(form.)S 1797 X(If)S 1839 X(NTP)S 50 y 472 X
(gives)S 573 X(the)S 636 X(time)S 723 X(to)S 768 X(DTS,)S 869 X
(then)S 953 X(DTS)S 1044 X(gives)S 1145 X(the)S 1208 X(time)S 1295 X
(back)S 1386 X(to)S 1431 X(the)S 1494 X F8(same)S 1592 X F0(set)S 
1651 X(of)S 1698 X(NTP)S 1789 X(servers,)S 49 y 472 X(unexpected)S
675 X(results)S 798 X(can)S 869 X(occur.)S 818 Y 472 X(The)S 548 X
(NTP)S 638 X(con\014guration)S 871 X(\014le)S 936 X(is)S 975 X(set)S
1032 X(up)S 1085 X(to)S 1129 X(ensure)S 1249 X(that)S 1323 X(an)S 
1373 X(NTP)S 1463 X(server)S 1576 X(that)S 1650 X(obtains)S 1781 X
(the)S 1844 X(time)S 50 y 472 X(from)S 570 X(DTS)S 665 X(is)S 710 X
(a)S 745 X(Stratum)S 893 X(8)S 931 X(node.)S 1064 X(In)S 1115 X
(addition,)S 1279 X F11(dts\210ntp\210provider)S 1605 X F0(is)S 
1649 X(prohibited)S 1837 X(from)S 50 y 472 X(accepting)S 645 X
(time)S 733 X(from)S 828 X(a)S 860 X(node)S 954 X(at)S 998 X
(Stratum)S 1143 X(8)S 1178 X(or)S 1226 X(higher.)S 1017 Y 472 X(A)S
523 X(DTS)S 623 X(\(server\))S 773 X(node)S 875 X(can)S 953 X(give)S
1046 X(time)S 1141 X(to)S 1194 X(an)S 1254 X(NTP)S 1353 X(node)S 
1455 X(if)S 1502 X(the)S 1573 X(following)S 1756 X(rules)S 1857 X
(and)S 50 y 472 X(advisories)S 655 X(are)S 719 X(observed:)S 75 y 
508 X(\267)S 543 X(Rule|The)S 742 X F11(ntp.conf)S 902 X F0(\014le)S
969 X(must)S 1063 X(declare)S 1197 X(this)S 1271 X(node)S 1365 X
(at)S 1409 X(Stratum)S 1555 X(8.)S 74 y 508 X(\267)S 543 X
(Advisory|Multiple)S 896 X(nodes)S 1007 X(in)S 1053 X(the)S 1118 X
(set)S 1177 X(can)S 1249 X(be)S 1302 X(running)S 1445 X F11(ntpd)S
1542 X(-s)S 1586 X F0(or)S 1634 X F11(xntpd)S 1752 X(-s)S F0(.)S 
75 y 508 X(\267)S 543 X(Advisory|If)S 788 X(any)S 869 X
(DTS-managed)S 1132 X(system)S 1268 X(has)S 1344 X(a)S 1383 X
(local)S 1485 X(time)S 1579 X(source,)S 1719 X(that)S 1802 X
(system)S 50 y 543 X(should)S 668 X(be)S 721 X(used)S 811 X(as)S 
859 X(an)S 912 X(NTP)S 1004 X F11(-s)S 1048 X F0(server.)S 75 y 
508 X(\267)S 543 X(Advisory|Although)S 912 X(this)S 988 X
(operation)S 1160 X(can)S 1234 X(occur)S 1341 X(on)S 1399 X(either)S
1509 X(a)S 1543 X(DTS)S 1637 X(server)S 1754 X(or)S 1805 X(a)S 1839 X
(DTS)S 50 y 543 X(client)S 649 X(node,)S 754 X(a)S 787 X(DTS)S 879 X
(server)S 994 X(is)S 1036 X(preferred.)S 1565 Y 472 X F11(Note:)S 
611 X F0(If)S 653 X(null)S 731 X(providers)S 902 X(are)S 967 X
(used,)S 1068 X(the)S 1132 X(rules)S 1227 X(in)S 1274 X(Section)S 
1412 X(26.1.1)S 1530 X(must)S 1625 X(also)S 1706 X(be)S 1759 X
(followed,)S 50 y 609 X(since)S 709 X(null)S 787 X(providers)S 958 X
(running)S 1101 X(on)S 1156 X(NTP)S 1248 X(nodes)S 1359 X(can)S 
1430 X(bypass)S 1557 X(the)S 1622 X(stratum)S 1760 X(check.)S 1715 Y 
472 X(Figure)S 596 X(26-4)S 687 X(shows)S 805 X(two)S 883 X(DTS)S 
976 X(server)S 1092 X(nodes)S 1204 X(running)S 1348 X F11(ntpd)S 
1446 X(-s)S 1491 X F0(and)S 1566 X(providing)S 1742 X(time)S 1831 X
(to)S 1878 X(an)S 49 y 472 X(NTP)S 565 X(subnetwork.)S 802 X(The)S
880 X F11(ntp.conf)S 1040 X F0(\014le)S 1107 X(de\014nes)S 1239 X
(these)S 1338 X(servers)S 1469 X(at)S 1513 X(Stratum)S 1658 X(8.)S
2503 Y 236 X F5(26{6)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 429 9
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1082 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1082 215 XY F5(Interoperation)S 1352 X(with)S 1439 X(Network)S 1605 X
(Time)S 1712 X(Protocol)S 195 232 XY 1669 5 R 419 Y 177 X(Figure)S
309 X(26{4.)S 461 X(Giving)S 592 X(the)S 664 X(Time)S 770 X(to)S 
818 X(NTP)S 673 1055 XY 0.000000 0.000000 1000 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/4_ntp_dts_40.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 223.00 139.00
-18.00 -18.00 translate
% original bounding box was  18 18 241 157
%%Title: ARTLIB:ZK-3861A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Wed Oct 23 10:01:06 1991
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
%% ********************************************************************
%%                                                                    *
%% COPYRIGHT (c) 1991 BY DIGITAL EQUIPMENT CORPORATION,               *
%% Maynard, Massachusetts                                             *
%% All Rights Reserved.                                               *
%%                                                                    *
%% This document is furnished under a license and may be used and     *
%% copied only in accordance with the terms of such license and with  *
%% the inclusion of the above copyright notice. No title to or        *
%% ownership of the document is hereby transferred.                   *
%%                                                                    *
%% The information in this document is subject to change without      *
%% notice and should not be construed as a commitment by Digital      *
%% Equipment Corporation.                                             *
%%                                                                    *
%% ********************************************************************
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 157.253 tr
1 -1 sc
0.700 0.700 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 319.218 198.933 Crop
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
22.206 105.018 22.206 67.082 Line st
1.851 slw
[] 0 sd
0 slc
35.160 98.079 35.160 65.694 Line st
284.983 98.079 284.983 66.619 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
175.801 93.915 175.801 66.157 Line st
1.851 slw
[] 0 sd
0 slc
180.428 98.079 180.428 65.694 Line st
2.776 slw
2 slc
%%RGBCustomColor: 0.500 0.500 0.500  0.500_0.500_0.500
0.500 0.500 0.500 rgb
186.905 93.915 186.905 66.157 Line st
271.104 89.289 271.104 75.410 Line st
42.562 89.289 42.562 67.082 Line st
1.851 slw
0 slc
0.000 0.000 0.000 rgb
231.318 129.538 231.318 100.854 Line st
74.947 129.538 74.947 99.929 Line st
10.178 99.929 309.966 99.929 Line st
0.925 slw
6.477 97.616 2.776 97.616 2.776 101.317 6.477 101.317 Box gs
0.000 0.000 0.000 rgb
fi gr st
11.103 97.616 7.402 97.616 7.402 101.317 11.103 101.317 Box gs
%%RGBCustomColor: 1.000 1.000 1.000  1.000_1.000_1.000
1.000 1.000 1.000 rgb
fi gr st
313.667 97.616 317.368 97.616 317.368 101.317 313.667 101.317 Box gs
0.000 0.000 0.000 rgb
fi gr st
309.040 97.616 312.741 97.616 312.741 101.317 309.040 101.317 Box gs
1.000 1.000 1.000 rgb
fi gr st
2.776 slw
2 slc
0.500 0.500 0.500 rgb
298.862 105.943 298.862 68.007 Line st
236.869 105.943 298.862 105.943 Line st
236.869 122.598 236.869 105.943 Line st
np 236.869 128.613 mo 
234.093 121.210 li 
238.720 121.210 li 
236.869 128.613 li gs
0.500 0.500 0.500 rgb
fi gr
0.925 slw
234.093 120.748 236.869 128.150 Line st
238.720 120.748 234.093 120.748 Line st
236.869 128.150 238.720 120.748 Line st
0.000 0.000 0.000 rgb
201.709 130.000 259.076 130.000 259.076 147.581 201.709 147.581 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 202.634 130.463 mo 
260.001 130.463 li 
267.403 139.716 li 
267.403 185.054 li 
211.887 185.054 li 
201.709 175.801 li 
201.709 130.463 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
260.001 130.000 202.634 130.000 Line st
267.403 139.253 260.001 130.000 Line st
267.403 184.591 267.403 139.253 Line st
211.887 184.591 267.403 184.591 Line st
201.709 175.339 211.887 184.591 Line st
201.709 130.000 201.709 175.339 Line st
201.709 130.000 259.076 130.000 259.076 175.339 201.709 175.339 Box gs
1.000 1.000 1.000 rgb
fi gr st
201.709 129.075 259.076 129.075 259.076 154.058 201.709 154.058 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (NTP) 221.140 142.492 Text
6 0.30727 (client) 219.289 151.744 Text
266.478 183.666 258.150 175.339 Line st
0.925 slw
222.990 97.616 239.645 97.616 239.645 101.317 222.990 101.317 Box gs
1.000 1.000 1.000 rgb
fi gr st
0.925 slw
147.118 13.416 204.485 13.416 204.485 30.997 147.118 30.997 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 148.043 13.879 mo 
205.410 13.879 li 
212.812 23.132 li 
212.812 68.470 li 
157.296 68.470 li 
147.118 59.217 li 
147.118 13.879 li gs
0.500 0.500 0.500 rgb
fi gr
205.410 13.416 148.043 13.416 Line st
212.812 22.669 205.410 13.416 Line st
212.812 68.007 212.812 22.669 Line st
157.296 68.007 212.812 68.007 Line st
147.118 58.755 157.296 68.007 Line st
147.118 13.416 147.118 58.755 Line st
147.118 13.416 204.485 13.416 204.485 58.755 147.118 58.755 Box gs
1.000 1.000 1.000 rgb
fi gr st
147.118 12.491 204.485 12.491 204.485 37.473 147.118 37.473 Box gs
1.000 1.000 1.000 rgb
fi gr st
211.887 67.082 203.559 58.755 Line st
6 0.37129 (server) 162.848 34.235 Text
0.925 slw
172.100 97.616 188.755 97.616 188.755 101.317 172.100 101.317 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 8) 160.072 9.253 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
6 0.37129 (server) 162.848 55.516 Text
6 0.44810 (NTP -s) 160.072 48.114 Text
np 46.264 130.463 mo 
103.630 130.463 li 
111.032 139.716 li 
111.032 185.054 li 
55.516 185.054 li 
45.338 175.801 li 
45.338 130.463 li gs
0.500 0.500 0.500 rgb
fi gr
0.925 slw
103.630 130.000 46.264 130.000 Line st
111.032 139.253 103.630 130.000 Line st
111.032 184.591 111.032 139.253 Line st
55.516 184.591 111.032 184.591 Line st
45.338 175.339 55.516 184.591 Line st
45.338 130.000 45.338 175.339 Line st
45.338 130.000 102.705 130.000 102.705 175.339 45.338 175.339 Box gs
1.000 1.000 1.000 rgb
fi gr st
110.107 183.666 101.780 175.339 Line st
0.925 slw
66.619 97.616 83.274 97.616 83.274 101.317 66.619 101.317 Box gs
1.000 1.000 1.000 rgb
fi gr st
0.925 slw
45.338 129.075 102.705 129.075 102.705 154.058 45.338 154.058 Box gs
1.000 1.000 1.000 rgb
fi gr st
6 0.30727 (client) 62.918 151.744 Text
251.674 13.416 309.040 13.416 309.040 30.997 251.674 30.997 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 252.599 13.879 mo 
309.966 13.879 li 
317.368 23.132 li 
317.368 68.470 li 
261.852 68.470 li 
251.674 59.217 li 
251.674 13.879 li gs
0.500 0.500 0.500 rgb
fi gr
309.966 13.416 252.599 13.416 Line st
317.368 22.669 309.966 13.416 Line st
317.368 68.007 317.368 22.669 Line st
261.852 68.007 317.368 68.007 Line st
251.674 58.755 261.852 68.007 Line st
251.674 13.416 251.674 58.755 Line st
251.674 13.416 309.040 13.416 309.040 58.755 251.674 58.755 Box gs
1.000 1.000 1.000 rgb
fi gr st
251.674 12.491 309.040 12.491 309.040 37.473 251.674 37.473 Box gs
1.000 1.000 1.000 rgb
fi gr st
316.442 67.082 308.115 58.755 Line st
6 0.37129 (server) 267.403 34.235 Text
0.925 slw
276.656 97.616 293.311 97.616 293.311 101.317 276.656 101.317 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 9) 264.627 9.253 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (NTP) 271.104 26.833 Text
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
67.545 105.018 23.132 105.018 Line st
88.826 93.915 174.876 93.915 Line st
88.826 120.748 88.826 93.915 Line st
np 88.826 127.687 mo 
90.676 120.285 li 
86.050 120.285 li 
88.826 127.687 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
[] 0 sd
90.676 119.823 88.826 127.225 Line st
86.050 119.823 90.676 119.823 Line st
88.826 127.225 86.050 119.823 Line st
np 279.432 69.395 mo 
277.581 76.797 li 
282.207 76.797 li 
279.432 69.395 li gs
0.500 0.500 0.500 rgb
fi gr
0.500 0.500 0.500 rgb
277.581 76.335 279.432 68.933 Line st
282.207 76.335 277.581 76.335 Line st
279.432 68.933 282.207 76.335 Line st
2.776 slw
186.905 93.915 279.432 93.915 Line st
np 271.104 69.395 mo 
268.328 76.797 li 
272.955 76.797 li 
271.104 69.395 li gs
0.500 0.500 0.500 rgb
fi gr
0.925 slw
268.328 76.335 271.104 68.933 Line st
272.955 76.335 268.328 76.335 Line st
271.104 68.933 272.955 76.335 Line st
np 67.545 128.613 mo 
65.694 121.210 li 
70.321 121.210 li 
67.545 128.613 li gs
0.000 0.000 0.000 rgb
fi gr
0.000 0.000 0.000 rgb
65.694 120.748 67.545 128.150 Line st
70.321 120.748 65.694 120.748 Line st
67.545 128.150 70.321 120.748 Line st
1.851 13.416 59.217 13.416 59.217 30.997 1.851 30.997 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 2.776 13.879 mo 
60.143 13.879 li 
67.545 23.132 li 
67.545 68.470 li 
12.029 68.470 li 
1.851 59.217 li 
1.851 13.879 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
60.143 13.416 2.776 13.416 Line st
67.545 22.669 60.143 13.416 Line st
67.545 68.007 67.545 22.669 Line st
12.029 68.007 67.545 68.007 Line st
1.851 58.755 12.029 68.007 Line st
1.851 13.416 1.851 58.755 Line st
1.851 13.416 59.217 13.416 59.217 58.755 1.851 58.755 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 12.491 59.217 12.491 59.217 37.473 1.851 37.473 Box gs
1.000 1.000 1.000 rgb
fi gr st
66.619 67.082 58.292 58.755 Line st
6 0.37129 (server) 17.580 34.235 Text
0.925 slw
26.833 97.616 43.488 97.616 43.488 101.317 26.833 101.317 Box gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 8) 14.804 9.253 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
6 0.37129 (server) 17.580 55.516 Text
6 0.44810 (NTP -s) 14.804 48.114 Text
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
10 0.49932 (stratum 10) 216.513 195.232 Text
np 49.039 69.395 mo 
51.815 76.797 li 
47.189 76.797 li 
49.039 69.395 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
2 slc
51.815 76.335 49.039 68.933 Line st
47.189 76.335 51.815 76.335 Line st
49.039 68.933 47.189 76.335 Line st
np 167.474 69.395 mo 
169.324 76.797 li 
164.698 76.797 li 
167.474 69.395 li gs
0.000 0.000 0.000 rgb
fi gr
169.324 76.335 167.474 68.933 Line st
164.698 76.335 169.324 76.335 Line st
167.474 68.933 164.698 76.335 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
167.474 83.737 167.474 74.484 Line st
49.039 83.737 167.474 83.737 Line st
67.545 121.673 67.545 105.018 Line st
[] 0 sd
0.500 0.500 0.500 rgb
43.488 89.289 271.104 89.289 Line st
[ 2 2 2 2 ] 0 sd
0.000 0.000 0.000 rgb
49.039 83.737 49.039 74.484 Line st
[] 0 sd
0.500 0.500 0.500 rgb
279.432 93.915 279.432 75.410 Line st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
0.000 0.000 0.000 rgb
3 0.25606 (DTS) 19.431 24.982 Text
3 0.25606 (DTS) 166.549 24.982 Text
3 0.25606 (DTS) 63.844 142.492 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000 0.500_0.500_0.500
%%+ 1.000_1.000_1.000

%%EndDocument 
EPSE
XP /F1 /CM-Times-Bold 66.418 11 DNF RP
177 1240 XY F1(26.3)S 402 X(Preventing)S 734 X(Loops)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 1361 XY F0(Do)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
478 1361 XY F8(not)S 545 X F0(allow)S 651 X(loops,)S 765 X(such)S 
855 X(as)S 903 X(NTP)S
XP /F45 /cmsy10 300 41.5 41.5 128 [-1 -40 45 32] PXLNF RP
XP /F45 33 42 2 3 39 17 14 40 0
<0000000400 0000000200 0000000200 0000000100 0000000080 0000000040
 FFFFFFFFF8 FFFFFFFFF8 0000000040 0000000080 0000000100 0000000200
 0000000200 0000000400>
PXLC RP
996 1361 XY F45(!)S 1051 X F0(DTS)S 1143 X F45(!)S 1199 X F0(NTP,)S
1301 X(to)S 1347 X(form.)S 1460 Y 413 X(Run)S 493 X(the)S 554 X
(null)S 629 X(time-provider)S 868 X(\()S
XP /F11 /CM-Times-Bold 41.511 11 DF RP
882 1460 XY F11(dts\210null\210provider.c)S F0(\))S 1253 X(only)S 
1338 X(if)S 1374 X(you)S 1446 X(have)S 1535 X(a)S 1564 X(local)S 
1655 X(time)S 1740 X(source.)S 50 y 413 X(If)S 454 X(you)S 528 X
(do)S 583 X(not)S 648 X(have)S 739 X(a)S 770 X(local)S 863 X(time)S
950 X(source,)S 1081 X(you)S 1156 X(can)S 1226 X(run)S 1294 X(the)S
1357 X(null)S 1434 X(time-provider,)S 1686 X(but)S 1751 X(do)S 1805 X 
F8(not)S 50 y 413 X F0(disseminate)S 623 X(NTP)S 715 X(time)S 803 X
(anywhere)S 978 X(in)S 1024 X(the)S 1089 X(local)S 1184 X(set.)S 
1659 Y 413 X(Figure)S 532 X(26-5)S 618 X(shows)S 732 X(a)S 760 X
(con)S
(\014guration)S 991 X(that)S 1064 X(is)S 1101 X F8(not)S 1164 X F0
(recommended.)S 1442 X(This)S 1525 X(con\014guration)S 1757 X
(works)S 50 y 413 X(only)S 501 X(as)S 549 X(long)S 637 X(as)S 685 X
(the)S 750 X(remote)S 879 X(NTP)S 971 X(Stratum)S 1117 X(2)S 1151 X
(node)S 1246 X(does)S 1336 X(not)S 1403 X(fail.)S 2503 Y 177 X F5
(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(26{7)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 430 10
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Distributed)S 550 X(Time)S 656 X(Service)S
236 232 XY 1669 5 R 419 Y 236 X(Figure)S 368 X(26{5.)S 520 X(Con)S
(\014guration)S 780 X(Before)S 917 X(Stratum)S 1076 X(2)S 1113 X
(Node)S 1226 X(Fails)S 682 1275 XY 0.000000 0.000000 1000 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/4_ntp_dts_50.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 247.00 192.00
-18.00 -18.00 translate
% original bounding box was  18 18 265 210
%%Title: ZK-4992A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Thu May 14 10:00:31 1992
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
18.000 209.716 tr
1 -1 sc
0.700 0.700 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 353.453 273.880 Crop
2.776 slw
0 slc
%%RGBCustomColor: 0.500 0.500 0.500  0.500_0.500_0.500
0.500 0.500 0.500 rgb
244.211 58.118 79.218 -282.182 -353.503 -1 Arc st
0.925 slw
0.000 0.000 0.000 rgb
262.777 99.467 246.122 121.673 Line st
264.627 90.214 262.777 99.467 Line st
266.478 108.719 264.627 90.214 Line st
269.254 78.185 266.478 108.719 Line st
270.179 96.691 269.254 78.185 Line st
272.955 87.438 270.179 96.691 Line st
295.161 58.755 272.955 87.438 Line st
3.609 slw
2 slc
0.500 0.500 0.500 rgb
213.737 167.428 213.737 188.709 Line st
137.865 167.428 137.865 182.232 Line st
203.559 182.232 137.865 182.232 Line st
203.559 173.905 203.559 182.232 Line st
1.851 slw
0 slc
0.000 0.000 0.000 rgb
31.459 218.364 31.459 193.382 Line st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 8) 107.331 108.257 Text
245.197 194.307 10.178 194.307 Line st
0.925 slw
6.477 191.994 2.776 191.994 2.776 196.620 6.477 196.620 Box gs
0.000 0.000 0.000 rgb
fi gr st
11.103 191.994 7.402 191.994 7.402 196.620 11.103 196.620 Box gs
%%RGBCustomColor: 1.000 1.000 1.000  1.000_1.000_1.000
1.000 1.000 1.000 rgb
fi gr st
247.972 191.994 251.674 191.994 251.674 196.620 247.972 196.620 Box gs
0.000 0.000 0.000 rgb
fi gr st
243.346 191.994 247.047 191.994 247.047 196.620 243.346 196.620 Box gs
1.000 1.000 1.000 rgb
fi gr st
38.861 191.994 22.206 191.994 22.206 196.620 38.861 196.620 Box gs
1.000 1.000 1.000 rgb
fi gr st
9 0.43530 (stratum 3) 199.858 108.257 Text
0.925 slw
186.905 111.495 244.271 111.495 244.271 129.075 186.905 129.075 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 187.830 111.958 mo 
245.197 111.958 li 
252.599 121.210 li 
252.599 166.549 li 
197.083 166.549 li 
186.905 157.296 li 
186.905 111.958 li gs
0.500 0.500 0.500 rgb
fi gr
245.197 111.495 187.830 111.495 Line st
252.599 120.748 245.197 111.495 Line st
252.599 166.086 252.599 120.748 Line st
197.083 166.086 252.599 166.086 Line st
186.905 156.833 197.083 166.086 Line st
186.905 111.495 186.905 156.833 Line st
186.905 111.495 244.271 111.495 244.271 156.833 186.905 156.833 Box gs
1.000 1.000 1.000 rgb
fi gr st
186.905 111.495 244.271 111.495 244.271 135.552 186.905 135.552 Box gs
1.000 1.000 1.000 rgb
fi gr st
252.599 165.161 244.271 156.833 Line st
0.925 slw
211.887 191.994 228.542 191.994 228.542 196.620 211.887 196.620 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 slw
221.140 191.531 221.140 165.623 Line st
129.538 191.531 129.538 165.623 Line st
0.925 slw
121.210 191.994 137.865 191.994 137.865 196.620 121.210 196.620 Box gs
1.000 1.000 1.000 rgb
fi gr st
0.925 slw
94.378 111.495 151.744 111.495 151.744 129.075 94.378 129.075 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 95.303 111.958 mo 
152.670 111.958 li 
160.072 121.210 li 
160.072 166.549 li 
104.556 166.549 li 
94.378 157.296 li 
94.378 111.958 li gs
0.500 0.500 0.500 rgb
fi gr
152.670 111.495 95.303 111.495 Line st
160.072 120.748 152.670 111.495 Line st
160.072 166.086 160.072 120.748 Line st
104.556 166.086 160.072 166.086 Line st
94.378 156.833 104.556 166.086 Line st
94.378 111.495 94.378 156.833 Line st
94.378 111.495 151.744 111.495 151.744 156.833 94.378 156.833 Box gs
1.000 1.000 1.000 rgb
fi gr st
94.378 111.495 151.744 111.495 151.744 135.552 94.378 135.552 Box gs
1.000 1.000 1.000 rgb
fi gr st
160.072 165.161 151.744 156.833 Line st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
gs
1.000 1.000 1.000 rgb
105.943 139.253 140.178 150.356 TextBox fi gr
7 0.47371 (ntpd -s) 105.943 148.506 Text
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 2) 298.862 9.253 Text
285.909 12.491 343.275 12.491 343.275 30.071 285.909 30.071 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 286.834 12.954 mo 
344.201 12.954 li 
351.603 22.206 li 
351.603 67.545 li 
296.087 67.545 li 
285.909 58.292 li 
285.909 12.954 li gs
0.500 0.500 0.500 rgb
fi gr
344.201 12.491 286.834 12.491 Line st
351.603 21.744 344.201 12.491 Line st
351.603 67.082 351.603 21.744 Line st
296.087 67.082 351.603 67.082 Line st
285.909 57.829 296.087 67.082 Line st
285.909 12.491 285.909 57.829 Line st
285.909 12.491 343.275 12.491 343.275 57.829 285.909 57.829 Box gs
1.000 1.000 1.000 rgb
fi gr st
285.909 12.491 343.275 12.491 343.275 36.548 285.909 36.548 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 254.449 136.015 mo 
260.926 137.865 li 
260.926 134.164 li 
254.449 136.015 li gs
0.500 0.500 0.500 rgb
fi gr
2 slc
0.500 0.500 0.500 rgb
260.926 137.403 254.449 135.552 Line st
260.926 133.702 260.926 137.403 Line st
254.449 135.552 260.926 133.702 Line st
np 122.136 168.399 mo 
120.285 174.876 li 
124.911 174.876 li 
122.136 168.399 li gs
0.000 0.000 0.000 rgb
fi gr
0.000 0.000 0.000 rgb
120.285 174.413 122.136 167.937 Line st
124.911 174.413 120.285 174.413 Line st
122.136 167.937 124.911 174.413 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
16.655 180.890 16.655 210.499 Line st
122.136 180.890 16.655 180.890 Line st
122.136 174.413 122.136 180.890 Line st
np 16.655 217.439 mo 
14.804 210.036 li 
19.431 210.036 li 
16.655 216.513 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
[] 0 sd
14.804 209.574 16.655 216.976 Line st
19.431 209.574 14.804 209.574 Line st
16.655 216.051 19.431 209.574 Line st
3.609 slw
0.500 0.500 0.500 rgb
45.338 188.709 45.338 210.916 Line st
213.737 188.709 45.338 188.709 Line st
np 45.338 217.439 mo 
42.562 210.036 li 
47.189 210.036 li 
45.338 216.513 li gs
0.500 0.500 0.500 rgb
fi gr
0.925 slw
42.562 209.574 45.338 216.976 Line st
47.189 209.574 42.562 209.574 Line st
45.338 216.051 47.189 209.574 Line st
np 203.559 168.399 mo 
201.709 174.876 li 
206.335 174.876 li 
203.559 168.399 li gs
0.500 0.500 0.500 rgb
fi gr
201.709 174.413 203.559 167.937 Line st
206.335 174.413 201.709 174.413 Line st
203.559 167.937 206.335 174.413 Line st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
0.000 0.000 0.000 rgb
6 0.40969 (remote) 299.788 22.206 Text
10 0.66575 (NTP server) 290.535 33.310 Text
1.851 217.901 59.217 217.901 59.217 235.481 1.851 235.481 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 2.776 218.364 mo 
60.143 218.364 li 
67.545 227.617 li 
67.545 272.955 li 
12.029 272.955 li 
1.851 263.702 li 
1.851 218.364 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
60.143 217.901 2.776 217.901 Line st
67.545 227.154 60.143 217.901 Line st
67.545 272.492 67.545 227.154 Line st
12.029 272.492 67.545 272.492 Line st
1.851 263.239 12.029 272.492 Line st
1.851 217.901 1.851 263.239 Line st
1.851 217.901 59.217 217.901 59.217 263.239 1.851 263.239 Box gs
1.000 1.000 1.000 rgb
fi gr st
66.619 271.567 58.292 263.239 Line st
1.851 slw
67.545 240.570 80.499 240.570 Line st
0.925 slw
75.872 239.645 np mo
75.872 236.869 151.744 236.869 3.271 Bxr
154.520 236.869 154.520 247.972 3.271 Bxr
154.520 250.748 78.648 250.748 3.271 Bxr
75.872 250.748 75.872 247.972 3.271 Bxr cl gs
0.500 0.500 0.500 rgb
fi gr st
74.022 236.869 np mo
74.022 234.093 149.894 234.093 3.271 Bxr
152.670 234.093 152.670 245.197 3.271 Bxr
152.670 247.972 76.797 247.972 3.271 Bxr
74.022 247.972 74.022 245.197 3.271 Bxr cl gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
18 0.93462 (dts_ntp_provider.c) 79.573 242.883 Text
351.603 66.157 343.275 57.829 Line st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
3 0.25606 (DTS) 21.281 239.645 Text
6 0.37129 (server) 17.118 247.972 Text
3 0.25606 (DTS) 113.808 122.598 Text
6 0.37129 (server) 109.645 130.926 Text
3 0.25606 (NTP) 206.335 122.598 Text
6 0.37129 (server) 202.172 130.926 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica
%%DocumentCustomColors: 0.000_0.000_0.000 0.500_0.500_0.500
%%+ 1.000_1.000_1.000

%%EndDocument 
EPSE
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 1375 XY F0(If)S 512 X(the)S 574 X(remote)S 701 X(NTP)S 791 X
(Stratum)S 934 X(2)S 966 X(node)S 1058 X(fails,)S 1152 X(the)S 1214 X
(Stratum)S 1357 X(3)S 1389 X(node)S 1482 X(starts)S 1581 X
(accepting)S 1751 X(time)S 1837 X(from)S 50 y 472 X(the)S 539 X
(Stratum)S 687 X(8)S 724 X(node.)S 854 X(Once)S 958 X(this)S 1034 X
(occurs,)S 1169 X(the)S 1235 X(Stratum)S 1383 X(3)S 1420 X(node)S 
1516 X(drops)S 1625 X(to)S 1673 X(Stratum)S 1821 X(9)S 1857 X(and)S
50 y 472 X(the)S 537 X(Stratum)S 682 X(4)S 717 X(node)S 811 X
(drops)S 918 X(to)S 964 X(Stratum)S 1109 X(10,)S 1175 X(as)S 1223 X
(shown)S 1345 X(in)S 1391 X(Figure)S 1514 X(26-6.)S 1574 Y 236 X F5
(Figure)S 368 X(26{6.)S 520 X(Con\014guration)S 780 X(After)S 882 X
(Stratum)S 1041 X(2)S 1078 X(Node)S 1191 X(Fails)S 718 2322 XY 
0.000000 0.000000 1000 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/4_ntp_dts_60.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 230.00 166.00
-7.00 -7.00 translate
% original bounding box was  191 313 421 479
%% Revised per CR2559, 14 May 1992 by C. McGowan, H. Hoffmann
%%Title: ARTLIB:ZK-4993A.PS
%%Creator: VAX DOCUMENT Graphics Rendering Utility
%%CreationDate: Wed May  6 14:22:54 1992
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginProlog
/ApplDict 150 dict def
ApplDict begin
/an /arcn load def
/ar /arc load def
/cl /closepath load def
/cp /eoclip load def
/ex /exch load def
/fi /eofill load def
/Bxr {arcto pop pop pop pop} bind def
/gs /gsave load def
/gr /grestore load def
/li /lineto load def
/mo /moveto load def
/np /newpath load def
/rl /rlineto load def
/ro /rotate load def
/rgb /setrgbcolor load def
/sh /show load def
/sc /scale load def
/sd /setdash load def
/slc /setlinecap load def
/slj /setlinejoin load def
/slw /setlinewidth load def
/st /stroke load def
/tr /translate load def
% THIS SECTION WILL DEFINE THE ISOLATIN1 VECTOR...
mark					% CREATE ISOLatin1 ENCODING
/ISOLatin1
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1 where not {256 array astore def} if 
cleartomark
%
% THIS ROUTINE WILL RE-ENCODE THE FILE...
/reencodedict 10 dict def			%Local storage for ReENCODE
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	   basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
 	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
} bind def
/CBdict 5 dict def
/CMdict 3 dict def
/TBdict 5 dict def
/ELPdict 2 dict def
/Applpage /showpage load def
/Arc
 { np 1 eq  {ar} {an} ifelse } bind def
/Box
 { np mo li li li cl } bind def
/Circle
 { np 0 360 ar } bind def
/Ellipse
 { ELPdict begin
   /elpscratch matrix def
   np elpscratch currentmatrix pop
   tr
   neg ro
   sc
   0 0 1 0 360 ar
   elpscratch setmatrix
   end
 } bind def
/LF			% (backup_font) (font) LF
 { dup FontDirectory exch known
    { findfont exch pop }	% good font
    { pop findfont }		% bad font
    ifelse
 } bind def
/SF
{ makefont setfont } bind def
/Line
 { np mo li } bind def
/Pie
 { np 1 eq  {ar} {an} ifelse li cl } bind def
/TextBox
 { TBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   end
 } bind def
/Text
 { np mo dup 4 1 roll
   stringwidth pop ex 72 mul ex sub ex div
   dup dup sub 3 -1 roll ashow } bind def
/OText
 { gs np mo slw false charpath st gr } bind def
/Label
 { np mo sh } bind def
/Caption
 { np 0 0 mo rmoveto dup stringwidth pop
   neg 0 rmoveto show
 } bind def
/Crop
 { CBdict begin
   /y2 ex def
   /x2 ex def
   /y1 ex def
   /x1 ex def
   np x1 y1 mo
   x2 y1 li
   x2 y2 li
   x1 y2 li cl
   1 eq {gs fi gr} if
   clip np
   end
 } bind def
/Cropmark
 { CMdict begin
   /ys ex def
   /xs ex def
   .2 slw
   np xs ys mo
   1 eq {ys add xs ex li st} {xs add ys li st} ifelse
   end
 } bind def
/ImgCropBox
 { np mo rl rl rl rl clip np } bind def
end
%%EndProlog
%%BeginSetup
ApplDict begin
%%EndSetup
2.5 -72 mul 4.25 -72 mul translate
save
/Courier /Courier@ISO ISOLatin1 ReENCODE      %Setup up default printer font
%%RGBCustomColor: 0.000 0.000 0.000  0.000_0.000_0.000
0.000 0.000 0.000 rgb
191.290 478.858 tr
1 -1 sc
0.900 0.900 sc
0.925 slw
0 slc
0 slj
0 0.000 0.000 254.912 184.129 Crop
0.925 slw
0 slc
225.766 33.001 14.142 -198.435 -295.168 -1 Arc st
221.629 38.480 9.334 -90.167 -173.807 -1 Arc st
215.648 32.161 6.674 -249.174 -26.852 -1 Arc st
216.019 32.560 6.451 -106.374 -244.829 -1 Arc st
211.332 28.683 3.685 -241.504 -38.884 -1 Arc st
210.499 27.295 4.718 -101.310 -258.690 -1 Arc st
207.261 24.057 2.698 -239.036 -30.964 -1 Arc st
208.240 20.683 6.161 -133.210 -247.400 -1 Arc st
1.851 slw
219.752 102.705 219.752 66.619 Line st
3.609 slw
2 slc
%%RGBCustomColor: 0.500 0.500 0.500  0.500_0.500_0.500
0.500 0.500 0.500 rgb
213.275 65.648 213.275 98.958 Line st
137.403 67.499 137.403 92.481 Line st
204.022 92.481 137.403 92.481 Line st
204.022 75.826 204.022 92.481 Line st
1.851 slw
0 slc
0.000 0.000 0.000 rgb
30.997 128.613 30.997 103.630 Line st
np 122.136 68.470 mo 
120.285 74.947 li 
124.911 74.947 li 
122.136 68.470 li gs
0.000 0.000 0.000 rgb
fi gr
0.925 slw
2 slc
119.823 74.484 121.673 68.007 Line st
124.449 74.484 119.823 74.484 Line st
121.673 68.007 124.449 74.484 Line st
np 17.580 127.687 mo 
14.804 120.285 li 
19.431 120.285 li 
17.580 126.762 li gs
0.000 0.000 0.000 rgb
fi gr
14.342 119.823 17.118 127.225 Line st
18.968 119.823 14.342 119.823 Line st
17.118 126.299 18.968 119.823 Line st
/Helvetica /Helvetica@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
9 0.43530 (stratum 8) 107.794 9.253 Text
1.851 slw
0 slc
244.734 104.556 8.790 104.556 Line st
0.925 slw
6.940 102.242 2.313 102.242 2.313 106.869 6.940 106.869 Box gs
0.000 0.000 0.000 rgb
fi gr st
11.566 102.242 6.940 102.242 6.940 106.869 11.566 106.869 Box gs
%%RGBCustomColor: 1.000 1.000 1.000  1.000_1.000_1.000
1.000 1.000 1.000 rgb
fi gr st
247.510 102.242 252.136 102.242 252.136 106.869 247.510 106.869 Box gs
0.000 0.000 0.000 rgb
fi gr st
242.883 102.242 247.510 102.242 247.510 106.869 242.883 106.869 Box gs
1.000 1.000 1.000 rgb
fi gr st
39.324 102.242 22.669 102.242 22.669 106.869 39.324 106.869 Box gs
1.000 1.000 1.000 rgb
fi gr st
0.925 slw
2.313 128.150 59.680 128.150 59.680 145.730 2.313 145.730 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 3.701 128.613 mo 
61.068 128.613 li 
68.470 137.865 li 
68.470 183.204 li 
12.954 183.204 li 
2.776 173.951 li 
2.776 128.613 li gs
0.500 0.500 0.500 rgb
fi gr
60.605 128.150 3.238 128.150 Line st
68.007 137.403 60.605 128.150 Line st
68.007 182.741 68.007 137.403 Line st
12.491 182.741 68.007 182.741 Line st
2.313 173.488 12.491 182.741 Line st
2.313 128.150 2.313 173.488 Line st
2.313 128.150 59.680 128.150 59.680 173.488 2.313 173.488 Box gs
1.000 1.000 1.000 rgb
fi gr st
68.007 181.816 59.680 173.488 Line st
9 0.43530 (stratum 9) 200.321 9.253 Text
187.367 12.491 244.734 12.491 244.734 30.071 187.367 30.071 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 188.755 12.954 mo 
246.122 12.954 li 
253.524 22.206 li 
253.524 67.545 li 
198.008 67.545 li 
187.830 58.292 li 
187.830 12.954 li gs
0.500 0.500 0.500 rgb
fi gr
245.659 12.491 188.293 12.491 Line st
253.061 21.744 245.659 12.491 Line st
253.061 67.082 253.061 21.744 Line st
197.545 67.082 253.061 67.082 Line st
187.367 57.829 197.545 67.082 Line st
187.367 12.491 187.367 57.829 Line st
187.367 12.491 244.734 12.491 244.734 57.829 187.367 57.829 Box gs
1.000 1.000 1.000 rgb
fi gr st
187.367 12.491 244.734 12.491 244.734 36.548 187.367 36.548 Box gs
1.000 1.000 1.000 rgb
fi gr st
252.136 66.157 243.809 57.829 Line st
0.925 slw
211.424 102.242 228.079 102.242 228.079 106.869 211.424 106.869 Box gs
1.000 1.000 1.000 rgb
fi gr st
1.851 slw
129.075 101.780 129.075 66.619 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
2 slc
17.118 91.139 17.118 120.748 Line st
121.673 91.139 17.118 91.139 Line st
0.925 slw
[] 0 sd
120.748 102.242 137.403 102.242 137.403 106.869 120.748 106.869 Box gs
1.000 1.000 1.000 rgb
fi gr st
0.925 slw
94.840 12.491 152.207 12.491 152.207 30.071 94.840 30.071 Box gs
1.000 1.000 1.000 rgb
fi gr st
np 96.228 12.954 mo 
153.595 12.954 li 
160.997 22.206 li 
160.997 67.545 li 
105.481 67.545 li 
95.303 58.292 li 
95.303 12.954 li gs
0.500 0.500 0.500 rgb
fi gr
0 slc
153.132 12.491 95.765 12.491 Line st
160.534 21.744 153.132 12.491 Line st
160.534 67.082 160.534 21.744 Line st
105.018 67.082 160.534 67.082 Line st
94.840 57.829 105.018 67.082 Line st
94.840 12.491 94.840 57.829 Line st
94.840 12.491 152.207 12.491 152.207 57.829 94.840 57.829 Box gs
1.000 1.000 1.000 rgb
fi gr st
94.840 12.491 152.207 12.491 152.207 36.548 94.840 36.548 Box gs
1.000 1.000 1.000 rgb
fi gr st
159.609 66.157 151.282 57.829 Line st
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
gs
1.000 1.000 1.000 rgb
106.406 40.712 140.641 51.815 TextBox fi gr
7 0.47371 (ntpd -s) 106.406 49.965 Text
np 45.338 127.687 mo 
42.562 120.285 li 
47.189 120.285 li 
45.338 126.762 li gs
0.500 0.500 0.500 rgb
fi gr
2 slc
0.500 0.500 0.500 rgb
42.100 119.823 44.876 127.225 Line st
46.726 119.823 42.100 119.823 Line st
44.876 126.299 46.726 119.823 Line st
np 204.485 68.470 mo 
201.709 75.872 li 
206.335 75.872 li 
204.485 68.470 li gs
0.500 0.500 0.500 rgb
fi gr
201.246 75.410 204.022 68.007 Line st
205.873 75.410 201.246 75.410 Line st
204.022 68.007 205.873 75.410 Line st
3.609 slw
44.876 98.958 44.876 121.164 Line st
213.275 98.958 44.876 98.958 Line st
2.776 slw
[ 2 2 2 2 ] 0 sd
0.000 0.000 0.000 rgb
121.673 74.484 121.673 91.139 Line st
1.851 slw
[] 0 sd
0 slc
68.007 151.744 80.961 151.744 Line st
0.925 slw
76.797 150.819 np mo
76.797 148.043 155.445 148.043 3.271 Bxr
158.221 148.043 158.221 159.146 3.271 Bxr
158.221 161.922 79.573 161.922 3.271 Bxr
76.797 161.922 76.797 159.146 3.271 Bxr cl gs
0.500 0.500 0.500 rgb
fi gr st
74.022 148.043 np mo
74.022 145.267 152.670 145.267 3.271 Bxr
155.445 145.267 155.445 156.371 3.271 Bxr
155.445 159.146 76.797 159.146 3.271 Bxr
74.022 159.146 74.022 156.371 3.271 Bxr cl gs
1.000 1.000 1.000 rgb
fi gr st
/Courier@ISO /Helvetica@ISO LF [8 0 0 -8 0 0] SF
18 0.93462 (dts_ntp_provider.c) 80.499 154.058 Text
110.570 78.185 7.402 Circle gs
0.000 0.000 0.000 rgb
fi gr st
/Helvetica-Bold /Helvetica-Bold@ISO ISOLatin1 ReENCODE
/Courier@ISO /Helvetica-Bold@ISO LF [10 0 0 -10 0 0] SF
1.000 1.000 1.000 rgb
1 0.07682 (3) 107.794 81.424 Text
0.000 0.000 0.000 rgb
191.068 78.185 7.402 Circle gs
0.000 0.000 0.000 rgb
fi gr st
1.000 1.000 1.000 rgb
1 0.07682 (1) 188.293 81.424 Text
0.000 0.000 0.000 rgb
56.904 117.047 7.402 Circle gs
0.000 0.000 0.000 rgb
fi gr st
1.000 1.000 1.000 rgb
1 0.07682 (2) 54.128 120.285 Text
/Courier@ISO /Helvetica@ISO LF [10 0 0 -10 0 0] SF
0.000 0.000 0.000 rgb
3 0.25606 (DTS) 21.744 149.894 Text
6 0.37129 (server) 17.580 158.221 Text
3 0.25606 (DTS) 114.271 23.594 Text
6 0.37129 (server) 110.107 31.922 Text
3 0.25606 (NTP) 206.798 23.594 Text
6 0.37129 (server) 202.634 31.922 Text
Applpage
restore
end
%%Trailer
%%DocumentFonts: Helvetica Helvetica-Bold
%%DocumentCustomColors: 0.000_0.000_0.000 0.500_0.500_0.500
%%+ 1.000_1.000_1.000

%%EndDocument 
EPSE 2503 Y 236 X F5(26{8)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 431 11
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1082 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1082 215 XY F5(Interoperation)S 1352 X(with)S 1439 X(Network)S 1605 X
(Time)S 1712 X(Protocol)S 195 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 419 XY F0(The)S 492 X(scenario)S 644 X(in)S 690 X(Figure)S 812 X
(26-6)S 902 X(shows)S 1020 X(the)S 1084 X(creation)S 1232 X(of)S 
1280 X(a)S 1313 X(loop:)S 75 y 436 X(1.)S 488 X(From)S 591 X(the)S
655 X(node)S 748 X(that)S 823 X(is)S 864 X(labeled)S 997 X(Stratum)S
1141 X(8,)S 1185 X(proceed)S 1329 X(to)S 1374 X(the)S 1438 X(NTP)S
1529 X(node)S 1623 X(that)S 1698 X(is)S 1738 X(labeled)S 50 y 488 X
(Stratum)S 633 X(9.)S 75 y 436 X(2.)S 488 X(From)S 590 X(the)S 653 X
(NTP)S 743 X(node)S 836 X(that)S 911 X(is)S 950 X(labeled)S 1082 X
(Stratum)S 1226 X(9,)S 1269 X(continue)S 1424 X(to)S 1469 X(the)S 
1531 X(node)S 1624 X(that)S 1699 X(is)S 1738 X(labeled)S 50 y 488 X
(Stratum)S 633 X(10.)S 74 y 436 X(3.)S 488 X(DTS)S 583 X(then)S 
670 X(feeds)S 774 X(the)S 841 X(time)S 931 X(back)S 1025 X(to)S 
1074 X(the)S 1140 X(node)S 1237 X(that)S 1316 X(is)S 1359 X
(labeled)S 1495 X(Stratum)S 1643 X(8,)S 1690 X(creating)S 1840 X(a)S
50 y 488 X(loop.)S 893 Y 413 X(If)S 455 X(this)S 529 X(occurs,)S 
661 X(time)S 749 X(in)S 795 X(the)S 860 X(NTP)S 952 X(and)S 1026 X
(DTS)S 1118 X(subnetwork)S 1325 X(can)S 1397 X(drift)S 1482 X(from)S
1577 X(UTC.)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(26{9)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 432 12
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 300 0 XY
%%EndPageSetup
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 0 792 0 792

%%Page: 433 13
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1587 0 XY
%%EndPageSetup
XP /F7 /CM-Times-Bold 99.626 11 DNF RP
1587 942 XY F7(Part)S 1809 X(6)S 177 975 XY 1682 5 R 1079 Y 177 X
(DCE)S 421 X(Security)S 808 X(Service)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 531 446 573

%%Page: 434 14
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 300 0 XY
%%EndPageSetup
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 0 792 0 792

%%Page: 435 15
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1371 0 XY
%%EndPageSetup
XP /F7 /CM-Times-Bold 99.626 11 DNF RP
1371 942 XY F7(Chapter)S 1759 X(27)S 177 975 XY 1682 5 R 1075 Y 
177 X(Overview)S 620 X(of)S 736 X(DCE)S 980 X(Security)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 1479 XY F0(This)S 503 X(chapter)S 642 X(provides)S 801 X(a)S 
836 X(brief)S 931 X(introduction)S 1150 X(to)S 1198 X(the)S 1265 X
(DCE)S 1365 X(Security)S 1519 X(Service.)S 1694 X(The)S 1775 X(DCE)S
50 y 413 X(Security)S 566 X(Service)S 704 X(consists)S 849 X(of)S 
898 X(the)S 962 X(following)S 1137 X(services:)S 74 y 449 X(\267)S
484 X(Registry)S 639 X(service|Maintains)S 977 X(the)S 1042 X
(registry)S 1182 X(database,)S 1349 X(which)S 1465 X(is)S 1506 X(a)S
1538 X(replicated)S 1715 X(database)S 50 y 484 X(of)S 533 X
(principals,)S 721 X(groups,)S 858 X(organizations,)S 1106 X
(accounts,)S 1275 X(and)S 1349 X(administrative)S 1600 X(policies.)S
75 y 449 X(\267)S 484 X(Authentication)S 747 X(service|Handles)S 
1059 X(user)S 1144 X(authentication)S 1396 X(or)S 1447 X(the)S 1514 X
(process)S 1655 X(of)S 1706 X(verifying)S 50 y 484 X(that)S 565 X
(principals)S 748 X(are)S 818 X(correctly)S 984 X(identi\014ed.)S 
1199 X(The)S 1283 X(authentication)S 1537 X(service)S 1673 X(also)S
1759 X(issues)S 49 y 484 X(tickets)S 608 X(that)S 685 X(a)S 719 X
(principal)S 882 X(uses)S 968 X(to)S 1016 X(access)S 1137 X(remote)S
1267 X(services.)S 1448 X(The)S 1528 X(ticket)S 1636 X(contains)S 
1789 X(data)S 50 y 484 X(that)S 559 X(is)S 600 X(presented)S 771 X
(by)S 825 X(the)S 889 X(principal)S 1049 X(requesting)S 1235 X(the)S
1298 X(service)S 1428 X(to)S 1473 X(the)S 1537 X(principal)S 1697 X
(providing)S 50 y 484 X(the)S 549 X(service.)S 75 y 449 X(\267)S 
484 X(Privilege)S 656 X(service|Supplies)S 981 X(the)S 1053 X
(user's)S 1175 X(privilege)S 1344 X(attributes,)S 1531 X(which)S 
1655 X(are)S 1728 X(used)S 1826 X(to)S 50 y 484 X(ensure)S 606 X
(that)S 683 X(a)S 715 X(principal)S 876 X(has)S 945 X(the)S 1010 X
(rights)S 1118 X(to)S 1164 X(perform)S 1312 X(requested)S 1485 X
(operations.)S 2151 Y 413 X(In)S 462 X(addition,)S 622 X(the)S 687 X
(DCE)S 784 X(Security)S 936 X(Service)S 1074 X(provides)S 1231 X
(the)S 1295 X(following:)S 75 y 449 X(\267)S 484 X(Access)S 622 X
(control)S 759 X(list)S 830 X(\(ACL\))S 960 X(facility|Establishes)S
1326 X(and)S 1406 X(grants)S 1527 X(access)S 1653 X(rights)S 1767 X
(to)S 1819 X(an)S 50 y 484 X(object)S 600 X(based)S 708 X(on)S 763 X
(the)S 828 X(object's)S 973 X(access)S 1093 X(permissions.)S
XP /F5 /CM-Helvetica 41.511 11 DNF RP
177 2503 XY F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(27{1)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 573

%%Page: 436 16
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
508 419 XY F0(\267)S 543 X(Extended)S 715 X(registry)S 857 X
(attribute)S 1011 X(\(ERA\))S 1136 X(facility|Provides)S 1456 X
(tools)S 1552 X(to)S 1599 X(extend)S 1725 X(the)S 1791 X(registry)S
50 y 543 X(database)S 699 X(schema)S 836 X(to)S 881 X(de\014ne)S 
995 X(additional)S 1173 X(attributes)S 1340 X(and)S 1413 X(tools)S
1506 X(to)S 1551 X(attach)S 1663 X(those)S 1763 X(attributes)S 50 y 
543 X(to)S 589 X(registry)S 730 X(objects.)S 619 Y 472 X(The)S 551 X
(DCE)S 648 X(host)S 731 X(daemon)S 876 X(\()S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
890 619 XY F11(dced)S F0(\))S 1000 X(acts)S 1079 X(as)S 1127 X(the)S
1192 X(security)S 1337 X(client.)S 718 Y 472 X(The)S 548 X(DCE)S 
642 X(Registry,)S 804 X(Authentication,)S 1071 X(and)S 1142 X
(Privilege)S 1303 X(Services)S 1454 X(are)S 1516 X(implemented)S 
1744 X(as)S 1789 X(a)S 1818 X(single)S 50 y 472 X(daemon:)S 648 X
(the)S 713 X(security)S 858 X(server)S 973 X(\()S F11(secd)S F0
(\).)S
XP /F1 /CM-Times-Bold 66.418 11 DF RP
236 953 XY F1(27.1)S 461 X(DCE)S 623 X(Authentication)S 1069 X
(Service)S 1298 X(Servers)S 1534 X(and)S 1663 X(Clients)S 1073 Y 
472 X F0(The)S 558 X(authentication)S 814 X(service)S 953 X
(consists)S 1106 X(of)S 1162 X(the)S 1233 X(registry)S 1381 X
(database,)S 1556 X(security)S 1708 X(servers,)S 1857 X(and)S 50 y 
472 X(security)S 616 X(clients.)S 767 X(A)S 809 X(security)S 953 X
(client)S 1057 X(communicates)S 1309 X(with)S 1395 X(a)S 1425 X
(security)S 1569 X(server)S 1682 X(\()S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
1696 1123 XY F8(dcelocal)S F11(/bin/)S 50 y 472 X(secd)S F0(\))S 
576 X(to)S 621 X(request)S 755 X(information)S 964 X(and)S 1037 X
(operations.)S 1253 X(The)S 1331 X(security)S 1476 X(servers)S 1607 X
(access)S 1726 X(the)S 1791 X(registry)S 50 y 472 X(database)S 629 X
(to)S 676 X(perform)S 823 X(queries)S 957 X(and)S 1031 X(updates)S
1172 X(and)S 1246 X(to)S 1292 X(validate)S 1437 X(user)S 1521 X
(logins.)S 1666 X(To)S 1726 X(gain)S 1811 X(access)S 50 y 472 X(to)S
521 X(the)S 588 X(registry)S 732 X(database,)S 901 X(the)S 969 X
(authentication)S 1220 X(service)S 1354 X(must)S 1451 X(talk)S 1530 X
(to)S 1579 X(the)S 1646 X(registry)S 1789 X(service.)S 49 y 472 X
(Figure)S 594 X(27-1)S 683 X(is)S 724 X(a)S 755 X(simpli\014ed)S 
934 X(representation)S 1182 X(of)S 1230 X(the)S 1294 X
(relationship)S 1503 X(between)S 1654 X(security)S 1799 X(clients,)S
50 y 472 X(servers,)S 614 X(and)S 688 X(the)S 753 X(registry)S 893 X
(database.)S 2503 Y 236 X F5(27{2)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 437 17
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1377 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1377 215 XY F5(Overview)S 1564 X(of)S 1612 X(DCE)S 1714 X(Security)S
195 232 XY 1669 5 R 419 Y 177 X(Figure)S 309 X(27{1.)S 461 X
(Machines,)S 664 X(Servers,)S 832 X(and)S 915 X(the)S 987 X
(Database)S 519 1491 XY 0.000000 0.000000 920 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/1_over_10.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0.0 0.0 323.0 266.00
-33.00 -1.00 translate
%% original bounding box was  33.0 1.0 356.0 267.0
%%DocumentFonts: (atend)
%%Endcomments
1.0 dup scale
/tempdict 300 dict def
tempdict begin
%  Copyright 1987 Interleaf, Inc.
%  Ten Canal Park, Cambridge, MA  02141
%%%%%%%%%%%%%%%%%%%%%%%%%
%	PS macros
%%%%%%%%%%%%%%%%%%%%%%%%%
/bdf {def} def
/xdf {exch def} bdf
/ldd {load def} bdf
/msg { print (\n) print flush} bdf

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%	global constants and variables
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Version
%
/PS_MAJOR	4 def	%Nov 3, 1987
/PS_MINOR	0 def	%Nov 3, 1987
/PS_SUB		5 def	%Nov 3, 1987

%
%	Drawing modes
%
/PL_SET 	0 def		%ink black
/PL_CLEAR	1 def		%ink white
/PL_XOR		2 def		%ink by xor'ing source onto page - can PS do it?
/PL_REPLACE	3 def		%ink by replacing, e.g. overlayed bitmaps

%
%	 Default global PS state 
%
/drawmode	PL_SET def	%default is ink black
/docutmark	false def	%should cropping marks be printed
/invertmatrix [1 0 0 -1 0 0] def

%
%	Font limits
%
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def	%per font
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def

%%%%%%%%%%%%%%%%%%%%%%%%%
%	Memory Defs
%%%%%%%%%%%%%%%%%%%%%%%%%
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def	% New global Encoding vector.
/ILSymBEnc 256 array def	% SymbolB Encoding vector.
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Job Utilities
%%%%%%%%%%%%%%%%%%%%%%%%%
/inch {72 mul} bdf

/headerpage {
  %assumes standard PS state
  /y 11 def
  /nl {/y y .33 sub def 1 inch y inch moveto } bdf
  /#copies 1 def
  /Helvetica-Bold /ILhelvb ILEncoding ReEncode
  /ILhelvb findfont 18 scalefont setfont
  nl nl nl
  /nhlines hline length def
  nhlines 25 gt 
    {
      /lim nhlines 26 sub def 
      hline lim ((        ...)) put
    }
    { 
      /lim 0 def
    }
  ifelse
  nhlines 1 sub -1  lim { 
   hline exch get show nl
  } for
  /Helvetica findfont 8 scalefont setfont
  1 inch 1 inch moveto 
  (pl2ps )show PS_SUB PS_MINOR PS_MAJOR vershow
  (   Copyright 1988 Interleaf, Inc. ) show 
  emsg1 0 get 0 ne { 1 inch .75 inch moveto emsg1 show } if
  emsg2 0 get 0 ne { 1 inch .5 inch moveto emsg2 show } if
} bdf

/logme {
  (\tInterleaf::pl2ps ) print
  PS_SUB PS_MINOR PS_MAJOR verprint
  /nllines lline length def
  nllines 5 gt 
    {
      /lim nllines 5 sub def 
    }
    { 
      /lim 0 def
    }
  ifelse
  nllines 1 sub -1  lim { 
    (\tInterleaf::) print lline exch get print (\n) print
  } for
  flush 
} bdf

/verprint {
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (\n) print
} bdf
/vershow {
  10 mesg cvrs show (.) show 
  10 mesg cvrs show (.) show
  10 mesg cvrs show 
} bdf
    
/versioncheck {
  /PL_MAJOR xdf
  /PL_MINOR xdf
  /PL_SUB xdf
  /doheader userdict /lline known def
  PL_MAJOR PS_MAJOR ne 
  PL_MINOR PS_MINOR ne or
  PL_SUB PS_SUB ne or {
    doheader {logme } if
    (\tInterleaf:: FATAL ERROR: pspro.ps and pl2ps versions do not agree.) msg
    (\tInterleaf:: pspro.ps version: \t) print
    PS_SUB PS_MINOR PS_MAJOR verprint
    (\tInterleaf:: pl2ps version: \t) print
    PL_SUB PL_MINOR PL_MAJOR verprint
    flush 
    doheader {headerpage } if
    ( FATAL ERROR. pspro version ) show
    PS_SUB PS_MINOR PS_MAJOR vershow
    ( does not agree with pl2ps version ) show 
    PL_SUB PL_MINOR PL_MAJOR vershow
    showpage
    quit 
  } if
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Graphics
%%%%%%%%%%%%%%%%%%%%%%%%%
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf %record pl current point, in rsu
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd % add segment 
/av /moveto ldd % add vertex 
%
% startangle endangle xradius yradius rotation xcenter ycenter el
%
/el {
  matrix currentmatrix 8 1 roll % save the CTM
  translate rotate scale
  0 0 1 5 -2 roll arc
  setmatrix 			% restore CTM
} bdf

%
% startangle endangle clockwise xrad yrad rotation xcenter ycenter addconic
%
/addconic {
  matrix currentmatrix 9 1 roll	% save the CTM
  translate rotate scale
  0 0 1 6 -3 roll 1 eq {arc} {arcn} ifelse
  setmatrix			% restore CTM
} bdf

%
%	Draw current path
%
/dp40 {
  1 setlinejoin 		% round line ends  
  1 setlinecap 			% round line ends
  setgray
  stroke  
} bdf 

/dp {
  gsave
  1 setlinejoin                 % round line ends
  1 setlinecap                  % round line ends
  drawmode PL_CLEAR eq {1} {0} ifelse setgray %only support two modes
  stroke
  grestore
} bdf

%
%	Pen pattern routines
%
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def	% WARNING these values are derived 
					% by scaling widthadj[], defined
					% in /usr/xops/lib/crt/scr/pens.c,
					% by the same factor (.4) that the
					% pen patterns were scaled when
					% sent to printerleaf.
/MINSCALE .1 def			% Do not scale pen pattern below 10%
					% of original size.
% 
% Calulates length of current path. Ala cookbook.
%
/pathlength { 0 begin
    flattenpath				% changes all curveto's to lineto's
    /dist 0 def

    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}

    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put

/setpenpat { 0 begin		% define penpattern dictionary
    /style xdf			% alignment style 
    /width xdf
    /pattern xdf

    % 
    % Adjust pattern for various pen widths.
    %
    /scaleup DPIx 300 div def		% Seybold hack!!!!
    /indx width 1 add scaleup div 4 div cvi def	% Change width into an index
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def% Get ajustment for specified pen width
	/adj adj scaleup mul def	% from predefined array PENPATWIDTHADJ
					% and scale up to the resolution.
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def	% Add ajustment for pen width
	    iszero 0 ne			% to just "off" phases of pattern.
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if

    %
    % Align pattern to pathlength.
    %
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def		% Computes path length.
    pattern				% Compute total len of repeating pattern
	{patternlen add /patternlen xdf
	} forall

    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {		% from /usr/xops/lib/crt/scr/pens.c
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {		% from /usr/xops/lib/crt/scr/pens.c
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if

    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Text handling
%%%%%%%%%%%%%%%%%%%%%%%%%
/s { 
  /msp xdf
  /stEnd xdf
  /nsp xdf
  /fstr xdf

  hpos vpos moveto
  msp -1 ne
    {stEnd hpos sub fstr stringwidth pop sub nsp div 0 msp fstr widthshow}
    {fstr show}
  ifelse
  /hpos stEnd def	%adjust idea of current point
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Images
%%%%%%%%%%%%%%%%%%%%%%%%%
/ilr {
  BinaryMode
    {
     readstring
     }
    {
     readhexstring
    } ifelse
} bdf

/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf

  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval ilr pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put

/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf

  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval ilr pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put

/PL_image { 0 begin
  gsave
  /ho xdf	% upper left corner of image.
  /vo xdf	%
  /hh xdf	% Transformed upper right corner relative
  /vh xdf	% to upper left corner.
  /hv xdf	% Transformed lower left corner relative
  /vv xdf	% to upper left corner.
  /nbits xdf	% depth
  /vpix xdf	% height
  /hpix xdf	% width
  /scfrq xdf	% screen frequency
  /scang xdf	% screen angle
  /mapsz xdf	% PL_MAP data size
  /map xdf	% PL_MAP data

  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get} settransfer
  } if 
  scfrq 0 ne scang 0 ne and {
    scfrq scang currentscreen 3 1 roll pop pop setscreen
  } if
  %
  % allocate the largest amount of memory avail for reading image data...
  %
  /availmem vmstatus exch sub exch pop def
  /datasize hpix nbits mul 7 add 8 idiv vpix mul def 
  availmem 65535 gt {
    /availmem 65535 def 
  } if
  datasize availmem lt
  {
    /picstr datasize string def
  } {
    /picstr datasize vpix idiv string def 
  } ifelse
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 16 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FONT GOODIES
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	ReEncodeSubset -map character set a'la Interleaf
%	
%	snarfed from PS manual, example 22
%	At the moment, it seems like all overlays will start at char 0,
%		but we might as well be general
/reencodesubdict 12 dict def
/ReEncode {
%
%	Copy basefontdict into newfont except for the FID entry.
%	First create a new font dictionary the size of basefontdict
%	plus 2 for a FID entry which definefont will provide.
%
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict { 		% Copy basefontdict to newfont 
    exch dup /FID ne {		% except for the FID entry.
      exch newfont 3 1 roll put	% Copy entry into newfont.
    } {
      pop pop			% Remove entry from stack if equal FID.
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf

%
%	Now make a global Encoding vector
%
/insertcharnum { 0 begin	% Put /char# into entry i
  /encoding xdf			% of new encoding vector as
  /i xdf			% character names.

  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put

ILEncoding 0
[
/Aacute /Acircumflex /Adieresis /Agrave /Aring /Atilde /Ccedilla /Eacute
/Ecircumflex /Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Ntilde
/Oacute /Ocircumflex /Odieresis /Ograve /Otilde /Scaron /Uacute /Ucircumflex
/Udieresis /Ugrave /Ydieresis /Zcaron /char28 /char29 /char30 /char31
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /quotedblleft
/aacute /acircumflex /adieresis /agrave /aring /atilde /ccedilla /eacute
/ecircumflex /edieresis /egrave /iacute /icircumflex /idieresis /igrave /ntilde
/oacute /ocircumflex /odieresis /ograve /otilde /scaron /uacute /ucircumflex
/udieresis /ugrave /ydieresis /zcaron /char156 /char157 /char158 /char159
/char160 /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/char176 /endash /dagger /daggerdbl /periodcentered /char181 /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /char190 /questiondown
/char192 /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /char201 /ring /cedilla /char204 /hungarumlaut /ogonek /caron
/emdash /char209 /char210 /char211 /char212 /char213 /char214 /char215
/char216 /char217 /char218 /char219 /char220 /char221 /char222 /char223
/char224 /AE /char226 /ordfeminine /char228 /char229 /char230 /char231
/Lslash /Oslash /OE /ordmasculine /char236 /char237 /char238 /char239
/char240 /ae /char242 /char243 /char244 /dotlessi /char246 /char247
/lslash /oslash /oe /germandbls /char252 /char253 /char254 /char255
] putinterval
%
%	Create a dictionary entry in "fontmap" indexed by
%	PL fontnames with PS names and sizes as entries
%	a call is of the form:    /timsps10 /ILtims 10 map
%
/map {
  2 dict begin
  /pssize xdf
  /psname xdf
  fontmap exch currentdict put	% install it, PL_name is the index
  end
} bdf

%
%	Symbol_B character encoding vector. Encodes IL char num to PS
%	symbol names.
%
ILSymBEnc 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymBEnc insertcharnum } for
127 1 255 {ILSymBEnc insertcharnum } for

/declareFont { 0 begin
    /PLnum xdf
    /PLname xdf 

    { % if useNativeFont
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } { % else NonNativeFont
	PSfontobj PLnum % into the Plnum'th object make a dictionary:
	10 dict dup begin
	    /FontType 3 def
	    % scale 300 dpi downloaded fonts to target resolution (1270/300).
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def	%updated by LoadGlyph
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end %BuildChar dict
	    }def %BuildChar
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def %scale factors irrelevant
	    /CharData MAXCHARS dict def	% CharData is built by LoadGlyph.
	end %font dictionary defn
	PLname exch definefont  put

	%load a bogus space character in case no one does
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse % useNativeFonts
    end
} def
/declareFont load 0 3 dict put

/numLoadEmptyGlyph { 0 begin
	% by number, load font data for char with width but no bits
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put

/LoadEmptyGlyph { 0 begin
	% by name, load font data for char with width but no bits
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put

/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf

/timeToQuit {
%	initialstate restore
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
%	headerpage showpage
	stop
} bdf

/LoadGlyph { 0 begin
	% load a glyph into the CharData entry of PSFontobj[fontno]
	% the entry is in the position implied by charno
	% and with the metrics height, width, lsb

	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf

	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	   %actually, we pass bitmap rounded to 16 bits wide:
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def %the font dict
		% if we are loading glyphs, PSfontobj is an array of
		% dictionaries each of which already has the form
		% of Program 21, PS T&C
	/charname thefont /Encoding get charno get def %access by name !

	%now make the parameters for the CharData
	% 1 unit = 1 pixel
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def	%lower left of bbox
	/llx  lsb def
	/urx hsize lsb add def %upper right
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put

/sf { PSfontobj exch get setfont } bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FILL PATTERNS
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Fill patterns by clipping a rectangle filled with characters
%
%	IL patterns are presently on 32x32 tiles, even if there is a subtile
%	which would define the whole pattern. However, we attempt generality
%	here grayArray determines whether to use grayscale for some patterns
%	even if not using native patterns
%
/patternstring	1 string def
/grayArray [	%indexed by position in IL pattern font, -1 means not grayscale 
		% others are fraction of  WHITE
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [ %when using grayscale as complete simulation
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def

%
%	THE APPLICATION CALLS:
%
/fillpatset40 {			% fillpatset for 4.0
    /patchar xdf
    /pfindex xdf
    /patIsGray false def	% tining is done by color lib
} bdf

/fillpatset {			% fnum patchar fillpatset
    /patchar xdf		% selects pattern ch in font fnum
    /pfindex xdf
    patgraylevel dup 0 ge {	% The extra call to patgraylevel
	/patIsGray true def	% is needed because PS computes
	/patgray xdf		% both operands of an "and" operator
    } {				% even if the first is false.
	pop /patIsGray false def
    } ifelse
} bdf

/fp {
    /useNativePattern xdf

    gsave
    pfindex 0 eq patchar 0 eq and {		% special case 
	/patIsGray true def
	/patgray 0 def
    } if

    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativePattern {			% native non gray fill patterns
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf

%
%	Private implementation procedures
%

%	Before invoking pfill, you must have set the pattern
%	font as the current font.
%	pfill will cause a newpath, just as do fill and stroke.
%
/pfill {
  gsave 1 setgray eofill grestore % must fill on white
  setupfactors setupregion blastchars
  newpath
} bdf

/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  patternstring stringwidth pop /paty exch def /patx paty def
} bdf

/setupregion {
  eoclip	
  pathbbox
    /ry exch floor  def
    /rx exch floor  def
    /ly exch ceiling cvi
      dup 0 lt{paty sub}if cvi		%We need (lx,ly) modulo (patx,paty)
      dup paty ceiling cvi mod  sub  def	%in device space coords.
    /lx exch ceiling cvi
      dup 0 lt{patx sub}if cvi
      dup patx ceiling cvi mod  sub  def

    /ry ry paty add def		%we are painting downwards as positive
    /ly ly paty sub def

  newpath
} bdf

/blastchars {
  /#chars  rx lx sub patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf

/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf

% 
%	Non gray Native fill pattern. Right out of the PS cook book page 192.
%
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def

 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf

  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end

/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf

   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def

   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if

   frequency newscreenangle /spotfunction load setscreen
  end % setuserscreendict begin
} bdf

/setpatterndict 32 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end % setpatterndict begin

/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end % setpatterndict begin
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf

  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end % setpatterndict begin
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf

 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 gsave eofill grestore
} bdf

/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Page
%%%%%%%%%%%%%%%%%%%%%%%%%
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } bdf %prints N copies

%
% 	Define clipping path
%
/clp {initclip newpath av as as as closepath clip } bdf

%
%	Cutting marks for typsetter paper
%
/cutmark { 0 begin
  /pw DPIx 40 div def		% pen width
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def

  initclip
  pw sw
  /lnx4 lnx 4 div def
  [lnx lnx4 sub lnx4 2 mul] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0.0 dp
  end
} bdf
/cutmark load 0 5 dict put
%(pspro.ps version 4.0.5 download complete.\n) print flush
%%EndProlog
%!
%	InterLeaf to Postscript fontname mapping
%
/fontmap 13 dict def
	/marks:Ops10 /ILtims 10 map
	/errors:Ops10 /ILtims 10 map
	/wst:timsps10 /ILtims 10 map
	/wst:timsps11i /ILtimsi 11 map
	/wst:timsps12 /ILtims 12 map
	/wst:timsps12b /ILtimsb 12 map
	/wst:timsps14b /ILtimsb 14 map
	/wst:helvps8 /ILhelv 8 map
	/wst:helvps9 /ILhelv 9 map
	/wst:helvps9b /ILhelvb 9 map
	/wst:helvps9bi /ILhelvbi 9 map
	/wst:helvps10 /ILhelv 10 map
	/wst:helvps10b /ILhelvb 10 map
%
%	Create and ReEncode the following fonts.
%
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Helvetica /ILhelv ILEncoding ReEncode
/Helvetica-Bold /ILhelvb ILEncoding ReEncode
/Helvetica-BoldOblique /ILhelvbi ILEncoding ReEncode
%!
% >> pl2ps version 4.0.5
5 0 4 versioncheck
/hline 5 array def
hline 4 (For: millette.none.r_d.218E9 ) put
hline 3 (Printed on: Tue, Nov 12, 1991 20:28:36 ) put
hline 2 ( ) put
hline 1 (Document: 1_over_1.ps ) put
hline 0 (Last saved on: Tue, Nov 12, 1991 19:44:04 ) put
/lline 5 array def
lline 4 (For: millette.none.r_d.218E9 ) put
lline 3 (Printed on: Tue, Nov 12, 1991 20:28:36 ) put
lline 2 ( ) put
lline 1 (Document: 1_over_1.ps ) put
lline 0 (Last saved on: Tue, Nov 12, 1991 19:44:04 ) put
%logme
%letter
/initialstate save def
/PSpagelength 13970 def
/PSpagewidth 10795 def
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
/PSfontobj 86 array def
/BinaryMode false def
bop
0 13970 neg translate
%%0 13970 10795 13970 10795 0 0 0 clp
-2400 8000 translate
true /wst:timsps10 5 declareFont
5 sf
9521.0 558.0 m
5396.0 h
1270.0 h
9521.0 13308.0 m
5396.0 h
5352.0 13308.0 m
0.0000 setgray
%<31> 0 5440 -1 s
1270.0 h
true /wst:helvps10b 6 declareFont
6 sf
2985.0 5931.0 m
true /wst:helvps9 7 declareFont
7 sf
3663.0 2909.0 m
0.0000 setgray
<6d616368696e65> 0 4261 -1 s
3663.0 3084.0 m
0.0000 setgray
<72756e6e696e67206120> 2 4367 32 s
3663.0 3258.0 m
0.0000 setgray
<736563757269747920636c69656e74> 1 4621 32 s
3663.0 2181.0 m
0.0000 setgray
<6d616368696e65> 0 4261 -1 s
3663.0 2356.0 m
0.0000 setgray
<72756e6e696e67206120> 2 4367 32 s
3663.0 2530.0 m
0.0000 setgray
<736563757269747920636c69656e74> 1 4621 32 s
0.0 0.0 m
17.0 sw
/drawmode PL_SET def
newpath
44.9996 135.0587 1 969.8631 969.8516 0.0000 6459.1987 4474.2159 addconic
7145 4817 av
44.9996 135.0587 1 969.8631 969.8516 0.0000 6459.1987 4131.2159 addconic
7145 4405 av
44.9996 135.0587 1 969.8631 969.8516 0.0000 6459.1987 3719.2159 addconic
7145 4072 av
7145 5503 as
44.9996 135.0586 1 969.8639 969.8530 0.0000 6459.1985 4817.2146 addconic
5772 5503 as
5772 4072 as
6457 4278 av
90.1391 450.1391 686 206 0.0000 6458 4072 el
[] 0 setdash
0.0000 dp40
true /wst:helvps9bi 8 declareFont
8 sf
5781.0 2575.0 m
0.0000 setgray
<6463656c6f6361> 0 6371 -1 s
true /wst:helvps9b 9 declareFont
9 sf
0.0000 setgray
<6c2f62696e2f73656364> 0 7102 -1 s
0.0 0.0 m
newpath
5588 2018 av
7390 2018 as
7390 2018 as
7390 2979 as
5588 2979 as
5588 2018 as
0.0000 dp40
newpath
6474 2964 av
6474 3856 as
0.0000 dp40
newpath
6488 2964 av
6474 3113 as
0.0000 dp40
newpath
0.0 sw
6488 3130 av
6488 3130 as
6436 3161 as
6488 2964 as
6541 3161 as
6488 3130 as
gsave
0.0000 setgray
eofill
grestore
newpath
6488 3130 av
newpath
17.0 sw
6488 3130 av
6436 3161 as
6488 2964 as
6541 3161 as
closepath
0.0000 dp40
0.0 sw
newpath
6488 2964 av
closepath
17.0 sw
newpath
4577 2112 av
5532 2112 as
0.0000 dp40
newpath
4408 2112 av
4577 2113 as
0.0000 dp40
newpath
0.0 sw
4574 2112 av
4574 2112 as
4605 2165 as
4408 2112 as
4605 2060 as
4574 2112 as
gsave
0.0000 setgray
eofill
grestore
newpath
4574 2112 av
newpath
17.0 sw
4574 2112 av
4605 2165 as
4408 2112 as
4605 2060 as
closepath
0.0000 dp40
0.0 sw
newpath
4408 2112 av
closepath
17.0 sw
newpath
5588 2112 av
5420 2112 as
0.0000 dp40
newpath
0.0 sw
5422 2112 av
5422 2112 as
5392 2060 as
5588 2112 as
5392 2165 as
5422 2112 as
gsave
0.0000 setgray
eofill
grestore
newpath
5422 2112 av
newpath
17.0 sw
5422 2112 av
5392 2060 as
5588 2112 as
5392 2165 as
closepath
0.0000 dp40
0.0 sw
newpath
5588 2112 av
closepath
17.0 sw
newpath
4591 2875 av
5533 2875 as
0.0000 dp40
newpath
4425 2875 av
4591 2876 as
0.0000 dp40
newpath
0.0 sw
4591 2875 av
4591 2875 as
4622 2927 as
4425 2875 as
4622 2822 as
4591 2875 as
gsave
0.0000 setgray
eofill
grestore
newpath
4591 2875 av
newpath
17.0 sw
4591 2875 av
4622 2927 as
4425 2875 as
4622 2822 as
closepath
0.0000 dp40
0.0 sw
newpath
4425 2875 av
closepath
17.0 sw
newpath
5588 2875 av
5422 2875 as
0.0000 dp40
newpath
0.0 sw
5422 2875 av
5422 2875 as
5392 2822 as
5588 2875 as
5392 2927 as
5422 2875 as
gsave
0.0000 setgray
eofill
grestore
newpath
5422 2875 av
newpath
17.0 sw
5422 2875 av
5392 2822 as
5588 2875 as
5392 2927 as
closepath
0.0000 dp40
0.0 sw
newpath
5588 2875 av
closepath
8 sf
3154.0 1516.0 m
0.0000 setgray
<5365637572697479205365727669636520436c69656e7473> 2 4961 32 s
3154.0 1691.0 m
0.0000 setgray
<52657175657374204461746162617365204f7065726174696f6e73> 2 5411 32 s
0.0 0.0 m
17.0 sw
newpath
6474 3856 av
6488 3708 as
0.0000 dp40
newpath
0.0 sw
6474 3690 av
6474 3690 as
6527 3660 as
6474 3856 as
6422 3660 as
6474 3690 as
gsave
0.0000 setgray
eofill
grestore
newpath
6474 3690 av
newpath
17.0 sw
6474 3690 av
6527 3660 as
6474 3856 as
6422 3660 as
closepath
0.0000 dp40
0.0 sw
newpath
6474 3856 av
closepath
6797.0 3417.0 m
0.0000 setgray
<54686520536572766572204163636573736573> 2 8392 32 s
6797.0 3592.0 m
0.0000 setgray
<746865204461746162617365> 1 7784 32 s
true /wst:helvps8 10 declareFont
10 sf
6203.0 4040.0 m
0.0000 setgray
<5265676973747279> 0 6718 -1 s
6203.0 4217.0 m
0.0000 setgray
<4461746162617365> 0 6804 -1 s
0.0 0.0 m
17.0 sw
newpath
2985 1270 av
8678 1270 as
8678 1270 as
8678 5946 as
2985 5946 as
2985 1270 as
0.0000 dp40
8700.0 5931.0 m
6 sf
eop
initialstate restore
end % tempdict
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Times-Bold
%%+ Helvetica
%%+ Helvetica-Bold
%%+ Helvetica-BoldOblique

%%EndDocument 
EPSE
XP /F1 /CM-Times-Bold 66.418 11 DNF RP
177 1676 XY F1(27.2)S 402 X(The)S 534 X(Registry)S 796 X(Database)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 1797 XY F0(The)S 492 X(registry)S 632 X(database)S 789 X
(contains)S 941 X(the)S 1006 X(following)S 1181 X(information:)S 
74 y 449 X(\267)S 484 X(Principals|Principals)S 872 X(are)S 937 X
(the)S 1003 X(users)S 1102 X(of)S 1151 X(the)S 1217 X(system.)S 
1377 X(Principals)S 1557 X(can)S 1629 X(be)S 1683 X(interactive)S 
50 y 484 X(principals)S 678 X(\(human)S 836 X(users\))S 965 X(or)S
1030 X(noninteractive)S 1298 X(\(servers,)S 1470 X(machines,)S 1668 X
(and)S 1758 X(cells\).)S 50 y 484 X(Principals)S 664 X(can)S 736 X
(be)S 789 X(associated)S 973 X(with)S 1061 X(access)S 1181 X
(permissions.)S 75 y 449 X(\267)S 484 X(Groups|Groups)S 782 X(are)S
845 X(collections)S 1037 X(of)S 1083 X(principals)S 1259 X(that)S 
1334 X(are)S 1396 X(identi\014ed)S 1565 X(by)S 1619 X(a)S 1649 X
(group)S 1758 X(name.)S 49 y 484 X(Groups)S 620 X(can)S 692 X(be)S
745 X(associated)S 929 X(with)S 1017 X(access)S 1137 X
(permissions.)S 75 y 449 X(\267)S 484 X
(Organizations|Organizations)S 1010 X(are)S 1078 X(collections)S 
1276 X(of)S 1329 X(principals;)S 1522 X(these)S 1626 X(principals)S
1808 X(are)S 50 y 484 X(identi\014ed)S 655 X(by)S 710 X(an)S 763 X
(organization)S 985 X(name.)S 1118 X(Organizations)S 1365 X
(de\014ne)S 1480 X(the)S 1545 X(policies)S 1688 X(associated)S 50 y 
484 X(with)S 568 X(the)S 629 X(principals)S 803 X(in)S 845 X(the)S
906 X(registry.)S 1075 X(Organizations)S 1318 X(cannot)S 1438 X(be)S
1488 X(associated)S 1668 X(with)S 1752 X(access)S 50 y 484 X
(permissions.)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(27{3)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 438 18
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
508 419 XY F0(\267)S 543 X(Accounts|Accounts)S 908 X(contain)S 1041 X
(the)S 1102 X(passwords)S 1285 X(and)S 1355 X(accounting)S 1547 X
(information)S 1753 X(that)S 1825 X(allow)S 50 y 543 X(principals)S
722 X(authenticated)S 958 X(access)S 1079 X(to)S 1126 X(objects)S 
1258 X(within)S 1379 X(the)S 1444 X(cell.)S 1550 X(\(Authenticated)S
1811 X(access)S 50 y 543 X(can)S 614 X(also)S 694 X(occur)S 799 X
(between)S 950 X(principals)S 1127 X(in)S 1172 X(different)S 1328 X
(cells,)S 1427 X(as)S 1475 X(described)S 1647 X(in)S 1692 X(the)S 
1756 X(following)S 50 y 543 X(text.\))S 75 y 508 X(\267)S 543 X
(Policies)S 687 X(and)S 760 X(Properties|Policies)S 1114 X(and)S 
1186 X(properties)S 1365 X(regulate)S 1511 X(such)S 1599 X(things)S
1713 X(as)S 1761 X(password)S 49 y 543 X(length)S 661 X(and)S 735 X
(format)S 859 X(and)S 933 X(certain)S 1060 X(authentication)S 1309 X
(requirements.)S 75 y 508 X(\267)S 543 X(The)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
618 768 XY F11(replist)S 741 X F0(object|This)S 967 X(object)S 1079 X
(is)S 1116 X(used)S 1202 X(to)S 1244 X(manage)S 1383 X(replicas)S 
1522 X(of)S 1567 X(the)S 1627 X(registry)S 1764 X(database.)S 75 y 
508 X(\267)S 543 X(The)S 627 X F11(xattrschema)S 865 X F0
(object|This)S 1101 X(object)S 1222 X(is)S 1269 X(the)S 1339 X
(extended)S 1508 X(registry)S 1654 X(schema)S 1798 X(created)S 50 y 
543 X(with)S 631 X(the)S 696 X(ERA)S 792 X(facility.)S 992 Y 472 X
(\(See)S 558 X(Chapter)S 702 X(41)S 756 X(for)S 816 X(a)S 847 X
(detailed)S 990 X(description)S 1187 X(of)S 1234 X(the)S 1296 X
(structure)S 1454 X(of)S 1501 X(the)S 1563 X(registry)S 1702 X
(database)S 1857 X(and)S 50 y 472 X(the)S 537 X(types)S 638 X(of)S
687 X(information)S 897 X(it)S 934 X(contains.\))S 1142 Y 472 X
(The)S 554 X(collection)S 735 X(of)S 787 X(objects)S 921 X
(controlled)S 1107 X(by)S 1165 X(a)S 1201 X(registry)S 1345 X
(database)S 1505 X(is)S 1549 X(an)S 1606 X(entity)S 1717 X(known)S
1847 X(as)S 1899 X(a)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
472 1192 XY F8(cell)S F0(.)S 587 X(Authenticated)S 838 X
(communications)S 1130 X(are)S 1198 X(possible)S 1352 X(between)S 
1508 X(cells)S 1602 X(only)S 1693 X(if)S 1736 X(those)S 1841 X
(cells)S 49 y 472 X(have)S 567 X(special)S 698 X(accounts)S 859 X
(in)S 907 X(the)S 974 X(registry)S 1117 X(database)S 1275 X(at)S 
1321 X(the)S 1388 X(cell)S 1464 X(they)S 1551 X(wish)S 1646 X(to)S
1694 X(communicate)S 50 y 472 X(with.)S 590 X(These)S 702 X
(special)S 831 X(accounts)S 990 X(set)S 1050 X(up)S 1105 X
(cross-cell)S 1278 X(authentication,)S 1537 X(which)S 1652 X(gives)S
1754 X(principals)S 50 y 472 X(from)S 568 X(one)S 643 X(cell)S 717 X
(authenticated)S 954 X(access)S 1074 X(to)S 1122 X(another)S 1261 X
(cell.)S 1367 X(\(See)S 1456 X(Chapter)S 1602 X(33)S 1658 X(for)S 
1721 X(information)S 50 y 472 X(about)S 579 X(establishing)S 791 X
(accounts)S 950 X(for)S 1012 X(cross-cell)S 1185 X
(authentication.\))S
XP /F1 /CM-Times-Bold 66.418 11 DF RP
236 1575 XY F1(27.3)S 461 X(Physical)S 719 X(Security)S 977 X(of)S
1055 X(the)S 1165 X(Database)S 1696 Y 472 X F0(The)S 561 X(DCE)S 
669 X(Security)S 832 X(Service)S 980 X(provides)S 1148 X
(safeguards)S 1350 X(for)S 1422 X(network)S 1583 X(security,)S 1749 X
(protecting)S 50 y 472 X(information)S 686 X(that)S 765 X(is)S 810 X
(transmitted)S 1014 X(across)S 1135 X(the)S 1202 X(network)S 1355 X
(by)S 1414 X(guaranteeing)S 1646 X(the)S 1713 X(identities)S 1883 X
(of)S 50 y 472 X(principals)S 653 X(who)S 742 X(engage)S 876 X(in)S
925 X(cross-machine)S 1182 X(communications.)S 1509 X(The)S 1591 X
(security)S 1739 X(server)S 1857 X(and)S 49 y 472 X(the)S 535 X
(database)S 690 X(that)S 764 X(it)S 799 X(serves,)S 924 X(however,)S
1089 X(reside)S 1200 X(on)S 1254 X(a)S 1284 X(local)S 1376 X
(machine.)S 1560 X(The)S 1636 X(registry)S 1774 X(database)S 50 y 
472 X(is)S 517 X(only)S 608 X(as)S 659 X(secure)S 782 X(as)S 834 X
(the)S 901 X(security)S 1050 X(provided)S 1214 X(by)S 1273 X(the)S
1340 X(machine)S 1498 X(on)S 1556 X(which)S 1675 X(it)S 1715 X
(resides.)S 1883 X(In)S 50 y 472 X(addition)S 626 X(to)S 676 X
(ensuring)S 836 X(that)S 916 X(sensitive)S 1079 X(data)S 1165 X
(can)S 1241 X(be)S 1297 X(accessed)S 1460 X(on)S 1519 X(the)S 1587 X
(local)S 1685 X(machine)S 1844 X(only)S 50 y 472 X(by)S 528 X
(root,)S 619 X(you)S 695 X(need)S 787 X(to)S 833 X(provide)S 973 X
(physical)S 1125 X(security)S 1270 X(for)S 1332 X(the)S 1397 X
(machine)S 1551 X(on)S 1606 X(which)S 1722 X(the)S 1786 X(security)S
50 y 472 X(server)S 589 X(resides.)S 752 X(This)S 841 X(can)S 914 X
(include)S 1052 X(situating)S 1210 X(the)S 1276 X(machine)S 1432 X
(in)S 1479 X(a)S 1513 X(locked)S 1639 X(room,)S 1752 X(keeping)S 
1899 X(a)S 50 y 472 X(log)S 539 X(of)S 588 X(when)S 692 X(and)S 
765 X(by)S 821 X(whom)S 938 X(the)S 1003 X(machine)S 1157 X(is)S 
1199 X(accessed,)S 1368 X(and)S 1442 X(any)S 1516 X(other)S 1615 X
(methods)S 1770 X(that)S 1846 X(may)S 49 y 472 X(be)S 525 X
(appropriate)S 728 X(to)S 774 X(your)S 864 X(needs.)S 2244 Y 472 X
(\(See)S 564 X(the)S 632 X F8(OSF)S 724 X(DCE)S 823 X(Application)S
1033 X(Development)S 1267 X(Guide|Core)S 1504 X(Components)S 1730 X 
F0(for)S 1796 X(a)S 1832 X(more)S 50 y 472 X(detailed)S 618 X
(discussion)S 805 X(of)S 853 X(authentication.\))S 2503 Y 236 X F5
(27{4)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 439 19
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1377 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1377 215 XY F5(Overview)S 1564 X(of)S 1612 X(DCE)S 1714 X(Security)S
195 232 XY 1669 5 R
XP /F1 /CM-Times-Bold 66.418 11 DNF RP
177 423 XY F1(27.4)S 402 X(How)S 557 X(the)S 667 X(Registry)S 929 X
(Database)S 1213 X(is)S 1280 X(Stored)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 544 XY F0(Each)S 516 X(security)S 667 X(server)S 788 X
(maintains)S 969 X(a)S 1007 X(working)S 1165 X(copy)S 1265 X(of)S 
1319 X(the)S 1389 X(registry)S 1536 X(database)S 1698 X(in)S 1750 X
(virtual)S 50 y 413 X(memory)S 567 X(and)S 641 X(a)S 675 X
(permanent)S 865 X(copy)S 960 X(on)S 1017 X(disk.)S 1132 X(All)S 
1200 X(reads)S 1302 X(and)S 1377 X(updates)S 1519 X(operate)S 1656 X
(on)S 1712 X(the)S 1778 X(copy)S 49 y 413 X(that)S 491 X(is)S 534 X
(in)S 582 X(virtual)S 705 X(memory.)S 892 X(The)S 972 X(servers)S 
1104 X(use)S 1175 X(the)S 1241 X(copy)S 1337 X(that)S 1415 X(is)S 
1458 X(on)S 1515 X(disk)S 1599 X(to)S 1647 X(initialize)S 1808 X
(the)S 50 y 413 X(copy)S 504 X(in)S 547 X(virtual)S 666 X(memory)S
814 X(when)S 914 X(they)S 996 X(start)S 1078 X(up.)S 1162 X(An)S 
1223 X(atomic)S 1346 X(update)S 1467 X(log)S 1530 X(is)S 1568 X
(used)S 1654 X(to)S 1697 X(guarantee)S 50 y 413 X(the)S 478 X
(database)S 635 X(state)S 725 X(in)S 771 X(the)S 835 X(event)S 939 X
(of)S 987 X(server)S 1103 X(failure.)S 843 Y 413 X(Figure)S 536 X
(27-2)S 626 X(shows)S 744 X(the)S 809 X(server)S 925 X(and)S 999 X
(the)S 1064 X(disk)S 1148 X(and)S 1222 X(virtual)S 1345 X(memory)S
1497 X(copies)S 1618 X(of)S 1667 X(the)S 1732 X(registry)S 49 y 
413 X(database.)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(27{5)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 440 20
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R 419 Y 236 X(Figure)S 368 X(27{2.)S 520 X(Disk)S 614 X
(Memory)S 778 X(and)S 861 X(Virtual)S 993 X(Memory)S 1156 X(Copies)S
1299 X(of)S 1348 X(the)S 1419 X(Registry)S 1585 X(Database)S 
472 1835 XY 0.000000 0.000000 1210 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/1_over_20.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 288.00 270.00
-22.00 3.00 translate
% original bounding box was  22.0 -3.0 310.0 267.0
%%DocumentFonts: (atend)
%%Endcomments
1.0 dup scale
/tempdict 300 dict def
tempdict begin
%  Copyright 1987 Interleaf, Inc.
%  Ten Canal Park, Cambridge, MA  02141
%%%%%%%%%%%%%%%%%%%%%%%%%
%	PS macros
%%%%%%%%%%%%%%%%%%%%%%%%%
/bdf {def} def
/xdf {exch def} bdf
/ldd {load def} bdf
/msg { print (\n) print flush} bdf

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%	global constants and variables
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Version
%
/PS_MAJOR	4 def	%Nov 3, 1987
/PS_MINOR	0 def	%Nov 3, 1987
/PS_SUB		5 def	%Nov 3, 1987

%
%	Drawing modes
%
/PL_SET 	0 def		%ink black
/PL_CLEAR	1 def		%ink white
/PL_XOR		2 def		%ink by xor'ing source onto page - can PS do it?
/PL_REPLACE	3 def		%ink by replacing, e.g. overlayed bitmaps

%
%	 Default global PS state 
%
/drawmode	PL_SET def	%default is ink black
/docutmark	false def	%should cropping marks be printed
/invertmatrix [1 0 0 -1 0 0] def

%
%	Font limits
%
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def	%per font
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def

%%%%%%%%%%%%%%%%%%%%%%%%%
%	Memory Defs
%%%%%%%%%%%%%%%%%%%%%%%%%
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def	% New global Encoding vector.
/ILSymBEnc 256 array def	% SymbolB Encoding vector.
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Job Utilities
%%%%%%%%%%%%%%%%%%%%%%%%%
/inch {72 mul} bdf

/headerpage {
  %assumes standard PS state
  /y 11 def
  /nl {/y y .33 sub def 1 inch y inch moveto } bdf
  /#copies 1 def
  /Helvetica-Bold /ILhelvb ILEncoding ReEncode
  /ILhelvb findfont 18 scalefont setfont
  nl nl nl
  /nhlines hline length def
  nhlines 25 gt 
    {
      /lim nhlines 26 sub def 
      hline lim ((        ...)) put
    }
    { 
      /lim 0 def
    }
  ifelse
  nhlines 1 sub -1  lim { 
   hline exch get show nl
  } for
  /Helvetica findfont 8 scalefont setfont
  1 inch 1 inch moveto 
  (pl2ps )show PS_SUB PS_MINOR PS_MAJOR vershow
  (   Copyright 1988 Interleaf, Inc. ) show 
  emsg1 0 get 0 ne { 1 inch .75 inch moveto emsg1 show } if
  emsg2 0 get 0 ne { 1 inch .5 inch moveto emsg2 show } if
} bdf

/logme {
  (\tInterleaf::pl2ps ) print
  PS_SUB PS_MINOR PS_MAJOR verprint
  /nllines lline length def
  nllines 5 gt 
    {
      /lim nllines 5 sub def 
    }
    { 
      /lim 0 def
    }
  ifelse
  nllines 1 sub -1  lim { 
    (\tInterleaf::) print lline exch get print (\n) print
  } for
  flush 
} bdf

/verprint {
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (\n) print
} bdf
/vershow {
  10 mesg cvrs show (.) show 
  10 mesg cvrs show (.) show
  10 mesg cvrs show 
} bdf
    
/versioncheck {
  /PL_MAJOR xdf
  /PL_MINOR xdf
  /PL_SUB xdf
  /doheader userdict /lline known def
  PL_MAJOR PS_MAJOR ne 
  PL_MINOR PS_MINOR ne or
  PL_SUB PS_SUB ne or {
    doheader {logme } if
    (\tInterleaf:: FATAL ERROR: pspro.ps and pl2ps versions do not agree.) msg
    (\tInterleaf:: pspro.ps version: \t) print
    PS_SUB PS_MINOR PS_MAJOR verprint
    (\tInterleaf:: pl2ps version: \t) print
    PL_SUB PL_MINOR PL_MAJOR verprint
    flush 
    doheader {headerpage } if
    ( FATAL ERROR. pspro version ) show
    PS_SUB PS_MINOR PS_MAJOR vershow
    ( does not agree with pl2ps version ) show 
    PL_SUB PL_MINOR PL_MAJOR vershow
    showpage
    quit 
  } if
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Graphics
%%%%%%%%%%%%%%%%%%%%%%%%%
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf %record pl current point, in rsu
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd % add segment 
/av /moveto ldd % add vertex 
%
% startangle endangle xradius yradius rotation xcenter ycenter el
%
/el {
  matrix currentmatrix 8 1 roll % save the CTM
  translate rotate scale
  0 0 1 5 -2 roll arc
  setmatrix 			% restore CTM
} bdf

%
% startangle endangle clockwise xrad yrad rotation xcenter ycenter addconic
%
/addconic {
  matrix currentmatrix 9 1 roll	% save the CTM
  translate rotate scale
  0 0 1 6 -3 roll 1 eq {arc} {arcn} ifelse
  setmatrix			% restore CTM
} bdf

%
%	Draw current path
%
/dp40 {
  1 setlinejoin 		% round line ends  
  1 setlinecap 			% round line ends
  setgray
  stroke  
} bdf 

/dp {
  gsave
  1 setlinejoin                 % round line ends
  1 setlinecap                  % round line ends
  drawmode PL_CLEAR eq {1} {0} ifelse setgray %only support two modes
  stroke
  grestore
} bdf

%
%	Pen pattern routines
%
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def	% WARNING these values are derived 
					% by scaling widthadj[], defined
					% in /usr/xops/lib/crt/scr/pens.c,
					% by the same factor (.4) that the
					% pen patterns were scaled when
					% sent to printerleaf.
/MINSCALE .1 def			% Do not scale pen pattern below 10%
					% of original size.
% 
% Calulates length of current path. Ala cookbook.
%
/pathlength { 0 begin
    flattenpath				% changes all curveto's to lineto's
    /dist 0 def

    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}

    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put

/setpenpat { 0 begin		% define penpattern dictionary
    /style xdf			% alignment style 
    /width xdf
    /pattern xdf

    % 
    % Adjust pattern for various pen widths.
    %
    /scaleup DPIx 300 div def		% Seybold hack!!!!
    /indx width 1 add scaleup div 4 div cvi def	% Change width into an index
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def% Get ajustment for specified pen width
	/adj adj scaleup mul def	% from predefined array PENPATWIDTHADJ
					% and scale up to the resolution.
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def	% Add ajustment for pen width
	    iszero 0 ne			% to just "off" phases of pattern.
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if

    %
    % Align pattern to pathlength.
    %
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def		% Computes path length.
    pattern				% Compute total len of repeating pattern
	{patternlen add /patternlen xdf
	} forall

    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {		% from /usr/xops/lib/crt/scr/pens.c
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {		% from /usr/xops/lib/crt/scr/pens.c
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if

    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Text handling
%%%%%%%%%%%%%%%%%%%%%%%%%
/s { 
  /msp xdf
  /stEnd xdf
  /nsp xdf
  /fstr xdf

  hpos vpos moveto
  msp -1 ne
    {stEnd hpos sub fstr stringwidth pop sub nsp div 0 msp fstr widthshow}
    {fstr show}
  ifelse
  /hpos stEnd def	%adjust idea of current point
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Images
%%%%%%%%%%%%%%%%%%%%%%%%%
/ilr {
  BinaryMode
    {
     readstring
     }
    {
     readhexstring
    } ifelse
} bdf

/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf

  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval ilr pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put

/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf

  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval ilr pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put

/PL_image { 0 begin
  gsave
  /ho xdf	% upper left corner of image.
  /vo xdf	%
  /hh xdf	% Transformed upper right corner relative
  /vh xdf	% to upper left corner.
  /hv xdf	% Transformed lower left corner relative
  /vv xdf	% to upper left corner.
  /nbits xdf	% depth
  /vpix xdf	% height
  /hpix xdf	% width
  /scfrq xdf	% screen frequency
  /scang xdf	% screen angle
  /mapsz xdf	% PL_MAP data size
  /map xdf	% PL_MAP data

  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get} settransfer
  } if 
  scfrq 0 ne scang 0 ne and {
    scfrq scang currentscreen 3 1 roll pop pop setscreen
  } if
  %
  % allocate the largest amount of memory avail for reading image data...
  %
  /availmem vmstatus exch sub exch pop def
  /datasize hpix nbits mul 7 add 8 idiv vpix mul def 
  availmem 65535 gt {
    /availmem 65535 def 
  } if
  datasize availmem lt
  {
    /picstr datasize string def
  } {
    /picstr datasize vpix idiv string def 
  } ifelse
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 16 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FONT GOODIES
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	ReEncodeSubset -map character set a'la Interleaf
%	
%	snarfed from PS manual, example 22
%	At the moment, it seems like all overlays will start at char 0,
%		but we might as well be general
/reencodesubdict 12 dict def
/ReEncode {
%
%	Copy basefontdict into newfont except for the FID entry.
%	First create a new font dictionary the size of basefontdict
%	plus 2 for a FID entry which definefont will provide.
%
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict { 		% Copy basefontdict to newfont 
    exch dup /FID ne {		% except for the FID entry.
      exch newfont 3 1 roll put	% Copy entry into newfont.
    } {
      pop pop			% Remove entry from stack if equal FID.
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf

%
%	Now make a global Encoding vector
%
/insertcharnum { 0 begin	% Put /char# into entry i
  /encoding xdf			% of new encoding vector as
  /i xdf			% character names.

  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put

ILEncoding 0
[
/Aacute /Acircumflex /Adieresis /Agrave /Aring /Atilde /Ccedilla /Eacute
/Ecircumflex /Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Ntilde
/Oacute /Ocircumflex /Odieresis /Ograve /Otilde /Scaron /Uacute /Ucircumflex
/Udieresis /Ugrave /Ydieresis /Zcaron /char28 /char29 /char30 /char31
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /quotedblleft
/aacute /acircumflex /adieresis /agrave /aring /atilde /ccedilla /eacute
/ecircumflex /edieresis /egrave /iacute /icircumflex /idieresis /igrave /ntilde
/oacute /ocircumflex /odieresis /ograve /otilde /scaron /uacute /ucircumflex
/udieresis /ugrave /ydieresis /zcaron /char156 /char157 /char158 /char159
/char160 /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/char176 /endash /dagger /daggerdbl /periodcentered /char181 /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /char190 /questiondown
/char192 /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /char201 /ring /cedilla /char204 /hungarumlaut /ogonek /caron
/emdash /char209 /char210 /char211 /char212 /char213 /char214 /char215
/char216 /char217 /char218 /char219 /char220 /char221 /char222 /char223
/char224 /AE /char226 /ordfeminine /char228 /char229 /char230 /char231
/Lslash /Oslash /OE /ordmasculine /char236 /char237 /char238 /char239
/char240 /ae /char242 /char243 /char244 /dotlessi /char246 /char247
/lslash /oslash /oe /germandbls /char252 /char253 /char254 /char255
] putinterval
%
%	Create a dictionary entry in "fontmap" indexed by
%	PL fontnames with PS names and sizes as entries
%	a call is of the form:    /timsps10 /ILtims 10 map
%
/map {
  2 dict begin
  /pssize xdf
  /psname xdf
  fontmap exch currentdict put	% install it, PL_name is the index
  end
} bdf

%
%	Symbol_B character encoding vector. Encodes IL char num to PS
%	symbol names.
%
ILSymBEnc 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymBEnc insertcharnum } for
127 1 255 {ILSymBEnc insertcharnum } for

/declareFont { 0 begin
    /PLnum xdf
    /PLname xdf 

    { % if useNativeFont
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } { % else NonNativeFont
	PSfontobj PLnum % into the Plnum'th object make a dictionary:
	10 dict dup begin
	    /FontType 3 def
	    % scale 300 dpi downloaded fonts to target resolution (1270/300).
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def	%updated by LoadGlyph
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end %BuildChar dict
	    }def %BuildChar
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def %scale factors irrelevant
	    /CharData MAXCHARS dict def	% CharData is built by LoadGlyph.
	end %font dictionary defn
	PLname exch definefont  put

	%load a bogus space character in case no one does
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse % useNativeFonts
    end
} def
/declareFont load 0 3 dict put

/numLoadEmptyGlyph { 0 begin
	% by number, load font data for char with width but no bits
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put

/LoadEmptyGlyph { 0 begin
	% by name, load font data for char with width but no bits
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put

/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf

/timeToQuit {
%	initialstate restore
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
%	headerpage showpage
	stop
} bdf

/LoadGlyph { 0 begin
	% load a glyph into the CharData entry of PSFontobj[fontno]
	% the entry is in the position implied by charno
	% and with the metrics height, width, lsb

	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf

	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	   %actually, we pass bitmap rounded to 16 bits wide:
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def %the font dict
		% if we are loading glyphs, PSfontobj is an array of
		% dictionaries each of which already has the form
		% of Program 21, PS T&C
	/charname thefont /Encoding get charno get def %access by name !

	%now make the parameters for the CharData
	% 1 unit = 1 pixel
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def	%lower left of bbox
	/llx  lsb def
	/urx hsize lsb add def %upper right
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put

/sf { PSfontobj exch get setfont } bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FILL PATTERNS
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Fill patterns by clipping a rectangle filled with characters
%
%	IL patterns are presently on 32x32 tiles, even if there is a subtile
%	which would define the whole pattern. However, we attempt generality
%	here grayArray determines whether to use grayscale for some patterns
%	even if not using native patterns
%
/patternstring	1 string def
/grayArray [	%indexed by position in IL pattern font, -1 means not grayscale 
		% others are fraction of  WHITE
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [ %when using grayscale as complete simulation
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def

%
%	THE APPLICATION CALLS:
%
/fillpatset40 {			% fillpatset for 4.0
    /patchar xdf
    /pfindex xdf
    /patIsGray false def	% tining is done by color lib
} bdf

/fillpatset {			% fnum patchar fillpatset
    /patchar xdf		% selects pattern ch in font fnum
    /pfindex xdf
    patgraylevel dup 0 ge {	% The extra call to patgraylevel
	/patIsGray true def	% is needed because PS computes
	/patgray xdf		% both operands of an "and" operator
    } {				% even if the first is false.
	pop /patIsGray false def
    } ifelse
} bdf

/fp {
    /useNativePattern xdf

    gsave
    pfindex 0 eq patchar 0 eq and {		% special case 
	/patIsGray true def
	/patgray 0 def
    } if

    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativePattern {			% native non gray fill patterns
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf

%
%	Private implementation procedures
%

%	Before invoking pfill, you must have set the pattern
%	font as the current font.
%	pfill will cause a newpath, just as do fill and stroke.
%
/pfill {
  gsave 1 setgray eofill grestore % must fill on white
  setupfactors setupregion blastchars
  newpath
} bdf

/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  patternstring stringwidth pop /paty exch def /patx paty def
} bdf

/setupregion {
  eoclip	
  pathbbox
    /ry exch floor  def
    /rx exch floor  def
    /ly exch ceiling cvi
      dup 0 lt{paty sub}if cvi		%We need (lx,ly) modulo (patx,paty)
      dup paty ceiling cvi mod  sub  def	%in device space coords.
    /lx exch ceiling cvi
      dup 0 lt{patx sub}if cvi
      dup patx ceiling cvi mod  sub  def

    /ry ry paty add def		%we are painting downwards as positive
    /ly ly paty sub def

  newpath
} bdf

/blastchars {
  /#chars  rx lx sub patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf

/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf

% 
%	Non gray Native fill pattern. Right out of the PS cook book page 192.
%
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def

 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf

  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end

/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf

   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def

   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if

   frequency newscreenangle /spotfunction load setscreen
  end % setuserscreendict begin
} bdf

/setpatterndict 32 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end % setpatterndict begin

/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end % setpatterndict begin
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf

  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end % setpatterndict begin
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf

 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 gsave eofill grestore
} bdf

/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Page
%%%%%%%%%%%%%%%%%%%%%%%%%
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } bdf %prints N copies

%
% 	Define clipping path
%
/clp {initclip newpath av as as as closepath clip } bdf

%
%	Cutting marks for typsetter paper
%
/cutmark { 0 begin
  /pw DPIx 40 div def		% pen width
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def

  initclip
  pw sw
  /lnx4 lnx 4 div def
  [lnx lnx4 sub lnx4 2 mul] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0.0 dp
  end
} bdf
/cutmark load 0 5 dict put
%(pspro.ps version 4.0.5 download complete.\n) print flush
%%EndProlog
%!
%	InterLeaf to Postscript fontname mapping
%
/fontmap 12 dict def
	/marks:Ops10 /ILtims 10 map
	/errors:Ops10 /ILtims 10 map
	/wst:timsps10 /ILtims 10 map
	/wst:timsps11i /ILtimsi 11 map
	/wst:timsps12 /ILtims 12 map
	/wst:timsps12b /ILtimsb 12 map
	/wst:timsps14b /ILtimsb 14 map
	/wst:helvps8 /ILhelv 8 map
	/wst:helvps9 /ILhelv 9 map
	/wst:helvps9b /ILhelvb 9 map
	/wst:helvps10 /ILhelv 10 map
	/wst:helvps10b /ILhelvb 10 map
%
%	Create and ReEncode the following fonts.
%
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Helvetica /ILhelv ILEncoding ReEncode
/Helvetica-Bold /ILhelvb ILEncoding ReEncode
%!
% >> pl2ps version 4.0.5
5 0 4 versioncheck
/hline 5 array def
hline 4 (For: millette.none.r_d.218E9 ) put
hline 3 (Printed on: Tue, Nov 12, 1991 20:28:43 ) put
hline 2 ( ) put
hline 1 (Document: 1_over_2.ps ) put
hline 0 (Last saved on: Tue, Nov 12, 1991 19:45:27 ) put
/lline 5 array def
lline 4 (For: millette.none.r_d.218E9 ) put
lline 3 (Printed on: Tue, Nov 12, 1991 20:28:43 ) put
lline 2 ( ) put
lline 1 (Document: 1_over_2.ps ) put
lline 0 (Last saved on: Tue, Nov 12, 1991 19:45:27 ) put
%logme
%letter
/initialstate save def
/PSpagelength 13970 def
/PSpagewidth 10795 def
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
/PSfontobj 86 array def
/BinaryMode false def
bop
0 13970 neg translate
%%0 13970 10795 13970 10795 0 0 0 clp
-2900 8000 translate
true /wst:timsps10 5 declareFont
5 sf
9521.0 558.0 m
5396.0 h
1270.0 h
9521.0 13308.0 m
5396.0 h
5352.0 13308.0 m
0.0000 setgray
%<31> 0 5440 -1 s
1270.0 h
true /wst:helvps10b 6 declareFont
6 sf
3302.0 5994.0 m
0.0 0.0 m
17.0 sw
/drawmode PL_SET def
newpath
140.1517 50.2353 0 342.8970 342.9069 -13.2825 6970.7334 2880.6737 addconic
[] 0 setdash
0.0000 dp40
newpath
4051 2059 av
5355 2059 as
5355 2059 as
5355 3020 as
4051 3020 as
4051 2059 as
0.0000 dp40
true /wst:helvps9 7 declareFont
7 sf
4416.0 2481.0 m
0.0000 setgray
<5365637572697479> 0 4988 -1 s
4468.0 2656.0 m
0.0000 setgray
<536572766572> 0 4935 -1 s
0.0 0.0 m
newpath
4678 3907 av
4691 3769 as
0.0000 dp40
newpath
0.0 sw
4678 3741 av
4678 3741 as
4730 3711 as
4678 3907 as
4625 3711 as
4678 3741 as
gsave
0.0000 setgray
eofill
grestore
newpath
4678 3741 av
newpath
17.0 sw
4678 3741 av
4730 3711 as
4678 3907 as
4625 3711 as
closepath
0.0000 dp40
0.0 sw
newpath
4678 3907 av
closepath
17.0 sw
newpath
90.1391 450.1391 686 206 0.0000 4668 4113 el
0.0000 dp40
newpath
3982 4113 av
3982 5544 as
0.0000 dp40
newpath
5355 4113 av
5355 5544 as
0.0000 dp40
newpath
45.0004 135.0580 1 969.8753 969.8879 0.0000 4669.1995 3760.1807 addconic
0.0000 dp40
newpath
45.0004 135.0580 1 969.8753 969.8879 0.0000 4669.1995 4172.1807 addconic
0.0000 dp40
newpath
45.0008 135.0576 1 969.8819 969.9076 0.0000 4669.1997 4515.1620 addconic
0.0000 dp40
newpath
45.0004 135.0580 1 969.8753 969.8879 0.0000 4669.1995 4858.1807 addconic
0.0000 dp40
true /wst:helvps8 8 declareFont
8 sf
4403.0 4087.0 m
0.0000 setgray
<5265676973747279> 0 4918 -1 s
4403.0 4242.0 m
0.0000 setgray
<4461746162617365> 0 5004 -1 s
7 sf
6494.0 2371.0 m
0.0000 setgray
<526567697374727920> 1 7119 32 s
6494.0 2546.0 m
0.0000 setgray
<4461746162617365> 0 7172 -1 s
0.0 0.0 m
newpath
-126.2845 143.5645 0 342.8925 342.8979 -16.8450 6383.3132 2396.7424 addconic
0.0000 dp40
newpath
-137.3470 132.5650 0 342.8924 342.8972 -35.7825 6447.4321 2666.0210 addconic
0.0000 dp40
newpath
140.0240 49.9893 0 342.9073 342.9184 16.8450 6745.3427 2834.2872 addconic
0.0000 dp40
newpath
-161.8988 -71.8331 1 447.0882 447.0848 -22.5000 6585.7709 2276.7080 addconic
0.0000 dp40
newpath
44.5327 -45.5098 0 319.1057 319.1190 41.4375 7172.5806 2805.6763 addconic
0.0000 dp40
newpath
-147.3432 -57.4495 1 269.4488 269.4642 0.0000 6633.8539 2044.4042 addconic
0.0000 dp40
newpath
6107 2589 av
5343 2589 as
0.0000 dp40
newpath
6107 2603 av
5980 2589 as
0.0000 dp40
newpath
0.0 sw
5941 2603 av
5941 2603 as
5911 2551 as
6107 2603 as
5911 2656 as
5941 2603 as
gsave
0.0000 setgray
eofill
grestore
newpath
5941 2603 av
newpath
17.0 sw
5941 2603 av
5911 2551 as
6107 2603 as
5911 2656 as
closepath
0.0000 dp40
0.0 sw
newpath
6107 2603 av
closepath
17.0 sw
newpath
5343 2589 av
5471 2603 as
0.0000 dp40
newpath
0.0 sw
5509 2589 av
5509 2589 as
5540 2642 as
5343 2589 as
5540 2537 as
5509 2589 as
gsave
0.0000 setgray
eofill
grestore
newpath
5509 2589 av
newpath
17.0 sw
5509 2589 av
5540 2642 as
5343 2589 as
5540 2537 as
closepath
0.0000 dp40
0.0 sw
newpath
5343 2589 av
closepath
true /wst:helvps9b 9 declareFont
9 sf
6325.0 1575.0 m
0.0000 setgray
<56> 0 6431 -1 s
6428.0 h
0.0000 setgray
<69727475616c204d656d6f7279> 1 7468 32 s
5563.0 4286.0 m
0.0000 setgray
<4469736b2053746f72616765> 1 6533 32 s
0.0 0.0 m
17.0 sw
newpath
-40.9735 49.0782 1 323.1099 323.0906 12.2220 7326.7276 2594.4073 addconic
0.0000 dp40
newpath
-48.3997 41.5515 1 342.8871 342.8963 -4.7312 7344.2718 2397.3192 addconic
0.0000 dp40
newpath
-125.5377 -35.5711 1 294.9765 294.9765 0.0000 6829.4517 2020.0322 addconic
0.0000 dp40
newpath
-38.6595 51.3640 1 310.5195 310.5146 -45.0000 7310.7048 2225.6179 addconic
0.0000 dp40
newpath
-139.8176 -49.7643 1 282.7713 282.7828 35.7825 7070.5720 2054.3359 addconic
0.0000 dp40
newpath
4682 3769 av
4682 3015 as
0.0000 dp40
newpath
4682 3015 av
4668 3153 as
0.0000 dp40
newpath
0.0 sw
4682 3181 av
4682 3181 as
4630 3211 as
4682 3015 as
4735 3211 as
4682 3181 as
gsave
0.0000 setgray
eofill
grestore
newpath
4682 3181 av
newpath
17.0 sw
4682 3181 av
4630 3211 as
4682 3015 as
4735 3211 as
closepath
0.0000 dp40
0.0 sw
newpath
4682 3015 av
closepath
17.0 sw
newpath
3302 1270 av
8368 1270 as
8368 1270 as
8368 6014 as
3302 6014 as
3302 1270 as
0.0000 dp40
8382.0 5994.0 m
6 sf
eop
initialstate restore
end % tempdict
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Times-Bold
%%+ Helvetica
%%+ Helvetica-Bold

%%EndDocument 
EPSE
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 1934 XY F0(Each)S 574 X(security)S 724 X(server)S 844 X
(periodically)S 1061 X(saves)S 1169 X(its)S 1227 X(entire)S 1340 X
(database)S 1502 X(from)S 1601 X(virtual)S 1728 X(memory)S 1885 X
(to)S 50 y 472 X(disk.)S 585 X(The)S 663 X(database)S 820 X(is)S 
862 X(stored)S 977 X(in)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
1023 1984 XY F8(dcelocal)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
1164 1984 XY F11(/var/security/rgy\210data)S F0(.)S
XP /F1 /CM-Times-Bold 66.418 11 DF RP
236 2169 XY F1(27.5)S 461 X(Replicated)S 785 X(Databases)S 2289 Y 
472 X F0(The)S 553 X(registry)S 696 X(database)S 855 X(can)S 928 X
(be)S 983 X(replicated)S 1163 X(within)S 1285 X(its)S 1340 X(cell.)S
1450 X(Each)S 1549 X(instance)S 1701 X(of)S 1752 X(a)S 1786 X
(security)S 50 y 472 X(server)S 590 X(in)S 639 X(a)S 674 X(cell)S 
750 X(maintains)S 928 X(a)S 963 X(working)S 1117 X(copy)S 1214 X
(of)S 1265 X(the)S 1332 X(database.)S 1526 X(Throughout)S 1738 X
(this)S 1815 X(guide,)S 2503 Y 236 X F5(27{6)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 441 21
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1377 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1377 215 XY F5(Overview)S 1564 X(of)S 1612 X(DCE)S 1714 X(Security)S
195 232 XY 1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 419 XY F0(the)S 478 X(combination)S 699 X(of)S 748 X(a)S 780 X
(security)S 925 X(server)S 1040 X(and)S 1114 X(its)S 1167 X(data)S
1250 X(\(the)S 1328 X(registry)S 1469 X(database\))S 1639 X(is)S 
1681 X(referred)S 1826 X(to)S 50 y 413 X(as)S 462 X(a)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
494 469 XY F8(replica)S F0(.)S 655 X(Typically,)S 838 X(you)S 914 X
(create)S 1027 X(several)S 1158 X(replicas)S 1301 X(in)S 1347 X(a)S
1379 X(cell)S 1453 X(to)S 1499 X(enhance)S 1649 X(performance)S 50 y 
413 X(and)S 487 X(reliability.)S 619 Y 413 X(The)S 497 X(task)S 
584 X(of)S 638 X(keeping)S 789 X(the)S 859 X(cell's)S 969 X
(replicas)S 1117 X(consistent)S 1303 X(is)S 1350 X(handled)S 1501 X
(automatically)S 1747 X(by)S 1808 X(the)S 50 y 413 X(security)S 
554 X(servers.)S 713 X(Any)S 794 X(changes)S 937 X(that)S 1009 X
(you)S 1080 X(make)S 1179 X(are)S 1239 X(automatically)S 1474 X(re)S
(\015ected)S 1627 X(in)S 1668 X(all)S 1719 X(replicas,)S 49 y 413 X
(as)S 462 X(described)S 635 X(in)S 681 X(the)S 745 X(following)S 
921 X(section.)S
XP /F1 /CM-Times-Bold 66.418 11 DNF RP
177 903 XY F1(27.6)S 402 X(How)S 557 X(Updates)S 811 X(Are)S 940 X
(Handled)S 1024 Y 413 X F0(Updates)S 563 X(are)S 626 X(made)S 729 X
(to)S 775 X(only)S 862 X(one)S 935 X(database,)S 1101 X(and)S 1174 X
(the)S 1238 X(changes)S 1385 X(are)S 1449 X(propagated)S 1646 X(to)S
1692 X(all)S 1746 X(others.)S 49 y 413 X(While)S 537 X
(propagations)S 774 X(are)S 846 X(pending,)S 1013 X(all)S 1076 X
(replicas)S 1228 X(are)S 1300 X(accessible)S 1491 X(even)S 1591 X
(if)S 1639 X(they)S 1732 X(are)S 1805 X(not)S 50 y 413 X
(completely)S 617 X(up-to-date.)S 847 X(In)S 901 X(other)S 1006 X
(words,)S 1137 X(even)S 1234 X(replicas)S 1383 X(to)S 1434 X(which)S
1555 X(the)S 1625 X(changes)S 1778 X(were)S 50 y 413 X(not)S 483 X
(yet)S 551 X(applied)S 690 X(are)S 757 X(available.)S 960 X(This)S
1050 X(replication)S 1245 X(mechanism)S 1450 X(ensures)S 1592 X
(that)S 1671 X(all)S 1729 X(replicas)S 50 y 413 X(remain)S 543 X
(available)S 708 X(for)S 771 X(login)S 870 X(validation)S 1051 X
(and)S 1126 X(for)S 1189 X(read)S 1275 X(operations)S 1462 X(even)S
1555 X(when)S 1659 X(changes)S 1808 X(are)S 50 y 413 X(in)S 460 X
(the)S 524 X(process)S 662 X(of)S 711 X(being)S 817 X(propagated.)S
XP /F16 /CM-Times-Bold 53.964 11 DF RP
177 1445 XY F16(27.6.1)S 413 X(Master)S 596 X(and)S 701 X(Slave)S 
842 X(Replicas)S 1565 Y 413 X F0(Only)S 513 X(one)S 590 X(replica)S
719 X(in)S 768 X(a)S 804 X(cell,)S 891 X(the)S 958 X F8(master)S 
1086 X(replica)S F0(,)S 1231 X(accepts)S 1370 X(updates)S 1513 X
(to)S 1562 X(its)S 1618 X(database)S 1778 X(from)S 50 y 413 X
(clients.)S 574 X(Other)S 685 X(replicas,)S 841 X(called)S 957 X F8
(slave)S 1057 X(replicas)S F0(,)S 1218 X(accept)S 1341 X(only)S 
1432 X(reads)S 1536 X(from)S 1633 X(clients.)S 1794 X(The)S 50 y 
413 X(master)S 541 X(replica)S 670 X(propagates)S 867 X(any)S 944 X
(updates)S 1087 X(to)S 1136 X(the)S 1204 X(slave)S 1306 X
(replicas.)S 1487 X(For)S 1561 X(example,)S 1729 X(either)S 1840 X
(a)S 50 y 413 X(master)S 535 X(or)S 581 X(a)S 611 X(slave)S 707 X
(replica)S 831 X(can)S 900 X(provide)S 1038 X(account)S 1178 X
(information)S 1385 X(to)S 1429 X(a)S 1459 X(client)S 1562 X
(program)S 1714 X(such)S 1801 X(as)S
XP /F11 /CM-Times-Bold 41.511 11 DF RP
1847 1715 XY F11(/)S 50 y 413 X(bin/login)S F0(.)S 613 X(However,)S
787 X(if)S 823 X(you)S 897 X(are)S 959 X(adding)S 1083 X(an)S 1134 X
(account)S 1274 X(or)S 1320 X(changing)S 1484 X(password)S 1652 X
(information,)S 49 y 413 X(those)S 515 X(updates)S 656 X(can)S 727 X
(be)S 780 X(handled)S 925 X(only)S 1013 X(by)S 1068 X(the)S 1133 X
(master)S 1257 X(replica.)S 1914 Y 413 X(The)S 493 X(process)S 632 X
(of)S 681 X(updating)S 841 X(the)S 907 X(database)S 1064 X(differs)S
1187 X(slightly)S 1327 X(between)S 1480 X(the)S 1545 X(master)S 
1671 X(replica)S 1798 X(and)S 50 y 413 X(slave)S 510 X(replicas.)S
681 X(Figures)S 816 X(27-3)S 903 X(and)S 974 X(27-4)S 1061 X
(illustrate)S 1217 X(the)S 1279 X(master)S 1400 X(and)S 1471 X
(slave)S 1567 X(update)S 1689 X(processes.)S 50 y 413 X(The)S 492 X
(processes)S 665 X(are)S 729 X(described)S 902 X(in)S 948 X(the)S 
1013 X(sections)S 1160 X(that)S 1236 X(follow)S 1359 X(the)S 1423 X
(\014gures.)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(27{7)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 442 22
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R 419 Y 236 X(Figure)S 368 X(27{3.)S 520 X(The)S 605 X
(Master)S 746 X(Replica)S 898 X(Update)S 1046 X(Process)S 
578 1667 XY 0.000000 0.000000 750 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/1_over_30.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 396.00 382.00
-7.00 3.00 translate
% original bounding box was  7.0 -3.0 403.0 379.0
%%DocumentFonts: (atend)
%%Endcomments
1.0 dup scale
/tempdict 300 dict def
tempdict begin
-1.75 72 mul -4.75 72 mul translate
%  Copyright 1987 Interleaf, Inc.
%  Ten Canal Park, Cambridge, MA  02141
%%%%%%%%%%%%%%%%%%%%%%%%%
%	PS macros
%%%%%%%%%%%%%%%%%%%%%%%%%
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/msg { print (\n) print flush} bdf

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%	global constants and variables
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Version
%
/PS_MAJOR	4 def	%Nov 3, 1987
/PS_MINOR	0 def	%Nov 3, 1987
/PS_SUB		5 def	%Nov 3, 1987

%
%	Drawing modes
%
/PL_SET 	0 def		%ink black
/PL_CLEAR	1 def		%ink white
/PL_XOR		2 def		%ink by xor'ing source onto page - can PS do it?
/PL_REPLACE	3 def		%ink by replacing, e.g. overlayed bitmaps

%
%	 Default global PS state 
%
/drawmode	PL_SET def	%default is ink black
/docutmark	false def	%should cropping marks be printed
/invertmatrix [1 0 0 -1 0 0] def

%
%	Font limits
%
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def	%per font
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def

%%%%%%%%%%%%%%%%%%%%%%%%%
%	Memory Defs
%%%%%%%%%%%%%%%%%%%%%%%%%
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def	% New global Encoding vector.
/ILSymBEnc 256 array def	% SymbolB Encoding vector.
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Job Utilities
%%%%%%%%%%%%%%%%%%%%%%%%%
/inch {72 mul} bdf

/headerpage {
  %assumes standard PS state
  /y 11 def
  /nl {/y y .33 sub def 1 inch y inch moveto } bdf
  /#copies 1 def
  /Helvetica-Bold /ILhelvb ILEncoding ReEncode
  /ILhelvb findfont 18 scalefont setfont
  nl nl nl
  /nhlines hline length def
  nhlines 25 gt 
    {
      /lim nhlines 26 sub def 
      hline lim ((        ...)) put
    }
    { 
      /lim 0 def
    }
  ifelse
  nhlines 1 sub -1  lim { 
   hline exch get show nl
  } for
  /Helvetica findfont 8 scalefont setfont
  1 inch 1 inch moveto 
  (pl2ps )show PS_SUB PS_MINOR PS_MAJOR vershow
  (   Copyright 1988 Interleaf, Inc. ) show 
  emsg1 0 get 0 ne { 1 inch .75 inch moveto emsg1 show } if
  emsg2 0 get 0 ne { 1 inch .5 inch moveto emsg2 show } if
} bdf

/logme {
  (\tInterleaf::pl2ps ) print
  PS_SUB PS_MINOR PS_MAJOR verprint
  /nllines lline length def
  nllines 5 gt 
    {
      /lim nllines 5 sub def 
    }
    { 
      /lim 0 def
    }
  ifelse
  nllines 1 sub -1  lim { 
    (\tInterleaf::) print lline exch get print (\n) print
  } for
  flush 
} bdf

/verprint {
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (\n) print
} bdf
/vershow {
  10 mesg cvrs show (.) show 
  10 mesg cvrs show (.) show
  10 mesg cvrs show 
} bdf
    
/versioncheck {
  /PL_MAJOR xdf
  /PL_MINOR xdf
  /PL_SUB xdf
  /doheader userdict /lline known def
  PL_MAJOR PS_MAJOR ne 
  PL_MINOR PS_MINOR ne or
  PL_SUB PS_SUB ne or {
    doheader {logme } if
    (\tInterleaf:: FATAL ERROR: pspro.ps and pl2ps versions do not agree.) msg
    (\tInterleaf:: pspro.ps version: \t) print
    PS_SUB PS_MINOR PS_MAJOR verprint
    (\tInterleaf:: pl2ps version: \t) print
    PL_SUB PL_MINOR PL_MAJOR verprint
    flush 
    doheader {headerpage } if
    ( FATAL ERROR. pspro version ) show
    PS_SUB PS_MINOR PS_MAJOR vershow
    ( does not agree with pl2ps version ) show 
    PL_SUB PL_MINOR PL_MAJOR vershow
    showpage
    quit 
  } if
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Graphics
%%%%%%%%%%%%%%%%%%%%%%%%%
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf %record pl current point, in rsu
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd % add segment 
/av /moveto ldd % add vertex 
%
% startangle endangle xradius yradius rotation xcenter ycenter el
%
/el {
  matrix currentmatrix 8 1 roll % save the CTM
  translate rotate scale
  0 0 1 5 -2 roll arc
  setmatrix 			% restore CTM
} bdf

%
% startangle endangle clockwise xrad yrad rotation xcenter ycenter addconic
%
/addconic {
  matrix currentmatrix 9 1 roll	% save the CTM
  translate rotate scale
  0 0 1 6 -3 roll 1 eq {arc} {arcn} ifelse
  setmatrix			% restore CTM
} bdf

%
%	Draw current path
%
/dp40 {
  1 setlinejoin 		% round line ends  
  1 setlinecap 			% round line ends
  setgray
  stroke  
} bdf 

/dp {
  gsave
  1 setlinejoin                 % round line ends
  1 setlinecap                  % round line ends
  drawmode PL_CLEAR eq {1} {0} ifelse setgray %only support two modes
  stroke
  grestore
} bdf

%
%	Pen pattern routines
%
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def	% WARNING these values are derived 
					% by scaling widthadj[], defined
					% in /usr/xops/lib/crt/scr/pens.c,
					% by the same factor (.4) that the
					% pen patterns were scaled when
					% sent to printerleaf.
/MINSCALE .1 def			% Do not scale pen pattern below 10%
					% of original size.
% 
% Calulates length of current path. Ala cookbook.
%
/pathlength { 0 begin
    flattenpath				% changes all curveto's to lineto's
    /dist 0 def

    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}

    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put

/setpenpat { 0 begin		% define penpattern dictionary
    /style xdf			% alignment style 
    /width xdf
    /pattern xdf

    % 
    % Adjust pattern for various pen widths.
    %
    /scaleup DPIx 300 div def		% Seybold hack!!!!
    /indx width 1 add scaleup div 4 div cvi def	% Change width into an index
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def% Get ajustment for specified pen width
	/adj adj scaleup mul def	% from predefined array PENPATWIDTHADJ
					% and scale up to the resolution.
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def	% Add ajustment for pen width
	    iszero 0 ne			% to just "off" phases of pattern.
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if

    %
    % Align pattern to pathlength.
    %
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def		% Computes path length.
    pattern				% Compute total len of repeating pattern
	{patternlen add /patternlen xdf
	} forall

    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {		% from /usr/xops/lib/crt/scr/pens.c
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {		% from /usr/xops/lib/crt/scr/pens.c
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if

    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Text handling
%%%%%%%%%%%%%%%%%%%%%%%%%
/s { 
  /msp xdf
  /stEnd xdf
  /nsp xdf
  /fstr xdf

  hpos vpos moveto
  msp -1 ne
    {stEnd hpos sub fstr stringwidth pop sub nsp div 0 msp fstr widthshow}
    {fstr show}
  ifelse
  /hpos stEnd def	%adjust idea of current point
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Images
%%%%%%%%%%%%%%%%%%%%%%%%%
/ilr {
  BinaryMode
    {
     readstring
     }
    {
     readhexstring
    } ifelse
} bdf

/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf

  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval ilr pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put

/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf

  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval ilr pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put

/PL_image { 0 begin
  gsave
  /ho xdf	% upper left corner of image.
  /vo xdf	%
  /hh xdf	% Transformed upper right corner relative
  /vh xdf	% to upper left corner.
  /hv xdf	% Transformed lower left corner relative
  /vv xdf	% to upper left corner.
  /nbits xdf	% depth
  /vpix xdf	% height
  /hpix xdf	% width
  /scfrq xdf	% screen frequency
  /scang xdf	% screen angle
  /mapsz xdf	% PL_MAP data size
  /map xdf	% PL_MAP data

  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get} settransfer
  } if 
  scfrq 0 ne scang 0 ne and {
    scfrq scang currentscreen 3 1 roll pop pop setscreen
  } if
  %
  % allocate the largest amount of memory avail for reading image data...
  %
  /availmem vmstatus exch sub exch pop def
  /datasize hpix nbits mul 7 add 8 idiv vpix mul def 
  availmem 65535 gt {
    /availmem 65535 def 
  } if
  datasize availmem lt
  {
    /picstr datasize string def
  } {
    /picstr datasize vpix idiv string def 
  } ifelse
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 16 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FONT GOODIES
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	ReEncodeSubset -map character set a'la Interleaf
%	
%	snarfed from PS manual, example 22
%	At the moment, it seems like all overlays will start at char 0,
%		but we might as well be general
/reencodesubdict 12 dict def
/ReEncode {
%
%	Copy basefontdict into newfont except for the FID entry.
%	First create a new font dictionary the size of basefontdict
%	plus 2 for a FID entry which definefont will provide.
%
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict { 		% Copy basefontdict to newfont 
    exch dup /FID ne {		% except for the FID entry.
      exch newfont 3 1 roll put	% Copy entry into newfont.
    } {
      pop pop			% Remove entry from stack if equal FID.
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf

%
%	Now make a global Encoding vector
%
/insertcharnum { 0 begin	% Put /char# into entry i
  /encoding xdf			% of new encoding vector as
  /i xdf			% character names.

  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put

ILEncoding 0
[
/Aacute /Acircumflex /Adieresis /Agrave /Aring /Atilde /Ccedilla /Eacute
/Ecircumflex /Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Ntilde
/Oacute /Ocircumflex /Odieresis /Ograve /Otilde /Scaron /Uacute /Ucircumflex
/Udieresis /Ugrave /Ydieresis /Zcaron /char28 /char29 /char30 /char31
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /quotedblleft
/aacute /acircumflex /adieresis /agrave /aring /atilde /ccedilla /eacute
/ecircumflex /edieresis /egrave /iacute /icircumflex /idieresis /igrave /ntilde
/oacute /ocircumflex /odieresis /ograve /otilde /scaron /uacute /ucircumflex
/udieresis /ugrave /ydieresis /zcaron /char156 /char157 /char158 /char159
/char160 /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/char176 /endash /dagger /daggerdbl /periodcentered /char181 /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /char190 /questiondown
/char192 /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /char201 /ring /cedilla /char204 /hungarumlaut /ogonek /caron
/emdash /char209 /char210 /char211 /char212 /char213 /char214 /char215
/char216 /char217 /char218 /char219 /char220 /char221 /char222 /char223
/char224 /AE /char226 /ordfeminine /char228 /char229 /char230 /char231
/Lslash /Oslash /OE /ordmasculine /char236 /char237 /char238 /char239
/char240 /ae /char242 /char243 /char244 /dotlessi /char246 /char247
/lslash /oslash /oe /germandbls /char252 /char253 /char254 /char255
] putinterval
%
%	Create a dictionary entry in "fontmap" indexed by
%	PL fontnames with PS names and sizes as entries
%	a call is of the form:    /timsps10 /ILtims 10 map
%
/map {
  2 dict begin
  /pssize xdf
  /psname xdf
  fontmap exch currentdict put	% install it, PL_name is the index
  end
} bdf

%
%	Symbol_B character encoding vector. Encodes IL char num to PS
%	symbol names.
%
ILSymBEnc 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymBEnc insertcharnum } for
127 1 255 {ILSymBEnc insertcharnum } for

/declareFont { 0 begin
    /PLnum xdf
    /PLname xdf 

    { % if useNativeFont
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } { % else NonNativeFont
	PSfontobj PLnum % into the Plnum'th object make a dictionary:
	10 dict dup begin
	    /FontType 3 def
	    % scale 300 dpi downloaded fonts to target resolution (1270/300).
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def	%updated by LoadGlyph
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end %BuildChar dict
	    }def %BuildChar
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def %scale factors irrelevant
	    /CharData MAXCHARS dict def	% CharData is built by LoadGlyph.
	end %font dictionary defn
	PLname exch definefont  put

	%load a bogus space character in case no one does
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse % useNativeFonts
    end
} def
/declareFont load 0 3 dict put

/numLoadEmptyGlyph { 0 begin
	% by number, load font data for char with width but no bits
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put

/LoadEmptyGlyph { 0 begin
	% by name, load font data for char with width but no bits
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put

/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf

/timeToQuit {
%	initialstate restore
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
%	headerpage showpage
	stop
} bdf

/LoadGlyph { 0 begin
	% load a glyph into the CharData entry of PSFontobj[fontno]
	% the entry is in the position implied by charno
	% and with the metrics height, width, lsb

	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf

	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	   %actually, we pass bitmap rounded to 16 bits wide:
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def %the font dict
		% if we are loading glyphs, PSfontobj is an array of
		% dictionaries each of which already has the form
		% of Program 21, PS T&C
	/charname thefont /Encoding get charno get def %access by name !

	%now make the parameters for the CharData
	% 1 unit = 1 pixel
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def	%lower left of bbox
	/llx  lsb def
	/urx hsize lsb add def %upper right
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put

/sf { PSfontobj exch get setfont } bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FILL PATTERNS
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Fill patterns by clipping a rectangle filled with characters
%
%	IL patterns are presently on 32x32 tiles, even if there is a subtile
%	which would define the whole pattern. However, we attempt generality
%	here grayArray determines whether to use grayscale for some patterns
%	even if not using native patterns
%
/patternstring	1 string def
/grayArray [	%indexed by position in IL pattern font, -1 means not grayscale 
		% others are fraction of  WHITE
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [ %when using grayscale as complete simulation
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def

%
%	THE APPLICATION CALLS:
%
/fillpatset40 {			% fillpatset for 4.0
    /patchar xdf
    /pfindex xdf
    /patIsGray false def	% tining is done by color lib
} bdf

/fillpatset {			% fnum patchar fillpatset
    /patchar xdf		% selects pattern ch in font fnum
    /pfindex xdf
    patgraylevel dup 0 ge {	% The extra call to patgraylevel
	/patIsGray true def	% is needed because PS computes
	/patgray xdf		% both operands of an "and" operator
    } {				% even if the first is false.
	pop /patIsGray false def
    } ifelse
} bdf

/fp {
    /useNativePattern xdf

    gsave
    pfindex 0 eq patchar 0 eq and {		% special case 
	/patIsGray true def
	/patgray 0 def
    } if

    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativePattern {			% native non gray fill patterns
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf

%
%	Private implementation procedures
%

%	Before invoking pfill, you must have set the pattern
%	font as the current font.
%	pfill will cause a newpath, just as do fill and stroke.
%
/pfill {
  gsave 1 setgray eofill grestore % must fill on white
  setupfactors setupregion blastchars
  newpath
} bdf

/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  patternstring stringwidth pop /paty exch def /patx paty def
} bdf

/setupregion {
  eoclip	
  pathbbox
    /ry exch floor  def
    /rx exch floor  def
    /ly exch ceiling cvi
      dup 0 lt{paty sub}if cvi		%We need (lx,ly) modulo (patx,paty)
      dup paty ceiling cvi mod  sub  def	%in device space coords.
    /lx exch ceiling cvi
      dup 0 lt{patx sub}if cvi
      dup patx ceiling cvi mod  sub  def

    /ry ry paty add def		%we are painting downwards as positive
    /ly ly paty sub def

  newpath
} bdf

/blastchars {
  /#chars  rx lx sub patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf

/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf

% 
%	Non gray Native fill pattern. Right out of the PS cook book page 192.
%
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def

 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf

  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end

/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf

   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def

   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if

   frequency newscreenangle /spotfunction load setscreen
  end % setuserscreendict begin
} bdf

/setpatterndict 32 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end % setpatterndict begin

/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end % setpatterndict begin
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf

  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end % setpatterndict begin
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf

 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 gsave eofill grestore
} bdf

/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Page
%%%%%%%%%%%%%%%%%%%%%%%%%
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } bdf %prints N copies

%
% 	Define clipping path
%
/clp {initclip newpath av as as as closepath clip } bdf

%
%	Cutting marks for typsetter paper
%
/cutmark { 0 begin
  /pw DPIx 40 div def		% pen width
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def

  initclip
  pw sw
  /lnx4 lnx 4 div def
  [lnx lnx4 sub lnx4 2 mul] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0.0 dp
  end
} bdf
/cutmark load 0 5 dict put
%(pspro.ps version 4.0.5 download complete.\n) print flush
%%EndProlog
%!
%	InterLeaf to Postscript fontname mapping
%
/fontmap 13 dict def
	/marks:Ops10 /ILtims 10 map
	/errors:Ops10 /ILtims 10 map
	/wst:timsps10 /ILtims 10 map
	/wst:timsps12 /ILtims 12 map
	/wst:timsps12b /ILtimsb 12 map
	/wst:timsps14b /ILtimsb 14 map
	/wst:helvps6 /ILhelv 6 map
	/wst:helvps8 /ILhelv 8 map
	/wst:helvps8b /ILhelvb 8 map
	/wst:helvps9 /ILhelv 9 map
	/wst:helvps9b /ILhelvb 9 map
	/wst:helvps10 /ILhelv 10 map
	/wst:helvps10b /ILhelvb 10 map
%
%	Create and ReEncode the following fonts.
%
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Helvetica /ILhelv ILEncoding ReEncode
/Helvetica-Bold /ILhelvb ILEncoding ReEncode
%!
% >> pl2ps version 4.0.5
5 0 4 versioncheck
/hline 5 array def
hline 4 (For: millette.docp.r_d.D297 ) put
hline 3 (Printed on: Thu, Feb 18, 1993 16:41:34 ) put
hline 2 ( ) put
hline 1 (Document: Update_fig_1 ) put
hline 0 (Last saved on: Thu, Feb 18, 1993 16:41:23 ) put
/lline 5 array def
lline 4 (For: millette.docp.r_d.D297 ) put
lline 3 (Printed on: Thu, Feb 18, 1993 16:41:34 ) put
lline 2 ( ) put
lline 1 (Document: Update_fig_1 ) put
lline 0 (Last saved on: Thu, Feb 18, 1993 16:41:23 ) put
%% logme
%% letter
/initialstate save def
/PSpagelength 13970 def
/PSpagewidth 10795 def
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
/PSfontobj 86 array def
/BinaryMode false def
bop
0 13970 neg translate
0 13970 10795 13970 10795 0 0 0 clp
true /wst:timsps10 5 declareFont
5 sf
9521.0 558.0 m
5396.0 h
1270.0 h
9521.0 13308.0 m
5396.0 h
1270.0 h
true /wst:helvps10b 6 declareFont
6 sf
2350.0 7963.0 m
0.0 0.0 m
17.0 sw
/drawmode PL_SET def
newpath
90.0000 450.0000 686 206 0.0000 3282 3428 el
[] 0 setdash
0.0000 dp40
newpath
2596 3451 av
2596 4882 as
0.0000 dp40
newpath
3968 3451 av
3968 4882 as
0.0000 dp40
newpath
48.1699 138.1869 1 969.8656 969.8604 -3.1701 3282.1998 3157.2071 addconic
0.0000 dp40
newpath
48.1699 138.1869 1 969.8656 969.8604 -3.1701 3282.1998 3642.2071 addconic
0.0000 dp40
newpath
48.1699 138.1869 1 969.8656 969.8604 -3.1701 3282.1998 4196.2071 addconic
0.0000 dp40
true /wst:helvps8 7 declareFont
7 sf
2981.0 3818.0 m
0.0000 setgray
<5265676973747279> 0 3496 -1 s
2981.0 3973.0 m
0.0000 setgray
<4461746162617365> 0 3582 -1 s
true /wst:helvps8b 8 declareFont
8 sf
2863.0 3460.0 m
0.0000 setgray
<4469736b204d656d6f7279> 1 3738 32 s
7 sf
2981.0 4358.0 m
0.0000 setgray
<4c6f672046696c65> 1 3480 32 s
2930.0 4850.0 m
0.0000 setgray
<5265706c696361204c697374> 1 3655 32 s
0.0 0.0 m
newpath
3688 4190 av
3786 4132 as
0.0000 dp40
newpath
0.0 sw
3806 4073 av
3806 4073 as
3864 4088 as
3688 4190 as
3790 4014 as
3806 4073 as
gsave
0.0000 setgray
eofill
grestore
newpath
3806 4073 av
newpath
17.0 sw
3806 4073 av
3864 4088 as
3688 4190 as
3790 4014 as
closepath
0.0000 dp40
0.0 sw
newpath
3688 4190 av
closepath
17.0 sw
newpath
4892 2178 av
6058 2178 as
6058 2178 as
6058 2796 as
4892 2796 as
4892 2178 as
0.0000 dp40
true /wst:helvps9 9 declareFont
9 sf
5232.0 2380.0 m
0.0000 setgray
<4d6173746572> 0 5716 -1 s
5188.0 2555.0 m
0.0000 setgray
<5365637572697479> 0 5760 -1 s
5241.0 2729.0 m
0.0000 setgray
<536572766572> 0 5708 -1 s
0.0 0.0 m
newpath
7499 5194 av
8405 5194 as
8405 5194 as
8405 6592 as
7499 6592 as
7499 5194 as
0.0000 dp40
8 sf
7581.0 5341.0 m
0.0000 setgray
<50726f7061676174696f6e> 0 8402 -1 s
7581.0 5496.0 m
0.0000 setgray
<205175657565> 1 8058 32 s
true /wst:helvps6 10 declareFont
10 sf
7581.0 5677.0 m
0.0000 setgray
<557064617465> 0 7923 -1 s
0.0000 setgray
<20312c> 1 8040 32 s
7581.0 5794.0 m
0.0000 setgray
<312f31372f38392c20383a3435> 1 8198 32 s
7581.0 5911.0 m
6028.0 v
0.0000 setgray
<55706461746520322c> 1 8040 32 s
7581.0 6145.0 m
0.0000 setgray
<312f31372f38392c20393a3330> 1 8198 32 s
7581.0 6262.0 m
0.0000 setgray
<202e> 1 7639 32 s
7581.0 6379.0 m
0.0000 setgray
<202e> 1 7639 32 s
7581.0 6497.0 m
0.0000 setgray
<202e> 1 7639 32 s
0.0 0.0 m
newpath
7499 5524 av
8405 5524 as
0.0000 dp40
newpath
2592 5665 av
3909 5665 as
3909 5665 as
3909 6590 as
2592 6590 as
2592 5665 as
0.0000 dp40
8 sf
2663.0 5820.0 m
0.0000 setgray
<5265706c696361> 0 3163 -1 s
0.0000 setgray
<204c697374> 1 3452 32 s
7 sf
0.0000 setgray
<20> 1 3491 32 s
10 sf
2689.0 6014.0 m
0.0000 setgray
<6d616368696e65> 0 3090 -1 s
0.0000 setgray
<2041207570646174652031> 3 3631 32 s
2689.0 6131.0 m
0.0000 setgray
<6d616368696e652042207570646174652031> 3 3631 32 s
2689.0 6248.0 m
0.0000 setgray
<202e> 1 2747 32 s
2689.0 6365.0 m
0.0000 setgray
<202e> 1 2747 32 s
2689.0 6482.0 m
0.0000 setgray
<202e> 1 2747 32 s
2689.0 6599.0 m
0.0000 setgray
<20> 1 2718 32 s
0.0 0.0 m
newpath
4923 3833 av
5706 3833 as
5706 3833 as
5706 4731 as
4923 4731 as
4923 3833 as
0.0000 dp40
newpath
4951 4030 av
5706 4032 as
0.0000 dp40
5033.0 4194.0 m
0.0000 setgray
<5570646174652031> 1 5463 32 s
5033.0 4311.0 m
0.0000 setgray
<5570646174652032> 1 5463 32 s
5033.0 4428.0 m
0.0000 setgray
<202e> 1 5091 32 s
5033.0 4545.0 m
0.0000 setgray
<202e> 1 5091 32 s
5033.0 4662.0 m
0.0000 setgray
<202e> 1 5091 32 s
5033.0 4779.0 m
0.0000 setgray
<20> 1 5062 32 s
0.0 0.0 m
newpath
-38.9695 51.0002 1 447.0638 447.0801 6.4973 8178.8326 4004.0345 addconic
8213 3489 av
-129.8057 -39.7286 1 378.7453 378.7439 45.0000 8178.7115 3866.1892 addconic
7732 3352 av
-134.7555 -44.6870 1 460.0656 460.0938 18.1922 7937.7289 3763.5204 addconic
7401 3422 av
-132.3458 -42.2375 1 269.4376 269.4301 0.0000 7582.4942 3621.1338 addconic
8200 4696 av
47.9889 -41.8751 0 319.0971 319.1174 37.9819 8177.5880 4377.6797 addconic
7146 3883 av
-145.0531 -55.1162 1 447.0923 447.0985 -39.3450 7591.7779 3848.7165 addconic
7435 4541 av
143.5866 53.6171 0 342.9060 342.9163 13.2825 7750.3411 4406.2892 addconic
7113 4197 av
164.3702 74.4294 0 342.9021 342.8978 22.5000 7453.4395 4238.0191 addconic
7115 3764 av
-135.1582 134.9275 0 342.9195 342.9087 -7.9727 7389.3375 3969.7403 addconic
7778 4664 av
141.8689 51.7978 0 342.9036 342.9140 0.0000 8047.7281 4452.2635 addconic
0.0000 dp40
newpath
5495 1678 av
5495 2168 as
0.0000 dp40
newpath
5495 2168 av
5509 2041 as
0.0000 dp40
newpath
0.0 sw
5495 2002 av
5495 2002 as
5548 1972 as
5495 2168 as
5443 1972 as
5495 2002 as
gsave
0.0000 setgray
eofill
grestore
newpath
5495 2002 av
newpath
17.0 sw
5495 2002 av
5548 1972 as
5495 2168 as
5443 1972 as
closepath
0.0000 dp40
0.0 sw
newpath
5495 2168 av
closepath
9 sf
7461.0 4008.0 m
0.0000 setgray
<5265676973747279> 0 8042 -1 s
0.0000 setgray
<20> 1 8086 32 s
7461.0 4183.0 m
0.0000 setgray
<4461746162617365> 0 8139 -1 s
0.0 0.0 m
17.0 sw
newpath
5468 2796 av
6908 3903 as
0.0000 dp40
newpath
6988 4002 av
6908 3903 as
0.0000 dp40
newpath
0.0 sw
6871 3885 av
6871 3885 as
6886 3826 as
6988 4002 as
6812 3901 as
6871 3885 as
gsave
0.0000 setgray
eofill
grestore
newpath
6871 3885 av
newpath
17.0 sw
6871 3885 av
6886 3826 as
6988 4002 as
6812 3901 as
closepath
0.0000 dp40
0.0 sw
newpath
6988 4002 av
closepath
7043.0 2016.0 m
0.0000 setgray
<54686520736572766572206170706c69657320746865> 3 8609 32 s
7043.0 2191.0 m
0.0000 setgray
<75706461746520746f20746865206461746162617365> 3 8662 32 s
7043.0 2365.0 m
0.0000 setgray
<696e207669727475616c206d656d6f727920616e64> 3 8556 32 s
7043.0 2540.0 m
0.0000 setgray
<746f206974732070726f7061676174696f6e> 2 8257 32 s
7043.0 2715.0 m
0.0000 setgray
<71756575652e20506572696f646963616c6c79> 1 8380 32 s
8368.0 h
0.0000 setgray
<2c20746865> 1 8676 32 s
7043.0 2890.0 m
0.0000 setgray
<736572766572207772697465732074686520646174612d> 3 8610 32 s
7043.0 3065.0 m
0.0000 setgray
<6261736520696e207669727475616c206d656d6f7279> 3 8635 32 s
7043.0 3240.0 m
0.0000 setgray
<746f206469736b2e> 1 7544 32 s
4468.0 4964.0 m
0.0000 setgray
<546865207365727665722073746f726573206120636f7079206f66> 5 6386 32 s
4468.0 5139.0 m
0.0000 setgray
<656163682075706461746520696e20746865206c6f672066696c652e> 5 6315 32 s
4468.0 5313.0 m
0.0000 setgray
<546869732066696c65206973207573656420696e20746865206576656e74206f66> 7 6596 32 s
4468.0 5488.0 m
0.0000 setgray
<6120736572766572207265737461727420746f206170706c7920616c6c206f75742d> 6 6650 32 s
4468.0 5663.0 m
0.0000 setgray
<7374616e64696e67207570646174657320746f20746865206469736b> 4 6438 32 s
4468.0 5838.0 m
0.0000 setgray
<636f7079206f662074686520646174616261736520616e6420746f207265b1> 6 6694 32 s
4468.0 6013.0 m
0.0000 setgray
<637265617465207468652070726f6761676174696f6e2071756575652e20> 4 6624 32 s
true /wst:helvps9b 11 declareFont
11 sf
4870.0 1560.0 m
0.0000 setgray
<446174616261736520557064617465> 1 6157 32 s
9 sf
6942.0 6777.0 m
0.0000 setgray
<546865206d6173746572207265706c696361207573657320697473> 4 8833 32 s
6942.0 6952.0 m
0.0000 setgray
<70726f7061676174696f6e20717565756520746f2070726f70612d> 3 8940 32 s
6942.0 7126.0 m
0.0000 setgray
<67617465207570646174657320746f20736c617665207265706c696361732e> 4 9079 32 s
6942.0 7301.0 m
0.0000 setgray
<5768656e20746865206d6173746572207265706c6963612072652d> 4 8896 32 s
6942.0 7476.0 m
0.0000 setgray
<7374617274732c20697420726573746f726573207468652070726f676167612d> 4 9054 32 s
6942.0 7651.0 m
0.0000 setgray
<74696f6e2071756575652066726f6d20746865206c6f672066696c652e20> 6 8895 32 s
0.0 0.0 m
17.0 sw
newpath
2588 5850 av
3909 5850 as
0.0000 dp40
newpath
2350 1270 av
9314 1270 as
9314 1270 as
9314 7979 as
2350 7979 as
2350 1270 as
0.0000 dp40
2486.0 6828.0 m
0.0000 setgray
<466f722065616368207265706c69636120696e207468652063656c6c2c> 5 4377 32 s
2486.0 7003.0 m
0.0000 setgray
<746865207265706c696361206c69737420636f6e7461696e7320746865> 4 4350 32 s
2486.0 7177.0 m
0.0000 setgray
<7265706c69636127> 0 2987 -1 s
2984.0 h
0.0000 setgray
<73206e6574776f726b2061646472657373> 2 4269 32 s
2486.0 7352.0 m
0.0000 setgray
<616e642049442c2063656c6cb172656c6174697665206e616d652c> 3 4360 32 s
2486.0 7527.0 m
0.0000 setgray
<616e64207468652073657175656e6365206e756d626572> 3 4325 32 s
2486.0 7702.0 m
0.0000 setgray
<6f6620746865207265706c69636127> 2 3427 32 s
3424.0 h
0.0000 setgray
<73206c617374207570646174652e> 2 4365 32 s
8 sf
5027.0 4002.0 m
0.0000 setgray
<4c6f67> 0 5285 -1 s
0.0000 setgray
<2046696c65> 1 5566 32 s
0.0 0.0 m
newpath
7907 4794 av
7907 5184 as
0.0000 dp40
newpath
5468 2796 av
3841 4032 as
0.0000 dp40
newpath
3282 5167 av
3282 5665 as
0.0000 dp40
newpath
3968 4201 av
4923 4201 as
0.0000 dp40
9335.0 7963.0 m
6 sf
eop
initialstate restore
end % tempdict
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Helvetica
%%+ Helvetica-Bold

%%EndDocument 
EPSE 2503 Y 236 X F5(27{8)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 443 23
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1377 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1377 215 XY F5(Overview)S 1564 X(of)S 1612 X(DCE)S 1714 X(Security)S
195 232 XY 1669 5 R 419 Y 177 X(Figure)S 309 X(27{4.)S 461 X(Slave)S
578 X(Replica)S 731 X(Update)S 878 X(Process)S 519 1667 XY 
0.000000 0.000000 750 EPSB
%%BeginDocument: /u1/BOOKS/BUILD/dce_books_sgml/admin_gd_core/eps/1_over_40.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 396.00 382.00
-7.00 3.00 translate
% original bounding box was  7.0 -3.0 403.0 379.0
%%DocumentFonts: (atend)
%%Endcomments
1.0 dup scale 
/tempdict 300 dict def
tempdict begin
-1.75 72 mul -4.75 72 mul translate
%  Copyright 1987 Interleaf, Inc.
%  Ten Canal Park, Cambridge, MA  02141
%%%%%%%%%%%%%%%%%%%%%%%%%
%	PS macros
%%%%%%%%%%%%%%%%%%%%%%%%%
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/msg { print (\n) print flush} bdf

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%	global constants and variables
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Version
%
/PS_MAJOR	4 def	%Nov 3, 1987
/PS_MINOR	0 def	%Nov 3, 1987
/PS_SUB		5 def	%Nov 3, 1987

%
%	Drawing modes
%
/PL_SET 	0 def		%ink black
/PL_CLEAR	1 def		%ink white
/PL_XOR		2 def		%ink by xor'ing source onto page - can PS do it?
/PL_REPLACE	3 def		%ink by replacing, e.g. overlayed bitmaps

%
%	 Default global PS state 
%
/drawmode	PL_SET def	%default is ink black
/docutmark	false def	%should cropping marks be printed
/invertmatrix [1 0 0 -1 0 0] def

%
%	Font limits
%
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def	%per font
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def

%%%%%%%%%%%%%%%%%%%%%%%%%
%	Memory Defs
%%%%%%%%%%%%%%%%%%%%%%%%%
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def	% New global Encoding vector.
/ILSymBEnc 256 array def	% SymbolB Encoding vector.
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Job Utilities
%%%%%%%%%%%%%%%%%%%%%%%%%
/inch {72 mul} bdf

/headerpage {
  %assumes standard PS state
  /y 11 def
  /nl {/y y .33 sub def 1 inch y inch moveto } bdf
  /#copies 1 def
  /Helvetica-Bold /ILhelvb ILEncoding ReEncode
  /ILhelvb findfont 18 scalefont setfont
  nl nl nl
  /nhlines hline length def
  nhlines 25 gt 
    {
      /lim nhlines 26 sub def 
      hline lim ((        ...)) put
    }
    { 
      /lim 0 def
    }
  ifelse
  nhlines 1 sub -1  lim { 
   hline exch get show nl
  } for
  /Helvetica findfont 8 scalefont setfont
  1 inch 1 inch moveto 
  (pl2ps )show PS_SUB PS_MINOR PS_MAJOR vershow
  (   Copyright 1988 Interleaf, Inc. ) show 
  emsg1 0 get 0 ne { 1 inch .75 inch moveto emsg1 show } if
  emsg2 0 get 0 ne { 1 inch .5 inch moveto emsg2 show } if
} bdf

/logme {
  (\tInterleaf::pl2ps ) print
  PS_SUB PS_MINOR PS_MAJOR verprint
  /nllines lline length def
  nllines 5 gt 
    {
      /lim nllines 5 sub def 
    }
    { 
      /lim 0 def
    }
  ifelse
  nllines 1 sub -1  lim { 
    (\tInterleaf::) print lline exch get print (\n) print
  } for
  flush 
} bdf

/verprint {
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (.) print 
  10 mesg cvrs print (\n) print
} bdf
/vershow {
  10 mesg cvrs show (.) show 
  10 mesg cvrs show (.) show
  10 mesg cvrs show 
} bdf
    
/versioncheck {
  /PL_MAJOR xdf
  /PL_MINOR xdf
  /PL_SUB xdf
  /doheader userdict /lline known def
  PL_MAJOR PS_MAJOR ne 
  PL_MINOR PS_MINOR ne or
  PL_SUB PS_SUB ne or {
    doheader {logme } if
    (\tInterleaf:: FATAL ERROR: pspro.ps and pl2ps versions do not agree.) msg
    (\tInterleaf:: pspro.ps version: \t) print
    PS_SUB PS_MINOR PS_MAJOR verprint
    (\tInterleaf:: pl2ps version: \t) print
    PL_SUB PL_MINOR PL_MAJOR verprint
    flush 
    doheader {headerpage } if
    ( FATAL ERROR. pspro version ) show
    PS_SUB PS_MINOR PS_MAJOR vershow
    ( does not agree with pl2ps version ) show 
    PL_SUB PL_MINOR PL_MAJOR vershow
    showpage
    quit 
  } if
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Graphics
%%%%%%%%%%%%%%%%%%%%%%%%%
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf %record pl current point, in rsu
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd % add segment 
/av /moveto ldd % add vertex 
%
% startangle endangle xradius yradius rotation xcenter ycenter el
%
/el {
  matrix currentmatrix 8 1 roll % save the CTM
  translate rotate scale
  0 0 1 5 -2 roll arc
  setmatrix 			% restore CTM
} bdf

%
% startangle endangle clockwise xrad yrad rotation xcenter ycenter addconic
%
/addconic {
  matrix currentmatrix 9 1 roll	% save the CTM
  translate rotate scale
  0 0 1 6 -3 roll 1 eq {arc} {arcn} ifelse
  setmatrix			% restore CTM
} bdf

%
%	Draw current path
%
/dp40 {
  1 setlinejoin 		% round line ends  
  1 setlinecap 			% round line ends
  setgray
  stroke  
} bdf 

/dp {
  gsave
  1 setlinejoin                 % round line ends
  1 setlinecap                  % round line ends
  drawmode PL_CLEAR eq {1} {0} ifelse setgray %only support two modes
  stroke
  grestore
} bdf

%
%	Pen pattern routines
%
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def	% WARNING these values are derived 
					% by scaling widthadj[], defined
					% in /usr/xops/lib/crt/scr/pens.c,
					% by the same factor (.4) that the
					% pen patterns were scaled when
					% sent to printerleaf.
/MINSCALE .1 def			% Do not scale pen pattern below 10%
					% of original size.
% 
% Calulates length of current path. Ala cookbook.
%
/pathlength { 0 begin
    flattenpath				% changes all curveto's to lineto's
    /dist 0 def

    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}

    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put

/setpenpat { 0 begin		% define penpattern dictionary
    /style xdf			% alignment style 
    /width xdf
    /pattern xdf

    % 
    % Adjust pattern for various pen widths.
    %
    /scaleup DPIx 300 div def		% Seybold hack!!!!
    /indx width 1 add scaleup div 4 div cvi def	% Change width into an index
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def% Get ajustment for specified pen width
	/adj adj scaleup mul def	% from predefined array PENPATWIDTHADJ
					% and scale up to the resolution.
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def	% Add ajustment for pen width
	    iszero 0 ne			% to just "off" phases of pattern.
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if

    %
    % Align pattern to pathlength.
    %
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def		% Computes path length.
    pattern				% Compute total len of repeating pattern
	{patternlen add /patternlen xdf
	} forall

    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {		% from /usr/xops/lib/crt/scr/pens.c
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {		% from /usr/xops/lib/crt/scr/pens.c
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val cvi put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if

    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Text handling
%%%%%%%%%%%%%%%%%%%%%%%%%
/s { 
  /msp xdf
  /stEnd xdf
  /nsp xdf
  /fstr xdf

  hpos vpos moveto
  msp -1 ne
    {stEnd hpos sub fstr stringwidth pop sub nsp div 0 msp fstr widthshow}
    {fstr show}
  ifelse
  /hpos stEnd def	%adjust idea of current point
} bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Images
%%%%%%%%%%%%%%%%%%%%%%%%%
/ilr {
  BinaryMode
    {
     readstring
     }
    {
     readhexstring
    } ifelse
} bdf

/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf

  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval ilr pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put

/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf

  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval ilr pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put

/PL_image { 0 begin
  gsave
  /ho xdf	% upper left corner of image.
  /vo xdf	%
  /hh xdf	% Transformed upper right corner relative
  /vh xdf	% to upper left corner.
  /hv xdf	% Transformed lower left corner relative
  /vv xdf	% to upper left corner.
  /nbits xdf	% depth
  /vpix xdf	% height
  /hpix xdf	% width
  /scfrq xdf	% screen frequency
  /scang xdf	% screen angle
  /mapsz xdf	% PL_MAP data size
  /map xdf	% PL_MAP data

  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get} settransfer
  } if 
  scfrq 0 ne scang 0 ne and {
    scfrq scang currentscreen 3 1 roll pop pop setscreen
  } if
  %
  % allocate the largest amount of memory avail for reading image data...
  %
  /availmem vmstatus exch sub exch pop def
  /datasize hpix nbits mul 7 add 8 idiv vpix mul def 
  availmem 65535 gt {
    /availmem 65535 def 
  } if
  datasize availmem lt
  {
    /picstr datasize string def
  } {
    /picstr datasize vpix idiv string def 
  } ifelse
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr ilr pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 16 dict put

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FONT GOODIES
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	ReEncodeSubset -map character set a'la Interleaf
%	
%	snarfed from PS manual, example 22
%	At the moment, it seems like all overlays will start at char 0,
%		but we might as well be general
/reencodesubdict 12 dict def
/ReEncode {
%
%	Copy basefontdict into newfont except for the FID entry.
%	First create a new font dictionary the size of basefontdict
%	plus 2 for a FID entry which definefont will provide.
%
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict { 		% Copy basefontdict to newfont 
    exch dup /FID ne {		% except for the FID entry.
      exch newfont 3 1 roll put	% Copy entry into newfont.
    } {
      pop pop			% Remove entry from stack if equal FID.
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf

%
%	Now make a global Encoding vector
%
/insertcharnum { 0 begin	% Put /char# into entry i
  /encoding xdf			% of new encoding vector as
  /i xdf			% character names.

  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put

ILEncoding 0
[
/Aacute /Acircumflex /Adieresis /Agrave /Aring /Atilde /Ccedilla /Eacute
/Ecircumflex /Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Ntilde
/Oacute /Ocircumflex /Odieresis /Ograve /Otilde /Scaron /Uacute /Ucircumflex
/Udieresis /Ugrave /Ydieresis /Zcaron /char28 /char29 /char30 /char31
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /quotedblleft
/aacute /acircumflex /adieresis /agrave /aring /atilde /ccedilla /eacute
/ecircumflex /edieresis /egrave /iacute /icircumflex /idieresis /igrave /ntilde
/oacute /ocircumflex /odieresis /ograve /otilde /scaron /uacute /ucircumflex
/udieresis /ugrave /ydieresis /zcaron /char156 /char157 /char158 /char159
/char160 /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/char176 /endash /dagger /daggerdbl /periodcentered /char181 /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /char190 /questiondown
/char192 /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /char201 /ring /cedilla /char204 /hungarumlaut /ogonek /caron
/emdash /char209 /char210 /char211 /char212 /char213 /char214 /char215
/char216 /char217 /char218 /char219 /char220 /char221 /char222 /char223
/char224 /AE /char226 /ordfeminine /char228 /char229 /char230 /char231
/Lslash /Oslash /OE /ordmasculine /char236 /char237 /char238 /char239
/char240 /ae /char242 /char243 /char244 /dotlessi /char246 /char247
/lslash /oslash /oe /germandbls /char252 /char253 /char254 /char255
] putinterval
%
%	Create a dictionary entry in "fontmap" indexed by
%	PL fontnames with PS names and sizes as entries
%	a call is of the form:    /timsps10 /ILtims 10 map
%
/map {
  2 dict begin
  /pssize xdf
  /psname xdf
  fontmap exch currentdict put	% install it, PL_name is the index
  end
} bdf

%
%	Symbol_B character encoding vector. Encodes IL char num to PS
%	symbol names.
%
ILSymBEnc 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymBEnc insertcharnum } for
127 1 255 {ILSymBEnc insertcharnum } for

/declareFont { 0 begin
    /PLnum xdf
    /PLname xdf 

    { % if useNativeFont
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } { % else NonNativeFont
	PSfontobj PLnum % into the Plnum'th object make a dictionary:
	10 dict dup begin
	    /FontType 3 def
	    % scale 300 dpi downloaded fonts to target resolution (1270/300).
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def	%updated by LoadGlyph
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end %BuildChar dict
	    }def %BuildChar
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def %scale factors irrelevant
	    /CharData MAXCHARS dict def	% CharData is built by LoadGlyph.
	end %font dictionary defn
	PLname exch definefont  put

	%load a bogus space character in case no one does
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse % useNativeFonts
    end
} def
/declareFont load 0 3 dict put

/numLoadEmptyGlyph { 0 begin
	% by number, load font data for char with width but no bits
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put

/LoadEmptyGlyph { 0 begin
	% by name, load font data for char with width but no bits
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put

/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf

/timeToQuit {
%	initialstate restore
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
%	headerpage showpage
	stop
} bdf

/LoadGlyph { 0 begin
	% load a glyph into the CharData entry of PSFontobj[fontno]
	% the entry is in the position implied by charno
	% and with the metrics height, width, lsb

	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf

	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	   %actually, we pass bitmap rounded to 16 bits wide:
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def %the font dict
		% if we are loading glyphs, PSfontobj is an array of
		% dictionaries each of which already has the form
		% of Program 21, PS T&C
	/charname thefont /Encoding get charno get def %access by name !

	%now make the parameters for the CharData
	% 1 unit = 1 pixel
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def	%lower left of bbox
	/llx  lsb def
	/urx hsize lsb add def %upper right
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put

/sf { PSfontobj exch get setfont } bdf

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	FILL PATTERNS
%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Fill patterns by clipping a rectangle filled with characters
%
%	IL patterns are presently on 32x32 tiles, even if there is a subtile
%	which would define the whole pattern. However, we attempt generality
%	here grayArray determines whether to use grayscale for some patterns
%	even if not using native patterns
%
/patternstring	1 string def
/grayArray [	%indexed by position in IL pattern font, -1 means not grayscale 
		% others are fraction of  WHITE
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [ %when using grayscale as complete simulation
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def

%
%	THE APPLICATION CALLS:
%
/fillpatset40 {			% fillpatset for 4.0
    /patchar xdf
    /pfindex xdf
    /patIsGray false def	% tining is done by color lib
} bdf

/fillpatset {			% fnum patchar fillpatset
    /patchar xdf		% selects pattern ch in font fnum
    /pfindex xdf
    patgraylevel dup 0 ge {	% The extra call to patgraylevel
	/patIsGray true def	% is needed because PS computes
	/patgray xdf		% both operands of an "and" operator
    } {				% even if the first is false.
	pop /patIsGray false def
    } ifelse
} bdf

/fp {
    /useNativePattern xdf

    gsave
    pfindex 0 eq patchar 0 eq and {		% special case 
	/patIsGray true def
	/patgray 0 def
    } if

    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativePattern {			% native non gray fill patterns
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf

%
%	Private implementation procedures
%

%	Before invoking pfill, you must have set the pattern
%	font as the current font.
%	pfill will cause a newpath, just as do fill and stroke.
%
/pfill {
  gsave 1 setgray eofill grestore % must fill on white
  setupfactors setupregion blastchars
  newpath
} bdf

/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  patternstring stringwidth pop /paty exch def /patx paty def
} bdf

/setupregion {
  eoclip	
  pathbbox
    /ry exch floor  def
    /rx exch floor  def
    /ly exch ceiling cvi
      dup 0 lt{paty sub}if cvi		%We need (lx,ly) modulo (patx,paty)
      dup paty ceiling cvi mod  sub  def	%in device space coords.
    /lx exch ceiling cvi
      dup 0 lt{patx sub}if cvi
      dup patx ceiling cvi mod  sub  def

    /ry ry paty add def		%we are painting downwards as positive
    /ly ly paty sub def

  newpath
} bdf

/blastchars {
  /#chars  rx lx sub patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf

/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf

% 
%	Non gray Native fill pattern. Right out of the PS cook book page 192.
%
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def

 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf

  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end

/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf

   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def

   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if

   frequency newscreenangle /spotfunction load setscreen
  end % setuserscreendict begin
} bdf

/setpatterndict 32 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end % setpatterndict begin

/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end % setpatterndict begin
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf

  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end % setpatterndict begin
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf

 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 gsave eofill grestore
} bdf

/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def

%
%%%%%%%%%%%%%%%%%%%%%%%%%
%	Page
%%%%%%%%%%%%%%%%%%%%%%%%%
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } bdf %prints N copies

%
% 	Define clipping path
%
/clp {initclip newpath av as as as closepath clip } bdf

%
%	Cutting marks for typsetter paper
%
/cutmark { 0 begin
  /pw DPIx 40 div def		% pen width
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def

  initclip
  pw sw
  /lnx4 lnx 4 div def
  [lnx lnx4 sub lnx4 2 mul] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0.0 dp
  end
} bdf
/cutmark load 0 5 dict put
%(pspro.ps version 4.0.5 download complete.\n) print flush
%%EndProlog
%!
%	InterLeaf to Postscript fontname mapping
%
/fontmap 13 dict def
	/marks:Ops10 /ILtims 10 map
	/errors:Ops10 /ILtims 10 map
	/wst:timsps10 /ILtims 10 map
	/wst:timsps12 /ILtims 12 map
	/wst:timsps12b /ILtimsb 12 map
	/wst:timsps14b /ILtimsb 14 map
	/wst:helvps6 /ILhelv 6 map
	/wst:helvps8 /ILhelv 8 map
	/wst:helvps8b /ILhelvb 8 map
	/wst:helvps9 /ILhelv 9 map
	/wst:helvps9b /ILhelvb 9 map
	/wst:helvps10 /ILhelv 10 map
	/wst:helvps10b /ILhelvb 10 map
%
%	Create and ReEncode the following fonts.
%
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Helvetica /ILhelv ILEncoding ReEncode
/Helvetica-Bold /ILhelvb ILEncoding ReEncode
%!
% >> pl2ps version 4.0.5
5 0 4 versioncheck
/hline 5 array def
hline 4 (For: millette.docp.r_d.D297 ) put
hline 3 (Printed on: Tue, Feb 16, 1993 14:02:26 ) put
hline 2 ( ) put
hline 1 (Document: update_fig_2 ) put
hline 0 (Last saved on: Tue, Feb 16, 1993 14:02:20 ) put
/lline 5 array def
lline 4 (For: millette.docp.r_d.D297 ) put
lline 3 (Printed on: Tue, Feb 16, 1993 14:02:26 ) put
lline 2 ( ) put
lline 1 (Document: update_fig_2 ) put
lline 0 (Last saved on: Tue, Feb 16, 1993 14:02:20 ) put
%% logme
%% letter
/initialstate save def
/PSpagelength 13970 def
/PSpagewidth 10795 def
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
/PSfontobj 86 array def
/BinaryMode false def
bop
0 13970 neg translate
0 13970 10795 13970 10795 0 0 0 clp
true /wst:timsps10 5 declareFont
5 sf
9521.0 558.0 m
5396.0 h
1270.0 h
9521.0 13308.0 m
5396.0 h
1270.0 h
true /wst:helvps10b 6 declareFont
6 sf
2350.0 7963.0 m
0.0 0.0 m
17.0 sw
/drawmode PL_SET def
newpath
90.0000 450.0000 686 206 0.0000 3282 3428 el
[] 0 setdash
0.0000 dp40
newpath
2596 3451 av
2596 4882 as
0.0000 dp40
newpath
3968 3451 av
3968 4882 as
0.0000 dp40
newpath
48.1699 138.1869 1 969.8656 969.8604 -3.1701 3282.1998 3157.2071 addconic
0.0000 dp40
newpath
48.1699 138.1869 1 969.8656 969.8604 -3.1701 3282.1998 3642.2071 addconic
0.0000 dp40
newpath
48.1699 138.1869 1 969.8656 969.8604 -3.1701 3282.1998 4196.2071 addconic
0.0000 dp40
true /wst:helvps8 7 declareFont
7 sf
2981.0 3818.0 m
0.0000 setgray
<5265676973747279> 0 3496 -1 s
2981.0 3973.0 m
0.0000 setgray
<4461746162617365> 0 3582 -1 s
true /wst:helvps8b 8 declareFont
8 sf
2863.0 3460.0 m
0.0000 setgray
<4469736b204d656d6f7279> 1 3738 32 s
7 sf
2981.0 4358.0 m
0.0000 setgray
<4c6f672046696c65> 1 3480 32 s
2930.0 4850.0 m
0.0000 setgray
<5265706c696361204c697374> 1 3655 32 s
0.0 0.0 m
newpath
3688 4190 av
3786 4132 as
0.0000 dp40
newpath
0.0 sw
3806 4073 av
3806 4073 as
3864 4088 as
3688 4190 as
3790 4014 as
3806 4073 as
gsave
0.0000 setgray
eofill
grestore
newpath
3806 4073 av
newpath
17.0 sw
3806 4073 av
3864 4088 as
3688 4190 as
3790 4014 as
closepath
0.0000 dp40
0.0 sw
newpath
3688 4190 av
closepath
17.0 sw
newpath
4892 2178 av
6058 2178 as
6058 2178 as
6058 2796 as
4892 2796 as
4892 2178 as
0.0000 dp40
true /wst:helvps9 9 declareFont
9 sf
5277.0 2372.0 m
0.0000 setgray
<536c617665> 0 5673 -1 s
5188.0 2547.0 m
0.0000 setgray
<5365637572697479> 0 5760 -1 s
5241.0 2721.0 m
0.0000 setgray
<536572766572> 0 5708 -1 s
0.0 0.0 m
newpath
2592 5665 av
3909 5665 as
3909 5665 as
3909 6590 as
2592 6590 as
2592 5665 as
0.0000 dp40
8 sf
2663.0 5820.0 m
0.0000 setgray
<5265706c696361204c697374> 1 3452 32 s
7 sf
0.0000 setgray
<20> 1 3491 32 s
true /wst:helvps6 10 declareFont
10 sf
2689.0 6014.0 m
0.0000 setgray
<6d616368696e65> 0 3090 -1 s
0.0000 setgray
<2041207570646174652031> 3 3631 32 s
2689.0 6131.0 m
0.0000 setgray
<6d616368696e652042207570646174652031> 3 3631 32 s
2689.0 6248.0 m
0.0000 setgray
<202e> 1 2747 32 s
2689.0 6365.0 m
0.0000 setgray
<202e> 1 2747 32 s
2689.0 6482.0 m
0.0000 setgray
<202e> 1 2747 32 s
2689.0 6599.0 m
0.0000 setgray
<20> 1 2718 32 s
0.0 0.0 m
newpath
4923 3833 av
5706 3833 as
5706 3833 as
5706 4731 as
4923 4731 as
4923 3833 as
0.0000 dp40
newpath
4951 4030 av
5706 4032 as
0.0000 dp40
5033.0 4194.0 m
0.0000 setgray
<5570646174652031> 1 5463 32 s
5033.0 4311.0 m
0.0000 setgray
<5570646174652032> 1 5463 32 s
5033.0 4428.0 m
0.0000 setgray
<202e> 1 5091 32 s
5033.0 4545.0 m
0.0000 setgray
<202e> 1 5091 32 s
5033.0 4662.0 m
0.0000 setgray
<202e> 1 5091 32 s
5033.0 4779.0 m
0.0000 setgray
<20> 1 5062 32 s
0.0 0.0 m
newpath
-38.9695 51.0002 1 447.0638 447.0801 6.4973 8178.8326 4004.0345 addconic
8213 3489 av
-129.8057 -39.7286 1 378.7453 378.7439 45.0000 8178.7115 3866.1892 addconic
7732 3352 av
-134.7555 -44.6870 1 460.0656 460.0938 18.1922 7937.7289 3763.5204 addconic
7401 3422 av
-132.3458 -42.2375 1 269.4376 269.4301 0.0000 7582.4942 3621.1338 addconic
8200 4696 av
47.9889 -41.8751 0 319.0971 319.1174 37.9819 8177.5880 4377.6797 addconic
7146 3883 av
-145.0531 -55.1162 1 447.0923 447.0985 -39.3450 7591.7779 3848.7165 addconic
7435 4541 av
143.5866 53.6171 0 342.9060 342.9163 13.2825 7750.3411 4406.2892 addconic
7113 4197 av
164.3702 74.4294 0 342.9021 342.8978 22.5000 7453.4395 4238.0191 addconic
7115 3764 av
-135.1582 134.9275 0 342.9195 342.9087 -7.9727 7389.3375 3969.7403 addconic
7778 4664 av
141.8689 51.7978 0 342.9036 342.9140 0.0000 8047.7281 4452.2635 addconic
0.0000 dp40
newpath
5495 1678 av
5495 2168 as
0.0000 dp40
newpath
5495 2168 av
5509 2041 as
0.0000 dp40
newpath
0.0 sw
5495 2002 av
5495 2002 as
5548 1972 as
5495 2168 as
5443 1972 as
5495 2002 as
gsave
0.0000 setgray
eofill
grestore
newpath
5495 2002 av
newpath
17.0 sw
5495 2002 av
5548 1972 as
5495 2168 as
5443 1972 as
closepath
0.0000 dp40
0.0 sw
newpath
5495 2168 av
closepath
9 sf
7461.0 4008.0 m
0.0000 setgray
<5265676973747279> 0 8042 -1 s
0.0000 setgray
<20> 1 8086 32 s
7461.0 4183.0 m
0.0000 setgray
<4461746162617365> 0 8139 -1 s
0.0 0.0 m
17.0 sw
newpath
5468 2796 av
6908 3903 as
0.0000 dp40
newpath
6988 4002 av
6908 3903 as
0.0000 dp40
newpath
0.0 sw
6871 3885 av
6871 3885 as
6886 3826 as
6988 4002 as
6812 3901 as
6871 3885 as
gsave
0.0000 setgray
eofill
grestore
newpath
6871 3885 av
newpath
17.0 sw
6871 3885 av
6886 3826 as
6988 4002 as
6812 3901 as
closepath
0.0000 dp40
0.0 sw
newpath
6988 4002 av
closepath
7128.0 2236.0 m
0.0000 setgray
<54686520736572766572206170706c696573> 2 8430 32 s
7128.0 2411.0 m
0.0000 setgray
<7468652075706461746520746f207669727475616c> 3 8518 32 s
7128.0 2585.0 m
0.0000 setgray
<6d656d6f7279> 0 7700 -1 s
7688.0 h
0.0000 setgray
<2e20506572696f646963616c6c79> 1 8585 32 s
8573.0 h
0.0000 setgray
<2c> 0 8617 -1 s
7128.0 2760.0 m
0.0000 setgray
<746865207365727665722077726974657320746865> 3 8554 32 s
7128.0 2935.0 m
0.0000 setgray
<646174616261736520696e207669727475616c> 2 8412 32 s
7128.0 3110.0 m
0.0000 setgray
<6d656d6f727920746f206469736b2e> 2 8245 32 s
4468.0 4964.0 m
0.0000 setgray
<546865207365727665722073746f726573206120636f7079206f66> 5 6386 32 s
4468.0 5139.0 m
0.0000 setgray
<656163682075706461746520696e20746865206c6f672066696c652e> 5 6315 32 s
4468.0 5313.0 m
0.0000 setgray
<546869732066696c65206973207573656420696e20746865206576656e74206f66> 7 6596 32 s
4468.0 5488.0 m
0.0000 setgray
<6120736572766572207265737461727420746f206170706c7920616c6c206f75742d> 6 6650 32 s
4468.0 5663.0 m
0.0000 setgray
<7374616e64696e67207570646174657320746f20746865206469736b> 4 6438 32 s
4468.0 5838.0 m
0.0000 setgray
<636f7079206f66207468652064617461626173652e> 3 5981 32 s
true /wst:helvps9b 11 declareFont
11 sf
4870.0 1560.0 m
0.0000 setgray
<446174616261736520557064617465> 1 6157 32 s
0.0 0.0 m
17.0 sw
newpath
2588 5850 av
3909 5850 as
0.0000 dp40
newpath
2350 1270 av
9314 1270 as
9314 1270 as
9314 7979 as
2350 7979 as
2350 1270 as
0.0000 dp40
9 sf
2486.0 6828.0 m
0.0000 setgray
<466f722065616368207265706c69636120696e20746865> 4 4052 32 s
2486.0 7003.0 m
0.0000 setgray
<63656c6c2c20746865207265706c696361206c69737420636f6e2d> 4 4130 32 s
2486.0 7177.0 m
0.0000 setgray
<7461696e7320746865207265706c69636127> 2 3629 32 s
3626.0 h
0.0000 setgray
<73206e65742d> 1 4022 32 s
2486.0 7352.0 m
0.0000 setgray
<776f726b20616464726573732c206e6574776f726b> 2 4071 32 s
2486.0 7527.0 m
0.0000 setgray
<49442c20616e642063656c6cb172656c6174697665> 2 3876 32 s
2486.0 7702.0 m
0.0000 setgray
<6e616d652e> 0 2926 -1 s
8 sf
5027.0 4002.0 m
0.0000 setgray
<4c6f67> 0 5285 -1 s
0.0000 setgray
<2046696c65> 1 5566 32 s
0.0 0.0 m
newpath
5468 2796 av
3841 4032 as
0.0000 dp40
newpath
3282 5167 av
3282 5665 as
0.0000 dp40
newpath
3968 4201 av
4923 4201 as
0.0000 dp40
9335.0 7963.0 m
6 sf
eop
initialstate restore
end % tempdict
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Helvetica
%%+ Helvetica-Bold

%%EndDocument 
EPSE
XP /F16 /CM-Times-Bold 53.964 11 DNF RP
177 1839 XY F16(27.6.2)S 413 X(Handling)S 647 X(Database)S 878 X
(Updates)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 1960 XY F0(When)S 525 X(a)S 556 X(master)S 680 X(or)S 727 X
(slave)S 825 X(replica)S 951 X(receives)S 1099 X(updates,)S 1249 X
(it)S 1285 X(applies)S 1415 X(the)S 1479 X(updates)S 1618 X(to)S 
1663 X(its)S 1715 X(database)S 50 y 413 X(in)S 458 X(virtual)S 578 X
(memory,)S 739 X(and)S 811 X(saves)S 913 X(a)S 943 X(copy)S 1036 X
(of)S 1082 X(each)S 1170 X(update)S 1293 X(in)S 1337 X(a)S 1368 X
(log)S 1433 X(\014le)S 1498 X(that)S 1572 X(is)S 1612 X(stored)S 
1725 X(on)S 1779 X(disk.)S 50 y 413 X(Updates)S 563 X(accumulate)S
765 X(in)S 811 X(the)S 875 X(log)S 942 X(\014le)S 1008 X(in)S 1054 X
(sequenced)S 1240 X(numerical)S 1420 X(order.)S 1551 X(If)S 1592 X
(a)S 1624 X(server)S 1738 X(restarts)S 49 y 413 X(unexpectedly,)S 
659 X(the)S 723 X(log)S 790 X(\014le)S 857 X(ensures)S 996 X(that)S
1072 X(no)S 1127 X(updates)S 1268 X(are)S 1332 X(lost.)S 2209 Y 
413 X(Periodically,)S 639 X(the)S 704 X(replica)S 832 X(writes)S 
948 X(the)S 1013 X(database)S 1170 X(in)S 1217 X(virtual)S 1340 X
(memory)S 1493 X(to)S 1540 X(disk,)S 1634 X(thus)S 1718 X(bringing)S
50 y 413 X(the)S 480 X(disk)S 564 X(copy)S 660 X(up-to-date.)S 879 X
(Then,)S 990 X(if)S 1031 X(the)S 1097 X(replica)S 1225 X(is)S 1268 X
(a)S 1302 X(slave,)S 1413 X(it)S 1452 X(clears)S 1564 X(the)S 1630 X
(log)S 1698 X(\014le)S 1767 X(of)S 1817 X(all)S 50 y 413 X
(updates.)S 593 X(If)S 637 X(the)S 705 X(replica)S 835 X(is)S 880 X
(the)S 947 X(master,)S 1085 X(it)S 1125 X(clears)S 1239 X(the)S 
1307 X(log)S 1377 X(\014le)S 1447 X(of)S 1498 X(all)S 1557 X
(updates)S 1701 X(that)S 1780 X(have)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(27{9)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 444 24
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(been)S 565 X(propagated)S 763 X(to)S 809 X(the)S 874 X
(slave)S 973 X(replicas.)S 1145 X(Updates)S 1295 X(that)S 1371 X
(have)S 1463 X(not)S 1530 X(been)S 1622 X(propagated)S 1821 X(to)S
1867 X(the)S 50 y 472 X(slaves)S 588 X(are)S 652 X(retained)S 800 X
(and)S 874 X(used)S 963 X(to)S 1010 X(reconstruct)S 1208 X(the)S 
1272 X(propagation)S 1485 X(queue,)S 1608 X(if)S 1647 X(necessary.)S
569 Y 472 X(Only)S 567 X(the)S 630 X(master)S 753 X(replica)S 877 X
(maintains)S 1051 X(a)S 1081 X(propagation)S 1291 X(queue,)S 1413 X
(which)S 1526 X(is)S 1566 X(used)S 1654 X(to)S 1698 X(hold)S 1784 X
(changes)S 50 y 472 X(to)S 523 X(be)S 581 X(propagated)S 783 X(to)S
834 X(the)S 903 X(slave)S 1007 X(replicas,)S 1165 X(as)S 1218 X
(described)S 1395 X(in)S 1446 X(Section)S 1589 X(27.6.3.)S 1749 X
(When)S 1867 X(the)S 50 y 472 X(master)S 599 X(replica)S 728 X
(receives)S 880 X(an)S 935 X(update,)S 1071 X(it)S 1110 X(adds)S 
1202 X(it)S 1241 X(to)S 1289 X(the)S 1356 X(propagation)S 1570 X
(queue)S 1685 X(in)S 1733 X(addition)S 1885 X(to)S 49 y 472 X(its)S
527 X(virtual)S 650 X(memory)S 803 X(database)S 961 X(and)S 1036 X
(its)S 1090 X(log)S 1158 X(\014le.)S 1258 X(Each)S 1356 X(update)S
1482 X(in)S 1529 X(a)S 1562 X(propagation)S 1776 X(queue)S 1890 X
(is)S 50 y 472 X(identi\014ed)S 647 X(by)S 706 X(a)S 743 X
(sequence)S 912 X(number)S 1057 X(and)S 1135 X(a)S 1171 X
(timestamp.)S 1399 X(The)S 1481 X(sequence)S 1651 X(number)S 1796 X
(is)S 1841 X(used)S 50 y 472 X(internally)S 649 X(to)S 699 X(track)S
800 X(the)S 868 X(propagation)S 1084 X(of)S 1136 X(updates)S 1280 X
(to)S 1330 X(slave)S 1433 X(replicas.)S 1617 X(The)S 1699 X
(timestamp)S 1890 X(is)S 50 y 472 X(provided)S 634 X(to)S 680 X
(show)S 781 X(users)S 881 X(the)S 945 X(date)S 1028 X(and)S 1102 X
(time)S 1190 X(of)S 1238 X(updates.)S 967 Y 472 X(When)S 588 X(a)S
622 X(master)S 749 X(or)S 799 X(slave)S 901 X(replica)S 1029 X
(restarts,)S 1176 X(it)S 1215 X(initializes)S 1392 X(its)S 1447 X
(database)S 1606 X(in)S 1655 X(virtual)S 1779 X(memory)S 50 y 472 X
(and)S 545 X(then)S 629 X(applies)S 760 X(any)S 832 X(outstanding)S
1039 X(updates)S 1178 X(in)S 1223 X(the)S 1286 X(log)S 1352 X
(\014le)S 1418 X(to)S 1463 X(its)S 1515 X(database.)S 1701 X(If)S 
1741 X(the)S 1804 X(replica)S 50 y 472 X(is)S 514 X(the)S 579 X
(master)S 704 X(replica,)S 841 X(it)S 878 X(also)S 959 X(recreates)S
1120 X(the)S 1185 X(propagation)S 1397 X(queue)S 1511 X(from)S 1605 X
(the)S 1670 X(log)S 1737 X(\014le)S 1804 X(so)S 1855 X(that)S 50 y 
472 X(any)S 548 X(outstanding)S 758 X(slave)S 859 X(updates)S 1001 X
(can)S 1075 X(be)S 1130 X(propagated.)S 1363 X(This)S 1453 X
(mechanism)S 1658 X(ensures)S 1798 X(that)S 1876 X(no)S 50 y 472 X
(updates)S 613 X(are)S 678 X(lost)S 751 X(when)S 855 X(a)S 887 X
(server)S 1003 X(is)S 1044 X(shut)S 1127 X(down.)S
XP /F16 /CM-Times-Bold 53.964 11 DNF RP
236 1339 XY F16(27.6.3)S 472 X(Propagating)S 775 X(Database)S 1006 X
(Changes)S 1459 Y 472 X F0(To)S 535 X(propagate)S 715 X(updates)S 
859 X(to)S 907 X(the)S 975 X(slave)S 1077 X(replicas,)S 1233 X(the)S
1300 X(master)S 1427 X(replica)S 1556 X(\014rst)S 1638 X(updates)S
1781 X(its)S 1837 X(copy)S 50 y 472 X(of)S 522 X(the)S 589 X
(database)S 747 X(by)S 804 X(using)S 909 X(the)S 975 X(process)S 
1115 X(described)S 1290 X(in)S 1338 X(Section)S 1478 X(27.6.2.)S 
1629 X(Then,)S 1741 X(the)S 1807 X(master)S 50 y 472 X(replica)S 
599 X(attempts)S 753 X(to)S 799 X(propagate)S 976 X(the)S 1040 X
(update)S 1164 X(to)S 1210 X(each)S 1300 X(slave)S 1398 X(replica)S
1525 X(on)S 1580 X(its)S 1632 X(replica)S 1759 X(list.)S 1853 X
(The)S 50 y 472 X(replica)S 603 X(list)S 671 X(contains)S 826 X
(each)S 920 X(slave)S 1022 X(replica's)S 1182 X(ID)S 1244 X(and)S 
1321 X(network)S 1474 X(address.)S 1652 X(It)S 1695 X(also)S 1779 X
(contains)S 50 y 472 X(the)S 542 X(sequence)S 713 X(number)S 858 X
(of)S 912 X(the)S 981 X(last)S 1057 X(update)S 1187 X(that)S 1268 X
(was)S 1351 X(made)S 1460 X(to)S 1511 X(the)S 1580 X(slave.)S 1723 X
(The)S 1807 X(master)S 49 y 472 X(replica)S 597 X(always)S 725 X
(propagates)S 917 X(in)S 961 X(sequenced)S 1146 X(numerical)S 1324 X
(order.)S 1455 X(By)S 1515 X(examining)S 1702 X(the)S 1765 X
(sequence)S 50 y 472 X(number)S 614 X(that)S 690 X(is)S 732 X
(associated)S 917 X(with)S 1005 X(a)S 1038 X(replica)S 1165 X(in)S
1212 X(its)S 1266 X(replica)S 1393 X(list,)S 1469 X(and)S 1543 X
(the)S 1608 X(sequence)S 1774 X(numbers)S 50 y 472 X(of)S 518 X
(the)S 580 X(updates)S 718 X(that)S 792 X(are)S 854 X(in)S 897 X
(its)S 948 X(propagation)S 1157 X(queue,)S 1278 X(the)S 1340 X
(master)S 1462 X(can)S 1531 X(determine)S 1708 X(which)S 1821 X(of)S
1867 X(the)S 50 y 472 X(updates)S 609 X(on)S 661 X(its)S 710 X
(propagation)S 919 X(queue)S 1028 X(must)S 1119 X(be)S 1168 X
(propagated)S 1363 X(to)S 1405 X(which)S 1517 X(slave.)S 1644 X
(This)S 1728 X(mechanism)S 50 y 472 X(helps)S 577 X(ensure)S 701 X
(that)S 780 X(the)S 847 X(unavailability)S 1092 X(of)S 1143 X(a)S 
1178 X(single)S 1293 X(slave)S 1395 X(replica)S 1525 X(does)S 1617 X
(not)S 1687 X(interfere)S 1844 X(with)S 50 y 472 X(updates)S 613 X
(to)S 659 X(the)S 724 X(rest)S 798 X(of)S 846 X(the)S 911 X(slave)S
1010 X(replicas.)S 2057 Y 472 X(If)S 511 X(the)S 572 X(propagation)S
781 X(of)S 826 X(an)S 875 X(update)S 996 X(does)S 1083 X(not)S 1147 X
(succeed)S 1288 X(on)S 1340 X(the)S 1402 X(\014rst)S 1477 X
(attempt,)S 1622 X(the)S 1683 X(master)S 1804 X(replica)S 50 y 472 X
(tries)S 556 X(periodically)S 766 X(until)S 853 X(it)S 888 X
(succeeds.)S 1078 X(When)S 1189 X(the)S 1251 X(update)S 1374 X
(succeeds,)S 1543 X(the)S 1606 X(master)S 1728 X(updates)S 1867 X
(the)S 50 y 472 X(sequence)S 637 X(number)S 776 X(that)S 851 X(is)S
891 X(associated)S 1074 X(with)S 1161 X(the)S 1224 X(updated)S 1368 X
(replica)S 1493 X(on)S 1547 X(its)S 1599 X(replica)S 1725 X(list.)S
1818 X(When)S 50 y 472 X(an)S 525 X(update)S 649 X(is)S 691 X
(propagated)S 889 X(to)S 934 X(all)S 989 X(the)S 1054 X(slave)S 
1153 X(replicas,)S 1306 X(the)S 1370 X(master)S 1494 X(removes)S 
1648 X(the)S 1712 X(update)S 1837 X(from)S 49 y 472 X(its)S 526 X
(propagation)S 738 X(queue.)S 2503 Y 236 X F5(27{10)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 445 25
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1377 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1377 215 XY F5(Overview)S 1564 X(of)S 1612 X(DCE)S 1714 X(Security)S
195 232 XY 1669 5 R
XP /F16 /CM-Times-Bold 53.964 11 DNF RP
177 419 XY F16(27.6.4)S 413 X(Master/Slave)S 734 X(Authentication)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 540 XY F0(Like)S 504 X(all)S 561 X(DCE)S 659 X(objects,)S 802 X
(the)S 868 X(master)S 993 X(and)S 1068 X(slave)S 1169 X(replicas)S
1313 X(must)S 1409 X(authenticate)S 1624 X(to)S 1672 X(each)S 1763 X
(other.)S 50 y 413 X(To)S 477 X(do)S 536 X(this,)S 623 X(the)S 691 X
(master)S 819 X(carries)S 947 X(the)S 1015 X(identity)S 1160 X(of)S
XP /F11 /CM-Times-Bold 41.511 11 DF RP
1211 590 XY F11(dce-rgy)S F0(,)S 1373 X(one)S 1450 X(of)S 1502 X
(the)S 1570 X(principals)S 1751 X(that)S 1831 X(is)S 50 y 413 X
(created)S 548 X(when)S 653 X(the)S 719 X(database)S 877 X(is)S 
920 X(created.)S 1087 X(Slaves)S 1210 X(carry)S 1310 X(the)S 1376 X
(identity)S 1518 X(of)S 1568 X(the)S 1633 X(host)S 1718 X(machine)S
50 y 413 X(on)S 468 X(which)S 582 X(they)S 666 X(exist.)S 788 X
(Note)S 881 X(that)S 956 X(this)S 1029 X(identity)S 1169 X(must)S 
1263 X(have)S 1354 X(the)S 1417 X(rights)S 1525 X(to)S 1570 X(the)S
1633 X F11(/.:/sec/replist)S 49 y 413 X F0(object)S 529 X
(described)S 702 X(in)S 748 X(Chapter)S 893 X(41.)S
XP /F1 /CM-Times-Bold 66.418 11 DF RP
177 924 XY F1(27.7)S 402 X(The)S 534 X(/etc/passwd)S 881 X(and)S 
1010 X(/etc/group)S 1320 X(Files)S 1475 X(and)S 1605 X(the)S 66 y 
402 X(Registry)S 1111 Y 413 X F0(You)S 495 X(should)S 615 X
(maintain)S 771 X(standard)S 921 X(versions)S 1069 X(of)S 1114 X
(the)S 1175 X F11(/etc/passwd)S 1387 X F0(and)S 1457 X F11
(/etc/group)S 1647 X F0(\014les)S 1726 X(on)S 1778 X(local)S 50 y 
413 X(machines)S 588 X(to)S 638 X(ensure)S 764 X(compatibility)S 
1003 X(with)S 1094 X(UNIX)S 1216 X(programs.)S 1427 X(To)S 1491 X
(keep)S 1587 X(the)S 1655 X F11(/etc/passwd)S 50 y 413 X F0(and)S 
493 X F11(/etc/group)S 692 X F0(\014les)S 781 X(consistent)S 966 X
(with)S 1059 X(the)S 1129 X(registry)S 1276 X(database,)S 1448 X
(use)S 1523 X(the)S 1593 X F11(passwd\210export)S 49 y 413 X F0
(command.)S 620 X(It)S 659 X(is)S 699 X(advisable)S 869 X(to)S 915 X
(run)S 983 X F11(passwd\210export)S 1261 X F0(on)S 1316 X(a)S 1348 X
(regular)S 1478 X(basis,)S 1585 X(preferably)S 1768 X(using)S 50 y 
413 X F11(cron)S F0(.)S 537 X(\(See)S 625 X(Chapter)S 770 X(36)S 
826 X(for)S 888 X(details)S 1010 X(on)S 1065 X F11
(passwd\210export)S F0(.\))S 1410 Y 413 X F11(Note:)S 552 X F0
(Unlike)S 677 X(standard)S 831 X(UNIX)S 947 X(behavior,)S 1116 X
(the)S 1179 X F11(/etc/passwd)S 1395 X F0(and)S 1467 X F11
(/etc/group)S 1660 X F0(\014les)S 1742 X(are)S 1805 X(not)S 50 y 
550 X(used)S 645 X(for)S 712 X(local)S 811 X(login)S 915 X(if)S 
958 X(a)S 995 X(security)S 1145 X(server)S 1265 X(is)S 1311 X
(unavailable.)S 1560 X(Instead,)S 1708 X(the)S 1778 X(local)S 50 y 
550 X(registry)S 692 X(\(described)S 879 X(in)S 926 X(the)S 991 X
(following)S 1167 X(section\))S 1313 X(is)S 1355 X(used.)S 1476 X
(The)S 1555 X F11(/etc/passwd)S 1772 X F0(and)S 1847 X F11(/)S 49 y 
550 X(etc/group)S 730 X F0(\014le)S 794 X(are)S 856 X(maintained)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
1052 1559 XY F8(only)S 1135 X F0(for)S 1195 X(compatibility)S 1428 X
(with)S 1513 X(UNIX)S 1628 X(programs)S 1796 X(that)S 50 y 550 X
(require)S 682 X(their)S 772 X(existence.)S 1794 Y 177 X F1(27.8)S
402 X(The)S 534 X(Local)S 715 X(Registry)S 1914 Y 413 X F0(The)S 
492 X(local)S 586 X(registry,)S 737 X(which)S 852 X(resides)S 981 X
(in)S 1027 X(the)S 1091 X F8(dcelocal)S F11(/var/security)S 1469 X 
F0(directory)S 1633 X(on)S 1688 X(each)S 1778 X(local)S 50 y 413 X
(machine,)S 582 X(contains)S 739 X(information)S 953 X(about)S 1063 X
(the)S 1132 X(machine's)S 1321 X(most)S 1420 X(recent)S 1539 X
(users)S 1642 X(and)S 1720 X(the)S 1789 X(date)S 50 y 413 X(and)S 
490 X(time)S 580 X(that)S 659 X(they)S 746 X(last)S 821 X(logged)S
950 X(in.)S 1033 X(If)S 1077 X(a)S 1112 X(security)S 1260 X(server)S
1378 X(is)S 1422 X(not)S 1491 X(available)S 1657 X(for)S 1722 X
(network)S 50 y 413 X(login,)S 521 X(the)S 584 X(authentication)S 
831 X(service)S 961 X(attempts)S 1114 X(to)S 1158 X(obtain)S 1274 X
(the)S 1337 X(information)S 1545 X(that)S 1620 X(is)S 1659 X
(required)S 1810 X(for)S 50 y 413 X(a)S 446 X(local)S 540 X(login)S
639 X(from)S 734 X(the)S 798 X(local)S 893 X(registry.)S 2213 Y 
413 X(When)S 539 X(a)S 585 X(security)S 743 X(server)S 871 X(is)S 
926 X(running)S 1082 X(on)S 1150 X(the)S 1228 X(network,)S 1401 X
(the)S 1479 X(authentication)S 1741 X(service)S 50 y 413 X
(automatically)S 656 X(creates)S 789 X(a)S 824 X(local)S 922 X
(registry)S 1065 X(the)S 1133 X(\014rst)S 1215 X(time)S 1305 X
(anyone)S 1442 X(logs)S 1528 X(into)S 1610 X(DCE)S 1710 X(from)S 
1808 X(the)S 50 y 413 X(machine.)S 604 X(Thereafter,)S 803 X(it)S 
842 X(updates)S 985 X(the)S 1052 X(local)S 1149 X(registry)S 1292 X
(each)S 1384 X(time)S 1473 X(anyone)S 1609 X(logs)S 1695 X(into)S 
1775 X(DCE)S 2503 Y 177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1748 X
(27{11)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 446 26
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(from)S 568 X(the)S 634 X(machine.)S 822 X(You)S 909 X
(can)S 982 X(edit)S 1059 X(the)S 1125 X(local)S 1221 X(registry)S 
1363 X(by)S 1420 X(using)S 1525 X(the)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
1591 419 XY F11(rgy\210edit)S 1754 X F0(command)S 50 y 472 X(with)S
560 X(the)S 625 X F11(-l)S 664 X F0(\015ag.)S 769 X(Note)S 864 X
(that)S 940 X F11(dcecp)S 1055 X F0(does)S 1145 X(not)S 1212 X
(access)S 1332 X(the)S 1397 X(local)S 1491 X(registry.)S
XP /F1 /CM-Times-Bold 66.418 11 DF RP
236 654 XY F1(27.9)S 461 X(Names)S 675 X(for)S 782 X(Security)S 
1040 X(Objects)S 774 Y 472 X F0(Because)S 635 X(the)S 710 X
(security)S 865 X(namespace)S 1071 X(is)S 1123 X(rooted)S 1253 X
(in)S 1309 X(the)S 1384 X(Cell)S 1477 X(Directory)S 1660 X(Service)S
1809 X(\(CDS\))S 50 y 472 X(namespace,)S 679 X(security)S 824 X
(objects)S 955 X(have)S 1048 X(CDS)S 1142 X(pathnames,)S 1344 X
(which)S 1459 X(take)S 1542 X(the)S 1607 X(following)S 1782 X
(form:)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
472 924 XY F8(/.../cellname)S F11(/)S F8(mount\210point)S F0(/)S F8
(object)S
(\210name)S 1024 Y 472 X F0(where:)S 74 y 472 X F8(cellname)S 709 X 
F0(Is)S 752 X(the)S 817 X(name)S 921 X(of)S 969 X(the)S 1034 X
(cell)S 1108 X(in)S 1154 X(which)S 1269 X(the)S 1334 X(object)S 
1449 X(resides.)S 75 y 472 X F8(mount\210point)S 709 X F0(Is)S 750 X
(the)S 811 X(name)S 912 X(under)S 1017 X(which)S 1130 X(the)S 1191 X
(DCE)S 1285 X(Security)S 1435 X(Service)S 1570 X(is)S 1608 X
(registered)S 1783 X(in)S 1826 X(CDS.)S 75 y 472 X F8
(object\210name)S 709 X F0(Is)S 754 X(the)S 820 X(name)S 925 X(of)S
974 X(the)S 1040 X(registry)S 1182 X(object)S 1299 X(assigned)S 
1457 X(when)S 1562 X(the)S 1628 X(object)S 1744 X(is)S 1787 X
(created.)S 50 y 709 X(If)S 752 X(the)S 818 X(object)S 934 X
(resides)S 1065 X(in)S 1112 X(a)S 1146 X(directory,)S 1321 X F8
(object)S
(\210name)S 1549 X F0(consists)S 1696 X(of)S 1745 X(the)S 1811 X
(names)S 49 y 709 X(of)S 758 X(the)S 822 X(object)S 938 X(itself)S
1036 X(and)S 1110 X(any)S 1184 X(directories)S 1373 X(that)S 1450 X
(must)S 1545 X(be)S 1598 X(traversed)S 1765 X(to)S 1811 X(access)S
50 y 709 X(the)S 774 X(object.)S 920 X(Note)S 1015 X(that)S 1092 X
(registry)S 1233 X(objects)S 1365 X(generally)S 1534 X(reside)S 
1648 X(in)S 1694 X(the)S 1759 X(principal,)S 50 y 709 X(group,)S 
831 X(or)S 880 X(organization)S 1103 X(directory)S 1267 X(in)S 1314 X
(the)S 1380 X(registry)S 1522 X(database.)S 1711 X(See)S 1786 X
(Chapter)S 50 y 709 X(41)S 764 X(for)S 826 X(a)S 859 X(more)S 958 X
(complete)S 1124 X(description)S 1322 X(of)S 1370 X(the)S 1435 X
(registry)S 1576 X(database)S 1732 X(structure.)S 1596 Y 472 X(For)S
550 X(example,)S 722 X(the)S 793 X(full)S 871 X(pathname)S 1053 X
(for)S 1121 X(the)S 1192 X(principal)S 1360 X F11(bach)S F0(,)S 
1476 X(which)S 1598 X(resides)S 1734 X(in)S 1786 X(the)S 1857 X
(cell)S 50 y 472 X F11(dresden.com)S F0(,)S 721 X(uses)S 805 X(the)S
868 X F11(sec)S 934 X F0(\(security\))S 1106 X(mount)S 1225 X
(point)S 1324 X(and)S 1396 X(is)S 1437 X(in)S 1482 X(the)S 1546 X 
F11(principal)S 1720 X F0(directory)S 1883 X(as)S 50 y 472 X
(follows:)S 1796 Y 472 X F11(/.../dresden.com/sec/principal/bach)S
1895 Y 472 X F0(As)S 544 X(another)S 694 X(example,)S 870 X(assume)S
1017 X(the)S 1094 X(group)S 1216 X F11(east-west)S 1402 X F0
(resides)S 1543 X(in)S 1600 X F11(sales)S F0(,)S 1719 X(which)S 
1846 X(is)S 1899 X(a)S 50 y 472 X(subdirectory)S 694 X(of)S 742 X
(the)S 807 X F11(group)S 926 X F0(directory)S 1090 X(in)S 1136 X
(the)S 1201 X(registry)S 1341 X(database)S 1498 X(in)S 1544 X(the)S
1608 X F11(dresden.com)S 1847 X F0(cell.)S 50 y 472 X(The)S 551 X
(full)S 622 X(pathname)S 798 X(for)S 860 X F11(east-west)S 1035 X 
F0(is)S 1077 X(as)S 1125 X(follows:)S 2095 Y 472 X F11
(/.../dresden.com/sec/group/sales/east-west)S 
2060 2109 1967 8 REVB 2503 Y 236 X F5(27{12)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 447 27
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 1377 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
1377 215 XY F5(Overview)S 1564 X(of)S 1612 X(DCE)S 1714 X(Security)S
195 232 XY 1669 5 R
XP /F16 /CM-Times-Bold 53.964 11 DNF RP
177 419 XY F16(27.9.1)S 413 X(Using)S 563 X(Names)S 737 X(with)S 
857 X(dcecp)S 1007 X(Security)S 1217 X(Commands)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 540 XY F0(For)S 491 X(all)S 552 X(the)S
XP /F11 /CM-Times-Bold 41.511 11 DF RP
622 540 XY F11(dcecp)S 744 X F0(commands)S 943 X(that)S 1025 X(are)S
1096 X(used)S 1191 X(to)S 1243 X(manage)S 1392 X(the)S 1463 X(DCE)S
1565 X(Security)S 1723 X(Service,)S 50 y 413 X(except)S 539 X F11
(dcecp)S 657 X(acl)S F0(,)S 736 X(you)S 815 X(supply)S 943 X(only)S
1034 X(an)S 1090 X(object)S 1209 X(name)S 1316 X(to)S 1365 X
(identify)S 1512 X(the)S 1580 X(object)S 1698 X(you)S 1778 X(want)S
50 y 413 X(to)S 462 X(manipulate.)S 696 X(The)S 777 X(object)S 894 X
(names)S 1016 X(are)S 1083 X(stored)S 1200 X(in)S 1249 X(the)S 1315 X
(registry)S 1458 X(database.)S 1651 X(You)S 1739 X(are)S 1805 X
(not)S 50 y 413 X(required)S 569 X(to)S 618 X(enter)S 718 X(a)S 
753 X(cell)S 830 X(name)S 936 X(\(the)S 1018 X(local)S 1115 X(cell)S
1192 X(is)S 1237 X(assumed\))S 1410 X(or)S 1462 X(mount)S 1585 X
(point)S 1687 X(\(the)S 1768 X(name)S 49 y 413 X(registered)S 591 X
(for)S 653 X(the)S 718 X(DCE)S 815 X(Security)S 967 X(Service)S 
1105 X(is)S 1147 X(assumed\).)S 911 Y 177 X F16(27.9.2)S 413 X
(Using)S 563 X(Names)S 737 X(with)S 857 X(the)S 947 X(dcecp)S 1097 X
(acl)S 1181 X(Command)S 1032 Y 413 X F0(Unlike)S 543 X(other)S 645 X 
F11(dcecp)S 763 X F0(security)S 911 X(commands,)S 1118 X(the)S 1185 X 
F11(dcecp)S 1303 X(acl)S 1370 X F0(command)S 1551 X(works)S 1669 X
(with)S 1759 X(ACLs)S 50 y 413 X(that)S 491 X(can)S 564 X(be)S 619 X
(maintained)S 818 X(by)S 875 X(DCE)S 974 X(services)S 1123 X(other)S
1223 X(than)S 1310 X(security.)S 1489 X(Like)S 1581 X(any)S 1656 X
(generic)S 1794 X(tool)S 50 y 413 X(that)S 488 X(operates)S 640 X
(on)S 694 X(objects)S 824 X(that)S 899 X(can)S 970 X(exist)S 1061 X
(in)S 1106 X(different)S 1262 X(namespaces,)S 1483 X F11(dcecp)S 
1598 X(acl)S 1661 X F0(requires)S 1808 X(the)S 50 y 413 X(object's)S
559 X(fully)S 651 X(quali\014ed)S 810 X(CDS)S 905 X(pathname)S 1080 X
(instead)S 1211 X(of)S 1260 X(just)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
1333 1182 XY F8(object\210name)S F0(.)S 1281 Y 413 X(For)S 488 X
(example,)S 656 X(to)S 705 X(use)S 778 X(the)S 845 X F11(dcecp)S 
964 X(acl)S 1032 X F0(command)S 1212 X(to)S 1262 X(change)S 1396 X
(the)S 1464 X(ACL)S 1564 X(that)S 1643 X(is)S 1688 X(associated)S 
50 y 413 X(with)S 504 X(principal)S 668 X F11(bach)S F0('s)S 799 X
(registry)S 942 X(account,)S 1098 X(you)S 1177 X(must)S 1274 X
(enter)S 1373 X(the)S 1440 X(following)S 1618 X(fully)S 1713 X
(quali)S
(\014ed)S 50 y 413 X(name:)S 1480 Y 413 X F11
(/.../dresden.com/sec/principal/bach)S 1580 Y 413 X F0(or)S 1680 Y 
413 X F11(/.:/sec/principal/bach)S 1779 Y 413 X F0(Note)S 504 X
(also)S 580 X(that,)S 663 X(to)S 705 X(use)S 770 X F11(dcecp)S 881 X
(acl)S 941 X F0(to)S 983 X(manipulate)S 1177 X(the)S 1238 X(ACL)S 
1330 X(that)S 1402 X(is)S 1440 X(on)S 1491 X(the)S 1551 X
(principal)S 1708 X(directory)S 50 y 413 X(of)S 462 X(the)S 526 X
(registry)S 667 X(database,)S 834 X(and)S 908 X(thus)S 991 X
(control)S 1122 X(who)S 1207 X(can)S 1279 X(add)S 1352 X(or)S 1401 X
(delete)S 1514 X(principals,)S 1702 X(you)S 1778 X(must)S 50 y 413 X
(enter)S 510 X(the)S 575 X(following)S 750 X(fully)S 842 X(quali)S
(\014ed)S 1001 X(name:)S 1979 Y 413 X F11
(/.../dresden.com/sec/principal)S 2078 Y 413 X F0(In)S 458 X(a)S 
487 X(hierarchical)S 693 X(cell,)S 773 X(one)S 843 X(name)S 943 X
(can)S 1011 X(represent)S 1173 X(a)S 1202 X(directory)S 1362 X(and)S
1432 X(a)S 1460 X(principal.)S 1650 X(For)S 1718 X(example)S 50 y 
413 X(assume)S 552 X(that)S 631 X(a)S 666 X(principal)S 831 X(name)S
937 X(is)S 982 X(stored)S 1100 X(in)S 1149 X(Cell)S 1235 X(A's)S 
1311 X(registry)S 1455 X(to)S 1504 X(represent)S 1673 X(a)S 1708 X
(cell)S 1785 X(with)S 50 y 413 X(which)S 534 X(Cell)S 622 X(A)S 
671 X(engages)S 824 X(in)S 875 X(cross-cell)S 1053 X
(authentication.)S 1347 X(The)S 1431 X(name)S 1540 X(for)S 1607 X
(the)S 1677 X(cell)S 1756 X(in)S 1808 X(the)S 50 y 413 X(registry)S
554 X(is)S 2327 Y 413 X F11(/.:/sec/principal/vienna.com)S 2503 Y 
177 X F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1748 X
(27{13)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 748

%%Page: 448 28
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(This)S 560 X(cell)S 634 X(name)S 738 X(can)S 809 X
(also)S 890 X(represent)S 1056 X(the)S 1120 X(name)S 1224 X(of)S 
1272 X(a)S 1305 X(directory,)S 1479 X(such)S 1569 X(as)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
472 519 XY F11(/.:/sec/principal/vienna.com/violinists\210cell)S 
619 Y 472 X F0(For)S 547 X(these)S 649 X(cases,)S 764 X(the)S 831 X 
F11(dcecp)S 949 X(acl)S 1017 X F0(command)S 1197 X(provides)S 1357 X
(an)S 1413 X(option)S 1536 X(that)S 1615 X(identi\014es)S 1784 X
(whether)S 50 y 472 X(you)S 549 X(are)S 613 X(entering)S 763 X(a)S
795 X(directory)S 959 X(name)S 1063 X(or)S 1111 X(a)S 1143 X
(principal)S 1305 X(name.)S 584 669 1967 8 REVB 2503 Y 236 X F5
(27{14)S 905 X(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Page: 449 29
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 413 0 XY
%%EndPageSetup
XP /F7 /CM-Times-Bold 99.626 11 DNF RP
1371 916 XY F7(Chapter)S 1759 X(28)S 177 949 XY 1682 5 R 1048 Y 
177 X(Using)S 454 X(Access)S 769 X(Control)S 1135 X(Lists)S
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
413 1453 XY F0(You)S 499 X(can)S 572 X(control)S 704 X(access)S 
825 X(to)S 872 X(DCE)S 969 X(objects)S 1101 X(by)S 1158 X(using)S 
1262 X(the)S 1328 X(ACL)S 1425 X(authorization)S 1659 X(mechanism.)S
49 y 413 X(ACLs)S 527 X(are)S 593 X(associated)S 778 X(with)S 867 X
(\014les,)S 961 X(directories,)S 1162 X(CDS)S 1257 X(entries,)S 
1393 X(and)S 1468 X(registry)S 1609 X(objects.)S 1773 X(They)S 50 y 
413 X(can)S 487 X(be)S 542 X(implemented)S 774 X(also)S 857 X(by)S
914 X(arbitrary)S 1072 X(applications)S 1289 X(to)S 1337 X(control)S
1470 X(access)S 1592 X(to)S 1640 X(their)S 1732 X(internal)S 50 y 
413 X(data)S 492 X(objects.)S 652 X(Each)S 744 X(ACL)S 837 X
(consists)S 977 X(of)S 1022 X(multiple)S 1169 X(ACL)S 1262 X
(entries)S 1382 X(that)S 1454 X(de\014ne)S 1565 X(who)S 1646 X(is)S
1683 X(authorized)S 50 y 413 X(to)S 460 X(do)S 515 X(what)S 609 X
(to)S 656 X(the)S 720 X(object,)S 846 X(speci\014cally)S 74 y 449 X
(\267)S 484 X(Who)S 579 X(can)S 650 X(access)S 770 X(the)S 835 X
(object)S 75 y 449 X(\267)S 484 X(What)S 588 X(kinds)S 692 X(of)S 
740 X(access)S 860 X(those)S 962 X(principals)S 1139 X(or)S 1187 X
(groups)S 1314 X(have)S 1407 X(to)S 1453 X(the)S 1517 X(object)S 
75 y 449 X(\267)S 484 X(What)S 588 X(kind)S 676 X(of)S 724 X
(access)S 844 X(is)S 885 X(allowed)S 1031 X(to)S 1077 X
(unauthenticated)S 1354 X(users)S 1976 Y 413 X(This)S 501 X
(chapter)S 74 y 449 X(\267)S 484 X(Provides)S 643 X(an)S 696 X
(overview)S 865 X(of)S 913 X(ACLs.)S 75 y 449 X(\267)S 484 X
(Describes)S 658 X(the)S 720 X(form)S 811 X(and)S 881 X(purpose)S 
1023 X(of)S 1068 X(ACL)S 1162 X(entries)S 1283 X(and)S 1353 X
(masks,)S 1478 X(including)S 1645 X(the)S 1706 X(sequence)S 50 y 
484 X(in)S 530 X(which)S 646 X(entries)S 770 X(are)S 835 X(checked)S
985 X(to)S 1031 X(derive)S 1148 X(permissions.)S 75 y 449 X(\267)S
484 X(Describes)S 659 X(how)S 741 X(to)S 784 X(use)S 850 X(the)S 
911 X(DCE)S 1005 X(control)S 1133 X(program)S 1284 X(\()S
XP /F11 /CM-Times-Bold 41.511 11 DF RP
1298 2250 XY F11(dcecp)S F0(\))S 1424 X(to)S 1467 X(display,)S 1608 X
(create,)S 1728 X(modify,)S 49 y 484 X(and)S 558 X(delete)S 672 X
(ACL)S 769 X(entries;)S 905 X(to)S 952 X(use)S 1021 X(masks;)S 1151 X
(to)S 1197 X(copy)S 1292 X(ACLs;)S 1417 X(and)S 1491 X(to)S 1537 X
(edit)S 1614 X(different)S 1771 X(types)S 50 y 484 X(of)S 533 X
(ACLs.)S 378 683 1908 8 REVB
XP /F5 /CM-Helvetica 41.511 11 DNF RP
177 2503 XY F5(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
263 2488 XY F13(\220)S 15 y 298 X F5(DCE)S 399 X(Administration)S 
676 X(Guide)S 801 X(|)S 856 X(Core)S 960 X(Components)S 1771 X
(28{1)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 43 189 447 580

%%Page: 450 30
%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 236 0 XY
%%EndPageSetup
XP /F5 /CM-Helvetica 41.511 11 DNF RP
236 215 XY F5(DCE)S 338 X(Security)S 501 X(Service)S 236 232 XY 
1669 5 R
XP /F0 /CM-Times-Roman 41.511 11 DNF RP
472 419 XY F0(For)S 549 X(detailed)S 699 X(information)S 914 X(on)S
974 X(how)S 1064 X(a)S 1102 X(speci\014c)S 1247 X(DCE)S 1349 X
(component)S 1552 X(implements)S 1765 X(the)S 1834 X(ACL)S 50 y 
472 X(authorization)S 705 X(mechanism,)S 919 X(see)S 985 X(the)S 
1050 X(appropriate)S 1253 X(part)S 1331 X(of)S 1380 X(this)S 1454 X
(guide.)S
XP /F11 /CM-Times-Bold 41.511 11 DNF RP
472 569 XY F11(Note:)S 611 X F0(In)S 659 X(the)S 724 X(discussions)S
928 X(of)S 976 X(DCE)S 1074 X(authorization)S 1307 X(in)S 1353 X
(this)S 1427 X(chapter)S 1564 X(and)S 1638 X(the)S 1703 X(chapters)S
1855 X(that)S 50 y 609 X(follow,)S 742 X(the)S 807 X(term)S
XP /F8 /CM-Times-Italic 41.511 12 DNF RP
896 619 XY F8(user)S 982 X F0(is)S 1023 X(analogous)S 1205 X(to)S 
1252 X(principal.)S 1442 X(A)S 1486 X(principal)S 1648 X(can)S 1719 X
(be)S 1772 X(a)S 1804 X(human)S 50 y 609 X(user,)S 703 X(server,)S
828 X(or)S 877 X(a)S 909 X(machine.)S
XP /F1 /CM-Times-Bold 66.418 11 DF RP
236 853 XY F1(28.1)S 461 X(Authorization)S 881 X(Overview)S 974 Y 
472 X F0(An)S 536 X(ACL)S 631 X(contains)S 782 X(a)S 813 X(list)S 
876 X(of)S 923 X(entries)S 1046 X(that)S 1120 X(specify)S 1253 X
(the)S 1316 X(principals)S 1492 X(who)S 1576 X(can)S 1646 X(access)S
1764 X(an)S 1816 X(object)S 50 y 472 X(and)S 548 X(the)S 614 X
(operations)S 803 X(that)S 881 X(those)S 984 X(principals)S 1163 X
(can)S 1237 X(perform.)S 1419 X(The)S 1499 X(principals)S 1679 X
(can)S 1752 X(be)S 1807 X(named)S 49 y 472 X(explicitly)S 645 X(or)S
695 X(be)S 750 X(members)S 918 X(of)S 968 X(a)S 1002 X(group)S 1114 X
(that)S 1192 X(is)S 1235 X(identi\014ed)S 1408 X(in)S 1455 X(the)S
1522 X(ACL)S 1620 X(entry.)S 1754 X(The)S 1834 X(ACL)S 50 y 472 X
(is)S 515 X(associated)S 700 X(with)S 788 X(the)S 854 X(object)S 
970 X(it)S 1007 X(protects.)S 1184 X(The)S 1263 X(operations)S 1451 X
(a)S 1484 X(principal)S 1646 X(can)S 1718 X(perform)S 1867 X(are)S
50 y 472 X(speci\014ed)S 634 X(by)S 689 X(permissions.)S 1273 Y 
472 X(DCE)S 569 X(permissions)S 781 X(can)S 853 X(be)S 906 X(set)S
966 X(for)S 1028 X(the)S 1093 X(following:)S 74 y 508 X(\267)S 543 X
(Owner,)S 680 X(group,)S 802 X(and)S 875 X(other)S 75 y 508 X(\267)S
543 X(Speci\014c)S 691 X(individual)S 873 X(principals)S 1051 X(in)S
1097 X(the)S 1161 X(local)S 1256 X(cell)S 1330 X(and)S 1403 X(in)S
1450 X(foreign)S 1583 X(cells)S 75 y 508 X(\267)S 543 X(Speci\014c)S
691 X(individual)S 873 X(groups)S 1000 X(in)S 1046 X(the)S 1111 X
(local)S 1205 X(cell)S 1279 X(and)S 1353 X(in)S 1399 X(foreign)S 
1533 X(cells)S 74 y 508 X(\267)S 543 X(Any)S 631 X(other)S 732 X
(principals)S 912 X(in)S 961 X(a)S 995 X(speci\014c)S 1138 X
(foreign)S 1274 X(cell)S 1350 X(for)S 1415 X(whom)S 1535 X
(individual)S 1719 X(permissions)S 50 y 543 X(have)S 636 X(not)S 
702 X(been)S 795 X(set)S 75 y 508 X(\267)S 543 X(Any)S 624 X
(principals)S 798 X(in)S 840 X(any)S 909 X(cell)S 979 X(who)S 1060 X
(have)S 1148 X(been)S 1236 X(authenticated)S 1467 X(by)S 1518 X
(the)S 1578 X(DCE)S 1671 X(Authentication)S 50 y 543 X(Service)S 
75 y 508 X(\267)S 543 X(Delegate)S 705 X(users,)S 814 X(servers,)S
956 X(or)S 1004 X(groups,)S 1142 X(in)S 1188 X(local)S 1282 X(or)S
1331 X(foreign)S 1464 X(cells)S 74 y 508 X(\267)S 543 X
(Unauthorized)S 783 X(users)S 1995 Y 472 X(ACLs)S 583 X(also)S 661 X
(provide)S 799 X(a)S 828 X(masking)S 980 X(capability)S 1155 X(and)S
1226 X(a)S 1255 X(method)S 1391 X(for)S 1450 X(integrating)S 1641 X
(protections)S 1837 X(from)S 50 y 472 X(DCE)S 569 X(versions)S 721 X
(that)S 798 X(are)S 862 X(different)S 1019 X(from)S 1113 X(the)S 
1178 X(current)S 1309 X(version.)S 2144 Y 472 X(File)S 555 X
(systems)S 705 X(are)S 774 X(frequently)S 962 X(designed)S 1128 X
(to)S 1179 X(provide)S 1324 X(access)S 1448 X(permissions)S 1664 X
(for)S 1731 X(\014le)S 1802 X(system)S 50 y 472 X(objects,)S 616 X
(such)S 707 X(as)S 758 X(\014les)S 842 X(and)S 918 X(directories.)S
1141 X(ACLs)S 1256 X(in)S 1303 X(DCE)S 1402 X(are)S 1468 X(more)S 
1569 X(extensive.)S 1774 X(In)S 1824 X(DCE,)S 50 y 472 X(many)S 
575 X(objects)S 703 X(can)S 770 X(have)S 859 X(ACLs)S 968 X(and)S 
1038 X(be)S 1088 X(assigned)S 1241 X(permissions.)S 1481 X(DCE)S 
1574 X(ACLs)S 1684 X(control)S 1811 X(access)S 50 y 472 X(to)S 519 X
(objects)S 652 X(managed)S 816 X(by)S 873 X(DCE)S 970 X
(components,)S 1196 X(like)S 1273 X(the)S 1338 X(Distributed)S 1540 X
(File)S 1619 X(Service,)S 1769 X(the)S 1834 X(DCE)S 50 y 472 X
(Security)S 625 X(Service,)S 773 X(and)S 847 X(the)S 912 X(DCE)S 
1009 X(Directory)S 1181 X(Service.)S 2503 Y 236 X F5(28{2)S 905 X
(OSF)S
XP /F13 /CM-Helvetica 29.058 11 DF RP
990 2488 XY F13(\220)S 15 y 1026 X F5(DCE)S 1127 X(Administration)S
1404 X(Guide)S 1528 X(|)S 1584 X(Core)S 1688 X(Components)S
%%PageTrailer
PF  EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 57 189 461 748

%%Trailer
EndDviLaserDoc

%%BoundingBox: 42 189 509 748
%%Pages: 777
%%DocumentFonts: Times-Bold Times-Roman Helvetica Times-Italic
%%+ Courier Symbol Courier-Oblique Courier-Bold
