...\" OSF-RFC 63.3
...\"
...\" FORMATTING INSTRUCTIONS for this RFC:
...\"       nroff -Tlpr rfc63.3.roff > rfc63.3.txt
...\"       troff -Tps rfc63.3.roff | <ps-post-processor> > rfc63.3.ps
...\" (Where "troff" means "device-independent troff", or "ditroff".)
...\"
...\" =========================================================================
...\" This template first sets a bunch of *roff options (authors/readers
...\" don't usually have to know about these).
...\" Then it defines some strings and macros, many of which deal with
...\" things that differ between nroff & troff (some of these may not be
...\" perfect, but they're better than nothing -- to do a really good
...\" job would require a real semantic markup language.
...\" Convention: "Begin/End" for strings, "Start/Finish" for macros.
...\" Strings:
...\"       \*(f!        - Footnote string (replaces \*F).
...\"       \*(hB, \*(hE - Page header/footer font (internal use).
...\"       \*(iB, \*(iE - Doc header font (internal use).
...\"       \*(qB, \*(qE - Quotations.
...\"       \*(eB, \*(eE - Emphasis in primary font.
...\"       \*(lB, \*(lE - Literal font.
...\"       \*(mB, \*(mE - Second literal font.
...\"       \*(fB, \*(fE - Emphasis in literal font.
...\" Macros:
...\"       .aH      - Appendix header macro (uses number register \na).
...\"       .aL      - Automatic list macro (replaces .AL; uses num reg \ng).
...\"       .tS, .tF - Title start/finish (internal use).
...\"       .cS, .cF - Displays (no-fill) without indentation.
...\"       .dS, .dF - Displays (no-fill) with indentation.
...\"       .iS, .iF - Indented (fill) text.
...\" -------------------------------------------------------------------------
...\" First, set up some number registers here (instead of on command line),
...\" and include the "mm" macro package here (instead of on command line).
...\" -------------------------------------------------------------------------
.if n .nr L 66 \" Nroff page length = 66 lines.
.if t .nr L 11i \" Troff page length = 11 inches.
.if n .nr W 72 \" Nroff page width = 72 columns.
.if t .nr W 6.5i \" Troff page width = 6.5 inches.
.if n .nr O 3 \" Nroff page offset = 3 columns.
.if t .nr O 0.75i \" Troff page offset = 0.75 inches.
.nr N 2 \" No header on page 1.
.so /usr/lib/tmac/tmac.m \" Points to "mm" package, in /usr/lib/macros.
...\" -------------------------------------------------------------------------
...\" Next, twiddle the "mm" package to suit our preferred style.
...\" -------------------------------------------------------------------------
...\" Point size and font types.
...\" -------------------------------------------------------------------------
.if n .fp 1 R \" "Regular" font ONLY -- don't use any others in nroff.
.if t \{ .S 10 12 \" Point size = 10, vertical spacing = 12.
...\" Note: Some systems give different names to these fonts.
.fp 1 R \" Times roman.
.fp 2 I \" Times italic.
.fp 3 B \" Times bold.
.fp 4 BI \" Times bold italic.
.fp 5 CW \" Courier.
.fp 6 CI \" Courier oblique.
.fp 7 CB \" Courier bold.
.fp 8 CX \" Courier bold oblique.
.fp 9 H \" Helvetica.
.fp 10 HI \" Helvetica oblique.
.fp 11 HB \" Helvetica bold.
.fp 12 HX \" Helvetica bold oblique.
.fp 13 S \} \" Special symbol font -- normally only called automatically.
...\" -------------------------------------------------------------------------
...\" Headings; page header and footers; titles.
...\" -------------------------------------------------------------------------
.nr Ej 0 \" No eject for first-level headings.
.nr Hs 7 \" Heading space level = blank line after heading (all levels).
.nr Hb 7 \" Heading break level = break after heading (all levels).
.nr Hi 1 \" Post-heading indent = paragraph indent.
.nr Hc 0 \" Heading centering = none.
.if n .ds HF 1 1 1 1 1 1 1 \" Heading fonts = regular (no underlining).
.if t .ds HF 11 11 11 11 11 11 11 \" Heading fonts = Helvetica bold.
.if t .ds HP 0 0 0 0 0 0 0 \" Heading point sizes (= default).
.HM 1 1 1 1 1 1 1 \" Heading mark = arabic (all levels).
.nr Hu 1 \" Unnumbered heading level = 1 (see aH macro, below).
.de HX \" Beginning-of-heading processing.
.in 0 \" Left justify headings.
.ie     \\$2=0 .ds }0\" Null string heading mark for HU.
.el .ie \\$1=1 .ds }0 \\n(H1.\ \&\" Heading marks = dotted sections + 1 space.
.el .ie \\$1=2 .ds }0 \\n(H1.\\n(H2.\ \&
.el .ie \\$1=3 .ds }0 \\n(H1.\\n(H2.\\n(H3.\ \&
.el .ie \\$1=4 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\ \&
.el .ie \\$1=5 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\\n(H5.\ \&
.el .ie \\$1=6 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\\n(H5.\\n(H6.\ \&
.el .if \\$1=7 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\\n(H5.\\n(H6.\\n(H7.\ \&
..
.de HZ \" End-of-heading processing.
.if n .in 3 \" Indent body of doc by 3 columns in nroff.
.if t .in 0 \" Don't indent in troff.
..
.if n .ds hB \&\" Page header/footer font begin in nroff.
.if t .ds hB \f9\" Page header/footer font begin in troff.
.if n .ds hE \&\" Page header/footer font end in nroff.
.if t .ds hE \fP\" Page header/footer font end in troff.
.if n .ds iB \&\" Doc header font begin in nroff.
.if t .ds iB \f(11\" Doc header font begin in troff.
.if n .ds iE \&\" Doc header font end in nroff.
.if t .ds iE \f1\" Doc header font end in troff.
.de tS \" Title start.
.SP 2 \" 2 blank lines.
.ce 99 \" Center (each line of) title.
.if t \{ .ft 11 \" Bold helvetica.
.S +2 D \} \" Bigger point size.
..
.de tF \" Title finish.
.ce \" Turn off centering.
.SP 1 \" 1 blank line.
.if t \{ .ft 1 \" Return to regular font.
.S P P \} \" Return to regular point size.
..
...\" -------------------------------------------------------------------------
...\" Special Appendix heading macro, .aH.
...\" -------------------------------------------------------------------------
.nr a 0 1 \" Appendix number.
.af a A \" Assign format upper-case alpabetic to number register a.
.de aH \" Appendix heading macro.
.if \\na=0 \{ .nr H1 0 \" Reset H1 to 0.
.HM A 1 1 1 1 1 1 \} \" Heading mark = Upper case alphabetic + arabics.
.HU "APPENDIX \\n+a. \\$1"
..
...\" -------------------------------------------------------------------------
...\" Paragraph stuff.
...\" -------------------------------------------------------------------------
.nr Pt 0 \" Paragraph type = left-justified.
.nr Pi 0 \" Paragraph indent = 0.
.nr Ps 1 \" Paragraph spacing = 1 blank space.
...\" -------------------------------------------------------------------------
...\" Special list macro, .aL (replaces .AL, for all levels).
...\" This should be used for almost all lists (including ".LI "\ "").
...\" The only exception is variable lists (.VL, indented by multiples of 6).
...\" -------------------------------------------------------------------------
.de aL
.nr g \\n(:g
...\" In-line lists should be numbered (by hand): (1), (2), (3), ...
.ie     \\ng=0 .LB 6 0 1 3 a \" 1st level: (a), (b), (c), ...
.el .ie \\ng=1 .LB 6 0 1 3 i \" 2nd level: (i), (ii), (iii), ...
.el .ie \\ng=2 .LB 6 0 1 4 a \" 3rd level: [a], [b], [c], ...
.el .ie \\ng=3 .LB 6 0 1 4 i \" 4th level: [i], [ii], [iii], ...
.el .ie \\ng=4 .LB 6 0 1 6 a \" 5th level: {a}, {b}, {c}, ...
.el .if \\ng=5 .LB 6 0 1 6 i \" 6th level: {i}, {ii}, {iii}, ...
..
.nr Ls 6 \" Blank lines between all list items, by default (but adjustable).
...\" -------------------------------------------------------------------------
...\" Footnote stuff; special footnote string, \*(f!.
...\" -------------------------------------------------------------------------
.if n .ds f! [\\*F]\" Footnote string (replaces \*F in nroff).
.if t .ds f! \\*F\" Footnote string (same as \*F in troff).
.if n .FD 6 \" Footnotes not hyphenated or indented, label left justified.
.if t .FD 5 \" Footnotes hyphenated, not indented, label left justified.
.nr Fs 1 \" 1 blank line between footnotes.
...\" -------------------------------------------------------------------------
...\" Line adjustment stuff.
...\" -------------------------------------------------------------------------
.if n .nr Hy 0 \" No hyphenation in nroff.
.if t .nr Hy 1 \" Hyphenate in troff.
.if n .SA 0 \" Set adjust: left margin only in nroff.
.if t .SA 1 \" Set adjust: left and right margins in troff.
...\" -------------------------------------------------------------------------
...\" Miscellaneous stuff.
...\" -------------------------------------------------------------------------
.ta \" No tabs by default -- set them up by hand as needed.
.nr Si \n(Ls \" Default indent for .DS display macro = 6 (use in troff only).
...\" -------------------------------------------------------------------------
...\" Displays.
...\" -------------------------------------------------------------------------
.de cS \" Display start: no-fill, literal font, no indentation.
.P
.nf \" No fill mode.
.if t .ft 5 \" Constant width font in troff.
..
...\" Within .cS, ".ne"'s can be added by hand, but should be minimized.
.de cF \" Display finish.
.if t .ft 1 \" Back to standard font in troff.
.fi \" Fill mode.
.P
..
.de dS \" Display start: no-fill, literal font, with indentation.
.P
.aL \" Use .aL macro for consistent indentation.
.nf \" No fill mode.
.LI "\ " \" List item will no (visible) marker.
.if t .ft 5 \" Constant width font in troff.
..
...\" Within .dS, ".ne"'s can be added by hand, but should be minimized.
.de dF \" Display finish.
.if t .ft 1 \" Back to standard font in troff.
.fi \" Fill mode.
.LE
.P
..
.de iS \" Indent start: fill, regular font, with indentation.
.P
.aL
.LI "\ "
..
.de iF \" Indent finish.
.LE
.P
..
.de jS \" Indent start: no-fill, regular font, with indentation.
.P
.aL
.nf
.LI "\ "
..
.de jF \" Indent finish.
.fi
.LE
.P
..
.de nS \" Note to Reviewers start: fill, italics font, with indentation.
.P
.aL \" Use .aL macro for consistent indentation.
.LI "\ " \" List item will no (visible) marker.
.if t .ft 2 \" Italics font in troff.
Note to Reviewers:
..
...\" Within .dS, ".ne"'s can be added by hand, but should be minimized.
.de nF \" Note to Reviewers finish.
.if t .ft 1 \" Back to standard font in troff.
.LE
.P
..
...\" -------------------------------------------------------------------------
...\" Quotation marks and font toggles.
...\" -------------------------------------------------------------------------
.if n .ds qB \&"\" Quotation begin in nroff.
.if t .ds qB ``\" Quotation begin in troff.
.if n .ds qE \&"\" Quotation end in nroff.
.if t .ds qE ''\" Quotation end in troff.
.if n .ds eB \&\" Emphasis primary font begin in nroff.
.if t .ds eB \f2\" Emphasis primary font begin in troff.
.if n .ds eE \&\" Emphasis primary font end in nroff.
.if t .ds eE \fP\" Emphasis primary font end in troff.
.if n .ds lB \&`\" Literal font begin in nroff.
.if t .ds lB \f5\" Literal font begin in troff.
.if n .ds lE \&'\" Literal font end in nroff.
.if t .ds lE \fP\" Literal font end in troff.
.if n .ds mB `\" Second literal font begin in nroff.
.if t .ds mB \f5\" Second literal font begin in troff.
.if n .ds mE '\" Second literal font end in nroff.
.if t .ds mE \fP\" Second literal font end in troff.
.if n .ds fB \&\" Emphasis literal font begin in nroff.
.if t .ds fB \fP\f6\" Emphasis literal font begin in troff.
.if n .ds fE \&\" Emphasis literal font end in nroff.
.if t .ds fE \fP\f5\" Emphasis literal font end in troff.
.if n .ds dB \&\" Definition begin in nroff.
.if t .ds dB \f3\" Definition begin in troff.
.if n .ds dE \&\" Definition end in nroff.
.if t .ds dE \fP\" Definition end in troff.
...\" =========================================================================
...\" Finally, it's time to start writing the document!
...\" The OSF-RFC author modifies the following header/footer info.
...\" (The major/minor number is assigned by the OSF-RFC Editor.)
...\" =========================================================================
.ND "October 1996" \" Date must be hard-coded.
.PH "$\*(hBOSF-RFC 63.3$DCE 1.2 Contents Overview$\\\\*(DT\*(hE$"
...\".PF "$\*(hBSalz$DRAFT #5$Page \\\\n%\*(hE$" \" Draft version.
.PF "$\*(hBSalz $$Page \\\\n%\*(hE$" \" Final version.
...\"
...\" Following are the first printed lines (header info) of the document:
...\"
\&\" Force top-of-first-page trap to position the following info correctly.
.tl $\*(iBOpen Software Foundation$$R. Salz (OSF)\*(iE$
.tl $\*(iBRequest For Comments: 63.3$$\*(DT\*(iE$
.tS \" Title, in all capitals (can span multiple lines):
DCE 1.2 CONTENTS OVERVIEW
.tF
...\" =========================================================================
...\" Now, the actual body of the document!!
...\" Heading capitalization style:
...\"     1st level: CAPITALIZE ALL WORDS
...\"     2nd level: Capitalize Initial Letters of All (Significant) Words
...\"     3rd-7th level: Capitalize first letter of first word only
...\" =========================================================================
.P
.H 1 "INTRODUCTION"
.P
This document describes the goals and contents of DCE 1.2.
The purpose of the document is to inform the reader of the features of the
project and serve as part of the continuing process of factoring membership
input into the development of DCE.
.P
DCE 1.2 is the first project to be operated under OSF's pre-structured
technology (PST) model.
In this model the project is planned, managed, developed, and funded by a
group of project sponsors.
The sponsors of the DCE 1.2 PST are Digital, HP, Hitachi, and IBM.
These sponsors, two representatives of the Open Group Customer Council
(formerly the OSF End User Steering Committee),
and a representative of the OSF permanent staff form a Project Steering
Committee (PSC) which is responsible for running the program.
.P
This document is a product of the DCE 1.2 PSC.
It is derived from information provided by the DCE Technical Planning
Committee (TPC), which is comprised of lead architects from each of the
sponsoring companies and representatives from the OSF.
The TPC also serves as a continuing architectural review body for DCE.
.P
The contents of the project were determined by the PSC after gathering
information from a variety of sources: OSF SIG's, OSF staff, the Open
Group Customer Council, as well as each sponsor company's marketing and
engineering departments.
The project described here meets the technical requirements gathered by
the sponsors, will be delivered in two releases approximately 18 and 24
months after the delivery of DCE 1.1, and can be completed within the
budget set by the sponsors.
.P
Comments regarding this document should be sent to the
\*(lBdce-1.2-comments@osf.org\*(lE mail alias and to the appropriate
OSF SIG's (e.g., \*(lBsig-dce@osf.org\*(lE, \*(lBsig-security@osf.org\*(lE).
.P
.H 2 "Document Structure"
.P
The remainder of this document is divided into four sections.
Section two describes the major goal and motivation of the project.
Section three describes the technical contents of the project.
Section four describes the current state of the project and the planned
contents of each release.
.P
Functional specifications of the technology deliverables have been published
as OSF RFC's and are referred-to below.
See [RFC\ Index] for details.
.P
This document represents the efforts of the DCE 1.2 Project Steering
Committee, the DCE Technical Planning Committee, and staff at the sponsor
companies and OSF.
There are too many individuals to name them all, but \*(qByou know who
you are\*(qE.
.P
.H 1 "THE MAJOR GOAL OF DCE 1.2: EXPANDING DEPLOYMENT"
.P
The primary goal for DCE 1.2 is to facilitate the continuing trend
toward enterprise-wide deployment of DCE in the 1996\(mi1997 timeframe.
To reach this goal we need to continue to make DCE more scalable, easier
to program, more easily manageable, and more smoothly integrated with the
pre-existing distributed computing technologies that
exist alongside DCE in many enterprises.
.P
DCE 1.2 builds upon a series of releases that provide a strong basis
for establishing DCE as an enterprise-wide distributed computing solution.
Progress in the areas of performance, robustness, scalability, richness
of programming tools, and ease of administration have made DCE capable of
serving as the infrastructure upon which businesses can build a coherent
distributed computing environment using heterogeneous systems.
DCE 1.2 will continue on that path.
.P
With DCE's increasing deployment, the requirements for improvement have become
more focused, reflecting actual experience rather than speculative
interest.
Users and administrators have identified where improvements are needed, and
DCE 1.2 will address those areas.
.P
DCE 1.2 focuses on broadening the appeal of DCE rather than on extending
the technology for the sake of technology development.
It will be a balance of new user-oriented features and basic capabilities
which set the stage for future functionality.
As DCE matures, the trend will be one of evolution rather than revolution.
DCE 1.2 will protect the user's investment in DCE while continuing to move
forward.
.P
.H 1 "TECHNOLOGY DESCRIPTIONS"
.P
The technology in this PST can be divided into four major areas: integration
with other environments, ease of administration, ease of programming, and
scalability.
.P
Each section below starts with an overview of the area.
Each overview contains a short summary of the issues being addressed and
usually contains a set of one-sentence descriptions of how DCE 1.2 will
address them.
Following the summary, there are more detailed sub-sections explaining
each technology deliverable.
.P
.H 2 "Integration with Other Environments"
.P
Few DCE installations are deployed in isolation:  most environments include
a mixture of existing technologies that have some degree of overlap with
services provided by DCE.
DCE 1.2 will address this by allowing access between DCE and the most popular
of these environments.
.P
The desktop is becoming the paramount platform in the enterprise.
Currently Novell's Netware is the dominant network operating system.
Sun's Open Network Computing system is present on many enterprise platforms
as well.
Therefore, DCE 1.2 provides features to help integrate Netware and ONC with
DCE facilities.
.P
MIT's Kerberos network authentication environment has gained support in
the commercial sector.
More and more, users demand that the Kerberos environment provided as part
of DCE be compatible with the standard version defined by the IETF.
DCE 1.2 will guarantee this wire protocol compatibility and provide
interoperable utility programs.
.P
Public key technology is becoming an increasingly important mechanism in
many computing environments and applications.
There are a few short-term issues that DCE should address.
Many enterprises need login technology that does not require secret keys.
Tools that support use of public key certificates and software storage of
private keys will allow DCE to migrate smoothly into the evolving public
key oriented computing environment.
.P
The DCE security runtime supports the RPC client-server programming model.
DCE 1.2 will provide peer-to-peer authentication.
This allows other communication models such as message-oriented middleware
to use the DCE security infrastructure.
.P
.H 3 "Netware coexistence"
.P
Novell Netware has established itself as the dominant information sharing
technology in small personal computing networks.
To establish a coherent enterprise-wide computing environment, the large
population of Netware users must be integrated into the DCE environment.
DCE 1.2 addresses this integration by providing file sharing services and
administrative aids that allow Netware 3.12 users and DCE users to have a
single identity and access to the DCE filesystem, DFS.
.P
In DCE 1.2, Netware clients can define any directory tree in DFS as a
Netware volume and use standard Netware or DOS commands and API's
to manipulate the files and directories under it.
File access security is maintained through a gateway similar to the NFS
gateway delivered as part of DCE 1.1.
By adding data to the user object maintained in the Netware Bindery, DCE
1.2 can map a Netware user into an authenticated DCE principal.
The gateway will map identities, filenames, and permissions across the
two domains.
.P
For details (including a list of software versions supported), see [RFC\ 96].
.P
.H 3 "ONC coexistence"
.P
The secure NFS protocol gateway planned for DCE 1.2 but accelerated into
the DCE 1.1 release makes NFS client machines instant consumers of the
DCE distributed file system.
Additional support for DFS host-specific and architecture-specific
(\*(lB@HOST\*(lE and \*(lB@SYS\*(lE) file naming features will be added.
.P
For details, see [RFC\ 84].
.P
.H 3 "Kerberos V5 support"
.P
The DCE security service includes an implementation of the MIT Kerberos
Version 5 (V5) authentication and key distribution service.
Prior to DCE 1.2 there has been no interoperability commitment in the OSF
DCE offering.
.P
The Kerberos V5 protocol has become more stable with the release
of IETF-RFC 1510 [Kohl] and its movement through the IETF standards process.
DCE 1.2 will enhance the high degree of interoperability that existed in
previous releases with committed support for the IETF-RFC 1510 protocol.
This support will formally allow Kerberos V5 applications running on either
DCE or non-DCE platforms to access the DCE security server as a
full-function IETF-RFC 1510 Kerberos server.
The DCE security server's implementation will be tested against MIT Kerberos
Version 5, releases beta 4 and beta 5.
.P
Many consumers of DCE wish to extend the single login environment.
The MIT Kerberos releases include network utilities that transmit user
account information (e.g., \*(lBtelnet\*(lE, \*(lBrlogin\*(lE, and
\*(lBftp\*(lE).
These utilities are integrated with Kerberos to achieve a single login
facility in the networked environment.
Earlier DCE releases have not included these utilities, in part because
IETF standardization has not been completed.
DCE 1.2, however, will include implementations of \*(lBrlogin\*(lE
and \*(lBrsh\*(lE that will use DCE's Kerberos facilities
to avoid exposing passwords on a network.
.P
For details, see [RFC\ 92].
.P
.H 3 "Public key support"
.P
DCE 1.2 will allow public key technology to be used to support login.
With this technology, the security server need not store the long term
key (or password) for a principal so that it will remain undisclosed should
any compromise of the security server occur.
Administrators can specify that some principals may use the pre-DCE 1.2
mechanisms while others have access to the public key mechanism; it will
retain full interoperability with existing DCE releases.
.P
At login, public key users will receive credentials that allow them to
use the current Kerberos-based DCE authentication mechanism.
A new pre-authentication protocol is used; further, the login client need
not determine whether a given user is public-key-capable
prior to requesting credentials.
.P
As a transition aide, a new \*(qBkeystore server\*(qE will be provided.
This server will store private keys for users or sites without access
to hardware-based cryptographic tokens, secure filesystem storage, etc.
.P
A new certification API is also being provided.
This facility handles the mapping of a principal name to a public key,
allowing programmers to hide the details of their own Certificate Authority
(CA) access methods and trust model.
By letting developers \*(qBplug in\*(qE their own policy and storage
modules, this facility continues the DCE practice of providing widespread
foundation without dictating a single use model.
.P
For details, see [RFC\ 68], [RFC\ 80], and [RFC\ 94].
.P
.H 3 "User-to-user authentication"
.P
When the concept of \*(qBserver\*(qE is associated with a long running
system resource \*(EM like the name server or the security server \*(EM
it seems natural that the server is running on a machine with access to
the long term key to the identity of that server.
(If for no other reason then that the server is not normally associated
with a human user but rather with a pseudo-user corresponding to the system
service.)
This does not, however, map well onto all application domains.
In particular, some applications need a \*(qBpeer-to-peer\*(qE model, such
as is described as requirement D3 of [RFC\ 8].
.P
The user-to-user authentication facility will provide an alternate Ticket
Granting Service (TGS) protocol as defined in IETF-RFC 1510.
This will provide server applications with the same sort of insulation
from a principal's long term key that is available for client applications.
In particular it will be possible to direct a protected RPC to a program
that only has a login context, and no key table (file) or other access
to a long-term key.
.P
For details, see [RFC\ 91].
.P
.H 2 "Ease of Administration"
One of the most important aspects of the work done in DCE 1.1 was the
improvement of administrative interfaces.
DCE 1.2 will continue this trend with additional work on \*(lBdcecp\*(lE, the
DCE control program.
This release will enhance inter-cell cooperation by allowing groups to contain
foreign principals.
.P
.P
.H 3 "dcecp Work"
.P
The \*(lBdcecp\*(lE program provided in DCE 1.1 took an important first
step in unifying the DCE management clients.
It provides an extensible, scriptable programming environment that allows
management tasks to be developed and run across a wide variety of DCE hosts.
Its consistency and orthogonality will also make it easier for DCE
administrators to understand what they need to do in order to accomplish a
specific task.
.P
DCE 1.2 continues this work by \*(qBfinishing off\*(qE \*(lBdcecp\*(lE so
that it implements all functionality of the current control programs.
All day-to-day management of DCE can now be done through this single
user interface.
The old programs, and their documentation, will be retained in DCE 1.2 for
compatibility.
.P
.H 3 "Global groups"
.P
DCE 1.2 will allow principals from a foreign cell to be added to a group
in the local cell.
For example, this will allow cross-cell cooperation among DCE time services.
It should also ease enterprise-wide security administration, cell
reconfiguration, and other management tasks.
.P
For details, see [RFC\ 87].
.P
.H 2 "Ease of Programming"
.P
Application development will be simplified through the support for C++
environments and single-threaded client applications.
.P
.H 3 "IDL C++ support"
.P
DCE 1.2 will add C++ support to IDL.
This support allows client and server programs written in C++ to utilize
DCE RPC in a highly transparent manner using natural C++ constructs.
The IDL language will be extended to support C++ features such as inheritance
and object references.
.P
A client using these features can create remote objects or look up
existing remote objects by invoking the static member functions of the
interface.
Once an object reference is obtained, any of its member functions can be
invoked.
Local and remote objects can both be used in the application with no client
code differences.
.P
The IDL C++ support provides language enhancements and related runtime
functions for applications to manage distributed objects.
Application developers can use the C++ support as is, or as the
underlying framework for an object model at a higher level of abstraction.
The C++ support does not force adoption of any one object model or class
hierarchy, providing the developer with much flexibility.
.P
For more details, see [RFC\ 48].
.P
.H 3 "Single-threaded RPC"
.P
Many existing applications that would benefit from deployment in a
distributed environment have not been written to be thread-aware and do not
run properly in a threaded environment.
In addition, developers often use third-party packages, which are themselves
not thread-aware.
The existence of a thread-free version of DCE RPC would increase software
reuse by making it substantially easier for these applications to be adapted
to the DCE.
.P
In DCE 1.2 datagram RPC clients will no longer have a dependency on a
threaded environment.
This simplifies the task of application developers, eliminating the need
for thread-aware programmers, debuggers and support libraries.
.P
Some of the techniques for achieving this work item have been described
in [RFC\ 31].
The client side of the RPC NSI has also had its dependency on threads
removed.
.P
.H 2 "Scalability"
.P
DCE 1.2 is addressing implementation limits that restrict scaling.
While DCE 1.2 is considering the long term implications of scaling to
cells with millions of users and hosts, short term activities are also
being pursued to make sure that cells scale well when dealing with 100,000
users, hosts, or servers.
.P
.H 3 "Improvements to security"
.P
Simple changes to the security server will be made to obtain considerable
performance improvements when dealing with large cells (those with more
than 50,000 principals).
This includes documenting the configurable checkpoint interval
and partitioning internal datasets so that the amount of data written to
disk during a checkpoint is proportional to the amount of data modified.
.P
In addition, DCE 1.2 will identify bottlenecks and places where resource
consumption could be reduced and address them as possible.
.P
For details, see [RFC\ 93].
.P
.H 3 "Improvements to DFS"
.P
There are a number of areas where DFS performance will be improved and made
significantly more stable.
.P
.H 4 "Optimized token manager"
.P
Improvements to the token manager will decrease the memory requirements
and improve performance and reliability of DFS.
The resulting token manager should be about half the size and offer a
factor of six improvement in performance of token-related operations.
.P
For details, see [RFC\ 73].
.P
.H 4 "DFS server preferences"
.P
Currently DFS makes an arbitrary choice of a file server which could cause
poor performance and reduce the ability to scale in a WAN environment.
DCE 1.2 will allow an administrator to identify server preferences on a
per-fileset basis.
Default preferences will be based on IP subnet numbers.
This feature will allow DFS clients to make intelligent choices about
which servers to use for different filesets.
.P
For details, see [RFC\ 74].
.P
.H 4 "Vnode/VM management"
.P
DCE 1.2 will improve the way that LFS handles vnodes.
These improvements will allow DFS to perform significantly better as the
system is subjected to higher levels of stress.
In particular, finer-grain locking will operate more efficiently at high,
concurrent administrative and user loads, and will operate more efficiently
on multiprocessor machines.
In addition, an improved interface between LFS and the native virtual
memory subsystem should simplify I/O access patterns and code paths.
.P
For details, see [RFC\ 75] and [RFC\ 78].
.P
.H 4 "Replication enhancements"
.P
A fundamental principle of DCE is that services should be replicated for
high availability and enhanced scalability.
The DFS architecture provides replicated filesets as a way to implement
this.
.P
Planned enhancements improve the DFS replication implementation to achieve
greater reliability and better performance.
Users will get the benefit of a system which has higher availability and
better scalability.
Administrators will be able to reorganize how data are located and replicated.
.P
DCE 1.2 will convert the replication server from a serial server to a
concurrent server.
The existing DFS replication server accepts updates to replicas
serially: if several replicated filesets are being retrieved from a collection
of servers, the changes from the separate (read/write) filesets are
retrieved one after the other.
In a large system where many filesets are being propagated, this algorithm
represents a bottleneck to scalability.
.P
For details, see [RFC\ 76].
.P
.H 4 "Multi-home support"
.P
DFS currently requires all clients and servers to be reachable via all
network interfaces.
DCE 1.2 will enhance DFS servers to perform better on hosts connected
through multiple interfaces to multiple networks.
.P
For details, see [RFC\ 77].
.P
.H 3 "DFS Bulk RPC Operations"
.P
Common operations such as directory browsing currently result in one
RPC operation for every directory entry.
The DFS protocols will be enhanced to support a new \*(qBbulk status\*(qE
operation.
For small directories (where the definition of \*(qBsmall\*(qE should
incorporate most ordinary working-user directories), the bulk status
RPC browses the entire directory in one RPC.
While this does not reduce the amount of work done by the server,
the reduction in RPC activity may improve the throughput of directory
browsing by as much as 50%.
.P
For details, see [RFC\ 89].
.P
.H 4 "DFS support for jukebox backup"
.P
The current DFS backup facility requires an operator to manually respond
to queries from the device controller by performing actions such as
loading tapes.
Modern equipment using stackers and the like auto-load media and can
use default responses.
.P
The DFS backup tape coordinator, \*(lBbutc\*(lE, will be able to read a
new automatic operation configuration file.
This file will specify scripts to be executed automatically when the
DFS backup system needs to change media, validate device names, and so on.
This will make it possible to do unattended backup of large-scale
DFS file systems.
.P
For details, see [RFC\ 88].
.P
.H 4 "DFS backup performance enhancements"
.P
A number of performance bottlenecks have been identified in the behavior of
DFS backup, dumps, and restores.
The following enhancements will be made:
.aL
.LI
A \*(qBbulk update\*(qE operation will be added so that the master sync site
can send sets of updates to each secondary server in a single RPC.
.LI
The master sync site will update secondary servers asynchronously, and
will work on the subsequent batch of changes in parallel with the RPC
calls being performed.
.LI
Database transactions will not be committed asynchronously, so all servers
will do commit processing in parallel.
.LI
A new RPC operation will be added so that multiple volumes can be added
to the backup datase in a single RPC call.
.LE
.P
.H 4 "Support for 64-bit filesystems"
.P
As 64-bit architectures become popular, there is growing desire to
support very large files and filesystems.
DCE 1.2 will support such entities while maintaining interoperability
with the current widespread 32-bit machines.
.P
For details, see [RFC\ 51].
.P
.H 4 "Use of protected RPC"
.P
DFS currently uses a range of DCE protection levels on its RPC operations,
ranging from unauthenticated for peer \*(lBrepserver\*(lE processes to
packet-integrity or higher for the management clients.
DCE 1.2 will allow an administrator to specify a range of DCE protections
that can be used for most client-server communication.
All architectural uses of unauthenticated RPCs will be eliminated.
.P
The new administrative controls allow administrators to distinguish between
same-cell communication from inter-cell communication, so that a DFS
Cache Manager will use one set of protection rules for intra-cell use
(presumably protected behind a network firewall), while using another set
for data-sharing outside the cell.
Command line arguments and management clients will allow administrators to
achieve the right balance of protection and computational overhead.
.P
For details, see [RFC\ 90].
This work is a late addition to the DCE PST and is in direct response
to recognition of weaknesses first noticed in October 1995.
.P
.H 2 "Documentation"
.P
SGML is an industry standard for representing documentation that is
intended to be viewed in a variety of formats, encompassing printed
matter and on-line \*(qBhypertext\*(qE viewing.
In DCE 1.2 all documentation will be distributed as SGML source, using
the DocBook Document Type Definition.
.P
.H 1 "RELEASE CONTENTS"
.P
As stated above, the DCE 1.2 PST will be made available in two
releases: DCE 1.2.1 in March 1996, and DCE 1.2.2 in December 1996.
The contents are as follows:
.P
.nr Ls 1
.aL
.LI
DCE 1.2.1:
.aL
.LI
Netware coexistence.
.LI
NFS gateway enhancements.
.LI
Dcecp work.
.LI
IDL C++ support.
.LI
Optimized token manager.
.LI
DFS server preferences.
.LI
Vnode/VM management.
.LI
DFS replication enhancements.
.LI
DFS Bulk RPC Operations.
.LI
DFS support for jukebox backup.
.LE
.LI
DCE 1.2.2:
.aL
.LI
Kerberos V5 support.
.LI
Public key support.
.LI
User-to-user authentication.
.LI
Global groups.
.LI
Single-threaded RPC.
.LI
Scalability improvements to security.
.LI
DFS server multi-home support.
.LI
DFS backup performance enhancements.
.LI
Support for 64-bit filesystems.
.LI
Use of protected RPC.
.LI
Documentation in SGML.
.LE
.LE
.nr Ls 6
.P
There will be an Early Access program so that DCE 1.2 licensees can have
snapshot access to the project source.
.P
...\"=========================================================================
...\" References go here, as an unnumbered heading.
...\" =========================================================================
.HU "REFERENCES"
.P
Note that some of the OSF-RFC's below may be revised after the
present one is published; further, some relevant new RFC's may
be published.  It is incumbent on the consumer of this RFC
to track these developments.
.P
.nr Ls 1 \" Blank line between items in reference list.
.VL 12 0
.LI "[Kohl]"
J. Kohl, C. Neuman,
\*(qBThe Kerberos Network Authentication Service (V5)\*(qE,
IETF Network Working Group Request for Comments 1510, September 1993.
.LI "[RFC\ 8]"
B. Blakley,
\*(qBDCE SIG Security Requirements\*(qE,
DCE-RFC 8.1, October 1995.
.LI "[RFC\ 31]"
M. Karuzis,
\*(qBSupporting Threadless DCE Clients\*(qE,
DCE-RFC 31.0, December 1992.
.LI "[RFC\ 48]"
R. Viveney,
\*(qBC++ Support in DCE RPC IDL \*(EM Functional Specification\*(qE,
OSF-RFC 48.3, April 1996.
.LI "[RFC\ 51]"
S. Strange,
\*(qBA 32-Bit/64-Bit Interoperability Solution for DFS\*(qE,
DCE-RFC 51.2, June 1995.
.LI "[RFC\ 68]"
A. Anderson, S. Cuti,
\*(qBPublic-Key Login for DCE 1.2 \*(EM Functional Specification\*(qE,
OSF-RFC 68.2, February 1996.
.LI "[RFC\ 73]"
R. Agarwalla,
\*(qBDFS Token Manager Redesign\*(qE,
OSF-RFC 73.0, October 1995.
.LI "[RFC\ 74]"
S. Berman,
\*(qBDFS Server Preferences\*(qE,
OSF-RFC 74.0, May 1995.
.LI "[RFC\ 75]"
B. Lewis,
\*(qBEpisode VM Integration\*(qE,
OSF-RFC 75.0, October 1995.
.LI "[RFC\ 76]"
D. Clevenger,
\*(qBMulti-Threading the Replication Server\*(qE,
OSF-RFC 76.0, May 1995.
.LI "[RFC\ 77]"
S. Moyer,
\*(qBSupporting Multi-homed DFS Servers\*(qE,
OSF-RFC 77.0, January 1996
.LI "[RFC\ 78]"
T. Anderson,
\*(qBEpisode Vnode Synchronization\*(qE,
OSF-RFC 78.0, January 1996.
.LI "[RFC\ 80]"
J. Wray,
\*(qBDCE 1.2 Certification API \*(EM Functional Specification\*(qE,
OSF-RFC 80.0, February 1995.
.LI "[RFC\ 84]"
J. Brezak,
\*(qBDFS Gateway Support of @sys and @host per NFS Client Mappings\*(qE,
OSF-RFC 84.0, July 1995.
.LI "[RFC\ 87]"
H. Yu, M. Burati,
\*(qBDCE Global Groups \*(EM Functional Specification\*(qE,
OSF-RFC 87.0, December 1995.
.LI "[RFC\ 88]"
J. Gait, A. Khale, J. Morin,
\*(qBA Jukebox Backup Subsystem for DFS\*(qE,
OSF-RFC 88.0, December 1995.
.LI "[RFC\ 90]"
C. Everhart,
\*(qBSecurity Enhancements for DCE DFS\*(qE,
OSF-RFC 90.0, February 1996.
.LI "[RFC\ 89]"
J. Gait,
\*(qBA Bulk Status RPC for DFS\*(qE,
OSF-RFC 89.0, December 1995.
.LI "[RFC\ 91]"
M. Burati, J. Pato,
\*(qBUser-to-User Authentication \*(EM Functional Specification\*(qE,
OSF-RFC 91.0, January 1996.
.LI "[RFC\ 92]"
S. Mullan,
\*(qBDCE Interoperability with Kerberos\*(qE,
OSF-RFC 92.0, January 1996.
.LI "[RFC\ 93]"
M. Burati,
\*(qBDCE 1.2 Security Scalability and Performance \*(EM Functional Specification\*(qE,
OSF-RFC 93.0, February 1996.
.LI "[RFC\ 94]"
M. Heroux,
\*(qBA Private Key Storage Server for DCE \*(EM Functional
Specification\*(qE,
OSF-RFC 94.0, April 1996.
.LI "[RFC\ 96]"
H. Hashimoto, T. Ito, T. Yamaura,
\*(qBDFA: Distributed File Access Manager \*(EM Functional Specification\*(qE,
OSF-RFC 96.0, March 1996.
.LI "[RFC\ Index]"
W. Tuvell,
\*(qBIndex to OSF-RFC's\*(qE,
OSF-RFC Index, \*(eBLatest version\*(eE.
.LE
.P
...\" =========================================================================
...\" Author's address goes here, as unnumbered heading, at end of doc.
...\" =========================================================================
.ne 3+5
.HU "AUTHOR'S ADDRESS"
.P
.tl $Rich Salz$$Internet email: rsalz@osf.org$
.tl $Open Software Foundation$$Telephone: +1-617-621-7253$
.tl $11 Cambridge Center$$$
.tl $Cambridge, MA 02142$$$
.tl $USA$$$
...\" =========================================================================
...\" Done!
...\" =========================================================================
