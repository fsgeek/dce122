...\" OSF-RFC 91.0
...\" DCE1.2 USER-TO-USER AUTHENTICATION FUNCTIONAL SPECIFICATION
...\" =========================================================================
...\"
...\" FORMATTING INSTRUCTIONS for this RFC (these may vary per RFC):
...\"       nroff -Tlpr rfc91.0.roff > rfc91.0.txt
...\"       troff -Tps rfc91.0.roff | <ps-post-processor> > rfc91.0.ps
...\" (Where "troff" means "device-independent troff", or "ditroff".)
...\"
...\" If troff is not supported for a given RFC, insert the following:
...\" .if t \{\
...\" .tm *** Troff not supported for this RFC.
...\" .ex \}
...\"
...\" =========================================================================
...\" rcs information $Revision: 1.3 $ $Date: 94/11/17 11:05:57 $
...\" Before printing your specification, be sure to check all items in <..>
...\" and all lines preceded by ...\"PUBLISH_CHECK
...\" - To get line numbers in your spec, uncomment the ".nm 1" line just before
...\"   the INTRODUCTION.
...\" - To get change marks in your spec, assume your spec is "fs.roff",
...\"   and you want the change marks relative to revision "1.5":
...\"   a. Comment out the ".de mc" line below
...\"   b. Check out version you want as the base:
...\"      % /usr/bin/co -p -r1.5 fs.roff >fs.roff.1.1
...\"   c. Create a change-marked roff source using "diffmk":
...\"      % /usr/bin/diffmk fs.roff.1.5 fs.roff fs.roff.mk
...\"   d. Run fs.roff.mk through nroff and print as usual
...\" - To format the roff source (diffmk'd or plain) into formatted ASCII
...\"   text using nroff:
...\"      % /usr/bin/nroff -Tlp fs.roff.mk > fs.txt
...\" - To print the formatted ASCII text double-sided:
...\"      % /usr/bin/lp -od -dljdcepcl fs.txt
...\" - To create a "shar" file suitable for emailing to remote reviewers:
...\"      % /usr/bin/shar -ZcCsv fs.txt > fs.txt.shar
...\" =========================================================================
...\" This template first sets a bunch of *roff options (authors/readers
...\" don't usually have to know about these).
...\" Then it defines some strings and macros, many of which deal with
...\" things that differ between nroff & troff (some of these may not be
...\" perfect, but they're better than nothing -- to do a really good
...\" job would require a real semantic markup language.
...\" Convention: "Begin/End" for strings, "Start/Finish" for macros.
...\" Strings:
...\"       \*(f!        - Footnote string (replaces \*F).
...\"       \*(hB, \*(hE - Page header/footer font (internal use).
...\"       \*(kB, \*(kE - Doc header font (internal use).
...\"       \*(qB, \*(qE - Quotations.
...\"       \*(iB, \*(iE - Italics/emphasis in primary font.
...\"       \*(bB, \*(bE - Bold font.
...\"       \*(lB, \*(lE - Literal font.
...\"       \*(jB, \*(jE - Italics/emphasis in literal font.
...\"       \*(nH        - Default note header string.
...\" Macros:
...\"       .aH      - Appendix header macro (uses number register \na).
...\"       .aL      - Automatic list macro (replaces .AL; uses num reg \ng).
...\"       .tS, .tF - Title start/finish (internal use).
...\"       .cS, .cF - Displays (no-fill) without indentation.
...\"       .dS, .dF - Displays (no-fill) with indentation.
...\"       .iS, .iF - Indented (fill) text.
...\"       .nS, .nF - Note.
...\" -------------------------------------------------------------------------
...\" First, set up some number registers here (instead of on command line),
...\" and include the "mm" macro package here (instead of on command line).
...\" -------------------------------------------------------------------------
.if n .nr L 66 \" Nroff page length = 66 lines.
.if t .nr L 11i \" Troff page length = 11 inches.
.if n .nr W 72 \" Nroff page width = 72 columns.
.if t .nr W 6.5i \" Troff page width = 6.5 inches.
.if n .nr O 3 \" Nroff page offset = 3 columns.
.if t .nr O 0.75i \" Troff page offset = 0.75 inches.
.nr N 2 \" No header on page 1.
.so /usr/lib/tmac/tmac.m \" Points to "mm" package, in /usr/lib/macros.
...\" -------------------------------------------------------------------------
...\" Next, twiddle the "mm" package to suit our preferred style.
...\" -------------------------------------------------------------------------
...\" Point size and font types.
...\" -------------------------------------------------------------------------
.if n .fp 1 R \" "Regular" font ONLY -- don't use any others in nroff.
.if t \{ .S 10 12 \" Point size = 10, vertical spacing = 12.
...\" Note: Some systems give different names to these fonts.
.fp 1 R \" Times roman.
.fp 2 I \" Times italic.
.fp 3 B \" Times bold.
.fp 4 BI \" Times bold italic.
.fp 5 CW \" Courier.
.fp 6 CI \" Courier oblique.
.fp 7 CB \" Courier bold.
.fp 8 CX \" Courier bold oblique.
.fp 9 H \" Helvetica.
.fp 10 HI \" Helvetica oblique.
.fp 11 HB \" Helvetica bold.
.fp 12 HX \" Helvetica bold oblique.
.fp 13 S \} \" Special symbol font -- normally only called automatically.
...\" -------------------------------------------------------------------------
...\" Headings; page header and footers; titles.
...\" -------------------------------------------------------------------------
.nr Ej 0 \" No eject for first-level headings.
.nr Hs 7 \" Heading space level = blank line after heading (all levels).
.nr Hb 7 \" Heading break level = break after heading (all levels).
.nr Hi 1 \" Post-heading indent = paragraph indent.
.nr Hc 0 \" Heading centering = none.
.if n .ds HF 1 1 1 1 1 1 1 \" Heading fonts = regular (no underlining).
.if t .ds HF 11 11 11 11 11 11 11 \" Heading fonts = Helvetica bold.
.if t .ds HP 0 0 0 0 0 0 0 \" Heading point sizes (= default).
.HM 1 1 1 1 1 1 1 \" Heading mark = arabic (all levels).
.nr Hu 1 \" Unnumbered heading level = 1 (see aH macro, below).
.de HX \" Beginning-of-heading processing.
.in 0 \" Left justify headings.
.ie     \\$2=0 .ds }0\" Null string heading mark for HU.
.el .ie \\$1=1 .ds }0 \\n(H1.\ \&\" Heading marks = dotted sections + 1 space.
.el .ie \\$1=2 .ds }0 \\n(H1.\\n(H2.\ \&
.el .ie \\$1=3 .ds }0 \\n(H1.\\n(H2.\\n(H3.\ \&
.el .ie \\$1=4 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\ \&
.el .ie \\$1=5 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\\n(H5.\ \&
.el .ie \\$1=6 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\\n(H5.\\n(H6.\ \&
.el .if \\$1=7 .ds }0 \\n(H1.\\n(H2.\\n(H3.\\n(H4.\\n(H5.\\n(H6.\\n(H7.\ \&
..
.de HZ \" End-of-heading processing.
.if n .in 3 \" Indent body of doc by 3 columns in nroff.
.if t .in 0 \" Don't indent in troff.
..
.if n .ds hB \&\" Page header/footer font begin in nroff.
.if t .ds hB \f9\" Page header/footer font begin in troff.
.if n .ds hE \&\" Page header/footer font end in nroff.
.if t .ds hE \fP\" Page header/footer font end in troff.
.if n .ds kB \&\" Doc header font begin in nroff.
.if t .ds kB \f(11\" Doc header font begin in troff.
.if n .ds kE \&\" Doc header font end in nroff.
.if t .ds kE \f1\" Doc header font end in troff.
.de tS \" Title start.
.SP 2 \" 2 blank lines.
.ce 99 \" Center (each line of) title.
.if t \{ .ft 11 \" Bold helvetica.
.S +2 D \} \" Bigger point size.
..
.de tF \" Title finish.
.ce \" Turn off centering.
.SP 1 \" 1 blank line.
.if t \{ .ft 1 \" Return to regular font.
.S P P \} \" Return to regular point size.
..
...\" -------------------------------------------------------------------------
...\" Special Appendix heading macro, .aH.
...\" -------------------------------------------------------------------------
.nr a 0 1 \" Appendix number.
.af a A \" Assign format upper-case alpabetic to number register a.
.de aH \" Appendix heading macro.
.if \\na=0 \{ .nr H1 0 \" Reset H1 to 0.
.HM A 1 1 1 1 1 1 \} \" Heading mark = Upper case alphabetic + arabics.
.HU "APPENDIX \\n+a. \\$1"
..
...\" -------------------------------------------------------------------------
...\" Paragraph stuff.
...\" -------------------------------------------------------------------------
.nr Pt 0 \" Paragraph type = left-justified.
.nr Pi 0 \" Paragraph indent = 0.
.nr Ps 1 \" Paragraph spacing = 1 blank space.
...\" -------------------------------------------------------------------------
...\" Special list macro, .aL (replaces .AL, for all levels).
...\" This should be used for almost all lists (including ".LI "\ "").
...\" The only exception is variable lists (.VL, indented by multiples of 6).
...\" -------------------------------------------------------------------------
.de aL
.nr g \\n(:g
...\" In-line lists should be numbered (by hand): (1), (2), (3), ...
.ie     \\ng=0 .LB 6 0 1 3 a \" 1st level: (a), (b), (c), ...
.el .ie \\ng=1 .LB 6 0 1 3 i \" 2nd level: (i), (ii), (iii), ...
.el .ie \\ng=2 .LB 6 0 1 4 a \" 3rd level: [a], [b], [c], ...
.el .ie \\ng=3 .LB 6 0 1 4 i \" 4th level: [i], [ii], [iii], ...
.el .ie \\ng=4 .LB 6 0 1 6 a \" 5th level: {a}, {b}, {c}, ...
.el .if \\ng=5 .LB 6 0 1 6 i \" 6th level: {i}, {ii}, {iii}, ...
..
.nr Ls 6 \" Blank lines between all list items, by default (but adjustable).
...\" -------------------------------------------------------------------------
...\" Footnote stuff; special footnote string, \*(f!.
...\" -------------------------------------------------------------------------
.if n .ds f! [\\n+(:p]\" Footnote string (replaces \*F in nroff).
.if t .ds f! \\*F\" Footnote string (same as \*F in troff).
.if n .FD 6 \" Footnotes not hyphenated or indented, label left justified.
.if t .FD 5 \" Footnotes hyphenated, not indented, label left justified.
.nr Fs 1 \" 1 blank line between footnotes.
...\" -------------------------------------------------------------------------
...\" Line adjustment stuff.
...\" -------------------------------------------------------------------------
.if n .nr Hy 0 \" No hyphenation in nroff.
.if t .nr Hy 1 \" Hyphenate in troff.
.if n .SA 0 \" Set adjust: left margin only in nroff.
.if t .SA 1 \" Set adjust: left and right margins in troff.
...\" -------------------------------------------------------------------------
...\" Miscellaneous stuff.
...\" -------------------------------------------------------------------------
.ta \" No tabs by default -- set them up by hand as needed.
.nr Si \n(Ls \" Default indent for .DS display macro = 6 (use in troff only).
...\" -------------------------------------------------------------------------
...\" Displays.
...\" -------------------------------------------------------------------------
.de cS \" Display start: no-fill, literal font, no indentation.
.P
.nf \" No fill mode.
.if t .ft 5 \" Constant width font in troff.
..
...\" Within .cS, ".ne N"'s can be added by hand, but should be minimized.
.de cF \" Display finish.
.if t .ft 1 \" Back to standard font in troff.
.fi \" Fill mode.
.P
..
.de dS \" Display start: no-fill, literal font, with indentation.
.P
.aL \" Use .aL macro for consistent indentation.
.nf \" No fill mode.
.LI "\ " \" List item will no (visible) marker.
.if t .ft 5 \" Constant width font in troff.
..
...\" Within .dS, ".ne N"'s can be added by hand, but should be minimized.
.de dF \" Display finish.
.if t .ft 1 \" Back to standard font in troff.
.fi \" Fill mode.
.LE
.P
..
.de iS \" Indent start: fill, regular font, with indentation.
.P
.aL
.LI "\ "
..
.de iF \" Indent finish.
.LE
.P
..
.ds nH NOTE\"Default note header string -- can be changed by author.
.de nS \" Note start: fill, italics font, with indentation.
.P
.aL \" Use .aL macro for consistent indentation.
.LI "\ " \" List item will no (visible) marker.
.if t .ft 2 \" Italics font in troff, and reverse roman <--> italic fonts:
.if n .ds iB _\" Italics/emphasis primary font begin in nroff.
.if t .ds iB \f1\" Italics/emphasis primary font begin in troff.
.if n .ds iE _\" Italics/emphasis primary font end in nroff.
.if t .ds iE \fP\" Italics/emphasis primary font end in troff.
.ie \\n(.$=0 \\*(nH:\" Default header string if none supplied by author.
.el \\$1:\" Header string supplied by author as argument to .nS macro.
..
.de nF \" Note finish.
.if t .ft 1 \" Back to standard font in troff, and remap font macros:
.if n .ds iB _\" Italics/emphasis primary font begin in nroff.
.if t .ds iB \f2\" Italics/emphasis primary font begin in troff.
.if n .ds iE _\" Italics/emphasis primary font end in nroff.
.if t .ds iE \fP\" Italics/emphasis primary font end in troff.
.LE
.P
..
...\" -------------------------------------------------------------------------
...\" Quotation marks and font toggles.
...\" -------------------------------------------------------------------------
.if n .ds qB \&"\" Quotation begin in nroff.
.if t .ds qB ``\" Quotation begin in troff.
.if n .ds qE \&"\" Quotation end in nroff.
.if t .ds qE ''\" Quotation end in troff.
.if n .ds iB _\" Italics/emphasis primary font begin in nroff.
.if t .ds iB \f2\" Italics/emphasis primary font begin in troff.
.if n .ds iE _\" Italics/emphasis primary font end in nroff.
.if t .ds iE \fP\" Italics/emphasis primary font end in troff.
.if n .ds bB *\" Bold font begin in nroff.
.if t .ds bB \f3\" Bold font begin in troff.
.if n .ds bE *\" Bold font end in nroff.
.if t .ds bE \fP\" Bold font end in troff.
.if n .ds lB `\" Literal font begin in nroff.
.if t .ds lB \f5\" Literal font begin in troff.
.if n .ds lE '\" Literal font end in nroff.
.if t .ds lE \fP\" Literal font end in troff.
.if n .ds jB <\" Italics/emphasis literal font begin in nroff.
.if t .ds jB \fP\f6\" Italics/emphasis literal font begin in troff.
.if n .ds jE >\" Italics/emphasis literal font end in nroff.
.if t .ds jE \fP\f5\" Italics/emphasis literal font end in troff.
...\" -------------------------------------------------------------------------
...\" No diffmarks by default, i.e., define .mc to be null.
...\" (Comment out this null definition to turn diffmarking on.)
...\" -------------------------------------------------------------------------
...\"PUBLISH_CHECK
.de mc
..
...\" =========================================================================
...\" (The major/minor number is assigned by the OSF-RFC Editor.)
...\" =========================================================================
...\"PUBLISH_CHECK
.ND "January 1996" \" Date must be hard-coded.
...\"PUBLISH_CHECK
.PH "$\*(hBOSF-RFC 91.0$User-to-User Authentication$\\\\*(DT\*(hE$"
...\"PUBLISH_CHECK
.PF "$\*(hBBurati, Pato$$Page \\\\n%\*(hE$" \" Final version.
...\"PUBLISH_CHECK
...\".PF "$\*(hBBurati, Pato$DRAFT #3$Page \\\\n%\*(hE$" \" Draft version.
...\"
...\" Following are the first printed lines (header info) of the document:
...\"
\&\" Force top-of-first-page trap to position the following info correctly.
...\"PUBLISH_CHECK
.tl $\*(kBOpen Software Foundation$$M. Burati (Hewlett Packard)\*(kE$
...\"PUBLISH_CHECK
.tl $\*(kBRequest For Comments: 91.0$$J. Pato (Hewlett Packard)\*(kE$
.tl $\*(kB\*(DT$$\*(kE$
...\"PUBLISH_CHECK
.tS \" Title, in all capitals (can span multiple lines):
USER-TO-USER AUTHENTICATION \*(EM
FUNCTIONAL SPECIFICATION
.tF
...\" =========================================================================
...\" Now, the actual body of the document!!
...\" Heading capitalization style:
...\"     1st level: CAPITALIZE ALL WORDS
...\"     2nd level: Capitalize Initial Letters of All (Significant) Words
...\"     3rd-7th level: Capitalize first letter of first word only
...\" =========================================================================
...\" -------------------------------------------------------------------------
...\" No line-numbers by default
...\" (Uncomment the .nm 1 line to turn line-numbering on.)
...\" -------------------------------------------------------------------------
...\"PUBLISH_CHECK
...\".nm 1 \" Do not page number the final draft
.P
.H 1 "INTRODUCTION" \" Always start with an introduction section.
.P
The DCE 1.2.2 user-to-user authentication feature (see [RFC
63.1]) addresses the following requirement:\*(f!
.FS
DCE 1.2 TPC item S7, referring to OSF-RFC 8.1 item D3.
.FE
.P
.iS
The goal of this requirement is to enable applications that do
not have access to a principal's long term key to be the
receivers of a protected RPC.  Applications that are clients
already have this insulation from access to the user's long-term
key.  These applications only need access to the login context
for the user.  Servers however, need current access to the key.
.iF
.P
When the concept of \*(qBserver\*(qE is associated with a long
running system resource like the name server or the security
server, it seems natural that the server is running on a machine
with access to the long term key to the identity of that server.
If for no other reason, the server is not normally associated
with a human user, but rather with a pseudo-user corresponding
to the system service.
.P
This model fits well with the type of core DCE services
distributed by the OSF today.  This does not however, map well
onto all application domains.  In particular, some applications
need a \*(qBmessaging\*(qE model.  While the model may be
achieved by using RPCs, it is still necessary for what is
logically the application's \*(qBclient\*(qE code to play the
role of a \*(qBserver\*(qE.  This client code performs an RPC to
the system service and the output parameters to the RPC indicate
that some activity has been queued.  The client code then enters
a wait state to get the real reply to the operation (a
callback).  This kind of messaging model can be found in many
object oriented environments as well as some existing
communication protocols.
.P
Using today's security model, there are two ways to accomplish
this form of asynchronous activity: The application can force
the user to make their long term key available (either in a
keytab file {forcing the key to be stored in the clear on the
local machine} \*(EM or via an application provided key acquisition
function {requiring that the user type their key to an arbitrary
application}); the application does not perform a protected RPC
operation for the callback, but simply uses an unprotected RPC
to induce the client code to call the server using protected RPC
to retrieve the data.  Neither of these two solutions are
desirable \*(EM the first exposes the user's long term key to
arbitrary applications and potentially to clear-text storage on
the machine, and the second contorts the application into an
extra communication exchange.
.P
Proposal: It should be possible to provide server applications
with the same sort of insulation that is available for client
applications.  In particular, it should be possible to direct a
protected RPC to an application that has access to the login
context for its principal, rather than just access to the
long-term key for that principal.  This proposal is a little
more narrow than the way the requirement is currently worded
\*(EM it would require that authentication be possible if the
login context is available to the \*(qBserver\*(qE code, while
the original statement of the requirement would have admitted
other solutions.  This narrower scope however, may be more
understandable and covers the needs of many asynchronous or
object oriented environments.
.P
It should also be noted that this requirement can be met using
the existing Kerberos V5 protocol.  Kerberos allows
authentication to be accomplished using a \*(qBuser-to-user\*(qE
protocol that involves communicating with the TGS (Ticket
Granting Service) with two TGTs (Ticket Granting Tickets).  The
primary change to DCE would be to detect that this protocol
should be used rather than the conventional use of the TGS.
.P
...\"PUBLISH_CHECK
...\".H 2 "Changes Since Last Publication"
...\".P
...\"If this is a revision of a previous version, give a list of changes.
.P
.H 1 "TARGET"
.P
...\"Indications of for whom this technology is being built
...\"and how it is supposed to be used.
The target audience of this functionality is those servers
(application or otherwise) that have a need to receive
authenticated RPCs, but cannot for some reason have access to
the server principal's long term key.
.P
.H 1 "GOALS AND NON-GOALS"
.P
...\"Define the scope of the technology.
.aL
.LI
It is a goal of this work to make use of the Kerberos v5
User-To-User mechanisms (\*(lBAP_OPTS_USE_SESSION_SKEY\*(lE)
already existing in the base source code.
.LI
It is a goal of this work to allow servers to register either
using the existing KRB5 server-key ticket protocol, or the
User-To-User protocol, but not both simultaneously.
.LI
It is a goal/prerequisite to get the KRB5 based User-To-User
protocol working with the DCE source base.  It is not a goal to
merge the Kerberos v5 base forward to a newer beta level.  Bug
fixes may be taken from a newer beta level on an as-needed
basis.
.LI
It is not a goal of this work to allow current DCE1.0.x/DCE1.1
based clients to make authenticated RPCs to servers registering
their identity with this new functionality.
.LE
.P
.H 1 "TERMINOLOGY"
.P
...\"Definitions of all \*(qBnew\*(qE terms used within this document.
...\"Use a list like the following:
.P
.aL
...\"PUBLISH_CHECK
.LI
\*(bBKDC\*(bE \*(EM
Kerberos Distribution Center.
.LI
\*(bBTKT\*(bE \*(EM
Kerberos based Ticket.
.LI
\*(bBkeyproc\*(bE \*(EM
Callback function provided by a server with a Kerberos specified signature,
that retrieves the key to be used when decrypting tickets.
.LE
.P
.H 1 "REQUIREMENTS"
.P
...\"Discusses areas such as security, portability, and internationalization
...\"that must be addressed by this technology.  This could be a list, or
...\"just a general discussion, as appropriate.
.aL
.LI
This functionality must not break the existing DCE Auth RPC
protocols.
.LI
The default server authentication protocol for DCE
core services must not change as a result of this work.
.LE
.P
.H 1 "FUNCTIONAL DEFINITION"
.P
...\"Specifies the functional characteristics and features of the component
...\"or subsystem.  Normally, this will be the most substantial section of
...\"the document.
Servers without access to their long term key (e.g., keytable)
will be able to register their identity based on a DCE login
context, with the new RPC API routine
\*(lBrpc_server_register_auth_ident()\*(lE.
.P
New clients will be using a \*(lBlibdce\*(lE that will detect
when a server is using this new protocol.  The client side
runtime will receive the server's TGT and will pass this STGT
along on the TKT request, using
\*(lBAP_OPTS_USE_SESSION_SKEY\*(lE option.  Then:
.P
.iS
\*(qBThe KDC will then decrypt the STGT using the long term key
for the specified server and verify that it is a valid TGT.  The
session key from the STGT will then be used to encrypt the new
ticket that is issued, instead of using the key of the server
for which the new ticket will be issued.\*(qE  ([RFC 1510],
section 3.3.3.)
.iF
.P
The server side AUTH-RPC runtime upon receiving this auth
information will call the Kerberos read request routine
(\*(lBkrb5_rd_req()\*(lE) with a keyproc that extracts the TGT
session key from the server's credentials, instead of the
current keytable based keyproc routine.
.P
.H 1 "DATA STRUCTURES"
.P
...\"Details any data structures that are to be exposed to the user of this
...\"component/technology.
The following flag will be added to the
\*(lBsec_rgy_acct_auth_flags_t\*(lE definitions in
\*(lBsecurity/idl/rgynbase.idl\*(lE:
.P
.dS
.ne 5
/*
 * allow and enforce server authentication via the
 * user-to-user protocol
 */
const unsigned32 sec_rgy_acct_auth_user_to_user = 0x40;
.dF
.P
This flag must be set on a server principal account, in order
for a server running as that identity, to successfully register
auth info with the RPC runtime using
\*(lBrpc_server_register_auth_ident()\*(lE.  With this flag set
on a server principal, that identity will no longer be able to
use the keytable based server registration function
\*(lBrpc_server_register_auth_info()\*(lE.
.P
The Kerberos KDC also requires that the flag
\*(lBsec_rgy_acct_auth_dup_skey\*(lE be set on a server
principal to which user-to-user type tickets will be granted.
Setting this flag is sufficient to allow Kerberos only
clients/servers to make use of user-to-user functionality.  Both
this flag and the above newly defined flag must be set on a
principal to allow the KDC to generate the tickets and for DCE
to allow/enforce usage of user-to-user functionality by this
server principal.
.P
.H 1 "USER INTERFACES"
.P
The registry administration tool (\*(lBdcecp\*(lE) will need to
be updated to include setting/viewing of the new flag described
in section 7.
.P
New option for \*(lBdcecp account\*(lE commands:
.P
.iS
\*(lB-usertouser\*(lE \*(EM Server may only use User-to-User
authentication.
.iF
.P
This will be just another yes/no flag for display purposes, and
will default to no/unset for account creation.
.P
There is no plan or commitment to provide functionality allowing
the setting/viewing of this new flag with \*(lBrgy_edit\*(lE.
.P
.H 1 "API'S"
.P
...\"Details the interfaces to the modules that will be available to users of
...\"this component/subsystem.
The RPC interface (\*(lBrpc.idl\*(lE) currently defines
\*(lBrpc_server_register_auth_info()\*(lE for server registration
with the runtime.  This interface will be enhanced with the new
User-To-User server registration routine:
.P
.dS
.ne 6
rpc_server_register_auth_ident(
    [in]    unsigned_char_p_t           server_princ_name,
    [in]    unsigned32                  auth_svc,
    [in]    rpc_auth_identity_handle_t  identity,
    [out]   unsigned32                  *st
);
.dF
.P
.H 1 "REMOTE INTERFACES"
.P
...\"In a client/server model, a description of the services which may be
...\"invoked across network interfaces.  In particular, any RPC interfaces
...\"should be specified by their IDL/ACF interface descriptions.  Remote
...\"interfaces not described by IDL should provide detailed definition
...\"including an octet-level description of the wire format and a protocol
...\"state machine.
The following addition to \*(lBsrc/rpc/sys_idl/mgmt.idl\*(lE
will allow the client side to fetch both the server name and TGT
data, for a UtoU registered server, in one round trip.
.P
.dS
.ne 3
/*
 * R P C _ _ M G M T _ I N Q _ S V R _ N A M E _ T G T
 */

.ne 4
[idempotent]
void rpc__mgmt_inq_svr_name_tgt
(
    [in]        handle_t                binding_handle,
    [in]        unsigned32              authn_proto,
    [in]        unsigned32              princ_name_size,
    [in]        unsigned32              tkt_size_avail,
    [out, string, size_is(princ_name_size)]
                char                    princ_name[],
    [out]       unsigned32              *tkt_length,
    [out, size_is(tkt_size_avail), length_is(*tkt_length)]
                char                    *data,
.ne 2
    [out]       error_status_t          *status
);
.dF
.P
.H 1 "MANAGEMENT INTERFACES"
.P
...\"Details how the component is configured, started, monitored, stopped,
...\"etc.  Should specify all user interfaces, local API's, and remote
...\"interfaces pertinent to management.  This section should also describe
...\"how the component will modify the existing \*(lBdce_config\*(lE
...\"management tool.
N/A.
.P
.H 1 "RESTRICTIONS AND LIMITATIONS"
.P
...\"Notes the restrictions and limitations of this technology, including
...\"system resource consumption limits.
.aL
.LI
The functionality delivered as part of this work will not allow
a server to register using both the old protocol and the new
(user2user) protocol, even if registering multiple server
names/identities.  It should not prevent such functionality in
the future, but makes no claims to support it at this time.
.LI
This functionality does not provide the capability to register
more than one server-name/identity pair from a single server.
.LE
.P
.H 1 "OTHER DEPENDENCIES"
.P
None known at this time.
.P
.H 1 "COMPATIBILITY"
.P
...\"Details the compatibility of this design with past designs/work.  There
...\"should be explicit descriptions of how this component will diverge from
...\"existing DCE 1.0/1.1 implementations.
.P
We have not yet finalized the best way to inform older clients
that this server cannot handle the authentication mechanism they
support.  At this time, the best proposal we can make is to just
return the already defined Kerberos error code
\*(lBKRB5KRB_AP_ERR_METHOD\*(lE (\*(qBAlternative authentication
method required\*(qE).  By using an existing error code, older
clients will be able to translate that code into an error
message using existing message catalogs.
.P
.H 1 "STANDARDS"
.P
...\"Notes the standards being followed/used by this component/subsystem.
Kerberos Version 5, [RFC 1510].  See also [TM-424].
.P
.H 1 "OPEN ISSUES"
...\"PUBLISH_CHECK
.P
There are still issues being investigated, regarding credential
refresh and its impact on this functionality.
.P
...\" =========================================================================
...\" Appendices go here, using aH macros.
...\" =========================================================================
...\" .P
...\" .aH "IDL Files"
...\" .P
...\"<Appendix contents go here.>
...\" .P
...\" =========================================================================
...\" References go here, as an unnumbered heading.
...\" =========================================================================
.P
.HU "REFERENCES"
.P
...\"List relevant documents, in a list like the following:
.P
.VL 12 0
...\"PUBLISH_CHECK
.LI "[RFC\ 63.1]"
R. Salz, \*(qBDCE1.2 Contents Overview\*(qE, May 1995.
.LI "[RFC\ 1510]"
J. Kohl, C. Neuman, \*(qBThe Kerberos Network Authentication
Service (V5)\*(qE, September 1993.
.LI "[TM-424]"
D. Davis, R. Swick, \*(qBWorkstation Services and Kerberos
Authentication at Project Athena\*(qE, Technical Memorandum
TM-424, MIT LCS, February 1990.
.LE
.P
...\" =========================================================================
...\" Author's address goes here, as unnumbered heading, at end of doc.
...\" =========================================================================
.P
.ne 3+5
.HU "AUTHORS' ADDRESSES"
.P
...\"PUBLISH_CHECK
.tl $Michael Burati$$Internet email: burati@apollo.hp.com$
.tl $Hewlett Packard$$Telephone: +1-508-436-4351$
.tl $300 Apollo Drive$$$
.tl $Chelmsford, MA 01824$$$
.tl $USA$$$
.P
.ne 5
...\"PUBLISH_CHECK
.tl $Joe Pato$$Internet email: pato@apollo.hp.com$
.tl $Hewlett Packard$$Telephone: +1-508-436-4350$
.tl $300 Apollo Drive$$$
.tl $Chelmsford, MA 01824$$$
.tl $USA$$$
...\" =========================================================================
...\" Done!
...\" =========================================================================
